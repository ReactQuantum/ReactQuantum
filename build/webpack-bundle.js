!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=52)}([function(e,t,n){"use strict";e.exports=n(21)},function(e,t,n){"use strict";(function(e){var r=n(7),o=n.n(r),a=n(17),i=n.n(a),u=n(0),l=n.n(u),s=n(18),c=n(4),f=n(8),p=(n(2),n(3),n(20)),d=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},v=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},w=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},x=function(e){return"object"===(void 0===e?"undefined":h(e))&&e.constructor===Object},_=Object.freeze([]),E=Object.freeze({});function k(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function C(e){return e&&"string"==typeof e.styledComponentId}var O=void 0!==e&&e.env.SC_ATTR||"data-styled",M="undefined"!=typeof window&&"HTMLElement"in window,T="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1;var j=function(e){function t(n){y(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];var i=w(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#"+n+" for more information. "+(o?"Additional arguments: "+o.join(", "):"")));return w(i)}return g(t,e),t}(Error),P=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,A=function(e){var t=""+(e||""),n=[];return t.replace(P,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,a=e.matchIndex,i=n[r+1];return{componentId:o,cssFromDOM:i?t.slice(a,i.matchIndex):t.slice(a)}})},N=/^\s*\/\/.*$/gm,R=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),D=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),I=[],L=function(e){if(-2===e){var t=I;return I=[],t}},z=i()(function(e){I.push(e)}),F=void 0,U=void 0,B=void 0,q=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(U)&&n.slice(t-U.length,t)!==U?"."+F:e};D.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(U)>0&&(n[0]=n[0].replace(B,q))},z,L]),R.use([z,L]);function V(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(N,""),a=t&&n?n+" "+t+" { "+o+" }":o;return F=r,U=t,B=new RegExp("\\"+U+"\\b","g"),D(n||!t?"":t,a)}var W=function(){return n.nc},H=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},$=function(e,t){e[t]=Object.create(null)},Y=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},K=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},G=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new j(10)},J=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},Q=function(e){return"\n/* sc-component-id: "+e+" */\n"},X=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},Z=function(e,t){return function(n){var r=W();return"<style "+[r&&'nonce="'+r+'"',O+'="'+K(t)+'"','data-styled-version="4.1.3"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},ee=function(e,t){return function(){var n,r=((n={})[O]=K(t),n["data-styled-version"]="4.1.3",n),o=W();return o&&(r.nonce=o),l.a.createElement("style",m({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},te=function(e){return function(){return Object.keys(e)}},ne=function(e){return document.createTextNode(Q(e))},re=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,a=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},i=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=Q(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=m({},e[n]);return t}(r),n=Object.create(null);for(var a in o)n[a]=[o[a][0]];return e(t,n)},css:i,getIds:te(o),hasNameForId:Y(r),insertMarker:a,insertRules:function(e,t,n){a(e)[0]+=t.join(" "),H(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",$(r,e))},sealed:!1,styleTag:null,toElement:ee(i,r),toHTML:Z(i,r)}},oe=function(e,t,n,r,o){if(M&&!n){var a=function(e,t,n){var r=document.createElement("style");r.setAttribute(O,""),r.setAttribute("data-styled-version","4.1.3");var o=W();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new j(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return T?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,a=!1,i=function(t){var o=r[t];return void 0!==o?o:(r[t]=ne(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},u=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new j(5)},css:u,getIds:te(r),hasNameForId:Y(n),insertMarker:i,insertRules:function(e,r,u){for(var l=i(e),s=[],c=r.length,f=0;f<c;f+=1){var p=r[f],d=o;if(d&&-1!==p.indexOf("@import"))s.push(p);else{d=!1;var h=f===c-1?"":" ";l.appendData(""+p+h)}}H(n,e,u),o&&s.length>0&&(a=!0,t().insertRules(e+"-import",s))},removeRules:function(i){var u=r[i];if(void 0!==u){var l=ne(i);e.replaceChild(l,u),r[i]=l,$(n,i),o&&a&&t().removeRules(i+"-import")}},sealed:!1,styleTag:e,toElement:ee(u,n),toHTML:Z(u,n)}}(a,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],a=void 0!==t,i=!1,u=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),$(n,e),r[e])},l=function(){var t=G(e).cssRules,n="";for(var a in r){n+=Q(a);for(var i=r[a],u=X(o,i),l=u-o[i];l<u;l+=1){var s=t[l];void 0!==s&&(n+=s.cssText)}}return n};return{clone:function(){throw new j(5)},css:l,getIds:te(r),hasNameForId:Y(n),insertMarker:u,insertRules:function(r,l,s){for(var c=u(r),f=G(e),p=X(o,c),d=0,h=[],y=l.length,v=0;v<y;v+=1){var m=l[v],g=a;g&&-1!==m.indexOf("@import")?h.push(m):J(f,m,p+d)&&(g=!1,d+=1)}a&&h.length>0&&(i=!0,t().insertRules(r+"-import",h)),o[c]+=d,H(n,r,s)},removeRules:function(u){var l=r[u];if(void 0!==l){var s=o[l];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(G(e),X(o,l)-1,s),o[l]=0,$(n,u),a&&i&&t().removeRules(u+"-import")}},sealed:!1,styleTag:e,toElement:ee(l,n),toHTML:Z(l,n)}}(a,o)}return re()},ae=/\s+/,ie=void 0;ie=M?T?40:1e3:-1;var ue=0,le=void 0,se=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:M?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];y(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},ue+=1,this.id=ue,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!M||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+O+'][data-styled-version="4.1.3"]'),o=r.length;if(!o)return this;for(var a=0;a<o;a+=1){var i=r[a];n||(n=!!i.getAttribute("data-styled-streamed"));for(var u,l=(i.getAttribute(O)||"").trim().split(ae),s=l.length,c=0;c<s;c+=1)u=l[c],this.rehydratedNames[u]=!0;t.push.apply(t,A(i.textContent)),e.push(i)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var a=n[r],i=a.componentId,u=a.cssFromDOM,l=R("",u);e.insertRules(i,l)}for(var s=0,c=t.length;s<c;s+=1){var f=t[s];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ie-f),this.tags.push(p);for(var d=0;d<f;d+=1)this.tagMap[t[d].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];le=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=m({},this.rehydratedNames),t.deferred=m({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ie,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var a=this.getTagForId(e);if(void 0!==this.deferred[e]){var i=this.deferred[e].concat(t);a.insertRules(e,i,n),this.deferred[e]=void 0}else a.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(u.cloneElement)(t.toElement(),{key:r})})},v(e,null,[{key:"master",get:function(){return le||(le=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),ce=function(){function e(t,n){var r=this;y(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new j(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),fe=/([A-Z])/g,pe=/^ms-/;var de=function(e){return null==e||!1===e||""===e},he=function e(t,n){var r=Object.keys(t).filter(function(e){return!de(t[e])}).map(function(n){return x(t[n])?e(t[n],n):n.replace(fe,"-$1").toLowerCase().replace(pe,"-ms-")+": "+(r=n,null==(o=t[n])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in s.a?String(o).trim():o+"px")+";";var r,o}).join(" ");return n?n+" {\n  "+r+"\n}":r};function ye(e,t,n){if(Array.isArray(e)){for(var r,o=[],a=0,i=e.length;a<i;a+=1)null!==(r=ye(e[a],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}if(de(e))return null;if(C(e))return"."+e.styledComponentId;if(k(e)){if(t){var u=!1;try{Object(c.isElement)(new e(t))&&(u=!0)}catch(e){}if(u)throw new j(13,S(e));return ye(e(t),t,n)}return e}return e instanceof ce?n?(e.inject(n),e.getName()):e:x(e)?he(e):e.toString()}function ve(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return k(e)||x(e)?ye(d(_,[e].concat(n))):ye(d(e,n))}function me(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var ge=52,be=function(e){return String.fromCharCode(e+(e>25?39:97))};function we(e){var t="",n=void 0;for(n=e;n>ge;n=Math.floor(n/ge))t=be(n%ge)+t;return be(n%ge)+t}function xe(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!xe(r,t))return!1;if(k(r)&&!C(r))return!1}return!t.some(function(e){return k(e)||function(e){for(var t in e)if(k(e[t]))return!0;return!1}(e)})}var _e,Ee=!1,ke=function(e){return we(me(e))},Se=function(){function e(t,n,r){y(this,e),this.rules=t,this.isStatic=!Ee&&xe(t,n),this.componentId=r,se.master.hasId(r)||se.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(M&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var a=ye(this.rules,e,t),i=ke(this.componentId+a.join(""));return t.hasNameForId(r,i)||t.inject(this.componentId,V(a,"."+i,void 0,r),i),this.lastClassName=i,i},e.generateName=function(e){return ke(e)},e}(),Ce=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Oe=/[[\].#*$><+~=|^:(),"'`-]+/g,Me=/(^-|-$)/g;function Te(e){return e.replace(Oe,"-").replace(Me,"")}function je(e){return"string"==typeof e&&!0}var Pe={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Ae={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Ne=((_e={})[c.ForwardRef]={$$typeof:!0,render:!0},_e),Re=Object.defineProperty,De=Object.getOwnPropertyNames,Ie=Object.getOwnPropertySymbols,Le=void 0===Ie?function(){return[]}:Ie,ze=Object.getOwnPropertyDescriptor,Fe=Object.getPrototypeOf,Ue=Object.prototype,Be=Array.prototype;function qe(e,t,n){if("string"!=typeof t){var r=Fe(t);r&&r!==Ue&&qe(e,r,n);for(var o=Be.concat(De(t),Le(t)),a=Ne[e.$$typeof]||Pe,i=Ne[t.$$typeof]||Pe,u=o.length,l=void 0,s=void 0;u--;)if(s=o[u],!(Ae[s]||n&&n[s]||i&&i[s]||a&&a[s])&&(l=ze(t,s)))try{Re(e,s,l)}catch(e){}return e}return e}var Ve=Object(u.createContext)(),We=Ve.Consumer,He=(function(e){function t(n){y(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}g(t,e),t.prototype.render=function(){return this.props.children?l.a.createElement(Ve.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return l.a.createElement(Ve.Provider,{value:t},l.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(k(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":h(e)))throw new j(8);return m({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(u.Component),function(){function e(){y(this,e),this.masterSheet=se.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new j(2);return l.a.createElement(Ye,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new j(3)}}(),Object(u.createContext)()),$e=He.Consumer,Ye=function(e){function t(n){y(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return g(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new se(t);throw new j(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return l.a.createElement(He.Provider,{value:this.getContext(n,r)},t)},t}(u.Component),Ke=(new Set,{});var Ge=function(e){function t(){y(this,t);var n=w(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return g(t,e),t.prototype.render=function(){return l.a.createElement($e,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:se.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():l.a.createElement(We,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),a=t.styledComponentId,i=t.target,l=void 0;l=n.isStatic?this.generateAndInjectStyles(E,this.props):void 0!==e?this.generateAndInjectStyles(Ce(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||E,this.props);var s=this.props.as||this.attrs.as||i,c=je(s),f={},d=m({},this.attrs,this.props),h=void 0;for(h in d)"forwardedComponent"!==h&&"as"!==h&&("forwardedRef"===h?f.ref=d[h]:c&&!Object(p.a)(h)||(f[h]=d[h]));return this.props.style&&this.attrs.style&&(f.style=m({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(o,this.props.className,a,this.attrs.className,l).filter(Boolean).join(" "),Object(u.createElement)(s,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=m({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,a=!1,i=void 0,u=void 0;for(u in k(n)&&(n=n(o),a=!0),n)i=n[u],a||!k(i)||(t=i)&&t.prototype&&t.prototype.isReactComponent||C(i)||(i=i(o)),r.attrs[u]=i,o[u]=i}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(E,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(u.Component);function Je(e,t,n){var r=C(e),o=!je(e),a=t.displayName,i=void 0===a?function(e){return je(e)?"styled."+e:"Styled("+S(e)+")"}(e):a,u=t.componentId,s=void 0===u?function(e,t,n){var r="string"!=typeof t?"sc":Te(t),o=(Ke[r]||0)+1;Ke[r]=o;var a=r+"-"+e.generateName(r+o);return n?n+"-"+a:a}(Se,t.displayName,t.parentComponentId):u,c=t.ParentComponent,f=void 0===c?Ge:c,p=t.attrs,d=void 0===p?_:p,h=t.displayName&&t.componentId?Te(t.displayName)+"-"+t.componentId:t.componentId||s,y=r&&e.attrs?Array.prototype.concat(e.attrs,d).filter(Boolean):d,v=new Se(r?e.componentStyle.rules.concat(n):n,y,h),g=l.a.forwardRef(function(e,t){return l.a.createElement(f,m({},e,{forwardedComponent:g,forwardedRef:t}))});return g.attrs=y,g.componentStyle=v,g.displayName=i,g.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):_,g.styledComponentId=h,g.target=r?e.target:e,g.withComponent=function(e){var r=t.componentId,o=b(t,["componentId"]),a=r&&r+"-"+(je(e)?e:Te(S(e)));return Je(e,m({},o,{attrs:y,componentId:a,ParentComponent:f}),n)},g.toString=function(){return"."+g.styledComponentId},o&&qe(g,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),g}var Qe=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;if(!Object(c.isValidElementType)(n))throw new j(1,String(n));var o=function(){return t(n,r,ve.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,m({},r,o))},o.attrs=function(o){return e(t,n,m({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Je,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Qe[e]=Qe(e)});!function(){function e(t,n){y(this,e),this.rules=t,this.componentId=n,this.isStatic=xe(t,_),se.master.hasId(n)||se.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=V(ye(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();M&&(window.scCGSHMRCache={});t.a=Qe}).call(this,n(50))},function(e,t,n){e.exports=n(25)()},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(22)},function(e,t,n){"use strict";e.exports=n(51)},function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){var r;"undefined"!=typeof self&&self,e.exports=(r=n(0),function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=60)}([function(e,t){e.exports=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e,t,n){return e||console.error("theme has not been set"),s(e)(t,n)};var o=n(64),a=n(65),i=function(e){return e&&e.__esModule?e:{default:e}}(a),u=n(66),l=function(e){var t=function(e){return{backgroundColor:e.base00,ellipsisColor:e.base09,braceColor:e.base07,expandedIcon:e.base0D,collapsedIcon:e.base0E,keyColor:e.base07,arrayKeyColor:e.base0C,objectSize:e.base04,copyToClipboard:e.base0F,copyToClipboardCheck:e.base0D,objectBorder:e.base02,dataTypes:{boolean:e.base0E,date:e.base0D,float:e.base0B,function:e.base0D,integer:e.base0F,string:e.base09,nan:e.base08,null:e.base0A,undefined:e.base05,regexp:e.base0A,background:e.base02},editVariable:{editIcon:e.base0E,cancelIcon:e.base09,removeIcon:e.base09,addIcon:e.base0E,checkIcon:e.base0E,background:e.base01,color:e.base0A,border:e.base07},addKeyModal:{background:e.base05,border:e.base04,color:e.base0A,labelColor:e.base01},validationFailure:{background:e.base09,iconColor:e.base01,fontColor:e.base01}}}(e);return{"app-container":{fontFamily:i.default.globalFontFamily,cursor:i.default.globalCursor,backgroundColor:t.backgroundColor,position:"relative"},ellipsis:{display:"inline-block",color:t.ellipsisColor,fontSize:i.default.ellipsisFontSize,lineHeight:i.default.ellipsisLineHeight,cursor:i.default.ellipsisCursor},"brace-row":{display:"inline-block",cursor:"pointer"},brace:{display:"inline-block",cursor:i.default.braceCursor,fontWeight:i.default.braceFontWeight,color:t.braceColor},"expanded-icon":{color:t.expandedIcon},"collapsed-icon":{color:t.collapsedIcon},colon:{display:"inline-block",margin:i.default.keyMargin,color:t.keyColor,verticalAlign:"top"},objectKeyVal:function(e,n){return{style:r({paddingTop:i.default.keyValPaddingTop,paddingRight:i.default.keyValPaddingRight,paddingBottom:i.default.keyValPaddingBottom,borderLeft:i.default.keyValBorderLeft+" "+t.objectBorder,":hover":{paddingLeft:n.paddingLeft-1+"px",borderLeft:i.default.keyValBorderHover+" "+t.objectBorder}},n)}},"object-key-val-no-border":{padding:i.default.keyValPadding},"pushed-content":{marginLeft:i.default.pushedContentMarginLeft},variableValue:function(e,t){return{style:r({display:"inline-block",paddingRight:i.default.variableValuePaddingRight,position:"relative"},t)}},"object-name":{display:"inline-block",color:t.keyColor,letterSpacing:i.default.keyLetterSpacing,fontStyle:i.default.keyFontStyle,verticalAlign:i.default.keyVerticalAlign,opacity:i.default.keyOpacity,":hover":{opacity:i.default.keyOpacityHover}},"array-key":{display:"inline-block",color:t.arrayKeyColor,letterSpacing:i.default.keyLetterSpacing,fontStyle:i.default.keyFontStyle,verticalAlign:i.default.keyVerticalAlign,opacity:i.default.keyOpacity,":hover":{opacity:i.default.keyOpacityHover}},"object-size":{color:t.objectSize,borderRadius:i.default.objectSizeBorderRadius,fontStyle:i.default.objectSizeFontStyle,margin:i.default.objectSizeMargin,cursor:"default"},"data-type-label":{fontSize:i.default.dataTypeFontSize,marginRight:i.default.dataTypeMarginRight,opacity:i.default.datatypeOpacity},boolean:{display:"inline-block",color:t.dataTypes.boolean},date:{display:"inline-block",color:t.dataTypes.date},"date-value":{marginLeft:i.default.dateValueMarginLeft},float:{display:"inline-block",color:t.dataTypes.float},function:{display:"inline-block",color:t.dataTypes.function,cursor:"pointer",whiteSpace:"pre-line"},"function-value":{fontStyle:"italic"},integer:{display:"inline-block",color:t.dataTypes.integer},string:{display:"inline-block",color:t.dataTypes.string},nan:{display:"inline-block",color:t.dataTypes.nan,fontSize:i.default.nanFontSize,fontWeight:i.default.nanFontWeight,backgroundColor:t.dataTypes.background,padding:i.default.nanPadding,borderRadius:i.default.nanBorderRadius},null:{display:"inline-block",color:t.dataTypes.null,fontSize:i.default.nullFontSize,fontWeight:i.default.nullFontWeight,backgroundColor:t.dataTypes.background,padding:i.default.nullPadding,borderRadius:i.default.nullBorderRadius},undefined:{display:"inline-block",color:t.dataTypes.undefined,fontSize:i.default.undefinedFontSize,padding:i.default.undefinedPadding,borderRadius:i.default.undefinedBorderRadius,backgroundColor:t.dataTypes.background},regexp:{display:"inline-block",color:t.dataTypes.regexp},"copy-to-clipboard":{cursor:i.default.clipboardCursor},"copy-icon":{color:t.copyToClipboard,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight,verticalAlign:"top"},"copy-icon-copied":{color:t.copyToClipboardCheck,marginLeft:i.default.clipboardCheckMarginLeft},"array-group-meta-data":{display:"inline-block",padding:i.default.arrayGroupMetaPadding},"object-meta-data":{display:"inline-block",padding:i.default.metaDataPadding},"icon-container":{display:"inline-block",width:i.default.iconContainerWidth},tooltip:{padding:i.default.tooltipPadding},removeVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.removeIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},addVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.addIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},editVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.editIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},"edit-icon-container":{display:"inline-block",verticalAlign:"top"},"check-icon":{display:"inline-block",cursor:i.default.iconCursor,color:t.editVariable.checkIcon,fontSize:i.default.iconFontSize,paddingRight:i.default.iconPaddingRight},"cancel-icon":{display:"inline-block",cursor:i.default.iconCursor,color:t.editVariable.cancelIcon,fontSize:i.default.iconFontSize,paddingRight:i.default.iconPaddingRight},"edit-input":{display:"inline-block",minHeight:i.default.editInputHeight,minWidth:i.default.editInputMinWidth,borderRadius:i.default.editInputBorderRadius,backgroundColor:t.editVariable.background,color:t.editVariable.color,padding:i.default.editInputPadding,marginRight:i.default.editInputMarginRight,fontFamily:i.default.editInputFontFamily},"detected-row":{paddingTop:i.default.detectedRowPaddingTop},"key-modal-request":{position:i.default.addKeyCoverPosition,top:i.default.addKeyCoverPositionPx,left:i.default.addKeyCoverPositionPx,right:i.default.addKeyCoverPositionPx,bottom:i.default.addKeyCoverPositionPx,backgroundColor:i.default.addKeyCoverBackground},"key-modal":{width:i.default.addKeyModalWidth,backgroundColor:t.addKeyModal.background,marginLeft:i.default.addKeyModalMargin,marginRight:i.default.addKeyModalMargin,padding:i.default.addKeyModalPadding,borderRadius:i.default.addKeyModalRadius,marginTop:"15px",position:"relative"},"key-modal-label":{color:t.addKeyModal.labelColor,marginLeft:"2px",marginBottom:"5px",fontSize:"11px"},"key-modal-input-container":{overflow:"hidden"},"key-modal-input":{width:"100%",padding:"3px 6px",fontFamily:"monospace",color:t.addKeyModal.color,border:"none",boxSizing:"border-box",borderRadius:"2px"},"key-modal-cancel":{backgroundColor:t.editVariable.removeIcon,position:"absolute",top:"0px",right:"0px",borderRadius:"0px 3px 0px 3px",cursor:"pointer"},"key-modal-cancel-icon":{color:t.addKeyModal.labelColor,fontSize:i.default.iconFontSize,transform:"rotate(45deg)"},"key-modal-submit":{color:t.editVariable.addIcon,fontSize:i.default.iconFontSize,position:"absolute",right:"2px",top:"3px",cursor:"pointer"},"function-ellipsis":{display:"inline-block",color:t.ellipsisColor,fontSize:i.default.ellipsisFontSize,lineHeight:i.default.ellipsisLineHeight,cursor:i.default.ellipsisCursor},"validation-failure":{float:"right",padding:"3px 6px",borderRadius:"2px",cursor:"pointer",color:t.validationFailure.fontColor,backgroundColor:t.validationFailure.background},"validation-failure-label":{marginRight:"6px"},"validation-failure-clear":{position:"relative",verticalAlign:"top",cursor:"pointer",color:t.validationFailure.iconColor,fontSize:i.default.iconFontSize,transform:"rotate(45deg)"}}},s=function(e){var t=o.rjv_default;return!1!==e&&"none"!==e||(t=o.rjv_grey),(0,u.createStyling)(l,{defaultBase16:t})(e)}},function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(32)("wks"),o=n(23),a=n(5).Symbol,i="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=i&&a[e]||(i?a:o)("Symbol."+e))}).store=r},function(e,t,n){"use strict";function r(e){var t=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}(e);return"number"===t&&(t=isNaN(e)?"nan":(0|e)!=e?"float":"integer"),t}Object.defineProperty(t,"__esModule",{value:!0}),t.toType=r,t.isTheme=function(e){var t=["base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F"];if("object"===r(e)){for(var n=0;n<t.length;n++)if(!(t[n]in e))return!1;return!0}return!1}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=(e.rjvId,e.type_name),n=e.displayDataTypes,r=e.theme;return n?u.default.createElement("span",o({className:"data-type-label"},(0,s.default)(r,"data-type-label")),t):null}}]),t}(u.default.PureComponent);t.default=c},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(9),o=n(22);e.exports=n(10)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(16),o=n(44),a=n(29),i=Object.defineProperty;t.f=n(10)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),o)try{return i(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){e.exports=!n(11)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(49),o=n(28);e.exports=function(e){return r(o(e))}},function(e,t,n){"use strict";function r(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(161),u=n(14),l=function(e){return e&&e.__esModule?e:{default:e}}(u),s=n(4),c=function(e){function t(){var e,n,i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,l=Array(u),c=0;c<u;c++)l[c]=arguments[c];return n=i=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),i.objects={},i.set=function(e,t,n,r){void 0===i.objects[e]&&(i.objects[e]={}),void 0===i.objects[e][t]&&(i.objects[e][t]={}),i.objects[e][t][n]=r},i.get=function(e,t,n,r){return void 0===i.objects[e]||void 0===i.objects[e][t]||null==i.objects[e][t][n]?r:i.objects[e][t][n]},i.handleAction=function(e){var t=e.rjvId,n=e.data;switch(e.name){case"RESET":i.emit("reset-"+t);break;case"VARIABLE_UPDATED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-edited"})),i.emit("variable-update-"+t);break;case"VARIABLE_REMOVED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-removed"})),i.emit("variable-update-"+t);break;case"VARIABLE_ADDED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-added"})),i.emit("variable-update-"+t);break;case"ADD_VARIABLE_KEY_REQUEST":i.set(t,"action","new-key-request",n),i.emit("add-key-request-"+t)}},i.updateSrc=function(e,t){var n=t.name,o=t.namespace,a=t.new_value,u=(t.existing_value,t.variable_removed);o.shift();var l=i.get(e,"global","src"),c=i.deepCopy(l,[].concat(r(o))),f=c,p=!0,d=!1,h=void 0;try{for(var y,v=o[Symbol.iterator]();!(p=(y=v.next()).done);p=!0)f=f[y.value]}catch(e){d=!0,h=e}finally{try{!p&&v.return&&v.return()}finally{if(d)throw h}}return u?"array"==(0,s.toType)(f)?f.splice(n,1):delete f[n]:null!==n?f[n]=a:c=a,i.set(e,"global","src",c),c},i.deepCopy=function(e,t){var n=(0,s.toType)(e),o=void 0,u=t.shift();return"array"==n?o=[].concat(r(e)):"object"==n&&(o=a({},e)),void 0!==u&&(o[u]=i.deepCopy(e[u],t)),o},o(i,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(i.EventEmitter),f=new c;l.default.register(f.handleAction.bind(f)),t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(162),o=new r.Dispatcher;t.default=o},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function u(e){return e||(e={}),{style:l({verticalAlign:"middle"},e,{color:e.color?e.color:p,height:"1em",width:"1em"})}}Object.defineProperty(t,"__esModule",{value:!0}),t.CheckCircle=t.Edit=t.Add=t.AddCircle=t.RemoveCircle=t.Clippy=t.ArrowDown=t.ArrowRight=t.SquarePlus=t.SquareMinus=t.CirclePlus=t.CircleMinus=void 0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(0),f=function(e){return e&&e.__esModule?e:{default:e}}(c),p="#000000";t.CircleMinus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 24 24",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("path",{d:"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7"})))}}]),t}(f.default.PureComponent),t.CirclePlus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 24 24",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("path",{d:"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z"})))}}]),t}(f.default.PureComponent),t.SquareMinus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]),o=u(t).style;return f.default.createElement("span",n,f.default.createElement("svg",{fill:o.color,width:o.height,height:o.width,style:o,viewBox:"0 0 1792 1792"},f.default.createElement("path",{d:"M1344 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"})))}}]),t}(f.default.PureComponent),t.SquarePlus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]),o=u(t).style;return f.default.createElement("span",n,f.default.createElement("svg",{fill:o.color,width:o.height,height:o.width,style:o,viewBox:"0 0 1792 1792"},f.default.createElement("path",{d:"M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"})))}}]),t}(f.default.PureComponent),t.ArrowRight=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",{style:l({},u(t).style,{paddingLeft:"2px",verticalAlign:"top"}),viewBox:"0 0 15 15",fill:"currentColor"},f.default.createElement("path",{d:"M0 14l6-6-6-6z"})))}}]),t}(f.default.PureComponent),t.ArrowDown=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",{style:l({},u(t).style,{paddingLeft:"2px",verticalAlign:"top"}),viewBox:"0 0 15 15",fill:"currentColor"},f.default.createElement("path",{d:"M0 5l6 6 6-6z"})))}}]),t}(f.default.PureComponent),t.Clippy=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m30 35h-25v-22.5h25v7.5h2.5v-12.5c0-1.4-1.1-2.5-2.5-2.5h-7.5c0-2.8-2.2-5-5-5s-5 2.2-5 5h-7.5c-1.4 0-2.5 1.1-2.5 2.5v27.5c0 1.4 1.1 2.5 2.5 2.5h25c1.4 0 2.5-1.1 2.5-2.5v-5h-2.5v5z m-20-27.5h2.5s2.5-1.1 2.5-2.5 1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5 1.3 2.5 2.5 2.5h2.5s2.5 1.1 2.5 2.5h-20c0-1.5 1.1-2.5 2.5-2.5z m-2.5 20h5v-2.5h-5v2.5z m17.5-5v-5l-10 7.5 10 7.5v-5h12.5v-5h-12.5z m-17.5 10h7.5v-2.5h-7.5v2.5z m12.5-17.5h-12.5v2.5h12.5v-2.5z m-7.5 5h-5v2.5h5v-2.5z"}))))}}]),t}(f.default.PureComponent),t.RemoveCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m28.6 25q0-0.5-0.4-1l-4-4 4-4q0.4-0.5 0.4-1 0-0.6-0.4-1.1l-2-2q-0.4-0.4-1-0.4-0.6 0-1 0.4l-4.1 4.1-4-4.1q-0.4-0.4-1-0.4-0.6 0-1 0.4l-2 2q-0.5 0.5-0.5 1.1 0 0.5 0.5 1l4 4-4 4q-0.5 0.5-0.5 1 0 0.7 0.5 1.1l2 2q0.4 0.4 1 0.4 0.6 0 1-0.4l4-4.1 4.1 4.1q0.4 0.4 1 0.4 0.6 0 1-0.4l2-2q0.4-0.4 0.4-1z m8.7-5q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent),t.AddCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m30.1 21.4v-2.8q0-0.6-0.4-1t-1-0.5h-5.7v-5.7q0-0.6-0.4-1t-1-0.4h-2.9q-0.6 0-1 0.4t-0.4 1v5.7h-5.7q-0.6 0-1 0.5t-0.5 1v2.8q0 0.6 0.5 1t1 0.5h5.7v5.7q0 0.5 0.4 1t1 0.4h2.9q0.6 0 1-0.4t0.4-1v-5.7h5.7q0.6 0 1-0.5t0.4-1z m7.2-1.4q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent),t.Add=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z"}))))}}]),t}(f.default.PureComponent),t.Edit=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m19.8 26.4l2.6-2.6-3.4-3.4-2.6 2.6v1.3h2.2v2.1h1.2z m9.8-16q-0.3-0.4-0.7 0l-7.8 7.8q-0.4 0.4 0 0.7t0.7 0l7.8-7.8q0.4-0.4 0-0.7z m1.8 13.2v4.3q0 2.6-1.9 4.5t-4.5 1.9h-18.6q-2.6 0-4.5-1.9t-1.9-4.5v-18.6q0-2.7 1.9-4.6t4.5-1.8h18.6q1.4 0 2.6 0.5 0.3 0.2 0.4 0.5 0.1 0.4-0.2 0.7l-1.1 1.1q-0.3 0.3-0.7 0.1-0.5-0.1-1-0.1h-18.6q-1.4 0-2.5 1.1t-1 2.5v18.6q0 1.4 1 2.5t2.5 1h18.6q1.5 0 2.5-1t1.1-2.5v-2.9q0-0.2 0.2-0.4l1.4-1.5q0.3-0.3 0.8-0.1t0.4 0.6z m-2.1-16.5l6.4 6.5-15 15h-6.4v-6.5z m9.9 3l-2.1 2-6.4-6.4 2.1-2q0.6-0.7 1.5-0.7t1.5 0.7l3.4 3.4q0.6 0.6 0.6 1.5t-0.6 1.5z"}))))}}]),t}(f.default.PureComponent),t.CheckCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m31.7 16.4q0-0.6-0.4-1l-2.1-2.1q-0.4-0.4-1-0.4t-1 0.4l-9.1 9.1-5-5q-0.5-0.4-1-0.4t-1 0.4l-2.1 2q-0.4 0.4-0.4 1 0 0.6 0.4 1l8.1 8.1q0.4 0.4 1 0.4 0.6 0 1-0.4l12.2-12.1q0.4-0.4 0.4-1z m5.6 3.6q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent)},function(e,t,n){var r=n(17);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){e.exports={}},function(e,t,n){var r=n(48),o=n(33);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){e.exports=!0},function(e,t,n){var r=n(5),o=n(2),a=n(71),i=n(8),u=n(7),l=function(e,t,n){var s,c,f,p=e&l.F,d=e&l.G,h=e&l.S,y=e&l.P,v=e&l.B,m=e&l.W,g=d?o:o[t]||(o[t]={}),b=g.prototype,w=d?r:h?r[t]:(r[t]||{}).prototype;for(s in d&&(n=t),n)(c=!p&&w&&void 0!==w[s])&&u(g,s)||(f=c?w[s]:n[s],g[s]=d&&"function"!=typeof w[s]?n[s]:v&&c?a(f,r):m&&w[s]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):y&&"function"==typeof f?a(Function.call,f):f,y&&((g.virtual||(g.virtual={}))[s]=f,e&l.R&&b&&!b[s]&&i(b,s,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(41),c=n(4),f=n(42),p=n(171),d=r(p),h=n(56),y=r(h),v=n(57),m=r(v),g=n(58),b=r(g),w=n(13),x=r(w),_=n(59),E=n(1),k=r(E),S=function(e){function t(e){o(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));C.call(n);var r=t.getState(e);return n.state=a({},r,{prevProps:{}}),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"getBraceStart",value:function(e,t){var n=this,r=this.props,o=r.src,i=r.theme,u=r.iconStyle;if("array_group"===r.parent_type)return l.default.createElement("span",null,l.default.createElement("span",(0,k.default)(i,"brace"),"array"===e?"[":"{"),t?this.getObjectMetaData(o):null);var s=t?_.ExpandedIcon:_.CollapsedIcon;return l.default.createElement("span",null,l.default.createElement("span",a({onClick:function(e){n.toggleCollapsed()}},(0,k.default)(i,"brace-row")),l.default.createElement("div",a({className:"icon-container"},(0,k.default)(i,"icon-container")),l.default.createElement(s,{theme:i,iconStyle:u})),l.default.createElement(b.default,this.props),l.default.createElement("span",(0,k.default)(i,"brace"),"array"===e?"[":"{")),t?this.getObjectMetaData(o):null)}},{key:"render",value:function(){var e=this.props,t=e.depth,n=e.src,r=(e.namespace,e.name,e.type,e.parent_type),o=e.theme,i=e.jsvRoot,u=e.iconStyle,s=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["depth","src","namespace","name","type","parent_type","theme","jsvRoot","iconStyle"]),c=this.state,f=c.object_type,p=c.expanded,d={};return i||"array_group"===r?"array_group"===r&&(d.borderLeft=0,d.display="inline"):d.paddingLeft=5*this.props.indentWidth,l.default.createElement("div",a({className:"object-key-val"},(0,k.default)(o,i?"jsv-root":"objectKeyVal",d)),this.getBraceStart(f,p),p?this.getObjectContent(t,n,a({theme:o,iconStyle:u},s)):this.getEllipsis(),l.default.createElement("span",{className:"brace-row"},l.default.createElement("span",{style:a({},(0,k.default)(o,"brace").style,{paddingLeft:p?"3px":"0px"})},"array"===f?"]":"}"),p?null:this.getObjectMetaData(n)))}}],[{key:"getDerivedStateFromProps",value:function(e,n){var r=n.prevProps;if(e.src!==r.src||e.collapsed!==r.collapsed||e.name!==r.name||e.namespace!==r.namespace||e.rjvId!==r.rjvId){var o=t.getState(e);return a({},o,{prevProps:e})}return null}}]),t}(l.default.PureComponent);S.getState=function(e){var t=Object.keys(e.src).length,n=(!1===e.collapsed||!0!==e.collapsed&&e.collapsed>e.depth)&&(!e.shouldCollapse||!1===e.shouldCollapse({name:e.name,src:e.src,type:(0,c.toType)(e.src),namespace:e.namespace}))&&0!==t;return{expanded:x.default.get(e.rjvId,e.namespace,"expanded",n),object_type:"array"===e.type?"array":"object",parent_type:"array"===e.type?"array":"object",size:t}};var C=function(){var e=this;this.toggleCollapsed=function(){e.setState({expanded:!e.state.expanded},function(){x.default.set(e.props.rjvId,e.props.namespace,"expanded",e.state.expanded)})},this.getObjectContent=function(t,n,r){return l.default.createElement("div",{className:"pushed-content object-container"},l.default.createElement("div",a({className:"object-content"},(0,k.default)(e.props.theme,"pushed-content")),e.renderObjectContents(n,r)))},this.getEllipsis=function(){return 0===e.state.size?null:l.default.createElement("div",a({},(0,k.default)(e.props.theme,"ellipsis"),{className:"node-ellipsis",onClick:e.toggleCollapsed}),"...")},this.getObjectMetaData=function(t){var n=e.props,r=(n.rjvId,n.theme,e.state.size);return l.default.createElement(y.default,a({size:r},e.props))},this.renderObjectContents=function(t,n){var r=e.props,o=r.depth,i=r.parent_type,u=r.index_offset,s=r.groupArraysAfterLength,c=r.namespace,p=e.state.object_type,h=(n.theme,[]),y=void 0,v=Object.keys(t||{});return e.props.sortKeys&&(v=v.sort()),v.forEach(function(r){if(y=new O(r,t[r]),"array_group"===i&&u&&(y.name=parseInt(y.name)+u),t.hasOwnProperty(r))if("object"===y.type)h.push(l.default.createElement(f.JsonObject,a({key:y.name,depth:o+1,name:y.name,src:y.value,namespace:c.concat(y.name),parent_type:p},n)));else if("array"===y.type){var v=f.JsonObject;s&&y.value.length>s&&(v=m.default),h.push(l.default.createElement(v,a({key:y.name,depth:o+1,name:y.name,src:y.value,namespace:c.concat(y.name),type:"array",parent_type:p},n)))}else h.push(l.default.createElement(d.default,a({key:y.name+"_"+c,variable:y,singleIndent:5,namespace:c,type:e.props.type},n)))}),h}},O=function e(t,n){o(this,e),this.name=t,this.value=n,this.type=(0,c.toType)(n)};(0,s.polyfill)(S),t.default=S},function(e,t,n){"use strict";var r=n(70)(!0);n(43)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(17);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(32)("keys"),o=n(23);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var r=n(2),o=n(5),a=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(20)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(9).f,o=n(7),a=n(3)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,a)&&r(e,a,{configurable:!0,value:t})}},function(e,t,n){var r=n(28);e.exports=function(e){return Object(r(e))}},function(e,t,n){n(80);for(var r=n(5),o=n(8),a=n(18),i=n(3)("toStringTag"),u="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),l=0;l<u.length;l++){var s=u[l],c=r[s],f=c&&c.prototype;f&&!f[i]&&o(f,i,s),a[s]=a.Array}},function(e,t,n){t.f=n(3)},function(e,t,n){var r=n(5),o=n(2),a=n(20),i=n(37),u=n(9).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=a?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||u(t,e,{value:i.f(e)})}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t){e.exports=function(e,t,n){return Math.min(Math.max(e,t),n)}},function(e,t,n){"use strict";function r(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=e&&this.setState(e)}function o(e){this.setState(function(t){var n=this.constructor.getDerivedStateFromProps(e,t);return null!=n?n:null}.bind(this))}function a(e,t){try{var n=this.props,r=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function i(e){var t=e.prototype;if(!t||!t.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof e.getDerivedStateFromProps&&"function"!=typeof t.getSnapshotBeforeUpdate)return e;var n=null,i=null,u=null;if("function"==typeof t.componentWillMount?n="componentWillMount":"function"==typeof t.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof t.componentWillReceiveProps?i="componentWillReceiveProps":"function"==typeof t.UNSAFE_componentWillReceiveProps&&(i="UNSAFE_componentWillReceiveProps"),"function"==typeof t.componentWillUpdate?u="componentWillUpdate":"function"==typeof t.UNSAFE_componentWillUpdate&&(u="UNSAFE_componentWillUpdate"),null!==n||null!==i||null!==u){var l=e.displayName||e.name,s="function"==typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+l+" uses "+s+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==i?"\n  "+i:"")+(null!==u?"\n  "+u:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof e.getDerivedStateFromProps&&(t.componentWillMount=r,t.componentWillReceiveProps=o),"function"==typeof t.getSnapshotBeforeUpdate){if("function"!=typeof t.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=a;var c=t.componentDidUpdate;t.componentDidUpdate=function(e,t,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;c.call(this,e,t,r)}}return e}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"polyfill",function(){return i}),r.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,a.__suppressDeprecationWarning=!0},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(63);Object.defineProperty(t,"JsonBoolean",{enumerable:!0,get:function(){return r(o).default}});var a=n(158);Object.defineProperty(t,"JsonDate",{enumerable:!0,get:function(){return r(a).default}});var i=n(159);Object.defineProperty(t,"JsonFloat",{enumerable:!0,get:function(){return r(i).default}});var u=n(160);Object.defineProperty(t,"JsonFunction",{enumerable:!0,get:function(){return r(u).default}});var l=n(165);Object.defineProperty(t,"JsonNan",{enumerable:!0,get:function(){return r(l).default}});var s=n(166);Object.defineProperty(t,"JsonNull",{enumerable:!0,get:function(){return r(s).default}});var c=n(167);Object.defineProperty(t,"JsonInteger",{enumerable:!0,get:function(){return r(c).default}});var f=n(25);Object.defineProperty(t,"JsonObject",{enumerable:!0,get:function(){return r(f).default}});var p=n(168);Object.defineProperty(t,"JsonRegexp",{enumerable:!0,get:function(){return r(p).default}});var d=n(169);Object.defineProperty(t,"JsonString",{enumerable:!0,get:function(){return r(d).default}});var h=n(170);Object.defineProperty(t,"JsonUndefined",{enumerable:!0,get:function(){return r(h).default}})},function(e,t,n){"use strict";var r=n(20),o=n(21),a=n(46),i=n(8),u=n(18),l=n(73),s=n(34),c=n(79),f=n(3)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,t,n,h,y,v,m){l(n,t,h);var g,b,w,x=function(e){if(!p&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},_=t+" Iterator",E="values"==y,k=!1,S=e.prototype,C=S[f]||S["@@iterator"]||y&&S[y],O=C||x(y),M=y?E?x("entries"):O:void 0,T="Array"==t&&S.entries||C;if(T&&(w=c(T.call(new e)))!==Object.prototype&&w.next&&(s(w,_,!0),r||"function"==typeof w[f]||i(w,f,d)),E&&C&&"values"!==C.name&&(k=!0,O=function(){return C.call(this)}),r&&!m||!p&&!k&&S[f]||i(S,f,O),u[t]=O,u[_]=d,y)if(g={values:E?O:x("values"),keys:v?O:x("keys"),entries:M},m)for(b in g)b in S||a(S,b,g[b]);else o(o.P+o.F*(p||k),t,g);return g}},function(e,t,n){e.exports=!n(10)&&!n(11)(function(){return 7!=Object.defineProperty(n(45)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(17),o=n(5).document,a=r(o)&&r(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},function(e,t,n){e.exports=n(8)},function(e,t,n){var r=n(16),o=n(74),a=n(33),i=n(31)("IE_PROTO"),u=function(){},l=function(){var e,t=n(45)("iframe"),r=a.length;for(t.style.display="none",n(78).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[a[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[i]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(7),o=n(12),a=n(75)(!1),i=n(31)("IE_PROTO");e.exports=function(e,t){var n,u=o(e),l=0,s=[];for(n in u)n!=i&&r(u,n)&&s.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~a(s,n)||s.push(n));return s}},function(e,t,n){var r=n(30);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(48),o=n(33).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){var r=n(30),o=n(3)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:a?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n=/-?\d+(\.\d+)?%?/g;e.exports=function(e){return e.match(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.default=function(e){var t=(0,r.toType)(e),n=void 0;switch(t){case"undefined":n="undefined";break;case"nan":n="NaN";break;case"string":n=e;break;case"date":case"function":case"regexp":n=e.toString();break;default:try{n=JSON.stringify(e,null,"  ")}catch(e){n=""}}return n}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(4),s=n(54),c=(r(s),n(15)),f=n(1),p=r(f),d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.copiedTimer=null,n.handleCopy=function(){var e=document.createElement("textarea"),t=n.props,r=t.clickCallback,o=t.src,a=t.namespace;e.innerHTML=JSON.stringify(n.clipboardValue(o),null,"  "),document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),n.copiedTimer=setTimeout(function(){n.setState({copied:!1})},5500),n.setState({copied:!0},function(){"function"==typeof r&&r({src:o,namespace:a,name:a[a.length-1]})})},n.getClippyIcon=function(){var e=n.props.theme;return n.state.copied?u.default.createElement("span",null,u.default.createElement(c.Clippy,o({className:"copy-icon"},(0,p.default)(e,"copy-icon"))),u.default.createElement("span",(0,p.default)(e,"copy-icon-copied"),"✔")):u.default.createElement(c.Clippy,o({className:"copy-icon"},(0,p.default)(e,"copy-icon")))},n.clipboardValue=function(e){switch((0,l.toType)(e)){case"function":case"regexp":return e.toString();default:return e}},n.state={copied:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentWillUnmount",value:function(){this.copiedTimer&&(clearTimeout(this.copiedTimer),this.copiedTimer=null)}},{key:"render",value:function(){var e=this.props,t=(e.src,e.theme),n=e.hidden,r=(0,p.default)(t,"copy-to-clipboard").style,a="inline";return n&&(a="none"),u.default.createElement("span",{className:"copy-to-clipboard-container"},u.default.createElement("span",{style:o({},r,{display:a}),onClick:this.handleCopy},this.getClippyIcon()))}}]),t}(u.default.PureComponent);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=n(0),l=r(u),s=n(14),c=r(s),f=n(55),p=r(f),d=n(4),h=n(15),y=n(1),v=r(y),m=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,s=Array(u),f=0;f<u;f++)s[f]=arguments[f];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(s))),r.getObjectSize=function(){var e=r.props,t=e.size,n=e.theme;if(e.displayObjectSize)return l.default.createElement("span",i({className:"object-size"},(0,v.default)(n,"object-size")),t," item",1===t?"":"s")},r.getAddAttribute=function(){var e=r.props,t=e.theme,n=e.namespace,a=e.name,u=e.src,s=e.rjvId,f=e.depth;return l.default.createElement("span",{className:"click-to-add",style:{verticalAlign:"top"}},l.default.createElement(h.AddCircle,i({className:"click-to-add-icon"},(0,v.default)(t,"addVarIcon"),{onClick:function(){var e={name:f>0?a:null,namespace:n.splice(0,n.length-1),existing_value:u,variable_removed:!1,key_name:null};"object"===(0,d.toType)(u)?c.default.dispatch({name:"ADD_VARIABLE_KEY_REQUEST",rjvId:s,data:e}):c.default.dispatch({name:"VARIABLE_ADDED",rjvId:s,data:i({},e,{new_value:[].concat(o(u),[null])})})}})))},r.getRemoveObject=function(){var e=r.props,t=e.theme,n=(e.hover,e.namespace),o=e.name,a=e.src,u=e.rjvId;if(1!==n.length)return l.default.createElement("span",{className:"click-to-remove"},l.default.createElement(h.RemoveCircle,i({className:"click-to-remove-icon"},(0,v.default)(t,"removeVarIcon"),{onClick:function(){c.default.dispatch({name:"VARIABLE_REMOVED",rjvId:u,data:{name:o,namespace:n.splice(0,n.length-1),existing_value:a,variable_removed:!0}})}})))},r.render=function(){var e=r.props,t=e.theme,n=e.onDelete,o=e.onAdd,a=e.enableClipboard,u=e.src,s=e.namespace;return l.default.createElement("div",i({},(0,v.default)(t,"object-meta-data"),{className:"object-meta-data",onClick:function(e){e.stopPropagation()}}),r.getObjectSize(),a?l.default.createElement(p.default,i({clickCallback:a},{src:u,theme:t,namespace:s})):null,!1!==o?r.getAddAttribute():null,!1!==n?r.getRemoveObject():null)},a(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(l.default.PureComponent);t.default=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=n(56),f=r(c),p=n(58),d=r(p),h=n(25),y=r(h),v=n(59),m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggleCollapsed=function(e){var t=[];for(var r in n.state.expanded)t.push(n.state.expanded[r]);t[e]=!t[e],n.setState({expanded:t})},n.state={expanded:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"getExpandedIcon",value:function(e){var t=this.props,n=t.theme,r=t.iconStyle;return this.state.expanded[e]?u.default.createElement(v.ExpandedIcon,{theme:n,iconStyle:r}):u.default.createElement(v.CollapsedIcon,{theme:n,iconStyle:r})}},{key:"render",value:function(){var e=this,t=this.props,n=t.src,r=t.groupArraysAfterLength,a=(t.depth,t.name),i=t.theme,l=t.jsvRoot,c=t.namespace,p=(t.parent_type,function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["src","groupArraysAfterLength","depth","name","theme","jsvRoot","namespace","parent_type"])),h=0,v=5*this.props.indentWidth;l||(h=5*this.props.indentWidth);var m=r,g=Math.ceil(n.length/m);return u.default.createElement("div",o({className:"object-key-val"},(0,s.default)(i,l?"jsv-root":"objectKeyVal",{paddingLeft:h})),u.default.createElement(d.default,this.props),u.default.createElement("span",null,u.default.createElement(f.default,o({size:n.length},this.props))),[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(Array(g))).map(function(t,r){return u.default.createElement("div",o({key:r,className:"object-key-val array-group"},(0,s.default)(i,"objectKeyVal",{marginLeft:6,paddingLeft:v})),u.default.createElement("span",(0,s.default)(i,"brace-row"),u.default.createElement("div",o({className:"icon-container"},(0,s.default)(i,"icon-container"),{onClick:function(t){e.toggleCollapsed(r)}}),e.getExpandedIcon(r)),e.state.expanded[r]?u.default.createElement(y.default,o({key:a+r,depth:0,name:!1,collapsed:!1,groupArraysAfterLength:m,index_offset:r*m,src:n.slice(r*m,r*m+m),namespace:c,type:"array",parent_type:"array_group",theme:i},p)):u.default.createElement("span",o({},(0,s.default)(i,"brace"),{onClick:function(t){e.toggleCollapsed(r)},className:"array-group-brace"}),"[",u.default.createElement("div",o({},(0,s.default)(i,"array-group-meta-data"),{className:"array-group-meta-data"}),u.default.createElement("span",o({className:"object-size"},(0,s.default)(i,"object-size")),r*m," - ",r*m+m>n.length?n.length:r*m+m)),"]")))}))}}]),t}(u.default.PureComponent);t.default=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e){var t=e.parent_type,n=e.namespace,r=e.theme,a=e.jsvRoot,u=e.name,s=e.name?e.name:"";return!a||!1!==u&&null!==u?"array"==t?i.default.createElement("span",o({},(0,l.default)(r,"array-key"),{key:n}),i.default.createElement("span",{className:"array-key"},s),i.default.createElement("span",(0,l.default)(r,"colon"),":")):i.default.createElement("span",o({},(0,l.default)(r,"object-name"),{key:n}),i.default.createElement("span",{className:"object-key"},i.default.createElement("span",{style:{verticalAlign:"top"}},'"'),i.default.createElement("span",null,s),i.default.createElement("span",{style:{verticalAlign:"top"}},'"')),i.default.createElement("span",(0,l.default)(r,"colon"),":")):i.default.createElement("span",null)};var a=n(0),i=r(a),u=n(1),l=r(u)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.ExpandedIcon=function(e){var t=e.theme;switch(e.iconStyle){case"triangle":return i.default.createElement(s.ArrowDown,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}));case"square":return i.default.createElement(s.SquareMinus,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}));default:return i.default.createElement(s.CircleMinus,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}))}},t.CollapsedIcon=function(e){var t=e.theme;switch(e.iconStyle){case"triangle":return i.default.createElement(s.ArrowRight,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}));case"square":return i.default.createElement(s.SquarePlus,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}));default:return i.default.createElement(s.CirclePlus,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}))}};var a=n(0),i=r(a),u=n(1),l=r(u),s=n(15)},function(e,t,n){e.exports=n(61)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(41),s=n(62),c=r(s),f=n(177),p=r(f),d=n(179),h=r(d),y=n(4),v=n(13),m=r(v),g=n(1),b=r(g);n(180);var w=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.rjvId=Date.now().toString(),n.getListeners=function(){return{reset:n.resetState,"variable-update":n.updateSrc,"add-key-request":n.addKeyRequest}},n.updateSrc=function(){var e=m.default.get(n.rjvId,"action","variable-update"),t=e.name,r=e.namespace,o=e.new_value,a=e.existing_value,i=(e.variable_removed,e.updated_src),u=e.type,l=n.props,s=l.onEdit,c=l.onDelete,f=l.onAdd,p=n.state.src,d=void 0,h={existing_src:p,new_value:o,updated_src:i,name:t,namespace:r,existing_value:a};switch(u){case"variable-added":d=f(h);break;case"variable-edited":d=s(h);break;case"variable-removed":d=c(h)}!1!==d?(m.default.set(n.rjvId,"global","src",i),n.setState({src:i})):n.setState({validationFailure:!0})},n.addKeyRequest=function(){n.setState({addKeyRequest:!0})},n.resetState=function(){n.setState({validationFailure:!1,addKeyRequest:!1})},n.state={addKeyRequest:!1,editKeyRequest:!1,validationFailure:!1,src:t.defaultProps.src,name:t.defaultProps.name,theme:t.defaultProps.theme,validationMessage:t.defaultProps.validationMessage,prevSrc:t.defaultProps.src,prevName:t.defaultProps.name,prevTheme:t.defaultProps.theme},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){m.default.set(this.rjvId,"global","src",this.state.src);var e=this.getListeners();for(var t in e)m.default.on(t+"-"+this.rjvId,e[t]);this.setState({addKeyRequest:!1,editKeyRequest:!1})}},{key:"componentDidUpdate",value:function(e,t){!1!==t.addKeyRequest&&this.setState({addKeyRequest:!1}),!1!==t.editKeyRequest&&this.setState({editKeyRequest:!1}),e.src!==this.state.src&&m.default.set(this.rjvId,"global","src",this.state.src)}},{key:"componentWillUnmount",value:function(){var e=this.getListeners();for(var t in e)m.default.removeListener(t+"-"+this.rjvId,e[t])}},{key:"render",value:function(){var e=this.state,t=e.validationFailure,n=e.validationMessage,r=e.addKeyRequest,a=e.theme,i=e.src,l=e.name,s=this.props,f=s.style,d=s.defaultValue;return u.default.createElement("div",{className:"react-json-view",style:o({},(0,b.default)(a,"app-container").style,f)},u.default.createElement(h.default,{message:n,active:t,theme:a,rjvId:this.rjvId}),u.default.createElement(c.default,o({},this.props,{src:i,name:l,theme:a,type:(0,y.toType)(i),rjvId:this.rjvId})),u.default.createElement(p.default,{active:r,theme:a,rjvId:this.rjvId,defaultValue:d}))}}],[{key:"getDerivedStateFromProps",value:function(e,n){if(e.src!==n.prevSrc||e.name!==n.prevName||e.theme!==n.prevTheme){var r={src:e.src,name:e.name,theme:e.theme,validationMessage:e.validationMessage,prevSrc:e.src,prevName:e.name,prevTheme:e.theme};return t.validateState(r)}return null}}]),t}(u.default.PureComponent);w.defaultProps={src:{},name:"root",theme:"rjv-default",collapsed:!1,collapseStringsAfterLength:!1,shouldCollapse:!1,sortKeys:!1,groupArraysAfterLength:100,indentWidth:4,enableClipboard:!0,displayObjectSize:!0,displayDataTypes:!0,onEdit:!1,onDelete:!1,onAdd:!1,onSelect:!1,iconStyle:"triangle",style:{},validationMessage:"Validation Error",defaultValue:null},w.validateState=function(e){var t={};return"object"!==(0,y.toType)(e.theme)||(0,y.isTheme)(e.theme)||(console.error("react-json-view error:","theme prop must be a theme name or valid base-16 theme object.",'defaulting to "rjv-default" theme'),t.theme="rjv-default"),"object"!==(0,y.toType)(e.src)&&"array"!==(0,y.toType)(e.src)&&(console.error("react-json-view error:","src property must be a valid json object"),t.name="ERROR",t.src={message:"src property must be a valid json object"}),o({},e,t)},(0,l.polyfill)(w),t.default=w},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(0),u=r(i),l=n(25),s=r(l),c=n(57),f=r(c),p=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,l=Array(i),c=0;c<i;c++)l[c]=arguments[c];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),r.render=function(){var e=r,t=e.props,n=[t.name],o=s.default;return t.groupArraysAfterLength&&t.src.length>t.groupArraysAfterLength&&(o=f.default),u.default.createElement("div",{className:"pretty-json-container object-container"},u.default.createElement("div",{className:"object-content"},u.default.createElement(o,a({namespace:n,depth:0,jsvRoot:!0},t))))},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"boolean"),u.default.createElement(s.default,o({type_name:"bool"},e)),e.value?"true":"false")}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rjv_default={scheme:"rjv-default",author:"mac gainor",base00:"rgba(0, 0, 0, 0)",base01:"rgb(245, 245, 245)",base02:"rgb(235, 235, 235)",base03:"#93a1a1",base04:"rgba(0, 0, 0, 0.3)",base05:"#586e75",base06:"#073642",base07:"#002b36",base08:"#d33682",base09:"#cb4b16",base0A:"#dc322f",base0B:"#859900",base0C:"#6c71c4",base0D:"#586e75",base0E:"#2aa198",base0F:"#268bd2"},t.rjv_grey={scheme:"rjv-grey",author:"mac gainor",base00:"rgba(1, 1, 1, 0)",base01:"rgba(1, 1, 1, 0.1)",base02:"rgba(0, 0, 0, 0.2)",base03:"rgba(1, 1, 1, 0.3)",base04:"rgba(0, 0, 0, 0.4)",base05:"rgba(1, 1, 1, 0.5)",base06:"rgba(1, 1, 1, 0.6)",base07:"rgba(1, 1, 1, 0.7)",base08:"rgba(1, 1, 1, 0.8)",base09:"rgba(1, 1, 1, 0.8)",base0A:"rgba(1, 1, 1, 0.8)",base0B:"rgba(1, 1, 1, 0.8)",base0C:"rgba(1, 1, 1, 0.8)",base0D:"rgba(1, 1, 1, 0.8)",base0E:"rgba(1, 1, 1, 0.8)",base0F:"rgba(1, 1, 1, 0.8)"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={white:"#fff",black:"#000",transparent:"rgba(1, 1, 1, 0)",globalFontFamily:"monospace",globalCursor:"default",indentBlockWidth:"5px",braceFontWeight:"bold",braceCursor:"pointer",ellipsisFontSize:"18px",ellipsisLineHeight:"10px",ellipsisCursor:"pointer",keyMargin:"0px 5px",keyLetterSpacing:"0.5px",keyFontStyle:"none",keyBorderRadius:"3px",keyColonWeight:"bold",keyVerticalAlign:"top",keyOpacity:"0.85",keyOpacityHover:"1",keyValPaddingTop:"3px",keyValPaddingBottom:"3px",keyValPaddingRight:"5px",keyValBorderLeft:"1px solid",keyValBorderHover:"2px solid",keyValPaddingHover:"3px 5px 3px 4px",pushedContentMarginLeft:"6px",variableValuePaddingRight:"6px",nullFontSize:"11px",nullFontWeight:"bold",nullPadding:"1px 2px",nullBorderRadius:"3px",nanFontSize:"11px",nanFontWeight:"bold",nanPadding:"1px 2px",nanBorderRadius:"3px",undefinedFontSize:"11px",undefinedFontWeight:"bold",undefinedPadding:"1px 2px",undefinedBorderRadius:"3px",dataTypeFontSize:"11px",dataTypeMarginRight:"4px",datatypeOpacity:"0.8",objectSizeBorderRadius:"3px",objectSizeFontStyle:"italic",objectSizeMargin:"0px 6px 0px 0px",clipboardCursor:"pointer",clipboardCheckMarginLeft:"-12px",metaDataPadding:"0px 0px 0px 10px",arrayGroupMetaPadding:"0px 0px 0px 4px",iconContainerWidth:"17px",tooltipPadding:"4px",editInputHeight:"25px",editInputMinWidth:"130px",editInputBorderRadius:"2px",editInputPadding:"5px",editInputMarginRight:"4px",editInputFontFamily:"monospace",iconCursor:"pointer",iconFontSize:"15px",iconPaddingRight:"1px",dateValueMarginLeft:"2px",iconMarginRight:"3px",detectedRowPaddingTop:"3px",addKeyCoverBackground:"rgba(255, 255, 255, 0.3)",addKeyCoverPosition:"absolute",addKeyCoverPositionPx:"0px",addKeyModalWidth:"200px",addKeyModalMargin:"auto",addKeyModalPadding:"10px",addKeyModalRadius:"3px"}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.getBase16Theme=t.createStyling=t.invertTheme=void 0;var o=n(67),a=r(o),i=n(94),u=r(i),l=n(99),s=r(l),c=n(107),f=r(c),p=n(111),d=r(p),h=n(112),y=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(h),v=n(150),m=r(v),g=n(151),b=r(g),w=n(156),x=r(w),_=n(157),E=y.default,k=(0,f.default)(E),S=function(e){return e<.25?1:e<.5?.9-e:1.1-e},C=(0,x.default)(b.default,_.rgb2yuv,function(e){var t=(0,s.default)(e,3),n=t[0],r=t[1],o=t[2];return[S(n),r,o]},_.yuv2rgb,m.default),O=function(e){return function(t){return{className:[t.className,e.className].filter(Boolean).join(" "),style:(0,u.default)({},t.style||{},e.style||{})}}},M=function(e,t){var n=(0,f.default)(t);for(var r in e)-1===n.indexOf(r)&&n.push(r);return n.reduce(function(n,r){return n[r]=function(e,t){if(void 0===e)return t;if(void 0===t)return e;var n=void 0===e?"undefined":(0,a.default)(e),r=void 0===t?"undefined":(0,a.default)(t);switch(n){case"string":switch(r){case"string":return[t,e].filter(Boolean).join(" ");case"object":return O({className:e,style:t});case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return O({className:e})(t.apply(void 0,[n].concat(o)))}}case"object":switch(r){case"string":return O({className:t,style:e});case"object":return(0,u.default)({},t,e);case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return O({style:e})(t.apply(void 0,[n].concat(o)))}}case"function":switch(r){case"string":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[O(n)({className:t})].concat(o))};case"object":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[O(n)({style:t})].concat(o))};case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[t.apply(void 0,[n].concat(o))].concat(o))}}}}(e[r],t[r]),n},{})},T=function(e,t){for(var n=arguments.length,r=Array(n>2?n-2:0),o=2;o<n;o++)r[o-2]=arguments[o];if(null===t)return e;Array.isArray(t)||(t=[t]);var i=t.map(function(t){return e[t]}).filter(Boolean),l=i.reduce(function(e,t){return"string"==typeof t?e.className=[e.className,t].filter(Boolean).join(" "):"object"===(void 0===t?"undefined":(0,a.default)(t))?e.style=(0,u.default)({},e.style,t):"function"==typeof t&&(e=(0,u.default)({},e,t.apply(void 0,[e].concat(r)))),e},{className:"",style:{}});return l.className||delete l.className,0===(0,f.default)(l.style).length&&delete l.style,l},j=t.invertTheme=function(e){return(0,f.default)(e).reduce(function(t,n){return t[n]=/^base/.test(n)?C(e[n]):"scheme"===n?e[n]+":inverted":e[n],t},{})},P=(t.createStyling=(0,d.default)(function(e){for(var t=arguments.length,n=Array(t>3?t-3:0),r=3;r<t;r++)n[r-3]=arguments[r];var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=o.defaultBase16,l=void 0===i?E:i,s=o.base16Themes,c=void 0===s?null:s,p=P(a,c);p&&(a=(0,u.default)({},p,a));var h=k.reduce(function(e,t){return e[t]=a[t]||l[t],e},{}),y=(0,f.default)(a).reduce(function(e,t){return-1===k.indexOf(t)?(e[t]=a[t],e):e},{}),v=e(h),m=M(y,v);return(0,d.default)(T,2).apply(void 0,[m].concat(n))},3),t.getBase16Theme=function(e,t){if(e&&e.extend&&(e=e.extend),"string"==typeof e){var n=e.split(":"),r=(0,s.default)(n,2),o=r[0],a=r[1];e=(t||{})[o]||y[o],"inverted"===a&&(e=j(e))}return e&&e.hasOwnProperty("base00")?e:void 0})},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(68),a=r(o),i=n(83),u=r(i),l="function"==typeof u.default&&"symbol"==typeof a.default?function(e){return typeof e}:function(e){return e&&"function"==typeof u.default&&e.constructor===u.default&&e!==u.default.prototype?"symbol":typeof e};t.default="function"==typeof u.default&&"symbol"===l(a.default)?function(e){return void 0===e?"undefined":l(e)}:function(e){return e&&"function"==typeof u.default&&e.constructor===u.default&&e!==u.default.prototype?"symbol":void 0===e?"undefined":l(e)}},function(e,t,n){e.exports={default:n(69),__esModule:!0}},function(e,t,n){n(26),n(36),e.exports=n(37).f("iterator")},function(e,t,n){var r=n(27),o=n(28);e.exports=function(e){return function(t,n){var a,i,u=String(o(t)),l=r(n),s=u.length;return l<0||l>=s?e?"":void 0:(a=u.charCodeAt(l))<55296||a>56319||l+1===s||(i=u.charCodeAt(l+1))<56320||i>57343?e?u.charAt(l):a:e?u.slice(l,l+2):i-56320+(a-55296<<10)+65536}}},function(e,t,n){var r=n(72);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){"use strict";var r=n(47),o=n(22),a=n(34),i={};n(8)(i,n(3)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(i,{next:o(1,n)}),a(e,t+" Iterator")}},function(e,t,n){var r=n(9),o=n(16),a=n(19);e.exports=n(10)?Object.defineProperties:function(e,t){o(e);for(var n,i=a(t),u=i.length,l=0;u>l;)r.f(e,n=i[l++],t[n]);return e}},function(e,t,n){var r=n(12),o=n(76),a=n(77);e.exports=function(e){return function(t,n,i){var u,l=r(t),s=o(l.length),c=a(i,s);if(e&&n!=n){for(;s>c;)if((u=l[c++])!=u)return!0}else for(;s>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}}},function(e,t,n){var r=n(27),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){var r=n(27),o=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):a(e,t)}},function(e,t,n){var r=n(5).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(7),o=n(35),a=n(31)("IE_PROTO"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},function(e,t,n){"use strict";var r=n(81),o=n(82),a=n(18),i=n(12);e.exports=n(43)(Array,"Array",function(e,t){this._t=i(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){e.exports={default:n(84),__esModule:!0}},function(e,t,n){n(85),n(91),n(92),n(93),e.exports=n(2).Symbol},function(e,t,n){"use strict";var r=n(5),o=n(7),a=n(10),i=n(21),u=n(46),l=n(86).KEY,s=n(11),c=n(32),f=n(34),p=n(23),d=n(3),h=n(37),y=n(38),v=n(87),m=n(88),g=n(16),b=n(17),w=n(12),x=n(29),_=n(22),E=n(47),k=n(89),S=n(90),C=n(9),O=n(19),M=S.f,T=C.f,j=k.f,P=r.Symbol,A=r.JSON,N=A&&A.stringify,R=d("_hidden"),D=d("toPrimitive"),I={}.propertyIsEnumerable,L=c("symbol-registry"),z=c("symbols"),F=c("op-symbols"),U=Object.prototype,B="function"==typeof P,q=r.QObject,V=!q||!q.prototype||!q.prototype.findChild,W=a&&s(function(){return 7!=E(T({},"a",{get:function(){return T(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=M(U,t);r&&delete U[t],T(e,t,n),r&&e!==U&&T(U,t,r)}:T,H=function(e){var t=z[e]=E(P.prototype);return t._k=e,t},$=B&&"symbol"==typeof P.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof P},Y=function(e,t,n){return e===U&&Y(F,t,n),g(e),t=x(t,!0),g(n),o(z,t)?(n.enumerable?(o(e,R)&&e[R][t]&&(e[R][t]=!1),n=E(n,{enumerable:_(0,!1)})):(o(e,R)||T(e,R,_(1,{})),e[R][t]=!0),W(e,t,n)):T(e,t,n)},K=function(e,t){g(e);for(var n,r=v(t=w(t)),o=0,a=r.length;a>o;)Y(e,n=r[o++],t[n]);return e},G=function(e){var t=I.call(this,e=x(e,!0));return!(this===U&&o(z,e)&&!o(F,e))&&(!(t||!o(this,e)||!o(z,e)||o(this,R)&&this[R][e])||t)},J=function(e,t){if(e=w(e),t=x(t,!0),e!==U||!o(z,t)||o(F,t)){var n=M(e,t);return!n||!o(z,t)||o(e,R)&&e[R][t]||(n.enumerable=!0),n}},Q=function(e){for(var t,n=j(w(e)),r=[],a=0;n.length>a;)o(z,t=n[a++])||t==R||t==l||r.push(t);return r},X=function(e){for(var t,n=e===U,r=j(n?F:w(e)),a=[],i=0;r.length>i;)!o(z,t=r[i++])||n&&!o(U,t)||a.push(z[t]);return a};B||(u((P=function(){if(this instanceof P)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===U&&t.call(F,n),o(this,R)&&o(this[R],e)&&(this[R][e]=!1),W(this,e,_(1,n))};return a&&V&&W(U,e,{configurable:!0,set:t}),H(e)}).prototype,"toString",function(){return this._k}),S.f=J,C.f=Y,n(50).f=k.f=Q,n(24).f=G,n(39).f=X,a&&!n(20)&&u(U,"propertyIsEnumerable",G,!0),h.f=function(e){return H(d(e))}),i(i.G+i.W+i.F*!B,{Symbol:P});for(var Z="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Z.length>ee;)d(Z[ee++]);for(var te=O(d.store),ne=0;te.length>ne;)y(te[ne++]);i(i.S+i.F*!B,"Symbol",{for:function(e){return o(L,e+="")?L[e]:L[e]=P(e)},keyFor:function(e){if(!$(e))throw TypeError(e+" is not a symbol!");for(var t in L)if(L[t]===e)return t},useSetter:function(){V=!0},useSimple:function(){V=!1}}),i(i.S+i.F*!B,"Object",{create:function(e,t){return void 0===t?E(e):K(E(e),t)},defineProperty:Y,defineProperties:K,getOwnPropertyDescriptor:J,getOwnPropertyNames:Q,getOwnPropertySymbols:X}),A&&i(i.S+i.F*(!B||s(function(){var e=P();return"[null]"!=N([e])||"{}"!=N({a:e})||"{}"!=N(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!$(e))return m(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!$(t))return t}),r[1]=t,N.apply(A,r)}}),P.prototype[D]||n(8)(P.prototype,D,P.prototype.valueOf),f(P,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){var r=n(23)("meta"),o=n(17),a=n(7),i=n(9).f,u=0,l=Object.isExtensible||function(){return!0},s=!n(11)(function(){return l(Object.preventExtensions({}))}),c=function(e){i(e,r,{value:{i:"O"+ ++u,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,r)){if(!l(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!a(e,r)){if(!l(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return s&&f.NEED&&l(e)&&!a(e,r)&&c(e),e}}},function(e,t,n){var r=n(19),o=n(39),a=n(24);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var i,u=n(e),l=a.f,s=0;u.length>s;)l.call(e,i=u[s++])&&t.push(i);return t}},function(e,t,n){var r=n(30);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(12),o=n(50).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(r(e))}},function(e,t,n){var r=n(24),o=n(22),a=n(12),i=n(29),u=n(7),l=n(44),s=Object.getOwnPropertyDescriptor;t.f=n(10)?s:function(e,t){if(e=a(e),t=i(t,!0),l)try{return s(e,t)}catch(e){}if(u(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t){},function(e,t,n){n(38)("asyncIterator")},function(e,t,n){n(38)("observable")},function(e,t,n){"use strict";t.__esModule=!0;var r=n(95),o=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}},function(e,t,n){e.exports={default:n(96),__esModule:!0}},function(e,t,n){n(97),e.exports=n(2).Object.assign},function(e,t,n){var r=n(21);r(r.S+r.F,"Object",{assign:n(98)})},function(e,t,n){"use strict";var r=n(19),o=n(39),a=n(24),i=n(35),u=n(49),l=Object.assign;e.exports=!l||n(11)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=r})?function(e,t){for(var n=i(e),l=arguments.length,s=1,c=o.f,f=a.f;l>s;)for(var p,d=u(arguments[s++]),h=c?r(d).concat(c(d)):r(d),y=h.length,v=0;y>v;)f.call(d,p=h[v++])&&(n[p]=d[p]);return n}:l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(100),a=r(o),i=n(103),u=r(i);t.default=function(e,t){if(Array.isArray(e))return e;if((0,a.default)(Object(e)))return function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=(0,u.default)(e);!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t,n){e.exports={default:n(101),__esModule:!0}},function(e,t,n){n(36),n(26),e.exports=n(102)},function(e,t,n){var r=n(51),o=n(3)("iterator"),a=n(18);e.exports=n(2).isIterable=function(e){var t=Object(e);return void 0!==t[o]||"@@iterator"in t||a.hasOwnProperty(r(t))}},function(e,t,n){e.exports={default:n(104),__esModule:!0}},function(e,t,n){n(36),n(26),e.exports=n(105)},function(e,t,n){var r=n(16),o=n(106);e.exports=n(2).getIterator=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return r(t.call(e))}},function(e,t,n){var r=n(51),o=n(3)("iterator"),a=n(18);e.exports=n(2).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||a[r(e)]}},function(e,t,n){e.exports={default:n(108),__esModule:!0}},function(e,t,n){n(109),e.exports=n(2).Object.keys},function(e,t,n){var r=n(35),o=n(19);n(110)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){var r=n(21),o=n(2),a=n(11);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],i={};i[e]=t(n),r(r.S+r.F*a(function(){n(1)}),"Object",i)}},function(e,t,n){(function(t){function n(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function r(e,t){return!(!e||!e.length)&&function(e,t,n){if(t!=t)return function(e,t,n,r){for(var o=e.length,a=n+(r?1:-1);r?a--:++a<o;)if(t(e[a],a,e))return a;return-1}(e,o,n);for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}(e,t,0)>-1}function o(e){return e!=e}function a(e,t){for(var n=-1,r=e.length,o=0,a=[];++n<r;){var i=e[n];i!==t&&i!==C||(e[n]=C,a[o++]=n)}return a}function i(e){return!(!x(e)||function(e){return!!ie&&ie in e}(e))&&(function(e){var t=x(e)?se.call(e):"";return t==B||t==q}(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?ce:J).test(function(e){if(null!=e){try{return ue.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function u(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=function(e){return x(e)?fe(e):{}}(e.prototype),r=e.apply(n,t);return x(r)?r:n}}function l(e,t,r){var o=u(e);return function i(){for(var u=arguments.length,l=Array(u),c=u,p=d(i);c--;)l[c]=arguments[c];var h=u<3&&l[0]!==p&&l[u-1]!==p?[]:a(l,p);return(u-=h.length)<r?f(e,t,s,i.placeholder,void 0,l,h,void 0,void 0,r-u):n(this&&this!==ne&&this instanceof i?o:e,this,l)}}function s(e,t,n,r,o,i,l,c,p,h){var y=t&R,v=t&O,m=t&M,b=t&(j|P),w=t&D,x=m?void 0:u(e);return function _(){for(var E=arguments.length,k=Array(E),S=E;S--;)k[S]=arguments[S];if(b)var C=d(_),O=function(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&r++;return r}(k,C);if(r&&(k=function(e,t,n,r){for(var o=-1,a=e.length,i=n.length,u=-1,l=t.length,s=pe(a-i,0),c=Array(l+s),f=!r;++u<l;)c[u]=t[u];for(;++o<i;)(f||o<a)&&(c[n[o]]=e[o]);for(;s--;)c[u++]=e[o++];return c}(k,r,o,b)),i&&(k=function(e,t,n,r){for(var o=-1,a=e.length,i=-1,u=n.length,l=-1,s=t.length,c=pe(a-u,0),f=Array(c+s),p=!r;++o<c;)f[o]=e[o];for(var d=o;++l<s;)f[d+l]=t[l];for(;++i<u;)(p||o<a)&&(f[d+n[i]]=e[o++]);return f}(k,i,l,b)),E-=O,b&&E<h){var M=a(k,C);return f(e,t,s,_.placeholder,n,k,M,c,p,h-E)}var T=v?n:this,j=m?T[e]:e;return E=k.length,c?k=g(k,c):w&&E>1&&k.reverse(),y&&p<E&&(k.length=p),this&&this!==ne&&this instanceof _&&(j=x||u(j)),j.apply(T,k)}}function c(e,t,r,o){var a=t&O,i=u(e);return function t(){for(var u=-1,l=arguments.length,s=-1,c=o.length,f=Array(c+l),p=this&&this!==ne&&this instanceof t?i:e;++s<c;)f[s]=o[s];for(;l--;)f[s++]=arguments[++u];return n(p,a?r:this,f)}}function f(e,t,n,r,o,a,i,u,l,s){var c=t&j,f=c?i:void 0,p=c?void 0:i,d=c?a:void 0,h=c?void 0:a;t|=c?A:N,(t&=~(c?N:A))&T||(t&=~(O|M));var y=n(e,t,o,d,f,h,p,u,l,s);return y.placeholder=r,ye(y,e,t)}function p(e,t,n,r,o,a,i,f){var p=t&M;if(!p&&"function"!=typeof e)throw new TypeError(S);var d=r?r.length:0;if(d||(t&=~(A|N),r=o=void 0),i=void 0===i?i:pe(E(i),0),f=void 0===f?f:E(f),d-=o?o.length:0,t&N){var h=r,y=o;r=o=void 0}var v=[e,t,n,r,o,h,y,a,i,f];if(e=v[0],t=v[1],n=v[2],r=v[3],o=v[4],!(f=v[9]=null==v[9]?p?0:e.length:pe(v[9]-d,0))&&t&(j|P)&&(t&=~(j|P)),t&&t!=O)m=t==j||t==P?l(e,t,f):t!=A&&t!=(O|A)||o.length?s.apply(void 0,v):c(e,t,n,r);else var m=function(e,t,n){var r=t&O,o=u(e);return function t(){return(this&&this!==ne&&this instanceof t?o:e).apply(r?n:this,arguments)}}(e,t,n);return ye(m,e,t)}function d(e){return e.placeholder}function h(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return i(n)?n:void 0}function y(e){var t=e.match($);return t?t[1].split(Y):[]}function v(e,t){var n=t.length,r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(H,"{\n/* [wrapped with "+t+"] */\n")}function m(e,t){return!!(t=null==t?L:t)&&("number"==typeof e||X.test(e))&&e>-1&&e%1==0&&e<t}function g(e,t){for(var n=e.length,r=de(t.length,n),o=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}(e);r--;){var a=t[r];e[r]=m(a,n)?o[a]:void 0}return e}function b(e,t){return function(e,t){for(var n=-1,r=e?e.length:0;++n<r&&!1!==t(e[n],n,e););}(U,function(n){var o="_."+n[0];t&n[1]&&!r(e,o)&&e.push(o)}),e.sort()}function w(e,t,n){var r=p(e,j,void 0,void 0,void 0,void 0,void 0,t=n?void 0:t);return r.placeholder=w.placeholder,r}function x(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function _(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&se.call(e)==V}(e))return F;if(x(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=x(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(W,"");var n=G.test(e);return n||Q.test(e)?Z(e.slice(2),n?2:8):K.test(e)?F:+e}(e))===I||e===-I?(e<0?-1:1)*z:e==e?e:0:0===e?e:0}function E(e){var t=_(e),n=t%1;return t==t?n?t-n:t:0}function k(e){return function(){return e}}var S="Expected a function",C="__lodash_placeholder__",O=1,M=2,T=4,j=8,P=16,A=32,N=64,R=128,D=512,I=1/0,L=9007199254740991,z=1.7976931348623157e308,F=NaN,U=[["ary",R],["bind",O],["bindKey",M],["curry",j],["curryRight",P],["flip",D],["partial",A],["partialRight",N],["rearg",256]],B="[object Function]",q="[object GeneratorFunction]",V="[object Symbol]",W=/^\s+|\s+$/g,H=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,$=/\{\n\/\* \[wrapped with (.+)\] \*/,Y=/,? & /,K=/^[-+]0x[0-9a-f]+$/i,G=/^0b[01]+$/i,J=/^\[object .+?Constructor\]$/,Q=/^0o[0-7]+$/i,X=/^(?:0|[1-9]\d*)$/,Z=parseInt,ee="object"==typeof t&&t&&t.Object===Object&&t,te="object"==typeof self&&self&&self.Object===Object&&self,ne=ee||te||Function("return this")(),re=Function.prototype,oe=Object.prototype,ae=ne["__core-js_shared__"],ie=function(){var e=/[^.]+$/.exec(ae&&ae.keys&&ae.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),ue=re.toString,le=oe.hasOwnProperty,se=oe.toString,ce=RegExp("^"+ue.call(le).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),fe=Object.create,pe=Math.max,de=Math.min,he=function(){var e=h(Object,"defineProperty"),t=h.name;return t&&t.length>2?e:void 0}(),ye=he?function(e,t,n){var r=t+"";return he(e,"toString",{configurable:!0,enumerable:!1,value:k(v(r,b(y(r),n)))})}:function(e){return e};w.placeholder={},e.exports=w}).call(t,n(52))},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e.default:e}t.__esModule=!0;var o=n(113);t.threezerotwofour=r(o);var a=n(114);t.apathy=r(a);var i=n(115);t.ashes=r(i);var u=n(116);t.atelierDune=r(u);var l=n(117);t.atelierForest=r(l);var s=n(118);t.atelierHeath=r(s);var c=n(119);t.atelierLakeside=r(c);var f=n(120);t.atelierSeaside=r(f);var p=n(121);t.bespin=r(p);var d=n(122);t.brewer=r(d);var h=n(123);t.bright=r(h);var y=n(124);t.chalk=r(y);var v=n(125);t.codeschool=r(v);var m=n(126);t.colors=r(m);var g=n(127);t.default=r(g);var b=n(128);t.eighties=r(b);var w=n(129);t.embers=r(w);var x=n(130);t.flat=r(x);var _=n(131);t.google=r(_);var E=n(132);t.grayscale=r(E);var k=n(133);t.greenscreen=r(k);var S=n(134);t.harmonic=r(S);var C=n(135);t.hopscotch=r(C);var O=n(136);t.isotope=r(O);var M=n(137);t.marrakesh=r(M);var T=n(138);t.mocha=r(T);var j=n(139);t.monokai=r(j);var P=n(140);t.ocean=r(P);var A=n(141);t.paraiso=r(A);var N=n(142);t.pop=r(N);var R=n(143);t.railscasts=r(R);var D=n(144);t.shapeshifter=r(D);var I=n(145);t.solarized=r(I);var L=n(146);t.summerfruit=r(L);var z=n(147);t.tomorrow=r(z);var F=n(148);t.tube=r(F);var U=n(149);t.twilight=r(U)},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"threezerotwofour",author:"jan t. sott (http://github.com/idleberg)",base00:"#090300",base01:"#3a3432",base02:"#4a4543",base03:"#5c5855",base04:"#807d7c",base05:"#a5a2a2",base06:"#d6d5d4",base07:"#f7f7f7",base08:"#db2d20",base09:"#e8bbd0",base0A:"#fded02",base0B:"#01a252",base0C:"#b5e4f4",base0D:"#01a0e4",base0E:"#a16a94",base0F:"#cdab53"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"apathy",author:"jannik siebert (https://github.com/janniks)",base00:"#031A16",base01:"#0B342D",base02:"#184E45",base03:"#2B685E",base04:"#5F9C92",base05:"#81B5AC",base06:"#A7CEC8",base07:"#D2E7E4",base08:"#3E9688",base09:"#3E7996",base0A:"#3E4C96",base0B:"#883E96",base0C:"#963E4C",base0D:"#96883E",base0E:"#4C963E",base0F:"#3E965B"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"ashes",author:"jannik siebert (https://github.com/janniks)",base00:"#1C2023",base01:"#393F45",base02:"#565E65",base03:"#747C84",base04:"#ADB3BA",base05:"#C7CCD1",base06:"#DFE2E5",base07:"#F3F4F5",base08:"#C7AE95",base09:"#C7C795",base0A:"#AEC795",base0B:"#95C7AE",base0C:"#95AEC7",base0D:"#AE95C7",base0E:"#C795AE",base0F:"#C79595"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier dune",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)",base00:"#20201d",base01:"#292824",base02:"#6e6b5e",base03:"#7d7a68",base04:"#999580",base05:"#a6a28c",base06:"#e8e4cf",base07:"#fefbec",base08:"#d73737",base09:"#b65611",base0A:"#cfb017",base0B:"#60ac39",base0C:"#1fad83",base0D:"#6684e1",base0E:"#b854d4",base0F:"#d43552"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier forest",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)",base00:"#1b1918",base01:"#2c2421",base02:"#68615e",base03:"#766e6b",base04:"#9c9491",base05:"#a8a19f",base06:"#e6e2e0",base07:"#f1efee",base08:"#f22c40",base09:"#df5320",base0A:"#d5911a",base0B:"#5ab738",base0C:"#00ad9c",base0D:"#407ee7",base0E:"#6666ea",base0F:"#c33ff3"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier heath",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)",base00:"#1b181b",base01:"#292329",base02:"#695d69",base03:"#776977",base04:"#9e8f9e",base05:"#ab9bab",base06:"#d8cad8",base07:"#f7f3f7",base08:"#ca402b",base09:"#a65926",base0A:"#bb8a35",base0B:"#379a37",base0C:"#159393",base0D:"#516aec",base0E:"#7b59c0",base0F:"#cc33cc"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier lakeside",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)",base00:"#161b1d",base01:"#1f292e",base02:"#516d7b",base03:"#5a7b8c",base04:"#7195a8",base05:"#7ea2b4",base06:"#c1e4f6",base07:"#ebf8ff",base08:"#d22d72",base09:"#935c25",base0A:"#8a8a0f",base0B:"#568c3b",base0C:"#2d8f6f",base0D:"#257fad",base0E:"#5d5db1",base0F:"#b72dd2"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier seaside",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)",base00:"#131513",base01:"#242924",base02:"#5e6e5e",base03:"#687d68",base04:"#809980",base05:"#8ca68c",base06:"#cfe8cf",base07:"#f0fff0",base08:"#e6193c",base09:"#87711d",base0A:"#c3c322",base0B:"#29a329",base0C:"#1999b3",base0D:"#3d62f5",base0E:"#ad2bee",base0F:"#e619c3"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"bespin",author:"jan t. sott",base00:"#28211c",base01:"#36312e",base02:"#5e5d5c",base03:"#666666",base04:"#797977",base05:"#8a8986",base06:"#9d9b97",base07:"#baae9e",base08:"#cf6a4c",base09:"#cf7d34",base0A:"#f9ee98",base0B:"#54be0d",base0C:"#afc4db",base0D:"#5ea6ea",base0E:"#9b859d",base0F:"#937121"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"brewer",author:"timothée poisot (http://github.com/tpoisot)",base00:"#0c0d0e",base01:"#2e2f30",base02:"#515253",base03:"#737475",base04:"#959697",base05:"#b7b8b9",base06:"#dadbdc",base07:"#fcfdfe",base08:"#e31a1c",base09:"#e6550d",base0A:"#dca060",base0B:"#31a354",base0C:"#80b1d3",base0D:"#3182bd",base0E:"#756bb1",base0F:"#b15928"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"bright",author:"chris kempson (http://chriskempson.com)",base00:"#000000",base01:"#303030",base02:"#505050",base03:"#b0b0b0",base04:"#d0d0d0",base05:"#e0e0e0",base06:"#f5f5f5",base07:"#ffffff",base08:"#fb0120",base09:"#fc6d24",base0A:"#fda331",base0B:"#a1c659",base0C:"#76c7b7",base0D:"#6fb3d2",base0E:"#d381c3",base0F:"#be643c"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"chalk",author:"chris kempson (http://chriskempson.com)",base00:"#151515",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#b0b0b0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#f5f5f5",base08:"#fb9fb1",base09:"#eda987",base0A:"#ddb26f",base0B:"#acc267",base0C:"#12cfc0",base0D:"#6fc2ef",base0E:"#e1a3ee",base0F:"#deaf8f"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"codeschool",author:"brettof86",base00:"#232c31",base01:"#1c3657",base02:"#2a343a",base03:"#3f4944",base04:"#84898c",base05:"#9ea7a6",base06:"#a7cfa3",base07:"#b5d8f6",base08:"#2a5491",base09:"#43820d",base0A:"#a03b1e",base0B:"#237986",base0C:"#b02f30",base0D:"#484d79",base0E:"#c59820",base0F:"#c98344"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"colors",author:"mrmrs (http://clrs.cc)",base00:"#111111",base01:"#333333",base02:"#555555",base03:"#777777",base04:"#999999",base05:"#bbbbbb",base06:"#dddddd",base07:"#ffffff",base08:"#ff4136",base09:"#ff851b",base0A:"#ffdc00",base0B:"#2ecc40",base0C:"#7fdbff",base0D:"#0074d9",base0E:"#b10dc9",base0F:"#85144b"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"default",author:"chris kempson (http://chriskempson.com)",base00:"#181818",base01:"#282828",base02:"#383838",base03:"#585858",base04:"#b8b8b8",base05:"#d8d8d8",base06:"#e8e8e8",base07:"#f8f8f8",base08:"#ab4642",base09:"#dc9656",base0A:"#f7ca88",base0B:"#a1b56c",base0C:"#86c1b9",base0D:"#7cafc2",base0E:"#ba8baf",base0F:"#a16946"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"eighties",author:"chris kempson (http://chriskempson.com)",base00:"#2d2d2d",base01:"#393939",base02:"#515151",base03:"#747369",base04:"#a09f93",base05:"#d3d0c8",base06:"#e8e6df",base07:"#f2f0ec",base08:"#f2777a",base09:"#f99157",base0A:"#ffcc66",base0B:"#99cc99",base0C:"#66cccc",base0D:"#6699cc",base0E:"#cc99cc",base0F:"#d27b53"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"embers",author:"jannik siebert (https://github.com/janniks)",base00:"#16130F",base01:"#2C2620",base02:"#433B32",base03:"#5A5047",base04:"#8A8075",base05:"#A39A90",base06:"#BEB6AE",base07:"#DBD6D1",base08:"#826D57",base09:"#828257",base0A:"#6D8257",base0B:"#57826D",base0C:"#576D82",base0D:"#6D5782",base0E:"#82576D",base0F:"#825757"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"flat",author:"chris kempson (http://chriskempson.com)",base00:"#2C3E50",base01:"#34495E",base02:"#7F8C8D",base03:"#95A5A6",base04:"#BDC3C7",base05:"#e0e0e0",base06:"#f5f5f5",base07:"#ECF0F1",base08:"#E74C3C",base09:"#E67E22",base0A:"#F1C40F",base0B:"#2ECC71",base0C:"#1ABC9C",base0D:"#3498DB",base0E:"#9B59B6",base0F:"#be643c"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"google",author:"seth wright (http://sethawright.com)",base00:"#1d1f21",base01:"#282a2e",base02:"#373b41",base03:"#969896",base04:"#b4b7b4",base05:"#c5c8c6",base06:"#e0e0e0",base07:"#ffffff",base08:"#CC342B",base09:"#F96A38",base0A:"#FBA922",base0B:"#198844",base0C:"#3971ED",base0D:"#3971ED",base0E:"#A36AC7",base0F:"#3971ED"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"grayscale",author:"alexandre gavioli (https://github.com/alexx2/)",base00:"#101010",base01:"#252525",base02:"#464646",base03:"#525252",base04:"#ababab",base05:"#b9b9b9",base06:"#e3e3e3",base07:"#f7f7f7",base08:"#7c7c7c",base09:"#999999",base0A:"#a0a0a0",base0B:"#8e8e8e",base0C:"#868686",base0D:"#686868",base0E:"#747474",base0F:"#5e5e5e"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"green screen",author:"chris kempson (http://chriskempson.com)",base00:"#001100",base01:"#003300",base02:"#005500",base03:"#007700",base04:"#009900",base05:"#00bb00",base06:"#00dd00",base07:"#00ff00",base08:"#007700",base09:"#009900",base0A:"#007700",base0B:"#00bb00",base0C:"#005500",base0D:"#009900",base0E:"#00bb00",base0F:"#005500"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"harmonic16",author:"jannik siebert (https://github.com/janniks)",base00:"#0b1c2c",base01:"#223b54",base02:"#405c79",base03:"#627e99",base04:"#aabcce",base05:"#cbd6e2",base06:"#e5ebf1",base07:"#f7f9fb",base08:"#bf8b56",base09:"#bfbf56",base0A:"#8bbf56",base0B:"#56bf8b",base0C:"#568bbf",base0D:"#8b56bf",base0E:"#bf568b",base0F:"#bf5656"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"hopscotch",author:"jan t. sott",base00:"#322931",base01:"#433b42",base02:"#5c545b",base03:"#797379",base04:"#989498",base05:"#b9b5b8",base06:"#d5d3d5",base07:"#ffffff",base08:"#dd464c",base09:"#fd8b19",base0A:"#fdcc59",base0B:"#8fc13e",base0C:"#149b93",base0D:"#1290bf",base0E:"#c85e7c",base0F:"#b33508"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"isotope",author:"jan t. sott",base00:"#000000",base01:"#404040",base02:"#606060",base03:"#808080",base04:"#c0c0c0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#ffffff",base08:"#ff0000",base09:"#ff9900",base0A:"#ff0099",base0B:"#33ff00",base0C:"#00ffff",base0D:"#0066ff",base0E:"#cc00ff",base0F:"#3300ff"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"marrakesh",author:"alexandre gavioli (http://github.com/alexx2/)",base00:"#201602",base01:"#302e00",base02:"#5f5b17",base03:"#6c6823",base04:"#86813b",base05:"#948e48",base06:"#ccc37a",base07:"#faf0a5",base08:"#c35359",base09:"#b36144",base0A:"#a88339",base0B:"#18974e",base0C:"#75a738",base0D:"#477ca1",base0E:"#8868b3",base0F:"#b3588e"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"mocha",author:"chris kempson (http://chriskempson.com)",base00:"#3B3228",base01:"#534636",base02:"#645240",base03:"#7e705a",base04:"#b8afad",base05:"#d0c8c6",base06:"#e9e1dd",base07:"#f5eeeb",base08:"#cb6077",base09:"#d28b71",base0A:"#f4bc87",base0B:"#beb55b",base0C:"#7bbda4",base0D:"#8ab3b5",base0E:"#a89bb9",base0F:"#bb9584"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"monokai",author:"wimer hazenberg (http://www.monokai.nl)",base00:"#272822",base01:"#383830",base02:"#49483e",base03:"#75715e",base04:"#a59f85",base05:"#f8f8f2",base06:"#f5f4f1",base07:"#f9f8f5",base08:"#f92672",base09:"#fd971f",base0A:"#f4bf75",base0B:"#a6e22e",base0C:"#a1efe4",base0D:"#66d9ef",base0E:"#ae81ff",base0F:"#cc6633"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"ocean",author:"chris kempson (http://chriskempson.com)",base00:"#2b303b",base01:"#343d46",base02:"#4f5b66",base03:"#65737e",base04:"#a7adba",base05:"#c0c5ce",base06:"#dfe1e8",base07:"#eff1f5",base08:"#bf616a",base09:"#d08770",base0A:"#ebcb8b",base0B:"#a3be8c",base0C:"#96b5b4",base0D:"#8fa1b3",base0E:"#b48ead",base0F:"#ab7967"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"paraiso",author:"jan t. sott",base00:"#2f1e2e",base01:"#41323f",base02:"#4f424c",base03:"#776e71",base04:"#8d8687",base05:"#a39e9b",base06:"#b9b6b0",base07:"#e7e9db",base08:"#ef6155",base09:"#f99b15",base0A:"#fec418",base0B:"#48b685",base0C:"#5bc4bf",base0D:"#06b6ef",base0E:"#815ba4",base0F:"#e96ba8"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"pop",author:"chris kempson (http://chriskempson.com)",base00:"#000000",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#b0b0b0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#ffffff",base08:"#eb008a",base09:"#f29333",base0A:"#f8ca12",base0B:"#37b349",base0C:"#00aabb",base0D:"#0e5a94",base0E:"#b31e8d",base0F:"#7a2d00"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"railscasts",author:"ryan bates (http://railscasts.com)",base00:"#2b2b2b",base01:"#272935",base02:"#3a4055",base03:"#5a647e",base04:"#d4cfc9",base05:"#e6e1dc",base06:"#f4f1ed",base07:"#f9f7f3",base08:"#da4939",base09:"#cc7833",base0A:"#ffc66d",base0B:"#a5c261",base0C:"#519f50",base0D:"#6d9cbe",base0E:"#b6b3eb",base0F:"#bc9458"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"shapeshifter",author:"tyler benziger (http://tybenz.com)",base00:"#000000",base01:"#040404",base02:"#102015",base03:"#343434",base04:"#555555",base05:"#ababab",base06:"#e0e0e0",base07:"#f9f9f9",base08:"#e92f2f",base09:"#e09448",base0A:"#dddd13",base0B:"#0ed839",base0C:"#23edda",base0D:"#3b48e3",base0E:"#f996e2",base0F:"#69542d"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"solarized",author:"ethan schoonover (http://ethanschoonover.com/solarized)",base00:"#002b36",base01:"#073642",base02:"#586e75",base03:"#657b83",base04:"#839496",base05:"#93a1a1",base06:"#eee8d5",base07:"#fdf6e3",base08:"#dc322f",base09:"#cb4b16",base0A:"#b58900",base0B:"#859900",base0C:"#2aa198",base0D:"#268bd2",base0E:"#6c71c4",base0F:"#d33682"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"summerfruit",author:"christopher corley (http://cscorley.github.io/)",base00:"#151515",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#B0B0B0",base05:"#D0D0D0",base06:"#E0E0E0",base07:"#FFFFFF",base08:"#FF0086",base09:"#FD8900",base0A:"#ABA800",base0B:"#00C918",base0C:"#1faaaa",base0D:"#3777E6",base0E:"#AD00A1",base0F:"#cc6633"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"tomorrow",author:"chris kempson (http://chriskempson.com)",base00:"#1d1f21",base01:"#282a2e",base02:"#373b41",base03:"#969896",base04:"#b4b7b4",base05:"#c5c8c6",base06:"#e0e0e0",base07:"#ffffff",base08:"#cc6666",base09:"#de935f",base0A:"#f0c674",base0B:"#b5bd68",base0C:"#8abeb7",base0D:"#81a2be",base0E:"#b294bb",base0F:"#a3685a"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"london tube",author:"jan t. sott",base00:"#231f20",base01:"#1c3f95",base02:"#5a5758",base03:"#737171",base04:"#959ca1",base05:"#d9d8d8",base06:"#e7e7e8",base07:"#ffffff",base08:"#ee2e24",base09:"#f386a1",base0A:"#ffd204",base0B:"#00853e",base0C:"#85cebc",base0D:"#009ddc",base0E:"#98005d",base0F:"#b06110"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"twilight",author:"david hart (http://hart-dev.com)",base00:"#1e1e1e",base01:"#323537",base02:"#464b50",base03:"#5f5a60",base04:"#838184",base05:"#a7a7a7",base06:"#c3c3c3",base07:"#ffffff",base08:"#cf6a4c",base09:"#cda869",base0A:"#f9ee98",base0B:"#8f9d6a",base0C:"#afc4db",base0D:"#7587a6",base0E:"#9b859d",base0F:"#9b703f"},e.exports=t.default},function(e,t,n){function r(e){var t=Math.round(o(e,0,255)),n=t.toString(16);return 1==n.length?"0"+n:n}var o=n(40);e.exports=function(e){var t=4===e.length?r(255*e[3]):"";return"#"+r(e[0])+r(e[1])+r(e[2])+t}},function(e,t,n){function r(e){for(var t in l)if(0===e.indexOf(t))return l[t](e)}var o=n(152),a=n(153),i=n(154),u=n(155),l={"#":a,hsl:function(e){var t=o(e),n=u(t);return 4===t.length&&n.push(t[3]),n},rgb:i};r.rgb=i,r.hsl=o,r.hex=a,e.exports=r},function(e,t,n){function r(e,t){switch(e=parseFloat(e),t){case 0:return a(e,0,360);case 1:case 2:return a(e,0,100);case 3:return a(e,0,1)}}var o=n(53),a=n(40);e.exports=function(e){return o(e).map(r)}},function(e,t){e.exports=function(e){4!==e.length&&5!==e.length||(e=function(e){for(var t="#",n=1;n<e.length;n++){var r=e.charAt(n);t+=r+r}return t}(e));var t=[parseInt(e.substring(1,3),16),parseInt(e.substring(3,5),16),parseInt(e.substring(5,7),16)];if(9===e.length){var n=parseFloat((parseInt(e.substring(7,9),16)/255).toFixed(2));t.push(n)}return t}},function(e,t,n){function r(e,t){return t<3?-1!=e.indexOf("%")?Math.round(255*a(parseInt(e,10),0,100)/100):a(parseInt(e,10),0,255):a(parseFloat(e),0,1)}var o=n(53),a=n(40);e.exports=function(e){return o(e).map(r)}},function(e,t){e.exports=function(e){var t,n,r,o,a,i=e[0]/360,u=e[1]/100,l=e[2]/100;if(0==u)return[a=255*l,a,a];t=2*l-(n=l<.5?l*(1+u):l+u-l*u),o=[0,0,0];for(var s=0;s<3;s++)(r=i+1/3*-(s-1))<0&&r++,r>1&&r--,a=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[s]=255*a;return o}},function(e,t,n){(function(t){function n(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}function r(e){return g(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?d.call(e):"";return t==i||t==u}(e)}(e)}(e)&&p.call(e,"callee")&&(!y.call(e,"callee")||d.call(e)==a)}(e)||!!(v&&e&&e[v])}var o=9007199254740991,a="[object Arguments]",i="[object Function]",u="[object GeneratorFunction]",l="object"==typeof t&&t&&t.Object===Object&&t,s="object"==typeof self&&self&&self.Object===Object&&self,c=l||s||Function("return this")(),f=Object.prototype,p=f.hasOwnProperty,d=f.toString,h=c.Symbol,y=f.propertyIsEnumerable,v=h?h.isConcatSpreadable:void 0,m=Math.max,g=Array.isArray,b=function(e,t){return t=m(void 0===t?e.length-1:t,0),function(){for(var n=arguments,r=-1,o=m(n.length-t,0),a=Array(o);++r<o;)a[r]=n[t+r];r=-1;for(var i=Array(t+1);++r<t;)i[r]=n[r];return i[t]=a,function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}(e,this,i)}}(function(e){for(var t=(e=function e(t,o,a,i,u){var l=-1,s=t.length;for(a||(a=r),u||(u=[]);++l<s;){var c=t[l];o>0&&a(c)?o>1?e(c,o-1,a,i,u):n(u,c):i||(u[u.length]=c)}return u}(e,1)).length,o=t;o--;)if("function"!=typeof e[o])throw new TypeError("Expected a function");return function(){for(var n=0,r=t?e[n].apply(this,arguments):arguments[0];++n<t;)r=e[n].call(this,r);return r}});e.exports=b}).call(t,n(52))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.yuv2rgb=function(e){var t,n,r,o=e[0],a=e[1],i=e[2];return t=1*o+0*a+1.13983*i,n=1*o+-.39465*a+-.5806*i,r=1*o+2.02311*a+0*i,t=Math.min(Math.max(0,t),1),n=Math.min(Math.max(0,n),1),r=Math.min(Math.max(0,r),1),[255*t,255*n,255*r]},t.rgb2yuv=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[.299*t+.587*n+.114*r,-.14713*t+-.28886*n+.436*r,.615*t+-.51499*n+-.10001*r]}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"date"),u.default.createElement(s.default,o({type_name:"date"},e)),u.default.createElement("span",o({className:"date-value"},(0,f.default)(e.theme,"date-value")),e.value.toLocaleTimeString("en-us",{weekday:"short",year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})))}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"float"),u.default.createElement(s.default,o({type_name:"float"},e)),this.props.value)}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=n(13),d=r(p),h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return y.call(n),n.state={collapsed:d.default.get(e.rjvId,e.namespace,"collapsed",!0)},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=this.state.collapsed;return u.default.createElement("div",(0,f.default)(e.theme,"function"),u.default.createElement(s.default,o({type_name:"function"},e)),u.default.createElement("span",o({},(0,f.default)(e.theme,"function-value"),{className:"rjv-function-container",onClick:this.toggleCollapsed}),this.getFunctionDisplay(t)))}}]),t}(u.default.PureComponent),y=function(){var e=this;this.toggleCollapsed=function(){e.setState({collapsed:!e.state.collapsed},function(){d.default.set(e.props.rjvId,e.props.namespace,"collapsed",e.state.collapsed)})},this.getFunctionDisplay=function(t){var n=e.props;return t?u.default.createElement("span",null,e.props.value.toString().slice(9,-1).replace(/\{[\s\S]+/,""),u.default.createElement("span",{className:"function-collapsed",style:{fontWeight:"bold"}},u.default.createElement("span",null,"{"),u.default.createElement("span",(0,f.default)(n.theme,"ellipsis"),"..."),u.default.createElement("span",null,"}"))):e.props.value.toString().slice(9,-1)}};t.default=h},function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"==typeof e}function o(e){return"object"==typeof e&&null!==e}function a(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!function(e){return"number"==typeof e}(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,i,u,l,s;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}if(a(n=this._events[e]))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:u=Array.prototype.slice.call(arguments,1),n.apply(this,u)}else if(o(n))for(u=Array.prototype.slice.call(arguments,1),s=n.slice(),i=s.length,l=0;l<i;l++)s[l].apply(this,u);return!0},n.prototype.addListener=function(e,t){var i;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(i=a(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&i>0&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){function n(){this.removeListener(e,n),o||(o=!0,t.apply(this,arguments))}if(!r(t))throw TypeError("listener must be a function");var o=!1;return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,t){var n,a,i,u;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,a=-1,n===t||r(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(n)){for(u=i;u-- >0;)if(n[u]===t||n[u].listener&&n[u].listener===t){a=u;break}if(a<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(a,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(r(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){e.exports.Dispatcher=n(163)},function(e,t,n){"use strict";t.__esModule=!0;var r=n(164),o=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this._callbacks={},this._isDispatching=!1,this._isHandled={},this._isPending={},this._lastID=1}return e.prototype.register=function(e){var t="ID_"+this._lastID++;return this._callbacks[t]=e,t},e.prototype.unregister=function(e){this._callbacks[e]||r(!1),delete this._callbacks[e]},e.prototype.waitFor=function(e){this._isDispatching||r(!1);for(var t=0;t<e.length;t++){var n=e[t];this._isPending[n]?this._isHandled[n]||r(!1):(this._callbacks[n]||r(!1),this._invokeCallback(n))}},e.prototype.dispatch=function(e){this._isDispatching&&r(!1),this._startDispatching(e);try{for(var t in this._callbacks)this._isPending[t]||this._invokeCallback(t)}finally{this._stopDispatching()}},e.prototype.isDispatching=function(){return this._isDispatching},e.prototype._invokeCallback=function(e){this._isPending[e]=!0,this._callbacks[e](this._pendingPayload),this._isHandled[e]=!0},e.prototype._startDispatching=function(e){for(var t in this._callbacks)this._isPending[t]=!1,this._isHandled[t]=!1;this._pendingPayload=e,this._isDispatching=!0},e.prototype._stopDispatching=function(){delete this._pendingPayload,this._isDispatching=!1},e}();e.exports=o},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,u,l){if(r(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,a,i,u,l],f=0;(s=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"nan"),"NaN")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"null"),"NULL")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"integer"),u.default.createElement(s.default,o({type_name:"int"},e)),this.props.value)}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"regexp"),u.default.createElement(s.default,o({type_name:"regexp"},e)),this.props.value.toString())}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(4),f=n(1),p=r(f),d=n(13),h=r(d),y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggleCollapsed=function(){n.setState({collapsed:!n.state.collapsed},function(){h.default.set(n.props.rjvId,n.props.namespace,"collapsed",n.state.collapsed)})},n.state={collapsed:h.default.get(e.rjvId,e.namespace,"collapsed",!0)},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=(this.state.collapsed,this.props),t=e.collapseStringsAfterLength,n=e.theme,r=e.value,a="integer"===(0,c.toType)(t),i={style:{cursor:"default"}};return a&&r.length>t&&(i.style.cursor="pointer",this.state.collapsed&&(r=u.default.createElement("span",null,r.substring(0,t),u.default.createElement("span",(0,p.default)(n,"ellipsis")," ...")))),u.default.createElement("div",(0,p.default)(n,"string"),u.default.createElement(s.default,o({type_name:"string"},e)),u.default.createElement("span",o({className:"string-value"},i,{onClick:this.toggleCollapsed}),'"',r,'"'))}}]),t}(u.default.PureComponent);t.default=y},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"undefined"),"undefined")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(172),s=r(l),c=(n(4),n(14)),f=r(c),p=n(176),d=r(p),h=n(54),y=r(h),v=n(55),m=r(v),g=n(42),b=n(15),w=n(1),x=r(w),_=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return E.call(n),n.state={editMode:!1,editValue:"",renameKey:!1,parsedInput:{type:!1,value:null}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.variable,r=(t.src,t.singleIndent),a=t.type,i=t.theme,l=t.namespace,s=t.indentWidth,c=t.enableClipboard,f=t.onEdit,p=t.onDelete,d=t.onSelect,h=(t.rjvId,this.state.editMode);return u.default.createElement("div",o({},(0,x.default)(i,"objectKeyVal",{paddingLeft:s*r}),{className:"variable-row",key:n.name}),"array"==a?u.default.createElement("span",o({},(0,x.default)(i,"array-key"),{key:n.name+"_"+l}),n.name,u.default.createElement("div",(0,x.default)(i,"colon"),":")):u.default.createElement("span",null,u.default.createElement("span",o({},(0,x.default)(i,"object-name"),{className:"object-key",key:n.name+"_"+l}),u.default.createElement("span",{style:{verticalAlign:"top"}},'"'),u.default.createElement("span",{style:{display:"inline-block"}},n.name),u.default.createElement("span",{style:{verticalAlign:"top"}},'"')),u.default.createElement("span",(0,x.default)(i,"colon"),":")),u.default.createElement("div",o({className:"variable-value",onClick:!1===d&&!1===f?null:function(t){var r=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(l));(t.ctrlKey||t.metaKey)&&!1!==f?e.prepopInput(n):!1!==d&&(r.shift(),d(o({},n,{namespace:r})))}},(0,x.default)(i,"variableValue",{cursor:!1===d?"default":"pointer"})),this.getValue(n,h)),c?u.default.createElement(m.default,o({hidden:h,src:n.value,clickCallback:c},{theme:i,namespace:l})):null,!1!==f&&0==h?this.getEditIcon():null,!1!==p&&0==h?this.getRemoveIcon():null)}}]),t}(u.default.PureComponent),E=function(){var e=this;this.getEditIcon=function(){var t=e.props,n=t.variable,r=t.theme;return u.default.createElement("div",{className:"click-to-edit",style:{verticalAlign:"top"}},u.default.createElement(b.Edit,o({className:"click-to-edit-icon"},(0,x.default)(r,"editVarIcon"),{onClick:function(){e.prepopInput(n)}})))},this.prepopInput=function(t){if(!1!==e.props.onEdit){var n=(0,y.default)(t.value),r=(0,d.default)(n);e.setState({editMode:!0,editValue:n,parsedInput:{type:r.type,value:r.value}})}},this.getRemoveIcon=function(){var t=e.props,n=t.variable,r=t.namespace,a=t.theme,i=t.rjvId;return u.default.createElement("div",{className:"click-to-remove",style:{verticalAlign:"top"}},u.default.createElement(b.RemoveCircle,o({className:"click-to-remove-icon"},(0,x.default)(a,"removeVarIcon"),{onClick:function(){f.default.dispatch({name:"VARIABLE_REMOVED",rjvId:i,data:{name:n.name,namespace:r,existing_value:n.value,variable_removed:!0}})}})))},this.getValue=function(t,n){var r=!n&&t.type,a=e.props;switch(r){case!1:return e.getEditInput();case"string":return u.default.createElement(g.JsonString,o({value:t.value},a));case"integer":return u.default.createElement(g.JsonInteger,o({value:t.value},a));case"float":return u.default.createElement(g.JsonFloat,o({value:t.value},a));case"boolean":return u.default.createElement(g.JsonBoolean,o({value:t.value},a));case"function":return u.default.createElement(g.JsonFunction,o({value:t.value},a));case"null":return u.default.createElement(g.JsonNull,a);case"nan":return u.default.createElement(g.JsonNan,a);case"undefined":return u.default.createElement(g.JsonUndefined,a);case"date":return u.default.createElement(g.JsonDate,o({value:t.value},a));case"regexp":return u.default.createElement(g.JsonRegexp,o({value:t.value},a));default:return u.default.createElement("div",{className:"object-value"},JSON.stringify(t.value))}},this.getEditInput=function(){var t=e.props.theme,n=e.state.editValue;return u.default.createElement("div",null,u.default.createElement(s.default,o({type:"text",inputRef:function(e){return e&&e.focus()},value:n,className:"variable-editor",onChange:function(t){var n=t.target.value,r=(0,d.default)(n);e.setState({editValue:n,parsedInput:{type:r.type,value:r.value}})},onKeyDown:function(t){switch(t.key){case"Escape":e.setState({editMode:!1,editValue:""});break;case"Enter":(t.ctrlKey||t.metaKey)&&e.submitEdit(!0)}t.stopPropagation()},placeholder:"update this value"},(0,x.default)(t,"edit-input"))),u.default.createElement("div",(0,x.default)(t,"edit-icon-container"),u.default.createElement(b.RemoveCircle,o({className:"edit-cancel"},(0,x.default)(t,"cancel-icon"),{onClick:function(){e.setState({editMode:!1,editValue:""})}})),u.default.createElement(b.CheckCircle,o({className:"edit-check string-value"},(0,x.default)(t,"check-icon"),{onClick:function(){e.submitEdit()}})),u.default.createElement("div",null,e.showDetected())))},this.submitEdit=function(t){var n=e.props,r=n.variable,o=n.namespace,a=n.rjvId,i=e.state,u=i.editValue,l=i.parsedInput,s=u;t&&l.type&&(s=l.value),e.setState({editMode:!1}),f.default.dispatch({name:"VARIABLE_UPDATED",rjvId:a,data:{name:r.name,namespace:o,existing_value:r.value,new_value:s,variable_removed:!1}})},this.showDetected=function(){var t=e.props,n=t.theme,r=(t.variable,t.namespace,t.rjvId,e.state.parsedInput),a=(r.type,r.value,e.getDetectedInput());if(a)return u.default.createElement("div",null,u.default.createElement("div",(0,x.default)(n,"detected-row"),a,u.default.createElement(b.CheckCircle,{className:"edit-check detected",style:o({verticalAlign:"top",paddingLeft:"3px"},(0,x.default)(n,"check-icon").style),onClick:function(){e.submitEdit(!0)}})))},this.getDetectedInput=function(){var t=e.state.parsedInput,n=t.type,r=t.value,a=e.props,i=a.theme;if(!1!==n)switch(n.toLowerCase()){case"object":return u.default.createElement("span",null,u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"{"),u.default.createElement("span",{style:o({},(0,x.default)(i,"ellipsis").style,{cursor:"default"})},"..."),u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"}"));case"array":return u.default.createElement("span",null,u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"["),u.default.createElement("span",{style:o({},(0,x.default)(i,"ellipsis").style,{cursor:"default"})},"..."),u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"]"));case"string":return u.default.createElement(g.JsonString,o({value:r},a));case"integer":return u.default.createElement(g.JsonInteger,o({value:r},a));case"float":return u.default.createElement(g.JsonFloat,o({value:r},a));case"boolean":return u.default.createElement(g.JsonBoolean,o({value:r},a));case"function":return u.default.createElement(g.JsonFunction,o({value:r},a));case"null":return u.default.createElement(g.JsonNull,a);case"nan":return u.default.createElement(g.JsonNan,a);case"undefined":return u.default.createElement(g.JsonUndefined,a);case"date":return u.default.createElement(g.JsonDate,o({value:new Date(r)},a))}}};t.default=_},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t,n,r,o){void 0===n&&(n=!1),void 0===r&&(r=null),void 0===o&&(o=null),null===y.parentNode&&document.body.appendChild(y);var i=a(e,t,n);if(null===i)return null;var u=i.paddingSize,l=i.borderSize,s=i.boxSizing,c=i.sizingStyle;Object.keys(c).forEach(function(e){y.style[e]=c[e]}),v(y),y.value=e.value||e.placeholder||"x";var f=-1/0,p=1/0,d=y.scrollHeight;"border-box"===s?d+=l:"content-box"===s&&(d-=u),y.value="x";var h=y.scrollHeight-u;return null===r&&null===o||(null!==r&&(f=h*r,"border-box"===s&&(f=f+u+l),d=Math.max(f,d)),null!==o&&(p=h*o,"border-box"===s&&(p=p+u+l),d=Math.min(p,d))),{height:d,minHeight:f,maxHeight:p,rowCount:Math.floor(d/h)}}function a(e,t,n){if(void 0===n&&(n=!1),n&&h[t])return h[t];var r=window.getComputedStyle(e);if(null===r)return null;var o=d.reduce(function(e,t){return e[t]=r.getPropertyValue(t),e},{}),a=o["box-sizing"];if(""===a)return null;f&&"border-box"===a&&(o.width=parseFloat(o.width)+parseFloat(r["border-right-width"])+parseFloat(r["border-left-width"])+parseFloat(r["padding-right"])+parseFloat(r["padding-left"])+"px");var i=parseFloat(o["padding-bottom"])+parseFloat(o["padding-top"]),u=parseFloat(o["border-bottom-width"])+parseFloat(o["border-top-width"]),l={sizingStyle:o,paddingSize:i,borderSize:u,boxSizing:a};return n&&(h[t]=l),l}Object.defineProperty(t,"__esModule",{value:!0});var i=n(0),u=n.n(i),l=n(173),s=n.n(l),c=(Object.setPrototypeOf,"object"==typeof Reflect&&Reflect.construct,"undefined"!=typeof window&&"undefined"!=typeof document),f=!!c&&!!document.documentElement.currentStyle,p={"min-height":"0","max-height":"none",height:"0",visibility:"hidden",overflow:"hidden",position:"absolute","z-index":"-1000",top:"0",right:"0"},d=["letter-spacing","line-height","font-family","font-weight","font-size","font-style","tab-size","text-rendering","text-transform","width","text-indent","padding-top","padding-right","padding-bottom","padding-left","border-top-width","border-right-width","border-bottom-width","border-left-width","box-sizing"],h={},y=c&&document.createElement("textarea"),v=function(e){Object.keys(p).forEach(function(t){e.style.setProperty(t,p[t],"important")})};c&&v(y);var m=function(e){return void 0===e&&(e=0),function(){return++e}}(),g=function(){},b=c&&window.requestAnimationFrame?[window.requestAnimationFrame,window.cancelAnimationFrame]:[setTimeout,clearTimeout],w=b[0],x=b[1],_=function(e){function t(t){var n;return(n=e.call(this,t)||this)._resizeLock=!1,n._onRootDOMNode=function(e){n._rootDOMNode=e,n.props.inputRef(e)},n._onChange=function(e){n._controlled||n._resizeComponent(),n.props.onChange(e)},n._resizeComponent=function(e){if(void 0===e&&(e=g),void 0!==n._rootDOMNode){var t=o(n._rootDOMNode,n._uid,n.props.useCacheForDOMMeasurements,n.props.minRows,n.props.maxRows);if(null!==t){var r=t.height,a=t.minHeight,i=t.maxHeight,u=t.rowCount;n.rowCount=u,n.state.height===r&&n.state.minHeight===a&&n.state.maxHeight===i?e():n.setState({height:r,minHeight:a,maxHeight:i},e)}else e()}else e()},n.state={height:t.style&&t.style.height||0,minHeight:-1/0,maxHeight:1/0},n._uid=m(),n._controlled="string"==typeof t.value,n}!function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}(t,e);var n=t.prototype;return n.render=function(){var e=this.props,t=(e.inputRef,e.maxRows,e.minRows,e.onHeightChange,e.useCacheForDOMMeasurements,function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,["inputRef","maxRows","minRows","onHeightChange","useCacheForDOMMeasurements"]));return t.style=r({},t.style,{height:this.state.height}),Math.max(t.style.maxHeight||1/0,this.state.maxHeight)<this.state.height&&(t.style.overflow="hidden"),u.a.createElement("textarea",r({},t,{onChange:this._onChange,ref:this._onRootDOMNode}))},n.componentDidMount=function(){var e=this;this._resizeComponent(),this._resizeListener=function(){e._resizeLock||(e._resizeLock=!0,e._resizeComponent(function(){return e._resizeLock=!1}))},window.addEventListener("resize",this._resizeListener)},n.componentDidUpdate=function(e,t){var n=this;e!==this.props&&(this._clearNextFrame(),this._onNextFrameActionId=w(function(){return n._resizeComponent()})),this.state.height!==t.height&&this.props.onHeightChange(this.state.height,this)},n.componentWillUnmount=function(){var e;this._clearNextFrame(),window.removeEventListener("resize",this._resizeListener),e=this._uid,delete h[e]},n._clearNextFrame=function(){x(this._onNextFrameActionId)},t}(u.a.Component);_.propTypes={inputRef:s.a.func,maxRows:s.a.number,minRows:s.a.number,onChange:s.a.func,onHeightChange:s.a.func,useCacheForDOMMeasurements:s.a.bool,value:s.a.string},_.defaultProps={inputRef:g,onChange:g,onHeightChange:g,useCacheForDOMMeasurements:!1},t.default=_},function(e,t,n){e.exports=n(174)()},function(e,t,n){"use strict";function r(){}var o=n(175);e.exports=function(){function e(e,t,n,r,a,i){if(i!==o){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function r(e,t){return{type:e,value:t}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){e=e.trim();try{if("["===(e=JSON.stringify(JSON.parse(e)))[0])return r("array",JSON.parse(e));if("{"===e[0])return r("object",JSON.parse(e));if(e.match(/\-?\d+\.\d+/)&&e.match(/\-?\d+\.\d+/)[0]===e)return r("float",parseFloat(e));if(e.match(/\-?\d+/)&&e.match(/\-?\d+/)[0]===e)return r("integer",parseInt(e))}catch(e){}switch(e=e.toLowerCase()){case"undefined":return r("undefined",void 0);case"nan":return r("nan",NaN);case"null":return r("null",null);case"true":return r("boolean",!0);case"false":return r("boolean",!1);default:if(e=Date.parse(e))return r("date",new Date(e))}return r(!1,null)}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(14),c=r(s),f=n(13),p=r(f),d=n(178),h=r(d),y=n(1),v=(r(y),function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,u=Array(i),l=0;l<i;l++)u[l]=arguments[l];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.isValid=function(e){var t=r.props.rjvId,n=p.default.get(t,"action","new-key-request");return""!=e&&-1===Object.keys(n.existing_value).indexOf(e)},r.submit=function(e){var t=r.props.rjvId,n=p.default.get(t,"action","new-key-request");n.new_value=a({},n.existing_value),n.new_value[e]=r.props.defaultValue,c.default.dispatch({name:"VARIABLE_ADDED",rjvId:t,data:n})},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.active,n=e.theme,r=e.rjvId;return t?l.default.createElement(h.default,{rjvId:r,theme:n,isValid:this.isValid,submit:this.submit}):null}}]),t}(l.default.PureComponent));t.default=v},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(14),s=r(l),c=n(15),f=n(1),p=r(f),d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.closeModal=function(){s.default.dispatch({rjvId:n.props.rjvId,name:"RESET"})},n.submit=function(){n.props.submit(n.state.input)},n.state={input:e.input?e.input:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.theme,r=t.rjvId,a=t.isValid,i=this.state.input,l=a(i);return u.default.createElement("div",o({className:"key-modal-request"},(0,p.default)(n,"key-modal-request"),{onClick:this.closeModal}),u.default.createElement("div",o({},(0,p.default)(n,"key-modal"),{onClick:function(e){e.stopPropagation()}}),u.default.createElement("div",(0,p.default)(n,"key-modal-label"),"Key Name:"),u.default.createElement("div",{style:{position:"relative"}},u.default.createElement("input",o({},(0,p.default)(n,"key-modal-input"),{className:"key-modal-input",ref:function(e){return e&&e.focus()},spellCheck:!1,value:i,placeholder:"...",onChange:function(t){e.setState({input:t.target.value})},onKeyPress:function(t){l&&"Enter"===t.key?e.submit():"Escape"===t.key&&e.closeModal()}})),l?u.default.createElement(c.CheckCircle,o({},(0,p.default)(n,"key-modal-submit"),{className:"key-modal-submit",onClick:function(t){return e.submit()}})):null),u.default.createElement("span",(0,p.default)(n,"key-modal-cancel"),u.default.createElement(c.Add,o({},(0,p.default)(n,"key-modal-cancel-icon"),{className:"key-modal-cancel",onClick:function(){s.default.dispatch({rjvId:r,name:"RESET"})}})))))}}]),t}(u.default.PureComponent);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(14),s=r(l),c=n(13),f=(r(c),n(15)),p=n(1),d=r(p),h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=e.message,n=e.active,r=e.theme,a=e.rjvId;return n?u.default.createElement("div",o({className:"validation-failure"},(0,d.default)(r,"validation-failure"),{onClick:function(){s.default.dispatch({rjvId:a,name:"RESET"})}}),u.default.createElement("span",(0,d.default)(r,"validation-failure-label"),t),u.default.createElement(f.Add,(0,d.default)(r,"validation-failure-clear"))):null}}]),t}(u.default.PureComponent);t.default=h},function(e,t,n){var r=n(181);"string"==typeof r&&(r=[[e.i,r,""]]);var o={transform:void 0};n(183)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(182)(!1)).push([e.i,".react-json-view .copy-to-clipboard-container{vertical-align:top;display:none}.react-json-view .click-to-add,.react-json-view .click-to-edit,.react-json-view .click-to-remove{display:none}.react-json-view .object-content .variable-row:hover .click-to-edit,.react-json-view .object-content .variable-row:hover .click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-add,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.copy-to-clipboard-container,.react-json-view .variable-row:hover .copy-to-clipboard-container{display:inline-block}",""])},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([o]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=p[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(c(r.parts[a],t))}else{for(var i=[],a=0;a<r.parts.length;a++)i.push(c(r.parts[a],t));p[r.id]={id:r.id,refs:1,parts:i}}}}function o(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],u=a[1],l=a[2],s=a[3],c={css:u,media:l,sourceMap:s};r[i]?r[i].parts.push(c):n.push(r[i]={id:i,parts:[c]})}return n}function a(e,t){var n=h(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=m[m.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),m.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=m.indexOf(e);t>=0&&m.splice(t,1)}function u(e){var t=document.createElement("style");return e.attrs.type="text/css",s(t,e.attrs),a(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",s(t,e.attrs),a(e,t),t}function s(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var s=v++;n=y||(y=u(t)),r=f.bind(null,n,s,!1),o=f.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=g(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(i),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){i(n),n.href&&URL.revokeObjectURL(n.href)}):(n=u(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){i(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function f(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=b(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}var p={},d=function(e){var t;return function(){return void 0===t&&(t=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),t}}(),h=function(e){var t={};return function(e){return void 0===t[e]&&(t[e]=function(e){return document.querySelector(e)}.call(this,e)),t[e]}}(),y=null,v=0,m=[],g=n(184);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=d()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=o(e,t);return r(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var u=n[i],l=p[u.id];l.refs--,a.push(l)}e&&r(o(e,t),t);for(var i=0;i<a.length;i++){var l=a[i];if(0===l.refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete p[l.id]}}}};var b=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}}]))},function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,a=/zoo|gra/,i=/([,: ])(transform)/g,u=/,+\s*(?![^(]*[)])/g,l=/ +\s*(?![^(]*[)])/g,s=/ *[\0] */g,c=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,h=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,v=/:(read-only)/g,m=/\s+(?=[{\];=:>])/g,g=/([[}=:>])\s+/g,b=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,x=/([^\(])(:+) */g,_=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,k=/([\s\S]*?);/g,S=/-self|flex-/g,C=/[^]*?(:[rp][el]a[\w-]+)[^]*/,O=/stretch|:\s*\w+\-(?:conte|avail)/,M=/([^-])(image-set\()/,T="-webkit-",j="-moz-",P="-ms-",A=59,N=125,R=123,D=40,I=41,L=91,z=93,F=10,U=13,B=9,q=64,V=32,W=38,H=45,$=95,Y=42,K=44,G=58,J=39,Q=34,X=47,Z=62,ee=43,te=126,ne=0,re=12,oe=11,ae=107,ie=109,ue=115,le=112,se=111,ce=105,fe=99,pe=100,de=112,he=1,ye=1,ve=0,me=1,ge=1,be=1,we=0,xe=0,_e=0,Ee=[],ke=[],Se=0,Ce=null,Oe=-2,Me=-1,Te=0,je=1,Pe=2,Ae=3,Ne=0,Re=1,De="",Ie="",Le="";function ze(e,t,o,a,i){for(var u,l,c=0,f=0,p=0,d=0,m=0,g=0,b=0,w=0,_=0,k=0,S=0,C=0,O=0,M=0,$=0,we=0,ke=0,Ce=0,Oe=0,Me=o.length,Ue=Me-1,$e="",Ye="",Ke="",Ge="",Je="",Qe="";$<Me;){if(b=o.charCodeAt($),$===Ue&&f+d+p+c!==0&&(0!==f&&(b=f===X?F:X),d=p=c=0,Me++,Ue++),f+d+p+c===0){if($===Ue&&(we>0&&(Ye=Ye.replace(r,"")),Ye.trim().length>0)){switch(b){case V:case B:case A:case U:case F:break;default:Ye+=o.charAt($)}b=A}if(1===ke)switch(b){case R:case N:case A:case Q:case J:case D:case I:case K:ke=0;case B:case U:case F:case V:break;default:for(ke=0,Oe=$,m=b,$--,b=A;Oe<Me;)switch(o.charCodeAt(Oe++)){case F:case U:case A:++$,b=m,Oe=Me;break;case G:we>0&&(++$,b=m);case R:Oe=Me}}switch(b){case R:for(m=(Ye=Ye.trim()).charCodeAt(0),S=1,Oe=++$;$<Me;){switch(b=o.charCodeAt($)){case R:S++;break;case N:S--;break;case X:switch(g=o.charCodeAt($+1)){case Y:case X:$=He(g,$,Ue,o)}break;case L:b++;case D:b++;case Q:case J:for(;$++<Ue&&o.charCodeAt($)!==b;);}if(0===S)break;$++}switch(Ke=o.substring(Oe,$),m===ne&&(m=(Ye=Ye.replace(n,"").trim()).charCodeAt(0)),m){case q:switch(we>0&&(Ye=Ye.replace(r,"")),g=Ye.charCodeAt(1)){case pe:case ie:case ue:case H:u=t;break;default:u=Ee}if(Oe=(Ke=ze(t,u,Ke,g,i+1)).length,_e>0&&0===Oe&&(Oe=Ye.length),Se>0&&(u=Fe(Ee,Ye,Ce),l=We(Ae,Ke,u,t,ye,he,Oe,g,i,a),Ye=u.join(""),void 0!==l&&0===(Oe=(Ke=l.trim()).length)&&(g=0,Ke="")),Oe>0)switch(g){case ue:Ye=Ye.replace(E,Ve);case pe:case ie:case H:Ke=Ye+"{"+Ke+"}";break;case ae:Ke=(Ye=Ye.replace(h,"$1 $2"+(Re>0?De:"")))+"{"+Ke+"}",Ke=1===ge||2===ge&&qe("@"+Ke,3)?"@"+T+Ke+"@"+Ke:"@"+Ke;break;default:Ke=Ye+Ke,a===de&&(Ge+=Ke,Ke="")}else Ke="";break;default:Ke=ze(t,Fe(t,Ye,Ce),Ke,a,i+1)}Je+=Ke,C=0,ke=0,M=0,we=0,Ce=0,O=0,Ye="",Ke="",b=o.charCodeAt(++$);break;case N:case A:if((Oe=(Ye=(we>0?Ye.replace(r,""):Ye).trim()).length)>1)switch(0===M&&((m=Ye.charCodeAt(0))===H||m>96&&m<123)&&(Oe=(Ye=Ye.replace(" ",":")).length),Se>0&&void 0!==(l=We(je,Ye,t,e,ye,he,Ge.length,a,i,a))&&0===(Oe=(Ye=l.trim()).length)&&(Ye="\0\0"),m=Ye.charCodeAt(0),g=Ye.charCodeAt(1),m){case ne:break;case q:if(g===ce||g===fe){Qe+=Ye+o.charAt($);break}default:if(Ye.charCodeAt(Oe-1)===G)break;Ge+=Be(Ye,m,g,Ye.charCodeAt(2))}C=0,ke=0,M=0,we=0,Ce=0,Ye="",b=o.charCodeAt(++$)}}switch(b){case U:case F:if(f+d+p+c+xe===0)switch(k){case I:case J:case Q:case q:case te:case Z:case Y:case ee:case X:case H:case G:case K:case A:case R:case N:break;default:M>0&&(ke=1)}f===X?f=0:me+C===0&&a!==ae&&Ye.length>0&&(we=1,Ye+="\0"),Se*Ne>0&&We(Te,Ye,t,e,ye,he,Ge.length,a,i,a),he=1,ye++;break;case A:case N:if(f+d+p+c===0){he++;break}default:switch(he++,$e=o.charAt($),b){case B:case V:if(d+c+f===0)switch(w){case K:case G:case B:case V:$e="";break;default:b!==V&&($e=" ")}break;case ne:$e="\\0";break;case re:$e="\\f";break;case oe:$e="\\v";break;case W:d+f+c===0&&me>0&&(Ce=1,we=1,$e="\f"+$e);break;case 108:if(d+f+c+ve===0&&M>0)switch($-M){case 2:w===le&&o.charCodeAt($-3)===G&&(ve=w);case 8:_===se&&(ve=_)}break;case G:d+f+c===0&&(M=$);break;case K:f+p+d+c===0&&(we=1,$e+="\r");break;case Q:case J:0===f&&(d=d===b?0:0===d?b:d);break;case L:d+f+p===0&&c++;break;case z:d+f+p===0&&c--;break;case I:d+f+c===0&&p--;break;case D:if(d+f+c===0){if(0===C)switch(2*w+3*_){case 533:break;default:S=0,C=1}p++}break;case q:f+p+d+c+M+O===0&&(O=1);break;case Y:case X:if(d+c+p>0)break;switch(f){case 0:switch(2*b+3*o.charCodeAt($+1)){case 235:f=X;break;case 220:Oe=$,f=Y}break;case Y:b===X&&w===Y&&Oe+2!==$&&(33===o.charCodeAt(Oe+2)&&(Ge+=o.substring(Oe,$+1)),$e="",f=0)}}if(0===f){if(me+d+c+O===0&&a!==ae&&b!==A)switch(b){case K:case te:case Z:case ee:case I:case D:if(0===C){switch(w){case B:case V:case F:case U:$e+="\0";break;default:$e="\0"+$e+(b===K?"":"\0")}we=1}else switch(b){case D:M+7===$&&108===w&&(M=0),C=++S;break;case I:0==(C=--S)&&(we=1,$e+="\0")}break;case B:case V:switch(w){case ne:case R:case N:case A:case K:case re:case B:case V:case F:case U:break;default:0===C&&(we=1,$e+="\0")}}Ye+=$e,b!==V&&b!==B&&(k=b)}}_=w,w=b,$++}if(Oe=Ge.length,_e>0&&0===Oe&&0===Je.length&&0===t[0].length==0&&(a!==ie||1===t.length&&(me>0?Ie:Le)===t[0])&&(Oe=t.join(",").length+2),Oe>0){if(u=0===me&&a!==ae?function(e){for(var t,n,o=0,a=e.length,i=Array(a);o<a;++o){for(var u=e[o].split(s),l="",c=0,f=0,p=0,d=0,h=u.length;c<h;++c)if(!(0===(f=(n=u[c]).length)&&h>1)){if(p=l.charCodeAt(l.length-1),d=n.charCodeAt(0),t="",0!==c)switch(p){case Y:case te:case Z:case ee:case V:case D:break;default:t=" "}switch(d){case W:n=t+Ie;case te:case Z:case ee:case V:case I:case D:break;case L:n=t+n+Ie;break;case G:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(be>0){n=t+n.substring(8,f-1);break}default:(c<1||u[c-1].length<1)&&(n=t+Ie+n)}break;case K:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(x,"$1"+Ie+"$2"):t+n+Ie}l+=n}i[o]=l.replace(r,"").trim()}return i}(t):t,Se>0&&void 0!==(l=We(Pe,Ge,u,e,ye,he,Oe,a,i,a))&&0===(Ge=l).length)return Qe+Ge+Je;if(Ge=u.join(",")+"{"+Ge+"}",ge*ve!=0){switch(2!==ge||qe(Ge,2)||(ve=0),ve){case se:Ge=Ge.replace(v,":"+j+"$1")+Ge;break;case le:Ge=Ge.replace(y,"::"+T+"input-$1")+Ge.replace(y,"::"+j+"$1")+Ge.replace(y,":"+P+"input-$1")+Ge}ve=0}}return Qe+Ge+Je}function Fe(e,t,n){var r=t.trim().split(c),o=r,a=r.length,i=e.length;switch(i){case 0:case 1:for(var u=0,l=0===i?"":e[0]+" ";u<a;++u)o[u]=Ue(l,o[u],n,i).trim();break;default:u=0;var s=0;for(o=[];u<a;++u)for(var f=0;f<i;++f)o[s++]=Ue(e[f]+" ",r[u],n,i).trim()}return o}function Ue(e,t,n,r){var o=t,a=o.charCodeAt(0);switch(a<33&&(a=(o=o.trim()).charCodeAt(0)),a){case W:switch(me+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(f,"$1"+e.trim())}break;case G:switch(o.charCodeAt(1)){case 103:if(be>0&&me>0)return o.replace(p,"$1").replace(f,"$1"+Le);break;default:return e.trim()+o.replace(f,"$1"+e.trim())}default:if(n*me>0&&o.indexOf("\f")>0)return o.replace(f,(e.charCodeAt(0)===G?"":"$1")+e.trim())}return e+o}function Be(e,t,n,r){var s,c=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Re){case 0:break;case H:if(110!==e.charCodeAt(10))break;default:for(var a=o.split((o="",u)),i=0,n=0,t=a.length;i<t;n=0,++i){for(var s=a[i],c=s.split(l);s=c[n];){var f=s.charCodeAt(0);if(1===Re&&(f>q&&f<90||f>96&&f<123||f===$||f===H&&s.charCodeAt(1)!==H))switch(isNaN(parseFloat(s))+(-1!==s.indexOf("("))){case 1:switch(s){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:s+=De}}c[n++]=s}o+=(0===i?"":",")+c.join(" ")}}return o=r+o+";",1===ge||2===ge&&qe(o,1)?T+o+o:o}(f);if(0===ge||2===ge&&!qe(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?T+f+f:f;case 951:return 116===f.charCodeAt(3)?T+f+f:f;case 963:return 110===f.charCodeAt(5)?T+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return T+f+f;case 978:return T+f+j+f+f;case 1019:case 983:return T+f+j+f+P+f+f;case 883:return f.charCodeAt(8)===H?T+f+f:f.indexOf("image-set(",11)>0?f.replace(M,"$1"+T+"$2")+f:f;case 932:if(f.charCodeAt(4)===H)switch(f.charCodeAt(5)){case 103:return T+"box-"+f.replace("-grow","")+T+f+P+f.replace("grow","positive")+f;case 115:return T+f+P+f.replace("shrink","negative")+f;case 98:return T+f+P+f.replace("basis","preferred-size")+f}return T+f+P+f+f;case 964:return T+f+P+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return s=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),T+"box-pack"+s+T+f+P+"flex-pack"+s+f;case 1005:return a.test(f)?f.replace(o,":"+T)+f.replace(o,":"+j)+f:f;case 1e3:switch(c=(s=f.substring(13).trim()).indexOf("-")+1,s.charCodeAt(0)+s.charCodeAt(c)){case 226:s=f.replace(_,"tb");break;case 232:s=f.replace(_,"tb-rl");break;case 220:s=f.replace(_,"lr");break;default:return f}return T+f+P+s+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(c=(f=e).length-10,p=(s=(33===f.charCodeAt(c)?f.substring(0,c):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|s.charCodeAt(7))){case 203:if(s.charCodeAt(8)<111)break;case 115:f=f.replace(s,T+s)+";"+f;break;case 207:case 102:f=f.replace(s,T+(p>102?"inline-":"")+"box")+";"+f.replace(s,T+s)+";"+f.replace(s,P+s+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===H)switch(f.charCodeAt(6)){case 105:return s=f.replace("-items",""),T+f+T+"box-"+s+P+"flex-"+s+f;case 115:return T+f+P+"flex-item-"+f.replace(S,"")+f;default:return T+f+P+"flex-line-pack"+f.replace("align-content","").replace(S,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==H||122===f.charCodeAt(4))break;case 931:case 953:if(!0===O.test(e))return 115===(s=e.substring(e.indexOf(":")+1)).charCodeAt(0)?Be(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(s,T+s)+f.replace(s,j+s.replace("fill-",""))+f;break;case 962:if(f=T+f+(102===f.charCodeAt(5)?P+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(i,"$1"+T+"$2")+f}return f}function qe(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Ce(2!==t?r:r.replace(C,"$1"),o,t)}function Ve(e,t){var n=Be(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(k," or ($1)").substring(4):"("+t+")"}function We(e,t,n,r,o,a,i,u,l,s){for(var c,f=0,p=t;f<Se;++f)switch(c=ke[f].call(Ye,e,p,n,r,o,a,i,u,l,s)){case void 0:case!1:case!0:case null:break;default:p=c}if(p!==t)return p}function He(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case X:if(e===Y&&r.charCodeAt(o-1)===Y&&t+2!==o)return o+1;break;case F:if(e===X)return o+1}return o}function $e(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Re=0|n;break;case"global":be=0|n;break;case"cascade":me=0|n;break;case"compress":we=0|n;break;case"semicolon":xe=0|n;break;case"preserve":_e=0|n;break;case"prefix":Ce=null,n?"function"!=typeof n?ge=1:(ge=2,Ce=n):ge=0}}return $e}function Ye(t,n){if(void 0!==this&&this.constructor===Ye)return e(t);var o=t,a=o.charCodeAt(0);a<33&&(a=(o=o.trim()).charCodeAt(0)),Re>0&&(De=o.replace(d,a===L?"":"-")),a=1,1===me?Le=o:Ie=o;var i,u=[Le];Se>0&&void 0!==(i=We(Me,n,u,u,ye,he,0,0,0,0))&&"string"==typeof i&&(n=i);var l=ze(Ee,u,n,0,0);return Se>0&&void 0!==(i=We(Oe,l,u,u,ye,he,l.length,0,0,0))&&"string"!=typeof(l=i)&&(a=0),De="",Le="",Ie="",ve=0,ye=1,he=1,we*a==0?l:l.replace(r,"").replace(m,"").replace(g,"$1").replace(b,"$1").replace(w," ")}return Ye.use=function e(t){switch(t){case void 0:case null:Se=ke.length=0;break;default:if("function"==typeof t)ke[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Ne=0|!!t}return e},Ye.set=$e,void 0!==t&&$e(t),Ye}(null)},function(e,t,n){"use strict";var r=function(e,t){return e===t};t.a=function(e,t){var n;void 0===t&&(t=r);var o,a=[],i=!1,u=function(e,n){return t(e,a[n])};return function(){for(var t=arguments.length,r=new Array(t),l=0;l<t;l++)r[l]=arguments[l];return i&&n===this&&r.length===a.length&&r.every(u)?o:(o=e.apply(this,r),i=!0,n=this,a=r,o)}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var s in n=Object(arguments[l]))o.call(n,s)&&(u[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(u[i[c]]=n[i[c]])}}return u}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(n){var r=new Uint8Array(16);e.exports=function(){return n(r),r}}else{var o=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),o[t]=e>>>((3&t)<<3)&255;return o}}},function(e,t){for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);e.exports=function(e,t){var r=t||0,o=n;return[o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]]].join("")}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=l(n(41)),a=l(n(0)),i=l(n(2)),u=(l(n(42)),n(43));function l(e){return e&&e.__esModule?e:{default:e}}i.default.any,i.default.func,i.default.node;var s=function(e){function t(n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,n,o));return a.performAppear=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillAppear?t.componentWillAppear(a._handleDoneAppearing.bind(a,e,t)):a._handleDoneAppearing(e,t)},a._handleDoneAppearing=function(e,t){t.componentDidAppear&&t.componentDidAppear(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)||a.performLeave(e,t)},a.performEnter=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillEnter?t.componentWillEnter(a._handleDoneEntering.bind(a,e,t)):a._handleDoneEntering(e,t)},a._handleDoneEntering=function(e,t){t.componentDidEnter&&t.componentDidEnter(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)||a.performLeave(e,t)},a.performLeave=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillLeave?t.componentWillLeave(a._handleDoneLeaving.bind(a,e,t)):a._handleDoneLeaving(e,t)},a._handleDoneLeaving=function(e,t){t.componentDidLeave&&t.componentDidLeave(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)?a.keysToEnter.push(e):a.setState(function(t){var n=r({},t.children);return delete n[e],{children:n}})},a.childRefs=Object.create(null),a.state={children:(0,u.getChildMapping)(n.children)},a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},t.prototype.componentDidMount=function(){var e=this.state.children;for(var t in e)e[t]&&this.performAppear(t,this.childRefs[t])},t.prototype.componentWillReceiveProps=function(e){var t=(0,u.getChildMapping)(e.children),n=this.state.children;for(var r in this.setState({children:(0,u.mergeChildMappings)(n,t)}),t){var o=n&&n.hasOwnProperty(r);!t[r]||o||this.currentlyTransitioningKeys[r]||this.keysToEnter.push(r)}for(var a in n){var i=t&&t.hasOwnProperty(a);!n[a]||i||this.currentlyTransitioningKeys[a]||this.keysToLeave.push(a)}},t.prototype.componentDidUpdate=function(){var e=this,t=this.keysToEnter;this.keysToEnter=[],t.forEach(function(t){return e.performEnter(t,e.childRefs[t])});var n=this.keysToLeave;this.keysToLeave=[],n.forEach(function(t){return e.performLeave(t,e.childRefs[t])})},t.prototype.render=function(){var e=this,t=[],n=function(n){var r=e.state.children[n];if(r){var i="string"!=typeof r.ref,u=e.props.childFactory(r),l=function(t){e.childRefs[n]=t};u===r&&i&&(l=(0,o.default)(r.ref,l)),t.push(a.default.cloneElement(u,{key:n,ref:l}))}};for(var i in this.state.children)n(i);var u=r({},this.props);return delete u.transitionLeave,delete u.transitionName,delete u.transitionAppear,delete u.transitionEnter,delete u.childFactory,delete u.transitionLeaveTimeout,delete u.transitionEnterTimeout,delete u.transitionAppearTimeout,delete u.component,a.default.createElement(this.props.component,u,t)},t}(a.default.Component);s.displayName="TransitionGroup",s.propTypes={},s.defaultProps={component:"span",childFactory:function(e){return e}},t.default=s,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=r,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.nameShape=void 0,t.transitionTimeout=function(e){var t="transition"+e+"Timeout",n="transition"+e;return function(e){if(e[n]){if(null==e[t])return new Error(t+" wasn't supplied to CSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!=typeof e[t])return new Error(t+" must be a number (in milliseconds)")}return null}};o(n(0));var r=o(n(2));function o(e){return e&&e.__esModule?e:{default:e}}t.nameShape=r.default.oneOfType([r.default.string,r.default.shape({enter:r.default.string,leave:r.default.string,active:r.default.string}),r.default.shape({enter:r.default.string,enterActive:r.default.string,leave:r.default.string,leaveActive:r.default.string,appear:r.default.string,appearActive:r.default.string})])},function(e,t,n){var r,o,a,i,u,l,s;e.exports=(r=n(0),o=n(2),a=n(27),i=n(28),u=n(31),l=n(36),s=n(39),function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=6)}([function(e,t){e.exports=r},function(e,t){e.exports=o},function(e,t){e.exports=a},function(e,t){e.exports=i},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([o]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=d[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(f(r.parts[a],t))}else{for(var i=[],a=0;a<r.parts.length;a++)i.push(f(r.parts[a],t));d[r.id]={id:r.id,refs:1,parts:i}}}}function o(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],u=a[1],l=a[2],s=a[3],c={css:u,media:l,sourceMap:s};r[i]?r[i].parts.push(c):n.push(r[i]={id:i,parts:[c]})}return n}function a(e,t){var n=y(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=g[g.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),g.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=y(e.insertAt.before,n);n.insertBefore(t,o)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=g.indexOf(e);t>=0&&g.splice(t,1)}function u(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var n=c();n&&(e.attrs.nonce=n)}return s(t,e.attrs),a(e,t),t}function l(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",s(t,e.attrs),a(e,t),t}function s(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(){return n.nc}function f(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var s=m++;n=v||(v=u(t)),r=p.bind(null,n,s,!1),o=p.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=b(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(i),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){i(n),n.href&&URL.revokeObjectURL(n.href)}):(n=u(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){i(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function p(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}var d={},h=function(e){var t;return function(){return void 0===t&&(t=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),t}}(),y=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),v=null,m=0,g=[],b=n(17);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=h()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=o(e,t);return r(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var u=n[i],l=d[u.id];l.refs--,a.push(l)}e&&r(o(e,t),t);for(var i=0;i<a.length;i++){var l=a[i];if(0===l.refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete d[l.id]}}}};var w=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.treeUtil=t.Tree=void 0;var r=n(7),o=function(e){return e&&e.__esModule?e:{default:e}}(r),a=n(23),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(a);t.Tree=o.default,t.treeUtil=i,t.default=o.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2),p=n(8),d=r(p),h=n(9),y=r(h),v=n(3),m=r(v),g=n(10),b=r(g),w=n(12),x=r(w),_=n(18),E=r(_);n(21);var k=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={data:r.assignInternalProperties((0,d.default)(r.props.data)),rd3tSvgClassName:"_"+m.default.v4(),rd3tGClassName:"_"+m.default.v4()},r.internalState={initialRender:!0,targetNode:null,isTransitioning:!1,d3:{scale:r.props.zoom,translate:r.props.translate}},r.handleNodeToggle=function(e,t){var n=(0,d.default)(r.state.data),o=r.findNodesById(e,n,[]),a=o[0];t.persist(),r.props.collapsible&&!r.state.isTransitioning?(a._collapsed?(r.expandNode(a),r.props.shouldCollapseNeighborNodes&&r.collapseNeighborNodes(a,n)):r.collapseNode(a),r.setState({data:n,isTransitioning:!0},function(){return r.handleOnClickCb(a,t)}),setTimeout(function(){return r.setState({isTransitioning:!1})},r.props.transitionDuration+10),r.internalState.targetNode=a):r.handleOnClickCb(a,t)},r.handleOnClickCb=function(e,t){var n=r.props.onClick;n&&"function"==typeof n&&n((0,d.default)(e),t)},r.handleOnMouseOverCb=function(e,t){var n=r.props.onMouseOver;if(n&&"function"==typeof n){var o=(0,d.default)(r.state.data),a=r.findNodesById(e,o,[]),i=a[0];t.persist(),n((0,d.default)(i),t)}},r.handleOnMouseOutCb=function(e,t){var n=r.props.onMouseOut;if(n&&"function"==typeof n){var o=(0,d.default)(r.state.data),a=r.findNodesById(e,o,[]),i=a[0];t.persist(),n((0,d.default)(i),t)}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentWillMount",value:function(){this.internalState.d3=this.calculateD3Geometry(this.props)}},{key:"componentDidMount",value:function(){this.bindZoomListener(this.props),this.internalState.initialRender=!1}},{key:"componentDidUpdate",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.bindZoomListener(this.props),"function"==typeof this.props.onUpdate&&(this.props.onUpdate({node:this.internalState.targetNode?(0,d.default)(this.internalState.targetNode):null,zoom:this.internalState.d3.scale,translate:this.internalState.d3.translate}),this.internalState.targetNode=null)}},{key:"componentWillReceiveProps",value:function(e){this.props.data!==e.data&&this.setState({data:this.assignInternalProperties((0,d.default)(e.data))}),this.internalState.d3=this.calculateD3Geometry(e),(0,y.default)(this.props.translate,e.translate)&&(0,y.default)(this.props.scaleExtent,e.scaleExtent)&&this.props.zoom===e.zoom||this.bindZoomListener(e)}},{key:"setInitialTreeDepth",value:function(e,t){e.forEach(function(e){e._collapsed=e.depth>=t})}},{key:"bindZoomListener",value:function(e){var t=this,n=e.zoomable,r=e.scaleExtent,o=e.translate,a=e.zoom,i=e.onUpdate,u=this.state,l=u.rd3tSvgClassName,s=u.rd3tGClassName,c=(0,f.select)("."+l),p=(0,f.select)("."+s);n&&c.call(f.behavior.zoom().scaleExtent([r.min,r.max]).on("zoom",function(){p.attr("transform","translate("+f.event.translate+") scale("+f.event.scale+")"),"function"==typeof i&&(i({node:null,zoom:f.event.scale,translate:{x:f.event.translate[0],y:f.event.translate[1]}}),t.internalState.d3.scale=f.event.scale,t.internalState.d3.translate={x:f.event.translate[0],y:f.event.translate[1]})}).scale(a).translate([o.x,o.y]))}},{key:"assignInternalProperties",value:function(e){var t=this;return(Array.isArray(e)?e:[e]).map(function(e){return e.id=m.default.v4(),void 0===e._collapsed&&(e._collapsed=!1),e.children&&e.children.length>0&&(e.children=t.assignInternalProperties(e.children),e._children=e.children),e})}},{key:"findNodesById",value:function(e,t,n){var r=this;return n.length>0?n:(n=n.concat(t.filter(function(t){return t.id===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesById(e,t._children,n))}),n)}},{key:"findNodesAtDepth",value:function(e,t,n){var r=this;return n=n.concat(t.filter(function(t){return t.depth===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesAtDepth(e,t._children,n))}),n}},{key:"collapseNode",value:function(e){var t=this;e._collapsed=!0,e._children&&e._children.length>0&&e._children.forEach(function(e){t.collapseNode(e)})}},{key:"expandNode",value:function(e){e._collapsed=!1}},{key:"collapseNeighborNodes",value:function(e,t){var n=this;this.findNodesAtDepth(e.depth,t,[]).filter(function(t){return t.id!==e.id}).forEach(function(e){return n.collapseNode(e)})}},{key:"generateTree",value:function(){var e=this.props,t=e.initialDepth,n=e.useCollapseData,r=e.depthFactor,o=e.separation,a=e.nodeSize,i=e.orientation,u=f.layout.tree().nodeSize("horizontal"===i?[a.y,a.x]:[a.x,a.y]).separation(function(e,t){return e.parent.id===t.parent.id?o.siblings:o.nonSiblings}).children(function(e){return e._collapsed?null:e._children}),l=this.state.data[0],s=u.nodes(l);return!1===n&&void 0!==t&&this.internalState.initialRender&&(this.setInitialTreeDepth(s,t),s=u.nodes(l)),r&&s.forEach(function(e){e.y=e.depth*r}),{nodes:s,links:u.links(s)}}},{key:"calculateD3Geometry",value:function(e){var t=void 0;return t=e.zoom>e.scaleExtent.max?e.scaleExtent.max:e.zoom<e.scaleExtent.min?e.scaleExtent.min:e.zoom,{translate:e.translate,scale:t}}},{key:"render",value:function(){var e=this,t=this.generateTree(),n=t.nodes,r=t.links,o=this.state,i=o.rd3tSvgClassName,u=o.rd3tGClassName,s=this.props,c=s.nodeSvgShape,f=s.nodeLabelComponent,p=s.orientation,d=s.pathFunc,h=s.transitionDuration,y=s.zoomable,v=s.textLayout,g=s.nodeSize,w=s.depthFactor,_=s.initialDepth,k=s.separation,S=s.circleRadius,C=s.allowForeignObjects,O=s.styles,M=this.internalState.d3,T=M.translate,j=M.scale,P=a({},g,k,{depthFactor:w,initialDepth:_});return l.default.createElement("div",{className:"rd3t-tree-container "+(y?"rd3t-grabbable":void 0)},l.default.createElement("svg",{className:i,width:"100%",height:"100%"},l.default.createElement(b.default,{transitionDuration:h,component:"g",className:u,transform:"translate("+T.x+","+T.y+") scale("+j+")"},r.map(function(e){return l.default.createElement(E.default,{key:m.default.v4(),orientation:p,pathFunc:d,linkData:e,transitionDuration:h,styles:O.links})}),n.map(function(t){return l.default.createElement(x.default,{key:t.id,nodeSvgShape:a({},c,t.nodeSvgShape),nodeLabelComponent:f,nodeSize:g,orientation:p,transitionDuration:h,nodeData:t,name:t.name,attributes:t.attributes,onClick:e.handleNodeToggle,onMouseOver:e.handleOnMouseOverCb,onMouseOut:e.handleOnMouseOutCb,textLayout:v,circleRadius:S,subscriptions:P,allowForeignObjects:C,styles:O.nodes})}))))}}]),t}(l.default.Component);t.default=k,k.defaultProps={nodeSvgShape:{shape:"circle",shapeProps:{r:10}},nodeLabelComponent:null,onClick:void 0,onMouseOver:void 0,onMouseOut:void 0,onUpdate:void 0,orientation:"horizontal",translate:{x:0,y:0},pathFunc:"diagonal",transitionDuration:500,depthFactor:void 0,collapsible:!0,useCollapseData:!1,initialDepth:void 0,zoomable:!0,zoom:1,scaleExtent:{min:.1,max:1},nodeSize:{x:140,y:140},separation:{siblings:1,nonSiblings:2},textLayout:{textAnchor:"start",x:10,y:-10,transform:void 0},allowForeignObjects:!1,shouldCollapseNeighborNodes:!1,circleRadius:void 0,styles:{}},k.propTypes={data:c.default.oneOfType([c.default.array,c.default.object]).isRequired,nodeSvgShape:c.default.shape({shape:c.default.string,shapeProps:c.default.object}),nodeLabelComponent:c.default.object,onClick:c.default.func,onMouseOver:c.default.func,onMouseOut:c.default.func,onUpdate:c.default.func,orientation:c.default.oneOf(["horizontal","vertical"]),translate:c.default.shape({x:c.default.number,y:c.default.number}),pathFunc:c.default.oneOfType([c.default.oneOf(["diagonal","elbow","straight"]),c.default.func]),transitionDuration:c.default.number,depthFactor:c.default.number,collapsible:c.default.bool,useCollapseData:c.default.bool,initialDepth:c.default.number,zoomable:c.default.bool,zoom:c.default.number,scaleExtent:c.default.shape({min:c.default.number,max:c.default.number}),nodeSize:c.default.shape({x:c.default.number,y:c.default.number}),separation:c.default.shape({siblings:c.default.number,nonSiblings:c.default.number}),textLayout:c.default.object,allowForeignObjects:c.default.bool,shouldCollapseNeighborNodes:c.default.bool,circleRadius:c.default.number,styles:c.default.shape({nodes:c.default.object,links:c.default.object})},e.exports=t.default},function(e,t){e.exports=u},function(e,t){e.exports=l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=n(11),f=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={enableTransitions:r.props.transitionDuration>0},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentWillReceiveProps",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.setState({enableTransitions:e.transitionDuration>0})}},{key:"render",value:function(){return this.state.enableTransitions?u.default.createElement(c.TransitionGroup,{component:this.props.component,className:this.props.className,transform:this.props.transform},this.props.children):u.default.createElement("g",{className:this.props.className,transform:this.props.transform},this.props.children)}}]),t}(u.default.Component);t.default=f,f.defaultProps={component:"g"},f.propTypes={transitionDuration:s.default.number.isRequired,component:s.default.string,className:s.default.string.isRequired,transform:s.default.string.isRequired,children:s.default.array.isRequired},e.exports=t.default},function(e,t){e.exports=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2),p=n(13),d=r(p),h=n(14),y=r(h);n(15);var v=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,u=Array(i),s=0;s<i;s++)u[s]=arguments[s];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.state={transform:r.setTransform(r.props.nodeData,r.props.orientation,!0),initialStyle:{opacity:0}},r.shouldNodeTransform=function(e,t){return t.subscriptions!==e.subscriptions||t.nodeData.x!==e.nodeData.x||t.nodeData.y!==e.nodeData.y||t.orientation!==e.orientation},r.renderNodeElement=function(e){var t=r.props,n=t.circleRadius,o=t.nodeSvgShape;return n?l.default.createElement("circle",{r:n,style:e.circle}):"none"===o.shape?null:l.default.createElement(o.shape,a({},e.circle,o.shapeProps))},r.handleClick=function(e){r.props.onClick(r.props.nodeData.id,e)},r.handleOnMouseOver=function(e){r.props.onMouseOver(r.props.nodeData.id,e)},r.handleOnMouseOut=function(e){r.props.onMouseOut(r.props.nodeData.id,e)},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){var e=this.props,t=e.nodeData,n=e.orientation,r=e.transitionDuration,o=this.setTransform(t,n);this.applyTransform(o,r)}},{key:"componentWillUpdate",value:function(e){var t=this.setTransform(e.nodeData,e.orientation);this.applyTransform(t,e.transitionDuration)}},{key:"shouldComponentUpdate",value:function(e){return this.shouldNodeTransform(this.props,e)}},{key:"setTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.x,o=e.y,a=e.parent;if(n){var i=a?a.x:0,u=a?a.y:0;return"horizontal"===t?"translate("+u+","+i+")":"translate("+i+","+u+")"}return"horizontal"===t?"translate("+o+","+r+")":"translate("+r+","+o+")"}},{key:"applyTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){};0===t?((0,f.select)(this.node).attr("transform",e).style("opacity",n),r()):(0,f.select)(this.node).transition().duration(t).attr("transform",e).style("opacity",n).each("end",r)}},{key:"componentWillLeave",value:function(e){var t=this.props,n=t.nodeData,r=t.orientation,o=t.transitionDuration,a=this.setTransform(n,r,!0);this.applyTransform(a,o,0,e)}},{key:"render",value:function(){var e=this,t=this.props,n=t.nodeData,r=t.nodeSize,o=t.nodeLabelComponent,i=t.allowForeignObjects,u=t.styles,s=n._children?a({},u.node):a({},u.leafNode);return l.default.createElement("g",{id:n.id,ref:function(t){e.node=t},style:this.state.initialStyle,className:n._children?"nodeBase":"leafNodeBase",transform:this.state.transform,onClick:this.handleClick,onMouseOver:this.handleOnMouseOver,onMouseOut:this.handleOnMouseOut},this.renderNodeElement(s),i&&o?l.default.createElement(y.default,a({nodeData:n,nodeSize:r},o)):l.default.createElement(d.default,a({},this.props,{nodeStyle:s})))}}]),t}(l.default.Component);t.default=v,v.defaultProps={nodeLabelComponent:null,attributes:void 0,circleRadius:void 0,styles:{node:{circle:{},name:{},attributes:{}},leafNode:{circle:{},name:{},attributes:{}}}},v.propTypes={nodeData:c.default.object.isRequired,nodeSvgShape:c.default.object.isRequired,nodeLabelComponent:c.default.object,nodeSize:c.default.object.isRequired,orientation:c.default.oneOf(["horizontal","vertical"]).isRequired,transitionDuration:c.default.number.isRequired,onClick:c.default.func.isRequired,onMouseOver:c.default.func.isRequired,onMouseOut:c.default.func.isRequired,name:c.default.string.isRequired,attributes:c.default.object,textLayout:c.default.object.isRequired,subscriptions:c.default.object.isRequired,allowForeignObjects:c.default.bool.isRequired,circleRadius:c.default.number,styles:c.default.object},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(3),l=r(u),s=n(1),c=r(s),f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){var e=this.props,t=e.name,n=e.nodeStyle,r=e.textLayout,o=e.attributes;return i.default.createElement("g",null,i.default.createElement("text",{className:"nodeNameBase",style:n.name,textAnchor:r.textAnchor,x:r.x,y:r.y,transform:r.transform,dy:".35em"},t),i.default.createElement("text",{className:"nodeAttributesBase",y:r.y+10,textAnchor:r.textAnchor,transform:r.transform,style:n.attributes},o&&Object.keys(o).map(function(e){return i.default.createElement("tspan",{x:r.x,dy:"1.2em",key:l.default.v4()},e,": ",o[e])})))}}]),t}(i.default.PureComponent);t.default=f,f.defaultProps={attributes:void 0},f.propTypes={name:c.default.string.isRequired,attributes:c.default.object,textLayout:c.default.object.isRequired,nodeStyle:c.default.object.isRequired},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.BASE_MARGIN=void 0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=t.BASE_MARGIN=24,f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=e.nodeData,n=e.nodeSize,r=e.render,a=e.foreignObjectWrapper;return u.default.createElement("foreignObject",o({width:n.x-c,height:n.y-c},a),u.default.cloneElement(r,{nodeData:t}))}}]),t}(u.default.PureComponent);t.default=f,f.defaultProps={foreignObjectWrapper:{}},f.propTypes={render:s.default.oneOfType([s.default.element,s.default.node]).isRequired,nodeData:s.default.object.isRequired,nodeSize:s.default.shape({x:s.default.number,y:s.default.number}).isRequired,foreignObjectWrapper:s.default.object}},function(e,t,n){var r=n(16);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".nodeBase {\n  cursor: pointer;\n  fill: #777;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.leafNodeBase {\n  cursor: pointer;\n  fill: transparent;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.nodeNameBase {\n  fill: #000;\n  stroke: #000;\n  stroke-width: 1;\n}\n\n.nodeAttributesBase {\n  fill: #777;\n  stroke: #777;\n  stroke-width: 1;\n  font-size: smaller;\n}\n",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2);n(19);var p=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={initialStyle:{opacity:0}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){this.applyOpacity(1,this.props.transitionDuration)}},{key:"componentWillLeave",value:function(e){this.applyOpacity(0,this.props.transitionDuration,e)}},{key:"applyOpacity",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};0===t?((0,f.select)(this.link).style("opacity",e),n()):(0,f.select)(this.link).transition().duration(t).style("opacity",e).each("end",n)}},{key:"drawDiagonalPath",value:function(e,t){return f.svg.diagonal().projection(function(e){return"horizontal"===t?[e.y,e.x]:[e.x,e.y]})(e)}},{key:"drawStraightPath",value:function(e,t){var n=f.svg.line().interpolate("basis").x(function(e){return e.x}).y(function(e){return e.y}),r=[{x:e.source.x,y:e.source.y},{x:e.target.x,y:e.target.y}];return"horizontal"===t&&(r=[{x:e.source.y,y:e.source.x},{x:e.target.y,y:e.target.x}]),n(r)}},{key:"drawElbowPath",value:function(e,t){return"horizontal"===t?"M"+e.source.y+","+e.source.x+"V"+e.target.x+"H"+e.target.y:"M"+e.source.x+","+e.source.y+"V"+e.target.y+"H"+e.target.x}},{key:"drawPath",value:function(){var e=this.props,t=e.linkData,n=e.orientation,r=e.pathFunc;return"function"==typeof r?r(t,n):"elbow"===r?this.drawElbowPath(t,n):"straight"===r?this.drawStraightPath(t,n):this.drawDiagonalPath(t,n)}},{key:"render",value:function(){var e=this,t=this.props.styles;return l.default.createElement("path",{ref:function(t){e.link=t},style:a({},this.state.initialStyle,t),className:"linkBase",d:this.drawPath()})}}]),t}(l.default.PureComponent);t.default=p,p.defaultProps={styles:{}},p.propTypes={linkData:c.default.object.isRequired,orientation:c.default.oneOf(["horizontal","vertical"]).isRequired,pathFunc:c.default.oneOfType([c.default.oneOf(["diagonal","elbow","straight"]),c.default.func]).isRequired,transitionDuration:c.default.number.isRequired,styles:c.default.object},e.exports=t.default},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".linkBase {\n  fill: none;\n  stroke: #000;\n}",""])},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".rd3t-tree-container {\n  width: 100%;\n  height: 100%;\n}\n\n.rd3t-grabbable {\n  cursor: move; /* fallback if grab cursor is unsupported */\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.rd3t-grabbable:active {\n    cursor: grabbing;\n    cursor: -moz-grabbing;\n    cursor: -webkit-grabbing;\n}\n",""])},function(e,t,n){"use strict";function r(e,t){var n={},r=function(e){return n[e]||(n[e]={name:e}),n[e]},o=function(e,t){return n[e]||(n[e]={name:e,attributes:t}),n[e]};return e.forEach(function(e){if(t){var n={};t.forEach(function(t){n[t]=e[t]}),e.attributes=n}e.source=r(e.parent),e.target=o(e.child,e.attributes);var a=e.source,u=e.target;a.id=i.default.v4(),u.id=i.default.v4(),u.parent=a.name||null,a._collapsed=u._collapsed=!1,a._children?a._children.push(u):a._children=[u]}),[e.filter(function(e){return!e.source.parent})[0].source]}Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),a=n(3),i=function(e){return e&&e.__esModule?e:{default:e}}(a);t.default={parseCSV:function(e,t){return new Promise(function(n,a){try{(0,o.csv)(e,function(e){return n(r(e,t))})}catch(e){a(e)}})},parseJSON:function(e){return new Promise(function(t,n){try{(0,o.json)(e,function(e){return t([e])})}catch(e){n(e)}})},parseFlatJSON:function(e,t){return new Promise(function(n,a){try{(0,o.json)(e,function(e){return n(r(e,t))})}catch(e){a(e)}})},generateHierarchy:function(e){return r(e)}},e.exports=t.default}]))},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,a,i,u,l,s,c,f){switch(n){case 1:if(0===c&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,n){e.exports=n.p+"6386c959784638a6d2f1dbc9c5b9c2b5.png"},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=o},function(e,t,n){"use strict";
/** @license React v16.8.0-alpha.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(9),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,y=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,m="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,i,u],s=0;(e=Error(t.replace(/%s/g,function(){return l[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function _(){}function E(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=x.prototype;var k=E.prototype=new _;k.constructor=E,r(k,x.prototype),k.isPureReactComponent=!0;var S={current:null},C={current:null},O=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r=void 0,o={},i=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(i=""+t.key),t)O.call(t,r)&&!M.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:a,type:e,key:i,ref:u,props:o,_owner:C.current}}function j(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var P=/\/+/g,A=[];function N(e,t,n,r){if(A.length){var o=A.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case a:case i:l=!0}}if(l)return r(o,t,""===n?"."+I(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+I(u=t[s],s);l+=e(u,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=m&&t[m]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(u=t.next()).done;)l+=e(u=u.value,c=n+I(u,s++),r,o);else"object"===u&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(j(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(P,"$&/")+"/"),D(e,z,t=N(t,a,r,o)),R(t)}function U(){var e=S.current;return null===e&&g("298"),e}var B={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,L,t=N(null,null,t,n)),R(t)},count:function(e){return D(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return j(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:y,type:e,compare:void 0===t?null:t}},Fragment:u,StrictMode:l,Suspense:h,createElement:T,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,i=r({},e.props),u=e.key,l=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,s=C.current),void 0!==t.key&&(u=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)O.call(t,o)&&!M.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:a,type:e.type,key:u,ref:l,props:i,_owner:s}},createFactory:function(e){var t=T.bind(null,e);return t.type=e,t},isValidElement:j,version:"16.8.0-alpha.1",unstable_ConcurrentMode:p,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:C,assign:r}};B.ConcurrentMode=p,B.Profiler=s,B.unstable_ConcurrentMode=void 0,B.unstable_Profiler=void 0,B.useCallback=function(e,t){return U().useCallback(e,t)},B.useContext=function(e,t){return U().useContext(e,t)},B.useEffect=function(e,t){return U().useEffect(e,t)},B.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},B.useDebugValue=function(){},B.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},B.useMemo=function(e,t){return U().useMemo(e,t)},B.useReducer=function(e,t,n){return U().useReducer(e,t,n)},B.useRef=function(e){return U().useRef(e)},B.useState=function(e){return U().useState(e)};var q={default:B},V=q&&B||q;e.exports=V.default||V},function(e,t,n){"use strict";
/** @license React v16.8.0-alpha.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(9),a=n(23);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,i,u],s=0;(e=Error(t.replace(/%s/g,function(){return l[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var u=!1,l=null,s=!1,c=null,f={onError:function(e){u=!0,l=e}};function p(e,t,n,r,o,a,i,s,c){u=!1,l=null,function(e,t,n,r,o,a,i,u,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function y(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||i("96",e),!m[n])for(var r in t.extractEvents||i("97",e),m[n]=t,n=t.eventTypes){var o=void 0,a=n[r],u=t,l=r;g.hasOwnProperty(l)&&i("99",l),g[l]=a;var s=a.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&v(s[o],u,l);o=!0}else a.registrationName?(v(a.registrationName,u,l),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){b[e]&&i("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var m=[],g={},b={},w={},x=null,_=null,E=null;function k(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,a,f,d,h){if(p.apply(this,arguments),u){if(u){var y=l;u=!1,l=null}else i("198"),y=void 0;s||(s=!0,c=y)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function M(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)k(e,t[r],n[r]);else t&&k(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var T={injectEventPluginOrder:function(e){d&&i("101"),d=Array.prototype.slice.call(e),y()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&i("102",t),h[t]=r,n=!0)}n&&y()}};function j(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function P(e){if(null!==e&&(O=S(O,e)),e=O,O=null,e&&(C(e,M),O&&i("95"),s))throw e=c,s=!1,c=null,e}var A=Math.random().toString(36).slice(2),N="__reactInternalInstance$"+A,R="__reactEventHandlers$"+A;function D(e){if(e[N])return e[N];for(;!e[N];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[N]).tag||6===e.tag?e:null}function I(e){return!(e=e[N])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function z(e){return e[R]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function U(e,t,n){(t=j(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)U(n[t],"captured",e);for(t=0;t<n.length;t++)U(n[t],"bubbled",e)}}function q(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=j(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&q(e._targetInst,null,e)}function W(e){C(e,B)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function $(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:$("Animation","AnimationEnd"),animationiteration:$("Animation","AnimationIteration"),animationstart:$("Animation","AnimationStart"),transitionend:$("Transition","TransitionEnd")},K={},G={};function J(e){if(K[e])return K[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in G)return K[e]=n[t];return e}H&&(G=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var Q=J("animationend"),X=J("animationiteration"),Z=J("animationstart"),ee=J("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function ue(){return!1}function le(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:ue,this.isPropagationStopped=ue,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var pe=le.extend({data:null}),de=le.extend({data:null}),he=[9,13,27,32],ye=H&&"CompositionEvent"in window,ve=null;H&&"documentMode"in document&&(ve=document.documentMode);var me=H&&"TextEvent"in window&&!ve,ge=H&&(!ye||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function _e(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ke=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(ye)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else ke?_e(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(ke||o!==we.compositionStart?o===we.compositionEnd&&ke&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,ke=!0)),o=pe.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ee(n))&&(o.data=a),W(o),a=o):a=null,(e=me?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(ke)return"compositionend"===e||!ye&&_e(e,t)?(e=ae(),oe=re=ne=null,ke=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,W(t)):t=null,null===a?t:null===t?a:[a,t]}},Ce=null,Oe=null,Me=null;function Te(e){if(e=_(e)){"function"!=typeof Ce&&i("280");var t=x(e.stateNode);Ce(e.stateNode,e.type,t)}}function je(e){Oe?Me?Me.push(e):Me=[e]:Oe=e}function Pe(){if(Oe){var e=Oe,t=Me;if(Me=Oe=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Ae(e,t){return e(t)}function Ne(e,t,n){return e(t,n)}function Re(){}var De=!1;function Ie(e,t){if(De)return e(t);De=!0;try{return Ae(e,t)}finally{De=!1,(null!==Oe||null!==Me)&&(Re(),Pe())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ue(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function qe(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var We=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,He=/^(.*)[\\\/]/,$e="function"==typeof Symbol&&Symbol.for,Ye=$e?Symbol.for("react.element"):60103,Ke=$e?Symbol.for("react.portal"):60106,Ge=$e?Symbol.for("react.fragment"):60107,Je=$e?Symbol.for("react.strict_mode"):60108,Qe=$e?Symbol.for("react.profiler"):60114,Xe=$e?Symbol.for("react.provider"):60109,Ze=$e?Symbol.for("react.context"):60110,et=$e?Symbol.for("react.concurrent_mode"):60111,tt=$e?Symbol.for("react.forward_ref"):60112,nt=$e?Symbol.for("react.suspense"):60113,rt=$e?Symbol.for("react.memo"):60115,ot=$e?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ge:return"Fragment";case Ke:return"Portal";case Qe:return"Profiler";case Je:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Xe:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case ot:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=ut(e.type);n=null,r&&(n=ut(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var yt=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function mt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(pt,e)||!ct.call(ft,e)&&(st.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&mt(e,"checked",t,!1)}function _t(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?kt(e,t.type,n):t.hasOwnProperty("defaultValue")&&kt(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function kt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),ht.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ct(e,t,n){return(e=le.getPooled(St.change,e,t,n)).type="change",je(n),W(e),e}var Ot=null,Mt=null;function Tt(e){P(e)}function jt(e){if(Ve(L(e)))return e}function Pt(e,t){if("change"===e)return t}var At=!1;function Nt(){Ot&&(Ot.detachEvent("onpropertychange",Rt),Mt=Ot=null)}function Rt(e){"value"===e.propertyName&&jt(Mt)&&Ie(Tt,e=Ct(Mt,e,Fe(e)))}function Dt(e,t,n){"focus"===e?(Nt(),Mt=n,(Ot=t).attachEvent("onpropertychange",Rt)):"blur"===e&&Nt()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return jt(Mt)}function Lt(e,t){if("click"===e)return jt(t)}function zt(e,t){if("input"===e||"change"===e)return jt(t)}H&&(At=Ue("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:St,_isInputEventSupported:At,extractEvents:function(e,t,n,r){var o=t?L(t):window,a=void 0,i=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?a=Pt:ze(o)?At?a=zt:(a=It,i=Dt):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Lt),a&&(a=a(e,t)))return Ct(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&kt(o,"number",o.value)}},Ut=le.extend({view:null,detail:null}),Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Bt[e])&&!!t[e]}function Vt(){return qt}var Wt=0,Ht=0,$t=!1,Yt=!1,Kt=Ut.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Wt;return Wt=e.screenX,$t?"mousemove"===e.type?e.screenX-t:0:($t=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Gt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qt={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,u=void 0,l=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(i=Kt,u=Jt.mouseLeave,l=Jt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Gt,u=Jt.pointerLeave,l=Jt.pointerEnter,s="pointer");var c=null==a?o:L(a);if(o=null==t?o:L(t),(e=i.getPooled(u,a,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=i.getPooled(l,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,a&&r)e:{for(o=r,s=0,i=t=a;i;i=F(i))s++;for(i=0,l=o;l;l=F(l))i++;for(;0<s-i;)t=F(t),s--;for(;0<i-s;)o=F(o),i--;for(;s--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(s=a.alternate)||s!==o);)t.push(a),a=F(a);for(a=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)a.push(r),r=F(r);for(r=0;r<t.length;r++)q(t[r],"bubbled",e);for(r=a.length;0<r--;)q(a[r],"captured",n);return[e,n]}};function Xt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Xt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Xt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var u=o.child;u;){if(u===n)return nn(o),e;if(u===r)return nn(o),t;u=u.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{u=!1;for(var l=o.child;l;){if(l===n){u=!0,n=o,r=a;break}if(l===r){u=!0,r=o,n=a;break}l=l.sibling}if(!u){for(l=a.child;l;){if(l===n){u=!0,n=a,r=o;break}if(l===r){u=!0,r=a,n=o;break}l=l.sibling}u||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=Ut.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ut.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Kt.extend({dataTransfer:null}),dn=Ut.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[Q,"animationEnd"],[X,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],mn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},mn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:mn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case Q:case X:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Ut;break;case"wheel":e=yn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=le}return W(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,_n=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,u=0;u<m.length;u++){var l=m[u];l&&(l=l.extractEvents(r,t,a,o))&&(i=S(i,l))}P(i)}}var kn=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?On:Mn).bind(null,e);t.addEventListener(e,n,!1)}function Cn(e,t){if(!t)return null;var n=(xn(e)?On:Mn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Ne(Mn,e,t)}function Mn(e,t){if(kn){var n=Fe(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),_n.length){var r=_n.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>_n.length&&_n.push(e)}}}var Tn={},jn=0,Pn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Pn)||(e[Pn]=jn++,Tn[e[Pn]]={}),Tn[e[Pn]]}function Nn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function In(){for(var e=window,t=Nn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Nn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var zn=H&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Un=null,Bn=null,qn=null,Vn=!1;function Wn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Un||Un!==Nn(n)?null:("selectionStart"in(n=Un)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},qn&&en(qn,n)?null:(qn=n,(e=le.getPooled(Fn.select,Bn,e,t)).type="select",e.target=Un,W(e),e))}var Hn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=An(a),o=w.onSelect;for(var i=0;i<o.length;i++){var u=o[i];if(!a.hasOwnProperty(u)||!a[u]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?L(t):window,e){case"focus":(ze(a)||"true"===a.contentEditable)&&(Un=a,Bn=t,qn=null);break;case"blur":qn=Bn=Un=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Wn(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return Wn(n,r)}return null}};function $n(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Gn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Jn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Qn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}T.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=z,_=I,E=L,T.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Qt,ChangeEventPlugin:Ft,SelectEventPlugin:Hn,BeforeInputEventPlugin:Se});var Xn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Zn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Xn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function lr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Cn("scroll",e);break;case"focus":case"blur":Cn("focus",e),Cn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Ue(o)&&Cn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function dr(){}var hr=null,yr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function mr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gr="function"==typeof setTimeout?setTimeout:void 0,br="function"==typeof clearTimeout?clearTimeout:void 0;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var _r=[],Er=-1;function kr(e){0>Er||(e.current=_r[Er],_r[Er]=null,Er--)}function Sr(e,t){_r[++Er]=e.current,e.current=t}var Cr={},Or={current:Cr},Mr={current:!1},Tr=Cr;function jr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Pr(e){return null!=(e=e.childContextTypes)}function Ar(e){kr(Mr),kr(Or)}function Nr(e){kr(Mr),kr(Or)}function Rr(e,t,n){Or.current!==Cr&&i("168"),Sr(Or,t),Sr(Mr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",ut(t)||"Unknown",a);return o({},n,r)}function Ir(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Cr,Tr=Or.current,Sr(Or,t),Sr(Mr,Mr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Dr(e,t,Tr),r.__reactInternalMemoizedMergedChildContext=t,kr(Mr),kr(Or),Sr(Or,t)):kr(Mr),Sr(Mr,n)}var zr=null,Fr=null;function Ur(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qr(e,t,n,r){return new Br(e,t,n,r)}function Vr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wr(e,t){var n=e.alternate;return null===n?((n=qr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Hr(e,t,n,r,o,a){var u=2;if(r=e,"function"==typeof e)Vr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Ge:return $r(n.children,o,a,t);case et:return Yr(n,3|o,a,t);case Je:return Yr(n,2|o,a,t);case Qe:return(e=qr(12,n,t,4|o)).elementType=Qe,e.type=Qe,e.expirationTime=a,e;case nt:return(e=qr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Xe:u=10;break e;case Ze:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case ot:u=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=qr(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function $r(e,t,n,r){return(e=qr(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=qr(8,e,r,t),t=0==(1&t)?Je:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Kr(e,t,n){return(e=qr(6,e,null,t)).expirationTime=n,e}function Gr(e,t,n){return(t=qr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Jr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Zr(t,e)}function Qr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Zr(t,e)}function Xr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Zr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function ao(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function io(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):uo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function uo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function lo(e,t,n,r,a,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case 2:eo=!0}return r}function so(e,t,n,r,o){eo=!1;for(var a=(t=uo(e,t)).baseState,i=null,u=0,l=t.firstUpdate,s=a;null!==l;){var c=l.expirationTime;c<o?(null===i&&(i=l,a=s),u<c&&(u=c)):(s=lo(e,0,l,s,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(c=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===c&&(c=l,null===i&&(a=s)),u<f&&(u=f)):(s=lo(e,0,l,s,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,e.expirationTime=u,e.memoizedState=s}function co(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function po(e,t){return{value:e,source:t,stack:lt(t)}}var ho={current:null},yo=null,vo=null,mo=null;function go(e,t){var n=e.type._context;Sr(ho,n._currentValue),n._currentValue=t}function bo(e){var t=ho.current;kr(ho),e.type._context._currentValue=t}function wo(e){yo=e,mo=vo=null,e.firstContextDependency=null}function xo(e,t){return mo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(mo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===vo?(null===yo&&i("293"),yo.firstContextDependency=vo=t):vo=vo.next=t),e._currentValue}function _o(e,t){for(var n=0;n<e.length;n++)if(!Xt(e[n],t[n]))return!1;return!0}var Eo=0,ko=null,So=null,Co=null,Oo=null,Mo=null,To=0,jo=null,Po=!1,Ao=!1,No=null,Ro=0;function Do(){return null===ko&&i("298"),ko}function Io(e,t,n,r){for(;Ao;)Ao=!1,Ro+=1,jo=Mo=Co=null,n=e(t,r);return No=null,Ro=0,(e=ko).memoizedState=Oo,e.expirationTime=To,e.updateQueue=jo,e=null!==Co&&null!==Co.next,Eo=0,Mo=Oo=Co=So=ko=null,To=0,jo=null,e&&i("300"),n}function Lo(){Eo=0,Mo=Oo=Co=So=ko=null,To=0,jo=null,Ao=!1,No=null,Ro=0}function zo(e){return{memoizedState:e.memoizedState,baseState:e.baseState,queue:e.queue,baseUpdate:e.baseUpdate,next:null}}function Fo(){if(null===Mo)null===Oo?(Po=!1,Oo=Mo=null===(Co=So)?{memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null}:zo(Co)):(Po=!0,Co=So,Mo=Oo);else if(null===Mo.next){if(Po=!1,null===Co)var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};else e=null===(Co=Co.next)?{memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null}:zo(Co);Mo=Mo.next=e}else Po=!0,Mo=Mo.next,Co=null!==Co?Co.next:null;return Mo}function Uo(e,t){return"function"==typeof t?t(e):t}function Bo(e,t,n){ko=Do();var r=(Mo=Fo()).queue;if(null!==r){if(Po){if(t=r.dispatch,null!==No){var o=No.get(r);if(void 0!==o){No.delete(r),n=Mo.memoizedState;do{n=e(n,o.action),o=o.next}while(null!==o);return Mo.memoizedState=n,Mo.baseUpdate===r.last&&(Mo.baseState=n),[n,t]}}return[Mo.memoizedState,t]}t=r.last;var a=Mo.baseUpdate;if(null!==a?(null!==t&&(t.next=null),t=a.next):t=null!==t?t.next:null,null!==t){n=Mo.baseState;var u=o=null,l=t,s=!1;do{var c=l.expirationTime;c<Eo?(s||(s=!0,u=a,o=n),c>To&&(To=c)):n=e(n,l.action),a=l,l=l.next}while(null!==l&&l!==t);s||(u=a,o=n),Mo.memoizedState=n,Mo.baseUpdate=u,Mo.baseState=o}return[Mo.memoizedState,r.dispatch]}return e===Uo?"function"==typeof t&&(t=t()):null!=n&&(t=e(t,n)),Mo.memoizedState=Mo.baseState=t,e=(r=Mo.queue={last:null,dispatch:null}).dispatch=function(e,t,n){25>Ro||i("301");var r=e.alternate;if(e===ko||null!==r&&r===ko)if(Ao=!0,e={expirationTime:Eo,action:n,next:null},null===No&&(No=new Map),void 0===(r=No.get(t)))No.set(t,e);else{for(t=r;null!==t.next;)t=t.next;t.next=e}else{r=ki(r=Xi(),e),n={expirationTime:r,action:n,next:null},bi();var o=t.last;if(null===o)n.next=n;else{var a=o.next;null!==a&&(n.next=a),o.next=n}t.last=n,Oi(e,r)}}.bind(null,ko,r),[Mo.memoizedState,e]}function qo(e,t,n,r){return e={tag:e,create:t,destroy:n,inputs:r,next:null},null===jo?(jo={lastEffect:null}).lastEffect=e.next=e:null===(t=jo.lastEffect)?jo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,jo.lastEffect=e),e}function Vo(e,t){Wo(4,36,e,t)}function Wo(e,t,n,r){ko=Do(),Mo=Fo(),r=null!=r?r:[n];var o=null;if(null!==Co){var a=Co.memoizedState;if(o=a.destroy,_o(r,a.inputs))return void qo(0,n,o,r)}ko.effectTag|=e,Mo.memoizedState=qo(t,n,o,r)}var Ho={},$o={current:Ho},Yo={current:Ho},Ko={current:Ho};function Go(e){return e===Ho&&i("174"),e}function Jo(e,t){Sr(Ko,t),Sr(Yo,e),Sr($o,Ho);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}kr($o),Sr($o,t)}function Qo(e){kr($o),kr(Yo),kr(Ko)}function Xo(e){Go(Ko.current);var t=Go($o.current),n=er(t,e.type);t!==n&&(Sr(Yo,e),Sr($o,n))}function Zo(e){Yo.current===e&&(kr($o),kr(Yo))}function ea(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ta=We.ReactCurrentDispatcher,na=(new r.Component).refs;function ra(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var oa={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Xi(),o=ro(r=ki(r,e));o.payload=t,null!=n&&(o.callback=n),bi(),ao(e,o),Oi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Xi(),o=ro(r=ki(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),bi(),ao(e,o),Oi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Xi(),r=ro(n=ki(n,e));r.tag=2,null!=t&&(r.callback=t),bi(),ao(e,r),Oi(e,n)}};function aa(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function ia(e,t,n){var r=!1,o=Cr,a=t.contextType;return"object"==typeof a&&null!==a?a=ta.current.readContext(a):(o=Pr(t)?Tr:Or.current,a=(r=null!=(r=t.contextTypes))?jr(e,o):Cr),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=oa,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ua(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&oa.enqueueReplaceState(t,t.state,null)}function la(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=na;var a=t.contextType;"object"==typeof a&&null!==a?o.context=ta.current.readContext(a):(a=Pr(t)?Tr:Or.current,o.context=jr(e,a)),null!==(a=e.updateQueue)&&(so(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(ra(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&oa.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(so(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var sa=Array.isArray;function ca(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("289"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===na&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function fa(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function pa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Wr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ca(e,t,n),r.return=e,r):((r=Hr(n.type,n.key,n.props,null,e.mode,r)).ref=ca(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=$r(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Kr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=Hr(t.type,t.key,t.props,null,e.mode,n)).ref=ca(e,null,t),n.return=e,n;case Ke:return(t=Gr(t,e.mode,n)).return=e,t}if(sa(t)||it(t))return(t=$r(t,e.mode,n,null)).return=e,t;fa(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Ge?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case Ke:return n.key===o?c(e,t,n,r):null}if(sa(n)||it(n))return null!==o?null:f(e,t,n,r,null);fa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case Ke:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(sa(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);fa(t,r)}return null}function y(o,i,u,l){for(var s=null,c=null,f=i,y=i=0,v=null;null!==f&&y<u.length;y++){f.index>y?(v=f,f=null):v=f.sibling;var m=d(o,f,u[y],l);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,y),null===c?s=m:c.sibling=m,c=m,f=v}if(y===u.length)return n(o,f),s;if(null===f){for(;y<u.length;y++)(f=p(o,u[y],l))&&(i=a(f,i,y),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);y<u.length;y++)(v=h(f,o,y,u[y],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?y:v.key),i=a(v,i,y),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,u,l,s){var c=it(l);"function"!=typeof c&&i("150"),null==(l=c.call(l))&&i("151");for(var f=c=null,y=u,v=u=0,m=null,g=l.next();null!==y&&!g.done;v++,g=l.next()){y.index>v?(m=y,y=null):m=y.sibling;var b=d(o,y,g.value,s);if(null===b){y||(y=m);break}e&&y&&null===b.alternate&&t(o,y),u=a(b,u,v),null===f?c=b:f.sibling=b,f=b,y=m}if(g.done)return n(o,y),c;if(null===y){for(;!g.done;v++,g=l.next())null!==(g=p(o,g.value,s))&&(u=a(g,u,v),null===f?c=g:f.sibling=g,f=g);return c}for(y=r(o,y);!g.done;v++,g=l.next())null!==(g=h(y,o,v,g.value,s))&&(e&&null!==g.alternate&&y.delete(null===g.key?v:g.key),u=a(g,u,v),null===f?c=g:f.sibling=g,f=g);return e&&y.forEach(function(e){return t(o,e)}),c}return function(e,r,a,l){var s="object"==typeof a&&null!==a&&a.type===Ge&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case Ye:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?a.type===Ge:s.elementType===a.type){n(e,s.sibling),(r=o(s,a.type===Ge?a.props.children:a.props)).ref=ca(e,s,a),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Ge?((r=$r(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=Hr(a.type,a.key,a.props,null,e.mode,l)).ref=ca(e,r,a),l.return=e,e=l)}return u(e);case Ke:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Gr(a,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Kr(a,e.mode,l)).return=e,e=r),u(e);if(sa(a))return y(e,r,a,l);if(it(a))return v(e,r,a,l);if(c&&fa(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:i("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var da=pa(!0),ha=pa(!1),ya=null,va=null,ma=!1;function ga(e,t){var n=qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ba(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function wa(e){if(ma){var t=va;if(t){var n=t;if(!ba(e,t)){if(!(t=wr(n))||!ba(e,t))return e.effectTag|=2,ma=!1,void(ya=e);ga(ya,n)}ya=e,va=xr(t)}else e.effectTag|=2,ma=!1,ya=e}}function xa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;ya=e}function _a(e){if(e!==ya)return!1;if(!ma)return xa(e),ma=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!mr(t,e.memoizedProps))for(t=va;t;)ga(e,t),t=wr(t);return xa(e),va=ya?wr(e.stateNode):null,!0}function Ea(){va=ya=null,ma=!1}var ka=We.ReactCurrentOwner;function Sa(e,t,n,r){t.child=null===e?ha(t,null,n,r):da(t,e.child,n,r)}function Ca(e,t,n,r,o){n=n.render;var a=t.ref;wo(t),Eo=o,ko=t,So=null!==e?e.memoizedState:null;var i=n(r,a);return i=Io(n,r,i,a),t.effectTag|=1,Sa(e,t,i,o),t.child}function Oa(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Vr(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Hr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ma(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Da(e,t,a):(t.effectTag|=1,(e=Wr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ma(e,t,n,r,o,a){return null!==e&&o<a&&en(e.memoizedProps,r)&&e.ref===t.ref?Da(e,t,a):ja(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ja(e,t,n,r,o){var a=Pr(n)?Tr:Or.current;a=jr(t,a),wo(t),Eo=o,ko=t,So=null!==e?e.memoizedState:null;var i=n(r,a);return i=Io(n,r,i,a),t.effectTag|=1,Sa(e,t,i,o),t.child}function Pa(e,t,n,r,o){if(Pr(n)){var a=!0;Ir(t)}else a=!1;if(wo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),ia(t,n,r),la(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,u=t.memoizedProps;i.props=u;var l=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=ta.current.readContext(s):s=jr(t,s=Pr(n)?Tr:Or.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==r||l!==s)&&ua(t,i,r,s),eo=!1;var p=t.memoizedState;l=i.state=p;var d=t.updateQueue;null!==d&&(so(t,d,r,i,o),l=t.memoizedState),u!==r||p!==l||Mr.current||eo?("function"==typeof c&&(ra(t,n,c,r),l=t.memoizedState),(u=eo||aa(t,n,u,r,p,l,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=s,r=u):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,u=t.memoizedProps,i.props=t.type===t.elementType?u:ea(t.type,u),l=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=ta.current.readContext(s):s=jr(t,s=Pr(n)?Tr:Or.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==r||l!==s)&&ua(t,i,r,s),eo=!1,l=t.memoizedState,p=i.state=l,null!==(d=t.updateQueue)&&(so(t,d,r,i,o),p=t.memoizedState),u!==r||l!==p||Mr.current||eo?("function"==typeof c&&(ra(t,n,c,r),p=t.memoizedState),(c=eo||aa(t,n,u,r,l,p,s))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,p,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),i.props=r,i.state=p,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Aa(e,t,n,r,a,o)}function Aa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Lr(t,n,!1),Da(e,t,a);r=t.stateNode,ka.current=t;var u=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=da(t,e.child,null,a),t.child=da(t,null,u,a)):Sa(e,t,u,a),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Rr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Rr(0,t.context,!1),Jo(e,t.containerInfo)}function Ra(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var u=o.fallback;e=$r(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=$r(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=ha(t,null,o.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,i?(n=o.fallback,o=Wr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Wr(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=da(t,r.child,o.children,n)):(u=e.child,i?(i=o.fallback,(o=$r(null,r,0,null)).child=u,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=$r(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=da(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Da(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Wr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Mr.current&&r<n){switch(t.tag){case 3:Na(t),Ea();break;case 5:Xo(t);break;case 1:Pr(t.type)&&Ir(t);break;case 4:Jo(t,t.stateNode.containerInfo);break;case 10:go(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ra(e,t,n):null!==(t=Da(e,t,n))?t.sibling:null}return Da(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=jr(t,Or.current);wo(t),Eo=n,ko=t,So=null;var a=r(e,o);if(t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){t.tag=1,Lo(),Pr(r)?(o=!0,Ir(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&ra(t,r,u,e),a.updater=oa,t.stateNode=a,a._reactInternalFiber=t,la(t,r,e,n),t=Aa(null,t,r,!0,o,n)}else t.tag=0,Sa(null,t,a=Io(r,e,a,o),n),t=t.child;return t;case 16:switch(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),o=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(a),t.type=e,a=t.tag=function(e){if("function"==typeof e)return Vr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),o=ea(e,o),u=void 0,a){case 0:u=ja(null,t,e,o,n);break;case 1:u=Pa(null,t,e,o,n);break;case 11:u=Ca(null,t,e,o,n);break;case 14:u=Oa(null,t,e,ea(e.type,o),r,n);break;default:i("306",e,"")}return u;case 0:return r=t.type,a=t.pendingProps,ja(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 1:return r=t.type,a=t.pendingProps,Pa(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),a=null!==(a=t.memoizedState)?a.element:null,so(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===a?(Ea(),t=Da(e,t,n)):(a=t.stateNode,(a=(null===e||null===e.child)&&a.hydrate)&&(va=xr(t.stateNode.containerInfo),ya=t,a=ma=!0),a?(t.effectTag|=2,t.child=ha(t,null,r,n)):(Sa(e,t,r,n),Ea()),t=t.child),t;case 5:return Xo(t),null===e&&wa(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,u=a.children,mr(r,a)?u=null:null!==o&&mr(r,o)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&a.hidden?(t.expirationTime=1,t=null):(Sa(e,t,u,n),t=t.child),t;case 6:return null===e&&wa(t),null;case 13:return Ra(e,t,n);case 4:return Jo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=da(t,null,r,n):Sa(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ca(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 7:return Sa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Sa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,u=t.memoizedProps,go(t,o=a.value),null!==u){var l=u.value;if(0===(o=Xt(l,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(u.children===a.children&&!Mr.current){t=Da(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){if(null!==(l=u.firstContextDependency))do{if(l.context===r&&0!=(l.observedBits&o)){if(1===u.tag){var s=ro(n);s.tag=2,ao(u,s)}u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n);for(var c=u.return;null!==c;){if(s=c.alternate,c.childExpirationTime<n)c.childExpirationTime=n,null!==s&&s.childExpirationTime<n&&(s.childExpirationTime=n);else{if(!(null!==s&&s.childExpirationTime<n))break;s.childExpirationTime=n}c=c.return}}s=u.child,l=l.next}while(null!==l);else s=10===u.tag&&u.type===t.type?null:u.child;if(null!==s)s.return=u;else for(s=u;null!==s;){if(s===t){s=null;break}if(null!==(u=s.sibling)){u.return=s.return,s=u;break}s=s.return}u=s}}Sa(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,wo(t),r=r(a=xo(a,o.unstable_observedBits)),t.effectTag|=1,Sa(e,t,r,n),t.child;case 14:return o=ea(a=t.type,t.pendingProps),Oa(e,t,a,o=ea(a.type,o),r,n);case 15:return Ma(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:ea(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Pr(r)?(e=!0,Ir(t)):e=!1,wo(t),ia(t,r,a),la(t,r,a,n),Aa(null,t,r,!0,e,n);default:i("156")}}function La(e){e.effectTag|=4}var za=void 0,Fa=void 0,Ua=void 0,Ba=void 0;za=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fa=function(){},Ua=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var u=t.stateNode;switch(Go($o.current),e=null,n){case"input":i=bt(u,i),r=bt(u,r),e=[];break;case"option":i=$n(u,i),r=$n(u,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(u,i),r=Kn(u,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(u.onclick=dr)}cr(n,r),u=n=void 0;var l=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var s=i[n];for(u in s)s.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(u in s)!s.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in c)c.hasOwnProperty(u)&&s[u]!==c[u]&&(l||(l={}),l[u]=c[u])}else l||(e||(e=[]),e.push(n,l)),l=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=c&&pr(a,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}l&&(e=e||[]).push("style",l),a=e,(t.updateQueue=a)&&La(t)}},Ba=function(e,t,n,r){n!==r&&La(t)};var qa="function"==typeof WeakSet?WeakSet:Set;function Va(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function Wa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ei(e,t)}else t.current=null}function Ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=null,null!==o&&o()}0!=(r.tag&t)&&("function"!=typeof(o=(o=r.create)())&&(o=null),r.destroy=o),r=r.next}while(r!==n)}}function $a(e){switch("function"==typeof Fr&&Fr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Ei(o,e)}}n=n.next}while(n!==t)}break;case 1:if(Wa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ei(e,t)}break;case 5:Wa(e);break;case 4:Ga(e)}}function Ya(e){return 5===e.tag||3===e.tag||4===e.tag}function Ka(e){e:{for(var t=e.return;null!==t;){if(Ya(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Ya(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,u=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(u,l):a.insertBefore(u,l)}else t.insertBefore(o.stateNode,n);else r?(u=t,l=o.stateNode,8===u.nodeType?(a=u.parentNode).insertBefore(l,u):(a=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==a.onclick||(a.onclick=dr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,u=a;;)if($a(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===a)break;for(;null===u.sibling;){if(null===u.return||u.return===a)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}o?(a=r,u=t.stateNode,8===a.nodeType?a.parentNode.removeChild(u):a.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):$a(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ja(e,t){switch(t.tag){case 0:case 11:case 14:case 15:Ha(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],u=t[a+1];"style"===i?lr(e,u):"dangerouslySetInnerHTML"===i?rr(e,u):"children"===i?or(e,u):mt(e,i,u,r)}switch(n){case"input":_t(e,o);break;case"textarea":Jn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Xi())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new qa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=ki(t=Xi(),e),null!==(e=Ci(e,t))&&(Jr(e,t),0!==(t=e.expirationTime)&&Zi(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var Qa="function"==typeof WeakMap?WeakMap:Map;function Xa(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){lu(r),Va(e,t)},n}function Za(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===mi?mi=new Set([this]):mi.add(this));var n=t.value,o=t.stack;Va(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function ei(e){switch(e.tag){case 1:Pr(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Qo(),Nr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return Zo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Qo(),null;case 10:return bo(e),null;default:return null}}var ti={readContext:xo,useCallback:function(e,t){ko=Do(),t=null!=t?t:[e];var n=(Mo=Fo()).memoizedState;return null!==n&&_o(t,n[1])?n[0]:(Mo.memoizedState=[e,t],e)},useContext:function(e,t){return Do(),xo(e,t)},useEffect:function(e,t){Wo(516,192,e,t)},useImperativeHandle:function(e,t,n){Vo(function(){if("function"==typeof e){var n=t();return e(n),function(){return e(null)}}if(null!=e)return n=t(),e.current=n,function(){e.current=null}},n=null!=n?n.concat([e]):[e,t])},useDebugValue:function(){Do()},useLayoutEffect:Vo,useMemo:function(e,t){ko=Do(),t=null!=t?t:[e];var n=(Mo=Fo()).memoizedState;return null!==n&&_o(t,n[1])?n[0]:(e=e(),Mo.memoizedState=[e,t],e)},useReducer:Bo,useRef:function(e){return ko=Do(),null===(Mo=Fo()).memoizedState?(e={current:e},Mo.memoizedState=e):e=Mo.memoizedState,e},useState:function(e){return Bo(Uo,e)}},ni=We.ReactCurrentDispatcher,ri=We.ReactCurrentOwner,oi=1073741822,ai=0,ii=!1,ui=null,li=null,si=0,ci=-1,fi=!1,pi=null,di=!1,hi=null,yi=null,vi=null,mi=null;function gi(){if(null!==ui)for(var e=ui.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:Qo(),Nr();break;case 5:Zo(t);break;case 4:Qo();break;case 10:bo(t)}e=e.return}li=null,si=0,ci=-1,fi=!1,ui=null}function bi(){null!==vi&&(a.unstable_cancelCallback(yi),vi())}function wi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){ui=e;e:{var a=t,u=si,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Pr(t.type)&&Ar();break;case 3:Qo(),Nr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==a&&null!==a.child||(_a(t),t.effectTag&=-3),Fa(t);break;case 5:Zo(t);var s=Go(Ko.current);if(u=t.type,null!==a&&null!=t.stateNode)Ua(a,t,u,l,s),a.ref!==t.ref&&(t.effectTag|=128);else if(l){var c=Go($o.current);if(_a(t)){a=(l=t).stateNode;var f=l.type,p=l.memoizedProps,d=s;switch(a[N]=l,a[R]=p,u=void 0,s=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":wt(a,p),Sn("invalid",a),pr(d,"onChange");break;case"select":a._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",a),pr(d,"onChange");break;case"textarea":Gn(a,p),Sn("invalid",a),pr(d,"onChange")}for(u in cr(s,p),f=null,p)p.hasOwnProperty(u)&&(c=p[u],"children"===u?"string"==typeof c?a.textContent!==c&&(f=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(f=["children",""+c]):b.hasOwnProperty(u)&&null!=c&&pr(d,u));switch(s){case"input":qe(a),Et(a,p,!0);break;case"textarea":qe(a),Qn(a);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(a.onclick=dr)}u=f,l.updateQueue=u,(l=null!==u)&&La(t)}else{p=t,a=u,d=l,f=9===s.nodeType?s:s.ownerDocument,c===Xn.html&&(c=Zn(a)),c===Xn.html?"script"===a?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof d.is?f=f.createElement(a,{is:d.is}):(f=f.createElement(a),"select"===a&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(c,a),(a=f)[N]=p,a[R]=l,za(a,t,!1,!1),d=a;var h=s,y=fr(f=u,p=l);switch(f){case"iframe":case"object":Sn("load",d),s=p;break;case"video":case"audio":for(s=0;s<te.length;s++)Sn(te[s],d);s=p;break;case"source":Sn("error",d),s=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),s=p;break;case"form":Sn("reset",d),Sn("submit",d),s=p;break;case"details":Sn("toggle",d),s=p;break;case"input":wt(d,p),s=bt(d,p),Sn("invalid",d),pr(h,"onChange");break;case"option":s=$n(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},s=o({},p,{value:void 0}),Sn("invalid",d),pr(h,"onChange");break;case"textarea":Gn(d,p),s=Kn(d,p),Sn("invalid",d),pr(h,"onChange");break;default:s=p}cr(f,s),c=void 0;var v=f,m=d,g=s;for(c in g)if(g.hasOwnProperty(c)){var w=g[c];"style"===c?lr(m,w):"dangerouslySetInnerHTML"===c?null!=(w=w?w.__html:void 0)&&rr(m,w):"children"===c?"string"==typeof w?("textarea"!==v||""!==w)&&or(m,w):"number"==typeof w&&or(m,""+w):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(b.hasOwnProperty(c)?null!=w&&pr(h,c):null!=w&&mt(m,c,w,y))}switch(f){case"input":qe(d),Et(d,p,!1);break;case"textarea":qe(d),Qn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(s=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(s,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(s,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof s.onClick&&(d.onclick=dr)}(l=vr(u,l))&&La(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?Ba(a,t,a.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&i("166")),a=Go(Ko.current),Go($o.current),_a(t)?(u=(l=t).stateNode,a=l.memoizedProps,u[N]=l,(l=u.nodeValue!==a)&&La(t)):(u=t,(l=(9===a.nodeType?a:a.ownerDocument).createTextNode(l))[N]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,ui=t;break e}l=null!==l,u=null!==a&&null!==a.memoizedState,null!==a&&!l&&u&&(null!==(a=a.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=a,a.nextEffect=s):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(l!==u||0==(1&t.effectTag)&&l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Qo(),Fa(t);break;case 10:bo(t);break;case 9:case 14:break;case 17:Pr(t.type)&&Ar();break;default:i("156")}ui=null}if(t=e,1===si||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(a=u.expirationTime)>l&&(l=a),(s=u.childExpirationTime)>l&&(l=s),u=u.sibling;t.childExpirationTime=l}if(null!==ui)return ui;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=ei(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function xi(e){var t=Ia(e.alternate,e,si);return e.memoizedProps=e.pendingProps,null===t&&(t=wi(e)),ri.current=null,t}function _i(e,t){ii&&i("243"),bi(),ii=!0,ni.current=ti;var n=e.nextExpirationTimeToWorkOn;n===si&&e===li&&null!==ui||(gi(),si=n,ui=Wr((li=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==ui&&!nu();)ui=xi(ui);else for(;null!==ui;)ui=xi(ui)}catch(t){if(mo=vo=yo=null,Lo(),null===ui)r=!0,lu(t);else{null===ui&&i("271");var o=ui,a=o.return;if(null!==a){e:{var u=e,l=a,s=o,c=t;if(a=si,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var f=c;c=l;var p=-1,d=-1;do{if(13===c.tag){var h=c.alternate;if(null!==h&&null!==(h=h.memoizedState)){d=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=c.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}c=c.return}while(null!==c);c=l;do{if((h=13===c.tag)&&(h=void 0!==c.memoizedProps.fallback&&null===c.memoizedState),h){if(null===(l=c.updateQueue)?((l=new Set).add(f),c.updateQueue=l):l.add(f),0==(1&c.mode)){c.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((a=ro(1073741823)).tag=2,ao(s,a))),s.expirationTime=1073741823;break e}null===(s=u.pingCache)?(s=u.pingCache=new Qa,l=new Set,s.set(f,l)):void 0===(l=s.get(f))&&(l=new Set,s.set(f,l)),l.has(a)||(l.add(a),s=Si.bind(null,u,f,a),f.then(s,s)),-1===p?u=1073741823:(-1===d&&(d=10*(1073741822-Xr(u,a))-5e3),u=d+p),0<=u&&ci<u&&(ci=u),c.effectTag|=2048,c.expirationTime=a;break e}c=c.return}while(null!==c);c=Error((ut(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(s))}fi=!0,c=po(c,s),u=l;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=a,io(u,a=Xa(u,c,a));break e;case 1:if(f=c,p=u.type,d=u.stateNode,0==(64&u.effectTag)&&("function"==typeof p.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===mi||!mi.has(d)))){u.effectTag|=2048,u.expirationTime=a,io(u,a=Za(u,f,a));break e}}u=u.return}while(null!==u)}ui=wi(o);continue}r=!0,lu(t)}}break}if(ii=!1,mo=vo=yo=ni.current=null,Lo(),r)li=null,e.finishedWork=null;else if(null!==ui)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&i("281"),li=null,fi){if(o=e.latestPendingTime,a=e.latestSuspendedTime,u=e.latestPingedTime,0!==o&&o<n||0!==a&&a<n||0!==u&&u<n)return Qr(e,n),void Qi(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Qi(e,r,n,t,-1)}t&&-1!==ci?(Qr(e,n),(t=10*(1073741822-Xr(e,n)))<ci&&(ci=t),t=10*(1073741822-Xi()),t=ci-t,Qi(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Ei(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===mi||!mi.has(r)))return ao(n,e=Za(n,e=po(t,e),1073741823)),void Oi(n,1073741823);break;case 3:return ao(n,e=Xa(n,e=po(t,e),1073741823)),void Oi(n,1073741823)}n=n.return}3===e.tag&&(ao(e,n=Xa(e,n=po(t,e),1073741823)),Oi(e,1073741823))}function ki(e,t){return 0!==ai?e=ai:ii?e=di?1073741823:si:1&t.mode?(e=Bi?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==li&&e===si&&--e):e=1073741823,Bi&&(0===Ii||e<Ii)&&(Ii=e),e}function Si(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==li&&si===n?li=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Zr(n,e),0!==(n=e.expirationTime)&&Zi(e,n)))}function Ci(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Oi(e,t){null!==(e=Ci(e,t))&&(!ii&&0!==si&&t>si&&gi(),Jr(e,t),ii&&!di&&li===e||Zi(e,e.expirationTime),Yi>$i&&(Yi=0,i("185")))}function Mi(e,t,n,r,o){var a=ai;ai=1073741823;try{return e(t,n,r,o)}finally{ai=a}}var Ti=null,ji=null,Pi=0,Ai=void 0,Ni=!1,Ri=null,Di=0,Ii=0,Li=!1,zi=null,Fi=!1,Ui=!1,Bi=!1,qi=null,Vi=a.unstable_now(),Wi=1073741822-(Vi/10|0),Hi=Wi,$i=50,Yi=0,Ki=null;function Gi(){Wi=1073741822-((a.unstable_now()-Vi)/10|0)}function Ji(e,t){if(0!==Pi){if(t<Pi)return;null!==Ai&&a.unstable_cancelCallback(Ai)}Pi=t,e=a.unstable_now()-Vi,Ai=a.unstable_scheduleCallback(ru,{timeout:10*(1073741822-t)-e})}function Qi(e,t,n,r,o){e.expirationTime=r,0!==o||nu()?0<o&&(e.timeoutHandle=gr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Gi(),Hi=Wi,au(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Xi(){return Ni?Hi:(eu(),0!==Di&&1!==Di||(Gi(),Hi=Wi),Hi)}function Zi(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ji?(Ti=ji=e,e.nextScheduledRoot=e):(ji=ji.nextScheduledRoot=e).nextScheduledRoot=Ti):t>e.expirationTime&&(e.expirationTime=t),Ni||(Fi?Ui&&(Ri=e,Di=1073741823,iu(e,1073741823,!1)):1073741823===t?ou(1073741823,!1):Ji(e,t))}function eu(){var e=0,t=null;if(null!==ji)for(var n=ji,r=Ti;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===ji)&&i("244"),r===r.nextScheduledRoot){Ti=ji=r.nextScheduledRoot=null;break}if(r===Ti)Ti=o=r.nextScheduledRoot,ji.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ji){(ji=n).nextScheduledRoot=Ti,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===ji)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}Ri=t,Di=e}var tu=!1;function nu(){return!!tu||!!a.unstable_shouldYield()&&(tu=!0)}function ru(){try{if(!nu()&&null!==Ti){Gi();var e=Ti;do{var t=e.expirationTime;0!==t&&Wi<=t&&(e.nextExpirationTimeToWorkOn=Wi),e=e.nextScheduledRoot}while(e!==Ti)}ou(0,!0)}finally{tu=!1}}function ou(e,t){if(eu(),t)for(Gi(),Hi=Wi;null!==Ri&&0!==Di&&e<=Di&&!(tu&&Wi>Di);)iu(Ri,Di,Wi>Di),eu(),Gi(),Hi=Wi;else for(;null!==Ri&&0!==Di&&e<=Di;)iu(Ri,Di,!1),eu();if(t&&(Pi=0,Ai=null),0!==Di&&Ji(Ri,Di),Yi=0,Ki=null,null!==qi)for(e=qi,qi=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Li||(Li=!0,zi=e)}}if(Li)throw e=zi,zi=null,Li=!1,e}function au(e,t){Ni&&i("253"),Ri=e,Di=t,iu(e,t,!1),ou(1073741823,!1)}function iu(e,t,n){if(Ni&&i("245"),Ni=!0,n){var r=e.finishedWork;null!==r?uu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),_i(e,n),null!==(r=e.finishedWork)&&(nu()?e.finishedWork=r:uu(e,r,t)))}else null!==(r=e.finishedWork)?uu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),_i(e,n),null!==(r=e.finishedWork)&&uu(e,r,t));Ni=!1}function uu(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===qi?qi=[r]:qi.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===Ki?Yi++:(Ki=e,Yi=0),di=ii=!0,e.current===t&&i("177"),0===(n=e.pendingCommitExpirationTime)&&i("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Jr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Jr(e,r)):r>o&&Jr(e,r)),Zr(0,e),ri.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,hr=kn,Ln(o=In())){if("selectionStart"in o)var u={start:o.selectionStart,end:o.selectionEnd};else e:{var l=(u=(u=o.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(l&&0!==l.rangeCount){u=l.anchorNode;var s=l.anchorOffset,c=l.focusNode;l=l.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,p=-1,d=-1,h=0,y=0,v=o,m=null;t:for(;;){for(var g;v!==u||0!==s&&3!==v.nodeType||(p=f+s),v!==c||0!==l&&3!==v.nodeType||(d=f+l),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)m=v,v=g;for(;;){if(v===o)break t;if(m===u&&++h===s&&(p=f),m===c&&++y===l&&(d=f),null!==(g=v.nextSibling))break;m=(v=m).parentNode}v=g}u=-1===p||-1===d?null:{start:p,end:d}}else u=null}u=u||{start:0,end:0}}else u=null;for(yr={focusedElem:o,selectionRange:u},kn=!1,pi=r;null!==pi;){o=!1,u=void 0;try{for(;null!==pi;){if(256&pi.effectTag)e:{var b=pi.alternate;switch((s=pi).tag){case 0:case 11:case 15:Ha(2,0,s);break e;case 1:if(256&s.effectTag&&null!==b){var w=b.memoizedProps,x=b.memoizedState,_=s.stateNode,E=_.getSnapshotBeforeUpdate(s.elementType===s.type?w:ea(s.type,w),x);_.__reactInternalSnapshotBeforeUpdate=E}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}pi=pi.nextEffect}}catch(e){o=!0,u=e}o&&(null===pi&&i("178"),Ei(pi,u),null!==pi&&(pi=pi.nextEffect))}for(pi=r;null!==pi;){b=!1,w=void 0;try{for(;null!==pi;){var k=pi.effectTag;if(16&k&&or(pi.stateNode,""),128&k){var S=pi.alternate;if(null!==S){var C=S.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(14&k){case 2:Ka(pi),pi.effectTag&=-3;break;case 6:Ka(pi),pi.effectTag&=-3,Ja(pi.alternate,pi);break;case 4:Ja(pi.alternate,pi);break;case 8:Ga(x=pi),x.return=null,x.child=null,x.memoizedState=null,x.updateQueue=null;var O=x.alternate;null!==O&&(O.return=null,O.child=null,O.memoizedState=null,O.updateQueue=null)}pi=pi.nextEffect}}catch(e){b=!0,w=e}b&&(null===pi&&i("178"),Ei(pi,w),null!==pi&&(pi=pi.nextEffect))}if(C=yr,S=In(),k=C.focusedElem,b=C.selectionRange,S!==k&&k&&k.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(k.ownerDocument.documentElement,k)){null!==b&&Ln(k)&&(S=b.start,void 0===(C=b.end)&&(C=S),"selectionStart"in k?(k.selectionStart=S,k.selectionEnd=Math.min(C,k.value.length)):(C=(S=k.ownerDocument||document)&&S.defaultView||window).getSelection&&(C=C.getSelection(),w=k.textContent.length,O=Math.min(b.start,w),b=void 0===b.end?O:Math.min(b.end,w),!C.extend&&O>b&&(w=b,b=O,O=w),w=Dn(k,O),x=Dn(k,b),w&&x&&(1!==C.rangeCount||C.anchorNode!==w.node||C.anchorOffset!==w.offset||C.focusNode!==x.node||C.focusOffset!==x.offset)&&((S=S.createRange()).setStart(w.node,w.offset),C.removeAllRanges(),O>b?(C.addRange(S),C.extend(x.node,x.offset)):(S.setEnd(x.node,x.offset),C.addRange(S))))),S=[];for(C=k;C=C.parentNode;)1===C.nodeType&&S.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof k.focus&&k.focus(),k=0;k<S.length;k++)(C=S[k]).element.scrollLeft=C.left,C.element.scrollTop=C.top}for(yr=null,kn=!!hr,hr=null,e.current=t,pi=r;null!==pi;){k=!1,S=void 0;try{for(C=e,O=n;null!==pi;){var M=pi.effectTag;if(36&M){var T=pi.alternate;switch(w=O,(b=pi).tag){case 0:case 11:case 15:Ha(16,32,b);break;case 1:var j=b.stateNode;if(4&b.effectTag)if(null===T)j.componentDidMount();else{var P=b.elementType===b.type?T.memoizedProps:ea(b.type,T.memoizedProps);j.componentDidUpdate(P,T.memoizedState,j.__reactInternalSnapshotBeforeUpdate)}var A=b.updateQueue;null!==A&&co(0,A,j);break;case 3:var N=b.updateQueue;if(null!==N){if(x=null,null!==b.child)switch(b.child.tag){case 5:x=b.child.stateNode;break;case 1:x=b.child.stateNode}co(0,N,x)}break;case 5:var R=b.stateNode;null===T&&4&b.effectTag&&vr(b.type,b.memoizedProps)&&R.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}if(128&M){var D=pi.ref;if(null!==D){var I=pi.stateNode;switch(pi.tag){case 5:var L=I;break;default:L=I}"function"==typeof D?D(L):D.current=L}}512&M&&(hi=C),pi=pi.nextEffect}}catch(e){k=!0,S=e}k&&(null===pi&&i("178"),Ei(pi,S),null!==pi&&(pi=pi.nextEffect))}null!==r&&null!==hi&&(M=function(e,t){vi=yi=hi=null;var n=Ni;Ni=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;Ha(128,0,a),Ha(0,64,a)}catch(e){r=!0,o=e}r&&Ei(t,o)}t=t.nextEffect}while(null!==t);Ni=n,0!==(n=e.expirationTime)&&Zi(e,n)}.bind(null,e,r),yi=a.unstable_scheduleCallback(M),vi=M),ii=di=!1,"function"==typeof zr&&zr(t.stateNode),M=t.expirationTime,0===(t=(t=t.childExpirationTime)>M?t:M)&&(mi=null),e.expirationTime=t,e.finishedWork=null}function lu(e){null===Ri&&i("246"),Ri.expirationTime=0,Li||(Li=!0,zi=e)}function su(e,t){var n=Fi;Fi=!0;try{return e(t)}finally{(Fi=n)||Ni||ou(1073741823,!1)}}function cu(e,t){if(Fi&&!Ui){Ui=!0;try{return e(t)}finally{Ui=!1}}return e(t)}function fu(e,t,n){if(Bi)return e(t,n);Fi||Ni||0===Ii||(ou(Ii,!1),Ii=0);var r=Bi,o=Fi;Fi=Bi=!0;try{return e(t,n)}finally{Bi=r,(Fi=o)||Ni||ou(1073741823,!1)}}function pu(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Pr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);i("171"),u=void 0}if(1===n.tag){var l=n.type;if(Pr(l)){n=Dr(n,l,u);break e}}n=u}else n=Cr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),bi(),ao(a,o),Oi(a,r),r}function du(e,t,n,r){var o=t.current;return pu(e,t,n,o=ki(Xi(),o),r)}function hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function yu(e){var t=1073741822-25*(1+((1073741822-Xi()+500)/25|0));t>=oi&&(t=oi-1),this._expirationTime=oi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function vu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function mu(e,t,n){e={current:t=qr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function gu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function bu(e,t,n,r,o){gu(n)||i("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var u=o;o=function(){var e=hu(a._internalRoot);u.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new mu(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=hu(a._internalRoot);l.call(e)}}cu(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return hu(a._internalRoot)}function wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return gu(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(_t(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||i("90"),Ve(r),_t(r,o)}}}break;case"textarea":Jn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},yu.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new vu;return pu(e,t,null,n,r._onCommit),r},yu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},yu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,au(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},yu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},vu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},vu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},mu.prototype.render=function(e,t){var n=this._internalRoot,r=new vu;return null!==(t=void 0===t?null:t)&&r.then(t),du(e,n,null,r._onCommit),r},mu.prototype.unmount=function(e){var t=this._internalRoot,n=new vu;return null!==(e=void 0===e?null:e)&&n.then(e),du(null,t,null,n._onCommit),n},mu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new vu;return null!==(n=void 0===n?null:n)&&o.then(n),du(t,r,e,o._onCommit),o},mu.prototype.createBatch=function(){var e=new yu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ae=su,Ne=fu,Re=function(){Ni||0===Ii||(ou(Ii,!1),Ii=0)};var xu={createPortal:wu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return bu(null,e,t,!0,n)},render:function(e,t,n){return bu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&i("38"),bu(e,t,n,!1,r)},unmountComponentAtNode:function(e){return gu(e)||i("40"),!!e._reactRootContainer&&(cu(function(){bu(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return wu.apply(void 0,arguments)},unstable_batchedUpdates:su,unstable_interactiveUpdates:fu,flushSync:function(e,t){Ni&&i("187");var n=Fi;Fi=!0;try{return Mi(e,t)}finally{Fi=n,ou(1073741823,!1)}},unstable_createRoot:_u,unstable_flushControlled:function(e){var t=Fi;Fi=!0;try{Mi(e)}finally{(Fi=t)||Ni||ou(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,z,T.injectEventPluginsByName,g,W,function(e){C(e,V)},je,Pe,Mn,P]}};function _u(e,t){return gu(e)||i("299","createRoot"),new mu(e,!0,null!=t&&!0===t.hydrate)}xu.createRoot=_u,xu.unstable_createRoot=void 0,function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zr=Ur(function(e){return t.onCommitFiberRoot(n,e)}),Fr=Ur(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:We.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:D,bundleType:0,version:"16.8.0-alpha.1",rendererPackageName:"react-dom"});var Eu={default:xu},ku=Eu&&xu||Eu;e.exports=ku.default||ku},function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.0-alpha.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,u=!1,l=!1;function s(){if(!u){var e=n.expirationTime;l?E():l=!0,_(p,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,u=i;o=e,i=t;try{var l=r()}finally{o=a,i=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,s()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){u=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?s():l=!1}}}function p(e){u=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{c()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{c()}while(null!==n&&!k())}finally{u=!1,r=o,null!==n?s():l=!1,f()}}var d,h,y=Date,v="function"==typeof setTimeout?setTimeout:void 0,m="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){d=g(function(t){m(h),e(t)}),h=v(function(){b(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return y.now()};var _,E,k,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var C=S._schedMock;_=C[0],E=C[1],k=C[2],t.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var O=null,M=function(e){if(null!==O)try{O(e)}finally{O=null}};_=function(e){null!==O?setTimeout(_,0,e):(O=e,setTimeout(M,0,!1))},E=function(){O=null},k=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var T=null,j=!1,P=-1,A=!1,N=!1,R=0,D=33,I=33;k=function(){return R<=t.unstable_now()};var L=new MessageChannel,z=L.port2;L.port1.onmessage=function(){j=!1;var e=T,n=P;T=null,P=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return A||(A=!0,w(F)),T=e,void(P=n);o=!0}if(null!==e){N=!0;try{e(o)}finally{N=!1}}};var F=function(e){if(null!==T){w(F);var t=e-R+I;t<I&&D<I?(8>t&&(t=8),I=t<D?D:t):D=t,R=e+I,j||(j=!0,z.postMessage(void 0))}else A=!1};_=function(e,t){T=e,P=t,N||0>t?z.postMessage(void 0):A||(A=!0,w(F))},E=function(){T=null,j=!1,P=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{i=null;var u=n;do{if(u.expirationTime>r){i=u;break}u=u.next}while(u!==n);null===i?i=n:i===n&&(n=e,s()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||k())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(10))},function(e,t,n){"use strict";var r=n(26);function o(){}e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){var r,o;!function(){var a={version:"3.5.17"},i=[].slice,u=function(e){return i.call(e)},l=this.document;function s(e){return e&&(e.ownerDocument||e.document||e).documentElement}function c(e){return e&&(e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView)}if(l)try{u(l.documentElement.childNodes)[0].nodeType}catch(e){u=function(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement("DIV").style.setProperty("opacity",0,"")}catch(e){var f=this.Element.prototype,p=f.setAttribute,d=f.setAttributeNS,h=this.CSSStyleDeclaration.prototype,y=h.setProperty;f.setAttribute=function(e,t){p.call(this,e,t+"")},f.setAttributeNS=function(e,t,n){d.call(this,e,t,n+"")},h.setProperty=function(e,t,n){y.call(this,e,t+"",n)}}function v(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function m(e){return null===e?NaN:+e}function g(e){return!isNaN(e)}function b(e){return{left:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var a=r+o>>>1;e(t[a],n)<0?r=a+1:o=a}return r},right:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var a=r+o>>>1;e(t[a],n)>0?o=a:r=a+1}return r}}}a.ascending=v,a.descending=function(e,t){return t<e?-1:t>e?1:t>=e?0:NaN},a.min=function(e,t){var n,r,o=-1,a=e.length;if(1===arguments.length){for(;++o<a;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<a;)null!=(r=e[o])&&n>r&&(n=r)}else{for(;++o<a;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<a;)null!=(r=t.call(e,e[o],o))&&n>r&&(n=r)}return n},a.max=function(e,t){var n,r,o=-1,a=e.length;if(1===arguments.length){for(;++o<a;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<a;)null!=(r=e[o])&&r>n&&(n=r)}else{for(;++o<a;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<a;)null!=(r=t.call(e,e[o],o))&&r>n&&(n=r)}return n},a.extent=function(e,t){var n,r,o,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=o=r;break}for(;++a<i;)null!=(r=e[a])&&(n>r&&(n=r),o<r&&(o=r))}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=o=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&(n>r&&(n=r),o<r&&(o=r))}return[n,o]},a.sum=function(e,t){var n,r=0,o=e.length,a=-1;if(1===arguments.length)for(;++a<o;)g(n=+e[a])&&(r+=n);else for(;++a<o;)g(n=+t.call(e,e[a],a))&&(r+=n);return r},a.mean=function(e,t){var n,r=0,o=e.length,a=-1,i=o;if(1===arguments.length)for(;++a<o;)g(n=m(e[a]))?r+=n:--i;else for(;++a<o;)g(n=m(t.call(e,e[a],a)))?r+=n:--i;if(i)return r/i},a.quantile=function(e,t){var n=(e.length-1)*t+1,r=Math.floor(n),o=+e[r-1],a=n-r;return a?o+a*(e[r]-o):o},a.median=function(e,t){var n,r=[],o=e.length,i=-1;if(1===arguments.length)for(;++i<o;)g(n=m(e[i]))&&r.push(n);else for(;++i<o;)g(n=m(t.call(e,e[i],i)))&&r.push(n);if(r.length)return a.quantile(r.sort(v),.5)},a.variance=function(e,t){var n,r,o=e.length,a=0,i=0,u=-1,l=0;if(1===arguments.length)for(;++u<o;)g(n=m(e[u]))&&(i+=(r=n-a)*(n-(a+=r/++l)));else for(;++u<o;)g(n=m(t.call(e,e[u],u)))&&(i+=(r=n-a)*(n-(a+=r/++l)));if(l>1)return i/(l-1)},a.deviation=function(){var e=a.variance.apply(this,arguments);return e?Math.sqrt(e):e};var w=b(v);function x(e){return e.length}a.bisectLeft=w.left,a.bisect=a.bisectRight=w.right,a.bisector=function(e){return b(1===e.length?function(t,n){return v(e(t),n)}:e)},a.shuffle=function(e,t,n){(a=arguments.length)<3&&(n=e.length,a<2&&(t=0));for(var r,o,a=n-t;a;)o=Math.random()*a--|0,r=e[a+t],e[a+t]=e[o+t],e[o+t]=r;return e},a.permute=function(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r},a.pairs=function(e){for(var t=0,n=e.length-1,r=e[0],o=new Array(n<0?0:n);t<n;)o[t]=[r,r=e[++t]];return o},a.transpose=function(e){if(!(o=e.length))return[];for(var t=-1,n=a.min(e,x),r=new Array(n);++t<n;)for(var o,i=-1,u=r[t]=new Array(o);++i<o;)u[i]=e[i][t];return r},a.zip=function(){return a.transpose(arguments)},a.keys=function(e){var t=[];for(var n in e)t.push(n);return t},a.values=function(e){var t=[];for(var n in e)t.push(e[n]);return t},a.entries=function(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t},a.merge=function(e){for(var t,n,r,o=e.length,a=-1,i=0;++a<o;)i+=e[a].length;for(n=new Array(i);--o>=0;)for(t=(r=e[o]).length;--t>=0;)n[--i]=r[t];return n};var _=Math.abs;function E(e,t){for(var n in t)Object.defineProperty(e.prototype,n,{value:t[n],enumerable:!1})}function k(){this._=Object.create(null)}a.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("infinite range");var r,o=[],a=function(e){var t=1;for(;e*t%1;)t*=10;return t}(_(n)),i=-1;if(e*=a,t*=a,(n*=a)<0)for(;(r=e+n*++i)>t;)o.push(r/a);else for(;(r=e+n*++i)<t;)o.push(r/a);return o},a.map=function(e,t){var n=new k;if(e instanceof k)e.forEach(function(e,t){n.set(e,t)});else if(Array.isArray(e)){var r,o=-1,a=e.length;if(1===arguments.length)for(;++o<a;)n.set(o,e[o]);else for(;++o<a;)n.set(t.call(e,r=e[o],o),r)}else for(var i in e)n.set(i,e[i]);return n};var S="__proto__",C="\0";function O(e){return(e+="")===S||e[0]===C?C+e:e}function M(e){return(e+="")[0]===C?e.slice(1):e}function T(e){return O(e)in this._}function j(e){return(e=O(e))in this._&&delete this._[e]}function P(){var e=[];for(var t in this._)e.push(M(t));return e}function A(){var e=0;for(var t in this._)++e;return e}function N(){for(var e in this._)return!1;return!0}function R(){this._=Object.create(null)}function D(e){return e}function I(e,t,n){return function(){var r=n.apply(t,arguments);return r===t?e:r}}function L(e,t){if(t in e)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var n=0,r=z.length;n<r;++n){var o=z[n]+t;if(o in e)return o}}E(k,{has:T,get:function(e){return this._[O(e)]},set:function(e,t){return this._[O(e)]=t},remove:j,keys:P,values:function(){var e=[];for(var t in this._)e.push(this._[t]);return e},entries:function(){var e=[];for(var t in this._)e.push({key:M(t),value:this._[t]});return e},size:A,empty:N,forEach:function(e){for(var t in this._)e.call(this,M(t),this._[t])}}),a.nest=function(){var e,t,n={},r=[],o=[];function i(o,a,u){if(u>=r.length)return t?t.call(n,a):e?a.sort(e):a;for(var l,s,c,f,p=-1,d=a.length,h=r[u++],y=new k;++p<d;)(f=y.get(l=h(s=a[p])))?f.push(s):y.set(l,[s]);return o?(s=o(),c=function(e,t){s.set(e,i(o,t,u))}):(s={},c=function(e,t){s[e]=i(o,t,u)}),y.forEach(c),s}return n.map=function(e,t){return i(t,e,0)},n.entries=function(e){return function e(t,n){if(n>=r.length)return t;var a=[],i=o[n++];return t.forEach(function(t,r){a.push({key:t,values:e(r,n)})}),i?a.sort(function(e,t){return i(e.key,t.key)}):a}(i(a.map,e,0),0)},n.key=function(e){return r.push(e),n},n.sortKeys=function(e){return o[r.length-1]=e,n},n.sortValues=function(t){return e=t,n},n.rollup=function(e){return t=e,n},n},a.set=function(e){var t=new R;if(e)for(var n=0,r=e.length;n<r;++n)t.add(e[n]);return t},E(R,{has:T,add:function(e){return this._[O(e+="")]=!0,e},remove:j,values:P,size:A,empty:N,forEach:function(e){for(var t in this._)e.call(this,M(t))}}),a.behavior={},a.rebind=function(e,t){for(var n,r=1,o=arguments.length;++r<o;)e[n=arguments[r]]=I(e,t,t[n]);return e};var z=["webkit","ms","moz","Moz","o","O"];function F(){}function U(){}function B(e){var t=[],n=new k;function r(){for(var n,r=t,o=-1,a=r.length;++o<a;)(n=r[o].on)&&n.apply(this,arguments);return e}return r.on=function(r,o){var a,i=n.get(r);return arguments.length<2?i&&i.on:(i&&(i.on=null,t=t.slice(0,a=t.indexOf(i)).concat(t.slice(a+1)),n.remove(r)),o&&t.push(n.set(r,{on:o})),e)},r}function q(){a.event.preventDefault()}function V(){for(var e,t=a.event;e=t.sourceEvent;)t=e;return t}function W(e){for(var t=new U,n=0,r=arguments.length;++n<r;)t[arguments[n]]=B(t);return t.of=function(n,r){return function(o){try{var i=o.sourceEvent=a.event;o.target=e,a.event=o,t[o.type].apply(n,r)}finally{a.event=i}}},t}a.dispatch=function(){for(var e=new U,t=-1,n=arguments.length;++t<n;)e[arguments[t]]=B(e);return e},U.prototype.on=function(e,t){var n=e.indexOf("."),r="";if(n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),e)return arguments.length<2?this[e].on(r):this[e].on(r,t);if(2===arguments.length){if(null==t)for(e in this)this.hasOwnProperty(e)&&this[e].on(r,null);return this}},a.event=null,a.requote=function(e){return e.replace(H,"\\$&")};var H=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,$={}.__proto__?function(e,t){e.__proto__=t}:function(e,t){for(var n in t)e[n]=t[n]};function Y(e){return $(e,Q),e}var K=function(e,t){return t.querySelector(e)},G=function(e,t){return t.querySelectorAll(e)},J=function(e,t){var n=e.matches||e[L(e,"matchesSelector")];return(J=function(e,t){return n.call(e,t)})(e,t)};"function"==typeof Sizzle&&(K=function(e,t){return Sizzle(e,t)[0]||null},G=Sizzle,J=Sizzle.matchesSelector),a.selection=function(){return a.select(l.documentElement)};var Q=a.selection.prototype=[];function X(e){return"function"==typeof e?e:function(){return K(e,this)}}function Z(e){return"function"==typeof e?e:function(){return G(e,this)}}Q.select=function(e){var t,n,r,o,a=[];e=X(e);for(var i=-1,u=this.length;++i<u;){a.push(t=[]),t.parentNode=(r=this[i]).parentNode;for(var l=-1,s=r.length;++l<s;)(o=r[l])?(t.push(n=e.call(o,o.__data__,l,i)),n&&"__data__"in o&&(n.__data__=o.__data__)):t.push(null)}return Y(a)},Q.selectAll=function(e){var t,n,r=[];e=Z(e);for(var o=-1,a=this.length;++o<a;)for(var i=this[o],l=-1,s=i.length;++l<s;)(n=i[l])&&(r.push(t=u(e.call(n,n.__data__,l,o))),t.parentNode=n);return Y(r)};var ee="http://www.w3.org/1999/xhtml",te={svg:"http://www.w3.org/2000/svg",xhtml:ee,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ne(e,t){return e=a.ns.qualify(e),null==t?e.local?function(){this.removeAttributeNS(e.space,e.local)}:function(){this.removeAttribute(e)}:"function"==typeof t?e.local?function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}:function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}:e.local?function(){this.setAttributeNS(e.space,e.local,t)}:function(){this.setAttribute(e,t)}}function re(e){return e.trim().replace(/\s+/g," ")}function oe(e){return new RegExp("(?:^|\\s+)"+a.requote(e)+"(?:\\s+|$)","g")}function ae(e){return(e+"").trim().split(/^|\s+/)}function ie(e,t){var n=(e=ae(e).map(ue)).length;return"function"==typeof t?function(){for(var r=-1,o=t.apply(this,arguments);++r<n;)e[r](this,o)}:function(){for(var r=-1;++r<n;)e[r](this,t)}}function ue(e){var t=oe(e);return function(n,r){if(o=n.classList)return r?o.add(e):o.remove(e);var o=n.getAttribute("class")||"";r?(t.lastIndex=0,t.test(o)||n.setAttribute("class",re(o+" "+e))):n.setAttribute("class",re(o.replace(t," ")))}}function le(e,t,n){return null==t?function(){this.style.removeProperty(e)}:"function"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}:function(){this.style.setProperty(e,t,n)}}function se(e,t){return null==t?function(){delete this[e]}:"function"==typeof t?function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}:function(){this[e]=t}}function ce(e){return"function"==typeof e?e:(e=a.ns.qualify(e)).local?function(){return this.ownerDocument.createElementNS(e.space,e.local)}:function(){var t=this.ownerDocument,n=this.namespaceURI;return n===ee&&t.documentElement.namespaceURI===ee?t.createElement(e):t.createElementNS(n,e)}}function fe(){var e=this.parentNode;e&&e.removeChild(this)}function pe(e){return{__data__:e}}function de(e){return function(){return J(this,e)}}function he(e,t){for(var n=0,r=e.length;n<r;n++)for(var o,a=e[n],i=0,u=a.length;i<u;i++)(o=a[i])&&t(o,i,n);return e}function ye(e){return $(e,ve),e}a.ns={prefix:te,qualify:function(e){var t=e.indexOf(":"),n=e;return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),te.hasOwnProperty(n)?{space:te[n],local:e}:e}},Q.attr=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node();return(e=a.ns.qualify(e)).local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}for(t in e)this.each(ne(t,e[t]));return this}return this.each(ne(e,t))},Q.classed=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node(),r=(e=ae(e)).length,o=-1;if(t=n.classList){for(;++o<r;)if(!t.contains(e[o]))return!1}else for(t=n.getAttribute("class");++o<r;)if(!oe(e[o]).test(t))return!1;return!0}for(t in e)this.each(ie(t,e[t]));return this}return this.each(ie(e,t))},Q.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.each(le(n,e[n],t));return this}if(r<2){var o=this.node();return c(o).getComputedStyle(o,null).getPropertyValue(e)}n=""}return this.each(le(e,t,n))},Q.property=function(e,t){if(arguments.length<2){if("string"==typeof e)return this.node()[e];for(t in e)this.each(se(t,e[t]));return this}return this.each(se(e,t))},Q.text=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}:null==e?function(){this.textContent=""}:function(){this.textContent=e}):this.node().textContent},Q.html=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}:null==e?function(){this.innerHTML=""}:function(){this.innerHTML=e}):this.node().innerHTML},Q.append=function(e){return e=ce(e),this.select(function(){return this.appendChild(e.apply(this,arguments))})},Q.insert=function(e,t){return e=ce(e),t=X(t),this.select(function(){return this.insertBefore(e.apply(this,arguments),t.apply(this,arguments)||null)})},Q.remove=function(){return this.each(fe)},Q.data=function(e,t){var n,r,o=-1,a=this.length;if(!arguments.length){for(e=new Array(a=(n=this[0]).length);++o<a;)(r=n[o])&&(e[o]=r.__data__);return e}function i(e,n){var r,o,a,i=e.length,c=n.length,f=Math.min(i,c),p=new Array(c),d=new Array(c),h=new Array(i);if(t){var y,v=new k,m=new Array(i);for(r=-1;++r<i;)(o=e[r])&&(v.has(y=t.call(o,o.__data__,r))?h[r]=o:v.set(y,o),m[r]=y);for(r=-1;++r<c;)(o=v.get(y=t.call(n,a=n[r],r)))?!0!==o&&(p[r]=o,o.__data__=a):d[r]=pe(a),v.set(y,!0);for(r=-1;++r<i;)r in m&&!0!==v.get(m[r])&&(h[r]=e[r])}else{for(r=-1;++r<f;)o=e[r],a=n[r],o?(o.__data__=a,p[r]=o):d[r]=pe(a);for(;r<c;++r)d[r]=pe(n[r]);for(;r<i;++r)h[r]=e[r]}d.update=p,d.parentNode=p.parentNode=h.parentNode=e.parentNode,u.push(d),l.push(p),s.push(h)}var u=ye([]),l=Y([]),s=Y([]);if("function"==typeof e)for(;++o<a;)i(n=this[o],e.call(n,n.parentNode.__data__,o));else for(;++o<a;)i(n=this[o],e);return l.enter=function(){return u},l.exit=function(){return s},l},Q.datum=function(e){return arguments.length?this.property("__data__",e):this.property("__data__")},Q.filter=function(e){var t,n,r,o=[];"function"!=typeof e&&(e=de(e));for(var a=0,i=this.length;a<i;a++){o.push(t=[]),t.parentNode=(n=this[a]).parentNode;for(var u=0,l=n.length;u<l;u++)(r=n[u])&&e.call(r,r.__data__,u,a)&&t.push(r)}return Y(o)},Q.order=function(){for(var e=-1,t=this.length;++e<t;)for(var n,r=this[e],o=r.length-1,a=r[o];--o>=0;)(n=r[o])&&(a&&a!==n.nextSibling&&a.parentNode.insertBefore(n,a),a=n);return this},Q.sort=function(e){e=function(e){arguments.length||(e=v);return function(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}}.apply(this,arguments);for(var t=-1,n=this.length;++t<n;)this[t].sort(e);return this.order()},Q.each=function(e){return he(this,function(t,n,r){e.call(t,t.__data__,n,r)})},Q.call=function(e){var t=u(arguments);return e.apply(t[0]=this,t),this},Q.empty=function(){return!this.node()},Q.node=function(){for(var e=0,t=this.length;e<t;e++)for(var n=this[e],r=0,o=n.length;r<o;r++){var a=n[r];if(a)return a}return null},Q.size=function(){var e=0;return he(this,function(){++e}),e};var ve=[];function me(e,t,n){var r="__on"+e,o=e.indexOf("."),i=be;o>0&&(e=e.slice(0,o));var l=ge.get(e);function s(){var t=this[r];t&&(this.removeEventListener(e,t,t.$),delete this[r])}return l&&(e=l,i=we),o?t?function(){var o=i(t,u(arguments));s.call(this),this.addEventListener(e,this[r]=o,o.$=n),o._=t}:s:t?F:function(){var t,n=new RegExp("^__on([^.]+)"+a.requote(e)+"$");for(var r in this)if(t=r.match(n)){var o=this[r];this.removeEventListener(t[1],o,o.$),delete this[r]}}}a.selection.enter=ye,a.selection.enter.prototype=ve,ve.append=Q.append,ve.empty=Q.empty,ve.node=Q.node,ve.call=Q.call,ve.size=Q.size,ve.select=function(e){for(var t,n,r,o,a,i=[],u=-1,l=this.length;++u<l;){r=(o=this[u]).update,i.push(t=[]),t.parentNode=o.parentNode;for(var s=-1,c=o.length;++s<c;)(a=o[s])?(t.push(r[s]=n=e.call(o.parentNode,a.__data__,s,u)),n.__data__=a.__data__):t.push(null)}return Y(i)},ve.insert=function(e,t){var n,r,o;return arguments.length<2&&(n=this,t=function(e,t,a){var i,u=n[a].update,l=u.length;for(a!=o&&(o=a,r=0),t>=r&&(r=t+1);!(i=u[r])&&++r<l;);return i}),Q.insert.call(this,e,t)},a.select=function(e){var t;return"string"==typeof e?(t=[K(e,l)]).parentNode=l.documentElement:(t=[e]).parentNode=s(e),Y([t])},a.selectAll=function(e){var t;return"string"==typeof e?(t=u(G(e,l))).parentNode=l.documentElement:(t=u(e)).parentNode=null,Y([t])},Q.on=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=!1),e)this.each(me(n,e[n],t));return this}if(r<2)return(r=this.node()["__on"+e])&&r._;n=!1}return this.each(me(e,t,n))};var ge=a.map({mouseenter:"mouseover",mouseleave:"mouseout"});function be(e,t){return function(n){var r=a.event;a.event=n,t[0]=this.__data__;try{e.apply(this,t)}finally{a.event=r}}}function we(e,t){var n=be(e,t);return function(e){var t=e.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||n.call(this,e)}}l&&ge.forEach(function(e){"on"+e in l&&ge.remove(e)});var xe,_e=0;function Ee(e){var t=".dragsuppress-"+ ++_e,n="click"+t,r=a.select(c(e)).on("touchmove"+t,q).on("dragstart"+t,q).on("selectstart"+t,q);if(null==xe&&(xe=!("onselectstart"in e)&&L(e.style,"userSelect")),xe){var o=s(e).style,i=o[xe];o[xe]="none"}return function(e){if(r.on(t,null),xe&&(o[xe]=i),e){var a=function(){r.on(n,null)};r.on(n,function(){q(),a()},!0),setTimeout(a,0)}}}a.mouse=function(e){return Se(e,V())};var ke=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function Se(e,t){t.changedTouches&&(t=t.changedTouches[0]);var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();if(ke<0){var o=c(e);if(o.scrollX||o.scrollY){var i=(n=a.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important"))[0][0].getScreenCTM();ke=!(i.f||i.e),n.remove()}}return ke?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var u=e.getBoundingClientRect();return[t.clientX-u.left-e.clientLeft,t.clientY-u.top-e.clientTop]}function Ce(){return a.event.changedTouches[0].identifier}a.touch=function(e,t,n){if(arguments.length<3&&(n=t,t=V().changedTouches),t)for(var r,o=0,a=t.length;o<a;++o)if((r=t[o]).identifier===n)return Se(e,r)},a.behavior.drag=function(){var e=W(o,"drag","dragstart","dragend"),t=null,n=i(F,a.mouse,c,"mousemove","mouseup"),r=i(Ce,a.touch,D,"touchmove","touchend");function o(){this.on("mousedown.drag",n).on("touchstart.drag",r)}function i(n,r,o,i,u){return function(){var l,s=a.event.target.correspondingElement||a.event.target,c=this.parentNode,f=e.of(this,arguments),p=0,d=n(),h=".drag"+(null==d?"":"-"+d),y=a.select(o(s)).on(i+h,function(){var e,t,n=r(c,d);if(!n)return;e=n[0]-m[0],t=n[1]-m[1],p|=e|t,m=n,f({type:"drag",x:n[0]+l[0],y:n[1]+l[1],dx:e,dy:t})}).on(u+h,function(){if(!r(c,d))return;y.on(i+h,null).on(u+h,null),v(p),f({type:"dragend"})}),v=Ee(s),m=r(c,d);l=t?[(l=t.apply(this,arguments)).x-m[0],l.y-m[1]]:[0,0],f({type:"dragstart"})}}return o.origin=function(e){return arguments.length?(t=e,o):t},a.rebind(o,e,"on")},a.touches=function(e,t){return arguments.length<2&&(t=V().touches),t?u(t).map(function(t){var n=Se(e,t);return n.identifier=t.identifier,n}):[]};var Oe=1e-6,Me=Oe*Oe,Te=Math.PI,je=2*Te,Pe=je-Oe,Ae=Te/2,Ne=Te/180,Re=180/Te;function De(e){return e>0?1:e<0?-1:0}function Ie(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}function Le(e){return e>1?0:e<-1?Te:Math.acos(e)}function ze(e){return e>1?Ae:e<-1?-Ae:Math.asin(e)}function Fe(e){return((e=Math.exp(e))+1/e)/2}function Ue(e){return(e=Math.sin(e/2))*e}var Be=Math.SQRT2;a.interpolateZoom=function(e,t){var n,r,o=e[0],a=e[1],i=e[2],u=t[0],l=t[1],s=t[2],c=u-o,f=l-a,p=c*c+f*f;if(p<Me)r=Math.log(s/i)/Be,n=function(e){return[o+e*c,a+e*f,i*Math.exp(Be*e*r)]};else{var d=Math.sqrt(p),h=(s*s-i*i+4*p)/(2*i*2*d),y=(s*s-i*i-4*p)/(2*s*2*d),v=Math.log(Math.sqrt(h*h+1)-h),m=Math.log(Math.sqrt(y*y+1)-y);r=(m-v)/Be,n=function(e){var t,n=e*r,u=Fe(v),l=i/(2*d)*(u*(t=Be*n+v,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(v));return[o+l*c,a+l*f,i*u/Fe(Be*n+v)]}}return n.duration=1e3*r,n},a.behavior.zoom=function(){var e,t,n,r,o,i,u,s,f,p={x:0,y:0,k:1},d=[960,500],h=We,y=250,v=0,m="mousedown.zoom",g="mousemove.zoom",b="mouseup.zoom",w="touchstart.zoom",x=W(_,"zoomstart","zoom","zoomend");function _(e){e.on(m,P).on(Ve+".zoom",N).on("dblclick.zoom",R).on(w,A)}function E(e){return[(e[0]-p.x)/p.k,(e[1]-p.y)/p.k]}function k(e){p.k=Math.max(h[0],Math.min(h[1],e))}function S(e,t){t=function(e){return[e[0]*p.k+p.x,e[1]*p.k+p.y]}(t),p.x+=e[0]-t[0],p.y+=e[1]-t[1]}function C(e,n,r,o){e.__chart__={x:p.x,y:p.y,k:p.k},k(Math.pow(2,o)),S(t=n,r),e=a.select(e),y>0&&(e=e.transition().duration(y)),e.call(_.event)}function O(){u&&u.domain(i.range().map(function(e){return(e-p.x)/p.k}).map(i.invert)),f&&f.domain(s.range().map(function(e){return(e-p.y)/p.k}).map(s.invert))}function M(e){v++||e({type:"zoomstart"})}function T(e){O(),e({type:"zoom",scale:p.k,translate:[p.x,p.y]})}function j(e){--v||(e({type:"zoomend"}),t=null)}function P(){var e=this,t=x.of(e,arguments),n=0,r=a.select(c(e)).on(g,function(){n=1,S(a.mouse(e),o),T(t)}).on(b,function(){r.on(g,null).on(b,null),i(n),j(t)}),o=E(a.mouse(e)),i=Ee(e);mu.call(e),M(t)}function A(){var e,t=this,n=x.of(t,arguments),r={},i=0,u=".zoom-"+a.event.changedTouches[0].identifier,l="touchmove"+u,s="touchend"+u,c=[],f=a.select(t),d=Ee(t);function h(){var n=a.touches(t);return e=p.k,n.forEach(function(e){e.identifier in r&&(r[e.identifier]=E(e))}),n}function y(){var e=a.event.target;a.select(e).on(l,v).on(s,g),c.push(e);for(var n=a.event.changedTouches,u=0,f=n.length;u<f;++u)r[n[u].identifier]=null;var d=h(),y=Date.now();if(1===d.length){if(y-o<500){var m=d[0];C(t,m,r[m.identifier],Math.floor(Math.log(p.k)/Math.LN2)+1),q()}o=y}else if(d.length>1){m=d[0];var b=d[1],w=m[0]-b[0],x=m[1]-b[1];i=w*w+x*x}}function v(){var u,l,s,c,f=a.touches(t);mu.call(t);for(var p=0,d=f.length;p<d;++p,c=null)if(s=f[p],c=r[s.identifier]){if(l)break;u=s,l=c}if(c){var h=(h=s[0]-u[0])*h+(h=s[1]-u[1])*h,y=i&&Math.sqrt(h/i);u=[(u[0]+s[0])/2,(u[1]+s[1])/2],l=[(l[0]+c[0])/2,(l[1]+c[1])/2],k(y*e)}o=null,S(u,l),T(n)}function g(){if(a.event.touches.length){for(var e=a.event.changedTouches,t=0,o=e.length;t<o;++t)delete r[e[t].identifier];for(var i in r)return void h()}a.selectAll(c).on(u,null),f.on(m,P).on(w,A),d(),j(n)}y(),M(n),f.on(m,null).on(w,y)}function N(){var o=x.of(this,arguments);r?clearTimeout(r):(mu.call(this),e=E(t=n||a.mouse(this)),M(o)),r=setTimeout(function(){r=null,j(o)},50),q(),k(Math.pow(2,.002*qe())*p.k),S(t,e),T(o)}function R(){var e=a.mouse(this),t=Math.log(p.k)/Math.LN2;C(this,e,E(e),a.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return Ve||(Ve="onwheel"in l?(qe=function(){return-a.event.deltaY*(a.event.deltaMode?120:1)},"wheel"):"onmousewheel"in l?(qe=function(){return a.event.wheelDelta},"mousewheel"):(qe=function(){return-a.event.detail},"MozMousePixelScroll")),_.event=function(e){e.each(function(){var e=x.of(this,arguments),n=p;wu?a.select(this).transition().each("start.zoom",function(){p=this.__chart__||{x:0,y:0,k:1},M(e)}).tween("zoom:zoom",function(){var r=d[0],o=d[1],i=t?t[0]:r/2,u=t?t[1]:o/2,l=a.interpolateZoom([(i-p.x)/p.k,(u-p.y)/p.k,r/p.k],[(i-n.x)/n.k,(u-n.y)/n.k,r/n.k]);return function(t){var n=l(t),o=r/n[2];this.__chart__=p={x:i-n[0]*o,y:u-n[1]*o,k:o},T(e)}}).each("interrupt.zoom",function(){j(e)}).each("end.zoom",function(){j(e)}):(this.__chart__=p,M(e),T(e),j(e))})},_.translate=function(e){return arguments.length?(p={x:+e[0],y:+e[1],k:p.k},O(),_):[p.x,p.y]},_.scale=function(e){return arguments.length?(p={x:p.x,y:p.y,k:null},k(+e),O(),_):p.k},_.scaleExtent=function(e){return arguments.length?(h=null==e?We:[+e[0],+e[1]],_):h},_.center=function(e){return arguments.length?(n=e&&[+e[0],+e[1]],_):n},_.size=function(e){return arguments.length?(d=e&&[+e[0],+e[1]],_):d},_.duration=function(e){return arguments.length?(y=+e,_):y},_.x=function(e){return arguments.length?(u=e,i=e.copy(),p={x:0,y:0,k:1},_):u},_.y=function(e){return arguments.length?(f=e,s=e.copy(),p={x:0,y:0,k:1},_):f},a.rebind(_,x,"on")};var qe,Ve,We=[0,1/0];function He(){}function $e(e,t,n){return this instanceof $e?(this.h=+e,this.s=+t,void(this.l=+n)):arguments.length<2?e instanceof $e?new $e(e.h,e.s,e.l):ht(""+e,yt,$e):new $e(e,t,n)}a.color=He,He.prototype.toString=function(){return this.rgb()+""},a.hsl=$e;var Ye=$e.prototype=new He;function Ke(e,t,n){var r,o;function a(e){return Math.round(255*function(e){return e>360?e-=360:e<0&&(e+=360),e<60?r+(o-r)*e/60:e<180?o:e<240?r+(o-r)*(240-e)/60:r}(e))}return e=isNaN(e)?0:(e%=360)<0?e+360:e,t=isNaN(t)?0:t<0?0:t>1?1:t,r=2*(n=n<0?0:n>1?1:n)-(o=n<=.5?n*(1+t):n+t-n*t),new st(a(e+120),a(e),a(e-120))}function Ge(e,t,n){return this instanceof Ge?(this.h=+e,this.c=+t,void(this.l=+n)):arguments.length<2?e instanceof Ge?new Ge(e.h,e.c,e.l):at(e instanceof Xe?e.l:(e=vt((e=a.rgb(e)).r,e.g,e.b)).l,e.a,e.b):new Ge(e,t,n)}Ye.brighter=function(e){return e=Math.pow(.7,arguments.length?e:1),new $e(this.h,this.s,this.l/e)},Ye.darker=function(e){return e=Math.pow(.7,arguments.length?e:1),new $e(this.h,this.s,e*this.l)},Ye.rgb=function(){return Ke(this.h,this.s,this.l)},a.hcl=Ge;var Je=Ge.prototype=new He;function Qe(e,t,n){return isNaN(e)&&(e=0),isNaN(t)&&(t=0),new Xe(n,Math.cos(e*=Ne)*t,Math.sin(e)*t)}function Xe(e,t,n){return this instanceof Xe?(this.l=+e,this.a=+t,void(this.b=+n)):arguments.length<2?e instanceof Xe?new Xe(e.l,e.a,e.b):e instanceof Ge?Qe(e.h,e.c,e.l):vt((e=st(e)).r,e.g,e.b):new Xe(e,t,n)}Je.brighter=function(e){return new Ge(this.h,this.c,Math.min(100,this.l+Ze*(arguments.length?e:1)))},Je.darker=function(e){return new Ge(this.h,this.c,Math.max(0,this.l-Ze*(arguments.length?e:1)))},Je.rgb=function(){return Qe(this.h,this.c,this.l).rgb()},a.lab=Xe;var Ze=18,et=.95047,tt=1,nt=1.08883,rt=Xe.prototype=new He;function ot(e,t,n){var r=(e+16)/116,o=r+t/500,a=r-n/200;return new st(lt(3.2404542*(o=it(o)*et)-1.5371385*(r=it(r)*tt)-.4985314*(a=it(a)*nt)),lt(-.969266*o+1.8760108*r+.041556*a),lt(.0556434*o-.2040259*r+1.0572252*a))}function at(e,t,n){return e>0?new Ge(Math.atan2(n,t)*Re,Math.sqrt(t*t+n*n),e):new Ge(NaN,NaN,e)}function it(e){return e>.206893034?e*e*e:(e-4/29)/7.787037}function ut(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29}function lt(e){return Math.round(255*(e<=.00304?12.92*e:1.055*Math.pow(e,1/2.4)-.055))}function st(e,t,n){return this instanceof st?(this.r=~~e,this.g=~~t,void(this.b=~~n)):arguments.length<2?e instanceof st?new st(e.r,e.g,e.b):ht(""+e,st,Ke):new st(e,t,n)}function ct(e){return new st(e>>16,e>>8&255,255&e)}function ft(e){return ct(e)+""}rt.brighter=function(e){return new Xe(Math.min(100,this.l+Ze*(arguments.length?e:1)),this.a,this.b)},rt.darker=function(e){return new Xe(Math.max(0,this.l-Ze*(arguments.length?e:1)),this.a,this.b)},rt.rgb=function(){return ot(this.l,this.a,this.b)},a.rgb=st;var pt=st.prototype=new He;function dt(e){return e<16?"0"+Math.max(0,e).toString(16):Math.min(255,e).toString(16)}function ht(e,t,n){var r,o,a,i=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(e=e.toLowerCase()))switch(o=r[2].split(","),r[1]){case"hsl":return n(parseFloat(o[0]),parseFloat(o[1])/100,parseFloat(o[2])/100);case"rgb":return t(gt(o[0]),gt(o[1]),gt(o[2]))}return(a=bt.get(e))?t(a.r,a.g,a.b):(null==e||"#"!==e.charAt(0)||isNaN(a=parseInt(e.slice(1),16))||(4===e.length?(i=(3840&a)>>4,i|=i>>4,u=240&a,u|=u>>4,l=15&a,l|=l<<4):7===e.length&&(i=(16711680&a)>>16,u=(65280&a)>>8,l=255&a)),t(i,u,l))}function yt(e,t,n){var r,o,a=Math.min(e/=255,t/=255,n/=255),i=Math.max(e,t,n),u=i-a,l=(i+a)/2;return u?(o=l<.5?u/(i+a):u/(2-i-a),r=e==i?(t-n)/u+(t<n?6:0):t==i?(n-e)/u+2:(e-t)/u+4,r*=60):(r=NaN,o=l>0&&l<1?0:r),new $e(r,o,l)}function vt(e,t,n){var r=ut((.4124564*(e=mt(e))+.3575761*(t=mt(t))+.1804375*(n=mt(n)))/et),o=ut((.2126729*e+.7151522*t+.072175*n)/tt);return Xe(116*o-16,500*(r-o),200*(o-ut((.0193339*e+.119192*t+.9503041*n)/nt)))}function mt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function gt(e){var t=parseFloat(e);return"%"===e.charAt(e.length-1)?Math.round(2.55*t):t}pt.brighter=function(e){e=Math.pow(.7,arguments.length?e:1);var t=this.r,n=this.g,r=this.b,o=30;return t||n||r?(t&&t<o&&(t=o),n&&n<o&&(n=o),r&&r<o&&(r=o),new st(Math.min(255,t/e),Math.min(255,n/e),Math.min(255,r/e))):new st(o,o,o)},pt.darker=function(e){return new st((e=Math.pow(.7,arguments.length?e:1))*this.r,e*this.g,e*this.b)},pt.hsl=function(){return yt(this.r,this.g,this.b)},pt.toString=function(){return"#"+dt(this.r)+dt(this.g)+dt(this.b)};var bt=a.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function wt(e){return"function"==typeof e?e:function(){return e}}function xt(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=null),_t(t,n,e,r)}}function _t(e,t,n,r){var o={},i=a.dispatch("beforesend","progress","load","error"),l={},s=new XMLHttpRequest,c=null;function f(){var e,t=s.status;if(!t&&function(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}(s)||t>=200&&t<300||304===t){try{e=n.call(o,s)}catch(e){return void i.error.call(o,e)}i.load.call(o,e)}else i.error.call(o,s)}return!this.XDomainRequest||"withCredentials"in s||!/^(http(s)?:)?\/\//.test(e)||(s=new XDomainRequest),"onload"in s?s.onload=s.onerror=f:s.onreadystatechange=function(){s.readyState>3&&f()},s.onprogress=function(e){var t=a.event;a.event=e;try{i.progress.call(o,s)}finally{a.event=t}},o.header=function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?l[e]:(null==t?delete l[e]:l[e]=t+"",o)},o.mimeType=function(e){return arguments.length?(t=null==e?null:e+"",o):t},o.responseType=function(e){return arguments.length?(c=e,o):c},o.response=function(e){return n=e,o},["get","post"].forEach(function(e){o[e]=function(){return o.send.apply(o,[e].concat(u(arguments)))}}),o.send=function(n,r,a){if(2===arguments.length&&"function"==typeof r&&(a=r,r=null),s.open(n,e,!0),null==t||"accept"in l||(l.accept=t+",*/*"),s.setRequestHeader)for(var u in l)s.setRequestHeader(u,l[u]);return null!=t&&s.overrideMimeType&&s.overrideMimeType(t),null!=c&&(s.responseType=c),null!=a&&o.on("error",a).on("load",function(e){a(null,e)}),i.beforesend.call(o,s),s.send(null==r?null:r),o},o.abort=function(){return s.abort(),o},a.rebind(o,i,"on"),null==r?o:o.get(function(e){return 1===e.length?function(t,n){e(null==t?n:null)}:e}(r))}bt.forEach(function(e,t){bt.set(e,ct(t))}),a.functor=wt,a.xhr=xt(D),a.dsv=function(e,t){var n=new RegExp('["'+e+"\n]"),r=e.charCodeAt(0);function o(e,n,r){arguments.length<3&&(r=n,n=null);var o=_t(e,t,null==n?a:i(n),r);return o.row=function(e){return arguments.length?o.response(null==(n=e)?a:i(e)):n},o}function a(e){return o.parse(e.responseText)}function i(e){return function(t){return o.parse(t.responseText,e)}}function u(t){return t.map(l).join(e)}function l(e){return n.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}return o.parse=function(e,t){var n;return o.parseRows(e,function(e,r){if(n)return n(e,r-1);var o=new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}");n=t?function(e,n){return t(o(e),n)}:o})},o.parseRows=function(e,t){var n,o,a={},i={},u=[],l=e.length,s=0,c=0;function f(){if(s>=l)return i;if(o)return o=!1,a;var t=s;if(34===e.charCodeAt(t)){for(var n=t;n++<l;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return s=n+2,13===(u=e.charCodeAt(n+1))?(o=!0,10===e.charCodeAt(n+2)&&++s):10===u&&(o=!0),e.slice(t+1,n).replace(/""/g,'"')}for(;s<l;){var u,c=1;if(10===(u=e.charCodeAt(s++)))o=!0;else if(13===u)o=!0,10===e.charCodeAt(s)&&(++s,++c);else if(u!==r)continue;return e.slice(t,s-c)}return e.slice(t)}for(;(n=f())!==i;){for(var p=[];n!==a&&n!==i;)p.push(n),n=f();t&&null==(p=t(p,c++))||u.push(p)}return u},o.format=function(t){if(Array.isArray(t[0]))return o.formatRows(t);var n=new R,r=[];return t.forEach(function(e){for(var t in e)n.has(t)||r.push(n.add(t))}),[r.map(l).join(e)].concat(t.map(function(t){return r.map(function(e){return l(t[e])}).join(e)})).join("\n")},o.formatRows=function(e){return e.map(u).join("\n")},o},a.csv=a.dsv(",","text/csv"),a.tsv=a.dsv("\t","text/tab-separated-values");var Et,kt,St,Ct,Ot=this[L(this,"requestAnimationFrame")]||function(e){setTimeout(e,17)};function Mt(e,t,n){var r=arguments.length;r<2&&(t=0),r<3&&(n=Date.now());var o={c:e,t:n+t,n:null};return kt?kt.n=o:Et=o,kt=o,St||(Ct=clearTimeout(Ct),St=1,Ot(Tt)),o}function Tt(){var e=jt(),t=Pt()-e;t>24?(isFinite(t)&&(clearTimeout(Ct),Ct=setTimeout(Tt,t)),St=0):(St=1,Ot(Tt))}function jt(){for(var e=Date.now(),t=Et;t;)e>=t.t&&t.c(e-t.t)&&(t.c=null),t=t.n;return e}function Pt(){for(var e,t=Et,n=1/0;t;)t.c?(t.t<n&&(n=t.t),t=(e=t).n):t=e?e.n=t.n:Et=t.n;return kt=e,n}function At(e,t){return t-(e?Math.ceil(Math.log(e)/Math.LN10):1)}a.timer=function(){Mt.apply(this,arguments)},a.timer.flush=function(){jt(),Pt()},a.round=function(e,t){return t?Math.round(e*(t=Math.pow(10,t)))/t:Math.round(e)};var Nt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(function(e,t){var n=Math.pow(10,3*_(8-t));return{scale:t>8?function(e){return e/n}:function(e){return e*n},symbol:e}});function Rt(e){var t=e.decimal,n=e.thousands,r=e.grouping,o=e.currency,i=r&&n?function(e,t){for(var o=e.length,a=[],i=0,u=r[0],l=0;o>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),a.push(e.substring(o-=u,o+u)),!((l+=u+1)>t));)u=r[i=(i+1)%r.length];return a.reverse().join(n)}:D;return function(e){var n=Dt.exec(e),r=n[1]||" ",u=n[2]||">",l=n[3]||"-",s=n[4]||"",c=n[5],f=+n[6],p=n[7],d=n[8],h=n[9],y=1,v="",m="",g=!1,b=!0;switch(d&&(d=+d.substring(1)),(c||"0"===r&&"="===u)&&(c=r="0",u="="),h){case"n":p=!0,h="g";break;case"%":y=100,m="%",h="f";break;case"p":y=100,m="%",h="r";break;case"b":case"o":case"x":case"X":"#"===s&&(v="0"+h.toLowerCase());case"c":b=!1;case"d":g=!0,d=0;break;case"s":y=-1,h="r"}"$"===s&&(v=o[0],m=o[1]),"r"!=h||d||(h="g"),null!=d&&("g"==h?d=Math.max(1,Math.min(21,d)):"e"!=h&&"f"!=h||(d=Math.max(0,Math.min(20,d)))),h=It.get(h)||Lt;var w=c&&p;return function(e){var n=m;if(g&&e%1)return"";var o=e<0||0===e&&1/e<0?(e=-e,"-"):"-"===l?"":l;if(y<0){var s=a.formatPrefix(e,d);e=s.scale(e),n=s.symbol+m}else e*=y;var x,_,E=(e=h(e,d)).lastIndexOf(".");if(E<0){var k=b?e.lastIndexOf("e"):-1;k<0?(x=e,_=""):(x=e.substring(0,k),_=e.substring(k))}else x=e.substring(0,E),_=t+e.substring(E+1);!c&&p&&(x=i(x,1/0));var S=v.length+x.length+_.length+(w?0:o.length),C=S<f?new Array(S=f-S+1).join(r):"";return w&&(x=i(C+x,C.length?f-_.length:1/0)),o+=v,e=x+_,("<"===u?o+e+C:">"===u?C+o+e:"^"===u?C.substring(0,S>>=1)+o+e+C.substring(S):o+(w?e:C+e))+n}}}a.formatPrefix=function(e,t){var n=0;return(e=+e)&&(e<0&&(e*=-1),t&&(e=a.round(e,At(e,t))),n=1+Math.floor(1e-12+Math.log(e)/Math.LN10),n=Math.max(-24,Math.min(24,3*Math.floor((n-1)/3)))),Nt[8+n/3]};var Dt=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,It=a.map({b:function(e){return e.toString(2)},c:function(e){return String.fromCharCode(e)},o:function(e){return e.toString(8)},x:function(e){return e.toString(16)},X:function(e){return e.toString(16).toUpperCase()},g:function(e,t){return e.toPrecision(t)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},r:function(e,t){return(e=a.round(e,At(e,t))).toFixed(Math.max(0,Math.min(20,At(e*(1+1e-15),t))))}});function Lt(e){return e+""}var zt=a.time={},Ft=Date;function Ut(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Ut.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){Bt.setUTCDate.apply(this._,arguments)},setDay:function(){Bt.setUTCDay.apply(this._,arguments)},setFullYear:function(){Bt.setUTCFullYear.apply(this._,arguments)},setHours:function(){Bt.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){Bt.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){Bt.setUTCMinutes.apply(this._,arguments)},setMonth:function(){Bt.setUTCMonth.apply(this._,arguments)},setSeconds:function(){Bt.setUTCSeconds.apply(this._,arguments)},setTime:function(){Bt.setTime.apply(this._,arguments)}};var Bt=Date.prototype;function qt(e,t,n){function r(t){var n=e(t),r=a(n,1);return t-n<r-t?n:r}function o(n){return t(n=e(new Ft(n-1)),1),n}function a(e,n){return t(e=new Ft(+e),n),e}function i(e,r,a){var i=o(e),u=[];if(a>1)for(;i<r;)n(i)%a||u.push(new Date(+i)),t(i,1);else for(;i<r;)u.push(new Date(+i)),t(i,1);return u}e.floor=e,e.round=r,e.ceil=o,e.offset=a,e.range=i;var u=e.utc=Vt(e);return u.floor=u,u.round=Vt(r),u.ceil=Vt(o),u.offset=Vt(a),u.range=function(e,t,n){try{Ft=Ut;var r=new Ut;return r._=e,i(r,t,n)}finally{Ft=Date}},e}function Vt(e){return function(t,n){try{Ft=Ut;var r=new Ut;return r._=t,e(r,n)._}finally{Ft=Date}}}function Wt(e){var t=e.dateTime,n=e.date,r=e.time,o=e.periods,i=e.days,u=e.shortDays,l=e.months,s=e.shortMonths;function c(e){var t=e.length;function n(n){for(var r,o,a,i=[],u=-1,l=0;++u<t;)37===e.charCodeAt(u)&&(i.push(e.slice(l,u)),null!=(o=Ht[r=e.charAt(++u)])&&(r=e.charAt(++u)),(a=x[r])&&(r=a(n,null==o?"e"===r?" ":"0":o)),i.push(r),l=u+1);return i.push(e.slice(l,u)),i.join("")}return n.parse=function(t){var n={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(n,e,t,0)!=t.length)return null;"p"in n&&(n.H=n.H%12+12*n.p);var r=null!=n.Z&&Ft!==Ut,o=new(r?Ut:Ft);return"j"in n?o.setFullYear(n.y,0,n.j):"W"in n||"U"in n?("w"in n||(n.w="W"in n?1:0),o.setFullYear(n.y,0,1),o.setFullYear(n.y,0,"W"in n?(n.w+6)%7+7*n.W-(o.getDay()+5)%7:n.w+7*n.U-(o.getDay()+6)%7)):o.setFullYear(n.y,n.m,n.d),o.setHours(n.H+(n.Z/100|0),n.M+n.Z%100,n.S,n.L),r?o._:o},n.toString=function(){return e},n}function f(e,t,n,r){for(var o,a,i,u=0,l=t.length,s=n.length;u<l;){if(r>=s)return-1;if(37===(o=t.charCodeAt(u++))){if(i=t.charAt(u++),!(a=_[i in Ht?t.charAt(u++):i])||(r=a(e,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}c.utc=function(e){var t=c(e);function n(e){try{var n=new(Ft=Ut);return n._=e,t(n)}finally{Ft=Date}}return n.parse=function(e){try{Ft=Ut;var n=t.parse(e);return n&&n._}finally{Ft=Date}},n.toString=t.toString,n},c.multi=c.utc.multi=dn;var p=a.map(),d=Gt(i),h=Jt(i),y=Gt(u),v=Jt(u),m=Gt(l),g=Jt(l),b=Gt(s),w=Jt(s);o.forEach(function(e,t){p.set(e.toLowerCase(),t)});var x={a:function(e){return u[e.getDay()]},A:function(e){return i[e.getDay()]},b:function(e){return s[e.getMonth()]},B:function(e){return l[e.getMonth()]},c:c(t),d:function(e,t){return Kt(e.getDate(),t,2)},e:function(e,t){return Kt(e.getDate(),t,2)},H:function(e,t){return Kt(e.getHours(),t,2)},I:function(e,t){return Kt(e.getHours()%12||12,t,2)},j:function(e,t){return Kt(1+zt.dayOfYear(e),t,3)},L:function(e,t){return Kt(e.getMilliseconds(),t,3)},m:function(e,t){return Kt(e.getMonth()+1,t,2)},M:function(e,t){return Kt(e.getMinutes(),t,2)},p:function(e){return o[+(e.getHours()>=12)]},S:function(e,t){return Kt(e.getSeconds(),t,2)},U:function(e,t){return Kt(zt.sundayOfYear(e),t,2)},w:function(e){return e.getDay()},W:function(e,t){return Kt(zt.mondayOfYear(e),t,2)},x:c(n),X:c(r),y:function(e,t){return Kt(e.getFullYear()%100,t,2)},Y:function(e,t){return Kt(e.getFullYear()%1e4,t,4)},Z:fn,"%":function(){return"%"}},_={a:function(e,t,n){y.lastIndex=0;var r=y.exec(t.slice(n));return r?(e.w=v.get(r[0].toLowerCase()),n+r[0].length):-1},A:function(e,t,n){d.lastIndex=0;var r=d.exec(t.slice(n));return r?(e.w=h.get(r[0].toLowerCase()),n+r[0].length):-1},b:function(e,t,n){b.lastIndex=0;var r=b.exec(t.slice(n));return r?(e.m=w.get(r[0].toLowerCase()),n+r[0].length):-1},B:function(e,t,n){m.lastIndex=0;var r=m.exec(t.slice(n));return r?(e.m=g.get(r[0].toLowerCase()),n+r[0].length):-1},c:function(e,t,n){return f(e,x.c.toString(),t,n)},d:on,e:on,H:un,I:un,j:an,L:cn,m:rn,M:ln,p:function(e,t,n){var r=p.get(t.slice(n,n+=2).toLowerCase());return null==r?-1:(e.p=r,n)},S:sn,U:Xt,w:Qt,W:Zt,x:function(e,t,n){return f(e,x.x.toString(),t,n)},X:function(e,t,n){return f(e,x.X.toString(),t,n)},y:tn,Y:en,Z:nn,"%":pn};return c}zt.year=qt(function(e){return(e=zt.day(e)).setMonth(0,1),e},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e){return e.getFullYear()}),zt.years=zt.year.range,zt.years.utc=zt.year.utc.range,zt.day=qt(function(e){var t=new Ft(2e3,0);return t.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),t},function(e,t){e.setDate(e.getDate()+t)},function(e){return e.getDate()-1}),zt.days=zt.day.range,zt.days.utc=zt.day.utc.range,zt.dayOfYear=function(e){var t=zt.year(e);return Math.floor((e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(e,t){t=7-t;var n=zt[e]=qt(function(e){return(e=zt.day(e)).setDate(e.getDate()-(e.getDay()+t)%7),e},function(e,t){e.setDate(e.getDate()+7*Math.floor(t))},function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)-(n!==t)});zt[e+"s"]=n.range,zt[e+"s"].utc=n.utc.range,zt[e+"OfYear"]=function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)}}),zt.week=zt.sunday,zt.weeks=zt.sunday.range,zt.weeks.utc=zt.sunday.utc.range,zt.weekOfYear=zt.sundayOfYear;var Ht={"-":"",_:" ",0:"0"},$t=/^\s*\d+/,Yt=/^%/;function Kt(e,t,n){var r=e<0?"-":"",o=(r?-e:e)+"",a=o.length;return r+(a<n?new Array(n-a+1).join(t)+o:o)}function Gt(e){return new RegExp("^(?:"+e.map(a.requote).join("|")+")","i")}function Jt(e){for(var t=new k,n=-1,r=e.length;++n<r;)t.set(e[n].toLowerCase(),n);return t}function Qt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Xt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.U=+r[0],n+r[0].length):-1}function Zt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.W=+r[0],n+r[0].length):-1}function en(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function tn(e,t,n){$t.lastIndex=0;var r,o=$t.exec(t.slice(n,n+2));return o?(e.y=(r=+o[0])+(r>68?1900:2e3),n+o[0].length):-1}function nn(e,t,n){return/^[+-]\d{4}$/.test(t=t.slice(n,n+5))?(e.Z=-t,n+5):-1}function rn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function on(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function an(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.j=+r[0],n+r[0].length):-1}function un(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function ln(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function sn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function cn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function fn(e){var t=e.getTimezoneOffset(),n=t>0?"-":"+",r=_(t)/60|0,o=_(t)%60;return n+Kt(r,"0",2)+Kt(o,"0",2)}function pn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function dn(e){for(var t=e.length,n=-1;++n<t;)e[n][0]=this(e[n][0]);return function(t){for(var n=0,r=e[n];!r[1](t);)r=e[++n];return r[0](t)}}a.locale=function(e){return{numberFormat:Rt(e),timeFormat:Wt(e)}};var hn=a.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function yn(){}a.format=hn.numberFormat,a.geo={},yn.prototype={s:0,t:0,add:function(e){mn(e,this.t,vn),mn(vn.s,this.s,this),this.s?this.t+=vn.t:this.s=vn.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var vn=new yn;function mn(e,t,n){var r=n.s=e+t,o=r-e,a=r-o;n.t=e-a+(t-o)}function gn(e,t){e&&wn.hasOwnProperty(e.type)&&wn[e.type](e,t)}a.geo.stream=function(e,t){e&&bn.hasOwnProperty(e.type)?bn[e.type](e,t):gn(e,t)};var bn={Feature:function(e,t){gn(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,o=n.length;++r<o;)gn(n[r].geometry,t)}},wn={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){xn(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)xn(n[r],t,0)},Polygon:function(e,t){_n(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)_n(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,o=n.length;++r<o;)gn(n[r],t)}};function xn(e,t,n){var r,o=-1,a=e.length-n;for(t.lineStart();++o<a;)r=e[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function _n(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)xn(e[n],t,1);t.polygonEnd()}a.geo.area=function(e){return En=0,a.geo.stream(e,In),En};var En,kn,Sn,Cn,On,Mn,Tn,jn,Pn,An,Nn,Rn,Dn=new yn,In={sphere:function(){En+=4*Te},point:F,lineStart:F,lineEnd:F,polygonStart:function(){Dn.reset(),In.lineStart=Ln},polygonEnd:function(){var e=2*Dn;En+=e<0?4*Te+e:e,In.lineStart=In.lineEnd=In.point=F}};function Ln(){var e,t,n,r,o;function a(e,t){t=t*Ne/2+Te/4;var a=(e*=Ne)-n,i=a>=0?1:-1,u=i*a,l=Math.cos(t),s=Math.sin(t),c=o*s,f=r*l+c*Math.cos(u),p=c*i*Math.sin(u);Dn.add(Math.atan2(p,f)),n=e,r=l,o=s}In.point=function(i,u){In.point=a,n=(e=i)*Ne,r=Math.cos(u=(t=u)*Ne/2+Te/4),o=Math.sin(u)},In.lineEnd=function(){a(e,t)}}function zn(e){var t=e[0],n=e[1],r=Math.cos(n);return[r*Math.cos(t),r*Math.sin(t),Math.sin(n)]}function Fn(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Un(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Bn(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function qn(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Vn(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}function Wn(e){return[Math.atan2(e[1],e[0]),ze(e[2])]}function Hn(e,t){return _(e[0]-t[0])<Oe&&_(e[1]-t[1])<Oe}a.geo.bounds=function(){var e,t,n,r,o,i,u,l,s,c,f,p={point:d,lineStart:y,lineEnd:v,polygonStart:function(){p.point=m,p.lineStart=g,p.lineEnd=b,s=0,In.polygonStart()},polygonEnd:function(){In.polygonEnd(),p.point=d,p.lineStart=y,p.lineEnd=v,Dn<0?(e=-(n=180),t=-(r=90)):s>Oe?r=90:s<-Oe&&(t=-90),f[0]=e,f[1]=n}};function d(o,a){c.push(f=[e=o,n=o]),a<t&&(t=a),a>r&&(r=a)}function h(a,i){var u=zn([a*Ne,i*Ne]);if(l){var s=Un(l,u),c=Un([s[1],-s[0],0],s);Vn(c),c=Wn(c);var f=a-o,p=f>0?1:-1,h=c[0]*Re*p,y=_(f)>180;if(y^(p*o<h&&h<p*a))(v=c[1]*Re)>r&&(r=v);else if(y^(p*o<(h=(h+360)%360-180)&&h<p*a)){var v;(v=-c[1]*Re)<t&&(t=v)}else i<t&&(t=i),i>r&&(r=i);y?a<o?w(e,a)>w(e,n)&&(n=a):w(a,n)>w(e,n)&&(e=a):n>=e?(a<e&&(e=a),a>n&&(n=a)):a>o?w(e,a)>w(e,n)&&(n=a):w(a,n)>w(e,n)&&(e=a)}else d(a,i);l=u,o=a}function y(){p.point=h}function v(){f[0]=e,f[1]=n,p.point=d,l=null}function m(e,t){if(l){var n=e-o;s+=_(n)>180?n+(n>0?360:-360):n}else i=e,u=t;In.point(e,t),h(e,t)}function g(){In.lineStart()}function b(){m(i,u),In.lineEnd(),_(s)>Oe&&(e=-(n=180)),f[0]=e,f[1]=n,l=null}function w(e,t){return(t-=e)<0?t+360:t}function x(e,t){return e[0]-t[0]}function E(e,t){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}return function(o){if(r=n=-(e=t=1/0),c=[],a.geo.stream(o,p),s=c.length){c.sort(x);for(var i=1,u=[y=c[0]];i<s;++i)E((d=c[i])[0],y)||E(d[1],y)?(w(y[0],d[1])>w(y[0],y[1])&&(y[1]=d[1]),w(d[0],y[1])>w(y[0],y[1])&&(y[0]=d[0])):u.push(y=d);for(var l,s,d,h=-1/0,y=(i=0,u[s=u.length-1]);i<=s;y=d,++i)d=u[i],(l=w(y[1],d[0]))>h&&(h=l,e=d[0],n=y[1])}return c=f=null,e===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[e,t],[n,r]]}}(),a.geo.centroid=function(e){kn=Sn=Cn=On=Mn=Tn=jn=Pn=An=Nn=Rn=0,a.geo.stream(e,$n);var t=An,n=Nn,r=Rn,o=t*t+n*n+r*r;return o<Me&&(t=Tn,n=jn,r=Pn,Sn<Oe&&(t=Cn,n=On,r=Mn),(o=t*t+n*n+r*r)<Me)?[NaN,NaN]:[Math.atan2(n,t)*Re,ze(r/Math.sqrt(o))*Re]};var $n={sphere:F,point:Yn,lineStart:Gn,lineEnd:Jn,polygonStart:function(){$n.lineStart=Qn},polygonEnd:function(){$n.lineStart=Gn}};function Yn(e,t){e*=Ne;var n=Math.cos(t*=Ne);Kn(n*Math.cos(e),n*Math.sin(e),Math.sin(t))}function Kn(e,t,n){Cn+=(e-Cn)/++kn,On+=(t-On)/kn,Mn+=(n-Mn)/kn}function Gn(){var e,t,n;function r(r,o){r*=Ne;var a=Math.cos(o*=Ne),i=a*Math.cos(r),u=a*Math.sin(r),l=Math.sin(o),s=Math.atan2(Math.sqrt((s=t*l-n*u)*s+(s=n*i-e*l)*s+(s=e*u-t*i)*s),e*i+t*u+n*l);Sn+=s,Tn+=s*(e+(e=i)),jn+=s*(t+(t=u)),Pn+=s*(n+(n=l)),Kn(e,t,n)}$n.point=function(o,a){o*=Ne;var i=Math.cos(a*=Ne);e=i*Math.cos(o),t=i*Math.sin(o),n=Math.sin(a),$n.point=r,Kn(e,t,n)}}function Jn(){$n.point=Yn}function Qn(){var e,t,n,r,o;function a(e,t){e*=Ne;var a=Math.cos(t*=Ne),i=a*Math.cos(e),u=a*Math.sin(e),l=Math.sin(t),s=r*l-o*u,c=o*i-n*l,f=n*u-r*i,p=Math.sqrt(s*s+c*c+f*f),d=n*i+r*u+o*l,h=p&&-Le(d)/p,y=Math.atan2(p,d);An+=h*s,Nn+=h*c,Rn+=h*f,Sn+=y,Tn+=y*(n+(n=i)),jn+=y*(r+(r=u)),Pn+=y*(o+(o=l)),Kn(n,r,o)}$n.point=function(i,u){e=i,t=u,$n.point=a,i*=Ne;var l=Math.cos(u*=Ne);n=l*Math.cos(i),r=l*Math.sin(i),o=Math.sin(u),Kn(n,r,o)},$n.lineEnd=function(){a(e,t),$n.lineEnd=Jn,$n.point=Yn}}function Xn(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function Zn(){return!0}function er(e,t,n,r,o){var a=[],i=[];if(e.forEach(function(e){if(!((t=e.length-1)<=0)){var t,n=e[0],r=e[t];if(Hn(n,r)){o.lineStart();for(var u=0;u<t;++u)o.point((n=e[u])[0],n[1]);o.lineEnd()}else{var l=new nr(n,e,null,!0),s=new nr(n,null,l,!1);l.o=s,a.push(l),i.push(s),l=new nr(r,e,null,!1),s=new nr(r,null,l,!0),l.o=s,a.push(l),i.push(s)}}}),i.sort(t),tr(a),tr(i),a.length){for(var u=0,l=n,s=i.length;u<s;++u)i[u].e=l=!l;for(var c,f,p=a[0];;){for(var d=p,h=!0;d.v;)if((d=d.n)===p)return;c=d.z,o.lineStart();do{if(d.v=d.o.v=!0,d.e){if(h)for(u=0,s=c.length;u<s;++u)o.point((f=c[u])[0],f[1]);else r(d.x,d.n.x,1,o);d=d.n}else{if(h)for(u=(c=d.p.z).length-1;u>=0;--u)o.point((f=c[u])[0],f[1]);else r(d.x,d.p.x,-1,o);d=d.p}c=(d=d.o).z,h=!h}while(!d.v);o.lineEnd()}}}function tr(e){if(t=e.length){for(var t,n,r=0,o=e[0];++r<t;)o.n=n=e[r],n.p=o,o=n;o.n=n=e[0],n.p=o}}function nr(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function rr(e,t,n,r){return function(o,i){var u,l=t(i),s=o.invert(r[0],r[1]),c={point:f,lineStart:d,lineEnd:h,polygonStart:function(){c.point=w,c.lineStart=x,c.lineEnd=_,u=[],y=[]},polygonEnd:function(){c.point=f,c.lineStart=d,c.lineEnd=h,u=a.merge(u);var e=function(e,t){var n=e[0],r=e[1],o=[Math.sin(n),-Math.cos(n),0],a=0,i=0;Dn.reset();for(var u=0,l=t.length;u<l;++u){var s=t[u],c=s.length;if(c)for(var f=s[0],p=f[0],d=f[1]/2+Te/4,h=Math.sin(d),y=Math.cos(d),v=1;;){v===c&&(v=0);var m=(e=s[v])[0],g=e[1]/2+Te/4,b=Math.sin(g),w=Math.cos(g),x=m-p,_=x>=0?1:-1,E=_*x,k=E>Te,S=h*b;if(Dn.add(Math.atan2(S*_*Math.sin(E),y*w+S*Math.cos(E))),a+=k?x+_*je:x,k^p>=n^m>=n){var C=Un(zn(f),zn(e));Vn(C);var O=Un(o,C);Vn(O);var M=(k^x>=0?-1:1)*ze(O[2]);(r>M||r===M&&(C[0]||C[1]))&&(i+=k^x>=0?1:-1)}if(!v++)break;p=m,h=b,y=w,f=e}}return(a<-Oe||a<Oe&&Dn<-Oe)^1&i}(s,y);u.length?(b||(i.polygonStart(),b=!0),er(u,ir,e,n,i)):e&&(b||(i.polygonStart(),b=!0),i.lineStart(),n(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),u=y=null},sphere:function(){i.polygonStart(),i.lineStart(),n(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function f(t,n){var r=o(t,n);e(t=r[0],n=r[1])&&i.point(t,n)}function p(e,t){var n=o(e,t);l.point(n[0],n[1])}function d(){c.point=p,l.lineStart()}function h(){c.point=f,l.lineEnd()}var y,v,m=ar(),g=t(m),b=!1;function w(e,t){v.push([e,t]);var n=o(e,t);g.point(n[0],n[1])}function x(){g.lineStart(),v=[]}function _(){w(v[0][0],v[0][1]),g.lineEnd();var e,t=g.clean(),n=m.buffer(),r=n.length;if(v.pop(),y.push(v),v=null,r)if(1&t){var o,a=-1;if((r=(e=n[0]).length-1)>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++a<r;)i.point((o=e[a])[0],o[1]);i.lineEnd()}}else r>1&&2&t&&n.push(n.pop().concat(n.shift())),u.push(n.filter(or))}return c}}function or(e){return e.length>1}function ar(){var e,t=[];return{lineStart:function(){t.push(e=[])},point:function(t,n){e.push([t,n])},lineEnd:F,buffer:function(){var n=t;return t=[],e=null,n},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ir(e,t){return((e=e.x)[0]<0?e[1]-Ae-Oe:Ae-e[1])-((t=t.x)[0]<0?t[1]-Ae-Oe:Ae-t[1])}var ur=rr(Zn,function(e){var t,n=NaN,r=NaN,o=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(a,i){var u=a>0?Te:-Te,l=_(a-n);_(l-Te)<Oe?(e.point(n,r=(r+i)/2>0?Ae:-Ae),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),e.point(a,r),t=0):o!==u&&l>=Te&&(_(n-o)<Oe&&(n-=o*Oe),_(a-u)<Oe&&(a-=u*Oe),r=function(e,t,n,r){var o,a,i=Math.sin(e-n);return _(i)>Oe?Math.atan((Math.sin(t)*(a=Math.cos(r))*Math.sin(n)-Math.sin(r)*(o=Math.cos(t))*Math.sin(e))/(o*a*i)):(t+r)/2}(n,r,a,i),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),t=0),e.point(n=a,r=i),o=u},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}},function(e,t,n,r){var o;if(null==e)o=n*Ae,r.point(-Te,o),r.point(0,o),r.point(Te,o),r.point(Te,0),r.point(Te,-o),r.point(0,-o),r.point(-Te,-o),r.point(-Te,0),r.point(-Te,o);else if(_(e[0]-t[0])>Oe){var a=e[0]<t[0]?Te:-Te;o=n*a/2,r.point(-a,o),r.point(0,o),r.point(a,o)}else r.point(t[0],t[1])},[-Te,-Te/2]);function lr(e,t,n,r){return function(o){var a,i=o.a,u=o.b,l=i.x,s=i.y,c=0,f=1,p=u.x-l,d=u.y-s;if(a=e-l,p||!(a>0)){if(a/=p,p<0){if(a<c)return;a<f&&(f=a)}else if(p>0){if(a>f)return;a>c&&(c=a)}if(a=n-l,p||!(a<0)){if(a/=p,p<0){if(a>f)return;a>c&&(c=a)}else if(p>0){if(a<c)return;a<f&&(f=a)}if(a=t-s,d||!(a>0)){if(a/=d,d<0){if(a<c)return;a<f&&(f=a)}else if(d>0){if(a>f)return;a>c&&(c=a)}if(a=r-s,d||!(a<0)){if(a/=d,d<0){if(a>f)return;a>c&&(c=a)}else if(d>0){if(a<c)return;a<f&&(f=a)}return c>0&&(o.a={x:l+c*p,y:s+c*d}),f<1&&(o.b={x:l+f*p,y:s+f*d}),o}}}}}}var sr=1e9;function cr(e,t,n,r){return function(l){var s,c,f,p,d,h,y,v,m,g,b,w=l,x=ar(),_=lr(e,t,n,r),E={point:C,lineStart:function(){E.point=O,c&&c.push(f=[]);g=!0,m=!1,y=v=NaN},lineEnd:function(){s&&(O(p,d),h&&m&&x.rejoin(),s.push(x.buffer()));E.point=C,m&&l.lineEnd()},polygonStart:function(){l=x,s=[],c=[],b=!0},polygonEnd:function(){l=w,s=a.merge(s);var t=function(e){for(var t=0,n=c.length,r=e[1],o=0;o<n;++o)for(var a,i=1,u=c[o],l=u.length,s=u[0];i<l;++i)a=u[i],s[1]<=r?a[1]>r&&Ie(s,a,e)>0&&++t:a[1]<=r&&Ie(s,a,e)<0&&--t,s=a;return 0!==t}([e,r]),n=b&&t,o=s.length;(n||o)&&(l.polygonStart(),n&&(l.lineStart(),k(null,null,1,l),l.lineEnd()),o&&er(s,i,t,k,l),l.polygonEnd()),s=c=f=null}};function k(a,i,l,s){var c=0,f=0;if(null==a||(c=o(a,l))!==(f=o(i,l))||u(a,i)<0^l>0)do{s.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+l+4)%4)!==f);else s.point(i[0],i[1])}function S(o,a){return e<=o&&o<=n&&t<=a&&a<=r}function C(e,t){S(e,t)&&l.point(e,t)}function O(e,t){var n=S(e=Math.max(-sr,Math.min(sr,e)),t=Math.max(-sr,Math.min(sr,t)));if(c&&f.push([e,t]),g)p=e,d=t,h=n,g=!1,n&&(l.lineStart(),l.point(e,t));else if(n&&m)l.point(e,t);else{var r={a:{x:y,y:v},b:{x:e,y:t}};_(r)?(m||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),n||l.lineEnd(),b=!1):n&&(l.lineStart(),l.point(e,t),b=!1)}y=e,v=t,m=n}return E};function o(r,o){return _(r[0]-e)<Oe?o>0?0:3:_(r[0]-n)<Oe?o>0?2:1:_(r[1]-t)<Oe?o>0?1:0:o>0?3:2}function i(e,t){return u(e.x,t.x)}function u(e,t){var n=o(e,1),r=o(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}}function fr(e){var t=0,n=Te/3,r=Dr(e),o=r(t,n);return o.parallels=function(e){return arguments.length?r(t=e[0]*Te/180,n=e[1]*Te/180):[t/Te*180,n/Te*180]},o}function pr(e,t){var n=Math.sin(e),r=(n+Math.sin(t))/2,o=1+n*(2*r-n),a=Math.sqrt(o)/r;function i(e,t){var n=Math.sqrt(o-2*r*Math.sin(t))/r;return[n*Math.sin(e*=r),a-n*Math.cos(e)]}return i.invert=function(e,t){var n=a-t;return[Math.atan2(e,n)/r,ze((o-(e*e+n*n)*r*r)/(2*r))]},i}a.geo.clipExtent=function(){var e,t,n,r,o,a,i={stream:function(e){return o&&(o.valid=!1),(o=a(e)).valid=!0,o},extent:function(u){return arguments.length?(a=cr(e=+u[0][0],t=+u[0][1],n=+u[1][0],r=+u[1][1]),o&&(o.valid=!1,o=null),i):[[e,t],[n,r]]}};return i.extent([[0,0],[960,500]])},(a.geo.conicEqualArea=function(){return fr(pr)}).raw=pr,a.geo.albers=function(){return a.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},a.geo.albersUsa=function(){var e,t,n,r,o=a.geo.albers(),i=a.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=a.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){e=[t,n]}};function s(o){var a=o[0],i=o[1];return e=null,t(a,i),e||(n(a,i),e)||r(a,i),e}return s.invert=function(e){var t=o.scale(),n=o.translate(),r=(e[0]-n[0])/t,a=(e[1]-n[1])/t;return(a>=.12&&a<.234&&r>=-.425&&r<-.214?i:a>=.166&&a<.234&&r>=-.214&&r<-.115?u:o).invert(e)},s.stream=function(e){var t=o.stream(e),n=i.stream(e),r=u.stream(e);return{point:function(e,o){t.point(e,o),n.point(e,o),r.point(e,o)},sphere:function(){t.sphere(),n.sphere(),r.sphere()},lineStart:function(){t.lineStart(),n.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),n.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),n.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),n.polygonEnd(),r.polygonEnd()}}},s.precision=function(e){return arguments.length?(o.precision(e),i.precision(e),u.precision(e),s):o.precision()},s.scale=function(e){return arguments.length?(o.scale(e),i.scale(.35*e),u.scale(e),s.translate(o.translate())):o.scale()},s.translate=function(e){if(!arguments.length)return o.translate();var a=o.scale(),c=+e[0],f=+e[1];return t=o.translate(e).clipExtent([[c-.455*a,f-.238*a],[c+.455*a,f+.238*a]]).stream(l).point,n=i.translate([c-.307*a,f+.201*a]).clipExtent([[c-.425*a+Oe,f+.12*a+Oe],[c-.214*a-Oe,f+.234*a-Oe]]).stream(l).point,r=u.translate([c-.205*a,f+.212*a]).clipExtent([[c-.214*a+Oe,f+.166*a+Oe],[c-.115*a-Oe,f+.234*a-Oe]]).stream(l).point,s},s.scale(1070)};var dr,hr,yr,vr,mr,gr,br={point:F,lineStart:F,lineEnd:F,polygonStart:function(){hr=0,br.lineStart=wr},polygonEnd:function(){br.lineStart=br.lineEnd=br.point=F,dr+=_(hr/2)}};function wr(){var e,t,n,r;function o(e,t){hr+=r*e-n*t,n=e,r=t}br.point=function(a,i){br.point=o,e=n=a,t=r=i},br.lineEnd=function(){o(e,t)}}var xr={point:function(e,t){e<yr&&(yr=e);e>mr&&(mr=e);t<vr&&(vr=t);t>gr&&(gr=t)},lineStart:F,lineEnd:F,polygonStart:F,polygonEnd:F};function _r(){var e=Er(4.5),t=[],n={point:r,lineStart:function(){n.point=o},lineEnd:i,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=i,n.point=r},pointRadius:function(t){return e=Er(t),n},result:function(){if(t.length){var e=t.join("");return t=[],e}}};function r(n,r){t.push("M",n,",",r,e)}function o(e,r){t.push("M",e,",",r),n.point=a}function a(e,n){t.push("L",e,",",n)}function i(){n.point=r}function u(){t.push("Z")}return n}function Er(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}var kr,Sr={point:Cr,lineStart:Or,lineEnd:Mr,polygonStart:function(){Sr.lineStart=Tr},polygonEnd:function(){Sr.point=Cr,Sr.lineStart=Or,Sr.lineEnd=Mr}};function Cr(e,t){Cn+=e,On+=t,++Mn}function Or(){var e,t;function n(n,r){var o=n-e,a=r-t,i=Math.sqrt(o*o+a*a);Tn+=i*(e+n)/2,jn+=i*(t+r)/2,Pn+=i,Cr(e=n,t=r)}Sr.point=function(r,o){Sr.point=n,Cr(e=r,t=o)}}function Mr(){Sr.point=Cr}function Tr(){var e,t,n,r;function o(e,t){var o=e-n,a=t-r,i=Math.sqrt(o*o+a*a);Tn+=i*(n+e)/2,jn+=i*(r+t)/2,Pn+=i,An+=(i=r*e-n*t)*(n+e),Nn+=i*(r+t),Rn+=3*i,Cr(n=e,r=t)}Sr.point=function(a,i){Sr.point=o,Cr(e=n=a,t=r=i)},Sr.lineEnd=function(){o(e,t)}}function jr(e){var t=4.5,n={point:r,lineStart:function(){n.point=o},lineEnd:i,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=i,n.point=r},pointRadius:function(e){return t=e,n},result:F};function r(n,r){e.moveTo(n+t,r),e.arc(n,r,t,0,je)}function o(t,r){e.moveTo(t,r),n.point=a}function a(t,n){e.lineTo(t,n)}function i(){n.point=r}function u(){e.closePath()}return n}function Pr(e){var t=.5,n=Math.cos(30*Ne),r=16;function o(t){return(r?function(t){var n,o,i,u,l,s,c,f,p,d,h,y,v={point:m,lineStart:g,lineEnd:w,polygonStart:function(){t.polygonStart(),v.lineStart=x},polygonEnd:function(){t.polygonEnd(),v.lineStart=g}};function m(n,r){n=e(n,r),t.point(n[0],n[1])}function g(){f=NaN,v.point=b,t.lineStart()}function b(n,o){var i=zn([n,o]),u=e(n,o);a(f,p,c,d,h,y,f=u[0],p=u[1],c=n,d=i[0],h=i[1],y=i[2],r,t),t.point(f,p)}function w(){v.point=m,t.lineEnd()}function x(){g(),v.point=_,v.lineEnd=E}function _(e,t){b(n=e,t),o=f,i=p,u=d,l=h,s=y,v.point=b}function E(){a(f,p,c,d,h,y,o,i,n,u,l,s,r,t),v.lineEnd=w,w()}return v}:function(t){return Nr(t,function(n,r){n=e(n,r),t.point(n[0],n[1])})})(t)}function a(r,o,i,u,l,s,c,f,p,d,h,y,v,m){var g=c-r,b=f-o,w=g*g+b*b;if(w>4*t&&v--){var x=u+d,E=l+h,k=s+y,S=Math.sqrt(x*x+E*E+k*k),C=Math.asin(k/=S),O=_(_(k)-1)<Oe||_(i-p)<Oe?(i+p)/2:Math.atan2(E,x),M=e(O,C),T=M[0],j=M[1],P=T-r,A=j-o,N=b*P-g*A;(N*N/w>t||_((g*P+b*A)/w-.5)>.3||u*d+l*h+s*y<n)&&(a(r,o,i,u,l,s,T,j,O,x/=S,E/=S,k,v,m),m.point(T,j),a(T,j,O,x,E,k,c,f,p,d,h,y,v,m))}}return o.precision=function(e){return arguments.length?(r=(t=e*e)>0&&16,o):Math.sqrt(t)},o}function Ar(e){this.stream=e}function Nr(e,t){return{point:t,sphere:function(){e.sphere()},lineStart:function(){e.lineStart()},lineEnd:function(){e.lineEnd()},polygonStart:function(){e.polygonStart()},polygonEnd:function(){e.polygonEnd()}}}function Rr(e){return Dr(function(){return e})()}function Dr(e){var t,n,r,o,i,u,l=Pr(function(e,n){return[(e=t(e,n))[0]*s+o,i-e[1]*s]}),s=150,c=480,f=250,p=0,d=0,h=0,y=0,v=0,m=ur,g=D,b=null,w=null;function x(e){return[(e=r(e[0]*Ne,e[1]*Ne))[0]*s+o,i-e[1]*s]}function E(e){return(e=r.invert((e[0]-o)/s,(i-e[1])/s))&&[e[0]*Re,e[1]*Re]}function k(){r=Xn(n=Fr(h,y,v),t);var e=t(p,d);return o=c-e[0]*s,i=f+e[1]*s,S()}function S(){return u&&(u.valid=!1,u=null),x}return x.stream=function(e){return u&&(u.valid=!1),(u=Ir(m(n,l(g(e))))).valid=!0,u},x.clipAngle=function(e){return arguments.length?(m=null==e?(b=e,ur):function(e){var t=Math.cos(e),n=t>0,r=_(t)>Oe;return rr(o,function(e){var t,u,l,s,c;return{lineStart:function(){s=l=!1,c=1},point:function(f,p){var d,h=[f,p],y=o(f,p),v=n?y?0:i(f,p):y?i(f+(f<0?Te:-Te),p):0;if(!t&&(s=l=y)&&e.lineStart(),y!==l&&(d=a(t,h),(Hn(t,d)||Hn(h,d))&&(h[0]+=Oe,h[1]+=Oe,y=o(h[0],h[1]))),y!==l)c=0,y?(e.lineStart(),d=a(h,t),e.point(d[0],d[1])):(d=a(t,h),e.point(d[0],d[1]),e.lineEnd()),t=d;else if(r&&t&&n^y){var m;v&u||!(m=a(h,t,!0))||(c=0,n?(e.lineStart(),e.point(m[0][0],m[0][1]),e.point(m[1][0],m[1][1]),e.lineEnd()):(e.point(m[1][0],m[1][1]),e.lineEnd(),e.lineStart(),e.point(m[0][0],m[0][1])))}!y||t&&Hn(t,h)||e.point(h[0],h[1]),t=h,l=y,u=v},lineEnd:function(){l&&e.lineEnd(),t=null},clean:function(){return c|(s&&l)<<1}}},Vr(e,6*Ne),n?[0,-e]:[-Te,e-Te]);function o(e,n){return Math.cos(e)*Math.cos(n)>t}function a(e,n,r){var o=[1,0,0],a=Un(zn(e),zn(n)),i=Fn(a,a),u=a[0],l=i-u*u;if(!l)return!r&&e;var s=t*i/l,c=-t*u/l,f=Un(o,a),p=qn(o,s);Bn(p,qn(a,c));var d=f,h=Fn(p,d),y=Fn(d,d),v=h*h-y*(Fn(p,p)-1);if(!(v<0)){var m=Math.sqrt(v),g=qn(d,(-h-m)/y);if(Bn(g,p),g=Wn(g),!r)return g;var b,w=e[0],x=n[0],E=e[1],k=n[1];x<w&&(b=w,w=x,x=b);var S=x-w,C=_(S-Te)<Oe;if(!C&&k<E&&(b=E,E=k,k=b),C||S<Oe?C?E+k>0^g[1]<(_(g[0]-w)<Oe?E:k):E<=g[1]&&g[1]<=k:S>Te^(w<=g[0]&&g[0]<=x)){var O=qn(d,(-h+m)/y);return Bn(O,p),[g,Wn(O)]}}}function i(t,r){var o=n?e:Te-e,a=0;return t<-o?a|=1:t>o&&(a|=2),r<-o?a|=4:r>o&&(a|=8),a}}((b=+e)*Ne),S()):b},x.clipExtent=function(e){return arguments.length?(w=e,g=e?cr(e[0][0],e[0][1],e[1][0],e[1][1]):D,S()):w},x.scale=function(e){return arguments.length?(s=+e,k()):s},x.translate=function(e){return arguments.length?(c=+e[0],f=+e[1],k()):[c,f]},x.center=function(e){return arguments.length?(p=e[0]%360*Ne,d=e[1]%360*Ne,k()):[p*Re,d*Re]},x.rotate=function(e){return arguments.length?(h=e[0]%360*Ne,y=e[1]%360*Ne,v=e.length>2?e[2]%360*Ne:0,k()):[h*Re,y*Re,v*Re]},a.rebind(x,l,"precision"),function(){return t=e.apply(this,arguments),x.invert=t.invert&&E,k()}}function Ir(e){return Nr(e,function(t,n){e.point(t*Ne,n*Ne)})}function Lr(e,t){return[e,t]}function zr(e,t){return[e>Te?e-je:e<-Te?e+je:e,t]}function Fr(e,t,n){return e?t||n?Xn(Br(e),qr(t,n)):Br(e):t||n?qr(t,n):zr}function Ur(e){return function(t,n){return[(t+=e)>Te?t-je:t<-Te?t+je:t,n]}}function Br(e){var t=Ur(e);return t.invert=Ur(-e),t}function qr(e,t){var n=Math.cos(e),r=Math.sin(e),o=Math.cos(t),a=Math.sin(t);function i(e,t){var i=Math.cos(t),u=Math.cos(e)*i,l=Math.sin(e)*i,s=Math.sin(t),c=s*n+u*r;return[Math.atan2(l*o-c*a,u*n-s*r),ze(c*o+l*a)]}return i.invert=function(e,t){var i=Math.cos(t),u=Math.cos(e)*i,l=Math.sin(e)*i,s=Math.sin(t),c=s*o-l*a;return[Math.atan2(l*o+s*a,u*n+c*r),ze(c*n-u*r)]},i}function Vr(e,t){var n=Math.cos(e),r=Math.sin(e);return function(o,a,i,u){var l=i*t;null!=o?(o=Wr(n,o),a=Wr(n,a),(i>0?o<a:o>a)&&(o+=i*je)):(o=e+i*je,a=e-.5*l);for(var s,c=o;i>0?c>a:c<a;c-=l)u.point((s=Wn([n,-r*Math.cos(c),-r*Math.sin(c)]))[0],s[1])}}function Wr(e,t){var n=zn(t);n[0]-=e,Vn(n);var r=Le(-n[1]);return((-n[2]<0?-r:r)+2*Math.PI-Oe)%(2*Math.PI)}function Hr(e,t,n){var r=a.range(e,t-Oe,n).concat(t);return function(e){return r.map(function(t){return[e,t]})}}function $r(e,t,n){var r=a.range(e,t-Oe,n).concat(t);return function(e){return r.map(function(t){return[t,e]})}}function Yr(e){return e.source}function Kr(e){return e.target}a.geo.path=function(){var e,t,n,r,o,i=4.5;function u(e){return e&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),o&&o.valid||(o=n(r)),a.geo.stream(e,o)),r.result()}function l(){return o=null,u}return u.area=function(e){return dr=0,a.geo.stream(e,n(br)),dr},u.centroid=function(e){return Cn=On=Mn=Tn=jn=Pn=An=Nn=Rn=0,a.geo.stream(e,n(Sr)),Rn?[An/Rn,Nn/Rn]:Pn?[Tn/Pn,jn/Pn]:Mn?[Cn/Mn,On/Mn]:[NaN,NaN]},u.bounds=function(e){return mr=gr=-(yr=vr=1/0),a.geo.stream(e,n(xr)),[[yr,vr],[mr,gr]]},u.projection=function(t){return arguments.length?(n=(e=t)?t.stream||(r=t,o=Pr(function(e,t){return r([e*Re,t*Re])}),function(e){return Ir(o(e))}):D,l()):e;var r,o},u.context=function(e){return arguments.length?(r=null==(t=e)?new _r:new jr(e),"function"!=typeof i&&r.pointRadius(i),l()):t},u.pointRadius=function(e){return arguments.length?(i="function"==typeof e?e:(r.pointRadius(+e),+e),u):i},u.projection(a.geo.albersUsa()).context(null)},a.geo.transform=function(e){return{stream:function(t){var n=new Ar(t);for(var r in e)n[r]=e[r];return n}}},Ar.prototype={point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},a.geo.projection=Rr,a.geo.projectionMutator=Dr,(a.geo.equirectangular=function(){return Rr(Lr)}).raw=Lr.invert=Lr,a.geo.rotation=function(e){function t(t){return(t=e(t[0]*Ne,t[1]*Ne))[0]*=Re,t[1]*=Re,t}return e=Fr(e[0]%360*Ne,e[1]*Ne,e.length>2?e[2]*Ne:0),t.invert=function(t){return(t=e.invert(t[0]*Ne,t[1]*Ne))[0]*=Re,t[1]*=Re,t},t},zr.invert=Lr,a.geo.circle=function(){var e,t,n=[0,0],r=6;function o(){var e="function"==typeof n?n.apply(this,arguments):n,r=Fr(-e[0]*Ne,-e[1]*Ne,0).invert,o=[];return t(null,null,1,{point:function(e,t){o.push(e=r(e,t)),e[0]*=Re,e[1]*=Re}}),{type:"Polygon",coordinates:[o]}}return o.origin=function(e){return arguments.length?(n=e,o):n},o.angle=function(n){return arguments.length?(t=Vr((e=+n)*Ne,r*Ne),o):e},o.precision=function(n){return arguments.length?(t=Vr(e*Ne,(r=+n)*Ne),o):r},o.angle(90)},a.geo.distance=function(e,t){var n,r=(t[0]-e[0])*Ne,o=e[1]*Ne,a=t[1]*Ne,i=Math.sin(r),u=Math.cos(r),l=Math.sin(o),s=Math.cos(o),c=Math.sin(a),f=Math.cos(a);return Math.atan2(Math.sqrt((n=f*i)*n+(n=s*c-l*f*u)*n),l*c+s*f*u)},a.geo.graticule=function(){var e,t,n,r,o,i,u,l,s,c,f,p,d=10,h=d,y=90,v=360,m=2.5;function g(){return{type:"MultiLineString",coordinates:b()}}function b(){return a.range(Math.ceil(r/y)*y,n,y).map(f).concat(a.range(Math.ceil(l/v)*v,u,v).map(p)).concat(a.range(Math.ceil(t/d)*d,e,d).filter(function(e){return _(e%y)>Oe}).map(s)).concat(a.range(Math.ceil(i/h)*h,o,h).filter(function(e){return _(e%v)>Oe}).map(c))}return g.lines=function(){return b().map(function(e){return{type:"LineString",coordinates:e}})},g.outline=function(){return{type:"Polygon",coordinates:[f(r).concat(p(u).slice(1),f(n).reverse().slice(1),p(l).reverse().slice(1))]}},g.extent=function(e){return arguments.length?g.majorExtent(e).minorExtent(e):g.minorExtent()},g.majorExtent=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],l=+e[0][1],u=+e[1][1],r>n&&(e=r,r=n,n=e),l>u&&(e=l,l=u,u=e),g.precision(m)):[[r,l],[n,u]]},g.minorExtent=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],i=+n[0][1],o=+n[1][1],t>e&&(n=t,t=e,e=n),i>o&&(n=i,i=o,o=n),g.precision(m)):[[t,i],[e,o]]},g.step=function(e){return arguments.length?g.majorStep(e).minorStep(e):g.minorStep()},g.majorStep=function(e){return arguments.length?(y=+e[0],v=+e[1],g):[y,v]},g.minorStep=function(e){return arguments.length?(d=+e[0],h=+e[1],g):[d,h]},g.precision=function(a){return arguments.length?(m=+a,s=Hr(i,o,90),c=$r(t,e,m),f=Hr(l,u,90),p=$r(r,n,m),g):m},g.majorExtent([[-180,-90+Oe],[180,90-Oe]]).minorExtent([[-180,-80-Oe],[180,80+Oe]])},a.geo.greatArc=function(){var e,t,n=Yr,r=Kr;function o(){return{type:"LineString",coordinates:[e||n.apply(this,arguments),t||r.apply(this,arguments)]}}return o.distance=function(){return a.geo.distance(e||n.apply(this,arguments),t||r.apply(this,arguments))},o.source=function(t){return arguments.length?(n=t,e="function"==typeof t?null:t,o):n},o.target=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,o):r},o.precision=function(){return arguments.length?o:0},o},a.geo.interpolate=function(e,t){return n=e[0]*Ne,r=e[1]*Ne,o=t[0]*Ne,a=t[1]*Ne,i=Math.cos(r),u=Math.sin(r),l=Math.cos(a),s=Math.sin(a),c=i*Math.cos(n),f=i*Math.sin(n),p=l*Math.cos(o),d=l*Math.sin(o),h=2*Math.asin(Math.sqrt(Ue(a-r)+i*l*Ue(o-n))),y=1/Math.sin(h),(v=h?function(e){var t=Math.sin(e*=h)*y,n=Math.sin(h-e)*y,r=n*c+t*p,o=n*f+t*d,a=n*u+t*s;return[Math.atan2(o,r)*Re,Math.atan2(a,Math.sqrt(r*r+o*o))*Re]}:function(){return[n*Re,r*Re]}).distance=h,v;var n,r,o,a,i,u,l,s,c,f,p,d,h,y,v},a.geo.length=function(e){return kr=0,a.geo.stream(e,Gr),kr};var Gr={sphere:F,point:F,lineStart:function(){var e,t,n;function r(r,o){var a=Math.sin(o*=Ne),i=Math.cos(o),u=_((r*=Ne)-e),l=Math.cos(u);kr+=Math.atan2(Math.sqrt((u=i*Math.sin(u))*u+(u=n*a-t*i*l)*u),t*a+n*i*l),e=r,t=a,n=i}Gr.point=function(o,a){e=o*Ne,t=Math.sin(a*=Ne),n=Math.cos(a),Gr.point=r},Gr.lineEnd=function(){Gr.point=Gr.lineEnd=F}},lineEnd:F,polygonStart:F,polygonEnd:F};function Jr(e,t){function n(t,n){var r=Math.cos(t),o=Math.cos(n),a=e(r*o);return[a*o*Math.sin(t),a*Math.sin(n)]}return n.invert=function(e,n){var r=Math.sqrt(e*e+n*n),o=t(r),a=Math.sin(o),i=Math.cos(o);return[Math.atan2(e*a,r*i),Math.asin(r&&n*a/r)]},n}var Qr=Jr(function(e){return Math.sqrt(2/(1+e))},function(e){return 2*Math.asin(e/2)});(a.geo.azimuthalEqualArea=function(){return Rr(Qr)}).raw=Qr;var Xr=Jr(function(e){var t=Math.acos(e);return t&&t/Math.sin(t)},D);function Zr(e,t){var n=Math.cos(e),r=function(e){return Math.tan(Te/4+e/2)},o=e===t?Math.sin(e):Math.log(n/Math.cos(t))/Math.log(r(t)/r(e)),a=n*Math.pow(r(e),o)/o;if(!o)return no;function i(e,t){a>0?t<-Ae+Oe&&(t=-Ae+Oe):t>Ae-Oe&&(t=Ae-Oe);var n=a/Math.pow(r(t),o);return[n*Math.sin(o*e),a-n*Math.cos(o*e)]}return i.invert=function(e,t){var n=a-t,r=De(o)*Math.sqrt(e*e+n*n);return[Math.atan2(e,n)/o,2*Math.atan(Math.pow(a/r,1/o))-Ae]},i}function eo(e,t){var n=Math.cos(e),r=e===t?Math.sin(e):(n-Math.cos(t))/(t-e),o=n/r+e;if(_(r)<Oe)return Lr;function a(e,t){var n=o-t;return[n*Math.sin(r*e),o-n*Math.cos(r*e)]}return a.invert=function(e,t){var n=o-t;return[Math.atan2(e,n)/r,o-De(r)*Math.sqrt(e*e+n*n)]},a}(a.geo.azimuthalEquidistant=function(){return Rr(Xr)}).raw=Xr,(a.geo.conicConformal=function(){return fr(Zr)}).raw=Zr,(a.geo.conicEquidistant=function(){return fr(eo)}).raw=eo;var to=Jr(function(e){return 1/e},Math.atan);function no(e,t){return[e,Math.log(Math.tan(Te/4+t/2))]}function ro(e){var t,n=Rr(e),r=n.scale,o=n.translate,a=n.clipExtent;return n.scale=function(){var e=r.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.translate=function(){var e=o.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.clipExtent=function(e){var i=a.apply(n,arguments);if(i===n){if(t=null==e){var u=Te*r(),l=o();a([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(i=null);return i},n.clipExtent(null)}(a.geo.gnomonic=function(){return Rr(to)}).raw=to,no.invert=function(e,t){return[e,2*Math.atan(Math.exp(t))-Ae]},(a.geo.mercator=function(){return ro(no)}).raw=no;var oo=Jr(function(){return 1},Math.asin);(a.geo.orthographic=function(){return Rr(oo)}).raw=oo;var ao=Jr(function(e){return 1/(1+e)},function(e){return 2*Math.atan(e)});function io(e,t){return[Math.log(Math.tan(Te/4+t/2)),-e]}function uo(e){return e[0]}function lo(e){return e[1]}function so(e){for(var t=e.length,n=[0,1],r=2,o=2;o<t;o++){for(;r>1&&Ie(e[n[r-2]],e[n[r-1]],e[o])<=0;)--r;n[r++]=o}return n.slice(0,r)}function co(e,t){return e[0]-t[0]||e[1]-t[1]}(a.geo.stereographic=function(){return Rr(ao)}).raw=ao,io.invert=function(e,t){return[-t,2*Math.atan(Math.exp(e))-Ae]},(a.geo.transverseMercator=function(){var e=ro(io),t=e.center,n=e.rotate;return e.center=function(e){return e?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return e?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90])}).raw=io,a.geom={},a.geom.hull=function(e){var t=uo,n=lo;if(arguments.length)return r(e);function r(e){if(e.length<3)return[];var r,o=wt(t),a=wt(n),i=e.length,u=[],l=[];for(r=0;r<i;r++)u.push([+o.call(this,e[r],r),+a.call(this,e[r],r),r]);for(u.sort(co),r=0;r<i;r++)l.push([u[r][0],-u[r][1]]);var s=so(u),c=so(l),f=c[0]===s[0],p=c[c.length-1]===s[s.length-1],d=[];for(r=s.length-1;r>=0;--r)d.push(e[u[s[r]][2]]);for(r=+f;r<c.length-p;++r)d.push(e[u[c[r]][2]]);return d}return r.x=function(e){return arguments.length?(t=e,r):t},r.y=function(e){return arguments.length?(n=e,r):n},r},a.geom.polygon=function(e){return $(e,fo),e};var fo=a.geom.polygon.prototype=[];function po(e,t,n){return(n[0]-t[0])*(e[1]-t[1])<(n[1]-t[1])*(e[0]-t[0])}function ho(e,t,n,r){var o=e[0],a=n[0],i=t[0]-o,u=r[0]-a,l=e[1],s=n[1],c=t[1]-l,f=r[1]-s,p=(u*(l-s)-f*(o-a))/(f*i-u*c);return[o+p*i,l+p*c]}function yo(e){var t=e[0],n=e[e.length-1];return!(t[0]-n[0]||t[1]-n[1])}fo.area=function(){for(var e,t=-1,n=this.length,r=this[n-1],o=0;++t<n;)e=r,r=this[t],o+=e[1]*r[0]-e[0]*r[1];return.5*o},fo.centroid=function(e){var t,n,r=-1,o=this.length,a=0,i=0,u=this[o-1];for(arguments.length||(e=-1/(6*this.area()));++r<o;)t=u,u=this[r],n=t[0]*u[1]-u[0]*t[1],a+=(t[0]+u[0])*n,i+=(t[1]+u[1])*n;return[a*e,i*e]},fo.clip=function(e){for(var t,n,r,o,a,i,u=yo(e),l=-1,s=this.length-yo(this),c=this[s-1];++l<s;){for(t=e.slice(),e.length=0,o=this[l],a=t[(r=t.length-u)-1],n=-1;++n<r;)po(i=t[n],c,o)?(po(a,c,o)||e.push(ho(a,i,c,o)),e.push(i)):po(a,c,o)&&e.push(ho(a,i,c,o)),a=i;u&&e.push(e[0]),c=o}return e};var vo,mo,go,bo,wo,xo=[],_o=[];function Eo(){Bo(this),this.edge=this.site=this.circle=null}function ko(e){var t=xo.pop()||new Eo;return t.site=e,t}function So(e){Ro(e),go.remove(e),xo.push(e),Bo(e)}function Co(e){var t=e.circle,n=t.x,r=t.cy,o={x:n,y:r},a=e.P,i=e.N,u=[e];So(e);for(var l=a;l.circle&&_(n-l.circle.x)<Oe&&_(r-l.circle.cy)<Oe;)a=l.P,u.unshift(l),So(l),l=a;u.unshift(l),Ro(l);for(var s=i;s.circle&&_(n-s.circle.x)<Oe&&_(r-s.circle.cy)<Oe;)i=s.N,u.push(s),So(s),s=i;u.push(s),Ro(s);var c,f=u.length;for(c=1;c<f;++c)s=u[c],l=u[c-1],zo(s.edge,l.site,s.site,o);l=u[0],(s=u[f-1]).edge=Lo(l.site,s.site,null,o),No(l),No(s)}function Oo(e){for(var t,n,r,o,a=e.x,i=e.y,u=go._;u;)if((r=Mo(u,i)-a)>Oe)u=u.L;else{if(!((o=a-To(u,i))>Oe)){r>-Oe?(t=u.P,n=u):o>-Oe?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}var l=ko(e);if(go.insert(t,l),t||n){if(t===n)return Ro(t),n=ko(t.site),go.insert(l,n),l.edge=n.edge=Lo(t.site,l.site),No(t),void No(n);if(n){Ro(t),Ro(n);var s=t.site,c=s.x,f=s.y,p=e.x-c,d=e.y-f,h=n.site,y=h.x-c,v=h.y-f,m=2*(p*v-d*y),g=p*p+d*d,b=y*y+v*v,w={x:(v*g-d*b)/m+c,y:(p*b-y*g)/m+f};zo(n.edge,s,h,w),l.edge=Lo(s,e,null,w),n.edge=Lo(e,h,null,w),No(t),No(n)}else l.edge=Lo(t.site,l.site)}}function Mo(e,t){var n=e.site,r=n.x,o=n.y,a=o-t;if(!a)return r;var i=e.P;if(!i)return-1/0;var u=(n=i.site).x,l=n.y,s=l-t;if(!s)return u;var c=u-r,f=1/a-1/s,p=c/s;return f?(-p+Math.sqrt(p*p-2*f*(c*c/(-2*s)-l+s/2+o-a/2)))/f+r:(r+u)/2}function To(e,t){var n=e.N;if(n)return Mo(n,t);var r=e.site;return r.y===t?r.x:1/0}function jo(e){this.site=e,this.edges=[]}function Po(e,t){return t.angle-e.angle}function Ao(){Bo(this),this.x=this.y=this.arc=this.site=this.cy=null}function No(e){var t=e.P,n=e.N;if(t&&n){var r=t.site,o=e.site,a=n.site;if(r!==a){var i=o.x,u=o.y,l=r.x-i,s=r.y-u,c=a.x-i,f=2*(l*(v=a.y-u)-s*c);if(!(f>=-Me)){var p=l*l+s*s,d=c*c+v*v,h=(v*p-s*d)/f,y=(l*d-c*p)/f,v=y+u,m=_o.pop()||new Ao;m.arc=e,m.site=o,m.x=h+i,m.y=v+Math.sqrt(h*h+y*y),m.cy=v,e.circle=m;for(var g=null,b=wo._;b;)if(m.y<b.y||m.y===b.y&&m.x<=b.x){if(!b.L){g=b.P;break}b=b.L}else{if(!b.R){g=b;break}b=b.R}wo.insert(g,m),g||(bo=m)}}}}function Ro(e){var t=e.circle;t&&(t.P||(bo=t.N),wo.remove(t),_o.push(t),Bo(t),e.circle=null)}function Do(e,t){var n=e.b;if(n)return!0;var r,o,a=e.a,i=t[0][0],u=t[1][0],l=t[0][1],s=t[1][1],c=e.l,f=e.r,p=c.x,d=c.y,h=f.x,y=f.y,v=(p+h)/2,m=(d+y)/2;if(y===d){if(v<i||v>=u)return;if(p>h){if(a){if(a.y>=s)return}else a={x:v,y:l};n={x:v,y:s}}else{if(a){if(a.y<l)return}else a={x:v,y:s};n={x:v,y:l}}}else if(o=m-(r=(p-h)/(y-d))*v,r<-1||r>1)if(p>h){if(a){if(a.y>=s)return}else a={x:(l-o)/r,y:l};n={x:(s-o)/r,y:s}}else{if(a){if(a.y<l)return}else a={x:(s-o)/r,y:s};n={x:(l-o)/r,y:l}}else if(d<y){if(a){if(a.x>=u)return}else a={x:i,y:r*i+o};n={x:u,y:r*u+o}}else{if(a){if(a.x<i)return}else a={x:u,y:r*u+o};n={x:i,y:r*i+o}}return e.a=a,e.b=n,!0}function Io(e,t){this.l=e,this.r=t,this.a=this.b=null}function Lo(e,t,n,r){var o=new Io(e,t);return vo.push(o),n&&zo(o,e,t,n),r&&zo(o,t,e,r),mo[e.i].edges.push(new Fo(o,e,t)),mo[t.i].edges.push(new Fo(o,t,e)),o}function zo(e,t,n,r){e.a||e.b?e.l===n?e.b=r:e.a=r:(e.a=r,e.l=t,e.r=n)}function Fo(e,t,n){var r=e.a,o=e.b;this.edge=e,this.site=t,this.angle=n?Math.atan2(n.y-t.y,n.x-t.x):e.l===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}function Uo(){this._=null}function Bo(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function qo(e,t){var n=t,r=t.R,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Vo(e,t){var n=t,r=t.L,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Wo(e){for(;e.L;)e=e.L;return e}function Ho(e,t){var n,r,o,a=e.sort($o).pop();for(vo=[],mo=new Array(e.length),go=new Uo,wo=new Uo;;)if(o=bo,a&&(!o||a.y<o.y||a.y===o.y&&a.x<o.x))a.x===n&&a.y===r||(mo[a.i]=new jo(a),Oo(a),n=a.x,r=a.y),a=e.pop();else{if(!o)break;Co(o.arc)}t&&(function(e){for(var t,n=vo,r=lr(e[0][0],e[0][1],e[1][0],e[1][1]),o=n.length;o--;)(!Do(t=n[o],e)||!r(t)||_(t.a.x-t.b.x)<Oe&&_(t.a.y-t.b.y)<Oe)&&(t.a=t.b=null,n.splice(o,1))}(t),function(e){for(var t,n,r,o,a,i,u,l,s,c,f=e[0][0],p=e[1][0],d=e[0][1],h=e[1][1],y=mo,v=y.length;v--;)if((a=y[v])&&a.prepare())for(l=(u=a.edges).length,i=0;i<l;)r=(c=u[i].end()).x,o=c.y,t=(s=u[++i%l].start()).x,n=s.y,(_(r-t)>Oe||_(o-n)>Oe)&&(u.splice(i,0,new Fo((m=a.site,g=c,b=_(r-f)<Oe&&h-o>Oe?{x:f,y:_(t-f)<Oe?n:h}:_(o-h)<Oe&&p-r>Oe?{x:_(n-h)<Oe?t:p,y:h}:_(r-p)<Oe&&o-d>Oe?{x:p,y:_(t-p)<Oe?n:d}:_(o-d)<Oe&&r-f>Oe?{x:_(n-d)<Oe?t:f,y:d}:null,w=void 0,w=new Io(m,null),w.a=g,w.b=b,vo.push(w),w),a.site,null)),++l);var m,g,b,w}(t));var i={cells:mo,edges:vo};return go=wo=vo=mo=null,i}function $o(e,t){return t.y-e.y||t.x-e.x}jo.prototype.prepare=function(){for(var e,t=this.edges,n=t.length;n--;)(e=t[n].edge).b&&e.a||t.splice(n,1);return t.sort(Po),t.length},Fo.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},Uo.prototype={insert:function(e,t){var n,r,o;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=Wo(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.R&&(qo(this,n),n=(e=n).U),n.C=!1,r.C=!0,Vo(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.L&&(Vo(this,n),n=(e=n).U),n.C=!1,r.C=!0,qo(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,o=e.U,a=e.L,i=e.R;if(n=a?i?Wo(i):a:i,o?o.L===e?o.L=n:o.R=n:this._=n,a&&i?(r=n.C,n.C=e.C,n.L=a,a.U=n,n!==i?(o=n.U,n.U=e.U,e=n.R,o.L=e,n.R=i,i.U=n):(n.U=o,o=n,e=n.R)):(r=e.C,e=n),e&&(e.U=o),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===o.L){if((t=o.R).C&&(t.C=!1,o.C=!0,qo(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,Vo(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,qo(this,o),e=this._;break}}else if((t=o.L).C&&(t.C=!1,o.C=!0,Vo(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,qo(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,Vo(this,o),e=this._;break}t.C=!0,e=o,o=o.U}while(!e.C);e&&(e.C=!1)}}},a.geom.voronoi=function(e){var t=uo,n=lo,r=t,o=n,a=Yo;if(e)return i(e);function i(e){var t=new Array(e.length),n=a[0][0],r=a[0][1],o=a[1][0],i=a[1][1];return Ho(u(e),a).cells.forEach(function(a,u){var l=a.edges,s=a.site;(t[u]=l.length?l.map(function(e){var t=e.start();return[t.x,t.y]}):s.x>=n&&s.x<=o&&s.y>=r&&s.y<=i?[[n,i],[o,i],[o,r],[n,r]]:[]).point=e[u]}),t}function u(e){return e.map(function(e,t){return{x:Math.round(r(e,t)/Oe)*Oe,y:Math.round(o(e,t)/Oe)*Oe,i:t}})}return i.links=function(e){return Ho(u(e)).edges.filter(function(e){return e.l&&e.r}).map(function(t){return{source:e[t.l.i],target:e[t.r.i]}})},i.triangles=function(e){var t=[];return Ho(u(e)).cells.forEach(function(n,r){for(var o,a,i,u,l=n.site,s=n.edges.sort(Po),c=-1,f=s.length,p=s[f-1].edge,d=p.l===l?p.r:p.l;++c<f;)p,o=d,d=(p=s[c].edge).l===l?p.r:p.l,r<o.i&&r<d.i&&(i=o,u=d,((a=l).x-u.x)*(i.y-a.y)-(a.x-i.x)*(u.y-a.y)<0)&&t.push([e[r],e[o.i],e[d.i]])}),t},i.x=function(e){return arguments.length?(r=wt(t=e),i):t},i.y=function(e){return arguments.length?(o=wt(n=e),i):n},i.clipExtent=function(e){return arguments.length?(a=null==e?Yo:e,i):a===Yo?null:a},i.size=function(e){return arguments.length?i.clipExtent(e&&[[0,0],e]):a===Yo?null:a&&a[1]},i};var Yo=[[-1e6,-1e6],[1e6,1e6]];function Ko(e){return e.x}function Go(e){return e.y}function Jo(e,t){e=a.rgb(e),t=a.rgb(t);var n=e.r,r=e.g,o=e.b,i=t.r-n,u=t.g-r,l=t.b-o;return function(e){return"#"+dt(Math.round(n+i*e))+dt(Math.round(r+u*e))+dt(Math.round(o+l*e))}}function Qo(e,t){var n,r={},o={};for(n in e)n in t?r[n]=na(e[n],t[n]):o[n]=e[n];for(n in t)n in e||(o[n]=t[n]);return function(e){for(n in r)o[n]=r[n](e);return o}}function Xo(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function Zo(e,t){var n,r,o,a=ea.lastIndex=ta.lastIndex=0,i=-1,u=[],l=[];for(e+="",t+="";(n=ea.exec(e))&&(r=ta.exec(t));)(o=r.index)>a&&(o=t.slice(a,o),u[i]?u[i]+=o:u[++i]=o),(n=n[0])===(r=r[0])?u[i]?u[i]+=r:u[++i]=r:(u[++i]=null,l.push({i:i,x:Xo(n,r)})),a=ta.lastIndex;return a<t.length&&(o=t.slice(a),u[i]?u[i]+=o:u[++i]=o),u.length<2?l[0]?(t=l[0].x,function(e){return t(e)+""}):function(){return t}:(t=l.length,function(e){for(var n,r=0;r<t;++r)u[(n=l[r]).i]=n.x(e);return u.join("")})}a.geom.delaunay=function(e){return a.geom.voronoi().triangles(e)},a.geom.quadtree=function(e,t,n,r,o){var a,i=uo,u=lo;if(a=arguments.length)return i=Ko,u=Go,3===a&&(o=n,r=t,n=t=0),l(e);function l(e){var l,s,c,f,p,d,h,y,v,m=wt(i),g=wt(u);if(null!=t)d=t,h=n,y=r,v=o;else if(y=v=-(d=h=1/0),s=[],c=[],p=e.length,a)for(f=0;f<p;++f)(l=e[f]).x<d&&(d=l.x),l.y<h&&(h=l.y),l.x>y&&(y=l.x),l.y>v&&(v=l.y),s.push(l.x),c.push(l.y);else for(f=0;f<p;++f){var b=+m(l=e[f],f),w=+g(l,f);b<d&&(d=b),w<h&&(h=w),b>y&&(y=b),w>v&&(v=w),s.push(b),c.push(w)}var x=y-d,E=v-h;function k(e,t,n,r,o,a,i,u){if(!isNaN(n)&&!isNaN(r))if(e.leaf){var l=e.x,s=e.y;if(null!=l)if(_(l-n)+_(s-r)<.01)S(e,t,n,r,o,a,i,u);else{var c=e.point;e.x=e.y=e.point=null,S(e,c,l,s,o,a,i,u),S(e,t,n,r,o,a,i,u)}else e.x=n,e.y=r,e.point=t}else S(e,t,n,r,o,a,i,u)}function S(e,t,n,r,o,a,i,u){var l=.5*(o+i),s=.5*(a+u),c=n>=l,f=r>=s,p=f<<1|c;e.leaf=!1,c?o=l:i=l,f?a=s:u=s,k(e=e.nodes[p]||(e.nodes[p]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,n,r,o,a,i,u)}x>E?v=h+x:y=d+E;var C={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(e){k(C,e,+m(e,++f),+g(e,f),d,h,y,v)}};if(C.visit=function(e){!function e(t,n,r,o,a,i){if(!t(n,r,o,a,i)){var u=.5*(r+a),l=.5*(o+i),s=n.nodes;s[0]&&e(t,s[0],r,o,u,l),s[1]&&e(t,s[1],u,o,a,l),s[2]&&e(t,s[2],r,l,u,i),s[3]&&e(t,s[3],u,l,a,i)}}(e,C,d,h,y,v)},C.find=function(e){return function(e,t,n,r,o,a,i){var u,l=1/0;return function e(s,c,f,p,d){if(!(c>a||f>i||p<r||d<o)){if(h=s.point){var h,y=t-s.x,v=n-s.y,m=y*y+v*v;if(m<l){var g=Math.sqrt(l=m);r=t-g,o=n-g,a=t+g,i=n+g,u=h}}for(var b=s.nodes,w=.5*(c+p),x=.5*(f+d),_=(n>=x)<<1|t>=w,E=_+4;_<E;++_)if(s=b[3&_])switch(3&_){case 0:e(s,c,f,w,x);break;case 1:e(s,w,f,p,x);break;case 2:e(s,c,x,w,d);break;case 3:e(s,w,x,p,d)}}}(e,r,o,a,i),u}(C,e[0],e[1],d,h,y,v)},f=-1,null==t){for(;++f<p;)k(C,e[f],s[f],c[f],d,h,y,v);--f}else e.forEach(C.add);return s=c=e=l=null,C}return l.x=function(e){return arguments.length?(i=e,l):i},l.y=function(e){return arguments.length?(u=e,l):u},l.extent=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=+e[0][0],n=+e[0][1],r=+e[1][0],o=+e[1][1]),l):null==t?null:[[t,n],[r,o]]},l.size=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=n=0,r=+e[0],o=+e[1]),l):null==t?null:[r-t,o-n]},l},a.interpolateRgb=Jo,a.interpolateObject=Qo,a.interpolateNumber=Xo,a.interpolateString=Zo;var ea=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ta=new RegExp(ea.source,"g");function na(e,t){for(var n,r=a.interpolators.length;--r>=0&&!(n=a.interpolators[r](e,t)););return n}function ra(e,t){var n,r=[],o=[],a=e.length,i=t.length,u=Math.min(e.length,t.length);for(n=0;n<u;++n)r.push(na(e[n],t[n]));for(;n<a;++n)o[n]=e[n];for(;n<i;++n)o[n]=t[n];return function(e){for(n=0;n<u;++n)o[n]=r[n](e);return o}}a.interpolate=na,a.interpolators=[function(e,t){var n=typeof t;return("string"===n?bt.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?Jo:Zo:t instanceof He?Jo:Array.isArray(t)?ra:"object"===n&&isNaN(t)?Qo:Xo)(e,t)}],a.interpolateArray=ra;var oa=function(){return D},aa=a.map({linear:oa,poly:function(e){return function(t){return Math.pow(t,e)}},quad:function(){return sa},cubic:function(){return ca},sin:function(){return pa},exp:function(){return da},circle:function(){return ha},elastic:function(e,t){var n;arguments.length<2&&(t=.45);arguments.length?n=t/je*Math.asin(1/e):(e=1,n=t/4);return function(r){return 1+e*Math.pow(2,-10*r)*Math.sin((r-n)*je/t)}},back:function(e){e||(e=1.70158);return function(t){return t*t*((e+1)*t-e)}},bounce:function(){return ya}}),ia=a.map({in:D,out:ua,"in-out":la,"out-in":function(e){return la(ua(e))}});function ua(e){return function(t){return 1-e(1-t)}}function la(e){return function(t){return.5*(t<.5?e(2*t):2-e(2-2*t))}}function sa(e){return e*e}function ca(e){return e*e*e}function fa(e){if(e<=0)return 0;if(e>=1)return 1;var t=e*e,n=t*e;return 4*(e<.5?n:3*(e-t)+n-.75)}function pa(e){return 1-Math.cos(e*Ae)}function da(e){return Math.pow(2,10*(e-1))}function ha(e){return 1-Math.sqrt(1-e*e)}function ya(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function va(e,t){return t-=e,function(n){return Math.round(e+t*n)}}function ma(e){var t,n,r,o=[e.a,e.b],a=[e.c,e.d],i=ba(o),u=ga(o,a),l=ba(((t=a)[0]+=(r=-u)*(n=o)[0],t[1]+=r*n[1],t))||0;o[0]*a[1]<a[0]*o[1]&&(o[0]*=-1,o[1]*=-1,i*=-1,u*=-1),this.rotate=(i?Math.atan2(o[1],o[0]):Math.atan2(-a[0],a[1]))*Re,this.translate=[e.e,e.f],this.scale=[i,l],this.skew=l?Math.atan2(u,l)*Re:0}function ga(e,t){return e[0]*t[0]+e[1]*t[1]}function ba(e){var t=Math.sqrt(ga(e,e));return t&&(e[0]/=t,e[1]/=t),t}a.ease=function(e){var t,n=e.indexOf("-"),r=n>=0?e.slice(0,n):e,o=n>=0?e.slice(n+1):"in";return r=aa.get(r)||oa,o=ia.get(o)||D,t=o(r.apply(null,i.call(arguments,1))),function(e){return e<=0?0:e>=1?1:t(e)}},a.interpolateHcl=function(e,t){e=a.hcl(e),t=a.hcl(t);var n=e.h,r=e.c,o=e.l,i=t.h-n,u=t.c-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.c:r);isNaN(i)?(i=0,n=isNaN(n)?t.h:n):i>180?i-=360:i<-180&&(i+=360);return function(e){return Qe(n+i*e,r+u*e,o+l*e)+""}},a.interpolateHsl=function(e,t){e=a.hsl(e),t=a.hsl(t);var n=e.h,r=e.s,o=e.l,i=t.h-n,u=t.s-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.s:r);isNaN(i)?(i=0,n=isNaN(n)?t.h:n):i>180?i-=360:i<-180&&(i+=360);return function(e){return Ke(n+i*e,r+u*e,o+l*e)+""}},a.interpolateLab=function(e,t){e=a.lab(e),t=a.lab(t);var n=e.l,r=e.a,o=e.b,i=t.l-n,u=t.a-r,l=t.b-o;return function(e){return ot(n+i*e,r+u*e,o+l*e)+""}},a.interpolateRound=va,a.transform=function(e){var t=l.createElementNS(a.ns.prefix.svg,"g");return(a.transform=function(e){if(null!=e){t.setAttribute("transform",e);var n=t.transform.baseVal.consolidate()}return new ma(n?n.matrix:wa)})(e)},ma.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var wa={a:1,b:0,c:0,d:1,e:0,f:0};function xa(e){return e.length?e.pop()+",":""}function _a(e,t){var n=[],r=[];return e=a.transform(e),t=a.transform(t),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push("translate(",null,",",null,")");r.push({i:o-4,x:Xo(e[0],t[0])},{i:o-2,x:Xo(e[1],t[1])})}else(t[0]||t[1])&&n.push("translate("+t+")")}(e.translate,t.translate,n,r),function(e,t,n,r){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),r.push({i:n.push(xa(n)+"rotate(",null,")")-2,x:Xo(e,t)})):t&&n.push(xa(n)+"rotate("+t+")")}(e.rotate,t.rotate,n,r),function(e,t,n,r){e!==t?r.push({i:n.push(xa(n)+"skewX(",null,")")-2,x:Xo(e,t)}):t&&n.push(xa(n)+"skewX("+t+")")}(e.skew,t.skew,n,r),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push(xa(n)+"scale(",null,",",null,")");r.push({i:o-4,x:Xo(e[0],t[0])},{i:o-2,x:Xo(e[1],t[1])})}else 1===t[0]&&1===t[1]||n.push(xa(n)+"scale("+t+")")}(e.scale,t.scale,n,r),e=t=null,function(e){for(var t,o=-1,a=r.length;++o<a;)n[(t=r[o]).i]=t.x(e);return n.join("")}}function Ea(e,t){return t=(t-=e=+e)||1/t,function(n){return(n-e)/t}}function ka(e,t){return t=(t-=e=+e)||1/t,function(n){return Math.max(0,Math.min(1,(n-e)/t))}}function Sa(e){for(var t=e.source,n=e.target,r=function(e,t){if(e===t)return e;var n=Ca(e),r=Ca(t),o=n.pop(),a=r.pop(),i=null;for(;o===a;)i=o,o=n.pop(),a=r.pop();return i}(t,n),o=[t];t!==r;)t=t.parent,o.push(t);for(var a=o.length;n!==r;)o.splice(a,0,n),n=n.parent;return o}function Ca(e){for(var t=[],n=e.parent;null!=n;)t.push(e),e=n,n=n.parent;return t.push(e),t}function Oa(e){e.fixed|=2}function Ma(e){e.fixed&=-7}function Ta(e){e.fixed|=4,e.px=e.x,e.py=e.y}function ja(e){e.fixed&=-5}a.interpolateTransform=_a,a.layout={},a.layout.bundle=function(){return function(e){for(var t=[],n=-1,r=e.length;++n<r;)t.push(Sa(e[n]));return t}},a.layout.chord=function(){var e,t,n,r,o,i,u,l={},s=0;function c(){var l,c,p,d,h,y={},v=[],m=a.range(r),g=[];for(e=[],t=[],l=0,d=-1;++d<r;){for(c=0,h=-1;++h<r;)c+=n[d][h];v.push(c),g.push(a.range(r)),l+=c}for(o&&m.sort(function(e,t){return o(v[e],v[t])}),i&&g.forEach(function(e,t){e.sort(function(e,r){return i(n[t][e],n[t][r])})}),l=(je-s*r)/l,c=0,d=-1;++d<r;){for(p=c,h=-1;++h<r;){var b=m[d],w=g[b][h],x=n[b][w],_=c,E=c+=x*l;y[b+"-"+w]={index:b,subindex:w,startAngle:_,endAngle:E,value:x}}t[b]={index:b,startAngle:p,endAngle:c,value:v[b]},c+=s}for(d=-1;++d<r;)for(h=d-1;++h<r;){var k=y[d+"-"+h],S=y[h+"-"+d];(k.value||S.value)&&e.push(k.value<S.value?{source:S,target:k}:{source:k,target:S})}u&&f()}function f(){e.sort(function(e,t){return u((e.source.value+e.target.value)/2,(t.source.value+t.target.value)/2)})}return l.matrix=function(o){return arguments.length?(r=(n=o)&&n.length,e=t=null,l):n},l.padding=function(n){return arguments.length?(s=n,e=t=null,l):s},l.sortGroups=function(n){return arguments.length?(o=n,e=t=null,l):o},l.sortSubgroups=function(t){return arguments.length?(i=t,e=null,l):i},l.sortChords=function(t){return arguments.length?(u=t,e&&f(),l):u},l.chords=function(){return e||c(),e},l.groups=function(){return t||c(),t},l},a.layout.force=function(){var e,t,n,r,o,i,u={},l=a.dispatch("start","tick","end"),s=[1,1],c=.9,f=Pa,p=Aa,d=-30,h=Na,y=.1,v=.64,m=[],g=[];function b(e){return function(t,n,r,o){if(t.point!==e){var a=t.cx-e.x,i=t.cy-e.y,u=o-n,l=a*a+i*i;if(u*u/v<l){if(l<h){var s=t.charge/l;e.px-=a*s,e.py-=i*s}return!0}if(t.point&&l&&l<h){s=t.pointCharge/l;e.px-=a*s,e.py-=i*s}}return!t.charge}}function w(e){e.px=a.event.x,e.py=a.event.y,u.resume()}return u.tick=function(){if((n*=.99)<.005)return e=null,l.end({type:"end",alpha:n=0}),!0;var t,u,f,p,h,v,w,x,_,E=m.length,k=g.length;for(u=0;u<k;++u)p=(f=g[u]).source,(v=(x=(h=f.target).x-p.x)*x+(_=h.y-p.y)*_)&&(x*=v=n*o[u]*((v=Math.sqrt(v))-r[u])/v,_*=v,h.x-=x*(w=p.weight+h.weight?p.weight/(p.weight+h.weight):.5),h.y-=_*w,p.x+=x*(w=1-w),p.y+=_*w);if((w=n*y)&&(x=s[0]/2,_=s[1]/2,u=-1,w))for(;++u<E;)(f=m[u]).x+=(x-f.x)*w,f.y+=(_-f.y)*w;if(d)for(!function e(t,n,r){var o=0,a=0;t.charge=0;if(!t.leaf)for(var i,u=t.nodes,l=u.length,s=-1;++s<l;)null!=(i=u[s])&&(e(i,n,r),t.charge+=i.charge,o+=i.charge*i.cx,a+=i.charge*i.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var c=n*r[t.point.index];t.charge+=t.pointCharge=c,o+=c*t.point.x,a+=c*t.point.y}t.cx=o/t.charge;t.cy=a/t.charge}(t=a.geom.quadtree(m),n,i),u=-1;++u<E;)(f=m[u]).fixed||t.visit(b(f));for(u=-1;++u<E;)(f=m[u]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*c,f.y-=(f.py-(f.py=f.y))*c);l.tick({type:"tick",alpha:n})},u.nodes=function(e){return arguments.length?(m=e,u):m},u.links=function(e){return arguments.length?(g=e,u):g},u.size=function(e){return arguments.length?(s=e,u):s},u.linkDistance=function(e){return arguments.length?(f="function"==typeof e?e:+e,u):f},u.distance=u.linkDistance,u.linkStrength=function(e){return arguments.length?(p="function"==typeof e?e:+e,u):p},u.friction=function(e){return arguments.length?(c=+e,u):c},u.charge=function(e){return arguments.length?(d="function"==typeof e?e:+e,u):d},u.chargeDistance=function(e){return arguments.length?(h=e*e,u):Math.sqrt(h)},u.gravity=function(e){return arguments.length?(y=+e,u):y},u.theta=function(e){return arguments.length?(v=e*e,u):Math.sqrt(v)},u.alpha=function(t){return arguments.length?(t=+t,n?t>0?n=t:(e.c=null,e.t=NaN,e=null,l.end({type:"end",alpha:n=0})):t>0&&(l.start({type:"start",alpha:n=t}),e=Mt(u.tick)),u):n},u.start=function(){var e,t,n,a=m.length,l=g.length,c=s[0],h=s[1];for(e=0;e<a;++e)(n=m[e]).index=e,n.weight=0;for(e=0;e<l;++e)"number"==typeof(n=g[e]).source&&(n.source=m[n.source]),"number"==typeof n.target&&(n.target=m[n.target]),++n.source.weight,++n.target.weight;for(e=0;e<a;++e)n=m[e],isNaN(n.x)&&(n.x=y("x",c)),isNaN(n.y)&&(n.y=y("y",h)),isNaN(n.px)&&(n.px=n.x),isNaN(n.py)&&(n.py=n.y);if(r=[],"function"==typeof f)for(e=0;e<l;++e)r[e]=+f.call(this,g[e],e);else for(e=0;e<l;++e)r[e]=f;if(o=[],"function"==typeof p)for(e=0;e<l;++e)o[e]=+p.call(this,g[e],e);else for(e=0;e<l;++e)o[e]=p;if(i=[],"function"==typeof d)for(e=0;e<a;++e)i[e]=+d.call(this,m[e],e);else for(e=0;e<a;++e)i[e]=d;function y(n,r){if(!t){for(t=new Array(a),s=0;s<a;++s)t[s]=[];for(s=0;s<l;++s){var o=g[s];t[o.source.index].push(o.target),t[o.target.index].push(o.source)}}for(var i,u=t[e],s=-1,c=u.length;++s<c;)if(!isNaN(i=u[s][n]))return i;return Math.random()*r}return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){if(t||(t=a.behavior.drag().origin(D).on("dragstart.force",Oa).on("drag.force",w).on("dragend.force",Ma)),!arguments.length)return t;this.on("mouseover.force",Ta).on("mouseout.force",ja).call(t)},a.rebind(u,l,"on")};var Pa=20,Aa=1,Na=1/0;function Ra(e,t){return a.rebind(e,t,"sort","children","value"),e.nodes=e,e.links=Ua,e}function Da(e,t){for(var n=[e];null!=(e=n.pop());)if(t(e),(o=e.children)&&(r=o.length))for(var r,o;--r>=0;)n.push(o[r])}function Ia(e,t){for(var n=[e],r=[];null!=(e=n.pop());)if(r.push(e),(a=e.children)&&(o=a.length))for(var o,a,i=-1;++i<o;)n.push(a[i]);for(;null!=(e=r.pop());)t(e)}function La(e){return e.children}function za(e){return e.value}function Fa(e,t){return t.value-e.value}function Ua(e){return a.merge(e.map(function(e){return(e.children||[]).map(function(t){return{source:e,target:t}})}))}a.layout.hierarchy=function(){var e=Fa,t=La,n=za;function r(o){var a,i=[o],u=[];for(o.depth=0;null!=(a=i.pop());)if(u.push(a),(s=t.call(r,a,a.depth))&&(l=s.length)){for(var l,s,c;--l>=0;)i.push(c=s[l]),c.parent=a,c.depth=a.depth+1;n&&(a.value=0),a.children=s}else n&&(a.value=+n.call(r,a,a.depth)||0),delete a.children;return Ia(o,function(t){var r,o;e&&(r=t.children)&&r.sort(e),n&&(o=t.parent)&&(o.value+=t.value)}),u}return r.sort=function(t){return arguments.length?(e=t,r):e},r.children=function(e){return arguments.length?(t=e,r):t},r.value=function(e){return arguments.length?(n=e,r):n},r.revalue=function(e){return n&&(Da(e,function(e){e.children&&(e.value=0)}),Ia(e,function(e){var t;e.children||(e.value=+n.call(r,e,e.depth)||0),(t=e.parent)&&(t.value+=e.value)})),e},r},a.layout.partition=function(){var e=a.layout.hierarchy(),t=[1,1];function n(n,r){var o=e.call(this,n,r);return function e(t,n,r,o){var a=t.children;if(t.x=n,t.y=t.depth*o,t.dx=r,t.dy=o,a&&(i=a.length)){var i,u,l,s=-1;for(r=t.value?r/t.value:0;++s<i;)e(u=a[s],n,l=u.value*r,o),n+=l}}(o[0],0,t[0],t[1]/function e(t){var n=t.children,r=0;if(n&&(o=n.length))for(var o,a=-1;++a<o;)r=Math.max(r,e(n[a]));return 1+r}(o[0])),o}return n.size=function(e){return arguments.length?(t=e,n):t},Ra(n,e)},a.layout.pie=function(){var e=Number,t=Ba,n=0,r=je,o=0;function i(u){var l,s=u.length,c=u.map(function(t,n){return+e.call(i,t,n)}),f=+("function"==typeof n?n.apply(this,arguments):n),p=("function"==typeof r?r.apply(this,arguments):r)-f,d=Math.min(Math.abs(p)/s,+("function"==typeof o?o.apply(this,arguments):o)),h=d*(p<0?-1:1),y=a.sum(c),v=y?(p-s*h)/y:0,m=a.range(s),g=[];return null!=t&&m.sort(t===Ba?function(e,t){return c[t]-c[e]}:function(e,n){return t(u[e],u[n])}),m.forEach(function(e){g[e]={data:u[e],value:l=c[e],startAngle:f,endAngle:f+=l*v+h,padAngle:d}}),g}return i.value=function(t){return arguments.length?(e=t,i):e},i.sort=function(e){return arguments.length?(t=e,i):t},i.startAngle=function(e){return arguments.length?(n=e,i):n},i.endAngle=function(e){return arguments.length?(r=e,i):r},i.padAngle=function(e){return arguments.length?(o=e,i):o},i};var Ba={};function qa(e){return e.x}function Va(e){return e.y}function Wa(e,t,n){e.y0=t,e.y=n}a.layout.stack=function(){var e=D,t=Ya,n=Ka,r=Wa,o=qa,i=Va;function u(l,s){if(!(d=l.length))return l;var c=l.map(function(t,n){return e.call(u,t,n)}),f=c.map(function(e){return e.map(function(e,t){return[o.call(u,e,t),i.call(u,e,t)]})}),p=t.call(u,f,s);c=a.permute(c,p),f=a.permute(f,p);var d,h,y,v,m=n.call(u,f,s),g=c[0].length;for(y=0;y<g;++y)for(r.call(u,c[0][y],v=m[y],f[0][y][1]),h=1;h<d;++h)r.call(u,c[h][y],v+=f[h-1][y][1],f[h][y][1]);return l}return u.values=function(t){return arguments.length?(e=t,u):e},u.order=function(e){return arguments.length?(t="function"==typeof e?e:Ha.get(e)||Ya,u):t},u.offset=function(e){return arguments.length?(n="function"==typeof e?e:$a.get(e)||Ka,u):n},u.x=function(e){return arguments.length?(o=e,u):o},u.y=function(e){return arguments.length?(i=e,u):i},u.out=function(e){return arguments.length?(r=e,u):r},u};var Ha=a.map({"inside-out":function(e){var t,n,r=e.length,o=e.map(Ga),i=e.map(Ja),u=a.range(r).sort(function(e,t){return o[e]-o[t]}),l=0,s=0,c=[],f=[];for(t=0;t<r;++t)n=u[t],l<s?(l+=i[n],c.push(n)):(s+=i[n],f.push(n));return f.reverse().concat(c)},reverse:function(e){return a.range(e.length).reverse()},default:Ya}),$a=a.map({silhouette:function(e){var t,n,r,o=e.length,a=e[0].length,i=[],u=0,l=[];for(n=0;n<a;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];r>u&&(u=r),i.push(r)}for(n=0;n<a;++n)l[n]=(u-i[n])/2;return l},wiggle:function(e){var t,n,r,o,a,i,u,l,s,c=e.length,f=e[0],p=f.length,d=[];for(d[0]=l=s=0,n=1;n<p;++n){for(t=0,o=0;t<c;++t)o+=e[t][n][1];for(t=0,a=0,u=f[n][0]-f[n-1][0];t<c;++t){for(r=0,i=(e[t][n][1]-e[t][n-1][1])/(2*u);r<t;++r)i+=(e[r][n][1]-e[r][n-1][1])/u;a+=i*e[t][n][1]}d[n]=l-=o?a/o*u:0,l<s&&(s=l)}for(n=0;n<p;++n)d[n]-=s;return d},expand:function(e){var t,n,r,o=e.length,a=e[0].length,i=1/o,u=[];for(n=0;n<a;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];if(r)for(t=0;t<o;t++)e[t][n][1]/=r;else for(t=0;t<o;t++)e[t][n][1]=i}for(n=0;n<a;++n)u[n]=0;return u},zero:Ka});function Ya(e){return a.range(e.length)}function Ka(e){for(var t=-1,n=e[0].length,r=[];++t<n;)r[t]=0;return r}function Ga(e){for(var t,n=1,r=0,o=e[0][1],a=e.length;n<a;++n)(t=e[n][1])>o&&(r=n,o=t);return r}function Ja(e){return e.reduce(Qa,0)}function Qa(e,t){return e+t[1]}function Xa(e,t){return Za(e,Math.ceil(Math.log(t.length)/Math.LN2+1))}function Za(e,t){for(var n=-1,r=+e[0],o=(e[1]-r)/t,a=[];++n<=t;)a[n]=o*n+r;return a}function ei(e){return[a.min(e),a.max(e)]}function ti(e,t){return e.value-t.value}function ni(e,t){var n=e._pack_next;e._pack_next=t,t._pack_prev=e,t._pack_next=n,n._pack_prev=t}function ri(e,t){e._pack_next=t,t._pack_prev=e}function oi(e,t){var n=t.x-e.x,r=t.y-e.y,o=e.r+t.r;return.999*o*o>n*n+r*r}function ai(e){if((t=e.children)&&(l=t.length)){var t,n,r,o,a,i,u,l,s=1/0,c=-1/0,f=1/0,p=-1/0;if(t.forEach(ii),(n=t[0]).x=-n.r,n.y=0,b(n),l>1&&((r=t[1]).x=r.r,r.y=0,b(r),l>2))for(li(n,r,o=t[2]),b(o),ni(n,o),n._pack_prev=o,ni(o,r),r=n._pack_next,a=3;a<l;a++){li(n,r,o=t[a]);var d=0,h=1,y=1;for(i=r._pack_next;i!==r;i=i._pack_next,h++)if(oi(i,o)){d=1;break}if(1==d)for(u=n._pack_prev;u!==i._pack_prev&&!oi(u,o);u=u._pack_prev,y++);d?(h<y||h==y&&r.r<n.r?ri(n,r=i):ri(n=u,r),a--):(ni(n,o),r=o,b(o))}var v=(s+c)/2,m=(f+p)/2,g=0;for(a=0;a<l;a++)(o=t[a]).x-=v,o.y-=m,g=Math.max(g,o.r+Math.sqrt(o.x*o.x+o.y*o.y));e.r=g,t.forEach(ui)}function b(e){s=Math.min(e.x-e.r,s),c=Math.max(e.x+e.r,c),f=Math.min(e.y-e.r,f),p=Math.max(e.y+e.r,p)}}function ii(e){e._pack_next=e._pack_prev=e}function ui(e){delete e._pack_next,delete e._pack_prev}function li(e,t,n){var r=e.r+n.r,o=t.x-e.x,a=t.y-e.y;if(r&&(o||a)){var i=t.r+n.r,u=o*o+a*a,l=.5+((r*=r)-(i*=i))/(2*u),s=Math.sqrt(Math.max(0,2*i*(r+u)-(r-=u)*r-i*i))/(2*u);n.x=e.x+l*o+s*a,n.y=e.y+l*a-s*o}else n.x=e.x+r,n.y=e.y}function si(e,t){return e.parent==t.parent?1:2}function ci(e){var t=e.children;return t.length?t[0]:e.t}function fi(e){var t,n=e.children;return(t=n.length)?n[t-1]:e.t}function pi(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function di(e,t,n){return e.a.parent===t.parent?e.a:n}function hi(e){return{x:e.x,y:e.y,dx:e.dx,dy:e.dy}}function yi(e,t){var n=e.x+t[3],r=e.y+t[0],o=e.dx-t[1]-t[3],a=e.dy-t[0]-t[2];return o<0&&(n+=o/2,o=0),a<0&&(r+=a/2,a=0),{x:n,y:r,dx:o,dy:a}}function vi(e){var t=e[0],n=e[e.length-1];return t<n?[t,n]:[n,t]}function mi(e){return e.rangeExtent?e.rangeExtent():vi(e.range())}function gi(e,t,n,r){var o=n(e[0],e[1]),a=r(t[0],t[1]);return function(e){return a(o(e))}}function bi(e,t){var n,r=0,o=e.length-1,a=e[r],i=e[o];return i<a&&(n=r,r=o,o=n,n=a,a=i,i=n),e[r]=t.floor(a),e[o]=t.ceil(i),e}function wi(e){return e?{floor:function(t){return Math.floor(t/e)*e},ceil:function(t){return Math.ceil(t/e)*e}}:xi}a.layout.histogram=function(){var e=!0,t=Number,n=ei,r=Xa;function o(o,i){for(var u,l,s=[],c=o.map(t,this),f=n.call(this,c,i),p=r.call(this,f,c,i),d=(i=-1,c.length),h=p.length-1,y=e?1:1/d;++i<h;)(u=s[i]=[]).dx=p[i+1]-(u.x=p[i]),u.y=0;if(h>0)for(i=-1;++i<d;)(l=c[i])>=f[0]&&l<=f[1]&&((u=s[a.bisect(p,l,1,h)-1]).y+=y,u.push(o[i]));return s}return o.value=function(e){return arguments.length?(t=e,o):t},o.range=function(e){return arguments.length?(n=wt(e),o):n},o.bins=function(e){return arguments.length?(r="number"==typeof e?function(t){return Za(t,e)}:wt(e),o):r},o.frequency=function(t){return arguments.length?(e=!!t,o):e},o},a.layout.pack=function(){var e,t=a.layout.hierarchy().sort(ti),n=0,r=[1,1];function o(o,a){var i=t.call(this,o,a),u=i[0],l=r[0],s=r[1],c=null==e?Math.sqrt:"function"==typeof e?e:function(){return e};if(u.x=u.y=0,Ia(u,function(e){e.r=+c(e.value)}),Ia(u,ai),n){var f=n*(e?1:Math.max(2*u.r/l,2*u.r/s))/2;Ia(u,function(e){e.r+=f}),Ia(u,ai),Ia(u,function(e){e.r-=f})}return function e(t,n,r,o){var a=t.children;t.x=n+=o*t.x;t.y=r+=o*t.y;t.r*=o;if(a)for(var i=-1,u=a.length;++i<u;)e(a[i],n,r,o)}(u,l/2,s/2,e?1:1/Math.max(2*u.r/l,2*u.r/s)),i}return o.size=function(e){return arguments.length?(r=e,o):r},o.radius=function(t){return arguments.length?(e=null==t||"function"==typeof t?t:+t,o):e},o.padding=function(e){return arguments.length?(n=+e,o):n},Ra(o,t)},a.layout.tree=function(){var e=a.layout.hierarchy().sort(null).value(null),t=si,n=[1,1],r=null;function o(o,a){var s=e.call(this,o,a),c=s[0],f=function(e){var t,n={A:null,children:[e]},r=[n];for(;null!=(t=r.pop());)for(var o,a=t.children,i=0,u=a.length;i<u;++i)r.push((a[i]=o={_:a[i],parent:t,children:(o=a[i].children)&&o.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:i}).a=o);return n.children[0]}(c);if(Ia(f,i),f.parent.m=-f.z,Da(f,u),r)Da(c,l);else{var p=c,d=c,h=c;Da(c,function(e){e.x<p.x&&(p=e),e.x>d.x&&(d=e),e.depth>h.depth&&(h=e)});var y=t(p,d)/2-p.x,v=n[0]/(d.x+t(d,p)/2+y),m=n[1]/(h.depth||1);Da(c,function(e){e.x=(e.x+y)*v,e.y=e.depth*m})}return s}function i(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n.length){!function(e){var t,n=0,r=0,o=e.children,a=o.length;for(;--a>=0;)(t=o[a]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(e);var a=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-a):e.z=a}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,a=e,i=e,u=n,l=a.parent.children[0],s=a.m,c=i.m,f=u.m,p=l.m;u=fi(u),a=ci(a),u&&a;)l=ci(l),(i=fi(i)).a=e,(o=u.z+f-a.z-s+t(u._,a._))>0&&(pi(di(u,e,r),e,o),s+=o,c+=o),f+=u.m,s+=a.m,p+=l.m,c+=i.m;u&&!fi(i)&&(i.t=u,i.m+=f-c),a&&!ci(l)&&(l.t=a,l.m+=s-p,r=e)}return r}(e,o,e.parent.A||r[0])}function u(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function l(e){e.x*=n[0],e.y=e.depth*n[1]}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e)?l:null,o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null==(n=e)?null:l,o):r?n:null},Ra(o,e)},a.layout.cluster=function(){var e=a.layout.hierarchy().sort(null).value(null),t=si,n=[1,1],r=!1;function o(o,i){var u,l=e.call(this,o,i),s=l[0],c=0;Ia(s,function(e){var n=e.children;n&&n.length?(e.x=function(e){return e.reduce(function(e,t){return e+t.x},0)/e.length}(n),e.y=function(e){return 1+a.max(e,function(e){return e.y})}(n)):(e.x=u?c+=t(e,u):0,e.y=0,u=e)});var f=function e(t){var n=t.children;return n&&n.length?e(n[0]):t}(s),p=function e(t){var n,r=t.children;return r&&(n=r.length)?e(r[n-1]):t}(s),d=f.x-t(f,p)/2,h=p.x+t(p,f)/2;return Ia(s,r?function(e){e.x=(e.x-s.x)*n[0],e.y=(s.y-e.y)*n[1]}:function(e){e.x=(e.x-d)/(h-d)*n[0],e.y=(1-(s.y?e.y/s.y:1))*n[1]}),l}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e),o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null!=(n=e),o):r?n:null},Ra(o,e)},a.layout.treemap=function(){var e,t=a.layout.hierarchy(),n=Math.round,r=[1,1],o=null,i=hi,u=!1,l="squarify",s=.5*(1+Math.sqrt(5));function c(e,t){for(var n,r,o=-1,a=e.length;++o<a;)r=(n=e[o]).value*(t<0?0:t),n.area=isNaN(r)||r<=0?0:r}function f(e){var t=e.children;if(t&&t.length){var n,r,o,a=i(e),u=[],s=t.slice(),p=1/0,y="slice"===l?a.dx:"dice"===l?a.dy:"slice-dice"===l?1&e.depth?a.dy:a.dx:Math.min(a.dx,a.dy);for(c(s,a.dx*a.dy/e.value),u.area=0;(o=s.length)>0;)u.push(n=s[o-1]),u.area+=n.area,"squarify"!==l||(r=d(u,y))<=p?(s.pop(),p=r):(u.area-=u.pop().area,h(u,y,a,!1),y=Math.min(a.dx,a.dy),u.length=u.area=0,p=1/0);u.length&&(h(u,y,a,!0),u.length=u.area=0),t.forEach(f)}}function p(e){var t=e.children;if(t&&t.length){var n,r=i(e),o=t.slice(),a=[];for(c(o,r.dx*r.dy/e.value),a.area=0;n=o.pop();)a.push(n),a.area+=n.area,null!=n.z&&(h(a,n.z?r.dx:r.dy,r,!o.length),a.length=a.area=0);t.forEach(p)}}function d(e,t){for(var n,r=e.area,o=0,a=1/0,i=-1,u=e.length;++i<u;)(n=e[i].area)&&(n<a&&(a=n),n>o&&(o=n));return t*=t,(r*=r)?Math.max(t*o*s/r,r/(t*a*s)):1/0}function h(e,t,r,o){var a,i=-1,u=e.length,l=r.x,s=r.y,c=t?n(e.area/t):0;if(t==r.dx){for((o||c>r.dy)&&(c=r.dy);++i<u;)(a=e[i]).x=l,a.y=s,a.dy=c,l+=a.dx=Math.min(r.x+r.dx-l,c?n(a.area/c):0);a.z=!0,a.dx+=r.x+r.dx-l,r.y+=c,r.dy-=c}else{for((o||c>r.dx)&&(c=r.dx);++i<u;)(a=e[i]).x=l,a.y=s,a.dx=c,s+=a.dy=Math.min(r.y+r.dy-s,c?n(a.area/c):0);a.z=!1,a.dy+=r.y+r.dy-s,r.x+=c,r.dx-=c}}function y(n){var o=e||t(n),a=o[0];return a.x=a.y=0,a.value?(a.dx=r[0],a.dy=r[1]):a.dx=a.dy=0,e&&t.revalue(a),c([a],a.dx*a.dy/a.value),(e?p:f)(a),u&&(e=o),o}return y.size=function(e){return arguments.length?(r=e,y):r},y.padding=function(e){if(!arguments.length)return o;function t(t){return yi(t,e)}var n;return i=null==(o=e)?hi:"function"==(n=typeof e)?function(t){var n=e.call(y,t,t.depth);return null==n?hi(t):yi(t,"number"==typeof n?[n,n,n,n]:n)}:"number"===n?(e=[e,e,e,e],t):t,y},y.round=function(e){return arguments.length?(n=e?Math.round:Number,y):n!=Number},y.sticky=function(t){return arguments.length?(u=t,e=null,y):u},y.ratio=function(e){return arguments.length?(s=e,y):s},y.mode=function(e){return arguments.length?(l=e+"",y):l},Ra(y,t)},a.random={normal:function(e,t){var n=arguments.length;return n<2&&(t=1),n<1&&(e=0),function(){var n,r,o;do{o=(n=2*Math.random()-1)*n+(r=2*Math.random()-1)*r}while(!o||o>1);return e+t*n*Math.sqrt(-2*Math.log(o)/o)}},logNormal:function(){var e=a.random.normal.apply(a,arguments);return function(){return Math.exp(e())}},bates:function(e){var t=a.random.irwinHall(e);return function(){return t()/e}},irwinHall:function(e){return function(){for(var t=0,n=0;n<e;n++)t+=Math.random();return t}}},a.scale={};var xi={floor:D,ceil:D};function _i(e,t,n,r){var o=[],i=[],u=0,l=Math.min(e.length,t.length)-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++u<=l;)o.push(n(e[u-1],e[u])),i.push(r(t[u-1],t[u]));return function(t){var n=a.bisect(e,t,1,l)-1;return i[n](o[n](t))}}function Ei(e,t){return a.rebind(e,t,"range","rangeRound","interpolate","clamp")}function ki(e,t){return bi(e,wi(Si(e,t)[2])),bi(e,wi(Si(e,t)[2])),e}function Si(e,t){null==t&&(t=10);var n=vi(e),r=n[1]-n[0],o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),a=t/r*o;return a<=.15?o*=10:a<=.35?o*=5:a<=.75&&(o*=2),n[0]=Math.ceil(n[0]/o)*o,n[1]=Math.floor(n[1]/o)*o+.5*o,n[2]=o,n}function Ci(e,t){return a.range.apply(a,Si(e,t))}function Oi(e,t,n){var r=Si(e,t);if(n){var o=Dt.exec(n);if(o.shift(),"s"===o[8]){var i=a.formatPrefix(Math.max(_(r[0]),_(r[1])));return o[7]||(o[7]="."+Ti(i.scale(r[2]))),o[8]="f",n=a.format(o.join("")),function(e){return n(i.scale(e))+i.symbol}}o[7]||(o[7]="."+function(e,t){var n=Ti(t[2]);return e in Mi?Math.abs(n-Ti(Math.max(_(t[0]),_(t[1]))))+ +("e"!==e):n-2*("%"===e)}(o[8],r)),n=o.join("")}else n=",."+Ti(r[2])+"f";return a.format(n)}a.scale.linear=function(){return function e(t,n,r,o){var a,i;function u(){var e=Math.min(t.length,n.length)>2?_i:gi,u=o?ka:Ea;return a=e(t,n,u,r),i=e(n,t,u,na),l}function l(e){return a(e)}l.invert=function(e){return i(e)};l.domain=function(e){return arguments.length?(t=e.map(Number),u()):t};l.range=function(e){return arguments.length?(n=e,u()):n};l.rangeRound=function(e){return l.range(e).interpolate(va)};l.clamp=function(e){return arguments.length?(o=e,u()):o};l.interpolate=function(e){return arguments.length?(r=e,u()):r};l.ticks=function(e){return Ci(t,e)};l.tickFormat=function(e,n){return Oi(t,e,n)};l.nice=function(e){return ki(t,e),u()};l.copy=function(){return e(t,n,r,o)};return u()}([0,1],[0,1],na,!1)};var Mi={s:1,g:1,p:1,r:1,e:1};function Ti(e){return-Math.floor(Math.log(e)/Math.LN10+.01)}a.scale.log=function(){return function e(t,n,r,o){function i(e){return(r?Math.log(e<0?0:e):-Math.log(e>0?0:-e))/Math.log(n)}function u(e){return r?Math.pow(n,e):-Math.pow(n,-e)}function l(e){return t(i(e))}l.invert=function(e){return u(t.invert(e))};l.domain=function(e){return arguments.length?(r=e[0]>=0,t.domain((o=e.map(Number)).map(i)),l):o};l.base=function(e){return arguments.length?(n=+e,t.domain(o.map(i)),l):n};l.nice=function(){var e=bi(o.map(i),r?Math:Pi);return t.domain(e),o=e.map(u),l};l.ticks=function(){var e=vi(o),t=[],a=e[0],l=e[1],s=Math.floor(i(a)),c=Math.ceil(i(l)),f=n%1?2:n;if(isFinite(c-s)){if(r){for(;s<c;s++)for(var p=1;p<f;p++)t.push(u(s)*p);t.push(u(s))}else for(t.push(u(s));s++<c;)for(var p=f-1;p>0;p--)t.push(u(s)*p);for(s=0;t[s]<a;s++);for(c=t.length;t[c-1]>l;c--);t=t.slice(s,c)}return t};l.tickFormat=function(e,t){if(!arguments.length)return ji;arguments.length<2?t=ji:"function"!=typeof t&&(t=a.format(t));var r=Math.max(1,n*e/l.ticks().length);return function(e){var o=e/u(Math.round(i(e)));return o*n<n-.5&&(o*=n),o<=r?t(e):""}};l.copy=function(){return e(t.copy(),n,r,o)};return Ei(l,t)}(a.scale.linear().domain([0,1]),10,!0,[1,10])};var ji=a.format(".0e"),Pi={floor:function(e){return-Math.ceil(-e)},ceil:function(e){return-Math.floor(-e)}};function Ai(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}a.scale.pow=function(){return function e(t,n,r){var o=Ai(n),a=Ai(1/n);function i(e){return t(o(e))}i.invert=function(e){return a(t.invert(e))};i.domain=function(e){return arguments.length?(t.domain((r=e.map(Number)).map(o)),i):r};i.ticks=function(e){return Ci(r,e)};i.tickFormat=function(e,t){return Oi(r,e,t)};i.nice=function(e){return i.domain(ki(r,e))};i.exponent=function(e){return arguments.length?(o=Ai(n=e),a=Ai(1/n),t.domain(r.map(o)),i):n};i.copy=function(){return e(t.copy(),n,r)};return Ei(i,t)}(a.scale.linear(),1,[0,1])},a.scale.sqrt=function(){return a.scale.pow().exponent(.5)},a.scale.ordinal=function(){return function e(t,n){var r,o,i;function u(e){return o[((r.get(e)||("range"===n.t?r.set(e,t.push(e)):NaN))-1)%o.length]}function l(e,n){return a.range(t.length).map(function(t){return e+n*t})}u.domain=function(e){if(!arguments.length)return t;t=[],r=new k;for(var o,a=-1,i=e.length;++a<i;)r.has(o=e[a])||r.set(o,t.push(o));return u[n.t].apply(u,n.a)};u.range=function(e){return arguments.length?(o=e,i=0,n={t:"range",a:arguments},u):o};u.rangePoints=function(e,r){arguments.length<2&&(r=0);var a=e[0],s=e[1],c=t.length<2?(a=(a+s)/2,0):(s-a)/(t.length-1+r);return o=l(a+c*r/2,c),i=0,n={t:"rangePoints",a:arguments},u};u.rangeRoundPoints=function(e,r){arguments.length<2&&(r=0);var a=e[0],s=e[1],c=t.length<2?(a=s=Math.round((a+s)/2),0):(s-a)/(t.length-1+r)|0;return o=l(a+Math.round(c*r/2+(s-a-(t.length-1+r)*c)/2),c),i=0,n={t:"rangeRoundPoints",a:arguments},u};u.rangeBands=function(e,r,a){arguments.length<2&&(r=0),arguments.length<3&&(a=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=(f-c)/(t.length-r+2*a);return o=l(c+p*a,p),s&&o.reverse(),i=p*(1-r),n={t:"rangeBands",a:arguments},u};u.rangeRoundBands=function(e,r,a){arguments.length<2&&(r=0),arguments.length<3&&(a=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=Math.floor((f-c)/(t.length-r+2*a));return o=l(c+Math.round((f-c-(t.length-r)*p)/2),p),s&&o.reverse(),i=Math.round(p*(1-r)),n={t:"rangeRoundBands",a:arguments},u};u.rangeBand=function(){return i};u.rangeExtent=function(){return vi(n.a[0])};u.copy=function(){return e(t,n)};return u.domain(t)}([],{t:"range",a:[[]]})},a.scale.category10=function(){return a.scale.ordinal().range(Ni)},a.scale.category20=function(){return a.scale.ordinal().range(Ri)},a.scale.category20b=function(){return a.scale.ordinal().range(Di)},a.scale.category20c=function(){return a.scale.ordinal().range(Ii)};var Ni=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ft),Ri=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ft),Di=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ft),Ii=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ft);function Li(){return 0}a.scale.quantile=function(){return function e(t,n){var r;function o(){var e=0,o=n.length;for(r=[];++e<o;)r[e-1]=a.quantile(t,e/o);return i}function i(e){if(!isNaN(e=+e))return n[a.bisect(r,e)]}i.domain=function(e){return arguments.length?(t=e.map(m).filter(g).sort(v),o()):t};i.range=function(e){return arguments.length?(n=e,o()):n};i.quantiles=function(){return r};i.invertExtent=function(e){return(e=n.indexOf(e))<0?[NaN,NaN]:[e>0?r[e-1]:t[0],e<r.length?r[e]:t[t.length-1]]};i.copy=function(){return e(t,n)};return o()}([],[])},a.scale.quantize=function(){return function e(t,n,r){var o,a;function i(e){return r[Math.max(0,Math.min(a,Math.floor(o*(e-t))))]}function u(){return o=r.length/(n-t),a=r.length-1,i}i.domain=function(e){return arguments.length?(t=+e[0],n=+e[e.length-1],u()):[t,n]};i.range=function(e){return arguments.length?(r=e,u()):r};i.invertExtent=function(e){return[e=(e=r.indexOf(e))<0?NaN:e/o+t,e+1/o]};i.copy=function(){return e(t,n,r)};return u()}(0,1,[0,1])},a.scale.threshold=function(){return function e(t,n){function r(e){if(e<=e)return n[a.bisect(t,e)]}r.domain=function(e){return arguments.length?(t=e,r):t};r.range=function(e){return arguments.length?(n=e,r):n};r.invertExtent=function(e){return e=n.indexOf(e),[t[e-1],t[e]]};r.copy=function(){return e(t,n)};return r}([.5],[0,1])},a.scale.identity=function(){return function e(t){function n(e){return+e}n.invert=n;n.domain=n.range=function(e){return arguments.length?(t=e.map(n),n):t};n.ticks=function(e){return Ci(t,e)};n.tickFormat=function(e,n){return Oi(t,e,n)};n.copy=function(){return e(t)};return n}([0,1])},a.svg={},a.svg.arc=function(){var e=Fi,t=Ui,n=Li,r=zi,o=Bi,a=qi,i=Vi;function u(){var u=Math.max(0,+e.apply(this,arguments)),s=Math.max(0,+t.apply(this,arguments)),c=o.apply(this,arguments)-Ae,f=a.apply(this,arguments)-Ae,p=Math.abs(f-c),d=c>f?0:1;if(s<u&&(h=s,s=u,u=h),p>=Pe)return l(s,d)+(u?l(u,1-d):"")+"Z";var h,y,v,m,g,b,w,x,_,E,k,S,C=0,O=0,M=[];if((m=(+i.apply(this,arguments)||0)/2)&&(v=r===zi?Math.sqrt(u*u+s*s):+r.apply(this,arguments),d||(O*=-1),s&&(O=ze(v/s*Math.sin(m))),u&&(C=ze(v/u*Math.sin(m)))),s){g=s*Math.cos(c+O),b=s*Math.sin(c+O),w=s*Math.cos(f-O),x=s*Math.sin(f-O);var T=Math.abs(f-c-2*O)<=Te?0:1;if(O&&Wi(g,b,w,x)===d^T){var j=(c+f)/2;g=s*Math.cos(j),b=s*Math.sin(j),w=x=null}}else g=b=0;if(u){_=u*Math.cos(f-C),E=u*Math.sin(f-C),k=u*Math.cos(c+C),S=u*Math.sin(c+C);var P=Math.abs(c-f+2*C)<=Te?0:1;if(C&&Wi(_,E,k,S)===1-d^P){var A=(c+f)/2;_=u*Math.cos(A),E=u*Math.sin(A),k=S=null}}else _=E=0;if(p>Oe&&(h=Math.min(Math.abs(s-u)/2,+n.apply(this,arguments)))>.001){y=u<s^d?0:1;var N=h,R=h;if(p<Te){var D=null==k?[_,E]:null==w?[g,b]:ho([g,b],[k,S],[w,x],[_,E]),I=g-D[0],L=b-D[1],z=w-D[0],F=x-D[1],U=1/Math.sin(Math.acos((I*z+L*F)/(Math.sqrt(I*I+L*L)*Math.sqrt(z*z+F*F)))/2),B=Math.sqrt(D[0]*D[0]+D[1]*D[1]);R=Math.min(h,(u-B)/(U-1)),N=Math.min(h,(s-B)/(U+1))}if(null!=w){var q=Hi(null==k?[_,E]:[k,S],[g,b],s,N,d),V=Hi([w,x],[_,E],s,N,d);h===N?M.push("M",q[0],"A",N,",",N," 0 0,",y," ",q[1],"A",s,",",s," 0 ",1-d^Wi(q[1][0],q[1][1],V[1][0],V[1][1]),",",d," ",V[1],"A",N,",",N," 0 0,",y," ",V[0]):M.push("M",q[0],"A",N,",",N," 0 1,",y," ",V[0])}else M.push("M",g,",",b);if(null!=k){var W=Hi([g,b],[k,S],u,-R,d),H=Hi([_,E],null==w?[g,b]:[w,x],u,-R,d);h===R?M.push("L",H[0],"A",R,",",R," 0 0,",y," ",H[1],"A",u,",",u," 0 ",d^Wi(H[1][0],H[1][1],W[1][0],W[1][1]),",",1-d," ",W[1],"A",R,",",R," 0 0,",y," ",W[0]):M.push("L",H[0],"A",R,",",R," 0 0,",y," ",W[0])}else M.push("L",_,",",E)}else M.push("M",g,",",b),null!=w&&M.push("A",s,",",s," 0 ",T,",",d," ",w,",",x),M.push("L",_,",",E),null!=k&&M.push("A",u,",",u," 0 ",P,",",1-d," ",k,",",S);return M.push("Z"),M.join("")}function l(e,t){return"M0,"+e+"A"+e+","+e+" 0 1,"+t+" 0,"+-e+"A"+e+","+e+" 0 1,"+t+" 0,"+e}return u.innerRadius=function(t){return arguments.length?(e=wt(t),u):e},u.outerRadius=function(e){return arguments.length?(t=wt(e),u):t},u.cornerRadius=function(e){return arguments.length?(n=wt(e),u):n},u.padRadius=function(e){return arguments.length?(r=e==zi?zi:wt(e),u):r},u.startAngle=function(e){return arguments.length?(o=wt(e),u):o},u.endAngle=function(e){return arguments.length?(a=wt(e),u):a},u.padAngle=function(e){return arguments.length?(i=wt(e),u):i},u.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +a.apply(this,arguments))/2-Ae;return[Math.cos(r)*n,Math.sin(r)*n]},u};var zi="auto";function Fi(e){return e.innerRadius}function Ui(e){return e.outerRadius}function Bi(e){return e.startAngle}function qi(e){return e.endAngle}function Vi(e){return e&&e.padAngle}function Wi(e,t,n,r){return(e-n)*t-(t-r)*e>0?0:1}function Hi(e,t,n,r,o){var a=e[0]-t[0],i=e[1]-t[1],u=(o?r:-r)/Math.sqrt(a*a+i*i),l=u*i,s=-u*a,c=e[0]+l,f=e[1]+s,p=t[0]+l,d=t[1]+s,h=(c+p)/2,y=(f+d)/2,v=p-c,m=d-f,g=v*v+m*m,b=n-r,w=c*d-p*f,x=(m<0?-1:1)*Math.sqrt(Math.max(0,b*b*g-w*w)),_=(w*m-v*x)/g,E=(-w*v-m*x)/g,k=(w*m+v*x)/g,S=(-w*v+m*x)/g,C=_-h,O=E-y,M=k-h,T=S-y;return C*C+O*O>M*M+T*T&&(_=k,E=S),[[_-l,E-s],[_*n/b,E*n/b]]}function $i(e){var t=uo,n=lo,r=Zn,o=Ki,a=o.key,i=.7;function u(a){var u,l=[],s=[],c=-1,f=a.length,p=wt(t),d=wt(n);function h(){l.push("M",o(e(s),i))}for(;++c<f;)r.call(this,u=a[c],c)?s.push([+p.call(this,u,c),+d.call(this,u,c)]):s.length&&(h(),s=[]);return s.length&&h(),l.length?l.join(""):null}return u.x=function(e){return arguments.length?(t=e,u):t},u.y=function(e){return arguments.length?(n=e,u):n},u.defined=function(e){return arguments.length?(r=e,u):r},u.interpolate=function(e){return arguments.length?(a="function"==typeof e?o=e:(o=Yi.get(e)||Ki).key,u):a},u.tension=function(e){return arguments.length?(i=e,u):i},u}a.svg.line=function(){return $i(D)};var Yi=a.map({linear:Ki,"linear-closed":Gi,step:function(e){var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];for(;++t<n;)o.push("H",(r[0]+(r=e[t])[0])/2,"V",r[1]);n>1&&o.push("H",r[0]);return o.join("")},"step-before":Ji,"step-after":Qi,basis:eu,"basis-open":function(e){if(e.length<4)return Ki(e);var t,n=[],r=-1,o=e.length,a=[0],i=[0];for(;++r<3;)t=e[r],a.push(t[0]),i.push(t[1]);n.push(tu(ou,a)+","+tu(ou,i)),--r;for(;++r<o;)t=e[r],a.shift(),a.push(t[0]),i.shift(),i.push(t[1]),au(n,a,i);return n.join("")},"basis-closed":function(e){var t,n,r=-1,o=e.length,a=o+4,i=[],u=[];for(;++r<4;)n=e[r%o],i.push(n[0]),u.push(n[1]);t=[tu(ou,i),",",tu(ou,u)],--r;for(;++r<a;)n=e[r%o],i.shift(),i.push(n[0]),u.shift(),u.push(n[1]),au(t,i,u);return t.join("")},bundle:function(e,t){var n=e.length-1;if(n)for(var r,o,a=e[0][0],i=e[0][1],u=e[n][0]-a,l=e[n][1]-i,s=-1;++s<=n;)r=e[s],o=s/n,r[0]=t*r[0]+(1-t)*(a+o*u),r[1]=t*r[1]+(1-t)*(i+o*l);return eu(e)},cardinal:function(e,t){return e.length<3?Ki(e):e[0]+Xi(e,Zi(e,t))},"cardinal-open":function(e,t){return e.length<4?Ki(e):e[1]+Xi(e.slice(1,-1),Zi(e,t))},"cardinal-closed":function(e,t){return e.length<3?Gi(e):e[0]+Xi((e.push(e[0]),e),Zi([e[e.length-2]].concat(e,[e[1]]),t))},monotone:function(e){return e.length<3?Ki(e):e[0]+Xi(e,function(e){var t,n,r,o,a=[],i=function(e){var t=0,n=e.length-1,r=[],o=e[0],a=e[1],i=r[0]=iu(o,a);for(;++t<n;)r[t]=(i+(i=iu(o=a,a=e[t+1])))/2;return r[t]=i,r}(e),u=-1,l=e.length-1;for(;++u<l;)t=iu(e[u],e[u+1]),_(t)<Oe?i[u]=i[u+1]=0:(n=i[u]/t,r=i[u+1]/t,(o=n*n+r*r)>9&&(o=3*t/Math.sqrt(o),i[u]=o*n,i[u+1]=o*r));u=-1;for(;++u<=l;)o=(e[Math.min(l,u+1)][0]-e[Math.max(0,u-1)][0])/(6*(1+i[u]*i[u])),a.push([o||0,i[u]*o||0]);return a}(e))}});function Ki(e){return e.length>1?e.join("L"):e+"Z"}function Gi(e){return e.join("L")+"Z"}function Ji(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("V",(r=e[t])[1],"H",r[0]);return o.join("")}function Qi(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("H",(r=e[t])[0],"V",r[1]);return o.join("")}function Xi(e,t){if(t.length<1||e.length!=t.length&&e.length!=t.length+2)return Ki(e);var n=e.length!=t.length,r="",o=e[0],a=e[1],i=t[0],u=i,l=1;if(n&&(r+="Q"+(a[0]-2*i[0]/3)+","+(a[1]-2*i[1]/3)+","+a[0]+","+a[1],o=e[1],l=2),t.length>1){u=t[1],a=e[l],l++,r+="C"+(o[0]+i[0])+","+(o[1]+i[1])+","+(a[0]-u[0])+","+(a[1]-u[1])+","+a[0]+","+a[1];for(var s=2;s<t.length;s++,l++)a=e[l],u=t[s],r+="S"+(a[0]-u[0])+","+(a[1]-u[1])+","+a[0]+","+a[1]}if(n){var c=e[l];r+="Q"+(a[0]+2*u[0]/3)+","+(a[1]+2*u[1]/3)+","+c[0]+","+c[1]}return r}function Zi(e,t){for(var n,r=[],o=(1-t)/2,a=e[0],i=e[1],u=1,l=e.length;++u<l;)n=a,a=i,i=e[u],r.push([o*(i[0]-n[0]),o*(i[1]-n[1])]);return r}function eu(e){if(e.length<3)return Ki(e);var t=1,n=e.length,r=e[0],o=r[0],a=r[1],i=[o,o,o,(r=e[1])[0]],u=[a,a,a,r[1]],l=[o,",",a,"L",tu(ou,i),",",tu(ou,u)];for(e.push(e[n-1]);++t<=n;)r=e[t],i.shift(),i.push(r[0]),u.shift(),u.push(r[1]),au(l,i,u);return e.pop(),l.push("L",r),l.join("")}function tu(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}Yi.forEach(function(e,t){t.key=e,t.closed=/-closed$/.test(e)});var nu=[0,2/3,1/3,0],ru=[0,1/3,2/3,0],ou=[0,1/6,2/3,1/6];function au(e,t,n){e.push("C",tu(nu,t),",",tu(nu,n),",",tu(ru,t),",",tu(ru,n),",",tu(ou,t),",",tu(ou,n))}function iu(e,t){return(t[1]-e[1])/(t[0]-e[0])}function uu(e){for(var t,n,r,o=-1,a=e.length;++o<a;)n=(t=e[o])[0],r=t[1]-Ae,t[0]=n*Math.cos(r),t[1]=n*Math.sin(r);return e}function lu(e){var t=uo,n=uo,r=0,o=lo,a=Zn,i=Ki,u=i.key,l=i,s="L",c=.7;function f(u){var f,p,d,h=[],y=[],v=[],m=-1,g=u.length,b=wt(t),w=wt(r),x=t===n?function(){return p}:wt(n),_=r===o?function(){return d}:wt(o);function E(){h.push("M",i(e(v),c),s,l(e(y.reverse()),c),"Z")}for(;++m<g;)a.call(this,f=u[m],m)?(y.push([p=+b.call(this,f,m),d=+w.call(this,f,m)]),v.push([+x.call(this,f,m),+_.call(this,f,m)])):y.length&&(E(),y=[],v=[]);return y.length&&E(),h.length?h.join(""):null}return f.x=function(e){return arguments.length?(t=n=e,f):n},f.x0=function(e){return arguments.length?(t=e,f):t},f.x1=function(e){return arguments.length?(n=e,f):n},f.y=function(e){return arguments.length?(r=o=e,f):o},f.y0=function(e){return arguments.length?(r=e,f):r},f.y1=function(e){return arguments.length?(o=e,f):o},f.defined=function(e){return arguments.length?(a=e,f):a},f.interpolate=function(e){return arguments.length?(u="function"==typeof e?i=e:(i=Yi.get(e)||Ki).key,l=i.reverse||i,s=i.closed?"M":"L",f):u},f.tension=function(e){return arguments.length?(c=e,f):c},f}function su(e){return e.radius}function cu(e){return[e.x,e.y]}function fu(){return 64}function pu(){return"circle"}function du(e){var t=Math.sqrt(e/Te);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}a.svg.line.radial=function(){var e=$i(uu);return e.radius=e.x,delete e.x,e.angle=e.y,delete e.y,e},Ji.reverse=Qi,Qi.reverse=Ji,a.svg.area=function(){return lu(D)},a.svg.area.radial=function(){var e=lu(uu);return e.radius=e.x,delete e.x,e.innerRadius=e.x0,delete e.x0,e.outerRadius=e.x1,delete e.x1,e.angle=e.y,delete e.y,e.startAngle=e.y0,delete e.y0,e.endAngle=e.y1,delete e.y1,e},a.svg.chord=function(){var e=Yr,t=Kr,n=su,r=Bi,o=qi;function a(n,r){var o,a,s=i(this,e,n,r),c=i(this,t,n,r);return"M"+s.p0+u(s.r,s.p1,s.a1-s.a0)+(a=c,(o=s).a0==a.a0&&o.a1==a.a1?l(s.r,s.p1,s.r,s.p0):l(s.r,s.p1,c.r,c.p0)+u(c.r,c.p1,c.a1-c.a0)+l(c.r,c.p1,s.r,s.p0))+"Z"}function i(e,t,a,i){var u=t.call(e,a,i),l=n.call(e,u,i),s=r.call(e,u,i)-Ae,c=o.call(e,u,i)-Ae;return{r:l,a0:s,a1:c,p0:[l*Math.cos(s),l*Math.sin(s)],p1:[l*Math.cos(c),l*Math.sin(c)]}}function u(e,t,n){return"A"+e+","+e+" 0 "+ +(n>Te)+",1 "+t}function l(e,t,n,r){return"Q 0,0 "+r}return a.radius=function(e){return arguments.length?(n=wt(e),a):n},a.source=function(t){return arguments.length?(e=wt(t),a):e},a.target=function(e){return arguments.length?(t=wt(e),a):t},a.startAngle=function(e){return arguments.length?(r=wt(e),a):r},a.endAngle=function(e){return arguments.length?(o=wt(e),a):o},a},a.svg.diagonal=function(){var e=Yr,t=Kr,n=cu;function r(r,o){var a=e.call(this,r,o),i=t.call(this,r,o),u=(a.y+i.y)/2,l=[a,{x:a.x,y:u},{x:i.x,y:u},i];return"M"+(l=l.map(n))[0]+"C"+l[1]+" "+l[2]+" "+l[3]}return r.source=function(t){return arguments.length?(e=wt(t),r):e},r.target=function(e){return arguments.length?(t=wt(e),r):t},r.projection=function(e){return arguments.length?(n=e,r):n},r},a.svg.diagonal.radial=function(){var e=a.svg.diagonal(),t=cu,n=e.projection;return e.projection=function(e){return arguments.length?n(function(e){return function(){var t=e.apply(this,arguments),n=t[0],r=t[1]-Ae;return[n*Math.cos(r),n*Math.sin(r)]}}(t=e)):t},e},a.svg.symbol=function(){var e=pu,t=fu;function n(n,r){return(hu.get(e.call(this,n,r))||du)(t.call(this,n,r))}return n.type=function(t){return arguments.length?(e=wt(t),n):e},n.size=function(e){return arguments.length?(t=wt(e),n):t},n};var hu=a.map({circle:du,cross:function(e){var t=Math.sqrt(e/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(e){var t=Math.sqrt(e/(2*vu)),n=t*vu;return"M0,"+-t+"L"+n+",0 0,"+t+" "+-n+",0Z"},square:function(e){var t=Math.sqrt(e)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(e){var t=Math.sqrt(e/yu),n=t*yu/2;return"M0,"+n+"L"+t+","+-n+" "+-t+","+-n+"Z"},"triangle-up":function(e){var t=Math.sqrt(e/yu),n=t*yu/2;return"M0,"+-n+"L"+t+","+n+" "+-t+","+n+"Z"}});a.svg.symbolTypes=hu.keys();var yu=Math.sqrt(3),vu=Math.tan(30*Ne);Q.transition=function(e){for(var t,n,r=wu||++Eu,o=Cu(e),a=[],i=xu||{time:Date.now(),ease:fa,delay:0,duration:250},u=-1,l=this.length;++u<l;){a.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(n=s[c])&&Ou(n,c,o,r,i),t.push(n)}return bu(a,o,r)},Q.interrupt=function(e){return this.each(null==e?mu:gu(Cu(e)))};var mu=gu(Cu());function gu(e){return function(){var t,n,r;(t=this[e])&&(r=t[n=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[n]:delete this[e],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function bu(e,t,n){return $(e,_u),e.namespace=t,e.id=n,e}var wu,xu,_u=[],Eu=0;function ku(e,t,n,r){var o=e.id,a=e.namespace;return he(e,"function"==typeof n?function(e,i,u){e[a][o].tween.set(t,r(n.call(e,e.__data__,i,u)))}:(n=r(n),function(e){e[a][o].tween.set(t,n)}))}function Su(e){return null==e&&(e=""),function(){this.textContent=e}}function Cu(e){return null==e?"__transition__":"__transition_"+e+"__"}function Ou(e,t,n,r,o){var a,i,u,l,s,c=e[n]||(e[n]={active:0,count:0}),f=c[r];function p(n){var o=c.active,p=c[o];for(var h in p&&(p.timer.c=null,p.timer.t=NaN,--c.count,delete c[o],p.event&&p.event.interrupt.call(e,e.__data__,p.index)),c)if(+h<r){var y=c[h];y.timer.c=null,y.timer.t=NaN,--c.count,delete c[h]}i.c=d,Mt(function(){return i.c&&d(n||1)&&(i.c=null,i.t=NaN),1},0,a),c.active=r,f.event&&f.event.start.call(e,e.__data__,t),s=[],f.tween.forEach(function(n,r){(r=r.call(e,e.__data__,t))&&s.push(r)}),l=f.ease,u=f.duration}function d(o){for(var a=o/u,i=l(a),p=s.length;p>0;)s[--p].call(e,i);if(a>=1)return f.event&&f.event.end.call(e,e.__data__,t),--c.count?delete c[r]:delete e[n],1}f||(a=o.time,i=Mt(function(e){var t=f.delay;if(i.t=t+a,t<=e)return p(e-t);i.c=p},0,a),f=c[r]={tween:new k,time:a,timer:i,delay:o.delay,duration:o.duration,ease:o.ease,index:t},o=null,++c.count)}_u.call=Q.call,_u.empty=Q.empty,_u.node=Q.node,_u.size=Q.size,a.transition=function(e,t){return e&&e.transition?wu?e.transition(t):e:a.selection().transition(e)},a.transition.prototype=_u,_u.select=function(e){var t,n,r,o=this.id,a=this.namespace,i=[];e=X(e);for(var u=-1,l=this.length;++u<l;){i.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(r=s[c])&&(n=e.call(r,r.__data__,c,u))?("__data__"in r&&(n.__data__=r.__data__),Ou(n,c,a,o,r[a][o]),t.push(n)):t.push(null)}return bu(i,a,o)},_u.selectAll=function(e){var t,n,r,o,a,i=this.id,u=this.namespace,l=[];e=Z(e);for(var s=-1,c=this.length;++s<c;)for(var f=this[s],p=-1,d=f.length;++p<d;)if(r=f[p]){a=r[u][i],n=e.call(r,r.__data__,p,s),l.push(t=[]);for(var h=-1,y=n.length;++h<y;)(o=n[h])&&Ou(o,h,u,i,a),t.push(o)}return bu(l,u,i)},_u.filter=function(e){var t,n,r=[];"function"!=typeof e&&(e=de(e));for(var o=0,a=this.length;o<a;o++){r.push(t=[]);for(var i,u=0,l=(i=this[o]).length;u<l;u++)(n=i[u])&&e.call(n,n.__data__,u,o)&&t.push(n)}return bu(r,this.namespace,this.id)},_u.tween=function(e,t){var n=this.id,r=this.namespace;return arguments.length<2?this.node()[r][n].tween.get(e):he(this,null==t?function(t){t[r][n].tween.remove(e)}:function(o){o[r][n].tween.set(e,t)})},_u.attr=function(e,t){if(arguments.length<2){for(t in e)this.attr(t,e[t]);return this}var n="transform"==e?_a:na,r=a.ns.qualify(e);function o(){this.removeAttribute(r)}function i(){this.removeAttributeNS(r.space,r.local)}return ku(this,"attr."+e,t,r.local?function(e){return null==e?i:(e+="",function(){var t,o=this.getAttributeNS(r.space,r.local);return o!==e&&(t=n(o,e),function(e){this.setAttributeNS(r.space,r.local,t(e))})})}:function(e){return null==e?o:(e+="",function(){var t,o=this.getAttribute(r);return o!==e&&(t=n(o,e),function(e){this.setAttribute(r,t(e))})})})},_u.attrTween=function(e,t){var n=a.ns.qualify(e);return this.tween("attr."+e,n.local?function(e,r){var o=t.call(this,e,r,this.getAttributeNS(n.space,n.local));return o&&function(e){this.setAttributeNS(n.space,n.local,o(e))}}:function(e,r){var o=t.call(this,e,r,this.getAttribute(n));return o&&function(e){this.setAttribute(n,o(e))}})},_u.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.style(n,e[n],t);return this}n=""}function o(){this.style.removeProperty(e)}return ku(this,"style."+e,t,function(t){return null==t?o:(t+="",function(){var r,o=c(this).getComputedStyle(this,null).getPropertyValue(e);return o!==t&&(r=na(o,t),function(t){this.style.setProperty(e,r(t),n)})})})},_u.styleTween=function(e,t,n){return arguments.length<3&&(n=""),this.tween("style."+e,function(r,o){var a=t.call(this,r,o,c(this).getComputedStyle(this,null).getPropertyValue(e));return a&&function(t){this.style.setProperty(e,a(t),n)}})},_u.text=function(e){return ku(this,"text",e,Su)},_u.remove=function(){var e=this.namespace;return this.each("end.transition",function(){var t;this[e].count<2&&(t=this.parentNode)&&t.removeChild(this)})},_u.ease=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].ease:("function"!=typeof e&&(e=a.ease.apply(a,arguments)),he(this,function(r){r[n][t].ease=e}))},_u.delay=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].delay:he(this,"function"==typeof e?function(r,o,a){r[n][t].delay=+e.call(r,r.__data__,o,a)}:(e=+e,function(r){r[n][t].delay=e}))},_u.duration=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].duration:he(this,"function"==typeof e?function(r,o,a){r[n][t].duration=Math.max(1,e.call(r,r.__data__,o,a))}:(e=Math.max(1,e),function(r){r[n][t].duration=e}))},_u.each=function(e,t){var n=this.id,r=this.namespace;if(arguments.length<2){var o=xu,i=wu;try{wu=n,he(this,function(t,o,a){xu=t[r][n],e.call(t,t.__data__,o,a)})}finally{xu=o,wu=i}}else he(this,function(o){var i=o[r][n];(i.event||(i.event=a.dispatch("start","end","interrupt"))).on(e,t)});return this},_u.transition=function(){for(var e,t,n,r=this.id,o=++Eu,a=this.namespace,i=[],u=0,l=this.length;u<l;u++){i.push(e=[]);for(var s,c=0,f=(s=this[u]).length;c<f;c++)(t=s[c])&&Ou(t,c,a,o,{time:(n=t[a][r]).time,ease:n.ease,delay:n.delay+n.duration,duration:n.duration}),e.push(t)}return bu(i,a,o)},a.svg.axis=function(){var e,t=a.scale.linear(),n=Mu,r=6,o=6,i=3,l=[10],s=null;function c(u){u.each(function(){var u,c=a.select(this),f=this.__chart__||t,p=this.__chart__=t.copy(),d=null==s?p.ticks?p.ticks.apply(p,l):p.domain():s,h=null==e?p.tickFormat?p.tickFormat.apply(p,l):D:e,y=c.selectAll(".tick").data(d,p),v=y.enter().insert("g",".domain").attr("class","tick").style("opacity",Oe),m=a.transition(y.exit()).style("opacity",Oe).remove(),g=a.transition(y.order()).style("opacity",1),b=Math.max(r,0)+i,w=mi(p),x=c.selectAll(".domain").data([0]),_=(x.enter().append("path").attr("class","domain"),a.transition(x));v.append("line"),v.append("text");var E,k,S,C,O=v.select("line"),M=g.select("line"),T=y.select("text").text(h),j=v.select("text"),P=g.select("text"),A="top"===n||"left"===n?-1:1;if("bottom"===n||"top"===n?(u=ju,E="x",S="y",k="x2",C="y2",T.attr("dy",A<0?"0em":".71em").style("text-anchor","middle"),_.attr("d","M"+w[0]+","+A*o+"V0H"+w[1]+"V"+A*o)):(u=Pu,E="y",S="x",k="y2",C="x2",T.attr("dy",".32em").style("text-anchor",A<0?"end":"start"),_.attr("d","M"+A*o+","+w[0]+"H0V"+w[1]+"H"+A*o)),O.attr(C,A*r),j.attr(S,A*b),M.attr(k,0).attr(C,A*r),P.attr(E,0).attr(S,A*b),p.rangeBand){var N=p,R=N.rangeBand()/2;f=p=function(e){return N(e)+R}}else f.rangeBand?f=p:m.call(u,p,f);v.call(u,f,p),g.call(u,p,p)})}return c.scale=function(e){return arguments.length?(t=e,c):t},c.orient=function(e){return arguments.length?(n=e in Tu?e+"":Mu,c):n},c.ticks=function(){return arguments.length?(l=u(arguments),c):l},c.tickValues=function(e){return arguments.length?(s=e,c):s},c.tickFormat=function(t){return arguments.length?(e=t,c):e},c.tickSize=function(e){var t=arguments.length;return t?(r=+e,o=+arguments[t-1],c):r},c.innerTickSize=function(e){return arguments.length?(r=+e,c):r},c.outerTickSize=function(e){return arguments.length?(o=+e,c):o},c.tickPadding=function(e){return arguments.length?(i=+e,c):i},c.tickSubdivide=function(){return arguments.length&&c},c};var Mu="bottom",Tu={top:1,right:1,bottom:1,left:1};function ju(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"})}function Pu(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"})}a.svg.brush=function(){var e,t,n=W(p,"brushstart","brush","brushend"),r=null,o=null,i=[0,0],u=[0,0],l=!0,s=!0,f=Nu[0];function p(e){e.each(function(){var e=a.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",v).on("touchstart.brush",v),t=e.selectAll(".background").data([0]);t.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),e.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var n=e.selectAll(".resize").data(f,D);n.exit().remove(),n.enter().append("g").attr("class",function(e){return"resize "+e}).style("cursor",function(e){return Au[e]}).append("rect").attr("x",function(e){return/[ew]$/.test(e)?-3:null}).attr("y",function(e){return/^[ns]/.test(e)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),n.style("display",p.empty()?"none":null);var i,u=a.transition(e),l=a.transition(t);r&&(i=mi(r),l.attr("x",i[0]).attr("width",i[1]-i[0]),h(u)),o&&(i=mi(o),l.attr("y",i[0]).attr("height",i[1]-i[0]),y(u)),d(u)})}function d(e){e.selectAll(".resize").attr("transform",function(e){return"translate("+i[+/e$/.test(e)]+","+u[+/^s/.test(e)]+")"})}function h(e){e.select(".extent").attr("x",i[0]),e.selectAll(".extent,.n>rect,.s>rect").attr("width",i[1]-i[0])}function y(e){e.select(".extent").attr("y",u[0]),e.selectAll(".extent,.e>rect,.w>rect").attr("height",u[1]-u[0])}function v(){var f,v,m=this,g=a.select(a.event.target),b=n.of(m,arguments),w=a.select(m),x=g.datum(),_=!/^(n|s)$/.test(x)&&r,E=!/^(e|w)$/.test(x)&&o,k=g.classed("extent"),S=Ee(m),C=a.mouse(m),O=a.select(c(m)).on("keydown.brush",function(){32==a.event.keyCode&&(k||(f=null,C[0]-=i[1],C[1]-=u[1],k=2),q())}).on("keyup.brush",function(){32==a.event.keyCode&&2==k&&(C[0]+=i[1],C[1]+=u[1],k=0,q())});if(a.event.changedTouches?O.on("touchmove.brush",j).on("touchend.brush",A):O.on("mousemove.brush",j).on("mouseup.brush",A),w.interrupt().selectAll("*").interrupt(),k)C[0]=i[0]-C[0],C[1]=u[0]-C[1];else if(x){var M=+/w$/.test(x),T=+/^n/.test(x);v=[i[1-M]-C[0],u[1-T]-C[1]],C[0]=i[M],C[1]=u[T]}else a.event.altKey&&(f=C.slice());function j(){var e=a.mouse(m),t=!1;v&&(e[0]+=v[0],e[1]+=v[1]),k||(a.event.altKey?(f||(f=[(i[0]+i[1])/2,(u[0]+u[1])/2]),C[0]=i[+(e[0]<f[0])],C[1]=u[+(e[1]<f[1])]):f=null),_&&P(e,r,0)&&(h(w),t=!0),E&&P(e,o,1)&&(y(w),t=!0),t&&(d(w),b({type:"brush",mode:k?"move":"resize"}))}function P(n,r,o){var a,c,p=mi(r),d=p[0],h=p[1],y=C[o],v=o?u:i,m=v[1]-v[0];if(k&&(d-=y,h-=m+y),a=(o?s:l)?Math.max(d,Math.min(h,n[o])):n[o],k?c=(a+=y)+m:(f&&(y=Math.max(d,Math.min(h,2*f[o]-a))),y<a?(c=a,a=y):c=y),v[0]!=a||v[1]!=c)return o?t=null:e=null,v[0]=a,v[1]=c,!0}function A(){j(),w.style("pointer-events","all").selectAll(".resize").style("display",p.empty()?"none":null),a.select("body").style("cursor",null),O.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),S(),b({type:"brushend"})}w.style("pointer-events","none").selectAll(".resize").style("display",null),a.select("body").style("cursor",g.style("cursor")),b({type:"brushstart"}),j()}return p.event=function(r){r.each(function(){var r=n.of(this,arguments),o={x:i,y:u,i:e,j:t},l=this.__chart__||o;this.__chart__=o,wu?a.select(this).transition().each("start.brush",function(){e=l.i,t=l.j,i=l.x,u=l.y,r({type:"brushstart"})}).tween("brush:brush",function(){var n=ra(i,o.x),a=ra(u,o.y);return e=t=null,function(e){i=o.x=n(e),u=o.y=a(e),r({type:"brush",mode:"resize"})}}).each("end.brush",function(){e=o.i,t=o.j,r({type:"brush",mode:"resize"}),r({type:"brushend"})}):(r({type:"brushstart"}),r({type:"brush",mode:"resize"}),r({type:"brushend"}))})},p.x=function(e){return arguments.length?(f=Nu[!(r=e)<<1|!o],p):r},p.y=function(e){return arguments.length?(f=Nu[!r<<1|!(o=e)],p):o},p.clamp=function(e){return arguments.length?(r&&o?(l=!!e[0],s=!!e[1]):r?l=!!e:o&&(s=!!e),p):r&&o?[l,s]:r?l:o?s:null},p.extent=function(n){var a,l,s,c,f;return arguments.length?(r&&(a=n[0],l=n[1],o&&(a=a[0],l=l[0]),e=[a,l],r.invert&&(a=r(a),l=r(l)),l<a&&(f=a,a=l,l=f),a==i[0]&&l==i[1]||(i=[a,l])),o&&(s=n[0],c=n[1],r&&(s=s[1],c=c[1]),t=[s,c],o.invert&&(s=o(s),c=o(c)),c<s&&(f=s,s=c,c=f),s==u[0]&&c==u[1]||(u=[s,c])),p):(r&&(e?(a=e[0],l=e[1]):(a=i[0],l=i[1],r.invert&&(a=r.invert(a),l=r.invert(l)),l<a&&(f=a,a=l,l=f))),o&&(t?(s=t[0],c=t[1]):(s=u[0],c=u[1],o.invert&&(s=o.invert(s),c=o.invert(c)),c<s&&(f=s,s=c,c=f))),r&&o?[[a,s],[l,c]]:r?[a,l]:o&&[s,c])},p.clear=function(){return p.empty()||(i=[0,0],u=[0,0],e=t=null),p},p.empty=function(){return!!r&&i[0]==i[1]||!!o&&u[0]==u[1]},a.rebind(p,n,"on")};var Au={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Nu=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Ru=zt.format=hn.timeFormat,Du=Ru.utc,Iu=Du("%Y-%m-%dT%H:%M:%S.%LZ");function Lu(e){return e.toISOString()}function zu(e,t,n){function r(t){return e(t)}function o(e,n){var r=(e[1]-e[0])/n,o=a.bisect(Uu,r);return o==Uu.length?[t.year,Si(e.map(function(e){return e/31536e6}),n)[2]]:o?t[r/Uu[o-1]<Uu[o]/r?o-1:o]:[Vu,Si(e,n)[2]]}return r.invert=function(t){return Fu(e.invert(t))},r.domain=function(t){return arguments.length?(e.domain(t),r):e.domain().map(Fu)},r.nice=function(e,t){var n=r.domain(),a=vi(n),i=null==e?o(a,10):"number"==typeof e&&o(a,e);function u(n){return!isNaN(n)&&!e.range(n,Fu(+n+1),t).length}return i&&(e=i[0],t=i[1]),r.domain(bi(n,t>1?{floor:function(t){for(;u(t=e.floor(t));)t=Fu(t-1);return t},ceil:function(t){for(;u(t=e.ceil(t));)t=Fu(+t+1);return t}}:e))},r.ticks=function(e,t){var n=vi(r.domain()),a=null==e?o(n,10):"number"==typeof e?o(n,e):!e.range&&[{range:e},t];return a&&(e=a[0],t=a[1]),e.range(n[0],Fu(+n[1]+1),t<1?1:t)},r.tickFormat=function(){return n},r.copy=function(){return zu(e.copy(),t,n)},Ei(r,e)}function Fu(e){return new Date(e)}Ru.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Lu:Iu,Lu.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Lu.toString=Iu.toString,zt.second=qt(function(e){return new Ft(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(e.getTime()+1e3*Math.floor(t))},function(e){return e.getSeconds()}),zt.seconds=zt.second.range,zt.seconds.utc=zt.second.utc.range,zt.minute=qt(function(e){return new Ft(6e4*Math.floor(e/6e4))},function(e,t){e.setTime(e.getTime()+6e4*Math.floor(t))},function(e){return e.getMinutes()}),zt.minutes=zt.minute.range,zt.minutes.utc=zt.minute.utc.range,zt.hour=qt(function(e){var t=e.getTimezoneOffset()/60;return new Ft(36e5*(Math.floor(e/36e5-t)+t))},function(e,t){e.setTime(e.getTime()+36e5*Math.floor(t))},function(e){return e.getHours()}),zt.hours=zt.hour.range,zt.hours.utc=zt.hour.utc.range,zt.month=qt(function(e){return(e=zt.day(e)).setDate(1),e},function(e,t){e.setMonth(e.getMonth()+t)},function(e){return e.getMonth()}),zt.months=zt.month.range,zt.months.utc=zt.month.utc.range;var Uu=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Bu=[[zt.second,1],[zt.second,5],[zt.second,15],[zt.second,30],[zt.minute,1],[zt.minute,5],[zt.minute,15],[zt.minute,30],[zt.hour,1],[zt.hour,3],[zt.hour,6],[zt.hour,12],[zt.day,1],[zt.day,2],[zt.week,1],[zt.month,1],[zt.month,3],[zt.year,1]],qu=Ru.multi([[".%L",function(e){return e.getMilliseconds()}],[":%S",function(e){return e.getSeconds()}],["%I:%M",function(e){return e.getMinutes()}],["%I %p",function(e){return e.getHours()}],["%a %d",function(e){return e.getDay()&&1!=e.getDate()}],["%b %d",function(e){return 1!=e.getDate()}],["%B",function(e){return e.getMonth()}],["%Y",Zn]]),Vu={range:function(e,t,n){return a.range(Math.ceil(e/n)*n,+t,n).map(Fu)},floor:D,ceil:D};Bu.year=zt.year,zt.scale=function(){return zu(a.scale.linear(),Bu,qu)};var Wu=Bu.map(function(e){return[e[0].utc,e[1]]}),Hu=Du.multi([[".%L",function(e){return e.getUTCMilliseconds()}],[":%S",function(e){return e.getUTCSeconds()}],["%I:%M",function(e){return e.getUTCMinutes()}],["%I %p",function(e){return e.getUTCHours()}],["%a %d",function(e){return e.getUTCDay()&&1!=e.getUTCDate()}],["%b %d",function(e){return 1!=e.getUTCDate()}],["%B",function(e){return e.getUTCMonth()}],["%Y",Zn]]);function $u(e){return JSON.parse(e.responseText)}function Yu(e){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(e.responseText)}Wu.year=zt.year.utc,zt.scale.utc=function(){return zu(a.scale.linear(),Wu,Hu)},a.text=xt(function(e){return e.responseText}),a.json=function(e,t){return _t(e,"application/json",$u,t)},a.html=function(e,t){return _t(e,"text/html",Yu,t)},a.xml=xt(function(e){return e.responseXML}),this.d3=a,void 0===(o="function"==typeof(r=a)?r.call(t,n,t,e):r)||(e.exports=o)}()},function(e,t,n){var r=n(29),o=n(30),a=o;a.v1=r,a.v4=o,e.exports=a},function(e,t,n){var r,o,a=n(11),i=n(12),u=0,l=0;e.exports=function(e,t,n){var s=t&&n||0,c=t||[],f=(e=e||{}).node||r,p=void 0!==e.clockseq?e.clockseq:o;if(null==f||null==p){var d=a();null==f&&(f=r=[1|d[0],d[1],d[2],d[3],d[4],d[5]]),null==p&&(p=o=16383&(d[6]<<8|d[7]))}var h=void 0!==e.msecs?e.msecs:(new Date).getTime(),y=void 0!==e.nsecs?e.nsecs:l+1,v=h-u+(y-l)/1e4;if(v<0&&void 0===e.clockseq&&(p=p+1&16383),(v<0||h>u)&&void 0===e.nsecs&&(y=0),y>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");u=h,l=y,o=p;var m=(1e4*(268435455&(h+=122192928e5))+y)%4294967296;c[s++]=m>>>24&255,c[s++]=m>>>16&255,c[s++]=m>>>8&255,c[s++]=255&m;var g=h/4294967296*1e4&268435455;c[s++]=g>>>8&255,c[s++]=255&g,c[s++]=g>>>24&15|16,c[s++]=g>>>16&255,c[s++]=p>>>8|128,c[s++]=255&p;for(var b=0;b<6;++b)c[s+b]=f[b];return t||i(c)}},function(e,t,n){var r=n(11),o=n(12);e.exports=function(e,t,n){var a=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var i=(e=e||{}).random||(e.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t)for(var u=0;u<16;++u)t[a+u]=i[u];return t||o(i)}},function(e,t,n){(function(t){var n=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var n,r,o;try{n=Map}catch(e){n=function(){}}try{r=Set}catch(e){r=function(){}}try{o=Promise}catch(e){o=function(){}}function a(i,l,s,c,f){"object"==typeof l&&(s=l.depth,c=l.prototype,f=l.includeNonEnumerable,l=l.circular);var p=[],d=[],h=void 0!==t;return void 0===l&&(l=!0),void 0===s&&(s=1/0),function i(s,y){if(null===s)return null;if(0===y)return s;var v,m;if("object"!=typeof s)return s;if(e(s,n))v=new n;else if(e(s,r))v=new r;else if(e(s,o))v=new o(function(e,t){s.then(function(t){e(i(t,y-1))},function(e){t(i(e,y-1))})});else if(a.__isArray(s))v=[];else if(a.__isRegExp(s))v=new RegExp(s.source,u(s)),s.lastIndex&&(v.lastIndex=s.lastIndex);else if(a.__isDate(s))v=new Date(s.getTime());else{if(h&&t.isBuffer(s))return v=t.allocUnsafe?t.allocUnsafe(s.length):new t(s.length),s.copy(v),v;e(s,Error)?v=Object.create(s):void 0===c?(m=Object.getPrototypeOf(s),v=Object.create(m)):(v=Object.create(c),m=c)}if(l){var g=p.indexOf(s);if(-1!=g)return d[g];p.push(s),d.push(v)}for(var b in e(s,n)&&s.forEach(function(e,t){var n=i(t,y-1),r=i(e,y-1);v.set(n,r)}),e(s,r)&&s.forEach(function(e){var t=i(e,y-1);v.add(t)}),s){var w;m&&(w=Object.getOwnPropertyDescriptor(m,b)),w&&null==w.set||(v[b]=i(s[b],y-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(s);for(b=0;b<x.length;b++){var _=x[b];(!(k=Object.getOwnPropertyDescriptor(s,_))||k.enumerable||f)&&(v[_]=i(s[_],y-1),k.enumerable||Object.defineProperty(v,_,{enumerable:!1}))}}if(f){var E=Object.getOwnPropertyNames(s);for(b=0;b<E.length;b++){var k,S=E[b];(k=Object.getOwnPropertyDescriptor(s,S))&&k.enumerable||(v[S]=i(s[S],y-1),Object.defineProperty(v,S,{enumerable:!1}))}}return v}(i,s)}function i(e){return Object.prototype.toString.call(e)}function u(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return a.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},a.__objToStr=i,a.__isDate=function(e){return"object"==typeof e&&"[object Date]"===i(e)},a.__isArray=function(e){return"object"==typeof e&&"[object Array]"===i(e)},a.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===i(e)},a.__getRegExpFlags=u,a}();e.exports&&(e.exports=n)}).call(this,n(32).Buffer)},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var r=n(33),o=n(34),a=n(35);function i(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=l.prototype:(null===e&&(e=new l(t)),e.length=t),e}function l(e,t,n){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return f(this,e)}return s(this,e,t,n)}function s(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);l.TYPED_ARRAY_SUPPORT?(e=t).__proto__=l.prototype:e=p(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|h(t,n),o=(e=u(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(l.isBuffer(t)){var n=0|d(t.length);return 0===(e=u(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?u(e,0):p(e,t);if("Buffer"===t.type&&a(t.data))return p(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function f(e,t){if(c(t),e=u(e,t<0?0:0|d(t)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|d(t.length);e=u(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function d(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function h(e,t){if(l.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return U(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return B(e).length;default:if(r)return U(e).length;t=(""+t).toLowerCase(),r=!0}}function y(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:m(e,t,n,r,o);if("number"==typeof t)return t&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):m(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function m(e,t,n,r,o){var a,i=1,u=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,u/=2,l/=2,n/=2}function s(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){var c=-1;for(a=n;a<u;a++)if(s(e,a)===s(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===l)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+l>u&&(n=u-l),a=n;a>=0;a--){for(var f=!0,p=0;p<l;p++)if(s(e,a+p)!==s(t,p)){f=!1;break}if(f)return a}return-1}function g(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var a=t.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var i=0;i<r;++i){var u=parseInt(t.substr(2*i,2),16);if(isNaN(u))return i;e[n+i]=u}return i}function b(e,t,n,r){return q(U(t,e.length-n),e,n,r)}function w(e,t,n,r){return q(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function x(e,t,n,r){return w(e,t,n,r)}function _(e,t,n,r){return q(B(t),e,n,r)}function E(e,t,n,r){return q(function(e,t){for(var n,r,o,a=[],i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,o=n%256,a.push(o),a.push(r);return a}(t,e.length-n),e,n,r)}function k(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function S(e,t,n){n=Math.min(e.length,n);for(var r=[],o=t;o<n;){var a,i,u,l,s=e[o],c=null,f=s>239?4:s>223?3:s>191?2:1;if(o+f<=n)switch(f){case 1:s<128&&(c=s);break;case 2:128==(192&(a=e[o+1]))&&(l=(31&s)<<6|63&a)>127&&(c=l);break;case 3:a=e[o+1],i=e[o+2],128==(192&a)&&128==(192&i)&&(l=(15&s)<<12|(63&a)<<6|63&i)>2047&&(l<55296||l>57343)&&(c=l);break;case 4:a=e[o+1],i=e[o+2],u=e[o+3],128==(192&a)&&128==(192&i)&&128==(192&u)&&(l=(15&s)<<18|(63&a)<<12|(63&i)<<6|63&u)>65535&&l<1114112&&(c=l)}null===c?(c=65533,f=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),o+=f}return function(e){var t=e.length;if(t<=C)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=C));return n}(r)}t.Buffer=l,t.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},t.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=i(),l.poolSize=8192,l._augment=function(e){return e.__proto__=l.prototype,e},l.from=function(e,t,n){return s(null,e,t,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(e,t,n){return function(e,t,n,r){return c(t),t<=0?u(e,t):void 0!==n?"string"==typeof r?u(e,t).fill(n,r):u(e,t).fill(n):u(e,t)}(null,e,t,n)},l.allocUnsafe=function(e){return f(null,e)},l.allocUnsafeSlow=function(e){return f(null,e)},l.isBuffer=function(e){return!(null==e||!e._isBuffer)},l.compare=function(e,t){if(!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,o=0,a=Math.min(n,r);o<a;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!a(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=l.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var i=e[n];if(!l.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,o),o+=i.length}return r},l.byteLength=h,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},l.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},l.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},l.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?S(this,0,e):function(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return T(this,t,n);case"utf8":case"utf-8":return S(this,t,n);case"ascii":return O(this,t,n);case"latin1":case"binary":return M(this,t,n);case"base64":return k(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return j(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}.apply(this,arguments)},l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},l.prototype.compare=function(e,t,n,r,o){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),u=Math.min(a,i),s=this.slice(r,o),c=e.slice(t,n),f=0;f<u;++f)if(s[f]!==c[f]){a=s[f],i=c[f];break}return a<i?-1:i<a?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return g(this,e,t,n);case"utf8":case"utf-8":return b(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return x(this,e,t,n);case"base64":return _(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var C=4096;function O(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function M(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function T(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",a=t;a<n;++a)o+=F(e[a]);return o}function j(e,t,n){for(var r=e.slice(t,n),o="",a=0;a<r.length;a+=2)o+=String.fromCharCode(r[a]+256*r[a+1]);return o}function P(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function A(e,t,n,r,o,a){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function N(e,t,n,r){t<0&&(t=65535+t+1);for(var o=0,a=Math.min(e.length-n,2);o<a;++o)e[n+o]=(t&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function R(e,t,n,r){t<0&&(t=4294967295+t+1);for(var o=0,a=Math.min(e.length-n,4);o<a;++o)e[n+o]=t>>>8*(r?o:3-o)&255}function D(e,t,n,r,o,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function I(e,t,n,r,a){return a||D(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,a){return a||D(e,0,n,8),o.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),l.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=l.prototype;else{var o=t-e;n=new l(o,void 0);for(var a=0;a<o;++a)n[a]=this[a+e]}return n},l.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,a=0;++a<t&&(o*=256);)r+=this[e+a]*o;return r},l.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},l.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},l.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,a=0;++a<t&&(o*=256);)r+=this[e+a]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=t,o=1,a=this[e+--r];r>0&&(o*=256);)a+=this[e+--r]*o;return a>=(o*=128)&&(a-=Math.pow(2,8*t)),a},l.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!1,52,8)},l.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,a=0;for(this[t]=255&e;++a<n&&(o*=256);)this[t+a]=e/o&255;return t+n},l.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=n-1,a=1;for(this[t+o]=255&e;--o>=0&&(a*=256);)this[t+o]=e/a&255;return t+n},l.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,255,0),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):R(this,e,t,!0),t+4},l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var a=0,i=1,u=0;for(this[t]=255&e;++a<n&&(i*=256);)e<0&&0===u&&0!==this[t+a-1]&&(u=1),this[t+a]=(e/i>>0)-u&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var a=n-1,i=1,u=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===u&&0!==this[t+a+1]&&(u=1),this[t+a]=(e/i>>0)-u&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,127,-128),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):R(this,e,t,!0),t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeFloatLE=function(e,t,n){return I(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return I(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o,a=r-n;if(this===e&&n<t&&t<r)for(o=a-1;o>=0;--o)e[o+t]=this[o+n];else if(a<1e3||!l.TYPED_ARRAY_SUPPORT)for(o=0;o<a;++o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+a),t);return a},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var i=l.isBuffer(e)?e:U(new l(e,r).toString()),u=i.length;for(a=0;a<n-t;++a)this[a+t]=i[a%u]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function F(e){return e<16?"0"+e.toString(16):e.toString(16)}function U(e,t){var n;t=t||1/0;for(var r=e.length,o=null,a=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&a.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function B(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(z,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function q(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}}).call(this,n(10))},function(e,t,n){"use strict";t.byteLength=function(e){var t=s(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){for(var t,n=s(e),r=n[0],i=n[1],u=new a(function(e,t,n){return 3*(t+n)/4-n}(0,r,i)),l=0,c=i>0?r-4:r,f=0;f<c;f+=4)t=o[e.charCodeAt(f)]<<18|o[e.charCodeAt(f+1)]<<12|o[e.charCodeAt(f+2)]<<6|o[e.charCodeAt(f+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===i&&(t=o[e.charCodeAt(f)]<<2|o[e.charCodeAt(f+1)]>>4,u[l++]=255&t);1===i&&(t=o[e.charCodeAt(f)]<<10|o[e.charCodeAt(f+1)]<<4|o[e.charCodeAt(f+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,a=[],i=0,u=n-o;i<u;i+=16383)a.push(c(e,i,i+16383>u?u:i+16383));1===o?(t=e[n-1],a.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],a.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return a.join("")};for(var r=[],o=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,l=i.length;u<l;++u)r[u]=i[u],o[i.charCodeAt(u)]=u;function s(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e,t,n){for(var o,a,i=[],u=t;u<n;u+=3)o=(e[u]<<16&16711680)+(e[u+1]<<8&65280)+(255&e[u+2]),i.push(r[(a=o)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return i.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,o){var a,i,u=8*o-r-1,l=(1<<u)-1,s=l>>1,c=-7,f=n?o-1:0,p=n?-1:1,d=e[t+f];for(f+=p,a=d&(1<<-c)-1,d>>=-c,c+=u;c>0;a=256*a+e[t+f],f+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+f],f+=p,c-=8);if(0===a)a=1-s;else{if(a===l)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=s}return(d?-1:1)*i*Math.pow(2,a-r)},t.write=function(e,t,n,r,o,a){var i,u,l,s=8*a-o-1,c=(1<<s)-1,f=c>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,h=r?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(u=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),(t+=i+f>=1?p/l:p*Math.pow(2,1-f))*l>=2&&(i++,l/=2),i+f>=c?(u=0,i=c):i+f>=1?(u=(t*l-1)*Math.pow(2,o),i+=f):(u=t*Math.pow(2,f-1)*Math.pow(2,o),i=0));o>=8;e[n+d]=255&u,d+=h,u/=256,o-=8);for(i=i<<o|u,s+=o;s>0;e[n+d]=255&i,d+=h,i/=256,s-=8);e[n+d-h]|=128*y}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){var r=Array.prototype.slice,o=n(37),a=n(38),i=e.exports=function(e,t,n){return n||(n={}),e===t||(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=typeof e&&"object"!=typeof t?n.strict?e===t:e==t:function(e,t,n){var s,c;if(u(e)||u(t))return!1;if(e.prototype!==t.prototype)return!1;if(a(e))return!!a(t)&&(e=r.call(e),t=r.call(t),i(e,t,n));if(l(e)){if(!l(t))return!1;if(e.length!==t.length)return!1;for(s=0;s<e.length;s++)if(e[s]!==t[s])return!1;return!0}try{var f=o(e),p=o(t)}catch(e){return!1}if(f.length!=p.length)return!1;for(f.sort(),p.sort(),s=f.length-1;s>=0;s--)if(f[s]!=p[s])return!1;for(s=f.length-1;s>=0;s--)if(c=f[s],!i(e[c],t[c],n))return!1;return typeof e==typeof t}(e,t,n))};function u(e){return null==e}function l(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}},function(e,t){function n(e){var t=[];for(var n in e)t.push(n);return t}(e.exports="function"==typeof Object.keys?Object.keys:n).shim=n},function(e,t){var n="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();function r(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function o(e){return e&&"object"==typeof e&&"number"==typeof e.length&&Object.prototype.hasOwnProperty.call(e,"callee")&&!Object.prototype.propertyIsEnumerable.call(e,"callee")||!1}(t=e.exports=n?r:o).supported=r,t.unsupported=o},function(e,t,n){"use strict";var r=a(n(40)),o=a(n(13));function a(e){return e&&e.__esModule?e:{default:e}}e.exports={TransitionGroup:o.default,CSSTransitionGroup:r.default}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(0)),a=s(n(2)),i=s(n(13)),u=s(n(44)),l=n(15);function s(e){return e&&e.__esModule?e:{default:e}}function c(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}l.nameShape.isRequired,a.default.bool,a.default.bool,a.default.bool,(0,l.transitionTimeout)("Appear"),(0,l.transitionTimeout)("Enter"),(0,l.transitionTimeout)("Leave");var f=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),l=0;l<a;l++)i[l]=arguments[l];return n=r=c(this,e.call.apply(e,[this].concat(i))),r._wrapChild=function(e){return o.default.createElement(u.default,{name:r.props.transitionName,appear:r.props.transitionAppear,enter:r.props.transitionEnter,leave:r.props.transitionLeave,appearTimeout:r.props.transitionAppearTimeout,enterTimeout:r.props.transitionEnterTimeout,leaveTimeout:r.props.transitionLeaveTimeout},e)},c(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){return o.default.createElement(i.default,r({},this.props,{childFactory:this._wrapChild}))},t}(o.default.Component);f.displayName="CSSTransitionGroup",f.propTypes={},f.defaultProps={transitionAppear:!1,transitionEnter:!0,transitionLeave:!0},t.default=f,e.exports=t.default},function(e,t){e.exports=function(){for(var e=arguments.length,t=[],n=0;n<e;n++)t[n]=arguments[n];if(0!==(t=t.filter(function(e){return null!=e})).length)return 1===t.length?t[0]:t.reduce(function(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}})}},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";t.__esModule=!0,t.getChildMapping=function(e){if(!e)return e;var t={};return r.Children.map(e,function(e){return e}).forEach(function(e){t[e.key]=e}),t},t.mergeChildMappings=function(e,t){function n(n){return t.hasOwnProperty(n)?t[n]:e[n]}e=e||{},t=t||{};var r={},o=[];for(var a in e)t.hasOwnProperty(a)?o.length&&(r[a]=o,o=[]):o.push(a);var i=void 0,u={};for(var l in t){if(r.hasOwnProperty(l))for(i=0;i<r[l].length;i++){var s=r[l][i];u[r[l][i]]=n(s)}u[l]=n(l)}for(i=0;i<o.length;i++)u[o[i]]=n(o[i]);return u};var r=n(0)},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=p(n(45)),a=p(n(47)),i=p(n(48)),u=n(49),l=p(n(0)),s=p(n(2)),c=n(3),f=n(15);function p(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var h=[];u.transitionEnd&&h.push(u.transitionEnd),u.animationEnd&&h.push(u.animationEnd);s.default.node,f.nameShape.isRequired,s.default.bool,s.default.bool,s.default.bool,s.default.number,s.default.number,s.default.number;var y=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=d(this,e.call.apply(e,[this].concat(a))),r.componentWillAppear=function(e){r.props.appear?r.transition("appear",e,r.props.appearTimeout):e()},r.componentWillEnter=function(e){r.props.enter?r.transition("enter",e,r.props.enterTimeout):e()},r.componentWillLeave=function(e){r.props.leave?r.transition("leave",e,r.props.leaveTimeout):e()},d(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.classNameAndNodeQueue=[],this.transitionTimeouts=[]},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)}),this.classNameAndNodeQueue.length=0},t.prototype.transition=function(e,t,n){var r=(0,c.findDOMNode)(this);if(r){var i=this.props.name[e]||this.props.name+"-"+e,l=this.props.name[e+"Active"]||i+"-active",s=null,f=void 0;(0,o.default)(r,i),this.queueClassAndNode(l,r);var p=function(e){e&&e.target!==r||(clearTimeout(s),f&&f(),(0,a.default)(r,i),(0,a.default)(r,l),f&&f(),t&&t())};n?(s=setTimeout(p,n),this.transitionTimeouts.push(s)):u.transitionEnd&&(f=function(e,t){return h.length?h.forEach(function(n){return e.addEventListener(n,t,!1)}):setTimeout(t,0),function(){h.length&&h.forEach(function(n){return e.removeEventListener(n,t,!1)})}}(r,p))}else t&&t()},t.prototype.queueClassAndNode=function(e,t){var n=this;this.classNameAndNodeQueue.push({className:e,node:t}),this.rafHandle||(this.rafHandle=(0,i.default)(function(){return n.flushClassNameAndNodeQueue()}))},t.prototype.flushClassNameAndNodeQueue=function(){this.unmounted||this.classNameAndNodeQueue.forEach(function(e){e.node.scrollTop,(0,o.default)(e.node,e.className)}),this.classNameAndNodeQueue.length=0,this.rafHandle=null},t.prototype.render=function(){var e=r({},this.props);return delete e.name,delete e.appear,delete e.enter,delete e.leave,delete e.appearTimeout,delete e.enterTimeout,delete e.leaveTimeout,delete e.children,l.default.cloneElement(l.default.Children.only(this.props.children),e)},t}(l.default.Component);y.displayName="CSSTransitionGroupChild",y.propTypes={},t.default=y,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=function(e,t){e.classList?e.classList.add(t):(0,o.default)(e,t)||("string"==typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))};var o=r(n(46));e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")},e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}e.exports=function(e,t){e.classList?e.classList.remove(t):"string"==typeof e.className?e.className=r(e.className,t):e.setAttribute("class",r(e.className&&e.className.baseVal||"",t))}},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=void 0;var o,a=r(n(14)),i="clearTimeout",u=function(e){var t=(new Date).getTime(),n=Math.max(0,16-(t-s)),r=setTimeout(e,n);return s=t,r},l=function(e,t){return e+(e?t[0].toUpperCase()+t.substr(1):t)+"AnimationFrame"};a.default&&["","webkit","moz","o","ms"].some(function(e){var t=l(e,"request");if(t in window)return i=l(e,"cancel"),u=function(e){return window[t](e)}});var s=(new Date).getTime();(o=function(e){return u(e)}).cancel=function(e){window[i]&&"function"==typeof window[i]&&window[i](e)};var c=o;t.default=c,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=t.animationEnd=t.animationDelay=t.animationTiming=t.animationDuration=t.animationName=t.transitionEnd=t.transitionDuration=t.transitionDelay=t.transitionTiming=t.transitionProperty=t.transform=void 0;var o,a,i,u,l,s,c,f,p,d,h,y=r(n(14)),v="transform";if(t.transform=v,t.animationEnd=i,t.transitionEnd=a,t.transitionDelay=c,t.transitionTiming=s,t.transitionDuration=l,t.transitionProperty=u,t.animationDelay=h,t.animationTiming=d,t.animationDuration=p,t.animationName=f,y.default){var m=function(){for(var e,t,n=document.createElement("div").style,r={O:function(e){return"o"+e.toLowerCase()},Moz:function(e){return e.toLowerCase()},Webkit:function(e){return"webkit"+e},ms:function(e){return"MS"+e}},o=Object.keys(r),a="",i=0;i<o.length;i++){var u=o[i];if(u+"TransitionProperty"in n){a="-"+u.toLowerCase(),e=r[u]("TransitionEnd"),t=r[u]("AnimationEnd");break}}!e&&"transitionProperty"in n&&(e="transitionend");!t&&"animationName"in n&&(t="animationend");return n=null,{animationEnd:t,transitionEnd:e,prefix:a}}();o=m.prefix,t.transitionEnd=a=m.transitionEnd,t.animationEnd=i=m.animationEnd,t.transform=v=o+"-"+v,t.transitionProperty=u=o+"-transition-property",t.transitionDuration=l=o+"-transition-duration",t.transitionDelay=c=o+"-transition-delay",t.transitionTiming=s=o+"-transition-timing-function",t.animationName=f=o+"-animation-name",t.animationDuration=p=o+"-animation-duration",t.animationTiming=d=o+"-animation-delay",t.animationDelay=h=o+"-animation-timing-function"}var g={transform:v,end:a,property:u,timing:s,delay:c,duration:l};t.default=g},function(e,t){var n,r,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var l,s=[],c=!1,f=-1;function p(){c&&l&&(c=!1,l.length?s=l.concat(s):f=-1,s.length&&d())}function d(){if(!c){var e=u(p);c=!0;for(var t=s.length;t;){for(l=s,s=[];++f<t;)l&&l[f].run();f=-1,t=s.length}l=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function y(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new h(e,t)),1!==s.length||c||u(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=y,o.addListener=y,o.once=y,o.off=y,o.removeListener=y,o.removeAllListeners=y,o.emit=y,o.prependListener=y,o.prependOnceListener=y,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,y=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function m(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case i:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case c:case d:case s:return e;default:return t}}case v:case y:case a:return t}}}function g(e){return m(e)===p}t.typeOf=m,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=c,t.ContextProvider=s,t.Element=o,t.ForwardRef=d,t.Fragment=i,t.Lazy=v,t.Memo=y,t.Portal=a,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===p||e===l||e===u||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===y||e.$$typeof===s||e.$$typeof===c||e.$$typeof===d)},t.isAsyncMode=function(e){return g(e)||m(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return m(e)===c},t.isContextProvider=function(e){return m(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return m(e)===d},t.isFragment=function(e){return m(e)===i},t.isLazy=function(e){return m(e)===v},t.isMemo=function(e){return m(e)===y},t.isPortal=function(e){return m(e)===a},t.isProfiler=function(e){return m(e)===l},t.isStrictMode=function(e){return m(e)===u},t.isSuspense=function(e){return m(e)===h}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(3),i=n(1),u=n(6),l=n.n(u),s=n(16),c=n.n(s);function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function v(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  width: 10%;\n  outline: none;\n  display: inline;\n"]);return v=function(){return e},e}i.a.input(v());var m=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=d(t).call(this,e))||"object"!==f(o)&&"function"!=typeof o?y(r):o).state={green:.005,lightGreen:.001,yellow:.05,orange:.01},n.cloneTree=n.cloneTree.bind(y(y(n))),n.updateTree=n.updateTree.bind(y(y(n))),n.changeTempPercentages=n.changeTempPercentages.bind(y(y(n))),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,r["Component"]),n=t,(a=[{key:"addColor",value:function(e,t,n,r,o){for(var a=e[0].renderTime,i=[e[0]];i.length>0;){var u=i[0].individualTime/a;i[0].nodeSvgShape=u<t?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#80b74c"}}:u<n?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#a1c94f"}}:u<r?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e6cc38"}}:u<o?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#f69d27"}}:{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e74e2c"}};for(var l=0;l<i[0].children.length;l++)i.push(i[0].children[l]);i.shift()}return e}},{key:"cloneTree",value:function(e){for(var t=[],n=0;n<e.length;n++){var r={};for(var o in e[n])e[n].hasOwnProperty(o)&&(r[o]="children"===o?this.cloneTree(e[n][o]):e[n][o]);t.push(r)}return t}},{key:"updateTree",value:function(){var e=this.cloneTree(this.props.treeData);this.addColor(e,this.state.green,this.state.lightGreen,this.state.yellow,this.state.orange),this.props.updateTreeState(e)}},{key:"changeTempPercentages",value:function(e){var t={};t[e.target.id]=e.target.value/100,this.setState(t),console.log(this.state)}},{key:"render",value:function(){return o.a.createElement("form",{style:{borderBottom:"0.5px solid #ababab",boxShadow:"0 4px 2px -2px #ababab",paddingBottom:"5px"}},o.a.createElement("div",{style:{width:"98%",display:"inline",justifyContent:"left"}},o.a.createElement("p",null,"Node colors are determined by lowest input percentage above individual render time divided by total render time of app. Nodes are be red otherwise."),o.a.createElement("div",{style:{display:"flex",justifyContent:"space-around",padding:"5px"}},o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.green,placeholder:"percentForGreen",id:"green",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Green")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.lightGreen,placeholder:"percentForLightGreen",id:"lightGreen",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Light Green")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.yellow,placeholder:"percentForYellow",id:"yellow",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Yellow")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.orange,placeholder:"percentForOrange",id:"orange",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Orange")),o.a.createElement("input",{style:{height:"40px",width:"60px"},type:"button",onClick:this.updateTree,value:"Submit"}))))}}])&&p(n.prototype,a),i&&p(n,i),t}();function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t){return(x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n-moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\nbox-shadow: 3px 4px 0px 0px #3dc21b;\nbackground-color:#44c767;\n-moz-border-radius:42px;\n-webkit-border-radius:42px;\nborder-radius:42px;\nborder:1px solid #18ab29;\ndisplay: flex;\njustify-content: center;\ncursor:pointer;\ncolor:#ffffff;\nfont-family: Trebuchet MS;\nfont-size: 11px;\nfont-weight:bold;\npadding: 3px 8px;\ntext-decoration:none;\ntext-shadow:2px 1px 3px #2f6627;\ntext-align: center;\nwidth: 20%;\nmargin: 8px;\n\n&:hover {\n  background-color: #3e8e41;\n}\n\n&:active {\n  background-color: #3e8e41;\n  box-shadow: 0 5px #666;\n  transform: translateY(4px);\n}\n"]);return E=function(){return e},e}var k=i.a.div(E()),S=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=w(t).call(this,e))||"object"!==g(o)&&"function"!=typeof o?_(r):o).mouseOver=n.mouseOver.bind(_(_(n))),n.state={orientation:"vertical"},n.changeOrientation=n.changeOrientation.bind(_(_(n))),n}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&x(e,t)}(t,o.a.Component),n=t,(r=[{key:"mouseOver",value:function(e){var t={name:e.name,time:e.renderTime,individualTime:e.individualTime,memoizedProps:e.memoizedProps,memoizedState:e.memoizedState};(0,this.props.grabNodeStats)(t)}},{key:"changeOrientation",value:function(){"vertical"===this.state.orientation?this.setState({orientation:"horizontal"}):this.setState({orientation:"vertical"})}},{key:"render",value:function(){var e=this.state,t=e.orientation,n=e.shape,r=this.props.treeData;return o.a.createElement("div",null,o.a.createElement("div",{id:"treeWrapper",style:{width:"100%",height:"60em",float:"right",border:"0.5px solid #ababab",margin:"10px",boxShadow:"1.5px 1.5px 1.5px 1.5px #ababab"}},o.a.createElement(m,{updateTreeState:this.props.updateTreeState,treeData:this.props.treeData}),o.a.createElement(k,{id:"button2",onClick:this.changeOrientation,counter:"Orientation"},"Change Orientation"),o.a.createElement("div",{style:{width:"98%",height:"45em"}},o.a.createElement(c.a,{translate:{x:100,y:100},orientation:t,onMouseOver:this.mouseOver,nodeSvgShape:n,separation:{siblings:.6,nonSiblings:.6},data:r}))))}}])&&b(n.prototype,r),a&&b(n,a),t}();function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  -moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n\t-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\n\tbox-shadow: 3px 4px 0px 0px #3dc21b;\n\tbackground-color:#44c767;\n\t-moz-border-radius:42px;\n\t-webkit-border-radius:42px;\n\tborder-radius:42px;\n\tborder:1px solid #18ab29;\n  display: flex;\n  justify-content: center;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family: Trebuchet MS;\n\tfont-size: 24px;\n\tfont-weight:bold;\n  padding: 15px 25px;\n\ttext-decoration:none;\n  text-shadow:2px 1px 3px #2f6627;\n  text-align: center;\n  width: auto;\n\n  &:hover {\n    background-color: #3e8e41;\n  }\n\n  &:active {\n    background-color: #3e8e41;\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n\n  "]);return P=function(){return e},e}var A=i.a.button(P()),N=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),M(this,T(t).call(this,e))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){return o.a.createElement(A,{id:this.props.id,onClick:this.props.clicked},this.props.counter)}}])&&O(n.prototype,a),i&&O(n,i),t}();function R(e){return(R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return!t||"object"!==R(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function z(e,t){return(z=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(['\n  color: #595959;\n  text-shadow: 1px 1px 2px #a3a3a3;\n  font-size: 8px;\n  font-family: "Trebuchet MS";\n  margin: 1em;\n  padding: 0.25em 1em;\n  width: 45%;\n  height: auto;\n  text-align: left;\n  float: left;\n']);return F=function(){return e},e}var U=i.a.div(F()),B=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),I(this,L(t).call(this,e))}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&z(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement(U,null,o.a.createElement("h1",null,"Component Name:",o.a.createElement("br",null),this.props.stats.name),o.a.createElement("h1",null,"Total Render Time:",o.a.createElement("br",null),this.props.stats.totalTime),o.a.createElement("h1",null,"Individual Render Time:",o.a.createElement("br",null),this.props.stats.individualTime))}}])&&D(n.prototype,r),a&&D(n,a),t}(),q=n(19),V=n.n(q);function W(e){return(W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function $(e){return($=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Y(e,t){return(Y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function K(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function G(){var e=Z(['\n  border: none;\n  height: 20em;\n  width: 95%;\n  overflow: auto;\n  text-align: left;\n  color: #595959;\n  text-shadow: 1px 1px 2px #a3a3a3;\n  font-size: 16px;\n  font-family: "Trebuchet MS";\n  margin: 1em;\n  padding: 0.25em 1em;\n  float: left;\n']);return G=function(){return e},e}function J(){var e=Z(["\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border: 0.5px solid #ababab;\n  margin: 10px;\n  box-shadow: 1.5px 1.5px 1.5px 1.5px #ababab;\n  width: 35em;\n  height: 60em;\n"]);return J=function(){return e},e}function Q(){var e=Z(["\n  display: flex;\n  justify-content: space-between;\n\n"]);return Q=function(){return e},e}function X(){var e=Z(["\n  width: 100%;\n  text-align: center;\n"]);return X=function(){return e},e}function Z(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var ee=i.a.div(X()),te=i.a.div(Q()),ne=i.a.div(J()),re=i.a.div(G()),oe=function(e){function t(){var e,n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(r=$(t).call(this))||"object"!==W(r)&&"function"!=typeof r?K(n):r).state={nodeinfo:5,startQuantum:!1,treeData:{name:"PLEASE REFRESH PAGE",nodeSvgShape:{shapeProps:{fill:"white"}}},green:.005,lightGreen:.01,yellow:.05,orange:.1},e.updateTreeState=e.updateTreeState.bind(K(K(e))),e.grabNodeStats=e.grabNodeStats.bind(K(K(e))),e.clicked=e.clicked.bind(K(K(e))),e.startQuantum=e.startQuantum.bind(K(K(e))),chrome.devtools.panels.create("React Quantum",null,"devtools.html"),e}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Y(e,t)}(t,r["Component"]),n=t,(a=[{key:"componentDidMount",value:function(){var e,t,n=this,r=chrome.runtime.connect(null,{name:"devTools"}),o=chrome.devtools.inspectedWindow.tabId;(t={message:"initialize"}).tabId=o,r.postMessage(t),r.onMessage.addListener(function(t){var r=n.state,o=r.green,a=r.lightGreen,i=r.yellow,u=r.orange,l=JSON.parse(t.message);(function e(t){for(var n=t,r=0;r<n.length;r+=1)if(n[r].memoizedProps&&(n[r].memoizedProps=JSON.parse(n[r].memoizedProps)),0===n[r].renderTime)n[r].individualTime=0;else{for(var o=0,a=0;a<n[r].children.length;a+=1){var i=n[r].children[a];if(0===i.renderTime&&i.children>0)for(var u=0;u<i.children.length;u+=1)o+=i.children[u].renderTime;else o+=n[r].children[a].renderTime}n[r].individualTime=n[r].renderTime-o}for(var l=0;l<n.length;l+=1)n[l].children.length>0&&e(n[l].children)})(l=l[0].children),function(e,t,n,r,o){for(var a=e[0].renderTime,i=[e[0]];i.length>0;){var u=i[0].individualTime/a;i[0].nodeSvgShape=u<t?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#80b74c"}}:u<n?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#a1c94f"}}:u<r?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e6cc38"}}:u<o?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#f69d27"}}:{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e74e2c"}};for(var l=0;l<i[0].children.length;l+=1)i.push(i[0].children[l]);i.shift()}}(l,o,a,i,u),clearTimeout(e),e=setTimeout(function(){console.log("tempTreeData",l),n.setState({treeData:l})},750)})}},{key:"startQuantum",value:function(){var e=chrome.devtools.inspectedWindow.tabId;chrome.runtime.sendMessage({name:"startQuantum",target:"content",tabId:e}),this.setState({startQuantum:!0})}},{key:"updateTreeState",value:function(e){this.setState({treeData:e})}},{key:"grabNodeStats",value:function(e){this.setState({nodeinfo:{totalTime:e.time,individualTime:e.individualTime,name:e.name,memoizedProps:e.memoizedProps,memoizedState:e.memoizedState}})}},{key:"clicked",value:function(e){var t="".concat(e.target.id,"counter"),n=this.state.counterId+1,r={};r[t]=n,this.setState(r)}},{key:"render",value:function(){var e=this.state,t=e.nodeinfo,n=e.treeData,r=(e.green,e.lightGreen,e.yellow,e.orange,e.orientation),a=e.startQuantum;return o.a.createElement(ee,null,o.a.createElement("div",null,o.a.createElement("img",{src:V.a,href:"https://github.com/ReactQuantum/ReactQuantum",alt:""}),!1===a?o.a.createElement("div",{style:{width:"100%",alignContent:"center",display:"flex",justifyContent:"center"}},o.a.createElement(N,{id:"startQuantum",clicked:this.startQuantum,counter:"Start Quantum"})):o.a.createElement("div",{className:"content"},o.a.createElement(te,null,o.a.createElement(ne,null,o.a.createElement(B,{stats:t}),o.a.createElement(U,{style:{marginTop:"-10px"}},o.a.createElement("h1",null,"Current State:")),o.a.createElement(re,null,o.a.createElement(l.a,{src:t.memoizedState})),o.a.createElement(U,null,o.a.createElement("h1",null,"Props:")),o.a.createElement(re,null,o.a.createElement(l.a,{src:t.memoizedProps}))),o.a.createElement("div",{style:{width:"45%",height:"60em"}},o.a.createElement(S,{updateTreeState:this.updateTreeState,orientation:r,treeData:n,grabNodeStats:this.grabNodeStats}))))))}}])&&H(n.prototype,a),i&&H(n,i),t}();Object(a.render)(o.a.createElement(oe,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtanNvbi12aWV3L2Rpc3QvbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzL3N0eWxpcy5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21lbW9pemUtb25lL2Rpc3QvbWVtb2l6ZS1vbmUuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3V1aWQvbGliL3JuZy1icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ieXRlc1RvVXVpZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uR3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3V0aWwvaW5ET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvUHJvcFR5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kMy10cmVlL2xpYi9yZWFjdC1kMy10cmVlLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9SZWFjdFF1YW50dW1Mb2dvLnBuZyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzL2QzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL3YxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL3Y0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbG9uZS9jbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYnVmZmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2lzX2FyZ3VtZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9DU1NUcmFuc2l0aW9uR3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoYWluLWZ1bmN0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvQ2hpbGRNYXBwaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL0NTU1RyYW5zaXRpb25Hcm91cENoaWxkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9jbGFzcy9hZGRDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvaGFzQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2NsYXNzL3JlbW92ZUNsYXNzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy91dGlsL3JlcXVlc3RBbmltYXRpb25GcmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9QZXJjZW50Q29sb3JJbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UcmVlQ29tcG9uZW50LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU3RhdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RldnRvb2xzLmpzeCJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInByb2Nlc3MiLCJzdHlsaXNfc3R5bGlzX21pbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwic3R5bGlzX3N0eWxpc19taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0Iiwic3R5bGlzX3J1bGVfc2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInN0eWxpc19ydWxlX3NoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQiLCJfZW1vdGlvbl91bml0bGVzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwicmVhY3RfaXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIm1lbW9pemVfb25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfZW1vdGlvbl9pc19wcm9wX3ZhbGlkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJpbnRlcmxlYXZlIiwic3RyaW5ncyIsImludGVycG9sYXRpb25zIiwicmVzdWx0IiwibGVuIiwibGVuZ3RoIiwicHVzaCIsIl90eXBlb2YiLCJpdGVyYXRvciIsIm9iaiIsImNvbnN0cnVjdG9yIiwiY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJkZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImFyZ3VtZW50cyIsInNvdXJjZSIsImluaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJvYmplY3RXaXRob3V0UHJvcGVydGllcyIsImtleXMiLCJpbmRleE9mIiwicG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsImlzUGxhaW5PYmplY3QiLCJ4IiwiRU1QVFlfQVJSQVkiLCJmcmVlemUiLCJFTVBUWV9PQkpFQ1QiLCJpc0Z1bmN0aW9uIiwidGVzdCIsImdldENvbXBvbmVudE5hbWUiLCJkaXNwbGF5TmFtZSIsImlzU3R5bGVkQ29tcG9uZW50Iiwic3R5bGVkQ29tcG9uZW50SWQiLCJTQ19BVFRSIiwiZW52IiwiSVNfQlJPV1NFUiIsIndpbmRvdyIsIkRJU0FCTEVfU1BFRURZIiwiU0NfRElTQUJMRV9TUEVFRFkiLCJTdHlsZWRDb21wb25lbnRzRXJyb3IiLCJfRXJyb3IiLCJjb2RlIiwidGhpcyIsIl9sZW4iLCJBcnJheSIsIl9rZXkiLCJfdGhpcyIsImpvaW4iLCJFcnJvciIsIlNDX0NPTVBPTkVOVF9JRCIsImV4dHJhY3RDb21wcyIsIm1heWJlQ1NTIiwiY3NzIiwiZXhpc3RpbmdDb21wb25lbnRzIiwicmVwbGFjZSIsIm1hdGNoIiwiY29tcG9uZW50SWQiLCJtYXRjaEluZGV4IiwibWFwIiwiX3JlZiIsIm5leHRDb21wIiwiY3NzRnJvbURPTSIsInNsaWNlIiwiQ09NTUVOVF9SRUdFWCIsInN0eWxpc1NwbGl0dGVyIiwiYSIsImdsb2JhbCIsImNhc2NhZGUiLCJrZXlmcmFtZSIsInByZWZpeCIsImNvbXByZXNzIiwic2VtaWNvbG9uIiwic3R5bGlzIiwicGFyc2luZ1J1bGVzIiwicmV0dXJuUnVsZXNQbHVnaW4iLCJjb250ZXh0IiwicGFyc2VkUnVsZXMiLCJwYXJzZVJ1bGVzUGx1Z2luIiwicnVsZSIsIl9jb21wb25lbnRJZCIsIl9zZWxlY3RvciIsIl9zZWxlY3RvclJlZ2V4cCIsInNlbGZSZWZlcmVuY2VSZXBsYWNlciIsIm9mZnNldCIsInN0cmluZyIsInVzZSIsIl8iLCJzZWxlY3RvcnMiLCJsYXN0SW5kZXhPZiIsInN0cmluZ2lmeVJ1bGVzIiwicnVsZXMiLCJzZWxlY3RvciIsInVuZGVmaW5lZCIsImZsYXRDU1MiLCJjc3NTdHIiLCJSZWdFeHAiLCJnZXROb25jZSIsIm5jIiwiYWRkTmFtZUZvcklkIiwibmFtZXMiLCJpZCIsInJlc2V0SWROYW1lcyIsImhhc05hbWVGb3JJZCIsInN0cmluZ2lmeU5hbWVzIiwic3RyIiwidHJpbSIsInNoZWV0Rm9yVGFnIiwidGFnIiwic2hlZXQiLCJzaXplIiwiZG9jdW1lbnQiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsInNhZmVJbnNlcnRSdWxlIiwiY3NzUnVsZSIsImluZGV4IiwibWF4SW5kZXgiLCJjc3NSdWxlcyIsImluc2VydFJ1bGUiLCJlcnIiLCJtYWtlVGV4dE1hcmtlciIsImFkZFVwVW50aWxJbmRleCIsInNpemVzIiwidG90YWxVcFRvSW5kZXgiLCJ3cmFwQXNIdG1sVGFnIiwiYWRkaXRpb25hbEF0dHJzIiwibm9uY2UiLCJTQ19WRVJTSU9OX0FUVFIiLCJmaWx0ZXIiLCJCb29sZWFuIiwid3JhcEFzRWxlbWVudCIsIl9wcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImdldElkc0Zyb21NYXJrZXJzRmFjdG9yeSIsIm1hcmtlcnMiLCJtYWtlVGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsIm1ha2VTZXJ2ZXJUYWciLCJuYW1lc0FyZyIsIm1hcmtlcnNBcmciLCJpbnNlcnRNYXJrZXIiLCJwcmV2IiwiY3NzRm9ySWQiLCJjbG9uZSIsIm5hbWVzQ2xvbmUiLCJjbG9uZU5hbWVzIiwibWFya2Vyc0Nsb25lIiwiZ2V0SWRzIiwiaW5zZXJ0UnVsZXMiLCJyZW1vdmVSdWxlcyIsIm1hcmtlciIsInNlYWxlZCIsInN0eWxlVGFnIiwidG9FbGVtZW50IiwidG9IVE1MIiwibWFrZVRhZyIsInRhZ0VsIiwiZm9yY2VTZXJ2ZXIiLCJpbnNlcnRCZWZvcmUiLCJnZXRJbXBvcnRSdWxlVGFnIiwiZWwiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJuZXh0U2libGluZyIsIm1ha2VTdHlsZVRhZyIsImV4dHJhY3RJbXBvcnQiLCJ1c2VkSW1wb3J0UnVsZVRhZyIsImRhdGEiLCJpbXBvcnRSdWxlcyIsImNzc1J1bGVzU2l6ZSIsIm1heUhhdmVJbXBvcnQiLCJzZXBhcmF0b3IiLCJhcHBlbmREYXRhIiwibmV3TWFya2VyIiwicmVwbGFjZUNoaWxkIiwibWFrZUJyb3dzZXJUYWciLCJlbmQiLCJjc3NUZXh0IiwiaW5zZXJ0SW5kZXgiLCJpbmplY3RlZFJ1bGVzIiwicmVtb3ZhbEluZGV4IiwibG93ZXJCb3VuZCIsImRlbGV0ZVJ1bGUiLCJkZWxldGVSdWxlcyIsIm1ha2VTcGVlZHlUYWciLCJTUExJVF9SRUdFWCIsIk1BWF9TSVpFIiwic2hlZXRSdW5uaW5nSWQiLCJtYXN0ZXIiLCJTdHlsZVNoZWV0IiwiaGVhZCIsImltcG9ydFJ1bGVUYWciLCJmaXJzdFRhZyIsInRhZ3MiLCJ0YWdNYXAiLCJkZWZlcnJlZCIsInJlaHlkcmF0ZWROYW1lcyIsImlnbm9yZVJlaHlkcmF0ZWROYW1lcyIsImNhcGFjaXR5IiwiY2xvbmVzIiwicmVoeWRyYXRlIiwiZWxzIiwiZXh0cmFjdGVkIiwiaXNTdHJlYW1lZCIsIm5vZGVzIiwicXVlcnlTZWxlY3RvckFsbCIsIm5vZGVzU2l6ZSIsImdldEF0dHJpYnV0ZSIsImVsTmFtZXMiLCJzcGxpdCIsImVsTmFtZXNTaXplIiwiaiIsImFwcGx5IiwidGV4dENvbnRlbnQiLCJleHRyYWN0ZWRTaXplIiwiX2V4dHJhY3RlZCRpIiwiX2kiLCJyZW1vdmVDaGlsZCIsIk1hdGgiLCJtYXgiLCJfaiIsInJlc2V0IiwiaWRzIiwibmV3VGFnIiwic2VhbEFsbFRhZ3MiLCJmb3JFYWNoIiwibGFzdEVsIiwiZ2V0VGFnRm9ySWQiLCJoYXNJZCIsImRlZmVycmVkSW5qZWN0IiwiaW5qZWN0IiwiY29uY2F0IiwicmVtb3ZlIiwidG9SZWFjdEVsZW1lbnRzIiwiS2V5ZnJhbWVzIiwic3R5bGVTaGVldCIsInRvU3RyaW5nIiwiU3RyaW5nIiwiZ2V0TmFtZSIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJpc0ZhbHNpc2giLCJjaHVuayIsIm9ialRvQ3NzIiwicHJldktleSIsInRvTG93ZXJDYXNlIiwiZmxhdHRlbiIsImV4ZWN1dGlvbkNvbnRleHQiLCJpc0FycmF5IiwicnVsZVNldCIsInNob3VsZFRocm93IiwiZSIsInN0eWxlcyIsIm11cm11cmhhc2giLCJiIiwiY2hhckNvZGVBdCIsImNoYXJzTGVuZ3RoIiwiZ2V0QWxwaGFiZXRpY0NoYXIiLCJmcm9tQ2hhckNvZGUiLCJnZW5lcmF0ZUFscGhhYmV0aWNOYW1lIiwiZmxvb3IiLCJpc1N0YXRpY1J1bGVzIiwiYXR0cnMiLCJzb21lIiwiaGFzRnVuY3Rpb25PYmplY3RLZXkiLCJfVFlQRV9TVEFUSUNTIiwiaXNITVJFbmFibGVkIiwiaGFzaGVyIiwiQ29tcG9uZW50U3R5bGUiLCJpc1N0YXRpYyIsImdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzIiwibGFzdENsYXNzTmFtZSIsImdlbmVyYXRlTmFtZSIsImRldGVybWluZVRoZW1lIiwiZmFsbGJhY2tUaGVtZSIsImRlZmF1bHRQcm9wcyIsImlzRGVmYXVsdFRoZW1lIiwidGhlbWUiLCJlc2NhcGVSZWdleCIsImRhc2hlc0F0RW5kcyIsImVzY2FwZSIsImlzVGFnIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGVzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIlRZUEVfU1RBVElDUyIsIiQkdHlwZW9mIiwicmVuZGVyIiwiZGVmaW5lUHJvcGVydHkkMSIsImdldE93blByb3BlcnR5TmFtZXMiLCJfT2JqZWN0JGdldE93blByb3BlcnQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImFycmF5UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsIlRoZW1lQ29udGV4dCIsIlRoZW1lQ29uc3VtZXIiLCJDb25zdW1lciIsIlN0eWxlU2hlZXRDb250ZXh0IiwiX0NvbXBvbmVudCIsIlRoZW1lUHJvdmlkZXIiLCJnZXRDb250ZXh0IiwicmVuZGVySW5uZXIiLCJjaGlsZHJlbiIsIm91dGVyVGhlbWUiLCJQcm92aWRlciIsIkNoaWxkcmVuIiwib25seSIsImdldFRoZW1lIiwiU2VydmVyU3R5bGVTaGVldCIsIm1hc3RlclNoZWV0Iiwic2VhbCIsInNwbGljZSIsImNvbGxlY3RTdHlsZXMiLCJTdHlsZVNoZWV0TWFuYWdlciIsImdldFN0eWxlVGFncyIsImdldFN0eWxlRWxlbWVudCIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsInJlYWRhYmxlU3RyZWFtIiwiU3R5bGVTaGVldENvbnN1bWVyIiwiaWRlbnRpZmllcnMiLCJTZXQiLCJTdHlsZWRDb21wb25lbnQiLCJyZW5kZXJPdXRlciIsImZvcndhcmRlZENvbXBvbmVudCIsImNvbXBvbmVudFN0eWxlIiwiX3Byb3BzJGZvcndhcmRlZENvbXBvIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiZ2VuZXJhdGVkQ2xhc3NOYW1lIiwiZWxlbWVudFRvQmVDcmVhdGVkIiwiYXMiLCJpc1RhcmdldFRhZyIsInByb3BzRm9yRWxlbWVudCIsImNvbXB1dGVkUHJvcHMiLCJyZWYiLCJzdHlsZSIsImNsYXNzTmFtZSIsImJ1aWxkRXhlY3V0aW9uQ29udGV4dCIsIl90aGlzMiIsImF0dHJEZWYiLCJmbiIsInJlc29sdmVkQXR0ckRlZiIsImF0dHJEZWZXYXNGbiIsImF0dHIiLCJpc1JlYWN0Q29tcG9uZW50IiwiX3Byb3BzJGZvcndhcmRlZENvbXBvMiIsIndhcm5Ub29NYW55Q2xhc3NlcyIsImNyZWF0ZVN0eWxlZENvbXBvbmVudCIsIm9wdGlvbnMiLCJpc1RhcmdldFN0eWxlZENvbXAiLCJpc0NsYXNzIiwiX29wdGlvbnMkZGlzcGxheU5hbWUiLCJnZW5lcmF0ZURpc3BsYXlOYW1lIiwiX29wdGlvbnMkY29tcG9uZW50SWQiLCJfQ29tcG9uZW50U3R5bGUiLCJfZGlzcGxheU5hbWUiLCJwYXJlbnRDb21wb25lbnRJZCIsIm5yIiwiZ2VuZXJhdGVJZCIsIl9vcHRpb25zJFBhcmVudENvbXBvbiIsIlBhcmVudENvbXBvbmVudCIsIl9vcHRpb25zJGF0dHJzIiwiZmluYWxBdHRycyIsIldyYXBwZWRTdHlsZWRDb21wb25lbnQiLCJmb3J3YXJkUmVmIiwiZm9yd2FyZGVkUmVmIiwid2l0aENvbXBvbmVudCIsInByZXZpb3VzQ29tcG9uZW50SWQiLCJvcHRpb25zVG9Db3B5IiwibmV3Q29tcG9uZW50SWQiLCJzdHlsZWQiLCJjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImNvbXBvbmVudENvbnN0cnVjdG9yIiwidGVtcGxhdGVGdW5jdGlvbiIsIndpdGhDb25maWciLCJjb25maWciLCJkb21FbGVtZW50IiwiR2xvYmFsU3R5bGUiLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJzY0NHU0hNUkNhY2hlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwiZGVmYXVsdCIsImYiLCJ1IiwiYmFja2dyb3VuZENvbG9yIiwiYmFzZTAwIiwiZWxsaXBzaXNDb2xvciIsImJhc2UwOSIsImJyYWNlQ29sb3IiLCJiYXNlMDciLCJleHBhbmRlZEljb24iLCJiYXNlMEQiLCJjb2xsYXBzZWRJY29uIiwiYmFzZTBFIiwia2V5Q29sb3IiLCJhcnJheUtleUNvbG9yIiwiYmFzZTBDIiwib2JqZWN0U2l6ZSIsImJhc2UwNCIsImNvcHlUb0NsaXBib2FyZCIsImJhc2UwRiIsImNvcHlUb0NsaXBib2FyZENoZWNrIiwib2JqZWN0Qm9yZGVyIiwiYmFzZTAyIiwiZGF0YVR5cGVzIiwiYm9vbGVhbiIsImRhdGUiLCJmbG9hdCIsImJhc2UwQiIsImZ1bmN0aW9uIiwiaW50ZWdlciIsIm5hbiIsImJhc2UwOCIsIm51bGwiLCJiYXNlMEEiLCJiYXNlMDUiLCJyZWdleHAiLCJiYWNrZ3JvdW5kIiwiZWRpdFZhcmlhYmxlIiwiZWRpdEljb24iLCJjYW5jZWxJY29uIiwicmVtb3ZlSWNvbiIsImFkZEljb24iLCJjaGVja0ljb24iLCJiYXNlMDEiLCJjb2xvciIsImJvcmRlciIsImFkZEtleU1vZGFsIiwibGFiZWxDb2xvciIsInZhbGlkYXRpb25GYWlsdXJlIiwiaWNvbkNvbG9yIiwiZm9udENvbG9yIiwiYXBwLWNvbnRhaW5lciIsImZvbnRGYW1pbHkiLCJnbG9iYWxGb250RmFtaWx5IiwiY3Vyc29yIiwiZ2xvYmFsQ3Vyc29yIiwicG9zaXRpb24iLCJlbGxpcHNpcyIsImRpc3BsYXkiLCJmb250U2l6ZSIsImVsbGlwc2lzRm9udFNpemUiLCJsaW5lSGVpZ2h0IiwiZWxsaXBzaXNMaW5lSGVpZ2h0IiwiZWxsaXBzaXNDdXJzb3IiLCJicmFjZS1yb3ciLCJicmFjZSIsImJyYWNlQ3Vyc29yIiwiZm9udFdlaWdodCIsImJyYWNlRm9udFdlaWdodCIsImV4cGFuZGVkLWljb24iLCJjb2xsYXBzZWQtaWNvbiIsImNvbG9uIiwibWFyZ2luIiwia2V5TWFyZ2luIiwidmVydGljYWxBbGlnbiIsIm9iamVjdEtleVZhbCIsInBhZGRpbmdUb3AiLCJrZXlWYWxQYWRkaW5nVG9wIiwicGFkZGluZ1JpZ2h0Iiwia2V5VmFsUGFkZGluZ1JpZ2h0IiwicGFkZGluZ0JvdHRvbSIsImtleVZhbFBhZGRpbmdCb3R0b20iLCJib3JkZXJMZWZ0Iiwia2V5VmFsQm9yZGVyTGVmdCIsIjpob3ZlciIsInBhZGRpbmdMZWZ0Iiwia2V5VmFsQm9yZGVySG92ZXIiLCJvYmplY3Qta2V5LXZhbC1uby1ib3JkZXIiLCJwYWRkaW5nIiwia2V5VmFsUGFkZGluZyIsInB1c2hlZC1jb250ZW50IiwibWFyZ2luTGVmdCIsInB1c2hlZENvbnRlbnRNYXJnaW5MZWZ0IiwidmFyaWFibGVWYWx1ZSIsInZhcmlhYmxlVmFsdWVQYWRkaW5nUmlnaHQiLCJvYmplY3QtbmFtZSIsImxldHRlclNwYWNpbmciLCJrZXlMZXR0ZXJTcGFjaW5nIiwiZm9udFN0eWxlIiwia2V5Rm9udFN0eWxlIiwia2V5VmVydGljYWxBbGlnbiIsIm9wYWNpdHkiLCJrZXlPcGFjaXR5Iiwia2V5T3BhY2l0eUhvdmVyIiwiYXJyYXkta2V5Iiwib2JqZWN0LXNpemUiLCJib3JkZXJSYWRpdXMiLCJvYmplY3RTaXplQm9yZGVyUmFkaXVzIiwib2JqZWN0U2l6ZUZvbnRTdHlsZSIsIm9iamVjdFNpemVNYXJnaW4iLCJkYXRhLXR5cGUtbGFiZWwiLCJkYXRhVHlwZUZvbnRTaXplIiwibWFyZ2luUmlnaHQiLCJkYXRhVHlwZU1hcmdpblJpZ2h0IiwiZGF0YXR5cGVPcGFjaXR5IiwiZGF0ZS12YWx1ZSIsImRhdGVWYWx1ZU1hcmdpbkxlZnQiLCJ3aGl0ZVNwYWNlIiwiZnVuY3Rpb24tdmFsdWUiLCJuYW5Gb250U2l6ZSIsIm5hbkZvbnRXZWlnaHQiLCJuYW5QYWRkaW5nIiwibmFuQm9yZGVyUmFkaXVzIiwibnVsbEZvbnRTaXplIiwibnVsbEZvbnRXZWlnaHQiLCJudWxsUGFkZGluZyIsIm51bGxCb3JkZXJSYWRpdXMiLCJ1bmRlZmluZWRGb250U2l6ZSIsInVuZGVmaW5lZFBhZGRpbmciLCJ1bmRlZmluZWRCb3JkZXJSYWRpdXMiLCJjb3B5LXRvLWNsaXBib2FyZCIsImNsaXBib2FyZEN1cnNvciIsImNvcHktaWNvbiIsImljb25Gb250U2l6ZSIsImljb25NYXJnaW5SaWdodCIsImNvcHktaWNvbi1jb3BpZWQiLCJjbGlwYm9hcmRDaGVja01hcmdpbkxlZnQiLCJhcnJheS1ncm91cC1tZXRhLWRhdGEiLCJhcnJheUdyb3VwTWV0YVBhZGRpbmciLCJvYmplY3QtbWV0YS1kYXRhIiwibWV0YURhdGFQYWRkaW5nIiwiaWNvbi1jb250YWluZXIiLCJ3aWR0aCIsImljb25Db250YWluZXJXaWR0aCIsInRvb2x0aXAiLCJ0b29sdGlwUGFkZGluZyIsInJlbW92ZVZhckljb24iLCJpY29uQ3Vyc29yIiwiYWRkVmFySWNvbiIsImVkaXRWYXJJY29uIiwiZWRpdC1pY29uLWNvbnRhaW5lciIsImNoZWNrLWljb24iLCJpY29uUGFkZGluZ1JpZ2h0IiwiY2FuY2VsLWljb24iLCJlZGl0LWlucHV0IiwibWluSGVpZ2h0IiwiZWRpdElucHV0SGVpZ2h0IiwibWluV2lkdGgiLCJlZGl0SW5wdXRNaW5XaWR0aCIsImVkaXRJbnB1dEJvcmRlclJhZGl1cyIsImVkaXRJbnB1dFBhZGRpbmciLCJlZGl0SW5wdXRNYXJnaW5SaWdodCIsImVkaXRJbnB1dEZvbnRGYW1pbHkiLCJkZXRlY3RlZC1yb3ciLCJkZXRlY3RlZFJvd1BhZGRpbmdUb3AiLCJrZXktbW9kYWwtcmVxdWVzdCIsImFkZEtleUNvdmVyUG9zaXRpb24iLCJ0b3AiLCJhZGRLZXlDb3ZlclBvc2l0aW9uUHgiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJhZGRLZXlDb3ZlckJhY2tncm91bmQiLCJrZXktbW9kYWwiLCJhZGRLZXlNb2RhbFdpZHRoIiwiYWRkS2V5TW9kYWxNYXJnaW4iLCJhZGRLZXlNb2RhbFBhZGRpbmciLCJhZGRLZXlNb2RhbFJhZGl1cyIsIm1hcmdpblRvcCIsImtleS1tb2RhbC1sYWJlbCIsIm1hcmdpbkJvdHRvbSIsImtleS1tb2RhbC1pbnB1dC1jb250YWluZXIiLCJvdmVyZmxvdyIsImtleS1tb2RhbC1pbnB1dCIsImJveFNpemluZyIsImtleS1tb2RhbC1jYW5jZWwiLCJrZXktbW9kYWwtY2FuY2VsLWljb24iLCJ0cmFuc2Zvcm0iLCJrZXktbW9kYWwtc3VibWl0IiwiZnVuY3Rpb24tZWxsaXBzaXMiLCJ2YWxpZGF0aW9uLWZhaWx1cmUiLCJ2YWxpZGF0aW9uLWZhaWx1cmUtbGFiZWwiLCJ2YWxpZGF0aW9uLWZhaWx1cmUtY2xlYXIiLCJyanZfZGVmYXVsdCIsInJqdl9ncmV5IiwiY3JlYXRlU3R5bGluZyIsImRlZmF1bHRCYXNlMTYiLCJ2ZXJzaW9uIiwiX19lIiwic3RvcmUiLCJpc05hTiIsInRvVHlwZSIsImlzVGhlbWUiLCJGdW5jdGlvbiIsIl9fZyIsInJqdklkIiwidHlwZV9uYW1lIiwiZGlzcGxheURhdGFUeXBlcyIsIlB1cmVDb21wb25lbnQiLCJmcm9tIiwib2JqZWN0cyIsInNldCIsImhhbmRsZUFjdGlvbiIsImVtaXQiLCJ1cGRhdGVkX3NyYyIsInVwZGF0ZVNyYyIsIm5hbWVzcGFjZSIsIm5ld192YWx1ZSIsImV4aXN0aW5nX3ZhbHVlIiwidmFyaWFibGVfcmVtb3ZlZCIsInNoaWZ0IiwiZGVlcENvcHkiLCJoIiwieSIsIm5leHQiLCJkb25lIiwicmV0dXJuIiwiRXZlbnRFbWl0dGVyIiwicmVnaXN0ZXIiLCJEaXNwYXRjaGVyIiwiaGVpZ2h0IiwiQ2hlY2tDaXJjbGUiLCJFZGl0IiwiQWRkIiwiQWRkQ2lyY2xlIiwiUmVtb3ZlQ2lyY2xlIiwiQ2xpcHB5IiwiQXJyb3dEb3duIiwiQXJyb3dSaWdodCIsIlNxdWFyZVBsdXMiLCJTcXVhcmVNaW51cyIsIkNpcmNsZVBsdXMiLCJDaXJjbGVNaW51cyIsInZpZXdCb3giLCJmaWxsIiwicHJlc2VydmVBc3BlY3RSYXRpbyIsIkYiLCJHIiwiUyIsIlAiLCJCIiwidiIsIlciLCJnIiwidmlydHVhbCIsIlIiLCJVIiwicmFuZG9tIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJPIiwiRSIsInciLCJDIiwiayIsImdldFN0YXRlIiwic3RhdGUiLCJwcmV2UHJvcHMiLCJzcmMiLCJpY29uU3R5bGUiLCJwYXJlbnRfdHlwZSIsImdldE9iamVjdE1ldGFEYXRhIiwiRXhwYW5kZWRJY29uIiwiQ29sbGFwc2VkSWNvbiIsIm9uQ2xpY2siLCJ0b2dnbGVDb2xsYXBzZWQiLCJkZXB0aCIsImpzdlJvb3QiLCJvYmplY3RfdHlwZSIsImV4cGFuZGVkIiwiaW5kZW50V2lkdGgiLCJnZXRCcmFjZVN0YXJ0IiwiZ2V0T2JqZWN0Q29udGVudCIsImdldEVsbGlwc2lzIiwiY29sbGFwc2VkIiwic2hvdWxkQ29sbGFwc2UiLCJzZXRTdGF0ZSIsInJlbmRlck9iamVjdENvbnRlbnRzIiwiaW5kZXhfb2Zmc2V0IiwiZ3JvdXBBcnJheXNBZnRlckxlbmd0aCIsInNvcnRLZXlzIiwic29ydCIsIk0iLCJwYXJzZUludCIsIkpzb25PYmplY3QiLCJ2YXJpYWJsZSIsInNpbmdsZUluZGVudCIsInBvbHlmaWxsIiwiX3QiLCJjZWlsIiwidmFsdWVPZiIsImNvcHlyaWdodCIsImNoYXJBdCIsIm1pbiIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90IiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJjb21wb25lbnRXaWxsTW91bnQiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyIsImVudHJpZXMiLCJ2YWx1ZXMiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwiY2xvc2UiLCJldmFsIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvcGllZFRpbWVyIiwiaGFuZGxlQ29weSIsImNsaWNrQ2FsbGJhY2siLCJpbm5lckhUTUwiLCJjbGlwYm9hcmRWYWx1ZSIsImJvZHkiLCJzZWxlY3QiLCJleGVjQ29tbWFuZCIsInNldFRpbWVvdXQiLCJjb3BpZWQiLCJnZXRDbGlwcHlJY29uIiwiY2xlYXJUaW1lb3V0IiwiaGlkZGVuIiwiZ2V0T2JqZWN0U2l6ZSIsImRpc3BsYXlPYmplY3RTaXplIiwiZ2V0QWRkQXR0cmlidXRlIiwia2V5X25hbWUiLCJkaXNwYXRjaCIsImdldFJlbW92ZU9iamVjdCIsImhvdmVyIiwib25EZWxldGUiLCJvbkFkZCIsImVuYWJsZUNsaXBib2FyZCIsInN0b3BQcm9wYWdhdGlvbiIsImdldEV4cGFuZGVkSWNvbiIsIkRhdGUiLCJub3ciLCJnZXRMaXN0ZW5lcnMiLCJyZXNldFN0YXRlIiwidmFyaWFibGUtdXBkYXRlIiwiYWRkLWtleS1yZXF1ZXN0IiwiYWRkS2V5UmVxdWVzdCIsIm9uRWRpdCIsImV4aXN0aW5nX3NyYyIsImVkaXRLZXlSZXF1ZXN0IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJwcmV2U3JjIiwicHJldk5hbWUiLCJwcmV2VGhlbWUiLCJvbiIsInJlbW92ZUxpc3RlbmVyIiwiZGVmYXVsdFZhbHVlIiwibWVzc2FnZSIsImFjdGl2ZSIsInZhbGlkYXRlU3RhdGUiLCJjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aCIsIm9uU2VsZWN0Iiwic2NoZW1lIiwiYXV0aG9yIiwiYmFzZTAzIiwiYmFzZTA2Iiwid2hpdGUiLCJibGFjayIsInRyYW5zcGFyZW50IiwiaW5kZW50QmxvY2tXaWR0aCIsImtleUJvcmRlclJhZGl1cyIsImtleUNvbG9uV2VpZ2h0Iiwia2V5VmFsUGFkZGluZ0hvdmVyIiwidW5kZWZpbmVkRm9udFdlaWdodCIsImdldEJhc2UxNlRoZW1lIiwiaW52ZXJ0VGhlbWUiLCJyZ2IyeXV2IiwieXV2MnJnYiIsInJlZHVjZSIsIkEiLCJiYXNlMTZUaGVtZXMiLCJleHRlbmQiLCJkb2N1bWVudEVsZW1lbnQiLCJfayIsIkFyZ3VtZW50cyIsIktFWSIsIkQiLCJUIiwiSSIsIkwiLCJOIiwieiIsInEiLCJWIiwiUU9iamVjdCIsImZpbmRDaGlsZCIsIksiLCJIIiwiSiIsIlkiLCJRIiwiWiIsIlgiLCJlZSIsInRlIiwibmUiLCJyZSIsImZvciIsImtleUZvciIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsImlzRXh0ZW5zaWJsZSIsInByZXZlbnRFeHRlbnNpb25zIiwiTkVFRCIsImZhc3RLZXkiLCJnZXRXZWFrIiwib25GcmVlemUiLCJpc0l0ZXJhYmxlIiwiZ2V0SXRlcmF0b3IiLCJnZXRJdGVyYXRvck1ldGhvZCIsInhlIiwiUGUiLCJvZSIsImllIiwiU2UiLCJoZSIsIkNlIiwiTWUiLCJwbGFjZWhvbGRlciIsImplIiwiJCIsIkFlIiwicmV2ZXJzZSIsIkRlIiwiZmUiLCJkZSIsImNlIiwidmUiLCJSZSIsImFlIiwic2UiLCJsZSIsImJlIiwieWUiLCJtZSIsInBlIiwiTmFOIiwiZ2UiLCJfZSIsIk9lIiwiRWUiLCJ3ZSIsImV4ZWMiLCJJRV9QUk9UTyIsImtlIiwiRmUiLCJ0aHJlZXplcm90d29mb3VyIiwiYXBhdGh5IiwiYXNoZXMiLCJhdGVsaWVyRHVuZSIsImF0ZWxpZXJGb3Jlc3QiLCJhdGVsaWVySGVhdGgiLCJhdGVsaWVyTGFrZXNpZGUiLCJhdGVsaWVyU2Vhc2lkZSIsImJlc3BpbiIsImJyZXdlciIsImJyaWdodCIsImNoYWxrIiwiY29kZXNjaG9vbCIsImNvbG9ycyIsImVpZ2h0aWVzIiwiZW1iZXJzIiwiZmxhdCIsImdvb2dsZSIsImdyYXlzY2FsZSIsImdyZWVuc2NyZWVuIiwiaGFybW9uaWMiLCJob3BzY290Y2giLCJpc290b3BlIiwibWFycmFrZXNoIiwibW9jaGEiLCJtb25va2FpIiwib2NlYW4iLCJwYXJhaXNvIiwicG9wIiwicmFpbHNjYXN0cyIsInNoYXBlc2hpZnRlciIsInNvbGFyaXplZCIsInN1bW1lcmZydWl0IiwidG9tb3Jyb3ciLCJ0dWJlIiwidHdpbGlnaHQiLCJyb3VuZCIsIiMiLCJoc2wiLCJyZ2IiLCJoZXgiLCJwYXJzZUZsb2F0Iiwic3Vic3RyaW5nIiwidG9GaXhlZCIsImlzQ29uY2F0U3ByZWFkYWJsZSIsInRvTG9jYWxlVGltZVN0cmluZyIsIndlZWtkYXkiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJob3VyIiwibWludXRlIiwiZ2V0RnVuY3Rpb25EaXNwbGF5IiwiX2V2ZW50cyIsIl9tYXhMaXN0ZW5lcnMiLCJkZWZhdWx0TWF4TGlzdGVuZXJzIiwic2V0TWF4TGlzdGVuZXJzIiwiYWRkTGlzdGVuZXIiLCJuZXdMaXN0ZW5lciIsImxpc3RlbmVyIiwid2FybmVkIiwidHJhY2UiLCJvbmNlIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwibGlzdGVuZXJzIiwibGlzdGVuZXJDb3VudCIsIl9jYWxsYmFja3MiLCJfaXNEaXNwYXRjaGluZyIsIl9pc0hhbmRsZWQiLCJfaXNQZW5kaW5nIiwiX2xhc3RJRCIsInVucmVnaXN0ZXIiLCJ3YWl0Rm9yIiwiX2ludm9rZUNhbGxiYWNrIiwiX3N0YXJ0RGlzcGF0Y2hpbmciLCJfc3RvcERpc3BhdGNoaW5nIiwiaXNEaXNwYXRjaGluZyIsIl9wZW5kaW5nUGF5bG9hZCIsImZyYW1lc1RvUG9wIiwiZWRpdE1vZGUiLCJlZGl0VmFsdWUiLCJyZW5hbWVLZXkiLCJwYXJzZWRJbnB1dCIsImN0cmxLZXkiLCJtZXRhS2V5IiwicHJlcG9wSW5wdXQiLCJnZXRWYWx1ZSIsImdldEVkaXRJY29uIiwiZ2V0UmVtb3ZlSWNvbiIsImdldEVkaXRJbnB1dCIsIkpzb25TdHJpbmciLCJKc29uSW50ZWdlciIsIkpzb25GbG9hdCIsIkpzb25Cb29sZWFuIiwiSnNvbkZ1bmN0aW9uIiwiSnNvbk51bGwiLCJKc29uTmFuIiwiSnNvblVuZGVmaW5lZCIsIkpzb25EYXRlIiwiSnNvblJlZ2V4cCIsImlucHV0UmVmIiwiZm9jdXMiLCJvbkNoYW5nZSIsIm9uS2V5RG93biIsInN1Ym1pdEVkaXQiLCJzaG93RGV0ZWN0ZWQiLCJnZXREZXRlY3RlZElucHV0IiwicGFkZGluZ1NpemUiLCJib3JkZXJTaXplIiwic2l6aW5nU3R5bGUiLCJzY3JvbGxIZWlnaHQiLCJtYXhIZWlnaHQiLCJyb3dDb3VudCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImN1cnJlbnRTdHlsZSIsIm1pbi1oZWlnaHQiLCJtYXgtaGVpZ2h0IiwidmlzaWJpbGl0eSIsInotaW5kZXgiLCJzZXRQcm9wZXJ0eSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiX3Jlc2l6ZUxvY2siLCJfb25Sb290RE9NTm9kZSIsIl9yb290RE9NTm9kZSIsIl9vbkNoYW5nZSIsIl9jb250cm9sbGVkIiwiX3Jlc2l6ZUNvbXBvbmVudCIsIl91aWQiLCJ1c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50cyIsIm1pblJvd3MiLCJtYXhSb3dzIiwib25IZWlnaHRDaGFuZ2UiLCJjb21wb25lbnREaWRNb3VudCIsIl9yZXNpemVMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2xlYXJOZXh0RnJhbWUiLCJfb25OZXh0RnJhbWVBY3Rpb25JZCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIkNvbXBvbmVudCIsImZ1bmMiLCJudW1iZXIiLCJib29sIiwiaXNSZXF1aXJlZCIsImFycmF5Iiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJwYXJzZSIsImlzVmFsaWQiLCJzdWJtaXQiLCJjbG9zZU1vZGFsIiwiaW5wdXQiLCJzcGVsbENoZWNrIiwib25LZXlQcmVzcyIsImxvY2FscyIsImJ0b2EiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwicmVmcyIsInBhcnRzIiwiYmFzZSIsIm1lZGlhIiwic291cmNlTWFwIiwiaW5zZXJ0SW50byIsImluc2VydEF0IiwiZmlyc3RDaGlsZCIsInJlbCIsInNpbmdsZXRvbiIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJocmVmIiwiY2hpbGROb2RlcyIsImFsbCIsImF0b2IiLCJxdWVyeVNlbGVjdG9yIiwiREVCVUciLCJsb2NhdGlvbiIsInByb3RvY29sIiwiaG9zdCIsInBhdGhuYW1lIiwidWUiLCIkZSIsInplIiwiTmUiLCJXZSIsInFlIiwiQmUiLCJHZSIsIkhlIiwiSmUiLCJUZSIsIlVlIiwiVmUiLCJYZSIsIlllIiwiUWUiLCJJZSIsIkxlIiwiS2UiLCJzaW1wbGVJc0VxdWFsIiwicmVzdWx0Rm4iLCJpc0VxdWFsIiwibGFzdFRoaXMiLCJsYXN0UmVzdWx0IiwibGFzdEFyZ3MiLCJjYWxsZWRPbmNlIiwiaXNOZXdBcmdFcXVhbFRvTGFzdCIsIm5ld0FyZyIsIm5ld0FyZ3MiLCJldmVyeSIsInByb3BJc0VudW1lcmFibGUiLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJ0b09iamVjdCIsImdldFJhbmRvbVZhbHVlcyIsImNyeXB0byIsIm1zQ3J5cHRvIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5kcyIsImJ5dGVUb0hleCIsInN1YnN0ciIsImJ1ZiIsImJ0aCIsIl9jaGFpbkZ1bmN0aW9uMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QyIiwiX3Byb3BUeXBlczIiLCJfQ2hpbGRNYXBwaW5nIiwiVHJhbnNpdGlvbkdyb3VwIiwiX1JlYWN0JENvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwicGVyZm9ybUFwcGVhciIsImNvbXBvbmVudCIsImN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzIiwiY29tcG9uZW50V2lsbEFwcGVhciIsIl9oYW5kbGVEb25lQXBwZWFyaW5nIiwiY29tcG9uZW50RGlkQXBwZWFyIiwiY3VycmVudENoaWxkTWFwcGluZyIsImdldENoaWxkTWFwcGluZyIsInBlcmZvcm1MZWF2ZSIsInBlcmZvcm1FbnRlciIsImNvbXBvbmVudFdpbGxFbnRlciIsIl9oYW5kbGVEb25lRW50ZXJpbmciLCJjb21wb25lbnREaWRFbnRlciIsImNvbXBvbmVudFdpbGxMZWF2ZSIsIl9oYW5kbGVEb25lTGVhdmluZyIsImNvbXBvbmVudERpZExlYXZlIiwia2V5c1RvRW50ZXIiLCJuZXdDaGlsZHJlbiIsImNoaWxkUmVmcyIsIl9pbmhlcml0cyIsImtleXNUb0xlYXZlIiwiaW5pdGlhbENoaWxkTWFwcGluZyIsIm5leHRQcm9wcyIsIm5leHRDaGlsZE1hcHBpbmciLCJwcmV2Q2hpbGRNYXBwaW5nIiwibWVyZ2VDaGlsZE1hcHBpbmdzIiwiaGFzUHJldiIsImhhc05leHQiLCJfdGhpczMiLCJjaGlsZHJlblRvUmVuZGVyIiwiX2xvb3AiLCJjaGlsZCIsImlzQ2FsbGJhY2tSZWYiLCJmYWN0b3J5Q2hpbGQiLCJjaGlsZEZhY3RvcnkiLCJjbG9uZUVsZW1lbnQiLCJ0cmFuc2l0aW9uTGVhdmUiLCJ0cmFuc2l0aW9uTmFtZSIsInRyYW5zaXRpb25BcHBlYXIiLCJ0cmFuc2l0aW9uRW50ZXIiLCJ0cmFuc2l0aW9uTGVhdmVUaW1lb3V0IiwidHJhbnNpdGlvbkVudGVyVGltZW91dCIsInRyYW5zaXRpb25BcHBlYXJUaW1lb3V0IiwiX2RlZmF1bHQiLCJuYW1lU2hhcGUiLCJ0cmFuc2l0aW9uVGltZW91dCIsInRyYW5zaXRpb25UeXBlIiwidGltZW91dFByb3BOYW1lIiwiZW5hYmxlZFByb3BOYW1lIiwiZW50ZXIiLCJsZWF2ZSIsImVudGVyQWN0aXZlIiwibGVhdmVBY3RpdmUiLCJhcHBlYXIiLCJhcHBlYXJBY3RpdmUiLCJiZWZvcmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsInRyZWVVdGlsIiwiVHJlZSIsImFzc2lnbkludGVybmFsUHJvcGVydGllcyIsInJkM3RTdmdDbGFzc05hbWUiLCJ2NCIsInJkM3RHQ2xhc3NOYW1lIiwiaW50ZXJuYWxTdGF0ZSIsImluaXRpYWxSZW5kZXIiLCJ0YXJnZXROb2RlIiwiaXNUcmFuc2l0aW9uaW5nIiwiZDMiLCJzY2FsZSIsInpvb20iLCJ0cmFuc2xhdGUiLCJoYW5kbGVOb2RlVG9nZ2xlIiwiZmluZE5vZGVzQnlJZCIsInBlcnNpc3QiLCJjb2xsYXBzaWJsZSIsIl9jb2xsYXBzZWQiLCJleHBhbmROb2RlIiwic2hvdWxkQ29sbGFwc2VOZWlnaGJvck5vZGVzIiwiY29sbGFwc2VOZWlnaGJvck5vZGVzIiwiY29sbGFwc2VOb2RlIiwiaGFuZGxlT25DbGlja0NiIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiaGFuZGxlT25Nb3VzZU92ZXJDYiIsIm9uTW91c2VPdmVyIiwiaGFuZGxlT25Nb3VzZU91dENiIiwib25Nb3VzZU91dCIsImNhbGN1bGF0ZUQzR2VvbWV0cnkiLCJiaW5kWm9vbUxpc3RlbmVyIiwib25VcGRhdGUiLCJzY2FsZUV4dGVudCIsInpvb21hYmxlIiwiYmVoYXZpb3IiLCJldmVudCIsIl9jaGlsZHJlbiIsImZpbmROb2Rlc0F0RGVwdGgiLCJpbml0aWFsRGVwdGgiLCJ1c2VDb2xsYXBzZURhdGEiLCJkZXB0aEZhY3RvciIsInNlcGFyYXRpb24iLCJub2RlU2l6ZSIsIm9yaWVudGF0aW9uIiwibGF5b3V0IiwidHJlZSIsInBhcmVudCIsInNpYmxpbmdzIiwibm9uU2libGluZ3MiLCJzZXRJbml0aWFsVHJlZURlcHRoIiwibGlua3MiLCJnZW5lcmF0ZVRyZWUiLCJub2RlU3ZnU2hhcGUiLCJub2RlTGFiZWxDb21wb25lbnQiLCJwYXRoRnVuYyIsInRleHRMYXlvdXQiLCJjaXJjbGVSYWRpdXMiLCJhbGxvd0ZvcmVpZ25PYmplY3RzIiwibGlua0RhdGEiLCJub2RlRGF0YSIsImF0dHJpYnV0ZXMiLCJzdWJzY3JpcHRpb25zIiwic2hhcGVQcm9wcyIsInRleHRBbmNob3IiLCJlbmFibGVUcmFuc2l0aW9ucyIsInNldFRyYW5zZm9ybSIsImluaXRpYWxTdHlsZSIsInNob3VsZE5vZGVUcmFuc2Zvcm0iLCJyZW5kZXJOb2RlRWxlbWVudCIsImNpcmNsZSIsImhhbmRsZUNsaWNrIiwiaGFuZGxlT25Nb3VzZU92ZXIiLCJoYW5kbGVPbk1vdXNlT3V0IiwiYXBwbHlUcmFuc2Zvcm0iLCJ0cmFuc2l0aW9uIiwiZHVyYXRpb24iLCJlYWNoIiwibGVhZk5vZGUiLCJub2RlU3R5bGUiLCJkeSIsIkJBU0VfTUFSR0lOIiwiZm9yZWlnbk9iamVjdFdyYXBwZXIiLCJobXIiLCJhcHBseU9wYWNpdHkiLCJsaW5rIiwic3ZnIiwiZGlhZ29uYWwiLCJwcm9qZWN0aW9uIiwibGluZSIsImludGVycG9sYXRlIiwiZHJhd0VsYm93UGF0aCIsImRyYXdTdHJhaWdodFBhdGgiLCJkcmF3RGlhZ29uYWxQYXRoIiwiZHJhd1BhdGgiLCJwYXJzZUNTViIsIlByb21pc2UiLCJjc3YiLCJwYXJzZUpTT04iLCJqc29uIiwicGFyc2VGbGF0SlNPTiIsImdlbmVyYXRlSGllcmFyY2h5IiwidG9TaGVldCIsImJsb2NrIiwiY29udGVudCIsInBhcmVudHMiLCJjb2x1bW4iLCJhdCIsImRlbGltaXRlciIsImZhY3RvcnkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4IiwiV2Via2l0TGluZUNsYW1wIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJtZW1vaXplX2Jyb3dzZXJfZXNtIiwicHJvcCIsImFhIiwiYmEiLCJjYSIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJ1cGRhdGVyIiwiZm9yY2VVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsImN1cnJlbnQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9vd25lciIsImtleVByZWZpeCIsImNvdW50IiwiPSIsIjoiLCJlYSIsImZhIiwiZGEiLCJ0b0FycmF5IiwiY3JlYXRlUmVmIiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiQ29uY3VycmVudE1vZGUiLCJQcm9maWxlciIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImhhIiwiaWEiLCJqYSIsIm9uRXJyb3IiLCJrYSIsIm1hIiwibmEiLCJvYSIsInFhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJyYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwic2EiLCJyZWdpc3RyYXRpb25OYW1lIiwidGEiLCJ1YSIsImRlcGVuZGVuY2llcyIsInZhIiwid2EiLCJ4YSIsInlhIiwiY3VycmVudFRhcmdldCIsImxhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJEYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJFYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJkaXNwYXRjaENvbmZpZyIsIlBhIiwiX3RhcmdldEluc3QiLCJRYSIsIlJhIiwiU2EiLCJUYSIsIlVhIiwiVmEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJXYSIsIlhhIiwiWWEiLCJhbmltYXRpb24iLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJjYW5jZWxCdWJibGUiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJtYiIsIm5iIiwib2IiLCJxYiIsInJiIiwiZG9jdW1lbnRNb2RlIiwic2IiLCJ0YiIsInViIiwidmIiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwid2IiLCJ4YiIsImtleUNvZGUiLCJ5YiIsImRldGFpbCIsInpiIiwiQ2IiLCJsb2NhbGUiLCJ3aGljaCIsIkFiIiwiYWx0S2V5IiwiY2hhciIsIkJiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJOYiIsIk9iIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlBiIiwibm9kZU5hbWUiLCJRYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiUmIiLCJTYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWIiLCJXYiIsImNoZWNrZWQiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwidG9VcHBlckNhc2UiLCJ4YyIsInRjIiwidWMiLCJzYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieWMiLCJ6YyIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInRhYkluZGV4IiwiRmMiLCJjaGFuZ2UiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiZGV0YWNoRXZlbnQiLCJPYyIsIlBjIiwiYXR0YWNoRXZlbnQiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJVYyIsInZpZXciLCJWYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJXYyIsImdldE1vZGlmaWVyU3RhdGUiLCJYYyIsIlljIiwiYWQiLCJiZCIsImNkIiwiZGQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImVkIiwicG9pbnRlcklkIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJqZCIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJuZCIsInNpYmxpbmciLCJtZCIsIm9kIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsInBkIiwiY2xpcGJvYXJkRGF0YSIsInFkIiwicmQiLCJjaGFyQ29kZSIsInNkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInRkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInVkIiwicmVwZWF0IiwidmQiLCJkYXRhVHJhbnNmZXIiLCJ3ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ4ZCIsInlkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsImlzSW50ZXJhY3RpdmUiLCJEZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkVkIiwiRmQiLCJHZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlRkIiwiVWQiLCJjb250ZW50RWRpdGFibGUiLCJWZCIsIldkIiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiaHRtbCIsIm1hdGhtbCIsIm5hbWVzcGFjZVVSSSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJncmlkQXJlYSIsImxpbmVDbGFtcCIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiaXMiLCJibHVyIiwiYXV0b0ZvY3VzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiZ2V0Q2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlplIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJnZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiaGYiLCJqZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwia2YiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsImxmIiwibWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIm5mIiwib2YiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJwZiIsInFmIiwicmYiLCJzZiIsInRmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJzdGFjayIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwiRmYiLCJvYnNlcnZlZEJpdHMiLCJHZiIsIkhmIiwiSWYiLCJKZiIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlVmIiwicXVldWUiLCJiYXNlVXBkYXRlIiwiVmYiLCJXZiIsIlhmIiwiZGVsZXRlIiwiYWN0aW9uIiwibGFzdCIsIk1hcCIsImNnIiwiYmciLCJkZyIsImVnIiwiWmYiLCJkZXN0cm95IiwiaW5wdXRzIiwiJGYiLCJhZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsInRhZ05hbWUiLCJsZyIsIm1nIiwibmciLCJwZyIsInFnIiwicmciLCJzZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJ0ZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInVnIiwiY29udGV4dFR5cGUiLCJyZWFkQ29udGV4dCIsInZnIiwid2ciLCJ4ZyIsInlnIiwiX3N0cmluZ1JlZiIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIlNnIiwiVGciLCJVZyIsIlZnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiV2ciLCJwZW5kaW5nQ29udGV4dCIsIlhnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiWWciLCJ0aGVuIiwib2ciLCJoeWRyYXRlIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsIm9uY2xpY2siLCJkaCIsIldlYWtTZXQiLCJlaCIsImloIiwiamgiLCJraCIsIm1oIiwibmgiLCJvaCIsInBoIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInFoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsImxoIiwiV2giLCJOaCIsImhhcyIsImFkZCIsInNoIiwiV2Vha01hcCIsInRoIiwidWgiLCJ2aCIsImNvbXBvbmVudERpZENhdGNoIiwid2giLCJjb21wb25lbnRTdGFjayIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiT2giLCJjcmVhdGVFbGVtZW50TlMiLCJQaCIsIlFoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiUmgiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsIlNoIiwiZmluaXNoZWRXb3JrIiwiVGgiLCJVaCIsIlZoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJnaSIsImhpIiwidW5zdGFibGVfbm93IiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJuaSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwicGkiLCJxaSIsIm5leHRTY2hlZHVsZWRSb290IiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsInVpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJwYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJ6ZyIsInlpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJTZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwicGEiLCJUYiIsIlpjIiwiTWkiLCJmaCIsImdoIiwiTmkiLCIkYyIsImhoIiwidmkiLCJ3aSIsInhpIiwiemkiLCJBaSIsIkJpIiwiRGkiLCJfcm9vdCIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiRWkiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiRmkiLCJfaW50ZXJuYWxSb290IiwiR2kiLCJJaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIkhpIiwiSmkiLCJDaSIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJMaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiS2kiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJjcmVhdGVSb290IiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiT2kiLCJQaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18iLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyIsImQzX2FycmF5U2xpY2UiLCJkM19hcnJheSIsImxpc3QiLCJkM19kb2N1bWVudCIsImQzX2RvY3VtZW50RWxlbWVudCIsImQzX3dpbmRvdyIsImQzX2VsZW1lbnRfcHJvdG90eXBlIiwiRWxlbWVudCIsImQzX2VsZW1lbnRfc2V0QXR0cmlidXRlIiwiZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGVOUyIsImQzX3N0eWxlX3Byb3RvdHlwZSIsIkNTU1N0eWxlRGVjbGFyYXRpb24iLCJkM19zdHlsZV9zZXRQcm9wZXJ0eSIsInNwYWNlIiwibG9jYWwiLCJwcmlvcml0eSIsImQzX2FzY2VuZGluZyIsImQzX251bWJlciIsImQzX251bWVyaWMiLCJkM19iaXNlY3RvciIsImxvIiwibWlkIiwiYXNjZW5kaW5nIiwiZGVzY2VuZGluZyIsImV4dGVudCIsInN1bSIsIm1lYW4iLCJxdWFudGlsZSIsIm1lZGlhbiIsIm51bWJlcnMiLCJ2YXJpYW5jZSIsImRldmlhdGlvbiIsInNxcnQiLCJkM19iaXNlY3QiLCJkM190cmFuc3Bvc2VMZW5ndGgiLCJiaXNlY3RMZWZ0IiwiYmlzZWN0IiwiYmlzZWN0UmlnaHQiLCJiaXNlY3RvciIsInNodWZmbGUiLCJpMCIsImkxIiwicGVybXV0ZSIsImluZGV4ZXMiLCJwZXJtdXRlcyIsInBhaXJzIiwicDEiLCJ0cmFuc3Bvc2UiLCJtYXRyaXgiLCJyb3ciLCJ6aXAiLCJtZXJnZSIsImFycmF5cyIsIm1lcmdlZCIsImFicyIsImQzX2NsYXNzIiwiY3RvciIsInByb3BlcnRpZXMiLCJkM19NYXAiLCJzdG9wIiwic3RlcCIsIkluZmluaXR5IiwiZDNfcmFuZ2VfaW50ZWdlclNjYWxlIiwiZDNfbWFwX3Byb3RvIiwiZDNfbWFwX3plcm8iLCJkM19tYXBfZXNjYXBlIiwiZDNfbWFwX3VuZXNjYXBlIiwiZDNfbWFwX2hhcyIsImQzX21hcF9yZW1vdmUiLCJkM19tYXBfa2V5cyIsImQzX21hcF9zaXplIiwiZDNfbWFwX2VtcHR5IiwiZDNfU2V0IiwiZDNfaWRlbnRpdHkiLCJkM19yZWJpbmQiLCJtZXRob2QiLCJkM192ZW5kb3JTeW1ib2wiLCJkM192ZW5kb3JQcmVmaXhlcyIsInByZWZpeE5hbWUiLCJlbXB0eSIsIm5lc3QiLCJzb3J0VmFsdWVzIiwicm9sbHVwIiwibWFwVHlwZSIsImtleVZhbHVlIiwic2V0dGVyIiwidmFsdWVzQnlLZXkiLCJzb3J0S2V5Iiwia2V5TWFwIiwicmViaW5kIiwiZDNfbm9vcCIsImQzX2Rpc3BhdGNoIiwiZDNfZGlzcGF0Y2hfZXZlbnQiLCJsaXN0ZW5lckJ5TmFtZSIsImQzX2V2ZW50UHJldmVudERlZmF1bHQiLCJkM19ldmVudFNvdXJjZSIsInNvdXJjZUV2ZW50IiwiZDNfZXZlbnREaXNwYXRjaCIsInRoaXoiLCJhcmd1bWVudHoiLCJlMSIsImUwIiwicmVxdW90ZSIsImQzX3JlcXVvdGVfcmUiLCJkM19zdWJjbGFzcyIsImQzX3NlbGVjdGlvbiIsImdyb3VwcyIsImQzX3NlbGVjdGlvblByb3RvdHlwZSIsImQzX3NlbGVjdCIsImQzX3NlbGVjdEFsbCIsImQzX3NlbGVjdE1hdGNoZXMiLCJkM19zZWxlY3RNYXRjaGVyIiwibWF0Y2hlcyIsIlNpenpsZSIsIm1hdGNoZXNTZWxlY3RvciIsInNlbGVjdGlvbiIsImQzX3NlbGVjdGlvbl9zZWxlY3RvciIsImQzX3NlbGVjdGlvbl9zZWxlY3RvckFsbCIsInN1Ymdyb3VwIiwic3Vibm9kZSIsImdyb3VwIiwic3ViZ3JvdXBzIiwiX19kYXRhX18iLCJzZWxlY3RBbGwiLCJkM19uc1hodG1sIiwiZDNfbnNQcmVmaXgiLCJ4aHRtbCIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJkM19zZWxlY3Rpb25fYXR0ciIsInF1YWxpZnkiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsImQzX2NvbGxhcHNlIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWRSZSIsImQzX3NlbGVjdGlvbl9jbGFzc2VzIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWQiLCJkM19zZWxlY3Rpb25fY2xhc3NlZE5hbWUiLCJjbGFzc0xpc3QiLCJsYXN0SW5kZXgiLCJkM19zZWxlY3Rpb25fc3R5bGUiLCJyZW1vdmVQcm9wZXJ0eSIsImQzX3NlbGVjdGlvbl9wcm9wZXJ0eSIsImQzX3NlbGVjdGlvbl9jcmVhdG9yIiwiZDNfc2VsZWN0aW9uUmVtb3ZlIiwiZDNfc2VsZWN0aW9uX2RhdGFOb2RlIiwiZDNfc2VsZWN0aW9uX2ZpbHRlciIsImQzX3NlbGVjdGlvbl9lYWNoIiwiZDNfc2VsZWN0aW9uX2VudGVyIiwiZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlIiwiZ2V0QXR0cmlidXRlTlMiLCJjbGFzc2VkIiwiYXBwZW5kIiwiaW5zZXJ0IiwiZ3JvdXBEYXRhIiwibjAiLCJ1cGRhdGVOb2RlcyIsImVudGVyTm9kZXMiLCJleGl0Tm9kZXMiLCJub2RlQnlLZXlWYWx1ZSIsImtleVZhbHVlcyIsInVwZGF0ZSIsImV4aXQiLCJkYXR1bSIsImNvbXBhcmF0b3IiLCJhcmdzIiwiZDNfc2VsZWN0aW9uX29uIiwiY2FwdHVyZSIsIndyYXAiLCJkM19zZWxlY3Rpb25fb25MaXN0ZW5lciIsImQzX3NlbGVjdGlvbl9vbkZpbHRlcnMiLCJvblJlbW92ZSIsImQzX3NlbGVjdGlvbl9vbkZpbHRlciIsInVwZ3JvdXAiLCJqMCIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicmVsYXRlZCIsImQzX2V2ZW50X2RyYWdTZWxlY3QiLCJkM19ldmVudF9kcmFnSWQiLCJkM19ldmVudF9kcmFnU3VwcHJlc3MiLCJjbGljayIsInN1cHByZXNzQ2xpY2siLCJvZmYiLCJtb3VzZSIsImNvbnRhaW5lciIsImQzX21vdXNlUG9pbnQiLCJkM19tb3VzZV9idWc0NDA4MyIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm93bmVyU1ZHRWxlbWVudCIsImNyZWF0ZVNWR1BvaW50IiwicG9pbnQiLCJzY3JvbGxYIiwic2Nyb2xsWSIsImN0bSIsImdldFNjcmVlbkNUTSIsIm1hdHJpeFRyYW5zZm9ybSIsImludmVyc2UiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsImQzX2JlaGF2aW9yX2RyYWdUb3VjaElkIiwiaWRlbnRpZmllciIsInRvdWNoIiwiZHJhZyIsIm9yaWdpbiIsIm1vdXNlZG93biIsImRyYWdzdGFydCIsInRvdWNoc3RhcnQiLCJzdWJqZWN0IiwibW92ZSIsImRyYWdPZmZzZXQiLCJjb3JyZXNwb25kaW5nRWxlbWVudCIsImRyYWdnZWQiLCJkcmFnSWQiLCJkcmFnTmFtZSIsImRyYWdTdWJqZWN0IiwiZHgiLCJwb3NpdGlvbjEiLCJwb3NpdGlvbjAiLCJkcmFnUmVzdG9yZSIsIs61IiwizrUyIiwiz4AiLCJQSSIsIs+EIiwiz4TOtSIsImhhbGbPgCIsImQzX3JhZGlhbnMiLCJkM19kZWdyZWVzIiwiZDNfc2duIiwiZDNfY3Jvc3MyZCIsImQzX2Fjb3MiLCJhY29zIiwiZDNfYXNpbiIsImFzaW4iLCJkM19jb3NoIiwiZXhwIiwiZDNfaGF2ZXJzaW4iLCJzaW4iLCLPgSIsIlNRUlQyIiwiaW50ZXJwb2xhdGVab29tIiwicDAiLCJ1eDAiLCJ1eTAiLCJ3MCIsInV4MSIsInV5MSIsIncxIiwiZDIiLCJsb2ciLCJkMSIsImIwIiwiYjEiLCJyMCIsInIxIiwiY29zaHIwIiwiZDNfc2luaCIsInRyYW5zbGF0ZTAiLCJjZW50ZXIwIiwiY2VudGVyIiwibW91c2V3aGVlbFRpbWVyIiwidG91Y2h0aW1lIiwieDAiLCJ4MSIsInkwIiwieTEiLCJkM19iZWhhdmlvcl96b29tSW5maW5pdHkiLCJ6b29taW5nIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsIm1vdXNlZG93bmVkIiwiZDNfYmVoYXZpb3Jfem9vbVdoZWVsIiwibW91c2V3aGVlbGVkIiwiZGJsY2xpY2tlZCIsInRvdWNoc3RhcnRlZCIsInNjYWxlVG8iLCJ0cmFuc2xhdGVUbyIsInpvb21UbyIsInRoYXQiLCJfX2NoYXJ0X18iLCJwb3ciLCJyZXNjYWxlIiwiZG9tYWluIiwiaW52ZXJ0Iiwiem9vbXN0YXJ0ZWQiLCJ6b29tZWQiLCJ6b29tZW5kZWQiLCJsb2NhdGlvbjAiLCJkM19zZWxlY3Rpb25faW50ZXJydXB0Iiwic2NhbGUwIiwibG9jYXRpb25zMCIsImRpc3RhbmNlMCIsInpvb21OYW1lIiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJ0YXJnZXRzIiwicmVsb2NhdGUiLCJzdGFydGVkIiwibW92ZWQiLCJlbmRlZCIsImNoYW5nZWQiLCJMTjIiLCJsMCIsImwxIiwiZGlzdGFuY2UxIiwic2NhbGUxIiwiZDNfYmVoYXZpb3Jfem9vbURlbHRhIiwidmlldzEiLCJkM190cmFuc2l0aW9uSW5oZXJpdElkIiwidHdlZW4iLCJjeCIsImN5IiwiY29weSIsImQzX2NvbG9yIiwiZDNfaHNsIiwiZDNfcmdiX3BhcnNlIiwiZDNfcmdiX2hzbCIsImQzX2hzbFByb3RvdHlwZSIsImQzX2hzbF9yZ2IiLCJtMSIsIm0yIiwidnYiLCJkM19yZ2IiLCJkM19oY2wiLCJkM19sYWJfaGNsIiwiZDNfbGFiIiwiZDNfcmdiX2xhYiIsImJyaWdodGVyIiwiZGFya2VyIiwiaGNsIiwiZDNfaGNsUHJvdG90eXBlIiwiZDNfaGNsX2xhYiIsImNvcyIsImQzX2xhYl9LIiwibGFiIiwiZDNfbGFiX1giLCJkM19sYWJfWSIsImQzX2xhYl9aIiwiZDNfbGFiUHJvdG90eXBlIiwiZDNfbGFiX3JnYiIsImQzX3h5el9yZ2IiLCJkM19sYWJfeHl6IiwiYXRhbjIiLCJkM194eXpfbGFiIiwiZDNfcmdiTnVtYmVyIiwiZDNfcmdiU3RyaW5nIiwiZDNfcmdiUHJvdG90eXBlIiwiZDNfcmdiX2hleCIsImZvcm1hdCIsImQzX3JnYl9wYXJzZU51bWJlciIsImQzX3JnYl9uYW1lcyIsImQzX3JnYl94eXoiLCJhbGljZWJsdWUiLCJhbnRpcXVld2hpdGUiLCJhcXVhIiwiYXF1YW1hcmluZSIsImF6dXJlIiwiYmVpZ2UiLCJiaXNxdWUiLCJibGFuY2hlZGFsbW9uZCIsImJsdWUiLCJibHVldmlvbGV0IiwiYnJvd24iLCJidXJseXdvb2QiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGVzbW9rZSIsInllbGxvdyIsInllbGxvd2dyZWVuIiwiZDNfZnVuY3RvciIsImQzX3hoclR5cGUiLCJyZXNwb25zZSIsIm1pbWVUeXBlIiwiZDNfeGhyIiwieGhyIiwiaGVhZGVycyIsInJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsInJlc3BvbnNlVHlwZSIsInJlc3BvbmQiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJkM194aHJIYXNSZXNwb25zZSIsImxvYWQiLCJYRG9tYWluUmVxdWVzdCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwib25wcm9ncmVzcyIsInByb2dyZXNzIiwiaGVhZGVyIiwic2VuZCIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwiYmVmb3Jlc2VuZCIsImFib3J0IiwiZDNfeGhyX2ZpeENhbGxiYWNrIiwiZnVuY3RvciIsImRzdiIsInJlRm9ybWF0IiwiZGVsaW1pdGVyQ29kZSIsInR5cGVkUmVzcG9uc2UiLCJmb3JtYXRSb3ciLCJmb3JtYXRWYWx1ZSIsInBhcnNlUm93cyIsImVvbCIsIkVPTCIsIkVPRiIsInJvd3MiLCJ0b2tlbiIsImZvcm1hdFJvd3MiLCJmaWVsZFNldCIsImZpZWxkcyIsImZpZWxkIiwidHN2IiwiZDNfdGltZXJfcXVldWVIZWFkIiwiZDNfdGltZXJfcXVldWVUYWlsIiwiZDNfdGltZXJfaW50ZXJ2YWwiLCJkM190aW1lcl90aW1lb3V0IiwiZDNfdGltZXJfZnJhbWUiLCJkM190aW1lciIsImRlbGF5IiwidGltZXIiLCJkM190aW1lcl9zdGVwIiwiZDNfdGltZXJfbWFyayIsImQzX3RpbWVyX3N3ZWVwIiwiaXNGaW5pdGUiLCJ0MCIsInQxIiwiZDNfZm9ybWF0X3ByZWNpc2lvbiIsIkxOMTAiLCJmbHVzaCIsImQzX2Zvcm1hdFByZWZpeGVzIiwiZDNfbG9jYWxlX251bWJlckZvcm1hdCIsImxvY2FsZV9kZWNpbWFsIiwiZGVjaW1hbCIsImxvY2FsZV90aG91c2FuZHMiLCJ0aG91c2FuZHMiLCJsb2NhbGVfZ3JvdXBpbmciLCJncm91cGluZyIsImxvY2FsZV9jdXJyZW5jeSIsImN1cnJlbmN5IiwiZm9ybWF0R3JvdXAiLCJzcGVjaWZpZXIiLCJkM19mb3JtYXRfcmUiLCJhbGlnbiIsInNpZ24iLCJ6ZmlsbCIsImNvbW1hIiwicHJlY2lzaW9uIiwic3VmZml4IiwiZXhwb25lbnQiLCJkM19mb3JtYXRfdHlwZXMiLCJkM19mb3JtYXRfdHlwZURlZmF1bHQiLCJ6Y29tbWEiLCJmdWxsU3VmZml4IiwibmVnYXRpdmUiLCJ1bml0IiwiZm9ybWF0UHJlZml4IiwiYWZ0ZXIiLCJ0b1ByZWNpc2lvbiIsInRvRXhwb25lbnRpYWwiLCJkM190aW1lIiwiZDNfZGF0ZSIsImQzX2RhdGVfdXRjIiwiVVRDIiwiZ2V0RGF0ZSIsImdldFVUQ0RhdGUiLCJnZXREYXkiLCJnZXRVVENEYXkiLCJnZXRGdWxsWWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0SG91cnMiLCJnZXRVVENIb3VycyIsImdldE1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldE1pbnV0ZXMiLCJnZXRVVENNaW51dGVzIiwiZ2V0TW9udGgiLCJnZXRVVENNb250aCIsImdldFNlY29uZHMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VGltZSIsImdldFRpbWV6b25lT2Zmc2V0Iiwic2V0RGF0ZSIsImQzX3RpbWVfcHJvdG90eXBlIiwic2V0VVRDRGF0ZSIsInNldERheSIsInNldFVUQ0RheSIsInNldEZ1bGxZZWFyIiwic2V0VVRDRnVsbFllYXIiLCJzZXRIb3VycyIsInNldFVUQ0hvdXJzIiwic2V0TWlsbGlzZWNvbmRzIiwic2V0VVRDTWlsbGlzZWNvbmRzIiwic2V0TWludXRlcyIsInNldFVUQ01pbnV0ZXMiLCJzZXRNb250aCIsInNldFVUQ01vbnRoIiwic2V0U2Vjb25kcyIsInNldFVUQ1NlY29uZHMiLCJzZXRUaW1lIiwiZDNfdGltZV9pbnRlcnZhbCIsImQwIiwiZHQiLCJ0aW1lcyIsInV0YyIsImQzX3RpbWVfaW50ZXJ2YWxfdXRjIiwiZDNfbG9jYWxlX3RpbWVGb3JtYXQiLCJsb2NhbGVfZGF0ZVRpbWUiLCJkYXRlVGltZSIsImxvY2FsZV9kYXRlIiwibG9jYWxlX3RpbWUiLCJsb2NhbGVfcGVyaW9kcyIsInBlcmlvZHMiLCJsb2NhbGVfZGF5cyIsImRheXMiLCJsb2NhbGVfc2hvcnREYXlzIiwic2hvcnREYXlzIiwibG9jYWxlX21vbnRocyIsIm1vbnRocyIsImxvY2FsZV9zaG9ydE1vbnRocyIsInNob3J0TW9udGhzIiwiZDNfdGltZV9mb3JtYXQiLCJ0ZW1wbGF0ZSIsImQzX3RpbWVfZm9ybWF0UGFkcyIsImQzX3RpbWVfZm9ybWF0cyIsImQzX3RpbWVfcGFyc2UiLCJsb2NhbFoiLCJkM190aW1lX3BhcnNlcnMiLCJtdWx0aSIsImQzX3RpbWVfZm9ybWF0TXVsdGkiLCJkM190aW1lX3BlcmlvZExvb2t1cCIsImQzX3RpbWVfZGF5UmUiLCJkM190aW1lX2Zvcm1hdFJlIiwiZDNfdGltZV9kYXlMb29rdXAiLCJkM190aW1lX2Zvcm1hdExvb2t1cCIsImQzX3RpbWVfZGF5QWJicmV2UmUiLCJkM190aW1lX2RheUFiYnJldkxvb2t1cCIsImQzX3RpbWVfbW9udGhSZSIsImQzX3RpbWVfbW9udGhMb29rdXAiLCJkM190aW1lX21vbnRoQWJicmV2UmUiLCJkM190aW1lX21vbnRoQWJicmV2TG9va3VwIiwiZDNfdGltZV9mb3JtYXRQYWQiLCJkYXlPZlllYXIiLCJzdW5kYXlPZlllYXIiLCJtb25kYXlPZlllYXIiLCJkM190aW1lX3pvbmUiLCIlIiwiZDNfdGltZV9wYXJzZURheSIsImQzX3RpbWVfcGFyc2VIb3VyMjQiLCJkM190aW1lX3BhcnNlRGF5T2ZZZWFyIiwiZDNfdGltZV9wYXJzZU1pbGxpc2Vjb25kcyIsImQzX3RpbWVfcGFyc2VNb250aE51bWJlciIsImQzX3RpbWVfcGFyc2VNaW51dGVzIiwiZDNfdGltZV9wYXJzZVNlY29uZHMiLCJkM190aW1lX3BhcnNlV2Vla051bWJlclN1bmRheSIsImQzX3RpbWVfcGFyc2VXZWVrZGF5TnVtYmVyIiwiZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJNb25kYXkiLCJkM190aW1lX3BhcnNlWWVhciIsImQzX3RpbWVfcGFyc2VGdWxsWWVhciIsImQzX3RpbWVfcGFyc2Vab25lIiwiZDNfdGltZV9wYXJzZUxpdGVyYWxQZXJjZW50IiwieWVhcnMiLCJpbnRlcnZhbCIsInN1bmRheSIsIndlZWtzIiwid2Vla09mWWVhciIsIi0iLCIwIiwiZDNfdGltZV9udW1iZXJSZSIsImQzX3RpbWVfcGVyY2VudFJlIiwienMiLCJ6bSIsImZvcm1hdHMiLCJudW1iZXJGb3JtYXQiLCJ0aW1lRm9ybWF0IiwiZDNfbG9jYWxlX2VuVVMiLCJkM19hZGRlciIsImdlbyIsImQzX2FkZGVyU3VtIiwiZDNfYWRkZXJUZW1wIiwiYnYiLCJhdiIsImQzX2dlb19zdHJlYW1HZW9tZXRyeSIsImdlb21ldHJ5IiwiZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZSIsInN0cmVhbSIsImQzX2dlb19zdHJlYW1PYmplY3RUeXBlIiwiRmVhdHVyZSIsImZlYXR1cmUiLCJGZWF0dXJlQ29sbGVjdGlvbiIsImZlYXR1cmVzIiwiU3BoZXJlIiwic3BoZXJlIiwiUG9pbnQiLCJjb29yZGluYXRlcyIsIk11bHRpUG9pbnQiLCJMaW5lU3RyaW5nIiwiZDNfZ2VvX3N0cmVhbUxpbmUiLCJNdWx0aUxpbmVTdHJpbmciLCJQb2x5Z29uIiwiZDNfZ2VvX3N0cmVhbVBvbHlnb24iLCJNdWx0aVBvbHlnb24iLCJHZW9tZXRyeUNvbGxlY3Rpb24iLCJnZW9tZXRyaWVzIiwiY2xvc2VkIiwiY29vcmRpbmF0ZSIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJwb2x5Z29uU3RhcnQiLCJwb2x5Z29uRW5kIiwiZDNfZ2VvX2FyZWFTdW0iLCJkM19nZW9fYXJlYSIsImQzX2dlb19jZW50cm9pZFcwIiwiZDNfZ2VvX2NlbnRyb2lkVzEiLCJkM19nZW9fY2VudHJvaWRYMCIsImQzX2dlb19jZW50cm9pZFkwIiwiZDNfZ2VvX2NlbnRyb2lkWjAiLCJkM19nZW9fY2VudHJvaWRYMSIsImQzX2dlb19jZW50cm9pZFkxIiwiZDNfZ2VvX2NlbnRyb2lkWjEiLCJkM19nZW9fY2VudHJvaWRYMiIsImQzX2dlb19jZW50cm9pZFkyIiwiZDNfZ2VvX2NlbnRyb2lkWjIiLCJkM19nZW9fYXJlYVJpbmdTdW0iLCJkM19nZW9fYXJlYVJpbmdTdGFydCIsIs67MDAiLCLPhjAwIiwizrswIiwiY29zz4YwIiwic2luz4YwIiwibmV4dFBvaW50IiwizrsiLCLPhiIsImTOuyIsInNkzrsiLCJhZM67IiwiY29zz4YiLCJzaW7PhiIsImQzX2dlb19jYXJ0ZXNpYW4iLCJzcGhlcmljYWwiLCJkM19nZW9fY2FydGVzaWFuRG90IiwiZDNfZ2VvX2NhcnRlc2lhbkNyb3NzIiwiZDNfZ2VvX2NhcnRlc2lhbkFkZCIsImQzX2dlb19jYXJ0ZXNpYW5TY2FsZSIsInZlY3RvciIsImQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUiLCJkM19nZW9fc3BoZXJpY2FsIiwiY2FydGVzaWFuIiwiZDNfZ2VvX3NwaGVyaWNhbEVxdWFsIiwiYm91bmRzIiwiz4YwIiwizrsxIiwiz4YxIiwizrtfIiwizrtfXyIsIs+GX18iLCJkzrtTdW0iLCJyYW5nZXMiLCJib3VuZCIsInJpbmdQb2ludCIsInJpbmdTdGFydCIsInJpbmdFbmQiLCJsaW5lUG9pbnQiLCJub3JtYWwiLCJpbmZsZWN0aW9uIiwizrtpIiwiYW50aW1lcmlkaWFuIiwiz4ZpIiwiYW5nbGUiLCJjb21wYXJlUmFuZ2VzIiwid2l0aGluUmFuZ2UiLCJiZXN0IiwiY2VudHJvaWQiLCJkM19nZW9fY2VudHJvaWQiLCJkM19nZW9fY2VudHJvaWRQb2ludCIsImQzX2dlb19jZW50cm9pZExpbmVTdGFydCIsImQzX2dlb19jZW50cm9pZExpbmVFbmQiLCJkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQiLCJkM19nZW9fY2VudHJvaWRQb2ludFhZWiIsInowIiwiY3oiLCJkM19nZW9fY29tcG9zZSIsImNvbXBvc2UiLCJkM190cnVlIiwiZDNfZ2VvX2NsaXBQb2x5Z29uIiwic2VnbWVudHMiLCJjbGlwU3RhcnRJbnNpZGUiLCJjbGlwIiwic2VnbWVudCIsImQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbiIsImQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhciIsImVudHJ5IiwicG9pbnRzIiwiaXNTdWJqZWN0Iiwib3RoZXIiLCJkM19nZW9fY2xpcCIsInBvaW50VmlzaWJsZSIsImNsaXBMaW5lIiwiY2xpcFN0YXJ0Iiwicm90YXRlIiwicm90YXRlZENsaXBTdGFydCIsInBvaW50UmluZyIsInBvbHlnb24iLCJtZXJpZGlhbiIsInBhcmFsbGVsIiwibWVyaWRpYW5Ob3JtYWwiLCJwb2xhckFuZ2xlIiwid2luZGluZyIsInJpbmciLCJwb2ludDAiLCJhcmMiLCJpbnRlcnNlY3Rpb24iLCLPhmFyYyIsImQzX2dlb19wb2ludEluUG9seWdvbiIsInBvbHlnb25TdGFydGVkIiwiZDNfZ2VvX2NsaXBTb3J0IiwicG9pbnRMaW5lIiwiYnVmZmVyIiwiZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lciIsInJpbmdMaXN0ZW5lciIsImNsZWFuIiwicmluZ1NlZ21lbnRzIiwiZDNfZ2VvX2NsaXBTZWdtZW50TGVuZ3RoMSIsImxpbmVzIiwicmVqb2luIiwiZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4iLCJzzrswIiwic867MSIsImNvc8+GMSIsInNpbs67MF/OuzEiLCJhdGFuIiwiZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QiLCJkaXJlY3Rpb24iLCJkM19nZW9tX2NsaXBMaW5lIiwiYXgiLCJheSIsImQzX2dlb19jbGlwRXh0ZW50TUFYIiwiZDNfZ2VvX2NsaXBFeHRlbnQiLCJ4X18iLCJ5X18iLCJ2X18iLCJ4XyIsInlfIiwidl8iLCJmaXJzdCIsImxpc3RlbmVyXyIsImJ1ZmZlckxpc3RlbmVyIiwid24iLCJpbnNpZGVQb2x5Z29uIiwiaW5zaWRlIiwidmlzaWJsZSIsImExIiwiY29ybmVyIiwiY29tcGFyZVBvaW50cyIsImQzX2dlb19jb25pYyIsInByb2plY3RBdCIsImQzX2dlb19wcm9qZWN0aW9uTXV0YXRvciIsInBhcmFsbGVscyIsImQzX2dlb19jb25pY0VxdWFsQXJlYSIsIs+BMCIsImZvcndhcmQiLCLPgTBfeSIsImNsaXBFeHRlbnQiLCJvdXRwdXQiLCJ2YWxpZCIsImNvbmljRXF1YWxBcmVhIiwicmF3IiwiYWxiZXJzIiwiYWxiZXJzVXNhIiwibG93ZXI0OFBvaW50IiwiYWxhc2thUG9pbnQiLCJoYXdhaWlQb2ludCIsImxvd2VyNDgiLCJhbGFza2EiLCJoYXdhaWkiLCJwb2ludFN0cmVhbSIsImxvd2VyNDhTdHJlYW0iLCJhbGFza2FTdHJlYW0iLCJoYXdhaWlTdHJlYW0iLCJkM19nZW9fcGF0aEFyZWFTdW0iLCJkM19nZW9fcGF0aEFyZWFQb2x5Z29uIiwiZDNfZ2VvX3BhdGhCb3VuZHNYMCIsImQzX2dlb19wYXRoQm91bmRzWTAiLCJkM19nZW9fcGF0aEJvdW5kc1gxIiwiZDNfZ2VvX3BhdGhCb3VuZHNZMSIsImQzX2dlb19wYXRoQXJlYSIsImQzX2dlb19wYXRoQXJlYVJpbmdTdGFydCIsIngwMCIsInkwMCIsImQzX2dlb19wYXRoQm91bmRzIiwiZDNfZ2VvX3BhdGhCdWZmZXIiLCJwb2ludENpcmNsZSIsImQzX2dlb19wYXRoQnVmZmVyQ2lyY2xlIiwicG9pbnRMaW5lU3RhcnQiLCJsaW5lRW5kUG9seWdvbiIsInBvaW50UmFkaXVzIiwicmFkaXVzIiwiZDNfZ2VvX2xlbmd0aFN1bSIsImQzX2dlb19wYXRoQ2VudHJvaWQiLCJkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQiLCJkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0IiwiZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQiLCJkM19nZW9fcGF0aENlbnRyb2lkUmluZ1N0YXJ0IiwiZDNfZ2VvX3BhdGhDb250ZXh0IiwibW92ZVRvIiwibGluZVRvIiwiY2xvc2VQYXRoIiwiZDNfZ2VvX3Jlc2FtcGxlIiwicHJvamVjdCIsIs60MiIsImNvc01pbkRpc3RhbmNlIiwibWF4RGVwdGgiLCJyZXNhbXBsZSIsImEwMCIsImIwMCIsImMwMCIsImEwIiwiYzAiLCJyZXNhbXBsZUxpbmVUbyIsImQzX2dlb190cmFuc2Zvcm1Qb2ludCIsImMxIiwiz4YyIiwizrsyIiwieDIiLCJ5MiIsImR4MiIsImR5MiIsImR6IiwiZDNfZ2VvX3RyYW5zZm9ybSIsImQzX2dlb19wcm9qZWN0aW9uIiwicHJvamVjdFJvdGF0ZSIsIs60eCIsIs60eSIsInByb2plY3RSZXNhbXBsZSIsIs60zrsiLCLOtM+GIiwizrTOsyIsInByZWNsaXAiLCJwb3N0Y2xpcCIsImNsaXBBbmdsZSIsImQzX2dlb19yb3RhdGlvbiIsImludmFsaWRhdGUiLCJkM19nZW9fcHJvamVjdGlvblJhZGlhbnMiLCJjciIsInNtYWxsUmFkaXVzIiwibm90SGVtaXNwaGVyZSIsInYwIiwidjAwIiwicG9pbnQyIiwicG9pbnQxIiwiaW50ZXJzZWN0IiwiZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlIiwidHdvIiwibjEiLCJuMiIsIm4ybjIiLCJuMW4yIiwiZGV0ZXJtaW5hbnQiLCJjMiIsIm4xeG4yIiwidXUiLCJ0MiIsInBvbGFyIiwicTEiLCJkM19nZW9fY2xpcENpcmNsZSIsImQzX2dlb19lcXVpcmVjdGFuZ3VsYXIiLCJkM19nZW9faWRlbnRpdHlSb3RhdGlvbiIsImQzX2dlb19yb3RhdGlvbs67IiwiZDNfZ2VvX3JvdGF0aW9uz4bOsyIsImQzX2dlb19mb3J3YXJkUm90YXRpb27OuyIsInJvdGF0aW9uIiwiY29zzrTPhiIsInNpbs60z4YiLCJjb3POtM6zIiwic2luzrTOsyIsInNyIiwiZDNfZ2VvX2NpcmNsZUFuZ2xlIiwiZDNfZ2VvX2dyYXRpY3VsZVgiLCJkM19nZW9fZ3JhdGljdWxlWSIsImQzX3NvdXJjZSIsImQzX3RhcmdldCIsInBhdGgiLCJwcm9qZWN0U3RyZWFtIiwiY29udGV4dFN0cmVhbSIsImNhY2hlU3RyZWFtIiwibWV0aG9kcyIsInByb2plY3Rpb25NdXRhdG9yIiwiZXF1aXJlY3Rhbmd1bGFyIiwiZGlzdGFuY2UiLCLOlM67Iiwic2luzpTOuyIsImNvc86UzrsiLCJzaW7PhjEiLCJncmF0aWN1bGUiLCJYMSIsIlgwIiwiWTEiLCJZMCIsIkRYIiwiRFkiLCJvdXRsaW5lIiwibWFqb3JFeHRlbnQiLCJtaW5vckV4dGVudCIsIm1ham9yU3RlcCIsIm1pbm9yU3RlcCIsImdyZWF0QXJjIiwic291cmNlXyIsInRhcmdldF8iLCJjeTAiLCJzeTAiLCJjeTEiLCJzeTEiLCJreDAiLCJreTAiLCJreDEiLCJreTEiLCJkM19nZW9fbGVuZ3RoIiwiZDNfZ2VvX2F6aW11dGhhbCIsImF6aW11dGhhbCIsImNvc867Iiwic2luYyIsImNvc2MiLCJkM19nZW9fYXppbXV0aGFsRXF1YWxBcmVhIiwiY29zzrtjb3PPhiIsImF6aW11dGhhbEVxdWFsQXJlYSIsImQzX2dlb19hemltdXRoYWxFcXVpZGlzdGFudCIsImQzX2dlb19jb25pY0NvbmZvcm1hbCIsImQzX2dlb19tZXJjYXRvciIsImQzX2dlb19jb25pY0VxdWlkaXN0YW50IiwiYXppbXV0aGFsRXF1aWRpc3RhbnQiLCJjb25pY0NvbmZvcm1hbCIsImNvbmljRXF1aWRpc3RhbnQiLCJkM19nZW9fZ25vbW9uaWMiLCJkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uIiwiY2xpcEF1dG8iLCJnbm9tb25pYyIsIm1lcmNhdG9yIiwiZDNfZ2VvX29ydGhvZ3JhcGhpYyIsIm9ydGhvZ3JhcGhpYyIsImQzX2dlb19zdGVyZW9ncmFwaGljIiwiZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvciIsImQzX2dlb21fcG9pbnRYIiwiZDNfZ2VvbV9wb2ludFkiLCJkM19nZW9tX2h1bGxVcHBlciIsImh1bGwiLCJocyIsImQzX2dlb21faHVsbE9yZGVyIiwic3RlcmVvZ3JhcGhpYyIsInRyYW5zdmVyc2VNZXJjYXRvciIsImdlb20iLCJ2ZXJ0aWNlcyIsImZ4IiwiZnkiLCJmbGlwcGVkUG9pbnRzIiwidXBwZXIiLCJsb3dlciIsInNraXBMZWZ0Iiwic2tpcFJpZ2h0IiwiZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlIiwiZDNfZ2VvbV9wb2x5Z29uSW5zaWRlIiwiZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0IiwieDMiLCJ4MjEiLCJ4NDMiLCJ5MyIsInkyMSIsInk0MyIsImQzX2dlb21fcG9seWdvbkNsb3NlZCIsImQzX2dlb21fdm9yb25vaUVkZ2VzIiwiZDNfZ2VvbV92b3Jvbm9pQ2VsbHMiLCJkM19nZW9tX3Zvcm9ub2lCZWFjaGVzIiwiZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUiLCJkM19nZW9tX3Zvcm9ub2lDaXJjbGVzIiwiZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbCIsImQzX2dlb21fdm9yb25vaUJlYWNoIiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlIiwiZWRnZSIsInNpdGUiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaCIsImJlYWNoIiwiZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2giLCJkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUiLCJkM19nZW9tX3Zvcm9ub2lSZW1vdmVCZWFjaCIsInZlcnRleCIsImRpc2FwcGVhcmluZyIsImxBcmMiLCJ1bnNoaWZ0IiwickFyYyIsImlBcmMiLCJuQXJjcyIsImQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlIiwiZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2giLCJkeGwiLCJkeHIiLCJkaXJlY3RyaXgiLCJkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludCIsImQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludCIsIm5ld0FyYyIsImxTaXRlIiwiYngiLCJieSIsInJTaXRlIiwicmZvY3giLCJyZm9jeSIsInBieTIiLCJsZm9jeCIsImxmb2N5IiwicGxieTIiLCJobCIsImFieTIiLCJkM19nZW9tX3Zvcm9ub2lDZWxsIiwiZWRnZXMiLCJkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlIiwiY1NpdGUiLCJkM19nZW9tX3Zvcm9ub2lDb25uZWN0RWRnZSIsImZtIiwibHgiLCJseSIsInJ4IiwicnkiLCJkM19nZW9tX3Zvcm9ub2lFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0IiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdCIsImQzX2dlb21fdm9yb25vaSIsInNpdGVzIiwiYmJveCIsImQzX2dlb21fdm9yb25vaVZlcnRleE9yZGVyIiwiZDNfZ2VvbV92b3Jvbm9pQ2xpcEVkZ2VzIiwiY2VsbCIsImlIYWxmRWRnZSIsImhhbGZFZGdlcyIsIm5IYWxmRWRnZXMiLCJjZWxscyIsImlDZWxsIiwicHJlcGFyZSIsImQzX2dlb21fdm9yb25vaUNsb3NlQ2VsbHMiLCJkaWFncmFtIiwiZ3JhbmRwYSIsInVuY2xlIiwidm9yb25vaSIsImQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQiLCJwb2x5Z29ucyIsInRyaWFuZ2xlcyIsInMwIiwiczEiLCJkM19nZW9tX3F1YWR0cmVlQ29tcGF0WCIsImQzX2dlb21fcXVhZHRyZWVDb21wYXRZIiwiZDNfaW50ZXJwb2xhdGVSZ2IiLCJhciIsImQzX2ludGVycG9sYXRlT2JqZWN0IiwiZDNfaW50ZXJwb2xhdGUiLCJkM19pbnRlcnBvbGF0ZU51bWJlciIsImQzX2ludGVycG9sYXRlU3RyaW5nIiwiYW0iLCJibSIsImJzIiwiZDNfaW50ZXJwb2xhdGVfbnVtYmVyQSIsImQzX2ludGVycG9sYXRlX251bWJlckIiLCJkZWxhdW5heSIsInF1YWR0cmVlIiwiY29tcGF0IiwieHMiLCJ5cyIsIngxXyIsInkxXyIsIngyXyIsInkyXyIsImxlYWYiLCJueCIsIm55IiwiaW5zZXJ0Q2hpbGQiLCJuUG9pbnQiLCJ4bSIsInltIiwiYmVsb3ciLCJyb290IiwidmlzaXQiLCJkM19nZW9tX3F1YWR0cmVlVmlzaXQiLCJzeCIsInN5IiwiZmluZCIsImNsb3Nlc3RQb2ludCIsIm1pbkRpc3RhbmNlMiIsImRpc3RhbmNlMiIsImQzX2dlb21fcXVhZHRyZWVGaW5kIiwiaW50ZXJwb2xhdGVSZ2IiLCJpbnRlcnBvbGF0ZU9iamVjdCIsImludGVycG9sYXRlTnVtYmVyIiwiaW50ZXJwb2xhdGVTdHJpbmciLCJpbnRlcnBvbGF0b3JzIiwiZDNfaW50ZXJwb2xhdGVBcnJheSIsImludGVycG9sYXRlQXJyYXkiLCJkM19lYXNlX2RlZmF1bHQiLCJkM19lYXNlIiwibGluZWFyIiwicG9seSIsInF1YWQiLCJkM19lYXNlX3F1YWQiLCJjdWJpYyIsImQzX2Vhc2VfY3ViaWMiLCJkM19lYXNlX3NpbiIsImQzX2Vhc2VfZXhwIiwiZDNfZWFzZV9jaXJjbGUiLCJlbGFzdGljIiwiYmFjayIsImJvdW5jZSIsImQzX2Vhc2VfYm91bmNlIiwiZDNfZWFzZV9tb2RlIiwiaW4iLCJvdXQiLCJkM19lYXNlX3JldmVyc2UiLCJpbi1vdXQiLCJkM19lYXNlX3JlZmxlY3QiLCJvdXQtaW4iLCJkM19lYXNlX2N1YmljSW5PdXQiLCJ0MyIsImQzX2ludGVycG9sYXRlUm91bmQiLCJkM190cmFuc2Zvcm0iLCJreCIsImQzX3RyYW5zZm9ybU5vcm1hbGl6ZSIsImt6IiwiZDNfdHJhbnNmb3JtRG90Iiwia3kiLCJza2V3IiwiZWFzZSIsImludGVycG9sYXRlSGNsIiwiYWwiLCJibCIsImludGVycG9sYXRlSHNsIiwiaW50ZXJwb2xhdGVMYWIiLCJpbnRlcnBvbGF0ZVJvdW5kIiwiYmFzZVZhbCIsImNvbnNvbGlkYXRlIiwiZDNfdHJhbnNmb3JtSWRlbnRpdHkiLCJkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcCIsImQzX2ludGVycG9sYXRlVHJhbnNmb3JtIiwiZDNfaW50ZXJwb2xhdGVUcmFuc2xhdGUiLCJkM19pbnRlcnBvbGF0ZVJvdGF0ZSIsImQzX2ludGVycG9sYXRlU2tldyIsImQzX2ludGVycG9sYXRlU2NhbGUiLCJkM191bmludGVycG9sYXRlTnVtYmVyIiwiZDNfdW5pbnRlcnBvbGF0ZUNsYW1wIiwiZDNfbGF5b3V0X2J1bmRsZVBhdGgiLCJsY2EiLCJhTm9kZXMiLCJkM19sYXlvdXRfYnVuZGxlQW5jZXN0b3JzIiwiYk5vZGVzIiwiYU5vZGUiLCJiTm9kZSIsInNoYXJlZE5vZGUiLCJkM19sYXlvdXRfYnVuZGxlTGVhc3RDb21tb25BbmNlc3RvciIsImQzX2xheW91dF9mb3JjZURyYWdzdGFydCIsImZpeGVkIiwiZDNfbGF5b3V0X2ZvcmNlRHJhZ2VuZCIsImQzX2xheW91dF9mb3JjZU1vdXNlb3ZlciIsInB4IiwicHkiLCJkM19sYXlvdXRfZm9yY2VNb3VzZW91dCIsImludGVycG9sYXRlVHJhbnNmb3JtIiwiYnVuZGxlIiwicGF0aHMiLCJjaG9yZCIsImNob3JkcyIsInNvcnRHcm91cHMiLCJzb3J0U3ViZ3JvdXBzIiwic29ydENob3JkcyIsInJlbGF5b3V0IiwiZ3JvdXBTdW1zIiwiZ3JvdXBJbmRleCIsInN1Ymdyb3VwSW5kZXgiLCJkaiIsInN1YmluZGV4Iiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwicmVzb3J0IiwiZm9yY2UiLCJhbHBoYSIsImRpc3RhbmNlcyIsInN0cmVuZ3RocyIsImNoYXJnZXMiLCJmcmljdGlvbiIsImxpbmtEaXN0YW5jZSIsImQzX2xheW91dF9mb3JjZUxpbmtEaXN0YW5jZSIsImxpbmtTdHJlbmd0aCIsImQzX2xheW91dF9mb3JjZUxpbmtTdHJlbmd0aCIsImNoYXJnZSIsImNoYXJnZURpc3RhbmNlMiIsImQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiIsImdyYXZpdHkiLCJ0aGV0YTIiLCJyZXB1bHNlIiwiZHciLCJkbiIsInBvaW50Q2hhcmdlIiwiZHJhZ21vdmUiLCJyZXN1bWUiLCJ0aWNrIiwid2VpZ2h0IiwiZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZSIsImNoYXJnZURpc3RhbmNlIiwidGhldGEiLCJuZWlnaGJvcnMiLCJkaW1lbnNpb24iLCJjYW5kaWRhdGVzIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZCIsImhpZXJhcmNoeSIsImQzX2xheW91dF9oaWVyYXJjaHlMaW5rcyIsImQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZSIsImQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyIiwibm9kZXMyIiwiZDNfbGF5b3V0X2hpZXJhcmNoeUNoaWxkcmVuIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVNvcnQiLCJjaGlsZHMiLCJyZXZhbHVlIiwicGFydGl0aW9uIiwicGllIiwiTnVtYmVyIiwiZDNfbGF5b3V0X3BpZVNvcnRCeVZhbHVlIiwicGFkQW5nbGUiLCJhcmNzIiwiZDNfbGF5b3V0X3N0YWNrWCIsImQzX2xheW91dF9zdGFja1kiLCJkM19sYXlvdXRfc3RhY2tPdXQiLCJkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHQiLCJkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvIiwic2VyaWVzIiwib3JkZXJzIiwib2Zmc2V0cyIsImQzX2xheW91dF9zdGFja09yZGVycyIsImQzX2xheW91dF9zdGFja09mZnNldHMiLCJpbnNpZGUtb3V0IiwiZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgiLCJzdW1zIiwiZDNfbGF5b3V0X3N0YWNrUmVkdWNlU3VtIiwidG9wcyIsImJvdHRvbXMiLCJzaWxob3VldHRlIiwid2lnZ2xlIiwiczIiLCJzMyIsIm8wIiwiZXhwYW5kIiwiemVybyIsImQzX2xheW91dF9zdGFja1N1bSIsImQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbVJhbmdlIiwiZDNfbGF5b3V0X3BhY2tTb3J0IiwiZDNfbGF5b3V0X3BhY2tJbnNlcnQiLCJfcGFja19uZXh0IiwiX3BhY2tfcHJldiIsImQzX2xheW91dF9wYWNrU3BsaWNlIiwiZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzIiwiZHIiLCJkM19sYXlvdXRfcGFja1NpYmxpbmdzIiwieE1pbiIsInhNYXgiLCJ5TWluIiwieU1heCIsImQzX2xheW91dF9wYWNrTGluayIsImQzX2xheW91dF9wYWNrUGxhY2UiLCJpc2VjdCIsImQzX2xheW91dF9wYWNrVW5saW5rIiwiZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uIiwiZDNfbGF5b3V0X3RyZWVMZWZ0IiwiZDNfbGF5b3V0X3RyZWVSaWdodCIsImQzX2xheW91dF90cmVlTW92ZSIsIndtIiwid3AiLCJkM19sYXlvdXRfdHJlZUFuY2VzdG9yIiwidmltIiwiYW5jZXN0b3IiLCJkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwiLCJkM19sYXlvdXRfdHJlZW1hcFBhZCIsImQzX3NjYWxlRXh0ZW50IiwiZDNfc2NhbGVSYW5nZSIsInJhbmdlRXh0ZW50IiwiZDNfc2NhbGVfYmlsaW5lYXIiLCJ1bmludGVycG9sYXRlIiwiZDNfc2NhbGVfbmljZSIsIm5pY2UiLCJkM19zY2FsZV9uaWNlU3RlcCIsImQzX3NjYWxlX25pY2VJZGVudGl0eSIsImhpc3RvZ3JhbSIsImZyZXF1ZW5jeSIsInZhbHVlciIsInJhbmdlciIsImJpbm5lciIsImJpbiIsImJpbnMiLCJ0aHJlc2hvbGRzIiwicGFjayIsImQzX2xheW91dF9wYWNrVHJhbnNmb3JtIiwicm9vdDAiLCJyb290MSIsIm5vZGUxIiwid3JhcFRyZWUiLCJmaXJzdFdhbGsiLCJzZWNvbmRXYWxrIiwic2l6ZU5vZGUiLCJ0eCIsImQzX2xheW91dF90cmVlU2hpZnQiLCJtaWRwb2ludCIsInZpcCIsInZvcCIsInZvbSIsInNpcCIsInNvcCIsInNpbSIsInNvbSIsImFwcG9ydGlvbiIsImNsdXN0ZXIiLCJwcmV2aW91c05vZGUiLCJkM19sYXlvdXRfY2x1c3RlclgiLCJkM19sYXlvdXRfY2x1c3RlclkiLCJkM19sYXlvdXRfY2x1c3RlckxlZnQiLCJkM19sYXlvdXRfY2x1c3RlclJpZ2h0IiwidHJlZW1hcCIsInN0aWNraWVzIiwicGFkIiwic3RpY2t5IiwicmF0aW8iLCJzcXVhcmlmeSIsInNjb3JlIiwicmVtYWluaW5nIiwid29yc3QiLCJzdGlja2lmeSIsInJtYXgiLCJybWluIiwicGFkQ29uc3RhbnQiLCLCtSIsIs+DIiwibG9nTm9ybWFsIiwiYmF0ZXMiLCJpcndpbkhhbGwiLCJkM19zY2FsZV9wb2x5bGluZWFyIiwiZDNfc2NhbGVfbGluZWFyUmViaW5kIiwiZDNfc2NhbGVfbGluZWFyTmljZSIsImQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZSIsInNwYW4iLCJkM19zY2FsZV9saW5lYXJUaWNrcyIsImQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQiLCJkM19zY2FsZV9saW5lYXJQcmVjaXNpb24iLCJkM19zY2FsZV9saW5lYXJGb3JtYXRTaWduaWZpY2FudCIsImQzX3NjYWxlX2xpbmVhckZvcm1hdFByZWNpc2lvbiIsImQzX3NjYWxlX2xpbmVhciIsImNsYW1wIiwicmFuZ2VSb3VuZCIsInRpY2tzIiwidGlja0Zvcm1hdCIsImQzX3NjYWxlX2xvZyIsInBvc2l0aXZlIiwibmljZWQiLCJkM19zY2FsZV9sb2dOaWNlTmVnYXRpdmUiLCJkM19zY2FsZV9sb2dGb3JtYXQiLCJkM19zY2FsZV9wb3dQb3ciLCJkM19zY2FsZV9wb3ciLCJwb3dwIiwicG93YiIsIm9yZGluYWwiLCJkM19zY2FsZV9vcmRpbmFsIiwicmFuZ2VCYW5kIiwic3RlcHMiLCJyYW5nZVBvaW50cyIsInJhbmdlUm91bmRQb2ludHMiLCJyYW5nZUJhbmRzIiwib3V0ZXJQYWRkaW5nIiwicmFuZ2VSb3VuZEJhbmRzIiwiY2F0ZWdvcnkxMCIsImQzX2NhdGVnb3J5MTAiLCJjYXRlZ29yeTIwIiwiZDNfY2F0ZWdvcnkyMCIsImNhdGVnb3J5MjBiIiwiZDNfY2F0ZWdvcnkyMGIiLCJjYXRlZ29yeTIwYyIsImQzX2NhdGVnb3J5MjBjIiwiZDNfemVybyIsImQzX3NjYWxlX3F1YW50aWxlIiwicXVhbnRpbGVzIiwiaW52ZXJ0RXh0ZW50IiwicXVhbnRpemUiLCJkM19zY2FsZV9xdWFudGl6ZSIsInRocmVzaG9sZCIsImQzX3NjYWxlX3RocmVzaG9sZCIsImlkZW50aXR5IiwiZDNfc2NhbGVfaWRlbnRpdHkiLCJpbm5lclJhZGl1cyIsImQzX3N2Z19hcmNJbm5lclJhZGl1cyIsIm91dGVyUmFkaXVzIiwiZDNfc3ZnX2FyY091dGVyUmFkaXVzIiwiY29ybmVyUmFkaXVzIiwicGFkUmFkaXVzIiwiZDNfc3ZnX2FyY0F1dG8iLCJkM19zdmdfYXJjU3RhcnRBbmdsZSIsImQzX3N2Z19hcmNFbmRBbmdsZSIsImQzX3N2Z19hcmNQYWRBbmdsZSIsImN3IiwiY2lyY2xlU2VnbWVudCIsInJwIiwiYXAiLCJkM19zdmdfYXJjU3dlZXAiLCJoMSIsImgwIiwicmMxIiwicmMwIiwidDMwIiwiZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzIiwidDEyIiwidDAzIiwidDIxIiwieDAxIiwieTAxIiwib3giLCJveSIsImN4MCIsImN4MSIsImR4MCIsImR5MCIsImR4MSIsImR5MSIsImQzX3N2Z19saW5lIiwiZGVmaW5lZCIsImQzX3N2Z19saW5lTGluZWFyIiwiaW50ZXJwb2xhdGVLZXkiLCJ0ZW5zaW9uIiwiZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzIiwibGluZWFyLWNsb3NlZCIsImQzX3N2Z19saW5lTGluZWFyQ2xvc2VkIiwic3RlcC1iZWZvcmUiLCJkM19zdmdfbGluZVN0ZXBCZWZvcmUiLCJzdGVwLWFmdGVyIiwiZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIiLCJiYXNpcyIsImQzX3N2Z19saW5lQmFzaXMiLCJiYXNpcy1vcGVuIiwiZDNfc3ZnX2xpbmVEb3Q0IiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMiLCJkM19zdmdfbGluZUJhc2lzQmV6aWVyIiwiYmFzaXMtY2xvc2VkIiwiY2FyZGluYWwiLCJkM19zdmdfbGluZUhlcm1pdGUiLCJkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMiLCJjYXJkaW5hbC1vcGVuIiwiY2FyZGluYWwtY2xvc2VkIiwibW9ub3RvbmUiLCJ0YW5nZW50cyIsImQzX3N2Z19saW5lU2xvcGUiLCJkM19zdmdfbGluZUZpbml0ZURpZmZlcmVuY2VzIiwiZDNfc3ZnX2xpbmVNb25vdG9uZVRhbmdlbnRzIiwibHAiLCJwMiIsImQzX3N2Z19saW5lQmFzaXNCZXppZXIxIiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIiLCJkM19zdmdfbGluZVJhZGlhbCIsImQzX3N2Z19hcmVhIiwiaW50ZXJwb2xhdGVSZXZlcnNlIiwicG9pbnRzMCIsInBvaW50czEiLCJmeDAiLCJmeTAiLCJmeDEiLCJmeTEiLCJkM19zdmdfY2hvcmRSYWRpdXMiLCJkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uIiwiZDNfc3ZnX3N5bWJvbFNpemUiLCJkM19zdmdfc3ltYm9sVHlwZSIsImQzX3N2Z19zeW1ib2xDaXJjbGUiLCJyYWRpYWwiLCJjdXJ2ZSIsInAzIiwicHJvamVjdGlvbl8iLCJkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uIiwiZDNfc3ZnX3N5bWJvbHMiLCJjcm9zcyIsImRpYW1vbmQiLCJkM19zdmdfc3ltYm9sVGFuMzAiLCJzcXVhcmUiLCJ0cmlhbmdsZS1kb3duIiwiZDNfc3ZnX3N5bWJvbFNxcnQzIiwidHJpYW5nbGUtdXAiLCJzeW1ib2xUeXBlcyIsImQzX3RyYW5zaXRpb25JZCIsImQzX3RyYW5zaXRpb25OYW1lc3BhY2UiLCJkM190cmFuc2l0aW9uSW5oZXJpdCIsImQzX3RyYW5zaXRpb25Ob2RlIiwiZDNfdHJhbnNpdGlvbiIsImludGVycnVwdCIsImQzX3NlbGVjdGlvbl9pbnRlcnJ1cHROUyIsImxvY2siLCJhY3RpdmVJZCIsImQzX3RyYW5zaXRpb25Qcm90b3R5cGUiLCJkM190cmFuc2l0aW9uX3R3ZWVuIiwiZDNfdHJhbnNpdGlvbl90ZXh0IiwiaW5oZXJpdCIsInR3ZWVucyIsImVsYXBzZWQiLCJjYW5jZWxJZCIsImNhbmNlbCIsInN1Ym5vZGVzIiwibmFtZU5TIiwiYXR0ck51bGwiLCJhdHRyTnVsbE5TIiwiYXR0clR3ZWVuIiwic3R5bGVOdWxsIiwic3R5bGVUd2VlbiIsImluaGVyaXRJZCIsImlkMCIsImlkMSIsImF4aXMiLCJ0aWNrRm9ybWF0XyIsIm9yaWVudCIsImQzX3N2Z19heGlzRGVmYXVsdE9yaWVudCIsImlubmVyVGlja1NpemUiLCJvdXRlclRpY2tTaXplIiwidGlja1BhZGRpbmciLCJ0aWNrQXJndW1lbnRzXyIsInRpY2tWYWx1ZXMiLCJ0aWNrVHJhbnNmb3JtIiwidGlja0VudGVyIiwidGlja0V4aXQiLCJ0aWNrVXBkYXRlIiwidGlja1NwYWNpbmciLCJwYXRoVXBkYXRlIiwibGluZUVudGVyIiwibGluZVVwZGF0ZSIsInRleHRFbnRlciIsInRleHRVcGRhdGUiLCJkM19zdmdfYXhpc1giLCJkM19zdmdfYXhpc1kiLCJkM19zdmdfYXhpc09yaWVudHMiLCJ0aWNrU2l6ZSIsInRpY2tTdWJkaXZpZGUiLCJicnVzaCIsInhFeHRlbnREb21haW4iLCJ5RXh0ZW50RG9tYWluIiwieEV4dGVudCIsInlFeHRlbnQiLCJ4Q2xhbXAiLCJ5Q2xhbXAiLCJyZXNpemVzIiwiZDNfc3ZnX2JydXNoUmVzaXplcyIsImJydXNoc3RhcnQiLCJyZXNpemUiLCJkM19zdmdfYnJ1c2hDdXJzb3IiLCJnVXBkYXRlIiwiYmFja2dyb3VuZFVwZGF0ZSIsInJlZHJhd1giLCJyZWRyYXdZIiwicmVkcmF3IiwiZXZlbnRUYXJnZXQiLCJldmVudF8iLCJyZXNpemluZyIsInJlc2l6aW5nWCIsInJlc2l6aW5nWSIsImRyYWdnaW5nIiwiYnJ1c2htb3ZlIiwiYnJ1c2hlbmQiLCJleCIsImV5IiwibW92ZTEiLCJleHRlbnQxIiwiZXh0ZW50MCIsImNsZWFyIiwibnciLCJzdyIsImQzX3RpbWVfZm9ybWF0VXRjIiwiZDNfdGltZV9mb3JtYXRJc28iLCJkM190aW1lX2Zvcm1hdElzb05hdGl2ZSIsInRvSVNPU3RyaW5nIiwiZDNfdGltZV9zY2FsZSIsInRpY2tNZXRob2QiLCJkM190aW1lX3NjYWxlU3RlcHMiLCJkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzIiwiZDNfdGltZV9zY2FsZURhdGUiLCJza2lwIiwic2tpcHBlZCIsImlzbyIsInNlY29uZCIsInNlY29uZHMiLCJtaW51dGVzIiwidGltZXpvbmUiLCJob3VycyIsImQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMiLCJkM190aW1lX3NjYWxlTG9jYWxGb3JtYXQiLCJkM190aW1lX3NjYWxlVXRjTWV0aG9kcyIsImQzX3RpbWVfc2NhbGVVdGNGb3JtYXQiLCJkM19qc29uIiwiZDNfaHRtbCIsInNlbGVjdE5vZGUiLCJjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQiLCJyZXNwb25zZVhNTCIsInYxIiwidXVpZCIsIl9ub2RlSWQiLCJfY2xvY2tzZXEiLCJybmciLCJieXRlc1RvVXVpZCIsIl9sYXN0TVNlY3MiLCJfbGFzdE5TZWNzIiwiY2xvY2tzZXEiLCJzZWVkQnl0ZXMiLCJtc2VjcyIsIm5zZWNzIiwidGwiLCJ0bWgiLCJCdWZmZXIiLCJfaW5zdGFuY2VvZiIsIm5hdGl2ZU1hcCIsIm5hdGl2ZVNldCIsIm5hdGl2ZVByb21pc2UiLCJjaXJjdWxhciIsImluY2x1ZGVOb25FbnVtZXJhYmxlIiwiYWxsUGFyZW50cyIsImFsbENoaWxkcmVuIiwidXNlQnVmZmVyIiwiX2Nsb25lIiwicHJvdG8iLCJyZXNvbHZlIiwicmVqZWN0IiwiX19pc0FycmF5IiwiX19pc1JlZ0V4cCIsIl9fZ2V0UmVnRXhwRmxhZ3MiLCJfX2lzRGF0ZSIsImlzQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJrZXlDaGlsZCIsInZhbHVlQ2hpbGQiLCJlbnRyeUNoaWxkIiwiYWxsUHJvcGVydHlOYW1lcyIsIl9fb2JqVG9TdHIiLCJmbGFncyIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJjbG9uZVByb3RvdHlwZSIsImJhc2U2NCIsImllZWU3NTQiLCJrTWF4TGVuZ3RoIiwiVFlQRURfQVJSQVlfU1VQUE9SVCIsImNyZWF0ZUJ1ZmZlciIsIlJhbmdlRXJyb3IiLCJlbmNvZGluZ09yT2Zmc2V0IiwiQXJyYXlCdWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImZyb21BcnJheUxpa2UiLCJmcm9tQXJyYXlCdWZmZXIiLCJlbmNvZGluZyIsImlzRW5jb2RpbmciLCJhY3R1YWwiLCJmcm9tU3RyaW5nIiwiZnJvbU9iamVjdCIsImFzc2VydFNpemUiLCJpc1ZpZXciLCJsb3dlcmVkQ2FzZSIsInV0ZjhUb0J5dGVzIiwiYmFzZTY0VG9CeXRlcyIsInN3YXAiLCJiaWRpcmVjdGlvbmFsSW5kZXhPZiIsImRpciIsImFycmF5SW5kZXhPZiIsImFyciIsImluZGV4U2l6ZSIsImFyckxlbmd0aCIsInZhbExlbmd0aCIsInJlYWQiLCJyZWFkVUludDE2QkUiLCJmb3VuZEluZGV4IiwiZm91bmQiLCJoZXhXcml0ZSIsInN0ckxlbiIsInBhcnNlZCIsInV0ZjhXcml0ZSIsImJsaXRCdWZmZXIiLCJhc2NpaVdyaXRlIiwiYnl0ZUFycmF5IiwiYXNjaWlUb0J5dGVzIiwibGF0aW4xV3JpdGUiLCJiYXNlNjRXcml0ZSIsInVjczJXcml0ZSIsInVuaXRzIiwidXRmMTZsZVRvQnl0ZXMiLCJiYXNlNjRTbGljZSIsImZyb21CeXRlQXJyYXkiLCJ1dGY4U2xpY2UiLCJyZXMiLCJzZWNvbmRCeXRlIiwidGhpcmRCeXRlIiwiZm91cnRoQnl0ZSIsInRlbXBDb2RlUG9pbnQiLCJmaXJzdEJ5dGUiLCJjb2RlUG9pbnQiLCJieXRlc1BlclNlcXVlbmNlIiwiY29kZVBvaW50cyIsIk1BWF9BUkdVTUVOVFNfTEVOR1RIIiwiZGVjb2RlQ29kZVBvaW50c0FycmF5IiwiU2xvd0J1ZmZlciIsImFsbG9jIiwiSU5TUEVDVF9NQVhfQllURVMiLCJmb28iLCJzdWJhcnJheSIsInR5cGVkQXJyYXlTdXBwb3J0IiwicG9vbFNpemUiLCJfYXVnbWVudCIsInNwZWNpZXMiLCJhbGxvY1Vuc2FmZVNsb3ciLCJfaXNCdWZmZXIiLCJwb3MiLCJzd2FwMTYiLCJzd2FwMzIiLCJzd2FwNjQiLCJoZXhTbGljZSIsImFzY2lpU2xpY2UiLCJsYXRpbjFTbGljZSIsInV0ZjE2bGVTbGljZSIsImVxdWFscyIsImluc3BlY3QiLCJ0aGlzU3RhcnQiLCJ0aGlzRW5kIiwidGhpc0NvcHkiLCJ0YXJnZXRDb3B5IiwiaW5jbHVkZXMiLCJ0b0pTT04iLCJfYXJyIiwicmV0IiwidG9IZXgiLCJieXRlcyIsImNoZWNrT2Zmc2V0IiwiZXh0IiwiY2hlY2tJbnQiLCJvYmplY3RXcml0ZVVJbnQxNiIsImxpdHRsZUVuZGlhbiIsIm9iamVjdFdyaXRlVUludDMyIiwiY2hlY2tJRUVFNzU0Iiwid3JpdGVGbG9hdCIsIm5vQXNzZXJ0Iiwid3JpdGVEb3VibGUiLCJuZXdCdWYiLCJzbGljZUxlbiIsInJlYWRVSW50TEUiLCJtdWwiLCJyZWFkVUludEJFIiwicmVhZFVJbnQ4IiwicmVhZFVJbnQxNkxFIiwicmVhZFVJbnQzMkxFIiwicmVhZFVJbnQzMkJFIiwicmVhZEludExFIiwicmVhZEludEJFIiwicmVhZEludDgiLCJyZWFkSW50MTZMRSIsInJlYWRJbnQxNkJFIiwicmVhZEludDMyTEUiLCJyZWFkSW50MzJCRSIsInJlYWRGbG9hdExFIiwicmVhZEZsb2F0QkUiLCJyZWFkRG91YmxlTEUiLCJyZWFkRG91YmxlQkUiLCJ3cml0ZVVJbnRMRSIsIndyaXRlVUludEJFIiwid3JpdGVVSW50OCIsIndyaXRlVUludDE2TEUiLCJ3cml0ZVVJbnQxNkJFIiwid3JpdGVVSW50MzJMRSIsIndyaXRlVUludDMyQkUiLCJ3cml0ZUludExFIiwibGltaXQiLCJzdWIiLCJ3cml0ZUludEJFIiwid3JpdGVJbnQ4Iiwid3JpdGVJbnQxNkxFIiwid3JpdGVJbnQxNkJFIiwid3JpdGVJbnQzMkxFIiwid3JpdGVJbnQzMkJFIiwid3JpdGVGbG9hdExFIiwid3JpdGVGbG9hdEJFIiwid3JpdGVEb3VibGVMRSIsIndyaXRlRG91YmxlQkUiLCJ0YXJnZXRTdGFydCIsIklOVkFMSURfQkFTRTY0X1JFIiwibGVhZFN1cnJvZ2F0ZSIsInRvQnl0ZUFycmF5Iiwic3RyaW5ndHJpbSIsImJhc2U2NGNsZWFuIiwiZHN0IiwiYjY0IiwibGVucyIsImdldExlbnMiLCJ2YWxpZExlbiIsInBsYWNlSG9sZGVyc0xlbiIsInRtcCIsIkFyciIsIl9ieXRlTGVuZ3RoIiwiY3VyQnl0ZSIsInJldkxvb2t1cCIsInVpbnQ4IiwiZXh0cmFCeXRlcyIsImxlbjIiLCJlbmNvZGVDaHVuayIsImxvb2t1cCIsIm51bSIsImlzTEUiLCJtTGVuIiwibkJ5dGVzIiwiZUxlbiIsImVNYXgiLCJlQmlhcyIsIm5CaXRzIiwicnQiLCJwU2xpY2UiLCJvYmplY3RLZXlzIiwiaXNBcmd1bWVudHMiLCJkZWVwRXF1YWwiLCJleHBlY3RlZCIsIm9wdHMiLCJzdHJpY3QiLCJpc1VuZGVmaW5lZE9yTnVsbCIsIm9iakVxdWl2Iiwic3VwcG9ydHNBcmd1bWVudHNDbGFzcyIsInN1cHBvcnRlZCIsInVuc3VwcG9ydGVkIiwiX0NTU1RyYW5zaXRpb25Hcm91cDIiLCJfVHJhbnNpdGlvbkdyb3VwMiIsIkNTU1RyYW5zaXRpb25Hcm91cCIsIl9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDIiLCJfUHJvcFR5cGVzIiwiX3RlbXAiLCJfd3JhcENoaWxkIiwiYXBwZWFyVGltZW91dCIsImVudGVyVGltZW91dCIsImxlYXZlVGltZW91dCIsIl9yZWFjdCIsImdldFZhbHVlRm9yS2V5IiwibmV4dEtleXNQZW5kaW5nIiwicGVuZGluZ0tleXMiLCJjaGlsZE1hcHBpbmciLCJuZXh0S2V5IiwicGVuZGluZ05leHRLZXkiLCJfYWRkQ2xhc3MyIiwiX3JlbW92ZUNsYXNzMiIsIl9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUyIiwiX3Byb3BlcnRpZXMiLCJfcmVhY3REb20iLCJldmVudHMiLCJ0cmFuc2l0aW9uRW5kIiwiYW5pbWF0aW9uRW5kIiwiQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQiLCJjbGFzc05hbWVBbmROb2RlUXVldWUiLCJ0cmFuc2l0aW9uVGltZW91dHMiLCJ1bm1vdW50ZWQiLCJhbmltYXRpb25UeXBlIiwiZmluaXNoQ2FsbGJhY2siLCJhY3RpdmVDbGFzc05hbWUiLCJyZW1vdmVMaXN0ZW5lcnMiLCJxdWV1ZUNsYXNzQW5kTm9kZSIsImZpbmlzaCIsImFkZEVuZExpc3RlbmVyIiwicmFmSGFuZGxlIiwiZmx1c2hDbGFzc05hbWVBbmROb2RlUXVldWUiLCJfaGFzQ2xhc3MiLCJyZXBsYWNlQ2xhc3NOYW1lIiwib3JpZ0NsYXNzIiwiY2xhc3NUb1JlbW92ZSIsImNvbXBhdFJhZiIsIl9pbkRPTSIsInJhZiIsImN1cnIiLCJtcyIsInJlcSIsImdldEtleSIsInZlbmRvciIsInJhZktleSIsImFuaW1hdGlvbkRlbGF5IiwiYW5pbWF0aW9uVGltaW5nIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJ0cmFuc2l0aW9uRGVsYXkiLCJ0cmFuc2l0aW9uVGltaW5nIiwidHJhbnNpdGlvblByb3BlcnR5IiwiX2dldFRyYW5zaXRpb25Qcm9wZXJ0IiwidmVuZG9yTWFwIiwiTW96IiwiV2Via2l0IiwidmVuZG9ycyIsImdldFRyYW5zaXRpb25Qcm9wZXJ0aWVzIiwidGltaW5nIiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJydW4iLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwibm9vcCIsIm5leHRUaWNrIiwidGl0bGUiLCJicm93c2VyIiwiYXJndiIsInZlcnNpb25zIiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsInVtYXNrIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRm9yd2FyZFJlZiIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc01lbW8iLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiX3RlbXBsYXRlT2JqZWN0IiwiUGVyY2VudENvbG9ySW5wdXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJsaWdodEdyZWVuIiwiY2xvbmVUcmVlIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInVwZGF0ZVRyZWUiLCJjaGFuZ2VUZW1wUGVyY2VudGFnZXMiLCJ0cmVlRGF0YUFyciIsInRvdGFsVGltZSIsInJlbmRlclRpbWUiLCJ3b3JrVG9CZURvbmUiLCJwZXJjZW50VGltZSIsImluZGl2aWR1YWxUaW1lIiwibmV3VHJlZSIsIm5ld05vZGUiLCJ0cmVlRGF0YSIsImFkZENvbG9yIiwidXBkYXRlVHJlZVN0YXRlIiwidGVtcCIsInJlYWN0X2RlZmF1bHQiLCJib3JkZXJCb3R0b20iLCJib3hTaGFkb3ciLCJqdXN0aWZ5Q29udGVudCIsIk9yaWVudGF0aW9uQnV0dG9uU3R5bGVkIiwiZGl2IiwiVHJlZUNvbXBvbmVudF90ZW1wbGF0ZU9iamVjdCIsIlRyZWVDb21wb25lbnQiLCJUcmVlQ29tcG9uZW50X2NsYXNzQ2FsbENoZWNrIiwiVHJlZUNvbXBvbmVudF9nZXRQcm90b3R5cGVPZiIsIm1vdXNlT3ZlciIsIlRyZWVDb21wb25lbnRfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiY2hhbmdlT3JpZW50YXRpb24iLCJSZWFjdCIsInN0YXRzIiwiZ3JhYk5vZGVTdGF0cyIsIl90aGlzJHN0YXRlIiwiY29tcG9uZW50c19QZXJjZW50Q29sb3JJbnB1dCIsImNvdW50ZXIiLCJyZWFjdF9kM190cmVlX21pbl9kZWZhdWx0IiwiQnV0dG9uU3R5bGVkIiwiQnV0dG9uX3RlbXBsYXRlT2JqZWN0IiwiQnV0dG9uIiwiQnV0dG9uX2NsYXNzQ2FsbENoZWNrIiwiQnV0dG9uX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJCdXR0b25fZ2V0UHJvdG90eXBlT2YiLCJjbGlja2VkIiwiU3RhdHNTdHlsZWQiLCJTdGF0c190ZW1wbGF0ZU9iamVjdCIsIlN0YXRzIiwiU3RhdHNfY2xhc3NDYWxsQ2hlY2siLCJTdGF0c19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3RhdHNfZ2V0UHJvdG90eXBlT2YiLCJXcmFwcGVyU3R5bGVkIiwiZGV2dG9vbHNfdGVtcGxhdGVPYmplY3QiLCJDb250ZW50U3R5bGVkIiwiX3RlbXBsYXRlT2JqZWN0MiIsIlN0YXRzUGFuZWxTdHlsZWQiLCJfdGVtcGxhdGVPYmplY3QzIiwiU3RhdHNXaW5kb3dTdHlsZWQiLCJfdGVtcGxhdGVPYmplY3Q0IiwiQXBwIiwiZGV2dG9vbHNfY2xhc3NDYWxsQ2hlY2siLCJkZXZ0b29sc19nZXRQcm90b3R5cGVPZiIsIm5vZGVpbmZvIiwic3RhcnRRdWFudHVtIiwiZGV2dG9vbHNfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiY2hyb21lIiwiZGV2dG9vbHMiLCJwYW5lbHMiLCJwb3J0IiwicnVudGltZSIsImNvbm5lY3QiLCJ0YWJJZCIsImluc3BlY3RlZFdpbmRvdyIsIm9uTWVzc2FnZSIsIl90aGlzMiRzdGF0ZSIsInRlbXBUcmVlRGF0YSIsImFkZEluZGl2aWR1YWxUaW1lIiwidHJlZURhdGFBcnJDb3B5Iiwic3VtQ2hpbGRyZW5UaW1lIiwiY3VycmVudE5vZGUiLCJzZW5kTWVzc2FnZSIsImNvdW50ZXJJIiwiY291bnRlcklkIiwidXBkYXRlQ291bnRlciIsImltYWdlIiwiYWx0IiwiYWxpZ25Db250ZW50IiwiY29tcG9uZW50c19CdXR0b24iLCJTdGF0c19TdGF0cyIsIm1haW5fZGVmYXVsdCIsImNvbXBvbmVudHNfVHJlZUNvbXBvbmVudCIsImRldnRvb2xzX0FwcCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkEx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QSxTQUNBQyxZQUFBLFFBQ0FDLGVBQUEsUUFDQUMsV0FBQSxTQUNBQyxXQUFBLFNBQ0FDLFFBQUEsUUFDQUMsV0FBQSxTQUNBQyxhQUFBLFFBQ0FDLGNBQUEsUUFDQUMsY0FBQSxRQUNBQyxjQUFBLFFBQ0FDLGNBQUEsTUFDQUMsV0FBQSxRQUNBQyxTQUFBLFNBQ0FDLFlBQUEsTUFDQUMsUUFBQSxRQUNBQyxRQUFBLFFBQ0FDLFdBQUEsUUFDQUMsVUFBQSxTQUNBQyxZQUFBLFNBQ0FDLFlBQUEsUUFDQUMsUUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsU0FDQUMsS0FBQSxTQUNBQyxVQUFBLFNBQ0FDLEtBQUEsUUFDQUMsTUFBQSxNQUNBQyxZQUFBLFNBQ0FDLEtBQUEsUUFDQUMsU0FBQSxTQUNBQyxRQUFBLFNBQ0FDLFVBQUEsU0FDQUMsT0FBQSxRQUNBQyxNQUFBLFNBQ0FDLE1BQUEsU0FDQUMsU0FBQSxTQUNBQyxjQUFBLFNBQ0FDLFVBQUEsUUFDQUMsYUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsU0FDQUMsVUFBQSxTQUNBQyxxQkFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsUUFDQUMsVUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFlBQUEsU0FDQUMsY0FBQSxRQUNBQyxhQUFBLFFBQ0FDLGVBQUEsUUFDQUMsZUFBQSxRQUNBQyxlQUFBLFNBQ0FDLFlBQUEsU0FDQUMsS0FBQSxNQUNBQyxVQUFBLFFBQ0FDLE1BQUEsU0FDQUMsUUFBQSxTQUNBQyxPQUFBLFFBQ0FDLGlCQUFBLFFBQ0FDLFdBQUEsSUFDQUMsYUFBQSxTQUNBQyxhQUFBLFFBQ0FDLGVBQUEsUUFDQUMsZ0JBQUEsUUFDQUMsa0JBQUEsTUFDQUMsZ0JBQUEsUUFDQUMsZ0JBQUEsU0FDQUMsYUFBQSxRQUNBQyxVQUFBLFNBQ0FDLFVBQUEsU0FDQUMsU0FBQSxTQUNBQyxZQUFBLFNBQ0FDLEtBQUEsSUFDQUMsUUFBQSxTQUNBQyxNQUFBLFFBQ0FDLFVBQUEsUUFDQUMsT0FBQSxTQUNBQyxVQUFBLFNBQ0FDLE9BQUEsU0FDQUMsY0FBQSxT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biBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA1Mik7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImltcG9ydCBTdHlsaXMgZnJvbSAnc3R5bGlzL3N0eWxpcy5taW4nO1xuaW1wb3J0IF9pbnNlcnRSdWxlUGx1Z2luIGZyb20gJ3N0eWxpcy1ydWxlLXNoZWV0JztcbmltcG9ydCBSZWFjdCwgeyBjbG9uZUVsZW1lbnQsIGNyZWF0ZUNvbnRleHQsIENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzVmFsaWRFbGVtZW50VHlwZSwgRm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB2YWxpZEF0dHIgZnJvbSAnQGVtb3Rpb24vaXMtcHJvcC12YWxpZCc7XG5cbi8vIFxuXG52YXIgaW50ZXJsZWF2ZSA9IChmdW5jdGlvbiAoc3RyaW5ncywgaW50ZXJwb2xhdGlvbnMpIHtcbiAgdmFyIHJlc3VsdCA9IFtzdHJpbmdzWzBdXTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gaW50ZXJwb2xhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICByZXN1bHQucHVzaChpbnRlcnBvbGF0aW9uc1tpXSwgc3RyaW5nc1tpICsgMV0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iajtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcblxudmFyIGNsYXNzQ2FsbENoZWNrID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07XG5cbnZhciBjcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbnZhciBpbmhlcml0cyA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn07XG5cbnZhciBvYmplY3RXaXRob3V0UHJvcGVydGllcyA9IGZ1bmN0aW9uIChvYmosIGtleXMpIHtcbiAgdmFyIHRhcmdldCA9IHt9O1xuXG4gIGZvciAodmFyIGkgaW4gb2JqKSB7XG4gICAgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTtcbiAgICB0YXJnZXRbaV0gPSBvYmpbaV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxudmFyIHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gPSBmdW5jdGlvbiAoc2VsZiwgY2FsbCkge1xuICBpZiAoIXNlbGYpIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjtcbn07XG5cbi8vIFxudmFyIGlzUGxhaW5PYmplY3QgPSAoZnVuY3Rpb24gKHgpIHtcbiAgcmV0dXJuICh0eXBlb2YgeCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoeCkpID09PSAnb2JqZWN0JyAmJiB4LmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59KTtcblxuLy8gXG52YXIgRU1QVFlfQVJSQVkgPSBPYmplY3QuZnJlZXplKFtdKTtcbnZhciBFTVBUWV9PQkpFQ1QgPSBPYmplY3QuZnJlZXplKHt9KTtcblxuLy8gXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHRlc3QpIHtcbiAgcmV0dXJuIHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZSh0YXJnZXQpIHtcbiAgcmV0dXJuIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gdHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycgJiYgdGFyZ2V0IDogZmFsc2UpIHx8IHRhcmdldC5kaXNwbGF5TmFtZSB8fCB0YXJnZXQubmFtZSB8fCAnQ29tcG9uZW50Jztcbn1cblxuLy8gXG5mdW5jdGlvbiBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0LnN0eWxlZENvbXBvbmVudElkID09PSAnc3RyaW5nJztcbn1cblxuLy8gXG5cbnZhciBTQ19BVFRSID0gdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52LlNDX0FUVFIgfHwgJ2RhdGEtc3R5bGVkJztcblxudmFyIFNDX1ZFUlNJT05fQVRUUiA9ICdkYXRhLXN0eWxlZC12ZXJzaW9uJztcblxudmFyIFNDX1NUUkVBTV9BVFRSID0gJ2RhdGEtc3R5bGVkLXN0cmVhbWVkJztcblxudmFyIElTX0JST1dTRVIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAnSFRNTEVsZW1lbnQnIGluIHdpbmRvdztcblxudmFyIERJU0FCTEVfU1BFRURZID0gdHlwZW9mIFNDX0RJU0FCTEVfU1BFRURZID09PSAnYm9vbGVhbicgJiYgU0NfRElTQUJMRV9TUEVFRFkgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxuLy8gU2hhcmVkIGVtcHR5IGV4ZWN1dGlvbiBjb250ZXh0IHdoZW4gZ2VuZXJhdGluZyBzdGF0aWMgc3R5bGVzXG52YXIgU1RBVElDX0VYRUNVVElPTl9DT05URVhUID0ge307XG5cbi8vIFxuXG5cbi8qKlxuICogUGFyc2UgZXJyb3JzLm1kIGFuZCB0dXJuIGl0IGludG8gYSBzaW1wbGUgaGFzaCBvZiBjb2RlOiBtZXNzYWdlXG4gKi9cbnZhciBFUlJPUlMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICBcIjFcIjogXCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsXG4gIFwiMlwiOiBcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLFxuICBcIjNcIjogXCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIixcbiAgXCI0XCI6IFwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIixcbiAgXCI1XCI6IFwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIixcbiAgXCI2XCI6IFwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIixcbiAgXCI3XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFxcXCJ0aGVtZVxcXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuXCIsXG4gIFwiOFwiOiBcIlRoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG5cIixcbiAgXCI5XCI6IFwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLFxuICBcIjEwXCI6IFwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIixcbiAgXCIxMVwiOiBcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsXG4gIFwiMTJcIjogXCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciAoc2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3MpLCB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS5cXG5cXG5cIixcbiAgXCIxM1wiOiBcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cIlxufSA6IHt9O1xuXG4vKipcbiAqIHN1cGVyIGJhc2ljIHZlcnNpb24gb2Ygc3ByaW50ZlxuICovXG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBhID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzBdO1xuICB2YXIgYiA9IFtdO1xuXG4gIGZvciAodmFyIGMgPSAxLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoOyBjIDwgbGVuOyBjICs9IDEpIHtcbiAgICBiLnB1c2goYXJndW1lbnRzLmxlbmd0aCA8PSBjID8gdW5kZWZpbmVkIDogYXJndW1lbnRzW2NdKTtcbiAgfVxuXG4gIGIuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgIGEgPSBhLnJlcGxhY2UoLyVbYS16XS8sIGQpO1xuICB9KTtcblxuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gZXJyb3IgZmlsZSBvdXQgb2YgZXJyb3JzLm1kIGZvciBkZXZlbG9wbWVudCBhbmQgYSBzaW1wbGUgd2ViIGxpbmsgdG8gdGhlIGZ1bGwgZXJyb3JzXG4gKiBpbiBwcm9kdWN0aW9uIG1vZGUuXG4gKi9cblxudmFyIFN0eWxlZENvbXBvbmVudHNFcnJvciA9IGZ1bmN0aW9uIChfRXJyb3IpIHtcbiAgaW5oZXJpdHMoU3R5bGVkQ29tcG9uZW50c0Vycm9yLCBfRXJyb3IpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlZENvbXBvbmVudHNFcnJvcihjb2RlKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVkQ29tcG9uZW50c0Vycm9yKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfRXJyb3IuY2FsbCh0aGlzLCAnQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvYmxvYi9tYXN0ZXIvc3JjL3V0aWxzL2Vycm9ycy5tZCMnICsgY29kZSArICcgZm9yIG1vcmUgaW5mb3JtYXRpb24uICcgKyAoaW50ZXJwb2xhdGlvbnMgPyAnQWRkaXRpb25hbCBhcmd1bWVudHM6ICcgKyBpbnRlcnBvbGF0aW9ucy5qb2luKCcsICcpIDogJycpKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0Vycm9yLmNhbGwodGhpcywgZm9ybWF0LmFwcGx5KHVuZGVmaW5lZCwgW0VSUk9SU1tjb2RlXV0uY29uY2F0KGludGVycG9sYXRpb25zKSkudHJpbSgpKSk7XG4gICAgfVxuICAgIHJldHVybiBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzKTtcbiAgfVxuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnRzRXJyb3I7XG59KEVycm9yKTtcblxuLy8gXG52YXIgU0NfQ09NUE9ORU5UX0lEID0gL15bXlxcU1xcbl0qP1xcL1xcKiBzYy1jb21wb25lbnQtaWQ6XFxzKihcXFMrKVxccytcXCpcXC8vZ207XG5cbnZhciBleHRyYWN0Q29tcHMgPSAoZnVuY3Rpb24gKG1heWJlQ1NTKSB7XG4gIHZhciBjc3MgPSAnJyArIChtYXliZUNTUyB8fCAnJyk7IC8vIERlZmluaXRlbHkgYSBzdHJpbmcsIGFuZCBhIGNsb25lXG4gIHZhciBleGlzdGluZ0NvbXBvbmVudHMgPSBbXTtcbiAgY3NzLnJlcGxhY2UoU0NfQ09NUE9ORU5UX0lELCBmdW5jdGlvbiAobWF0Y2gsIGNvbXBvbmVudElkLCBtYXRjaEluZGV4KSB7XG4gICAgZXhpc3RpbmdDb21wb25lbnRzLnB1c2goeyBjb21wb25lbnRJZDogY29tcG9uZW50SWQsIG1hdGNoSW5kZXg6IG1hdGNoSW5kZXggfSk7XG4gICAgcmV0dXJuIG1hdGNoO1xuICB9KTtcbiAgcmV0dXJuIGV4aXN0aW5nQ29tcG9uZW50cy5tYXAoZnVuY3Rpb24gKF9yZWYsIGkpIHtcbiAgICB2YXIgY29tcG9uZW50SWQgPSBfcmVmLmNvbXBvbmVudElkLFxuICAgICAgICBtYXRjaEluZGV4ID0gX3JlZi5tYXRjaEluZGV4O1xuXG4gICAgdmFyIG5leHRDb21wID0gZXhpc3RpbmdDb21wb25lbnRzW2kgKyAxXTtcbiAgICB2YXIgY3NzRnJvbURPTSA9IG5leHRDb21wID8gY3NzLnNsaWNlKG1hdGNoSW5kZXgsIG5leHRDb21wLm1hdGNoSW5kZXgpIDogY3NzLnNsaWNlKG1hdGNoSW5kZXgpO1xuICAgIHJldHVybiB7IGNvbXBvbmVudElkOiBjb21wb25lbnRJZCwgY3NzRnJvbURPTTogY3NzRnJvbURPTSB9O1xuICB9KTtcbn0pO1xuXG4vLyBcblxudmFyIENPTU1FTlRfUkVHRVggPSAvXlxccypcXC9cXC8uKiQvZ207XG5cbi8vIE5PVEU6IFRoaXMgc3R5bGlzIGluc3RhbmNlIGlzIG9ubHkgdXNlZCB0byBzcGxpdCBydWxlcyBmcm9tIFNTUidkIHN0eWxlIHRhZ3NcbnZhciBzdHlsaXNTcGxpdHRlciA9IG5ldyBTdHlsaXMoe1xuICBnbG9iYWw6IGZhbHNlLFxuICBjYXNjYWRlOiB0cnVlLFxuICBrZXlmcmFtZTogZmFsc2UsXG4gIHByZWZpeDogZmFsc2UsXG4gIGNvbXByZXNzOiBmYWxzZSxcbiAgc2VtaWNvbG9uOiB0cnVlXG59KTtcblxudmFyIHN0eWxpcyA9IG5ldyBTdHlsaXMoe1xuICBnbG9iYWw6IGZhbHNlLFxuICBjYXNjYWRlOiB0cnVlLFxuICBrZXlmcmFtZTogZmFsc2UsXG4gIHByZWZpeDogdHJ1ZSxcbiAgY29tcHJlc3M6IGZhbHNlLFxuICBzZW1pY29sb246IGZhbHNlIC8vIE5PVEU6IFRoaXMgbWVhbnMgXCJhdXRvY29tcGxldGUgbWlzc2luZyBzZW1pY29sb25zXCJcbn0pO1xuXG4vLyBXcmFwIGBpbnNlcnRSdWxlUGx1Z2luIHRvIGJ1aWxkIGEgbGlzdCBvZiBydWxlcyxcbi8vIGFuZCB0aGVuIG1ha2Ugb3VyIG93biBwbHVnaW4gdG8gcmV0dXJuIHRoZSBydWxlcy4gVGhpc1xuLy8gbWFrZXMgaXQgZWFzaWVyIHRvIGhvb2sgaW50byB0aGUgZXhpc3RpbmcgU1NSIGFyY2hpdGVjdHVyZVxuXG52YXIgcGFyc2luZ1J1bGVzID0gW107XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxudmFyIHJldHVyblJ1bGVzUGx1Z2luID0gZnVuY3Rpb24gcmV0dXJuUnVsZXNQbHVnaW4oY29udGV4dCkge1xuICBpZiAoY29udGV4dCA9PT0gLTIpIHtcbiAgICB2YXIgcGFyc2VkUnVsZXMgPSBwYXJzaW5nUnVsZXM7XG4gICAgcGFyc2luZ1J1bGVzID0gW107XG4gICAgcmV0dXJuIHBhcnNlZFJ1bGVzO1xuICB9XG59O1xuXG52YXIgcGFyc2VSdWxlc1BsdWdpbiA9IF9pbnNlcnRSdWxlUGx1Z2luKGZ1bmN0aW9uIChydWxlKSB7XG4gIHBhcnNpbmdSdWxlcy5wdXNoKHJ1bGUpO1xufSk7XG5cbnZhciBfY29tcG9uZW50SWQgPSB2b2lkIDA7XG52YXIgX3NlbGVjdG9yID0gdm9pZCAwO1xudmFyIF9zZWxlY3RvclJlZ2V4cCA9IHZvaWQgMDtcblxudmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlciA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlcihtYXRjaCwgb2Zmc2V0LCBzdHJpbmcpIHtcbiAgaWYgKFxuICAvLyB0aGUgZmlyc3Qgc2VsZi1yZWYgaXMgYWx3YXlzIHVudG91Y2hlZFxuICBvZmZzZXQgPiAwICYmXG4gIC8vIHRoZXJlIHNob3VsZCBiZSBhdCBsZWFzdCB0d28gc2VsZi1yZWZzIHRvIGRvIGEgcmVwbGFjZW1lbnQgKC5iID4gLmIpXG4gIHN0cmluZy5zbGljZSgwLCBvZmZzZXQpLmluZGV4T2YoX3NlbGVjdG9yKSAhPT0gLTEgJiZcbiAgLy8gbm8gY29uc2VjdXRpdmUgc2VsZiByZWZzICguYi5iKTsgdGhhdCBpcyBhIHByZWNlZGVuY2UgYm9vc3QgYW5kIHRyZWF0ZWQgZGlmZmVyZW50bHlcbiAgc3RyaW5nLnNsaWNlKG9mZnNldCAtIF9zZWxlY3Rvci5sZW5ndGgsIG9mZnNldCkgIT09IF9zZWxlY3Rvcikge1xuICAgIHJldHVybiAnLicgKyBfY29tcG9uZW50SWQ7XG4gIH1cblxuICByZXR1cm4gbWF0Y2g7XG59O1xuXG4vKipcbiAqIFdoZW4gd3JpdGluZyBhIHN0eWxlIGxpa2VcbiAqXG4gKiAmICsgJiB7XG4gKiAgIGNvbG9yOiByZWQ7XG4gKiB9XG4gKlxuICogVGhlIHNlY29uZCBhbXBlcnNhbmQgc2hvdWxkIGJlIGEgcmVmZXJlbmNlIHRvIHRoZSBzdGF0aWMgY29tcG9uZW50IGNsYXNzLiBzdHlsaXNcbiAqIGhhcyBubyBrbm93bGVkZ2Ugb2Ygc3RhdGljIGNsYXNzIHNvIHdlIGhhdmUgdG8gaW50ZWxsaWdlbnRseSByZXBsYWNlIHRoZSBiYXNlIHNlbGVjdG9yLlxuICovXG52YXIgc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luID0gZnVuY3Rpb24gc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luKGNvbnRleHQsIF8sIHNlbGVjdG9ycykge1xuICBpZiAoY29udGV4dCA9PT0gMiAmJiBzZWxlY3RvcnMubGVuZ3RoICYmIHNlbGVjdG9yc1swXS5sYXN0SW5kZXhPZihfc2VsZWN0b3IpID4gMCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHNlbGVjdG9yc1swXSA9IHNlbGVjdG9yc1swXS5yZXBsYWNlKF9zZWxlY3RvclJlZ2V4cCwgc2VsZlJlZmVyZW5jZVJlcGxhY2VyKTtcbiAgfVxufTtcblxuc3R5bGlzLnVzZShbc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luLCBwYXJzZVJ1bGVzUGx1Z2luLCByZXR1cm5SdWxlc1BsdWdpbl0pO1xuc3R5bGlzU3BsaXR0ZXIudXNlKFtwYXJzZVJ1bGVzUGx1Z2luLCByZXR1cm5SdWxlc1BsdWdpbl0pO1xuXG52YXIgc3BsaXRCeVJ1bGVzID0gZnVuY3Rpb24gc3BsaXRCeVJ1bGVzKGNzcykge1xuICByZXR1cm4gc3R5bGlzU3BsaXR0ZXIoJycsIGNzcyk7XG59O1xuXG5mdW5jdGlvbiBzdHJpbmdpZnlSdWxlcyhydWxlcywgc2VsZWN0b3IsIHByZWZpeCkge1xuICB2YXIgY29tcG9uZW50SWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6ICcmJztcblxuICB2YXIgZmxhdENTUyA9IHJ1bGVzLmpvaW4oJycpLnJlcGxhY2UoQ09NTUVOVF9SRUdFWCwgJycpOyAvLyByZXBsYWNlIEpTIGNvbW1lbnRzXG5cbiAgdmFyIGNzc1N0ciA9IHNlbGVjdG9yICYmIHByZWZpeCA/IHByZWZpeCArICcgJyArIHNlbGVjdG9yICsgJyB7ICcgKyBmbGF0Q1NTICsgJyB9JyA6IGZsYXRDU1M7XG5cbiAgLy8gc3R5bGlzIGhhcyBubyBjb25jZXB0IG9mIHN0YXRlIHRvIGJlIHBhc3NlZCB0byBwbHVnaW5zXG4gIC8vIGJ1dCBzaW5jZSBKUyBpcyBzaW5nbGU9dGhyZWFkZWQsIHdlIGNhbiByZWx5IG9uIHRoYXQgdG8gZW5zdXJlXG4gIC8vIHRoZXNlIHByb3BlcnRpZXMgc3RheSBpbiBzeW5jIHdpdGggdGhlIGN1cnJlbnQgc3R5bGlzIHJ1blxuICBfY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcbiAgX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gIF9zZWxlY3RvclJlZ2V4cCA9IG5ldyBSZWdFeHAoJ1xcXFwnICsgX3NlbGVjdG9yICsgJ1xcXFxiJywgJ2cnKTtcblxuICByZXR1cm4gc3R5bGlzKHByZWZpeCB8fCAhc2VsZWN0b3IgPyAnJyA6IHNlbGVjdG9yLCBjc3NTdHIpO1xufVxuXG4vLyBcbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSwgbm8tdW5kZWYgKi9cblxudmFyIGdldE5vbmNlID0gKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG59KTtcblxuLy8gXG4vKiBUaGVzZSBhcmUgaGVscGVycyBmb3IgdGhlIFN0eWxlVGFncyB0byBrZWVwIHRyYWNrIG9mIHRoZSBpbmplY3RlZFxuICogcnVsZSBuYW1lcyBmb3IgZWFjaCAoY29tcG9uZW50KSBJRCB0aGF0IHRoZXkncmUga2VlcGluZyB0cmFjayBvZi5cbiAqIFRoZXkncmUgY3J1Y2lhbCBmb3IgZGV0ZWN0aW5nIHdoZXRoZXIgYSBuYW1lIGhhcyBhbHJlYWR5IGJlZW5cbiAqIGluamVjdGVkLlxuICogKFRoaXMgZXhjbHVkZXMgcmVoeWRyYXRlZCBuYW1lcykgKi9cblxuLyogYWRkcyBhIG5ldyBJRDpuYW1lIHBhaXJpbmcgdG8gYSBuYW1lcyBkaWN0aW9uYXJ5ICovXG52YXIgYWRkTmFtZUZvcklkID0gZnVuY3Rpb24gYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSkge1xuICBpZiAobmFtZSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHZhciBuYW1lc0ZvcklkID0gbmFtZXNbaWRdIHx8IChuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpKTtcbiAgICBuYW1lc0ZvcklkW25hbWVdID0gdHJ1ZTtcbiAgfVxufTtcblxuLyogcmVzZXRzIGFuIElEIGVudGlyZWx5IGJ5IG92ZXJ3cml0aW5nIGl0IGluIHRoZSBkaWN0aW9uYXJ5ICovXG52YXIgcmVzZXRJZE5hbWVzID0gZnVuY3Rpb24gcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgbmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn07XG5cbi8qIGZhY3RvcnkgZm9yIGEgbmFtZXMgZGljdGlvbmFyeSBjaGVja2luZyB0aGUgZXhpc3RhbmNlIG9mIGFuIElEOm5hbWUgcGFpcmluZyAqL1xudmFyIGhhc05hbWVGb3JJZCA9IGZ1bmN0aW9uIGhhc05hbWVGb3JJZChuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGlkLCBuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWVzW2lkXSAhPT0gdW5kZWZpbmVkICYmIG5hbWVzW2lkXVtuYW1lXTtcbiAgfTtcbn07XG5cbi8qIHN0cmluZ2lmaWVzIG5hbWVzIGZvciB0aGUgaHRtbC9lbGVtZW50IG91dHB1dCAqL1xudmFyIHN0cmluZ2lmeU5hbWVzID0gZnVuY3Rpb24gc3RyaW5naWZ5TmFtZXMobmFtZXMpIHtcbiAgdmFyIHN0ciA9ICcnO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gIGZvciAodmFyIGlkIGluIG5hbWVzKSB7XG4gICAgc3RyICs9IE9iamVjdC5rZXlzKG5hbWVzW2lkXSkuam9pbignICcpICsgJyAnO1xuICB9XG4gIHJldHVybiBzdHIudHJpbSgpO1xufTtcblxuLyogY2xvbmVzIHRoZSBuZXN0ZWQgbmFtZXMgZGljdGlvbmFyeSAqL1xudmFyIGNsb25lTmFtZXMgPSBmdW5jdGlvbiBjbG9uZU5hbWVzKG5hbWVzKSB7XG4gIHZhciBjbG9uZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgZm9yICh2YXIgaWQgaW4gbmFtZXMpIHtcbiAgICBjbG9uZVtpZF0gPSBfZXh0ZW5kcyh7fSwgbmFtZXNbaWRdKTtcbiAgfVxuICByZXR1cm4gY2xvbmU7XG59O1xuXG4vLyBcblxuLyogVGhlc2UgYXJlIGhlbHBlcnMgdGhhdCBkZWFsIHdpdGggdGhlIGluc2VydFJ1bGUgKGFrYSBzcGVlZHkpIEFQSVxuICogVGhleSBhcmUgdXNlZCBpbiB0aGUgU3R5bGVUYWdzIGFuZCBzcGVjaWZpY2FsbHkgdGhlIHNwZWVkeSB0YWdcbiAqL1xuXG4vKiByZXRyaWV2ZSBhIHNoZWV0IGZvciBhIGdpdmVuIHN0eWxlIHRhZyAqL1xudmFyIHNoZWV0Rm9yVGFnID0gZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIC8vICRGbG93Rml4TWVcbiAgaWYgKHRhZy5zaGVldCkgcmV0dXJuIHRhZy5zaGVldDtcblxuICAvKiBGaXJlZm94IHF1aXJrIHJlcXVpcmVzIHVzIHRvIHN0ZXAgdGhyb3VnaCBhbGwgc3R5bGVzaGVldHMgdG8gZmluZCBvbmUgb3duZWQgYnkgdGhlIGdpdmVuIHRhZyAqL1xuICB2YXIgc2l6ZSA9IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICB2YXIgc2hlZXQgPSBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgaWYgKHNoZWV0Lm93bmVyTm9kZSA9PT0gdGFnKSByZXR1cm4gc2hlZXQ7XG4gIH1cblxuICAvKiB3ZSBzaG91bGQgYWx3YXlzIGJlIGFibGUgdG8gZmluZCBhIHRhZyAqL1xuICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEwKTtcbn07XG5cbi8qIGluc2VydCBhIHJ1bGUgc2FmZWx5IGFuZCByZXR1cm4gd2hldGhlciBpdCB3YXMgYWN0dWFsbHkgaW5qZWN0ZWQgKi9cbnZhciBzYWZlSW5zZXJ0UnVsZSA9IGZ1bmN0aW9uIHNhZmVJbnNlcnRSdWxlKHNoZWV0LCBjc3NSdWxlLCBpbmRleCkge1xuICAvKiBhYm9ydCBlYXJseSBpZiBjc3NSdWxlIHN0cmluZyBpcyBmYWxzeSAqL1xuICBpZiAoIWNzc1J1bGUpIHJldHVybiBmYWxzZTtcblxuICB2YXIgbWF4SW5kZXggPSBzaGVldC5jc3NSdWxlcy5sZW5ndGg7XG5cbiAgdHJ5IHtcbiAgICAvKiB1c2UgaW5zZXJ0UnVsZSBhbmQgY2FwIHBhc3NlZCBpbmRleCB3aXRoIG1heEluZGV4IChubyBvZiBjc3NSdWxlcykgKi9cbiAgICBzaGVldC5pbnNlcnRSdWxlKGNzc1J1bGUsIGluZGV4IDw9IG1heEluZGV4ID8gaW5kZXggOiBtYXhJbmRleCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8qIGFueSBlcnJvciBpbmRpY2F0ZXMgYW4gaW52YWxpZCBydWxlICovXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG4vKiBkZWxldGVzIGBzaXplYCBydWxlcyBzdGFydGluZyBmcm9tIGByZW1vdmFsSW5kZXhgICovXG52YXIgZGVsZXRlUnVsZXMgPSBmdW5jdGlvbiBkZWxldGVSdWxlcyhzaGVldCwgcmVtb3ZhbEluZGV4LCBzaXplKSB7XG4gIHZhciBsb3dlckJvdW5kID0gcmVtb3ZhbEluZGV4IC0gc2l6ZTtcbiAgZm9yICh2YXIgaSA9IHJlbW92YWxJbmRleDsgaSA+IGxvd2VyQm91bmQ7IGkgLT0gMSkge1xuICAgIHNoZWV0LmRlbGV0ZVJ1bGUoaSk7XG4gIH1cbn07XG5cbi8vIFxuXG4vKiB0aGlzIG1hcmtlciBzZXBhcmF0ZXMgY29tcG9uZW50IHN0eWxlcyBhbmQgaXMgaW1wb3J0YW50IGZvciByZWh5ZHJhdGlvbiAqL1xudmFyIG1ha2VUZXh0TWFya2VyID0gZnVuY3Rpb24gbWFrZVRleHRNYXJrZXIoaWQpIHtcbiAgcmV0dXJuICdcXG4vKiBzYy1jb21wb25lbnQtaWQ6ICcgKyBpZCArICcgKi9cXG4nO1xufTtcblxuLyogYWRkIHVwIGFsbCBudW1iZXJzIGluIGFycmF5IHVwIHVudGlsIGFuZCBpbmNsdWRpbmcgdGhlIGluZGV4ICovXG52YXIgYWRkVXBVbnRpbEluZGV4ID0gZnVuY3Rpb24gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBpbmRleCkge1xuICB2YXIgdG90YWxVcFRvSW5kZXggPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8PSBpbmRleDsgaSArPSAxKSB7XG4gICAgdG90YWxVcFRvSW5kZXggKz0gc2l6ZXNbaV07XG4gIH1cblxuICByZXR1cm4gdG90YWxVcFRvSW5kZXg7XG59O1xuXG4vKiBjcmVhdGUgYSBuZXcgc3R5bGUgdGFnIGFmdGVyIGxhc3RFbCAqL1xudmFyIG1ha2VTdHlsZVRhZyA9IGZ1bmN0aW9uIG1ha2VTdHlsZVRhZyh0YXJnZXQsIHRhZ0VsLCBpbnNlcnRCZWZvcmUpIHtcbiAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgZWwuc2V0QXR0cmlidXRlKFNDX0FUVFIsICcnKTtcbiAgZWwuc2V0QXR0cmlidXRlKFNDX1ZFUlNJT05fQVRUUiwgXCI0LjEuM1wiKTtcblxuICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICBpZiAobm9uY2UpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgbm9uY2UpO1xuICB9XG5cbiAgLyogV29yayBhcm91bmQgaW5zZXJ0UnVsZSBxdWlyayBpbiBFZGdlSFRNTCAqL1xuICBlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuXG4gIGlmICh0YXJnZXQgJiYgIXRhZ0VsKSB7XG4gICAgLyogQXBwZW5kIHRvIHRhcmdldCB3aGVuIG5vIHByZXZpb3VzIGVsZW1lbnQgd2FzIHBhc3NlZCAqL1xuICAgIHRhcmdldC5hcHBlbmRDaGlsZChlbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCF0YWdFbCB8fCAhdGFyZ2V0IHx8ICF0YWdFbC5wYXJlbnROb2RlKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDYpO1xuICAgIH1cblxuICAgIC8qIEluc2VydCBuZXcgc3R5bGUgdGFnIGFmdGVyIHRoZSBwcmV2aW91cyBvbmUgKi9cbiAgICB0YWdFbC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbCwgaW5zZXJ0QmVmb3JlID8gdGFnRWwgOiB0YWdFbC5uZXh0U2libGluZyk7XG4gIH1cblxuICByZXR1cm4gZWw7XG59O1xuXG4vKiB0YWtlcyBhIGNzcyBmYWN0b3J5IGZ1bmN0aW9uIGFuZCBvdXRwdXRzIGFuIGh0bWwgc3R5bGVkIHRhZyBmYWN0b3J5ICovXG52YXIgd3JhcEFzSHRtbFRhZyA9IGZ1bmN0aW9uIHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGFkZGl0aW9uYWxBdHRycykge1xuICAgIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gICAgdmFyIGF0dHJzID0gW25vbmNlICYmICdub25jZT1cIicgKyBub25jZSArICdcIicsIFNDX0FUVFIgKyAnPVwiJyArIHN0cmluZ2lmeU5hbWVzKG5hbWVzKSArICdcIicsIFNDX1ZFUlNJT05fQVRUUiArICc9XCInICsgXCI0LjEuM1wiICsgJ1wiJywgYWRkaXRpb25hbEF0dHJzXTtcblxuICAgIHZhciBodG1sQXR0ciA9IGF0dHJzLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7XG4gICAgcmV0dXJuICc8c3R5bGUgJyArIGh0bWxBdHRyICsgJz4nICsgY3NzKCkgKyAnPC9zdHlsZT4nO1xuICB9O1xufTtcblxuLyogdGFrZXMgYSBjc3MgZmFjdG9yeSBmdW5jdGlvbiBhbmQgb3V0cHV0cyBhbiBlbGVtZW50IGZhY3RvcnkgKi9cbnZhciB3cmFwQXNFbGVtZW50ID0gZnVuY3Rpb24gd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9wcm9wcztcblxuICAgIHZhciBwcm9wcyA9IChfcHJvcHMgPSB7fSwgX3Byb3BzW1NDX0FUVFJdID0gc3RyaW5naWZ5TmFtZXMobmFtZXMpLCBfcHJvcHNbU0NfVkVSU0lPTl9BVFRSXSA9IFwiNC4xLjNcIiwgX3Byb3BzKTtcblxuICAgIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBwcm9wcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1kYW5nZXJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnc3R5bGUnLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBjc3MoKSB9IH0pKTtcbiAgfTtcbn07XG5cbnZhciBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkgPSBmdW5jdGlvbiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2Vycykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhtYXJrZXJzKTtcbiAgfTtcbn07XG5cbi8qIHNwZWVkeSB0YWdzIHV0aWxpc2UgaW5zZXJ0UnVsZSAqL1xudmFyIG1ha2VTcGVlZHlUYWcgPSBmdW5jdGlvbiBtYWtlU3BlZWR5VGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIHZhciBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBtYXJrZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIHNpemVzID0gW107XG5cbiAgdmFyIGV4dHJhY3RJbXBvcnQgPSBnZXRJbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQ7XG4gIC8qIGluZGljYXRlcyB3aGV0aGVyIGdldEltcG9ydFJ1bGVUYWcgd2FzIGNhbGxlZCAqL1xuICB2YXIgdXNlZEltcG9ydFJ1bGVUYWcgPSBmYWxzZTtcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICBtYXJrZXJzW2lkXSA9IHNpemVzLmxlbmd0aDtcbiAgICBzaXplcy5wdXNoKDApO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKGVsKTtcbiAgICB2YXIgaW5zZXJ0SW5kZXggPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcik7XG5cbiAgICB2YXIgaW5qZWN0ZWRSdWxlcyA9IDA7XG4gICAgdmFyIGltcG9ydFJ1bGVzID0gW107XG4gICAgdmFyIGNzc1J1bGVzU2l6ZSA9IGNzc1J1bGVzLmxlbmd0aDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3NzUnVsZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBjc3NSdWxlID0gY3NzUnVsZXNbaV07XG4gICAgICB2YXIgbWF5SGF2ZUltcG9ydCA9IGV4dHJhY3RJbXBvcnQ7IC8qIEBpbXBvcnQgcnVsZXMgYXJlIHJlb3JkZXJlZCB0byBhcHBlYXIgZmlyc3QgKi9cbiAgICAgIGlmIChtYXlIYXZlSW1wb3J0ICYmIGNzc1J1bGUuaW5kZXhPZignQGltcG9ydCcpICE9PSAtMSkge1xuICAgICAgICBpbXBvcnRSdWxlcy5wdXNoKGNzc1J1bGUpO1xuICAgICAgfSBlbHNlIGlmIChzYWZlSW5zZXJ0UnVsZShzaGVldCwgY3NzUnVsZSwgaW5zZXJ0SW5kZXggKyBpbmplY3RlZFJ1bGVzKSkge1xuICAgICAgICBtYXlIYXZlSW1wb3J0ID0gZmFsc2U7XG4gICAgICAgIGluamVjdGVkUnVsZXMgKz0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiBpbXBvcnRSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICB1c2VkSW1wb3J0UnVsZVRhZyA9IHRydWU7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkuaW5zZXJ0UnVsZXMoaWQgKyAnLWltcG9ydCcsIGltcG9ydFJ1bGVzKTtcbiAgICB9XG5cbiAgICBzaXplc1ttYXJrZXJdICs9IGluamVjdGVkUnVsZXM7IC8qIGFkZCB1cCBubyBvZiBpbmplY3RlZCBydWxlcyAqL1xuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIHNpemUgPSBzaXplc1ttYXJrZXJdO1xuICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKGVsKTtcbiAgICB2YXIgcmVtb3ZhbEluZGV4ID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpIC0gMTtcbiAgICBkZWxldGVSdWxlcyhzaGVldCwgcmVtb3ZhbEluZGV4LCBzaXplKTtcbiAgICBzaXplc1ttYXJrZXJdID0gMDtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIHVzZWRJbXBvcnRSdWxlVGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkucmVtb3ZlUnVsZXMoaWQgKyAnLWltcG9ydCcpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBfc2hlZXRGb3JUYWcgPSBzaGVldEZvclRhZyhlbCksXG4gICAgICAgIGNzc1J1bGVzID0gX3NoZWV0Rm9yVGFnLmNzc1J1bGVzO1xuXG4gICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHN0ciArPSBtYWtlVGV4dE1hcmtlcihpZCk7XG4gICAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgICB2YXIgZW5kID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpO1xuICAgICAgdmFyIHNpemUgPSBzaXplc1ttYXJrZXJdO1xuICAgICAgZm9yICh2YXIgaSA9IGVuZCAtIHNpemU7IGkgPCBlbmQ7IGkgKz0gMSkge1xuICAgICAgICB2YXIgcnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgICBpZiAocnVsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3RyICs9IHJ1bGUuY3NzVGV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBjbG9uZTogZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDUpO1xuICAgIH0sXG5cbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBlbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG59O1xuXG52YXIgbWFrZVRleHROb2RlID0gZnVuY3Rpb24gbWFrZVRleHROb2RlKGlkKSB7XG4gIHJldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShtYWtlVGV4dE1hcmtlcihpZCkpO1xufTtcblxudmFyIG1ha2VCcm93c2VyVGFnID0gZnVuY3Rpb24gbWFrZUJyb3dzZXJUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgdmFyIG5hbWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIG1hcmtlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gIHZhciBleHRyYWN0SW1wb3J0ID0gZ2V0SW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkO1xuXG4gIC8qIGluZGljYXRlcyB3aGV0aGVyIGdldEltcG9ydFJ1bGVUYWcgd2FzIGNhbGxlZCAqL1xuICB2YXIgdXNlZEltcG9ydFJ1bGVUYWcgPSBmYWxzZTtcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICBtYXJrZXJzW2lkXSA9IG1ha2VUZXh0Tm9kZShpZCk7XG4gICAgZWwuYXBwZW5kQ2hpbGQobWFya2Vyc1tpZF0pO1xuICAgIG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF07XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgdmFyIGltcG9ydFJ1bGVzID0gW107XG4gICAgdmFyIGNzc1J1bGVzU2l6ZSA9IGNzc1J1bGVzLmxlbmd0aDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3NzUnVsZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBydWxlID0gY3NzUnVsZXNbaV07XG4gICAgICB2YXIgbWF5SGF2ZUltcG9ydCA9IGV4dHJhY3RJbXBvcnQ7XG4gICAgICBpZiAobWF5SGF2ZUltcG9ydCAmJiBydWxlLmluZGV4T2YoJ0BpbXBvcnQnKSAhPT0gLTEpIHtcbiAgICAgICAgaW1wb3J0UnVsZXMucHVzaChydWxlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1heUhhdmVJbXBvcnQgPSBmYWxzZTtcbiAgICAgICAgdmFyIHNlcGFyYXRvciA9IGkgPT09IGNzc1J1bGVzU2l6ZSAtIDEgPyAnJyA6ICcgJztcbiAgICAgICAgbWFya2VyLmFwcGVuZERhdGEoJycgKyBydWxlICsgc2VwYXJhdG9yKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIGltcG9ydFJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVzZWRJbXBvcnRSdWxlVGFnID0gdHJ1ZTtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5pbnNlcnRSdWxlcyhpZCArICctaW1wb3J0JywgaW1wb3J0UnVsZXMpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIC8qIGNyZWF0ZSBuZXcgZW1wdHkgdGV4dCBub2RlIGFuZCByZXBsYWNlIHRoZSBjdXJyZW50IG9uZSAqL1xuICAgIHZhciBuZXdNYXJrZXIgPSBtYWtlVGV4dE5vZGUoaWQpO1xuICAgIGVsLnJlcGxhY2VDaGlsZChuZXdNYXJrZXIsIG1hcmtlcik7XG4gICAgbWFya2Vyc1tpZF0gPSBuZXdNYXJrZXI7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiB1c2VkSW1wb3J0UnVsZVRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLnJlbW92ZVJ1bGVzKGlkICsgJy1pbXBvcnQnKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgc3RyID0gJyc7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgc3RyICs9IG1hcmtlcnNbaWRdLmRhdGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNsb25lOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNSk7XG4gICAgfSxcblxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IGVsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcbn07XG5cbnZhciBtYWtlU2VydmVyVGFnID0gZnVuY3Rpb24gbWFrZVNlcnZlclRhZyhuYW1lc0FyZywgbWFya2Vyc0FyZykge1xuICB2YXIgbmFtZXMgPSBuYW1lc0FyZyA9PT0gdW5kZWZpbmVkID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IG5hbWVzQXJnO1xuICB2YXIgbWFya2VycyA9IG1hcmtlcnNBcmcgPT09IHVuZGVmaW5lZCA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiBtYXJrZXJzQXJnO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIHJldHVybiBtYXJrZXJzW2lkXSA9IFsnJ107XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgbWFya2VyWzBdICs9IGNzc1J1bGVzLmpvaW4oJyAnKTtcbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcbiAgICBtYXJrZXJbMF0gPSAnJztcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBzdHIgPSAnJztcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgdmFyIGNzc0ZvcklkID0gbWFya2Vyc1tpZF1bMF07XG4gICAgICBpZiAoY3NzRm9ySWQpIHtcbiAgICAgICAgc3RyICs9IG1ha2VUZXh0TWFya2VyKGlkKSArIGNzc0ZvcklkO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHZhciBjbG9uZSA9IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgIHZhciBuYW1lc0Nsb25lID0gY2xvbmVOYW1lcyhuYW1lcyk7XG4gICAgdmFyIG1hcmtlcnNDbG9uZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgbWFya2Vyc0Nsb25lW2lkXSA9IFttYXJrZXJzW2lkXVswXV07XG4gICAgfVxuXG4gICAgcmV0dXJuIG1ha2VTZXJ2ZXJUYWcobmFtZXNDbG9uZSwgbWFya2Vyc0Nsb25lKTtcbiAgfTtcblxuICB2YXIgdGFnID0ge1xuICAgIGNsb25lOiBjbG9uZSxcbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBudWxsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcblxuICByZXR1cm4gdGFnO1xufTtcblxudmFyIG1ha2VUYWcgPSBmdW5jdGlvbiBtYWtlVGFnKHRhcmdldCwgdGFnRWwsIGZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgaWYgKElTX0JST1dTRVIgJiYgIWZvcmNlU2VydmVyKSB7XG4gICAgdmFyIGVsID0gbWFrZVN0eWxlVGFnKHRhcmdldCwgdGFnRWwsIGluc2VydEJlZm9yZSk7XG5cbiAgICBpZiAoRElTQUJMRV9TUEVFRFkpIHtcbiAgICAgIHJldHVybiBtYWtlQnJvd3NlclRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtYWtlU3BlZWR5VGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWFrZVNlcnZlclRhZygpO1xufTtcblxudmFyIHJlaHlkcmF0ZSA9IGZ1bmN0aW9uIHJlaHlkcmF0ZSh0YWcsIGVscywgZXh0cmFjdGVkKSB7XG4gIC8qIGFkZCBhbGwgZXh0cmFjdGVkIGNvbXBvbmVudHMgdG8gdGhlIG5ldyB0YWcgKi9cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGV4dHJhY3RlZC5sZW5ndGg7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgIHZhciBfZXh0cmFjdGVkJGkgPSBleHRyYWN0ZWRbaV0sXG4gICAgICAgIGNvbXBvbmVudElkID0gX2V4dHJhY3RlZCRpLmNvbXBvbmVudElkLFxuICAgICAgICBjc3NGcm9tRE9NID0gX2V4dHJhY3RlZCRpLmNzc0Zyb21ET007XG5cbiAgICB2YXIgY3NzUnVsZXMgPSBzcGxpdEJ5UnVsZXMoY3NzRnJvbURPTSk7XG4gICAgdGFnLmluc2VydFJ1bGVzKGNvbXBvbmVudElkLCBjc3NSdWxlcyk7XG4gIH1cblxuICAvKiByZW1vdmUgb2xkIEhUTUxTdHlsZUVsZW1lbnRzLCBzaW5jZSB0aGV5IGhhdmUgYmVlbiByZWh5ZHJhdGVkICovXG4gIGZvciAodmFyIF9pID0gMCwgX2xlbiA9IGVscy5sZW5ndGg7IF9pIDwgX2xlbjsgX2kgKz0gMSkge1xuICAgIHZhciBlbCA9IGVsc1tfaV07XG4gICAgaWYgKGVsLnBhcmVudE5vZGUpIHtcbiAgICAgIGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwpO1xuICAgIH1cbiAgfVxufTtcblxuLy8gXG5cbnZhciBTUExJVF9SRUdFWCA9IC9cXHMrLztcblxuLyogZGV0ZXJtaW5lIHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb21wb25lbnRzIGJlZm9yZSB0YWdzIGFyZSBzaGFyZGVkICovXG52YXIgTUFYX1NJWkUgPSB2b2lkIDA7XG5pZiAoSVNfQlJPV1NFUikge1xuICAvKiBpbiBzcGVlZHkgbW9kZSB3ZSBjYW4ga2VlcCBhIGxvdCBtb3JlIHJ1bGVzIGluIGEgc2hlZXQgYmVmb3JlIGEgc2xvd2Rvd24gY2FuIGJlIGV4cGVjdGVkICovXG4gIE1BWF9TSVpFID0gRElTQUJMRV9TUEVFRFkgPyA0MCA6IDEwMDA7XG59IGVsc2Uge1xuICAvKiBmb3Igc2VydmVycyB3ZSBkbyBub3QgbmVlZCB0byBzaGFyZCBhdCBhbGwgKi9cbiAgTUFYX1NJWkUgPSAtMTtcbn1cblxudmFyIHNoZWV0UnVubmluZ0lkID0gMDtcbnZhciBtYXN0ZXIgPSB2b2lkIDA7XG5cbnZhciBTdHlsZVNoZWV0ID0gZnVuY3Rpb24gKCkge1xuXG4gIC8qIGEgbWFwIGZyb20gaWRzIHRvIHRhZ3MgKi9cblxuICAvKiBkZWZlcnJlZCBydWxlcyBmb3IgYSBnaXZlbiBpZCAqL1xuXG4gIC8qIHRoaXMgaXMgdXNlZCBmb3Igbm90IHJlaW5qZWN0aW5nIHJ1bGVzIHZpYSBoYXNOYW1lRm9ySWQoKSAqL1xuXG4gIC8qIHdoZW4gcnVsZXMgZm9yIGFuIGlkIGFyZSByZW1vdmVkIHVzaW5nIHJlbW92ZSgpIHdlIGhhdmUgdG8gaWdub3JlIHJlaHlkcmF0ZWROYW1lcyBmb3IgaXQgKi9cblxuICAvKiBhIGxpc3Qgb2YgdGFncyBiZWxvbmdpbmcgdG8gdGhpcyBTdHlsZVNoZWV0ICovXG5cbiAgLyogYSB0YWcgZm9yIGltcG9ydCBydWxlcyAqL1xuXG4gIC8qIGN1cnJlbnQgY2FwYWNpdHkgdW50aWwgYSBuZXcgdGFnIG11c3QgYmUgY3JlYXRlZCAqL1xuXG4gIC8qIGNoaWxkcmVuIChha2EgY2xvbmVzKSBvZiB0aGlzIFN0eWxlU2hlZXQgaW5oZXJpdGluZyBhbGwgYW5kIGZ1dHVyZSBpbmplY3Rpb25zICovXG5cbiAgZnVuY3Rpb24gU3R5bGVTaGVldCgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIHRhcmdldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogSVNfQlJPV1NFUiA/IGRvY3VtZW50LmhlYWQgOiBudWxsO1xuICAgIHZhciBmb3JjZVNlcnZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVTaGVldCk7XG5cbiAgICB0aGlzLmdldEltcG9ydFJ1bGVUYWcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaW1wb3J0UnVsZVRhZyA9IF90aGlzLmltcG9ydFJ1bGVUYWc7XG5cbiAgICAgIGlmIChpbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGltcG9ydFJ1bGVUYWc7XG4gICAgICB9XG5cbiAgICAgIHZhciBmaXJzdFRhZyA9IF90aGlzLnRhZ3NbMF07XG4gICAgICB2YXIgaW5zZXJ0QmVmb3JlID0gdHJ1ZTtcblxuICAgICAgcmV0dXJuIF90aGlzLmltcG9ydFJ1bGVUYWcgPSBtYWtlVGFnKF90aGlzLnRhcmdldCwgZmlyc3RUYWcgPyBmaXJzdFRhZy5zdHlsZVRhZyA6IG51bGwsIF90aGlzLmZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUpO1xuICAgIH07XG5cbiAgICBzaGVldFJ1bm5pbmdJZCArPSAxO1xuICAgIHRoaXMuaWQgPSBzaGVldFJ1bm5pbmdJZDtcbiAgICB0aGlzLmZvcmNlU2VydmVyID0gZm9yY2VTZXJ2ZXI7XG4gICAgdGhpcy50YXJnZXQgPSBmb3JjZVNlcnZlciA/IG51bGwgOiB0YXJnZXQ7XG4gICAgdGhpcy50YWdNYXAgPSB7fTtcbiAgICB0aGlzLmRlZmVycmVkID0ge307XG4gICAgdGhpcy5yZWh5ZHJhdGVkTmFtZXMgPSB7fTtcbiAgICB0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lcyA9IHt9O1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY2FwYWNpdHkgPSAxO1xuICAgIHRoaXMuY2xvbmVzID0gW107XG4gIH1cblxuICAvKiByZWh5ZHJhdGUgYWxsIFNTUidkIHN0eWxlIHRhZ3MgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnJlaHlkcmF0ZSA9IGZ1bmN0aW9uIHJlaHlkcmF0ZSQkMSgpIHtcbiAgICBpZiAoIUlTX0JST1dTRVIgfHwgdGhpcy5mb3JjZVNlcnZlcikgcmV0dXJuIHRoaXM7XG5cbiAgICB2YXIgZWxzID0gW107XG4gICAgdmFyIGV4dHJhY3RlZCA9IFtdO1xuICAgIHZhciBpc1N0cmVhbWVkID0gZmFsc2U7XG5cbiAgICAvKiByZXRyaWV2ZSBhbGwgb2Ygb3VyIFNTUiBzdHlsZSBlbGVtZW50cyBmcm9tIHRoZSBET00gKi9cbiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzdHlsZVsnICsgU0NfQVRUUiArICddWycgKyBTQ19WRVJTSU9OX0FUVFIgKyAnPVwiJyArIFwiNC4xLjNcIiArICdcIl0nKTtcblxuICAgIHZhciBub2Rlc1NpemUgPSBub2Rlcy5sZW5ndGg7XG5cbiAgICAvKiBhYm9ydCByZWh5ZHJhdGlvbiBpZiBubyBwcmV2aW91cyBzdHlsZSB0YWdzIHdlcmUgZm91bmQgKi9cbiAgICBpZiAoIW5vZGVzU2l6ZSkgcmV0dXJuIHRoaXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgZWwgPSBub2Rlc1tpXTtcblxuICAgICAgLyogY2hlY2sgaWYgc3R5bGUgdGFnIGlzIGEgc3RyZWFtZWQgdGFnICovXG4gICAgICBpZiAoIWlzU3RyZWFtZWQpIGlzU3RyZWFtZWQgPSAhIWVsLmdldEF0dHJpYnV0ZShTQ19TVFJFQU1fQVRUUik7XG5cbiAgICAgIC8qIHJldHJpZXZlIGFsbCBjb21wb25lbnQgbmFtZXMgKi9cbiAgICAgIHZhciBlbE5hbWVzID0gKGVsLmdldEF0dHJpYnV0ZShTQ19BVFRSKSB8fCAnJykudHJpbSgpLnNwbGl0KFNQTElUX1JFR0VYKTtcbiAgICAgIHZhciBlbE5hbWVzU2l6ZSA9IGVsTmFtZXMubGVuZ3RoO1xuICAgICAgZm9yICh2YXIgaiA9IDAsIG5hbWU7IGogPCBlbE5hbWVzU2l6ZTsgaiArPSAxKSB7XG4gICAgICAgIG5hbWUgPSBlbE5hbWVzW2pdO1xuICAgICAgICAvKiBhZGQgcmVoeWRyYXRlZCBuYW1lIHRvIHNoZWV0IHRvIGF2b2lkIHJlLWFkZGluZyBzdHlsZXMgKi9cbiAgICAgICAgdGhpcy5yZWh5ZHJhdGVkTmFtZXNbbmFtZV0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvKiBleHRyYWN0IGFsbCBjb21wb25lbnRzIGFuZCB0aGVpciBDU1MgKi9cbiAgICAgIGV4dHJhY3RlZC5wdXNoLmFwcGx5KGV4dHJhY3RlZCwgZXh0cmFjdENvbXBzKGVsLnRleHRDb250ZW50KSk7XG5cbiAgICAgIC8qIHN0b3JlIG9yaWdpbmFsIEhUTUxTdHlsZUVsZW1lbnQgKi9cbiAgICAgIGVscy5wdXNoKGVsKTtcbiAgICB9XG5cbiAgICAvKiBhYm9ydCByZWh5ZHJhdGlvbiBpZiBub3RoaW5nIHdhcyBleHRyYWN0ZWQgKi9cbiAgICB2YXIgZXh0cmFjdGVkU2l6ZSA9IGV4dHJhY3RlZC5sZW5ndGg7XG4gICAgaWYgKCFleHRyYWN0ZWRTaXplKSByZXR1cm4gdGhpcztcblxuICAgIC8qIGNyZWF0ZSBhIHRhZyB0byBiZSB1c2VkIGZvciByZWh5ZHJhdGlvbiAqL1xuICAgIHZhciB0YWcgPSB0aGlzLm1ha2VUYWcobnVsbCk7XG5cbiAgICByZWh5ZHJhdGUodGFnLCBlbHMsIGV4dHJhY3RlZCk7XG5cbiAgICAvKiByZXNldCBjYXBhY2l0eSBhbmQgYWRqdXN0IE1BWF9TSVpFIGJ5IHRoZSBpbml0aWFsIHNpemUgb2YgdGhlIHJlaHlkcmF0aW9uICovXG4gICAgdGhpcy5jYXBhY2l0eSA9IE1hdGgubWF4KDEsIE1BWF9TSVpFIC0gZXh0cmFjdGVkU2l6ZSk7XG4gICAgdGhpcy50YWdzLnB1c2godGFnKTtcblxuICAgIC8qIHJldHJpZXZlIGFsbCBjb21wb25lbnQgaWRzICovXG4gICAgZm9yICh2YXIgX2ogPSAwOyBfaiA8IGV4dHJhY3RlZFNpemU7IF9qICs9IDEpIHtcbiAgICAgIHRoaXMudGFnTWFwW2V4dHJhY3RlZFtfal0uY29tcG9uZW50SWRdID0gdGFnO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qIHJldHJpZXZlIGEgXCJtYXN0ZXJcIiBpbnN0YW5jZSBvZiBTdHlsZVNoZWV0IHdoaWNoIGlzIHR5cGljYWxseSB1c2VkIHdoZW4gbm8gb3RoZXIgaXMgYXZhaWxhYmxlXG4gICAqIFRoZSBtYXN0ZXIgU3R5bGVTaGVldCBpcyB0YXJnZXRlZCBieSBjcmVhdGVHbG9iYWxTdHlsZSwga2V5ZnJhbWVzLCBhbmQgY29tcG9uZW50cyBvdXRzaWRlIG9mIGFueVxuICAgICogU3R5bGVTaGVldE1hbmFnZXIncyBjb250ZXh0ICovXG5cblxuICAvKiByZXNldCB0aGUgaW50ZXJuYWwgXCJtYXN0ZXJcIiBpbnN0YW5jZSAqL1xuICBTdHlsZVNoZWV0LnJlc2V0ID0gZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgdmFyIGZvcmNlU2VydmVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIG1hc3RlciA9IG5ldyBTdHlsZVNoZWV0KHVuZGVmaW5lZCwgZm9yY2VTZXJ2ZXIpLnJlaHlkcmF0ZSgpO1xuICB9O1xuXG4gIC8qIGFkZHMgXCJjaGlsZHJlblwiIHRvIHRoZSBTdHlsZVNoZWV0IHRoYXQgaW5oZXJpdCBhbGwgb2YgdGhlIHBhcmVudHMnIHJ1bGVzXG4gICAqIHdoaWxlIHRoZWlyIG93biBydWxlcyBkbyBub3QgYWZmZWN0IHRoZSBwYXJlbnQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgdmFyIHNoZWV0ID0gbmV3IFN0eWxlU2hlZXQodGhpcy50YXJnZXQsIHRoaXMuZm9yY2VTZXJ2ZXIpO1xuXG4gICAgLyogYWRkIHRvIGNsb25lIGFycmF5ICovXG4gICAgdGhpcy5jbG9uZXMucHVzaChzaGVldCk7XG5cbiAgICAvKiBjbG9uZSBhbGwgdGFncyAqL1xuICAgIHNoZWV0LnRhZ3MgPSB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHZhciBpZHMgPSB0YWcuZ2V0SWRzKCk7XG4gICAgICB2YXIgbmV3VGFnID0gdGFnLmNsb25lKCk7XG5cbiAgICAgIC8qIHJlY29uc3RydWN0IHRhZ01hcCAqL1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpZHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgc2hlZXQudGFnTWFwW2lkc1tpXV0gPSBuZXdUYWc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuZXdUYWc7XG4gICAgfSk7XG5cbiAgICAvKiBjbG9uZSBvdGhlciBtYXBzICovXG4gICAgc2hlZXQucmVoeWRyYXRlZE5hbWVzID0gX2V4dGVuZHMoe30sIHRoaXMucmVoeWRyYXRlZE5hbWVzKTtcbiAgICBzaGVldC5kZWZlcnJlZCA9IF9leHRlbmRzKHt9LCB0aGlzLmRlZmVycmVkKTtcblxuICAgIHJldHVybiBzaGVldDtcbiAgfTtcblxuICAvKiBmb3JjZSBTdHlsZVNoZWV0IHRvIGNyZWF0ZSBhIG5ldyB0YWcgb24gdGhlIG5leHQgaW5qZWN0aW9uICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5zZWFsQWxsVGFncyA9IGZ1bmN0aW9uIHNlYWxBbGxUYWdzKCkge1xuICAgIHRoaXMuY2FwYWNpdHkgPSAxO1xuXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICB0YWcuc2VhbGVkID0gdHJ1ZTtcbiAgICB9KTtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5tYWtlVGFnID0gZnVuY3Rpb24gbWFrZVRhZyQkMSh0YWcpIHtcbiAgICB2YXIgbGFzdEVsID0gdGFnID8gdGFnLnN0eWxlVGFnIDogbnVsbDtcbiAgICB2YXIgaW5zZXJ0QmVmb3JlID0gZmFsc2U7XG5cbiAgICByZXR1cm4gbWFrZVRhZyh0aGlzLnRhcmdldCwgbGFzdEVsLCB0aGlzLmZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUsIHRoaXMuZ2V0SW1wb3J0UnVsZVRhZyk7XG4gIH07XG5cbiAgLyogZ2V0IGEgdGFnIGZvciBhIGdpdmVuIGNvbXBvbmVudElkLCBhc3NpZ24gdGhlIGNvbXBvbmVudElkIHRvIG9uZSwgb3Igc2hhcmQgKi9cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0VGFnRm9ySWQgPSBmdW5jdGlvbiBnZXRUYWdGb3JJZChpZCkge1xuICAgIC8qIHNpbXBseSByZXR1cm4gYSB0YWcsIHdoZW4gdGhlIGNvbXBvbmVudElkIHdhcyBhbHJlYWR5IGFzc2lnbmVkIG9uZSAqL1xuICAgIHZhciBwcmV2ID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQgJiYgIXByZXYuc2VhbGVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXTtcblxuICAgIC8qIHNoYXJkIChjcmVhdGUgYSBuZXcgdGFnKSBpZiB0aGUgdGFnIGlzIGV4aGF1c3RlZCAoU2VlIE1BWF9TSVpFKSAqL1xuICAgIHRoaXMuY2FwYWNpdHkgLT0gMTtcblxuICAgIGlmICh0aGlzLmNhcGFjaXR5ID09PSAwKSB7XG4gICAgICB0aGlzLmNhcGFjaXR5ID0gTUFYX1NJWkU7XG4gICAgICB0YWcgPSB0aGlzLm1ha2VUYWcodGFnKTtcbiAgICAgIHRoaXMudGFncy5wdXNoKHRhZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMudGFnTWFwW2lkXSA9IHRhZztcbiAgfTtcblxuICAvKiBtYWlubHkgZm9yIGNyZWF0ZUdsb2JhbFN0eWxlIHRvIGNoZWNrIGZvciBpdHMgaWQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmhhc0lkID0gZnVuY3Rpb24gaGFzSWQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy50YWdNYXBbaWRdICE9PSB1bmRlZmluZWQ7XG4gIH07XG5cbiAgLyogY2FjaGluZyBsYXllciBjaGVja2luZyBpZCtuYW1lIHRvIGFscmVhZHkgaGF2ZSBhIGNvcnJlc3BvbmRpbmcgdGFnIGFuZCBpbmplY3RlZCBydWxlcyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaGFzTmFtZUZvcklkID0gZnVuY3Rpb24gaGFzTmFtZUZvcklkKGlkLCBuYW1lKSB7XG4gICAgLyogZXhjZXB0aW9uIGZvciByZWh5ZHJhdGVkIG5hbWVzIHdoaWNoIGFyZSBjaGVja2VkIHNlcGFyYXRlbHkgKi9cbiAgICBpZiAodGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXNbaWRdID09PSB1bmRlZmluZWQgJiYgdGhpcy5yZWh5ZHJhdGVkTmFtZXNbbmFtZV0pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgcmV0dXJuIHRhZyAhPT0gdW5kZWZpbmVkICYmIHRhZy5oYXNOYW1lRm9ySWQoaWQsIG5hbWUpO1xuICB9O1xuXG4gIC8qIHJlZ2lzdGVycyBhIGNvbXBvbmVudElkIGFuZCByZWdpc3RlcnMgaXQgb24gaXRzIHRhZyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuZGVmZXJyZWRJbmplY3QgPSBmdW5jdGlvbiBkZWZlcnJlZEluamVjdChpZCwgY3NzUnVsZXMpIHtcbiAgICAvKiBkb24ndCBpbmplY3Qgd2hlbiB0aGUgaWQgaXMgYWxyZWFkeSByZWdpc3RlcmVkICovXG4gICAgaWYgKHRoaXMudGFnTWFwW2lkXSAhPT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLmRlZmVycmVkSW5qZWN0KGlkLCBjc3NSdWxlcyk7XG4gICAgfVxuXG4gICAgdGhpcy5nZXRUYWdGb3JJZChpZCkuaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB0aGlzLmRlZmVycmVkW2lkXSA9IGNzc1J1bGVzO1xuICB9O1xuXG4gIC8qIGluamVjdHMgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQgd2l0aCBhIG5hbWUgdGhhdCB3aWxsIG5lZWQgdG8gYmUgY2FjaGVkICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5pbmplY3QgPSBmdW5jdGlvbiBpbmplY3QoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLmluamVjdChpZCwgY3NzUnVsZXMsIG5hbWUpO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLmdldFRhZ0ZvcklkKGlkKTtcblxuICAgIC8qIGFkZCBkZWZlcnJlZCBydWxlcyBmb3IgY29tcG9uZW50ICovXG4gICAgaWYgKHRoaXMuZGVmZXJyZWRbaWRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIENvbWJpbmUgcGFzc2VkIGNzc1J1bGVzIHdpdGggcHJldmlvdXNseSBkZWZlcnJlZCBDU1MgcnVsZXNcbiAgICAgIC8vIE5PVEU6IFdlIGNhbm5vdCBtdXRhdGUgdGhlIGRlZmVycmVkIGFycmF5IGl0c2VsZiBhcyBhbGwgY2xvbmVzXG4gICAgICAvLyBkbyB0aGUgc2FtZSAoc2VlIGNsb25lc1tpXS5pbmplY3QpXG4gICAgICB2YXIgcnVsZXMgPSB0aGlzLmRlZmVycmVkW2lkXS5jb25jYXQoY3NzUnVsZXMpO1xuICAgICAgdGFnLmluc2VydFJ1bGVzKGlkLCBydWxlcywgbmFtZSk7XG5cbiAgICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YWcuaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKTtcbiAgICB9XG4gIH07XG5cbiAgLyogcmVtb3ZlcyBhbGwgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQsIHdoaWNoIGRvZXNuJ3QgcmVtb3ZlIGl0cyBtYXJrZXIgYnV0IHJlc2V0cyBpdCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKGlkKSB7XG4gICAgdmFyIHRhZyA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICBpZiAodGFnID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0ucmVtb3ZlKGlkKTtcbiAgICB9XG5cbiAgICAvKiByZW1vdmUgYWxsIHJ1bGVzIGZyb20gdGhlIHRhZyAqL1xuICAgIHRhZy5yZW1vdmVSdWxlcyhpZCk7XG5cbiAgICAvKiBpZ25vcmUgcG9zc2libGUgcmVoeWRyYXRlZCBuYW1lcyAqL1xuICAgIHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzW2lkXSA9IHRydWU7XG5cbiAgICAvKiBkZWxldGUgcG9zc2libGUgZGVmZXJyZWQgcnVsZXMgKi9cbiAgICB0aGlzLmRlZmVycmVkW2lkXSA9IHVuZGVmaW5lZDtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS50b0hUTUwgPSBmdW5jdGlvbiB0b0hUTUwoKSB7XG4gICAgcmV0dXJuIHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy50b0hUTUwoKTtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS50b1JlYWN0RWxlbWVudHMgPSBmdW5jdGlvbiB0b1JlYWN0RWxlbWVudHMoKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZDtcblxuXG4gICAgcmV0dXJuIHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZywgaSkge1xuICAgICAgdmFyIGtleSA9ICdzYy0nICsgaWQgKyAnLScgKyBpO1xuICAgICAgcmV0dXJuIGNsb25lRWxlbWVudCh0YWcudG9FbGVtZW50KCksIHsga2V5OiBrZXkgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgY3JlYXRlQ2xhc3MoU3R5bGVTaGVldCwgbnVsbCwgW3tcbiAgICBrZXk6ICdtYXN0ZXInLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0JCQxKCkge1xuICAgICAgcmV0dXJuIG1hc3RlciB8fCAobWFzdGVyID0gbmV3IFN0eWxlU2hlZXQoKS5yZWh5ZHJhdGUoKSk7XG4gICAgfVxuXG4gICAgLyogTk9URTogVGhpcyBpcyBqdXN0IGZvciBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eSB3aXRoIGplc3Qtc3R5bGVkLWNvbXBvbmVudHMgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaW5zdGFuY2UnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0JCQxKCkge1xuICAgICAgcmV0dXJuIFN0eWxlU2hlZXQubWFzdGVyO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gU3R5bGVTaGVldDtcbn0oKTtcblxuLy8gXG5cbnZhciBLZXlmcmFtZXMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEtleWZyYW1lcyhuYW1lLCBydWxlcykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBLZXlmcmFtZXMpO1xuXG4gICAgdGhpcy5pbmplY3QgPSBmdW5jdGlvbiAoc3R5bGVTaGVldCkge1xuICAgICAgaWYgKCFzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChfdGhpcy5pZCwgX3RoaXMubmFtZSkpIHtcbiAgICAgICAgc3R5bGVTaGVldC5pbmplY3QoX3RoaXMuaWQsIF90aGlzLnJ1bGVzLCBfdGhpcy5uYW1lKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMTIsIFN0cmluZyhfdGhpcy5uYW1lKSk7XG4gICAgfTtcblxuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuXG4gICAgdGhpcy5pZCA9ICdzYy1rZXlmcmFtZXMtJyArIG5hbWU7XG4gIH1cblxuICBLZXlmcmFtZXMucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbiBnZXROYW1lKCkge1xuICAgIHJldHVybiB0aGlzLm5hbWU7XG4gIH07XG5cbiAgcmV0dXJuIEtleWZyYW1lcztcbn0oKTtcblxuLy8gXG5cbi8qKlxuICogaW5saW5lZCB2ZXJzaW9uIG9mXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmJqcy9ibG9iL21hc3Rlci9wYWNrYWdlcy9mYmpzL3NyYy9jb3JlL2h5cGhlbmF0ZVN0eWxlTmFtZS5qc1xuICovXG5cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gLyhbQS1aXSkvZztcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG5cbi8qKlxuICogSHlwaGVuYXRlcyBhIGNhbWVsY2FzZWQgQ1NTIHByb3BlcnR5IG5hbWUsIGZvciBleGFtcGxlOlxuICpcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ2JhY2tncm91bmRDb2xvcicpXG4gKiAgIDwgXCJiYWNrZ3JvdW5kLWNvbG9yXCJcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ01velRyYW5zaXRpb24nKVxuICogICA8IFwiLW1vei10cmFuc2l0aW9uXCJcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ21zVHJhbnNpdGlvbicpXG4gKiAgIDwgXCItbXMtdHJhbnNpdGlvblwiXG4gKlxuICogQXMgTW9kZXJuaXpyIHN1Z2dlc3RzIChodHRwOi8vbW9kZXJuaXpyLmNvbS9kb2NzLyNwcmVmaXhlZCksIGFuIGBtc2AgcHJlZml4XG4gKiBpcyBjb252ZXJ0ZWQgdG8gYC1tcy1gLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgJy0kMScpLnRvTG93ZXJDYXNlKCkucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59XG5cbi8vIFxuXG4vLyBUYWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I4N2FhYmRmZTFiNzQ2MWU3MzMxYWJiMzYwMWQ5ZTZiYjI3NTQ0YmMvcGFja2FnZXMvcmVhY3QtZG9tL3NyYy9zaGFyZWQvZGFuZ2Vyb3VzU3R5bGVWYWx1ZS5qc1xuZnVuY3Rpb24gYWRkVW5pdElmTmVlZGVkKG5hbWUsIHZhbHVlKSB7XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbWlsYWphY2svZXNsaW50LXBsdWdpbi1mbG93dHlwZS1lcnJvcnMvaXNzdWVzLzEzM1xuICAvLyAkRmxvd0ZpeE1lXG4gIGlmICh2YWx1ZSA9PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nIHx8IHZhbHVlID09PSAnJykge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIHZhbHVlICE9PSAwICYmICEobmFtZSBpbiB1bml0bGVzcykpIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnOyAvLyBQcmVzdW1lcyBpbXBsaWNpdCAncHgnIHN1ZmZpeCBmb3IgdW5pdGxlc3MgbnVtYmVyc1xuICB9XG5cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSkudHJpbSgpO1xufVxuXG4vLyBcblxuLyoqXG4gKiBJdCdzIGZhbHNpc2ggbm90IGZhbHN5IGJlY2F1c2UgMCBpcyBhbGxvd2VkLlxuICovXG52YXIgaXNGYWxzaXNoID0gZnVuY3Rpb24gaXNGYWxzaXNoKGNodW5rKSB7XG4gIHJldHVybiBjaHVuayA9PT0gdW5kZWZpbmVkIHx8IGNodW5rID09PSBudWxsIHx8IGNodW5rID09PSBmYWxzZSB8fCBjaHVuayA9PT0gJyc7XG59O1xuXG52YXIgb2JqVG9Dc3MgPSBmdW5jdGlvbiBvYmpUb0NzcyhvYmosIHByZXZLZXkpIHtcbiAgdmFyIGNzcyA9IE9iamVjdC5rZXlzKG9iaikuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gIWlzRmFsc2lzaChvYmpba2V5XSk7XG4gIH0pLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3Qob2JqW2tleV0pKSByZXR1cm4gb2JqVG9Dc3Mob2JqW2tleV0sIGtleSk7XG4gICAgcmV0dXJuIGh5cGhlbmF0ZVN0eWxlTmFtZShrZXkpICsgJzogJyArIGFkZFVuaXRJZk5lZWRlZChrZXksIG9ialtrZXldKSArICc7JztcbiAgfSkuam9pbignICcpO1xuICByZXR1cm4gcHJldktleSA/IHByZXZLZXkgKyAnIHtcXG4gICcgKyBjc3MgKyAnXFxufScgOiBjc3M7XG59O1xuXG5mdW5jdGlvbiBmbGF0dGVuKGNodW5rLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNodW5rKSkge1xuICAgIHZhciBydWxlU2V0ID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2h1bmsubGVuZ3RoLCByZXN1bHQ7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgICAgcmVzdWx0ID0gZmxhdHRlbihjaHVua1tpXSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG5cbiAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGNvbnRpbnVlO2Vsc2UgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkgcnVsZVNldC5wdXNoLmFwcGx5KHJ1bGVTZXQsIHJlc3VsdCk7ZWxzZSBydWxlU2V0LnB1c2gocmVzdWx0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcnVsZVNldDtcbiAgfVxuXG4gIGlmIChpc0ZhbHNpc2goY2h1bmspKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKiBIYW5kbGUgb3RoZXIgY29tcG9uZW50cyAqL1xuICBpZiAoaXNTdHlsZWRDb21wb25lbnQoY2h1bmspKSB7XG4gICAgcmV0dXJuICcuJyArIGNodW5rLnN0eWxlZENvbXBvbmVudElkO1xuICB9XG5cbiAgLyogRWl0aGVyIGV4ZWN1dGUgb3IgZGVmZXIgdGhlIGZ1bmN0aW9uICovXG4gIGlmIChpc0Z1bmN0aW9uKGNodW5rKSkge1xuICAgIGlmIChleGVjdXRpb25Db250ZXh0KSB7XG4gICAgICB2YXIgc2hvdWxkVGhyb3cgPSBmYWxzZTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5ldy1jYXBcbiAgICAgICAgaWYgKGlzRWxlbWVudChuZXcgY2h1bmsoZXhlY3V0aW9uQ29udGV4dCkpKSB7XG4gICAgICAgICAgc2hvdWxkVGhyb3cgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8qICovXG4gICAgICB9XG5cbiAgICAgIGlmIChzaG91bGRUaHJvdykge1xuICAgICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEzLCBnZXRDb21wb25lbnROYW1lKGNodW5rKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbGF0dGVuKGNodW5rKGV4ZWN1dGlvbkNvbnRleHQpLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgaWYgKGNodW5rIGluc3RhbmNlb2YgS2V5ZnJhbWVzKSB7XG4gICAgaWYgKHN0eWxlU2hlZXQpIHtcbiAgICAgIGNodW5rLmluamVjdChzdHlsZVNoZWV0KTtcbiAgICAgIHJldHVybiBjaHVuay5nZXROYW1lKCk7XG4gICAgfSBlbHNlIHJldHVybiBjaHVuaztcbiAgfVxuXG4gIC8qIEhhbmRsZSBvYmplY3RzICovXG4gIHJldHVybiBpc1BsYWluT2JqZWN0KGNodW5rKSA/IG9ialRvQ3NzKGNodW5rKSA6IGNodW5rLnRvU3RyaW5nKCk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBjc3Moc3R5bGVzKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoaXNGdW5jdGlvbihzdHlsZXMpIHx8IGlzUGxhaW5PYmplY3Qoc3R5bGVzKSkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gZmxhdHRlbihpbnRlcmxlYXZlKEVNUFRZX0FSUkFZLCBbc3R5bGVzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKSk7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lXG4gIHJldHVybiBmbGF0dGVuKGludGVybGVhdmUoc3R5bGVzLCBpbnRlcnBvbGF0aW9ucykpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZykge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogRU1QVFlfT0JKRUNUO1xuXG4gIGlmICghaXNWYWxpZEVsZW1lbnRUeXBlKHRhZykpIHtcbiAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEsIFN0cmluZyh0YWcpKTtcbiAgfVxuXG4gIC8qIFRoaXMgaXMgY2FsbGFibGUgZGlyZWN0bHkgYXMgYSB0ZW1wbGF0ZSBmdW5jdGlvbiAqL1xuICAvLyAkRmxvd0ZpeE1lOiBOb3QgdHlwZWQgdG8gYXZvaWQgZGVzdHJ1Y3R1cmluZyBhcmd1bWVudHNcbiAgdmFyIHRlbXBsYXRlRnVuY3Rpb24gPSBmdW5jdGlvbiB0ZW1wbGF0ZUZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb21wb25lbnRDb25zdHJ1Y3Rvcih0YWcsIG9wdGlvbnMsIGNzcy5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cykpO1xuICB9O1xuXG4gIC8qIElmIGNvbmZpZyBtZXRob2RzIGFyZSBjYWxsZWQsIHdyYXAgdXAgYSBuZXcgdGVtcGxhdGUgZnVuY3Rpb24gYW5kIG1lcmdlIG9wdGlvbnMgKi9cbiAgdGVtcGxhdGVGdW5jdGlvbi53aXRoQ29uZmlnID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywgY29uZmlnKSk7XG4gIH07XG5cbiAgLyogTW9kaWZ5L2luamVjdCBuZXcgcHJvcHMgYXQgcnVudGltZSAqL1xuICB0ZW1wbGF0ZUZ1bmN0aW9uLmF0dHJzID0gZnVuY3Rpb24gKGF0dHJzKSB7XG4gICAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBhdHRyczogQXJyYXkucHJvdG90eXBlLmNvbmNhdChvcHRpb25zLmF0dHJzLCBhdHRycykuZmlsdGVyKEJvb2xlYW4pXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiB0ZW1wbGF0ZUZ1bmN0aW9uO1xufVxuXG4vLyBcbi8vIFNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzL2Jsb2IvbWFzdGVyL211cm11cmhhc2gyX2djLmpzXG5mdW5jdGlvbiBtdXJtdXJoYXNoKGMpIHtcbiAgZm9yICh2YXIgZSA9IGMubGVuZ3RoIHwgMCwgYSA9IGUgfCAwLCBkID0gMCwgYjsgZSA+PSA0Oykge1xuICAgIGIgPSBjLmNoYXJDb2RlQXQoZCkgJiAyNTUgfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDggfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDE2IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCAyNCwgYiA9IDE1NDA0ODM0NzcgKiAoYiAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChiID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpLCBiIF49IGIgPj4+IDI0LCBiID0gMTU0MDQ4MzQ3NyAqIChiICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGIgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNiksIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSBeIGIsIGUgLT0gNCwgKytkO1xuICB9XG4gIHN3aXRjaCAoZSkge1xuICAgIGNhc2UgMzpcbiAgICAgIGEgXj0gKGMuY2hhckNvZGVBdChkICsgMikgJiAyNTUpIDw8IDE2O1xuICAgIGNhc2UgMjpcbiAgICAgIGEgXj0gKGMuY2hhckNvZGVBdChkICsgMSkgJiAyNTUpIDw8IDg7XG4gICAgY2FzZSAxOlxuICAgICAgYSBePSBjLmNoYXJDb2RlQXQoZCkgJiAyNTUsIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KTtcbiAgfVxuICBhIF49IGEgPj4+IDEzO1xuICBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNik7XG4gIHJldHVybiAoYSBeIGEgPj4+IDE1KSA+Pj4gMDtcbn1cblxuLy8gXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qIFRoaXMgaXMgdGhlIFwiY2FwYWNpdHlcIiBvZiBvdXIgYWxwaGFiZXQgaS5lLiAyeDI2IGZvciBhbGwgbGV0dGVycyBwbHVzIHRoZWlyIGNhcGl0YWxpc2VkXG4gKiBjb3VudGVycGFydHMgKi9cbnZhciBjaGFyc0xlbmd0aCA9IDUyO1xuXG4vKiBzdGFydCBhdCA3NSBmb3IgJ2EnIHVudGlsICd6JyAoMjUpIGFuZCB0aGVuIHN0YXJ0IGF0IDY1IGZvciBjYXBpdGFsaXNlZCBsZXR0ZXJzICovXG52YXIgZ2V0QWxwaGFiZXRpY0NoYXIgPSBmdW5jdGlvbiBnZXRBbHBoYWJldGljQ2hhcihjb2RlKSB7XG4gIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUgKyAoY29kZSA+IDI1ID8gMzkgOiA5NykpO1xufTtcblxuLyogaW5wdXQgYSBudW1iZXIsIHVzdWFsbHkgYSBoYXNoIGFuZCBjb252ZXJ0IGl0IHRvIGJhc2UtNTIgKi9cbmZ1bmN0aW9uIGdlbmVyYXRlQWxwaGFiZXRpY05hbWUoY29kZSkge1xuICB2YXIgbmFtZSA9ICcnO1xuICB2YXIgeCA9IHZvaWQgMDtcblxuICAvKiBnZXQgYSBjaGFyIGFuZCBkaXZpZGUgYnkgYWxwaGFiZXQtbGVuZ3RoICovXG4gIGZvciAoeCA9IGNvZGU7IHggPiBjaGFyc0xlbmd0aDsgeCA9IE1hdGguZmxvb3IoeCAvIGNoYXJzTGVuZ3RoKSkge1xuICAgIG5hbWUgPSBnZXRBbHBoYWJldGljQ2hhcih4ICUgY2hhcnNMZW5ndGgpICsgbmFtZTtcbiAgfVxuXG4gIHJldHVybiBnZXRBbHBoYWJldGljQ2hhcih4ICUgY2hhcnNMZW5ndGgpICsgbmFtZTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGhhc0Z1bmN0aW9uT2JqZWN0S2V5KG9iaikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluLCBuby1yZXN0cmljdGVkLXN5bnRheFxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24ob2JqW2tleV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGlzU3RhdGljUnVsZXMocnVsZXMsIGF0dHJzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgcnVsZSA9IHJ1bGVzW2ldO1xuXG4gICAgLy8gcmVjdXJzaXZlIGNhc2VcbiAgICBpZiAoQXJyYXkuaXNBcnJheShydWxlKSAmJiAhaXNTdGF0aWNSdWxlcyhydWxlLCBhdHRycykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24ocnVsZSkgJiYgIWlzU3R5bGVkQ29tcG9uZW50KHJ1bGUpKSB7XG4gICAgICAvLyBmdW5jdGlvbnMgYXJlIGFsbG93ZWQgdG8gYmUgc3RhdGljIGlmIHRoZXkncmUganVzdCBiZWluZ1xuICAgICAgLy8gdXNlZCB0byBnZXQgdGhlIGNsYXNzbmFtZSBvZiBhIG5lc3RlZCBzdHlsZWQgY29tcG9uZW50XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgaWYgKGF0dHJzLnNvbWUoZnVuY3Rpb24gKHgpIHtcbiAgICByZXR1cm4gaXNGdW5jdGlvbih4KSB8fCBoYXNGdW5jdGlvbk9iamVjdEtleSh4KTtcbiAgfSkpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gXG5cbnZhciBpc0hNUkVuYWJsZWQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5ob3Q7XG5cbi8qIGNvbWJpbmVzIGhhc2hTdHIgKG11cm11cmhhc2gpIGFuZCBuYW1lR2VuZXJhdG9yIGZvciBjb252ZW5pZW5jZSAqL1xudmFyIGhhc2hlciA9IGZ1bmN0aW9uIGhhc2hlcihzdHIpIHtcbiAgcmV0dXJuIGdlbmVyYXRlQWxwaGFiZXRpY05hbWUobXVybXVyaGFzaChzdHIpKTtcbn07XG5cbi8qXG4gQ29tcG9uZW50U3R5bGUgaXMgYWxsIHRoZSBDU1Mtc3BlY2lmaWMgc3R1ZmYsIG5vdFxuIHRoZSBSZWFjdC1zcGVjaWZpYyBzdHVmZi5cbiAqL1xuXG52YXIgQ29tcG9uZW50U3R5bGUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENvbXBvbmVudFN0eWxlKHJ1bGVzLCBhdHRycywgY29tcG9uZW50SWQpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBDb21wb25lbnRTdHlsZSk7XG5cbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG4gICAgdGhpcy5pc1N0YXRpYyA9ICFpc0hNUkVuYWJsZWQgJiYgaXNTdGF0aWNSdWxlcyhydWxlcywgYXR0cnMpO1xuICAgIHRoaXMuY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcblxuICAgIGlmICghU3R5bGVTaGVldC5tYXN0ZXIuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBTdHlsZVNoZWV0Lm1hc3Rlci5kZWZlcnJlZEluamVjdChjb21wb25lbnRJZCwgW10pO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAgICogRmxhdHRlbnMgYSBydWxlIHNldCBpbnRvIHZhbGlkIENTU1xuICAgICAqIEhhc2hlcyBpdCwgd3JhcHMgdGhlIHdob2xlIGNodW5rIGluIGEgLmhhc2gxMjM0IHt9XG4gICAgICogUmV0dXJucyB0aGUgaGFzaCB0byBiZSBpbmplY3RlZCBvbiByZW5kZXIoKVxuICAgICAqICovXG5cblxuICBDb21wb25lbnRTdHlsZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMgPSBmdW5jdGlvbiBnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gICAgdmFyIGlzU3RhdGljID0gdGhpcy5pc1N0YXRpYyxcbiAgICAgICAgY29tcG9uZW50SWQgPSB0aGlzLmNvbXBvbmVudElkLFxuICAgICAgICBsYXN0Q2xhc3NOYW1lID0gdGhpcy5sYXN0Q2xhc3NOYW1lO1xuXG4gICAgaWYgKElTX0JST1dTRVIgJiYgaXNTdGF0aWMgJiYgdHlwZW9mIGxhc3RDbGFzc05hbWUgPT09ICdzdHJpbmcnICYmIHN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKGNvbXBvbmVudElkLCBsYXN0Q2xhc3NOYW1lKSkge1xuICAgICAgcmV0dXJuIGxhc3RDbGFzc05hbWU7XG4gICAgfVxuXG4gICAgdmFyIGZsYXRDU1MgPSBmbGF0dGVuKHRoaXMucnVsZXMsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIHZhciBuYW1lID0gaGFzaGVyKHRoaXMuY29tcG9uZW50SWQgKyBmbGF0Q1NTLmpvaW4oJycpKTtcbiAgICBpZiAoIXN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKGNvbXBvbmVudElkLCBuYW1lKSkge1xuICAgICAgc3R5bGVTaGVldC5pbmplY3QodGhpcy5jb21wb25lbnRJZCwgc3RyaW5naWZ5UnVsZXMoZmxhdENTUywgJy4nICsgbmFtZSwgdW5kZWZpbmVkLCBjb21wb25lbnRJZCksIG5hbWUpO1xuICAgIH1cblxuICAgIHRoaXMubGFzdENsYXNzTmFtZSA9IG5hbWU7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH07XG5cbiAgQ29tcG9uZW50U3R5bGUuZ2VuZXJhdGVOYW1lID0gZnVuY3Rpb24gZ2VuZXJhdGVOYW1lKHN0cikge1xuICAgIHJldHVybiBoYXNoZXIoc3RyKTtcbiAgfTtcblxuICByZXR1cm4gQ29tcG9uZW50U3R5bGU7XG59KCk7XG5cbi8vIFxuXG52YXIgTElNSVQgPSAyMDA7XG5cbnZhciBjcmVhdGVXYXJuVG9vTWFueUNsYXNzZXMgPSAoZnVuY3Rpb24gKGRpc3BsYXlOYW1lKSB7XG4gIHZhciBnZW5lcmF0ZWRDbGFzc2VzID0ge307XG4gIHZhciB3YXJuaW5nU2VlbiA9IGZhbHNlO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKCF3YXJuaW5nU2Vlbikge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3Nlc1tjbGFzc05hbWVdID0gdHJ1ZTtcbiAgICAgIGlmIChPYmplY3Qua2V5cyhnZW5lcmF0ZWRDbGFzc2VzKS5sZW5ndGggPj0gTElNSVQpIHtcbiAgICAgICAgLy8gVW5hYmxlIHRvIGZpbmQgbGF0ZXN0UnVsZSBpbiB0ZXN0IGVudmlyb25tZW50LlxuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlLCBwcmVmZXItdGVtcGxhdGUgKi9cbiAgICAgICAgY29uc29sZS53YXJuKCdPdmVyICcgKyBMSU1JVCArICcgY2xhc3NlcyB3ZXJlIGdlbmVyYXRlZCBmb3IgY29tcG9uZW50ICcgKyBkaXNwbGF5TmFtZSArICcuIFxcbicgKyAnQ29uc2lkZXIgdXNpbmcgdGhlIGF0dHJzIG1ldGhvZCwgdG9nZXRoZXIgd2l0aCBhIHN0eWxlIG9iamVjdCBmb3IgZnJlcXVlbnRseSBjaGFuZ2VkIHN0eWxlcy5cXG4nICsgJ0V4YW1wbGU6XFxuJyArICcgIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMoe1xcbicgKyAnICAgIHN0eWxlOiAoeyBiYWNrZ3JvdW5kIH0pID0+ICh7XFxuJyArICcgICAgICBiYWNrZ3JvdW5kLFxcbicgKyAnICAgIH0pLFxcbicgKyAnICB9KWB3aWR0aDogMTAwJTtgXFxuXFxuJyArICcgIDxDb21wb25lbnQgLz4nKTtcbiAgICAgICAgd2FybmluZ1NlZW4gPSB0cnVlO1xuICAgICAgICBnZW5lcmF0ZWRDbGFzc2VzID0ge307XG4gICAgICB9XG4gICAgfVxuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgZGV0ZXJtaW5lVGhlbWUgPSAoZnVuY3Rpb24gKHByb3BzLCBmYWxsYmFja1RoZW1lKSB7XG4gIHZhciBkZWZhdWx0UHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IEVNUFRZX09CSkVDVDtcblxuICAvLyBQcm9wcyBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgVGhlbWVQcm92aWRlciwgd2hpY2ggc2hvdWxkIHRha2UgcHJlY2VkZW5jZSBvdmVyXG4gIC8vIGRlZmF1bHRQcm9wcywgYnV0IFJlYWN0IGF1dG9tYXRpY2FsbHkgcHV0cyBkZWZhdWx0UHJvcHMgb24gcHJvcHMuXG5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcywgZmxvd3R5cGUtZXJyb3JzL3Nob3ctZXJyb3JzICovXG4gIHZhciBpc0RlZmF1bHRUaGVtZSA9IGRlZmF1bHRQcm9wcyA/IHByb3BzLnRoZW1lID09PSBkZWZhdWx0UHJvcHMudGhlbWUgOiBmYWxzZTtcbiAgdmFyIHRoZW1lID0gcHJvcHMudGhlbWUgJiYgIWlzRGVmYXVsdFRoZW1lID8gcHJvcHMudGhlbWUgOiBmYWxsYmFja1RoZW1lIHx8IGRlZmF1bHRQcm9wcy50aGVtZTtcbiAgLyogZXNsaW50LWVuYWJsZSAqL1xuXG4gIHJldHVybiB0aGVtZTtcbn0pO1xuXG4vLyBcbnZhciBlc2NhcGVSZWdleCA9IC9bW1xcXS4jKiQ+PCt+PXxeOigpLFwiJ2AtXSsvZztcbnZhciBkYXNoZXNBdEVuZHMgPSAvKF4tfC0kKS9nO1xuXG4vKipcbiAqIFRPRE86IEV4cGxvcmUgdXNpbmcgQ1NTLmVzY2FwZSB3aGVuIGl0IGJlY29tZXMgbW9yZSBhdmFpbGFibGVcbiAqIGluIGV2ZXJncmVlbiBicm93c2Vycy5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyXG4gIC8vIFJlcGxhY2UgYWxsIHBvc3NpYmxlIENTUyBzZWxlY3RvcnNcbiAgLnJlcGxhY2UoZXNjYXBlUmVnZXgsICctJylcblxuICAvLyBSZW1vdmUgZXh0cmFuZW91cyBoeXBoZW5zIGF0IHRoZSBzdGFydCBhbmQgZW5kXG4gIC5yZXBsYWNlKGRhc2hlc0F0RW5kcywgJycpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gaXNUYWcodGFyZ2V0KSB7XG4gIHJldHVybiB0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHRhcmdldC5jaGFyQXQoMCkgPT09IHRhcmdldC5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSA6IHRydWUpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gZ2VuZXJhdGVEaXNwbGF5TmFtZSh0YXJnZXQpIHtcbiAgLy8gJEZsb3dGaXhNZVxuICByZXR1cm4gaXNUYWcodGFyZ2V0KSA/ICdzdHlsZWQuJyArIHRhcmdldCA6ICdTdHlsZWQoJyArIGdldENvbXBvbmVudE5hbWUodGFyZ2V0KSArICcpJztcbn1cblxudmFyIF9UWVBFX1NUQVRJQ1M7XG5cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcblxudmFyIFRZUEVfU1RBVElDUyA9IChfVFlQRV9TVEFUSUNTID0ge30sIF9UWVBFX1NUQVRJQ1NbRm9yd2FyZFJlZl0gPSB7XG4gICQkdHlwZW9mOiB0cnVlLFxuICByZW5kZXI6IHRydWVcbn0sIF9UWVBFX1NUQVRJQ1MpO1xuXG52YXIgZGVmaW5lUHJvcGVydHkkMSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSxcbiAgICBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMsXG4gICAgX09iamVjdCRnZXRPd25Qcm9wZXJ0ID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxcbiAgICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBfT2JqZWN0JGdldE93blByb3BlcnQgPT09IHVuZGVmaW5lZCA/IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIFtdO1xufSA6IF9PYmplY3QkZ2V0T3duUHJvcGVydCxcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLFxuICAgIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLFxuICAgIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG52YXIgYXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG5cblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGFycmF5UHJvdG90eXBlLmNvbmNhdChnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCksXG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gVFlQRV9TVEFUSUNTW3RhcmdldENvbXBvbmVudC4kJHR5cGVvZl0gfHwgUkVBQ1RfU1RBVElDUztcblxuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gVFlQRV9TVEFUSUNTW3NvdXJjZUNvbXBvbmVudC4kJHR5cGVvZl0gfHwgUkVBQ1RfU1RBVElDUztcblxuICAgIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSB2b2lkIDA7XG4gICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wbHVzcGx1c1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICBpZiAoZGVzY3JpcHRvcikge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSQxKHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvKiBmYWlsIHNpbGVudGx5ICovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbi8vIFxuZnVuY3Rpb24gaXNEZXJpdmVkUmVhY3RDb21wb25lbnQoZm4pIHtcbiAgcmV0dXJuICEhKGZuICYmIGZuLnByb3RvdHlwZSAmJiBmbi5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCk7XG59XG5cbi8vIFxuLy8gSGVscGVyIHRvIGNhbGwgYSBnaXZlbiBmdW5jdGlvbiwgb25seSBvbmNlXG52YXIgb25jZSA9IChmdW5jdGlvbiAoY2IpIHtcbiAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICBjYi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgVGhlbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG52YXIgVGhlbWVDb25zdW1lciA9IFRoZW1lQ29udGV4dC5Db25zdW1lcjtcblxuLyoqXG4gKiBQcm92aWRlIGEgdGhlbWUgdG8gYW4gZW50aXJlIHJlYWN0IGNvbXBvbmVudCB0cmVlIHZpYSBjb250ZXh0XG4gKi9cblxudmFyIFRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhUaGVtZVByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgVGhlbWVQcm92aWRlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZ2V0Q29udGV4dCA9IG1lbW9pemUoX3RoaXMuZ2V0Q29udGV4dC5iaW5kKF90aGlzKSk7XG4gICAgX3RoaXMucmVuZGVySW5uZXIgPSBfdGhpcy5yZW5kZXJJbm5lci5iaW5kKF90aGlzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgaWYgKCF0aGlzLnByb3BzLmNoaWxkcmVuKSByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb250ZXh0LkNvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVySW5uZXJcbiAgICApO1xuICB9O1xuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIob3V0ZXJUaGVtZSkge1xuICAgIHZhciBjb250ZXh0ID0gdGhpcy5nZXRDb250ZXh0KHRoaXMucHJvcHMudGhlbWUsIG91dGVyVGhlbWUpO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnRleHQuUHJvdmlkZXIsXG4gICAgICB7IHZhbHVlOiBjb250ZXh0IH0sXG4gICAgICBSZWFjdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pXG4gICAgKTtcbiAgfTtcblxuICAvKipcbiAgICogR2V0IHRoZSB0aGVtZSBmcm9tIHRoZSBwcm9wcywgc3VwcG9ydGluZyBib3RoIChvdXRlclRoZW1lKSA9PiB7fVxuICAgKiBhcyB3ZWxsIGFzIG9iamVjdCBub3RhdGlvblxuICAgKi9cblxuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLmdldFRoZW1lID0gZnVuY3Rpb24gZ2V0VGhlbWUodGhlbWUsIG91dGVyVGhlbWUpIHtcbiAgICBpZiAoaXNGdW5jdGlvbih0aGVtZSkpIHtcbiAgICAgIHZhciBtZXJnZWRUaGVtZSA9IHRoZW1lKG91dGVyVGhlbWUpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAobWVyZ2VkVGhlbWUgPT09IG51bGwgfHwgQXJyYXkuaXNBcnJheShtZXJnZWRUaGVtZSkgfHwgKHR5cGVvZiBtZXJnZWRUaGVtZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobWVyZ2VkVGhlbWUpKSAhPT0gJ29iamVjdCcpKSB7XG4gICAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtZXJnZWRUaGVtZTtcbiAgICB9XG5cbiAgICBpZiAodGhlbWUgPT09IG51bGwgfHwgQXJyYXkuaXNBcnJheSh0aGVtZSkgfHwgKHR5cGVvZiB0aGVtZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodGhlbWUpKSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoOCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBvdXRlclRoZW1lLCB0aGVtZSk7XG4gIH07XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUuZ2V0Q29udGV4dCA9IGZ1bmN0aW9uIGdldENvbnRleHQodGhlbWUsIG91dGVyVGhlbWUpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRUaGVtZSh0aGVtZSwgb3V0ZXJUaGVtZSk7XG4gIH07XG5cbiAgcmV0dXJuIFRoZW1lUHJvdmlkZXI7XG59KENvbXBvbmVudCk7XG5cbi8vIFxuXG52YXIgU2VydmVyU3R5bGVTaGVldCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2VydmVyU3R5bGVTaGVldCgpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTZXJ2ZXJTdHlsZVNoZWV0KTtcblxuICAgIC8qIFRoZSBtYXN0ZXIgc2hlZXQgbWlnaHQgYmUgcmVzZXQsIHNvIGtlZXAgYSByZWZlcmVuY2UgaGVyZSAqL1xuICAgIHRoaXMubWFzdGVyU2hlZXQgPSBTdHlsZVNoZWV0Lm1hc3RlcjtcbiAgICB0aGlzLmluc3RhbmNlID0gdGhpcy5tYXN0ZXJTaGVldC5jbG9uZSgpO1xuICAgIHRoaXMuc2VhbGVkID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogTWFyayB0aGUgU2VydmVyU3R5bGVTaGVldCBhcyBiZWluZyBmdWxseSBlbWl0dGVkIGFuZCBtYW51YWxseSBHQyBpdCBmcm9tIHRoZVxuICAgKiBTdHlsZVNoZWV0IHNpbmdsZXRvbi5cbiAgICovXG5cblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5zZWFsID0gZnVuY3Rpb24gc2VhbCgpIHtcbiAgICBpZiAoIXRoaXMuc2VhbGVkKSB7XG4gICAgICAvKiBSZW1vdmUgc2VhbGVkIFN0eWxlU2hlZXRzIGZyb20gdGhlIG1hc3RlciBzaGVldCAqL1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5tYXN0ZXJTaGVldC5jbG9uZXMuaW5kZXhPZih0aGlzLmluc3RhbmNlKTtcbiAgICAgIHRoaXMubWFzdGVyU2hlZXQuY2xvbmVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB0aGlzLnNlYWxlZCA9IHRydWU7XG4gICAgfVxuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmNvbGxlY3RTdHlsZXMgPSBmdW5jdGlvbiBjb2xsZWN0U3R5bGVzKGNoaWxkcmVuKSB7XG4gICAgaWYgKHRoaXMuc2VhbGVkKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDIpO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldE1hbmFnZXIsXG4gICAgICB7IHNoZWV0OiB0aGlzLmluc3RhbmNlIH0sXG4gICAgICBjaGlsZHJlblxuICAgICk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0U3R5bGVUYWdzID0gZnVuY3Rpb24gZ2V0U3R5bGVUYWdzKCkge1xuICAgIHRoaXMuc2VhbCgpO1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLnRvSFRNTCgpO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmdldFN0eWxlRWxlbWVudCA9IGZ1bmN0aW9uIGdldFN0eWxlRWxlbWVudCgpIHtcbiAgICB0aGlzLnNlYWwoKTtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS50b1JlYWN0RWxlbWVudHMoKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5pbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0gPSBmdW5jdGlvbiBpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0ocmVhZGFibGVTdHJlYW0pIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigzKTtcbiAgICB9XG5cbiAgICAvKiB0aGUgdGFnIGluZGV4IGtlZXBzIHRyYWNrIG9mIHdoaWNoIHRhZ3MgaGF2ZSBhbHJlYWR5IGJlZW4gZW1pdHRlZCAqL1xuICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuaW5zdGFuY2U7XG5cbiAgICB2YXIgaW5zdGFuY2VUYWdJbmRleCA9IDA7XG5cbiAgICB2YXIgc3RyZWFtQXR0ciA9IFNDX1NUUkVBTV9BVFRSICsgJz1cInRydWVcIic7XG5cbiAgICB2YXIgdHJhbnNmb3JtZXIgPSBuZXcgc3RyZWFtLlRyYW5zZm9ybSh7XG4gICAgICB0cmFuc2Zvcm06IGZ1bmN0aW9uIGFwcGVuZFN0eWxlQ2h1bmtzKGNodW5rLCAvKiBlbmNvZGluZyAqL18sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB0YWdzID0gaW5zdGFuY2UudGFncztcblxuICAgICAgICB2YXIgaHRtbCA9ICcnO1xuXG4gICAgICAgIC8qIHJldHJpZXZlIGh0bWwgZm9yIGVhY2ggbmV3IHN0eWxlIHRhZyAqL1xuICAgICAgICBmb3IgKDsgaW5zdGFuY2VUYWdJbmRleCA8IHRhZ3MubGVuZ3RoOyBpbnN0YW5jZVRhZ0luZGV4ICs9IDEpIHtcbiAgICAgICAgICB2YXIgdGFnID0gdGFnc1tpbnN0YW5jZVRhZ0luZGV4XTtcbiAgICAgICAgICBodG1sICs9IHRhZy50b0hUTUwoc3RyZWFtQXR0cik7XG4gICAgICAgIH1cblxuICAgICAgICAvKiBmb3JjZSBvdXIgU3R5bGVTaGVldHMgdG8gZW1pdCBlbnRpcmVseSBuZXcgdGFncyAqL1xuICAgICAgICBpbnN0YW5jZS5zZWFsQWxsVGFncygpO1xuXG4gICAgICAgIC8qIHByZXBlbmQgc3R5bGUgaHRtbCB0byBjaHVuayAqL1xuICAgICAgICB0aGlzLnB1c2goaHRtbCArIGNodW5rKTtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJlYWRhYmxlU3RyZWFtLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuc2VhbCgpO1xuICAgIH0pO1xuICAgIHJlYWRhYmxlU3RyZWFtLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIF90aGlzLnNlYWwoKTtcblxuICAgICAgLy8gZm9yd2FyZCB0aGUgZXJyb3IgdG8gdGhlIHRyYW5zZm9ybSBzdHJlYW1cbiAgICAgIHRyYW5zZm9ybWVyLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9KTtcblxuICAgIHJldHVybiByZWFkYWJsZVN0cmVhbS5waXBlKHRyYW5zZm9ybWVyKTtcbiAgfTtcblxuICByZXR1cm4gU2VydmVyU3R5bGVTaGVldDtcbn0oKTtcblxuLy8gXG5cbnZhciBTdHlsZVNoZWV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxudmFyIFN0eWxlU2hlZXRDb25zdW1lciA9IFN0eWxlU2hlZXRDb250ZXh0LkNvbnN1bWVyO1xuXG52YXIgU3R5bGVTaGVldE1hbmFnZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhTdHlsZVNoZWV0TWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3R5bGVTaGVldE1hbmFnZXIocHJvcHMpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZVNoZWV0TWFuYWdlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZ2V0Q29udGV4dCA9IG1lbW9pemUoX3RoaXMuZ2V0Q29udGV4dCk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgU3R5bGVTaGVldE1hbmFnZXIucHJvdG90eXBlLmdldENvbnRleHQgPSBmdW5jdGlvbiBnZXRDb250ZXh0KHNoZWV0LCB0YXJnZXQpIHtcbiAgICBpZiAoc2hlZXQpIHtcbiAgICAgIHJldHVybiBzaGVldDtcbiAgICB9IGVsc2UgaWYgKHRhcmdldCkge1xuICAgICAgcmV0dXJuIG5ldyBTdHlsZVNoZWV0KHRhcmdldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNCk7XG4gICAgfVxuICB9O1xuXG4gIFN0eWxlU2hlZXRNYW5hZ2VyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBzaGVldCA9IF9wcm9wcy5zaGVldCxcbiAgICAgICAgdGFyZ2V0ID0gX3Byb3BzLnRhcmdldDtcblxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0Q29udGV4dC5Qcm92aWRlcixcbiAgICAgIHsgdmFsdWU6IHRoaXMuZ2V0Q29udGV4dChzaGVldCwgdGFyZ2V0KSB9LFxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogY2hpbGRyZW5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0TWFuYWdlcjtcbn0oQ29tcG9uZW50KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFN0eWxlU2hlZXRNYW5hZ2VyLnByb3BUeXBlcyA9IHtcbiAgc2hlZXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5pbnN0YW5jZU9mKFN0eWxlU2hlZXQpLCBQcm9wVHlwZXMuaW5zdGFuY2VPZihTZXJ2ZXJTdHlsZVNoZWV0KV0pLFxuXG4gIHRhcmdldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhcHBlbmRDaGlsZDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9KVxufSA6IHZvaWQgMDtcblxuLy8gXG5cbnZhciBkaWRXYXJuQWJvdXRDbGFzc05hbWVVc2FnZSA9IG5ldyBTZXQoKTtcblxudmFyIGNsYXNzTmFtZVVzYWdlQ2hlY2tJbmplY3RvciA9IChmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIHZhciBlbGVtZW50Q2xhc3NOYW1lID0gJyc7XG5cbiAgdmFyIHRhcmdldENETSA9IHRhcmdldC5jb21wb25lbnREaWRNb3VudDtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgdGFyZ2V0LmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHR5cGVvZiB0YXJnZXRDRE0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRhcmdldENETS5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIHZhciBmb3J3YXJkVGFyZ2V0ID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQudGFyZ2V0O1xuXG4gICAgaWYgKHRhcmdldC5wcm9wcyAmJiB0YXJnZXQucHJvcHMuc3VwcHJlc3NDbGFzc05hbWVXYXJuaW5nIHx8IHRhcmdldC5hdHRycyAmJiB0YXJnZXQuYXR0cnMuc3VwcHJlc3NDbGFzc05hbWVXYXJuaW5nIHx8IGRpZFdhcm5BYm91dENsYXNzTmFtZVVzYWdlLmhhcyhmb3J3YXJkVGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGRpZFdhcm5BYm91dENsYXNzTmFtZVVzYWdlLmFkZChmb3J3YXJkVGFyZ2V0KTtcblxuICAgIHZhciBjbGFzc05hbWVzID0gZWxlbWVudENsYXNzTmFtZS5yZXBsYWNlKC8gKy9nLCAnICcpLnRyaW0oKS5zcGxpdCgnICcpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1maW5kLWRvbS1ub2RlXG4gICAgdmFyIG5vZGUgPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcbiAgICB2YXIgc2VsZWN0b3IgPSBjbGFzc05hbWVzLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuICcuJyArIHM7XG4gICAgfSkuam9pbignJyk7XG5cbiAgICBpZiAobm9kZSAmJiBub2RlLm5vZGVUeXBlID09PSAxICYmICFjbGFzc05hbWVzLmV2ZXJ5KGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgIHJldHVybiBub2RlLmNsYXNzTGlzdCAmJiBub2RlLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xuICAgIH0pICYmICFub2RlLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0l0IGxvb2tzIGxpa2UgeW91XFwndmUgd3JhcHBlZCBzdHlsZWQoKSBhcm91bmQgeW91ciBSZWFjdCBjb21wb25lbnQgKCcgKyBnZXRDb21wb25lbnROYW1lKGZvcndhcmRUYXJnZXQpICsgJyksIGJ1dCB0aGUgY2xhc3NOYW1lIHByb3AgaXMgbm90IGJlaW5nIHBhc3NlZCBkb3duIHRvIGEgY2hpbGQuIE5vIHN0eWxlcyB3aWxsIGJlIHJlbmRlcmVkIHVubGVzcyBjbGFzc05hbWUgaXMgY29tcG9zZWQgd2l0aGluIHlvdXIgUmVhY3QgY29tcG9uZW50LicpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcHJldlJlbmRlcklubmVyID0gdGFyZ2V0LnJlbmRlcklubmVyO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICB0YXJnZXQucmVuZGVySW5uZXIgPSBmdW5jdGlvbiByZW5kZXJJbm5lcigpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudCA9IHByZXZSZW5kZXJJbm5lci5hcHBseSh0aGlzLCBhcmdzKTtcblxuICAgIGVsZW1lbnRDbGFzc05hbWUgPSBlbGVtZW50LnByb3BzLmNsYXNzTmFtZTtcblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgaWRlbnRpZmllcnMgPSB7fTtcblxuLyogV2UgZGVwZW5kIG9uIGNvbXBvbmVudHMgaGF2aW5nIHVuaXF1ZSBJRHMgKi9cbmZ1bmN0aW9uIGdlbmVyYXRlSWQoX0NvbXBvbmVudFN0eWxlLCBfZGlzcGxheU5hbWUsIHBhcmVudENvbXBvbmVudElkKSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IHR5cGVvZiBfZGlzcGxheU5hbWUgIT09ICdzdHJpbmcnID8gJ3NjJyA6IGVzY2FwZShfZGlzcGxheU5hbWUpO1xuXG4gIC8qKlxuICAgKiBUaGlzIGVuc3VyZXMgdW5pcXVlbmVzcyBpZiB0d28gY29tcG9uZW50cyBoYXBwZW4gdG8gc2hhcmVcbiAgICogdGhlIHNhbWUgZGlzcGxheU5hbWUuXG4gICAqL1xuICB2YXIgbnIgPSAoaWRlbnRpZmllcnNbZGlzcGxheU5hbWVdIHx8IDApICsgMTtcbiAgaWRlbnRpZmllcnNbZGlzcGxheU5hbWVdID0gbnI7XG5cbiAgdmFyIGNvbXBvbmVudElkID0gZGlzcGxheU5hbWUgKyAnLScgKyBfQ29tcG9uZW50U3R5bGUuZ2VuZXJhdGVOYW1lKGRpc3BsYXlOYW1lICsgbnIpO1xuXG4gIHJldHVybiBwYXJlbnRDb21wb25lbnRJZCA/IHBhcmVudENvbXBvbmVudElkICsgJy0nICsgY29tcG9uZW50SWQgOiBjb21wb25lbnRJZDtcbn1cblxuLy8gJEZsb3dGaXhNZVxuXG52YXIgU3R5bGVkQ29tcG9uZW50ID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgaW5oZXJpdHMoU3R5bGVkQ29tcG9uZW50LCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdHlsZWRDb21wb25lbnQoKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVkQ29tcG9uZW50KTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMpKTtcblxuICAgIF90aGlzLmF0dHJzID0ge307XG5cbiAgICBfdGhpcy5yZW5kZXJPdXRlciA9IF90aGlzLnJlbmRlck91dGVyLmJpbmQoX3RoaXMpO1xuICAgIF90aGlzLnJlbmRlcklubmVyID0gX3RoaXMucmVuZGVySW5uZXIuYmluZChfdGhpcyk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgX3RoaXMud2FybklubmVyUmVmID0gb25jZShmdW5jdGlvbiAoZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignVGhlIFwiaW5uZXJSZWZcIiBBUEkgaGFzIGJlZW4gcmVtb3ZlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2NCBpbiBmYXZvciBvZiBSZWFjdCAxNiByZWYgZm9yd2FyZGluZywgdXNlIFwicmVmXCIgaW5zdGVhZCBsaWtlIGEgdHlwaWNhbCBjb21wb25lbnQuIFwiaW5uZXJSZWZcIiB3YXMgZGV0ZWN0ZWQgb24gY29tcG9uZW50IFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLicpXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2FybkF0dHJzRm5PYmplY3RLZXlEZXByZWNhdGVkID0gb25jZShmdW5jdGlvbiAoa2V5LCBkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdGdW5jdGlvbnMgYXMgb2JqZWN0LWZvcm0gYXR0cnMoe30pIGtleXMgYXJlIG5vdyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbiBvZiBzdHlsZWQtY29tcG9uZW50cy4gU3dpdGNoIHRvIHRoZSBuZXcgYXR0cnMocHJvcHMgPT4gKHt9KSkgc3ludGF4IGluc3RlYWQgZm9yIGVhc2llciBhbmQgbW9yZSBwb3dlcmZ1bCBjb21wb3NpdGlvbi4gVGhlIGF0dHJzIGtleSBpbiBxdWVzdGlvbiBpcyBcIicgKyBrZXkgKyAnXCIgb24gY29tcG9uZW50IFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLicpXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5ID0gb25jZShmdW5jdGlvbiAoa2V5LCBkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdJdCBsb29rcyBsaWtlIHlvdVxcJ3ZlIHVzZWQgYSBub24gc3R5bGVkLWNvbXBvbmVudCBhcyB0aGUgdmFsdWUgZm9yIHRoZSBcIicgKyBrZXkgKyAnXCIgcHJvcCBpbiBhbiBvYmplY3QtZm9ybSBhdHRycyBjb25zdHJ1Y3RvciBvZiBcIicgKyBkaXNwbGF5TmFtZSArICdcIi5cXG4nICsgJ1lvdSBzaG91bGQgdXNlIHRoZSBuZXcgZnVuY3Rpb24tZm9ybSBhdHRycyBjb25zdHJ1Y3RvciB3aGljaCBhdm9pZHMgdGhpcyBpc3N1ZTogYXR0cnMocHJvcHMgPT4gKHsgeW91clN0dWZmIH0pKVxcbicgKyBcIlRvIGNvbnRpbnVlIHVzaW5nIHRoZSBkZXByZWNhdGVkIG9iamVjdCBzeW50YXgsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBjb21wb25lbnQgcHJvcCBpbiBhIGZ1bmN0aW9uIHRvIG1ha2UgaXQgYXZhaWxhYmxlIGluc2lkZSB0aGUgc3R5bGVkIGNvbXBvbmVudCAoeW91J2xsIHN0aWxsIGdldCB0aGUgZGVwcmVjYXRpb24gd2FybmluZyB0aG91Z2guKVxcblwiICsgKCdGb3IgZXhhbXBsZSwgeyAnICsga2V5ICsgJzogKCkgPT4gSW5uZXJDb21wb25lbnQgfSBpbnN0ZWFkIG9mIHsgJyArIGtleSArICc6IElubmVyQ29tcG9uZW50IH0nKSlcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIElTX0JST1dTRVIpIHtcbiAgICAgIGNsYXNzTmFtZVVzYWdlQ2hlY2tJbmplY3RvcihfdGhpcyk7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldENvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVyT3V0ZXJcbiAgICApO1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyT3V0ZXIgPSBmdW5jdGlvbiByZW5kZXJPdXRlcigpIHtcbiAgICB2YXIgc3R5bGVTaGVldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICB0aGlzLnN0eWxlU2hlZXQgPSBzdHlsZVNoZWV0O1xuXG4gICAgLy8gTm8gbmVlZCB0byBzdWJzY3JpYmUgYSBzdGF0aWMgY29tcG9uZW50IHRvIHRoZW1lIGNoYW5nZXMsIGl0IHdvbid0IGNoYW5nZSBhbnl0aGluZ1xuICAgIGlmICh0aGlzLnByb3BzLmZvcndhcmRlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZS5pc1N0YXRpYykgcmV0dXJuIHRoaXMucmVuZGVySW5uZXIoKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlcklubmVyXG4gICAgKTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIodGhlbWUpIHtcbiAgICB2YXIgX3Byb3BzJGZvcndhcmRlZENvbXBvID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGNvbXBvbmVudFN0eWxlID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICBkZWZhdWx0UHJvcHMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZGVmYXVsdFByb3BzLFxuICAgICAgICBkaXNwbGF5TmFtZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5kaXNwbGF5TmFtZSxcbiAgICAgICAgZm9sZGVkQ29tcG9uZW50SWRzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmZvbGRlZENvbXBvbmVudElkcyxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uc3R5bGVkQ29tcG9uZW50SWQsXG4gICAgICAgIHRhcmdldCA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby50YXJnZXQ7XG5cblxuICAgIHZhciBnZW5lcmF0ZWRDbGFzc05hbWUgPSB2b2lkIDA7XG4gICAgaWYgKGNvbXBvbmVudFN0eWxlLmlzU3RhdGljKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfSBlbHNlIGlmICh0aGVtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGRldGVybWluZVRoZW1lKHRoaXMucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpLCB0aGlzLnByb3BzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLnByb3BzLnRoZW1lIHx8IEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnRUb0JlQ3JlYXRlZCA9IHRoaXMucHJvcHMuYXMgfHwgdGhpcy5hdHRycy5hcyB8fCB0YXJnZXQ7XG4gICAgdmFyIGlzVGFyZ2V0VGFnID0gaXNUYWcoZWxlbWVudFRvQmVDcmVhdGVkKTtcblxuICAgIHZhciBwcm9wc0ZvckVsZW1lbnQgPSB7fTtcbiAgICB2YXIgY29tcHV0ZWRQcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLCB0aGlzLnByb3BzKTtcblxuICAgIHZhciBrZXkgPSB2b2lkIDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAoa2V5IGluIGNvbXB1dGVkUHJvcHMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGtleSA9PT0gJ2lubmVyUmVmJyAmJiBpc1RhcmdldFRhZykge1xuICAgICAgICB0aGlzLndhcm5Jbm5lclJlZihkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChrZXkgPT09ICdmb3J3YXJkZWRDb21wb25lbnQnIHx8IGtleSA9PT0gJ2FzJykgY29udGludWU7ZWxzZSBpZiAoa2V5ID09PSAnZm9yd2FyZGVkUmVmJykgcHJvcHNGb3JFbGVtZW50LnJlZiA9IGNvbXB1dGVkUHJvcHNba2V5XTtlbHNlIGlmICghaXNUYXJnZXRUYWcgfHwgdmFsaWRBdHRyKGtleSkpIHtcbiAgICAgICAgLy8gRG9uJ3QgcGFzcyB0aHJvdWdoIG5vbiBIVE1MIHRhZ3MgdGhyb3VnaCB0byBIVE1MIGVsZW1lbnRzXG4gICAgICAgIHByb3BzRm9yRWxlbWVudFtrZXldID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLnN0eWxlICYmIHRoaXMuYXR0cnMuc3R5bGUpIHtcbiAgICAgIHByb3BzRm9yRWxlbWVudC5zdHlsZSA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLnN0eWxlLCB0aGlzLnByb3BzLnN0eWxlKTtcbiAgICB9XG5cbiAgICBwcm9wc0ZvckVsZW1lbnQuY2xhc3NOYW1lID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdChmb2xkZWRDb21wb25lbnRJZHMsIHRoaXMucHJvcHMuY2xhc3NOYW1lLCBzdHlsZWRDb21wb25lbnRJZCwgdGhpcy5hdHRycy5jbGFzc05hbWUsIGdlbmVyYXRlZENsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcblxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUb0JlQ3JlYXRlZCwgcHJvcHNGb3JFbGVtZW50KTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCA9IGZ1bmN0aW9uIGJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWUgfSk7XG5cbiAgICBpZiAoIWF0dHJzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG5cbiAgICB0aGlzLmF0dHJzID0ge307XG5cbiAgICBhdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyRGVmKSB7XG4gICAgICB2YXIgcmVzb2x2ZWRBdHRyRGVmID0gYXR0ckRlZjtcbiAgICAgIHZhciBhdHRyRGVmV2FzRm4gPSBmYWxzZTtcbiAgICAgIHZhciBhdHRyID0gdm9pZCAwO1xuICAgICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgICAgaWYgKGlzRnVuY3Rpb24ocmVzb2x2ZWRBdHRyRGVmKSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHJlc29sdmVkQXR0ckRlZiA9IHJlc29sdmVkQXR0ckRlZihjb250ZXh0KTtcbiAgICAgICAgYXR0ckRlZldhc0ZuID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBmb3IgKGtleSBpbiByZXNvbHZlZEF0dHJEZWYpIHtcbiAgICAgICAgYXR0ciA9IHJlc29sdmVkQXR0ckRlZltrZXldO1xuXG4gICAgICAgIGlmICghYXR0ckRlZldhc0ZuKSB7XG4gICAgICAgICAgaWYgKGlzRnVuY3Rpb24oYXR0cikgJiYgIWlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGF0dHIpICYmICFpc1N0eWxlZENvbXBvbmVudChhdHRyKSkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZChrZXksIHByb3BzLmZvcndhcmRlZENvbXBvbmVudC5kaXNwbGF5TmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF0dHIgPSBhdHRyKGNvbnRleHQpO1xuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChhdHRyKSkge1xuICAgICAgICAgICAgICBfdGhpczIud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5KGtleSwgcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczIuYXR0cnNba2V5XSA9IGF0dHI7XG4gICAgICAgIGNvbnRleHRba2V5XSA9IGF0dHI7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29udGV4dDtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhlbWUsIHByb3BzKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbzIgPSBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGF0dHJzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi5hdHRycyxcbiAgICAgICAgY29tcG9uZW50U3R5bGUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICB3YXJuVG9vTWFueUNsYXNzZXMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLndhcm5Ub29NYW55Q2xhc3NlcztcblxuICAgIC8vIHN0YXRpY2FsbHkgc3R5bGVkLWNvbXBvbmVudHMgZG9uJ3QgbmVlZCB0byBidWlsZCBhbiBleGVjdXRpb24gY29udGV4dCBvYmplY3QsXG4gICAgLy8gYW5kIHNob3VsZG4ndCBiZSBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgY2xhc3MgbmFtZXNcblxuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYyAmJiAhYXR0cnMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gY29tcG9uZW50U3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRU1QVFlfT0JKRUNULCB0aGlzLnN0eWxlU2hlZXQpO1xuICAgIH1cblxuICAgIHZhciBjbGFzc05hbWUgPSBjb21wb25lbnRTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSwgdGhpcy5zdHlsZVNoZWV0KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm5Ub29NYW55Q2xhc3Nlcykgd2FyblRvb01hbnlDbGFzc2VzKGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YXJnZXQsIG9wdGlvbnMsIHJ1bGVzKSB7XG4gIHZhciBpc1RhcmdldFN0eWxlZENvbXAgPSBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpO1xuICB2YXIgaXNDbGFzcyA9ICFpc1RhZyh0YXJnZXQpO1xuXG4gIHZhciBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgICBkaXNwbGF5TmFtZSA9IF9vcHRpb25zJGRpc3BsYXlOYW1lID09PSB1bmRlZmluZWQgPyBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkgOiBfb3B0aW9ucyRkaXNwbGF5TmFtZSxcbiAgICAgIF9vcHRpb25zJGNvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgIGNvbXBvbmVudElkID0gX29wdGlvbnMkY29tcG9uZW50SWQgPT09IHVuZGVmaW5lZCA/IGdlbmVyYXRlSWQoQ29tcG9uZW50U3R5bGUsIG9wdGlvbnMuZGlzcGxheU5hbWUsIG9wdGlvbnMucGFyZW50Q29tcG9uZW50SWQpIDogX29wdGlvbnMkY29tcG9uZW50SWQsXG4gICAgICBfb3B0aW9ucyRQYXJlbnRDb21wb24gPSBvcHRpb25zLlBhcmVudENvbXBvbmVudCxcbiAgICAgIFBhcmVudENvbXBvbmVudCA9IF9vcHRpb25zJFBhcmVudENvbXBvbiA9PT0gdW5kZWZpbmVkID8gU3R5bGVkQ29tcG9uZW50IDogX29wdGlvbnMkUGFyZW50Q29tcG9uLFxuICAgICAgX29wdGlvbnMkYXR0cnMgPSBvcHRpb25zLmF0dHJzLFxuICAgICAgYXR0cnMgPSBfb3B0aW9ucyRhdHRycyA9PT0gdW5kZWZpbmVkID8gRU1QVFlfQVJSQVkgOiBfb3B0aW9ucyRhdHRycztcblxuXG4gIHZhciBzdHlsZWRDb21wb25lbnRJZCA9IG9wdGlvbnMuZGlzcGxheU5hbWUgJiYgb3B0aW9ucy5jb21wb25lbnRJZCA/IGVzY2FwZShvcHRpb25zLmRpc3BsYXlOYW1lKSArICctJyArIG9wdGlvbnMuY29tcG9uZW50SWQgOiBvcHRpb25zLmNvbXBvbmVudElkIHx8IGNvbXBvbmVudElkO1xuXG4gIC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IGF0dHJzIHVwIChpbXBsaWNpdCBleHRlbmQpXG4gIHZhciBmaW5hbEF0dHJzID1cbiAgLy8gJEZsb3dGaXhNZVxuICBpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LmF0dHJzID8gQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbikgOiBhdHRycztcblxuICB2YXIgY29tcG9uZW50U3R5bGUgPSBuZXcgQ29tcG9uZW50U3R5bGUoaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgcnVsZXMgdXAgKGltcGxpY2l0IGV4dGVuZClcbiAgLy8gJEZsb3dGaXhNZVxuICB0YXJnZXQuY29tcG9uZW50U3R5bGUucnVsZXMuY29uY2F0KHJ1bGVzKSA6IHJ1bGVzLCBmaW5hbEF0dHJzLCBzdHlsZWRDb21wb25lbnRJZCk7XG5cbiAgLyoqXG4gICAqIGZvcndhcmRSZWYgY3JlYXRlcyBhIG5ldyBpbnRlcmltIGNvbXBvbmVudCwgd2hpY2ggd2UnbGwgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAgICogaW5zdGVhZCBvZiBleHRlbmRpbmcgUGFyZW50Q29tcG9uZW50IHRvIGNyZWF0ZSBfYW5vdGhlcl8gaW50ZXJpbSBjbGFzc1xuICAgKi9cbiAgdmFyIFdyYXBwZWRTdHlsZWRDb21wb25lbnQgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFyZW50Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZm9yd2FyZGVkQ29tcG9uZW50OiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCBmb3J3YXJkZWRSZWY6IHJlZiB9KSk7XG4gIH0pO1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5hdHRycyA9IGZpbmFsQXR0cnM7XG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZSA9IGNvbXBvbmVudFN0eWxlO1xuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmZvbGRlZENvbXBvbmVudElkcyA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IC8vICRGbG93Rml4TWVcbiAgQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuZm9sZGVkQ29tcG9uZW50SWRzLCB0YXJnZXQuc3R5bGVkQ29tcG9uZW50SWQpIDogRU1QVFlfQVJSQVk7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkID0gc3R5bGVkQ29tcG9uZW50SWQ7XG5cbiAgLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgdGFyZ2V0IHVwIHNpbmNlIHdlIGZvbGRlZCB0aGUgc3R5bGVzXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC50YXJnZXQgPSBpc1RhcmdldFN0eWxlZENvbXAgPyB0YXJnZXQudGFyZ2V0IDogdGFyZ2V0O1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC53aXRoQ29tcG9uZW50ID0gZnVuY3Rpb24gd2l0aENvbXBvbmVudCh0YWcpIHtcbiAgICB2YXIgcHJldmlvdXNDb21wb25lbnRJZCA9IG9wdGlvbnMuY29tcG9uZW50SWQsXG4gICAgICAgIG9wdGlvbnNUb0NvcHkgPSBvYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBbJ2NvbXBvbmVudElkJ10pO1xuXG5cbiAgICB2YXIgbmV3Q29tcG9uZW50SWQgPSBwcmV2aW91c0NvbXBvbmVudElkICYmIHByZXZpb3VzQ29tcG9uZW50SWQgKyAnLScgKyAoaXNUYWcodGFnKSA/IHRhZyA6IGVzY2FwZShnZXRDb21wb25lbnROYW1lKHRhZykpKTtcblxuICAgIHZhciBuZXdPcHRpb25zID0gX2V4dGVuZHMoe30sIG9wdGlvbnNUb0NvcHksIHtcbiAgICAgIGF0dHJzOiBmaW5hbEF0dHJzLFxuICAgICAgY29tcG9uZW50SWQ6IG5ld0NvbXBvbmVudElkLFxuICAgICAgUGFyZW50Q29tcG9uZW50OiBQYXJlbnRDb21wb25lbnRcbiAgICB9KTtcblxuICAgIHJldHVybiBjcmVhdGVTdHlsZWRDb21wb25lbnQodGFnLCBuZXdPcHRpb25zLCBydWxlcyk7XG4gIH07XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC53YXJuVG9vTWFueUNsYXNzZXMgPSBjcmVhdGVXYXJuVG9vTWFueUNsYXNzZXMoZGlzcGxheU5hbWUpO1xuICB9XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnLicgKyBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkO1xuICB9O1xuXG4gIGlmIChpc0NsYXNzKSB7XG4gICAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV3JhcHBlZFN0eWxlZENvbXBvbmVudCwgdGFyZ2V0LCB7XG4gICAgICAvLyBhbGwgU0Mtc3BlY2lmaWMgdGhpbmdzIHNob3VsZCBub3QgYmUgaG9pc3RlZFxuICAgICAgYXR0cnM6IHRydWUsXG4gICAgICBjb21wb25lbnRTdHlsZTogdHJ1ZSxcbiAgICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgICAgZm9sZGVkQ29tcG9uZW50SWRzOiB0cnVlLFxuICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHRydWUsXG4gICAgICB0YXJnZXQ6IHRydWUsXG4gICAgICB3aXRoQ29tcG9uZW50OiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gV3JhcHBlZFN0eWxlZENvbXBvbmVudDtcbn1cblxuLy8gXG4vLyBUaGFua3MgdG8gUmVhY3RET01GYWN0b3JpZXMgZm9yIHRoaXMgaGFuZHkgbGlzdCFcblxudmFyIGRvbUVsZW1lbnRzID0gWydhJywgJ2FiYnInLCAnYWRkcmVzcycsICdhcmVhJywgJ2FydGljbGUnLCAnYXNpZGUnLCAnYXVkaW8nLCAnYicsICdiYXNlJywgJ2JkaScsICdiZG8nLCAnYmlnJywgJ2Jsb2NrcXVvdGUnLCAnYm9keScsICdicicsICdidXR0b24nLCAnY2FudmFzJywgJ2NhcHRpb24nLCAnY2l0ZScsICdjb2RlJywgJ2NvbCcsICdjb2xncm91cCcsICdkYXRhJywgJ2RhdGFsaXN0JywgJ2RkJywgJ2RlbCcsICdkZXRhaWxzJywgJ2RmbicsICdkaWFsb2cnLCAnZGl2JywgJ2RsJywgJ2R0JywgJ2VtJywgJ2VtYmVkJywgJ2ZpZWxkc2V0JywgJ2ZpZ2NhcHRpb24nLCAnZmlndXJlJywgJ2Zvb3RlcicsICdmb3JtJywgJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2JywgJ2hlYWQnLCAnaGVhZGVyJywgJ2hncm91cCcsICdocicsICdodG1sJywgJ2knLCAnaWZyYW1lJywgJ2ltZycsICdpbnB1dCcsICdpbnMnLCAna2JkJywgJ2tleWdlbicsICdsYWJlbCcsICdsZWdlbmQnLCAnbGknLCAnbGluaycsICdtYWluJywgJ21hcCcsICdtYXJrJywgJ21hcnF1ZWUnLCAnbWVudScsICdtZW51aXRlbScsICdtZXRhJywgJ21ldGVyJywgJ25hdicsICdub3NjcmlwdCcsICdvYmplY3QnLCAnb2wnLCAnb3B0Z3JvdXAnLCAnb3B0aW9uJywgJ291dHB1dCcsICdwJywgJ3BhcmFtJywgJ3BpY3R1cmUnLCAncHJlJywgJ3Byb2dyZXNzJywgJ3EnLCAncnAnLCAncnQnLCAncnVieScsICdzJywgJ3NhbXAnLCAnc2NyaXB0JywgJ3NlY3Rpb24nLCAnc2VsZWN0JywgJ3NtYWxsJywgJ3NvdXJjZScsICdzcGFuJywgJ3N0cm9uZycsICdzdHlsZScsICdzdWInLCAnc3VtbWFyeScsICdzdXAnLCAndGFibGUnLCAndGJvZHknLCAndGQnLCAndGV4dGFyZWEnLCAndGZvb3QnLCAndGgnLCAndGhlYWQnLCAndGltZScsICd0aXRsZScsICd0cicsICd0cmFjaycsICd1JywgJ3VsJywgJ3ZhcicsICd2aWRlbycsICd3YnInLFxuXG4vLyBTVkdcbidjaXJjbGUnLCAnY2xpcFBhdGgnLCAnZGVmcycsICdlbGxpcHNlJywgJ2ZvcmVpZ25PYmplY3QnLCAnZycsICdpbWFnZScsICdsaW5lJywgJ2xpbmVhckdyYWRpZW50JywgJ21hc2snLCAncGF0aCcsICdwYXR0ZXJuJywgJ3BvbHlnb24nLCAncG9seWxpbmUnLCAncmFkaWFsR3JhZGllbnQnLCAncmVjdCcsICdzdG9wJywgJ3N2ZycsICd0ZXh0JywgJ3RzcGFuJ107XG5cbi8vIFxuXG52YXIgc3R5bGVkID0gZnVuY3Rpb24gc3R5bGVkKHRhZykge1xuICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY3JlYXRlU3R5bGVkQ29tcG9uZW50LCB0YWcpO1xufTtcblxuLy8gU2hvcnRoYW5kcyBmb3IgYWxsIHZhbGlkIEhUTUwgRWxlbWVudHNcbmRvbUVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGRvbUVsZW1lbnQpIHtcbiAgc3R5bGVkW2RvbUVsZW1lbnRdID0gc3R5bGVkKGRvbUVsZW1lbnQpO1xufSk7XG5cbi8vIFxuXG52YXIgR2xvYmFsU3R5bGUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEdsb2JhbFN0eWxlKHJ1bGVzLCBjb21wb25lbnRJZCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEdsb2JhbFN0eWxlKTtcblxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcbiAgICB0aGlzLmNvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG4gICAgdGhpcy5pc1N0YXRpYyA9IGlzU3RhdGljUnVsZXMocnVsZXMsIEVNUFRZX0FSUkFZKTtcblxuICAgIGlmICghU3R5bGVTaGVldC5tYXN0ZXIuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBTdHlsZVNoZWV0Lm1hc3Rlci5kZWZlcnJlZEluamVjdChjb21wb25lbnRJZCwgW10pO1xuICAgIH1cbiAgfVxuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5jcmVhdGVTdHlsZXMgPSBmdW5jdGlvbiBjcmVhdGVTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHZhciBmbGF0Q1NTID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB2YXIgY3NzID0gc3RyaW5naWZ5UnVsZXMoZmxhdENTUywgJycpO1xuXG4gICAgc3R5bGVTaGVldC5pbmplY3QodGhpcy5jb21wb25lbnRJZCwgY3NzKTtcbiAgfTtcblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVtb3ZlU3R5bGVzID0gZnVuY3Rpb24gcmVtb3ZlU3R5bGVzKHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgY29tcG9uZW50SWQgPSB0aGlzLmNvbXBvbmVudElkO1xuXG4gICAgaWYgKHN0eWxlU2hlZXQuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBzdHlsZVNoZWV0LnJlbW92ZShjb21wb25lbnRJZCk7XG4gICAgfVxuICB9O1xuXG4gIC8vIFRPRE86IG92ZXJ3cml0ZSBpbi1wbGFjZSBpbnN0ZWFkIG9mIHJlbW92ZStjcmVhdGU/XG5cblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVuZGVyU3R5bGVzID0gZnVuY3Rpb24gcmVuZGVyU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB0aGlzLnJlbW92ZVN0eWxlcyhzdHlsZVNoZWV0KTtcbiAgICB0aGlzLmNyZWF0ZVN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgfTtcblxuICByZXR1cm4gR2xvYmFsU3R5bGU7XG59KCk7XG5cbi8vIFxuXG4vLyBwbGFjZSBvdXIgY2FjaGUgaW50byBzaGFyZWQgY29udGV4dCBzbyBpdCdsbCBwZXJzaXN0IGJldHdlZW4gSE1Sc1xuaWYgKElTX0JST1dTRVIpIHtcbiAgd2luZG93LnNjQ0dTSE1SQ2FjaGUgPSB7fTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlR2xvYmFsU3R5bGUoc3RyaW5ncykge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHVuZGVmaW5lZCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpO1xuICB2YXIgaWQgPSAnc2MtZ2xvYmFsLScgKyBtdXJtdXJoYXNoKEpTT04uc3RyaW5naWZ5KHJ1bGVzKSk7XG4gIHZhciBzdHlsZSA9IG5ldyBHbG9iYWxTdHlsZShydWxlcywgaWQpO1xuXG4gIHZhciBHbG9iYWxTdHlsZUNvbXBvbmVudCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICAgaW5oZXJpdHMoR2xvYmFsU3R5bGVDb21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gR2xvYmFsU3R5bGVDb21wb25lbnQoKSB7XG4gICAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBHbG9iYWxTdHlsZUNvbXBvbmVudCk7XG5cbiAgICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMpKTtcblxuICAgICAgdmFyIF90aGlzJGNvbnN0cnVjdG9yID0gX3RoaXMuY29uc3RydWN0b3IsXG4gICAgICAgICAgZ2xvYmFsU3R5bGUgPSBfdGhpcyRjb25zdHJ1Y3Rvci5nbG9iYWxTdHlsZSxcbiAgICAgICAgICBzdHlsZWRDb21wb25lbnRJZCA9IF90aGlzJGNvbnN0cnVjdG9yLnN0eWxlZENvbXBvbmVudElkO1xuXG5cbiAgICAgIGlmIChJU19CUk9XU0VSKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3N0eWxlZENvbXBvbmVudElkXSA9ICh3aW5kb3cuc2NDR1NITVJDYWNoZVtzdHlsZWRDb21wb25lbnRJZF0gfHwgMCkgKyAxO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFRoaXMgZml4ZXMgSE1SIGNvbXBhdGliaWxpdHkuIERvbid0IGFzayBtZSB3aHksIGJ1dCB0aGlzIGNvbWJpbmF0aW9uIG9mXG4gICAgICAgKiBjYWNoaW5nIHRoZSBjbG9zdXJlIHZhcmlhYmxlcyB2aWEgc3RhdGljcyBhbmQgdGhlbiBwZXJzaXN0aW5nIHRoZSBzdGF0aWNzIGluXG4gICAgICAgKiBzdGF0ZSB3b3JrcyBhY3Jvc3MgSE1SIHdoZXJlIG5vIG90aGVyIGNvbWJpbmF0aW9uIGRpZC4gwq9cXF8o44OEKV8vwq9cbiAgICAgICAqL1xuICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgIGdsb2JhbFN0eWxlOiBnbG9iYWxTdHlsZSxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHN0eWxlZENvbXBvbmVudElkXG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIEdsb2JhbFN0eWxlQ29tcG9uZW50LnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdIC09IDE7XG4gICAgICB9XG4gICAgICAvKipcbiAgICAgICAqIERlcGVuZGluZyBvbiB0aGUgb3JkZXIgXCJyZW5kZXJcIiBpcyBjYWxsZWQgdGhpcyBjYW4gY2F1c2UgdGhlIHN0eWxlcyB0byBiZSBsb3N0XG4gICAgICAgKiB1bnRpbCB0aGUgbmV4dCByZW5kZXIgcGFzcyBvZiB0aGUgcmVtYWluaW5nIGluc3RhbmNlLCB3aGljaCBtYXlcbiAgICAgICAqIG5vdCBiZSBpbW1lZGlhdGUuXG4gICAgICAgKi9cbiAgICAgIGlmICh3aW5kb3cuc2NDR1NITVJDYWNoZVt0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkXSA9PT0gMCkge1xuICAgICAgICB0aGlzLnN0YXRlLmdsb2JhbFN0eWxlLnJlbW92ZVN0eWxlcyh0aGlzLnN0eWxlU2hlZXQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBHbG9iYWxTdHlsZUNvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIFJlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybignVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgJyArIHRoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWQgKyAnIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi4nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFN0eWxlU2hlZXRDb25zdW1lcixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgICAgICBfdGhpczIuc3R5bGVTaGVldCA9IHN0eWxlU2hlZXQgfHwgU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICAgICAgICB2YXIgZ2xvYmFsU3R5bGUgPSBfdGhpczIuc3RhdGUuZ2xvYmFsU3R5bGU7XG5cblxuICAgICAgICAgIGlmIChnbG9iYWxTdHlsZS5pc1N0YXRpYykge1xuICAgICAgICAgICAgZ2xvYmFsU3R5bGUucmVuZGVyU3R5bGVzKFNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAgICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFByb3BzID0gX3RoaXMyLmNvbnN0cnVjdG9yLmRlZmF1bHRQcm9wcztcblxuXG4gICAgICAgICAgICAgICAgdmFyIGNvbnRleHQgPSBfZXh0ZW5kcyh7fSwgX3RoaXMyLnByb3BzKTtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICBjb250ZXh0LnRoZW1lID0gZGV0ZXJtaW5lVGhlbWUoX3RoaXMyLnByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoY29udGV4dCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH07XG5cbiAgICByZXR1cm4gR2xvYmFsU3R5bGVDb21wb25lbnQ7XG4gIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5nbG9iYWxTdHlsZSA9IHN0eWxlO1xuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZCA9IGlkO1xuXG5cbiAgcmV0dXJuIEdsb2JhbFN0eWxlQ29tcG9uZW50O1xufVxuXG4vLyBcblxudmFyIHJlcGxhY2VXaGl0ZXNwYWNlID0gZnVuY3Rpb24gcmVwbGFjZVdoaXRlc3BhY2Uoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxzfFxcXFxuL2csICcnKTtcbn07XG5cbmZ1bmN0aW9uIGtleWZyYW1lcyhzdHJpbmdzKSB7XG4gIC8qIFdhcm5pbmcgaWYgeW91J3ZlIHVzZWQga2V5ZnJhbWVzIG9uIFJlYWN0IE5hdGl2ZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAgIGNvbnNvbGUud2FybignYGtleWZyYW1lc2AgY2Fubm90IGJlIHVzZWQgb24gUmVhY3ROYXRpdmUsIG9ubHkgb24gdGhlIHdlYi4gVG8gZG8gYW5pbWF0aW9uIGluIFJlYWN0TmF0aXZlIHBsZWFzZSB1c2UgQW5pbWF0ZWQuJyk7XG4gIH1cblxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHVuZGVmaW5lZCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpO1xuXG4gIHZhciBuYW1lID0gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShtdXJtdXJoYXNoKHJlcGxhY2VXaGl0ZXNwYWNlKEpTT04uc3RyaW5naWZ5KHJ1bGVzKSkpKTtcblxuICByZXR1cm4gbmV3IEtleWZyYW1lcyhuYW1lLCBzdHJpbmdpZnlSdWxlcyhydWxlcywgbmFtZSwgJ0BrZXlmcmFtZXMnKSk7XG59XG5cbi8vIFxuXG52YXIgd2l0aFRoZW1lID0gKGZ1bmN0aW9uIChDb21wb25lbnQkJDEpIHtcbiAgdmFyIFdpdGhUaGVtZSA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKHByb3BzLCByZWYpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgdmFyIGRlZmF1bHRQcm9wcyA9IENvbXBvbmVudCQkMS5kZWZhdWx0UHJvcHM7XG5cbiAgICAgICAgdmFyIHRoZW1lUHJvcCA9IGRldGVybWluZVRoZW1lKHByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0aGVtZVByb3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdbd2l0aFRoZW1lXSBZb3UgYXJlIG5vdCB1c2luZyBhIFRoZW1lUHJvdmlkZXIgbm9yIHBhc3NpbmcgYSB0aGVtZSBwcm9wIG9yIGEgdGhlbWUgaW4gZGVmYXVsdFByb3BzIGluIGNvbXBvbmVudCBjbGFzcyBcIicgKyBnZXRDb21wb25lbnROYW1lKENvbXBvbmVudCQkMSkgKyAnXCInKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCQkMSwgX2V4dGVuZHMoe30sIHByb3BzLCB7IHRoZW1lOiB0aGVtZVByb3AsIHJlZjogcmVmIH0pKTtcbiAgICAgIH1cbiAgICApO1xuICB9KTtcblxuICBob2lzdE5vblJlYWN0U3RhdGljcyhXaXRoVGhlbWUsIENvbXBvbmVudCQkMSk7XG5cbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gJ1dpdGhUaGVtZSgnICsgZ2V0Q29tcG9uZW50TmFtZShDb21wb25lbnQkJDEpICsgJyknO1xuXG4gIHJldHVybiBXaXRoVGhlbWU7XG59KTtcblxuLy8gXG5cbi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUUyA9IHtcbiAgU3R5bGVTaGVldDogU3R5bGVTaGVldFxufTtcblxuLy8gXG5cbi8qIFdhcm5pbmcgaWYgeW91J3ZlIGltcG9ydGVkIHRoaXMgZmlsZSBvbiBSZWFjdCBOYXRpdmUgKi9cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgeW91J3ZlIGltcG9ydGVkICdzdHlsZWQtY29tcG9uZW50cycgb24gUmVhY3QgTmF0aXZlLlxcblwiICsgXCJQZXJoYXBzIHlvdSdyZSBsb29raW5nIHRvIGltcG9ydCAnc3R5bGVkLWNvbXBvbmVudHMvbmF0aXZlJz9cXG5cIiArICdSZWFkIG1vcmUgYWJvdXQgdGhpcyBhdCBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9iYXNpY3MjcmVhY3QtbmF0aXZlJyk7XG59XG5cbi8qIFdhcm5pbmcgaWYgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mIHN0eWxlZC1jb21wb25lbnRzICovXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBuYXZpZ2F0b3IudXNlckFnZW50ID09PSAnc3RyaW5nJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ05vZGUuanMnKSA9PT0gLTEgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdqc2RvbScpID09PSAtMSkge1xuICB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gPSB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gfHwgMDtcblxuICBpZiAod2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddID09PSAxKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiAnc3R5bGVkLWNvbXBvbmVudHMnIGluaXRpYWxpemVkIGluIHRoaXMgYXBwbGljYXRpb24uIFwiICsgJ1RoaXMgbWF5IGNhdXNlIGR5bmFtaWMgc3R5bGVzIG5vdCByZW5kZXJpbmcgcHJvcGVybHksIGVycm9ycyBoYXBwZW5pbmcgZHVyaW5nIHJlaHlkcmF0aW9uIHByb2Nlc3MgJyArICdhbmQgbWFrZXMgeW91ciBhcHBsaWNhdGlvbiBiaWdnZXIgd2l0aG91dCBhIGdvb2QgcmVhc29uLlxcblxcbicgKyAnU2VlIGh0dHBzOi8vcy1jLnNoLzJCQVh6ZWQgZm9yIG1vcmUgaW5mby4nKTtcbiAgfVxuXG4gIHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSArPSAxO1xufVxuXG4vL1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZWQ7XG5leHBvcnQgeyBjc3MsIGtleWZyYW1lcywgY3JlYXRlR2xvYmFsU3R5bGUsIGlzU3R5bGVkQ29tcG9uZW50LCBUaGVtZUNvbnN1bWVyLCBUaGVtZUNvbnRleHQsIFRoZW1lUHJvdmlkZXIsIHdpdGhUaGVtZSwgU2VydmVyU3R5bGVTaGVldCwgU3R5bGVTaGVldE1hbmFnZXIsIF9fRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9IQVVOVEVEX0JZX1NQT09LWV9HSE9TVFMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzLm1hcFxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgIGRlZmF1bHQ6IG9ialxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ7IiwiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dChyZXF1aXJlKFwicmVhY3RcIikpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wicmVhY3RcIl0sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5yZWFjdEpzb25WaWV3PXQocmVxdWlyZShcInJlYWN0XCIpKTplLnJlYWN0SnNvblZpZXc9dChlLlJlYWN0KX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihlKXtmdW5jdGlvbiB0KHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgYT1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKGEuZXhwb3J0cyxhLGEuZXhwb3J0cyx0KSxhLmw9ITAsYS5leHBvcnRzfXZhciBuPXt9O3JldHVybiB0Lm09ZSx0LmM9bix0LmQ9ZnVuY3Rpb24oZSxuLHIpe3QubyhlLG4pfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6cn0pfSx0Lm49ZnVuY3Rpb24oZSl7dmFyIG49ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIHQuZChuLFwiYVwiLG4pLG59LHQubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sdC5wPVwiXCIsdCh0LnM9NjApfShbZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSx0LG4pe3JldHVybiBlfHxjb25zb2xlLmVycm9yKFwidGhlbWUgaGFzIG5vdCBiZWVuIHNldFwiKSxmKGUpKHQsbil9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGE9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX07dC5kZWZhdWx0PXI7dmFyIG89big2NCksaT1uKDY1KSxzPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0oaSksdT1uKDY2KSxsPWZ1bmN0aW9uKGUpe3JldHVybntiYWNrZ3JvdW5kQ29sb3I6ZS5iYXNlMDAsZWxsaXBzaXNDb2xvcjplLmJhc2UwOSxicmFjZUNvbG9yOmUuYmFzZTA3LGV4cGFuZGVkSWNvbjplLmJhc2UwRCxjb2xsYXBzZWRJY29uOmUuYmFzZTBFLGtleUNvbG9yOmUuYmFzZTA3LGFycmF5S2V5Q29sb3I6ZS5iYXNlMEMsb2JqZWN0U2l6ZTplLmJhc2UwNCxjb3B5VG9DbGlwYm9hcmQ6ZS5iYXNlMEYsY29weVRvQ2xpcGJvYXJkQ2hlY2s6ZS5iYXNlMEQsb2JqZWN0Qm9yZGVyOmUuYmFzZTAyLGRhdGFUeXBlczp7Ym9vbGVhbjplLmJhc2UwRSxkYXRlOmUuYmFzZTBELGZsb2F0OmUuYmFzZTBCLGZ1bmN0aW9uOmUuYmFzZTBELGludGVnZXI6ZS5iYXNlMEYsc3RyaW5nOmUuYmFzZTA5LG5hbjplLmJhc2UwOCxudWxsOmUuYmFzZTBBLHVuZGVmaW5lZDplLmJhc2UwNSxyZWdleHA6ZS5iYXNlMEEsYmFja2dyb3VuZDplLmJhc2UwMn0sZWRpdFZhcmlhYmxlOntlZGl0SWNvbjplLmJhc2UwRSxjYW5jZWxJY29uOmUuYmFzZTA5LHJlbW92ZUljb246ZS5iYXNlMDksYWRkSWNvbjplLmJhc2UwRSxjaGVja0ljb246ZS5iYXNlMEUsYmFja2dyb3VuZDplLmJhc2UwMSxjb2xvcjplLmJhc2UwQSxib3JkZXI6ZS5iYXNlMDd9LGFkZEtleU1vZGFsOntiYWNrZ3JvdW5kOmUuYmFzZTA1LGJvcmRlcjplLmJhc2UwNCxjb2xvcjplLmJhc2UwQSxsYWJlbENvbG9yOmUuYmFzZTAxfSx2YWxpZGF0aW9uRmFpbHVyZTp7YmFja2dyb3VuZDplLmJhc2UwOSxpY29uQ29sb3I6ZS5iYXNlMDEsZm9udENvbG9yOmUuYmFzZTAxfX19LGM9ZnVuY3Rpb24oZSl7dmFyIHQ9bChlKTtyZXR1cm57XCJhcHAtY29udGFpbmVyXCI6e2ZvbnRGYW1pbHk6cy5kZWZhdWx0Lmdsb2JhbEZvbnRGYW1pbHksY3Vyc29yOnMuZGVmYXVsdC5nbG9iYWxDdXJzb3IsYmFja2dyb3VuZENvbG9yOnQuYmFja2dyb3VuZENvbG9yLHBvc2l0aW9uOlwicmVsYXRpdmVcIn0sZWxsaXBzaXM6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmVsbGlwc2lzQ29sb3IsZm9udFNpemU6cy5kZWZhdWx0LmVsbGlwc2lzRm9udFNpemUsbGluZUhlaWdodDpzLmRlZmF1bHQuZWxsaXBzaXNMaW5lSGVpZ2h0LGN1cnNvcjpzLmRlZmF1bHQuZWxsaXBzaXNDdXJzb3J9LFwiYnJhY2Utcm93XCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjdXJzb3I6XCJwb2ludGVyXCJ9LGJyYWNlOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY3Vyc29yOnMuZGVmYXVsdC5icmFjZUN1cnNvcixmb250V2VpZ2h0OnMuZGVmYXVsdC5icmFjZUZvbnRXZWlnaHQsY29sb3I6dC5icmFjZUNvbG9yfSxcImV4cGFuZGVkLWljb25cIjp7Y29sb3I6dC5leHBhbmRlZEljb259LFwiY29sbGFwc2VkLWljb25cIjp7Y29sb3I6dC5jb2xsYXBzZWRJY29ufSxjb2xvbjp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLG1hcmdpbjpzLmRlZmF1bHQua2V5TWFyZ2luLGNvbG9yOnQua2V5Q29sb3IsdmVydGljYWxBbGlnbjpcInRvcFwifSxvYmplY3RLZXlWYWw6ZnVuY3Rpb24oZSxuKXtyZXR1cm57c3R5bGU6YSh7cGFkZGluZ1RvcDpzLmRlZmF1bHQua2V5VmFsUGFkZGluZ1RvcCxwYWRkaW5nUmlnaHQ6cy5kZWZhdWx0LmtleVZhbFBhZGRpbmdSaWdodCxwYWRkaW5nQm90dG9tOnMuZGVmYXVsdC5rZXlWYWxQYWRkaW5nQm90dG9tLGJvcmRlckxlZnQ6cy5kZWZhdWx0LmtleVZhbEJvcmRlckxlZnQrXCIgXCIrdC5vYmplY3RCb3JkZXIsXCI6aG92ZXJcIjp7cGFkZGluZ0xlZnQ6bi5wYWRkaW5nTGVmdC0xK1wicHhcIixib3JkZXJMZWZ0OnMuZGVmYXVsdC5rZXlWYWxCb3JkZXJIb3ZlcitcIiBcIit0Lm9iamVjdEJvcmRlcn19LG4pfX0sXCJvYmplY3Qta2V5LXZhbC1uby1ib3JkZXJcIjp7cGFkZGluZzpzLmRlZmF1bHQua2V5VmFsUGFkZGluZ30sXCJwdXNoZWQtY29udGVudFwiOnttYXJnaW5MZWZ0OnMuZGVmYXVsdC5wdXNoZWRDb250ZW50TWFyZ2luTGVmdH0sdmFyaWFibGVWYWx1ZTpmdW5jdGlvbihlLHQpe3JldHVybntzdHlsZTphKHtkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIscGFkZGluZ1JpZ2h0OnMuZGVmYXVsdC52YXJpYWJsZVZhbHVlUGFkZGluZ1JpZ2h0LHBvc2l0aW9uOlwicmVsYXRpdmVcIn0sdCl9fSxcIm9iamVjdC1uYW1lXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmtleUNvbG9yLGxldHRlclNwYWNpbmc6cy5kZWZhdWx0LmtleUxldHRlclNwYWNpbmcsZm9udFN0eWxlOnMuZGVmYXVsdC5rZXlGb250U3R5bGUsdmVydGljYWxBbGlnbjpzLmRlZmF1bHQua2V5VmVydGljYWxBbGlnbixvcGFjaXR5OnMuZGVmYXVsdC5rZXlPcGFjaXR5LFwiOmhvdmVyXCI6e29wYWNpdHk6cy5kZWZhdWx0LmtleU9wYWNpdHlIb3Zlcn19LFwiYXJyYXkta2V5XCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmFycmF5S2V5Q29sb3IsbGV0dGVyU3BhY2luZzpzLmRlZmF1bHQua2V5TGV0dGVyU3BhY2luZyxmb250U3R5bGU6cy5kZWZhdWx0LmtleUZvbnRTdHlsZSx2ZXJ0aWNhbEFsaWduOnMuZGVmYXVsdC5rZXlWZXJ0aWNhbEFsaWduLG9wYWNpdHk6cy5kZWZhdWx0LmtleU9wYWNpdHksXCI6aG92ZXJcIjp7b3BhY2l0eTpzLmRlZmF1bHQua2V5T3BhY2l0eUhvdmVyfX0sXCJvYmplY3Qtc2l6ZVwiOntjb2xvcjp0Lm9iamVjdFNpemUsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC5vYmplY3RTaXplQm9yZGVyUmFkaXVzLGZvbnRTdHlsZTpzLmRlZmF1bHQub2JqZWN0U2l6ZUZvbnRTdHlsZSxtYXJnaW46cy5kZWZhdWx0Lm9iamVjdFNpemVNYXJnaW4sY3Vyc29yOlwiZGVmYXVsdFwifSxcImRhdGEtdHlwZS1sYWJlbFwiOntmb250U2l6ZTpzLmRlZmF1bHQuZGF0YVR5cGVGb250U2l6ZSxtYXJnaW5SaWdodDpzLmRlZmF1bHQuZGF0YVR5cGVNYXJnaW5SaWdodCxvcGFjaXR5OnMuZGVmYXVsdC5kYXRhdHlwZU9wYWNpdHl9LGJvb2xlYW46e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmRhdGFUeXBlcy5ib29sZWFufSxkYXRlOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuZGF0ZX0sXCJkYXRlLXZhbHVlXCI6e21hcmdpbkxlZnQ6cy5kZWZhdWx0LmRhdGVWYWx1ZU1hcmdpbkxlZnR9LGZsb2F0OntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuZmxvYXR9LGZ1bmN0aW9uOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuZnVuY3Rpb24sY3Vyc29yOlwicG9pbnRlclwiLHdoaXRlU3BhY2U6XCJwcmUtbGluZVwifSxcImZ1bmN0aW9uLXZhbHVlXCI6e2ZvbnRTdHlsZTpcIml0YWxpY1wifSxpbnRlZ2VyOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuaW50ZWdlcn0sc3RyaW5nOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuc3RyaW5nfSxuYW46e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmRhdGFUeXBlcy5uYW4sZm9udFNpemU6cy5kZWZhdWx0Lm5hbkZvbnRTaXplLGZvbnRXZWlnaHQ6cy5kZWZhdWx0Lm5hbkZvbnRXZWlnaHQsYmFja2dyb3VuZENvbG9yOnQuZGF0YVR5cGVzLmJhY2tncm91bmQscGFkZGluZzpzLmRlZmF1bHQubmFuUGFkZGluZyxib3JkZXJSYWRpdXM6cy5kZWZhdWx0Lm5hbkJvcmRlclJhZGl1c30sbnVsbDp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLm51bGwsZm9udFNpemU6cy5kZWZhdWx0Lm51bGxGb250U2l6ZSxmb250V2VpZ2h0OnMuZGVmYXVsdC5udWxsRm9udFdlaWdodCxiYWNrZ3JvdW5kQ29sb3I6dC5kYXRhVHlwZXMuYmFja2dyb3VuZCxwYWRkaW5nOnMuZGVmYXVsdC5udWxsUGFkZGluZyxib3JkZXJSYWRpdXM6cy5kZWZhdWx0Lm51bGxCb3JkZXJSYWRpdXN9LHVuZGVmaW5lZDp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLnVuZGVmaW5lZCxmb250U2l6ZTpzLmRlZmF1bHQudW5kZWZpbmVkRm9udFNpemUscGFkZGluZzpzLmRlZmF1bHQudW5kZWZpbmVkUGFkZGluZyxib3JkZXJSYWRpdXM6cy5kZWZhdWx0LnVuZGVmaW5lZEJvcmRlclJhZGl1cyxiYWNrZ3JvdW5kQ29sb3I6dC5kYXRhVHlwZXMuYmFja2dyb3VuZH0scmVnZXhwOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMucmVnZXhwfSxcImNvcHktdG8tY2xpcGJvYXJkXCI6e2N1cnNvcjpzLmRlZmF1bHQuY2xpcGJvYXJkQ3Vyc29yfSxcImNvcHktaWNvblwiOntjb2xvcjp0LmNvcHlUb0NsaXBib2FyZCxmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLG1hcmdpblJpZ2h0OnMuZGVmYXVsdC5pY29uTWFyZ2luUmlnaHQsdmVydGljYWxBbGlnbjpcInRvcFwifSxcImNvcHktaWNvbi1jb3BpZWRcIjp7Y29sb3I6dC5jb3B5VG9DbGlwYm9hcmRDaGVjayxtYXJnaW5MZWZ0OnMuZGVmYXVsdC5jbGlwYm9hcmRDaGVja01hcmdpbkxlZnR9LFwiYXJyYXktZ3JvdXAtbWV0YS1kYXRhXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixwYWRkaW5nOnMuZGVmYXVsdC5hcnJheUdyb3VwTWV0YVBhZGRpbmd9LFwib2JqZWN0LW1ldGEtZGF0YVwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIscGFkZGluZzpzLmRlZmF1bHQubWV0YURhdGFQYWRkaW5nfSxcImljb24tY29udGFpbmVyXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIix3aWR0aDpzLmRlZmF1bHQuaWNvbkNvbnRhaW5lcldpZHRofSx0b29sdGlwOntwYWRkaW5nOnMuZGVmYXVsdC50b29sdGlwUGFkZGluZ30scmVtb3ZlVmFySWNvbjp7dmVydGljYWxBbGlnbjpcInRvcFwiLGRpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmVkaXRWYXJpYWJsZS5yZW1vdmVJY29uLGN1cnNvcjpzLmRlZmF1bHQuaWNvbkN1cnNvcixmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLG1hcmdpblJpZ2h0OnMuZGVmYXVsdC5pY29uTWFyZ2luUmlnaHR9LGFkZFZhckljb246e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIixkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5lZGl0VmFyaWFibGUuYWRkSWNvbixjdXJzb3I6cy5kZWZhdWx0Lmljb25DdXJzb3IsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSxtYXJnaW5SaWdodDpzLmRlZmF1bHQuaWNvbk1hcmdpblJpZ2h0fSxlZGl0VmFySWNvbjp7dmVydGljYWxBbGlnbjpcInRvcFwiLGRpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmVkaXRWYXJpYWJsZS5lZGl0SWNvbixjdXJzb3I6cy5kZWZhdWx0Lmljb25DdXJzb3IsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSxtYXJnaW5SaWdodDpzLmRlZmF1bHQuaWNvbk1hcmdpblJpZ2h0fSxcImVkaXQtaWNvbi1jb250YWluZXJcIjp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLHZlcnRpY2FsQWxpZ246XCJ0b3BcIn0sXCJjaGVjay1pY29uXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjdXJzb3I6cy5kZWZhdWx0Lmljb25DdXJzb3IsY29sb3I6dC5lZGl0VmFyaWFibGUuY2hlY2tJY29uLGZvbnRTaXplOnMuZGVmYXVsdC5pY29uRm9udFNpemUscGFkZGluZ1JpZ2h0OnMuZGVmYXVsdC5pY29uUGFkZGluZ1JpZ2h0fSxcImNhbmNlbC1pY29uXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjdXJzb3I6cy5kZWZhdWx0Lmljb25DdXJzb3IsY29sb3I6dC5lZGl0VmFyaWFibGUuY2FuY2VsSWNvbixmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLHBhZGRpbmdSaWdodDpzLmRlZmF1bHQuaWNvblBhZGRpbmdSaWdodH0sXCJlZGl0LWlucHV0XCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixtaW5IZWlnaHQ6cy5kZWZhdWx0LmVkaXRJbnB1dEhlaWdodCxtaW5XaWR0aDpzLmRlZmF1bHQuZWRpdElucHV0TWluV2lkdGgsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC5lZGl0SW5wdXRCb3JkZXJSYWRpdXMsYmFja2dyb3VuZENvbG9yOnQuZWRpdFZhcmlhYmxlLmJhY2tncm91bmQsY29sb3I6dC5lZGl0VmFyaWFibGUuY29sb3IscGFkZGluZzpzLmRlZmF1bHQuZWRpdElucHV0UGFkZGluZyxtYXJnaW5SaWdodDpzLmRlZmF1bHQuZWRpdElucHV0TWFyZ2luUmlnaHQsZm9udEZhbWlseTpzLmRlZmF1bHQuZWRpdElucHV0Rm9udEZhbWlseX0sXCJkZXRlY3RlZC1yb3dcIjp7cGFkZGluZ1RvcDpzLmRlZmF1bHQuZGV0ZWN0ZWRSb3dQYWRkaW5nVG9wfSxcImtleS1tb2RhbC1yZXF1ZXN0XCI6e3Bvc2l0aW9uOnMuZGVmYXVsdC5hZGRLZXlDb3ZlclBvc2l0aW9uLHRvcDpzLmRlZmF1bHQuYWRkS2V5Q292ZXJQb3NpdGlvblB4LGxlZnQ6cy5kZWZhdWx0LmFkZEtleUNvdmVyUG9zaXRpb25QeCxyaWdodDpzLmRlZmF1bHQuYWRkS2V5Q292ZXJQb3NpdGlvblB4LGJvdHRvbTpzLmRlZmF1bHQuYWRkS2V5Q292ZXJQb3NpdGlvblB4LGJhY2tncm91bmRDb2xvcjpzLmRlZmF1bHQuYWRkS2V5Q292ZXJCYWNrZ3JvdW5kfSxcImtleS1tb2RhbFwiOnt3aWR0aDpzLmRlZmF1bHQuYWRkS2V5TW9kYWxXaWR0aCxiYWNrZ3JvdW5kQ29sb3I6dC5hZGRLZXlNb2RhbC5iYWNrZ3JvdW5kLG1hcmdpbkxlZnQ6cy5kZWZhdWx0LmFkZEtleU1vZGFsTWFyZ2luLG1hcmdpblJpZ2h0OnMuZGVmYXVsdC5hZGRLZXlNb2RhbE1hcmdpbixwYWRkaW5nOnMuZGVmYXVsdC5hZGRLZXlNb2RhbFBhZGRpbmcsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC5hZGRLZXlNb2RhbFJhZGl1cyxtYXJnaW5Ub3A6XCIxNXB4XCIscG9zaXRpb246XCJyZWxhdGl2ZVwifSxcImtleS1tb2RhbC1sYWJlbFwiOntjb2xvcjp0LmFkZEtleU1vZGFsLmxhYmVsQ29sb3IsbWFyZ2luTGVmdDpcIjJweFwiLG1hcmdpbkJvdHRvbTpcIjVweFwiLGZvbnRTaXplOlwiMTFweFwifSxcImtleS1tb2RhbC1pbnB1dC1jb250YWluZXJcIjp7b3ZlcmZsb3c6XCJoaWRkZW5cIn0sXCJrZXktbW9kYWwtaW5wdXRcIjp7d2lkdGg6XCIxMDAlXCIscGFkZGluZzpcIjNweCA2cHhcIixmb250RmFtaWx5OlwibW9ub3NwYWNlXCIsY29sb3I6dC5hZGRLZXlNb2RhbC5jb2xvcixib3JkZXI6XCJub25lXCIsYm94U2l6aW5nOlwiYm9yZGVyLWJveFwiLGJvcmRlclJhZGl1czpcIjJweFwifSxcImtleS1tb2RhbC1jYW5jZWxcIjp7YmFja2dyb3VuZENvbG9yOnQuZWRpdFZhcmlhYmxlLnJlbW92ZUljb24scG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpcIjBweFwiLHJpZ2h0OlwiMHB4XCIsYm9yZGVyUmFkaXVzOlwiMHB4IDNweCAwcHggM3B4XCIsY3Vyc29yOlwicG9pbnRlclwifSxcImtleS1tb2RhbC1jYW5jZWwtaWNvblwiOntjb2xvcjp0LmFkZEtleU1vZGFsLmxhYmVsQ29sb3IsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSx0cmFuc2Zvcm06XCJyb3RhdGUoNDVkZWcpXCJ9LFwia2V5LW1vZGFsLXN1Ym1pdFwiOntjb2xvcjp0LmVkaXRWYXJpYWJsZS5hZGRJY29uLGZvbnRTaXplOnMuZGVmYXVsdC5pY29uRm9udFNpemUscG9zaXRpb246XCJhYnNvbHV0ZVwiLHJpZ2h0OlwiMnB4XCIsdG9wOlwiM3B4XCIsY3Vyc29yOlwicG9pbnRlclwifSxcImZ1bmN0aW9uLWVsbGlwc2lzXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmVsbGlwc2lzQ29sb3IsZm9udFNpemU6cy5kZWZhdWx0LmVsbGlwc2lzRm9udFNpemUsbGluZUhlaWdodDpzLmRlZmF1bHQuZWxsaXBzaXNMaW5lSGVpZ2h0LGN1cnNvcjpzLmRlZmF1bHQuZWxsaXBzaXNDdXJzb3J9LFwidmFsaWRhdGlvbi1mYWlsdXJlXCI6e2Zsb2F0OlwicmlnaHRcIixwYWRkaW5nOlwiM3B4IDZweFwiLGJvcmRlclJhZGl1czpcIjJweFwiLGN1cnNvcjpcInBvaW50ZXJcIixjb2xvcjp0LnZhbGlkYXRpb25GYWlsdXJlLmZvbnRDb2xvcixiYWNrZ3JvdW5kQ29sb3I6dC52YWxpZGF0aW9uRmFpbHVyZS5iYWNrZ3JvdW5kfSxcInZhbGlkYXRpb24tZmFpbHVyZS1sYWJlbFwiOnttYXJnaW5SaWdodDpcIjZweFwifSxcInZhbGlkYXRpb24tZmFpbHVyZS1jbGVhclwiOntwb3NpdGlvbjpcInJlbGF0aXZlXCIsdmVydGljYWxBbGlnbjpcInRvcFwiLGN1cnNvcjpcInBvaW50ZXJcIixjb2xvcjp0LnZhbGlkYXRpb25GYWlsdXJlLmljb25Db2xvcixmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLHRyYW5zZm9ybTpcInJvdGF0ZSg0NWRlZylcIn19fSxmPWZ1bmN0aW9uKGUpe3ZhciB0PW8ucmp2X2RlZmF1bHQ7cmV0dXJuITEhPT1lJiZcIm5vbmVcIiE9PWV8fCh0PW8ucmp2X2dyZXkpLCgwLHUuY3JlYXRlU3R5bGluZykoYyx7ZGVmYXVsdEJhc2UxNjp0fSkoZSl9fSxmdW5jdGlvbihlLHQpe3ZhciBuPWUuZXhwb3J0cz17dmVyc2lvbjpcIjIuNS43XCJ9O1wibnVtYmVyXCI9PXR5cGVvZiBfX2UmJihfX2U9bil9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDMyKShcIndrc1wiKSxhPW4oMjMpLG89big1KS5TeW1ib2wsaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBvOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHJbZV18fChyW2VdPWkmJm9bZV18fChpP286YSkoXCJTeW1ib2wuXCIrZSkpfSkuc3RvcmU9cn0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7dmFyIHQ9YShlKTtyZXR1cm5cIm51bWJlclwiPT09dCYmKHQ9aXNOYU4oZSk/XCJuYW5cIjooMHxlKSE9ZT9cImZsb2F0XCI6XCJpbnRlZ2VyXCIpLHR9ZnVuY3Rpb24gYShlKXtyZXR1cm57fS50b1N0cmluZy5jYWxsKGUpLm1hdGNoKC9cXHMoW2EtekEtWl0rKS8pWzFdLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gbyhlKXt2YXIgdD1bXCJiYXNlMDBcIixcImJhc2UwMVwiLFwiYmFzZTAyXCIsXCJiYXNlMDNcIixcImJhc2UwNFwiLFwiYmFzZTA1XCIsXCJiYXNlMDZcIixcImJhc2UwN1wiLFwiYmFzZTA4XCIsXCJiYXNlMDlcIixcImJhc2UwQVwiLFwiYmFzZTBCXCIsXCJiYXNlMENcIixcImJhc2UwRFwiLFwiYmFzZTBFXCIsXCJiYXNlMEZcIl07aWYoXCJvYmplY3RcIj09PXIoZSkpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWlmKCEodFtuXWluIGUpKXJldHVybiExO3JldHVybiEwfXJldHVybiExfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQudG9UeXBlPXIsdC5pc1RoZW1lPW99LGZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5leHBvcnRzPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1wibnVtYmVyXCI9PXR5cGVvZiBfX2cmJihfX2c9bil9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxKSxkPXIoZikscD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD0oZS5yanZJZCxlLnR5cGVfbmFtZSksbj1lLmRpc3BsYXlEYXRhVHlwZXMscj1lLnRoZW1lO3JldHVybiBuP2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHMoe2NsYXNzTmFtZTpcImRhdGEtdHlwZS1sYWJlbFwifSwoMCxkLmRlZmF1bHQpKHIsXCJkYXRhLXR5cGUtbGFiZWxcIikpLHQpOm51bGx9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9cH0sZnVuY3Rpb24oZSx0KXt2YXIgbj17fS5oYXNPd25Qcm9wZXJ0eTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big5KSxhPW4oMjIpO2UuZXhwb3J0cz1uKDEwKT9mdW5jdGlvbihlLHQsbil7cmV0dXJuIHIuZihlLHQsYSgxLG4pKX06ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlW3RdPW4sZX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE2KSxhPW4oNDQpLG89bigyOSksaT1PYmplY3QuZGVmaW5lUHJvcGVydHk7dC5mPW4oMTApP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQsbil7aWYocihlKSx0PW8odCwhMCkscihuKSxhKXRyeXtyZXR1cm4gaShlLHQsbil9Y2F0Y2goZSl7fWlmKFwiZ2V0XCJpbiBufHxcInNldFwiaW4gbil0aHJvdyBUeXBlRXJyb3IoXCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCFcIik7cmV0dXJuXCJ2YWx1ZVwiaW4gbiYmKGVbdF09bi52YWx1ZSksZX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IW4oMTEpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2goZSl7cmV0dXJuITB9fX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNDkpLGE9bigyOCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByKGEoZSkpfX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAsbj1BcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspblt0XT1lW3RdO3JldHVybiBufXJldHVybiBBcnJheS5mcm9tKGUpfWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1uKDE2MSksbD1uKDE0KSxjPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0obCksZj1uKDQpLGQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4saSx1O2EodGhpcyx0KTtmb3IodmFyIGw9YXJndW1lbnRzLmxlbmd0aCxjPUFycmF5KGwpLGQ9MDtkPGw7ZCsrKWNbZF09YXJndW1lbnRzW2RdO3JldHVybiBuPWk9byh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KGMpKSksaS5vYmplY3RzPXt9LGkuc2V0PWZ1bmN0aW9uKGUsdCxuLHIpe3ZvaWQgMD09PWkub2JqZWN0c1tlXSYmKGkub2JqZWN0c1tlXT17fSksdm9pZCAwPT09aS5vYmplY3RzW2VdW3RdJiYoaS5vYmplY3RzW2VdW3RdPXt9KSxpLm9iamVjdHNbZV1bdF1bbl09cn0saS5nZXQ9ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIHZvaWQgMD09PWkub2JqZWN0c1tlXXx8dm9pZCAwPT09aS5vYmplY3RzW2VdW3RdfHx2b2lkIDA9PWkub2JqZWN0c1tlXVt0XVtuXT9yOmkub2JqZWN0c1tlXVt0XVtuXX0saS5oYW5kbGVBY3Rpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yanZJZCxuPWUuZGF0YTtzd2l0Y2goZS5uYW1lKXtjYXNlXCJSRVNFVFwiOmkuZW1pdChcInJlc2V0LVwiK3QpO2JyZWFrO2Nhc2VcIlZBUklBQkxFX1VQREFURURcIjplLmRhdGEudXBkYXRlZF9zcmM9aS51cGRhdGVTcmModCxuKSxpLnNldCh0LFwiYWN0aW9uXCIsXCJ2YXJpYWJsZS11cGRhdGVcIixzKHt9LG4se3R5cGU6XCJ2YXJpYWJsZS1lZGl0ZWRcIn0pKSxpLmVtaXQoXCJ2YXJpYWJsZS11cGRhdGUtXCIrdCk7YnJlYWs7Y2FzZVwiVkFSSUFCTEVfUkVNT1ZFRFwiOmUuZGF0YS51cGRhdGVkX3NyYz1pLnVwZGF0ZVNyYyh0LG4pLGkuc2V0KHQsXCJhY3Rpb25cIixcInZhcmlhYmxlLXVwZGF0ZVwiLHMoe30sbix7dHlwZTpcInZhcmlhYmxlLXJlbW92ZWRcIn0pKSxpLmVtaXQoXCJ2YXJpYWJsZS11cGRhdGUtXCIrdCk7YnJlYWs7Y2FzZVwiVkFSSUFCTEVfQURERURcIjplLmRhdGEudXBkYXRlZF9zcmM9aS51cGRhdGVTcmModCxuKSxpLnNldCh0LFwiYWN0aW9uXCIsXCJ2YXJpYWJsZS11cGRhdGVcIixzKHt9LG4se3R5cGU6XCJ2YXJpYWJsZS1hZGRlZFwifSkpLGkuZW1pdChcInZhcmlhYmxlLXVwZGF0ZS1cIit0KTticmVhaztjYXNlXCJBRERfVkFSSUFCTEVfS0VZX1JFUVVFU1RcIjppLnNldCh0LFwiYWN0aW9uXCIsXCJuZXcta2V5LXJlcXVlc3RcIixuKSxpLmVtaXQoXCJhZGQta2V5LXJlcXVlc3QtXCIrdCl9fSxpLnVwZGF0ZVNyYz1mdW5jdGlvbihlLHQpe3ZhciBuPXQubmFtZSxhPXQubmFtZXNwYWNlLG89dC5uZXdfdmFsdWUscz0odC5leGlzdGluZ192YWx1ZSx0LnZhcmlhYmxlX3JlbW92ZWQpO2Euc2hpZnQoKTt2YXIgdT1pLmdldChlLFwiZ2xvYmFsXCIsXCJzcmNcIiksbD1pLmRlZXBDb3B5KHUsW10uY29uY2F0KHIoYSkpKSxjPWwsZD0hMCxwPSExLGI9dm9pZCAwO3RyeXtmb3IodmFyIGgseT1hW1N5bWJvbC5pdGVyYXRvcl0oKTshKGQ9KGg9eS5uZXh0KCkpLmRvbmUpO2Q9ITApYz1jW2gudmFsdWVdfWNhdGNoKGUpe3A9ITAsYj1lfWZpbmFsbHl7dHJ5eyFkJiZ5LnJldHVybiYmeS5yZXR1cm4oKX1maW5hbGx5e2lmKHApdGhyb3cgYn19cmV0dXJuIHM/XCJhcnJheVwiPT0oMCxmLnRvVHlwZSkoYyk/Yy5zcGxpY2UobiwxKTpkZWxldGUgY1tuXTpudWxsIT09bj9jW25dPW86bD1vLGkuc2V0KGUsXCJnbG9iYWxcIixcInNyY1wiLGwpLGx9LGkuZGVlcENvcHk9ZnVuY3Rpb24oZSx0KXt2YXIgbj0oMCxmLnRvVHlwZSkoZSksYT12b2lkIDAsbz10LnNoaWZ0KCk7cmV0dXJuXCJhcnJheVwiPT1uP2E9W10uY29uY2F0KHIoZSkpOlwib2JqZWN0XCI9PW4mJihhPXMoe30sZSkpLHZvaWQgMCE9PW8mJihhW29dPWkuZGVlcENvcHkoZVtvXSx0KSksYX0sdT1uLG8oaSx1KX1yZXR1cm4gaSh0LGUpLHR9KHUuRXZlbnRFbWl0dGVyKSxwPW5ldyBkO2MuZGVmYXVsdC5yZWdpc3RlcihwLmhhbmRsZUFjdGlvbi5iaW5kKHApKSx0LmRlZmF1bHQ9cH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciByPW4oMTYyKSxhPW5ldyByLkRpc3BhdGNoZXI7dC5kZWZhdWx0PWF9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUsdCl7dmFyIG49e307Zm9yKHZhciByIGluIGUpdC5pbmRleE9mKHIpPj0wfHxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKG5bcl09ZVtyXSk7cmV0dXJuIG59ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1mdW5jdGlvbiBzKGUpe3JldHVybiBlfHwoZT17fSkse3N0eWxlOnUoe3ZlcnRpY2FsQWxpZ246XCJtaWRkbGVcIn0sZSx7Y29sb3I6ZS5jb2xvcj9lLmNvbG9yOmQsaGVpZ2h0OlwiMWVtXCIsd2lkdGg6XCIxZW1cIn0pfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkNoZWNrQ2lyY2xlPXQuRWRpdD10LkFkZD10LkFkZENpcmNsZT10LlJlbW92ZUNpcmNsZT10LkNsaXBweT10LkFycm93RG93bj10LkFycm93UmlnaHQ9dC5TcXVhcmVQbHVzPXQuU3F1YXJlTWludXM9dC5DaXJjbGVQbHVzPXQuQ2lyY2xlTWludXM9dm9pZCAwO3ZhciB1PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxjPW4oMCksZj1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KGMpLGQ9XCIjMDAwMDAwXCI7dC5DaXJjbGVNaW51cz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHUoe30scyh0KSx7dmlld0JveDpcIjAgMCAyNCAyNFwiLGZpbGw6XCJjdXJyZW50Q29sb3JcIixwcmVzZXJ2ZUFzcGVjdFJhdGlvOlwieE1pZFlNaWQgbWVldFwifSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNMTIsMjBDNy41OSwyMCA0LDE2LjQxIDQsMTJDNCw3LjU5IDcuNTksNCAxMiw0QzE2LjQxLDQgMjAsNy41OSAyMCwxMkMyMCwxNi40MSAxNi40MSwyMCAxMiwyME0xMiwyQTEwLDEwIDAgMCwwIDIsMTJBMTAsMTAgMCAwLDAgMTIsMjJBMTAsMTAgMCAwLDAgMjIsMTJBMTAsMTAgMCAwLDAgMTIsMk03LDEzSDE3VjExSDdcIn0pKSl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSx0LkNpcmNsZVBsdXM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgMjQgMjRcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTEyLDIwQzcuNTksMjAgNCwxNi40MSA0LDEyQzQsNy41OSA3LjU5LDQgMTIsNEMxNi40MSw0IDIwLDcuNTkgMjAsMTJDMjAsMTYuNDEgMTYuNDEsMjAgMTIsMjBNMTIsMkExMCwxMCAwIDAsMCAyLDEyQTEwLDEwIDAgMCwwIDEyLDIyQTEwLDEwIDAgMCwwIDIyLDEyQTEwLDEwIDAgMCwwIDEyLDJNMTMsN0gxMVYxMUg3VjEzSDExVjE3SDEzVjEzSDE3VjExSDEzVjdaXCJ9KSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5TcXVhcmVNaW51cz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKSxhPXModCkuc3R5bGU7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix7ZmlsbDphLmNvbG9yLHdpZHRoOmEuaGVpZ2h0LGhlaWdodDphLndpZHRoLHN0eWxlOmEsdmlld0JveDpcIjAgMCAxNzkyIDE3OTJcIn0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNMTM0NCA4MDB2NjRxMCAxNC05IDIzdC0yMyA5aC04MzJxLTE0IDAtMjMtOXQtOS0yM3YtNjRxMC0xNCA5LTIzdDIzLTloODMycTE0IDAgMjMgOXQ5IDIzem0xMjggNDQ4di04MzJxMC02Ni00Ny0xMTN0LTExMy00N2gtODMycS02NiAwLTExMyA0N3QtNDcgMTEzdjgzMnEwIDY2IDQ3IDExM3QxMTMgNDdoODMycTY2IDAgMTEzLTQ3dDQ3LTExM3ptMTI4LTgzMnY4MzJxMCAxMTktODQuNSAyMDMuNXQtMjAzLjUgODQuNWgtODMycS0xMTkgMC0yMDMuNS04NC41dC04NC41LTIwMy41di04MzJxMC0xMTkgODQuNS0yMDMuNXQyMDMuNS04NC41aDgzMnExMTkgMCAyMDMuNSA4NC41dDg0LjUgMjAzLjV6XCJ9KSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5TcXVhcmVQbHVzPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pLGE9cyh0KS5zdHlsZTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHtmaWxsOmEuY29sb3Isd2lkdGg6YS5oZWlnaHQsaGVpZ2h0OmEud2lkdGgsc3R5bGU6YSx2aWV3Qm94OlwiMCAwIDE3OTIgMTc5MlwifSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0xMzQ0IDgwMHY2NHEwIDE0LTkgMjN0LTIzIDloLTM1MnYzNTJxMCAxNC05IDIzdC0yMyA5aC02NHEtMTQgMC0yMy05dC05LTIzdi0zNTJoLTM1MnEtMTQgMC0yMy05dC05LTIzdi02NHEwLTE0IDktMjN0MjMtOWgzNTJ2LTM1MnEwLTE0IDktMjN0MjMtOWg2NHExNCAwIDIzIDl0OSAyM3YzNTJoMzUycTE0IDAgMjMgOXQ5IDIzem0xMjggNDQ4di04MzJxMC02Ni00Ny0xMTN0LTExMy00N2gtODMycS02NiAwLTExMyA0N3QtNDcgMTEzdjgzMnEwIDY2IDQ3IDExM3QxMTMgNDdoODMycTY2IDAgMTEzLTQ3dDQ3LTExM3ptMTI4LTgzMnY4MzJxMCAxMTktODQuNSAyMDMuNXQtMjAzLjUgODQuNWgtODMycS0xMTkgMC0yMDMuNS04NC41dC04NC41LTIwMy41di04MzJxMC0xMTkgODQuNS0yMDMuNXQyMDMuNS04NC41aDgzMnExMTkgMCAyMDMuNSA4NC41dDg0LjUgMjAzLjV6XCJ9KSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5BcnJvd1JpZ2h0PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIse3N0eWxlOnUoe30scyh0KS5zdHlsZSx7cGFkZGluZ0xlZnQ6XCIycHhcIix2ZXJ0aWNhbEFsaWduOlwidG9wXCJ9KSx2aWV3Qm94OlwiMCAwIDE1IDE1XCIsZmlsbDpcImN1cnJlbnRDb2xvclwifSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0wIDE0bDYtNi02LTZ6XCJ9KSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5BcnJvd0Rvd249ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix7c3R5bGU6dSh7fSxzKHQpLnN0eWxlLHtwYWRkaW5nTGVmdDpcIjJweFwiLHZlcnRpY2FsQWxpZ246XCJ0b3BcIn0pLHZpZXdCb3g6XCIwIDAgMTUgMTVcIixmaWxsOlwiY3VycmVudENvbG9yXCJ9LGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTAgNWw2IDYgNi02elwifSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQ2xpcHB5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDQwIDQwXCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwibTMwIDM1aC0yNXYtMjIuNWgyNXY3LjVoMi41di0xMi41YzAtMS40LTEuMS0yLjUtMi41LTIuNWgtNy41YzAtMi44LTIuMi01LTUtNXMtNSAyLjItNSA1aC03LjVjLTEuNCAwLTIuNSAxLjEtMi41IDIuNXYyNy41YzAgMS40IDEuMSAyLjUgMi41IDIuNWgyNWMxLjQgMCAyLjUtMS4xIDIuNS0yLjV2LTVoLTIuNXY1eiBtLTIwLTI3LjVoMi41czIuNS0xLjEgMi41LTIuNSAxLjEtMi41IDIuNS0yLjUgMi41IDEuMSAyLjUgMi41IDEuMyAyLjUgMi41IDIuNWgyLjVzMi41IDEuMSAyLjUgMi41aC0yMGMwLTEuNSAxLjEtMi41IDIuNS0yLjV6IG0tMi41IDIwaDV2LTIuNWgtNXYyLjV6IG0xNy41LTV2LTVsLTEwIDcuNSAxMCA3LjV2LTVoMTIuNXYtNWgtMTIuNXogbS0xNy41IDEwaDcuNXYtMi41aC03LjV2Mi41eiBtMTIuNS0xNy41aC0xMi41djIuNWgxMi41di0yLjV6IG0tNy41IDVoLTV2Mi41aDV2LTIuNXpcIn0pKSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5SZW1vdmVDaXJjbGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgNDAgNDBcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJtMjguNiAyNXEwLTAuNS0wLjQtMWwtNC00IDQtNHEwLjQtMC41IDAuNC0xIDAtMC42LTAuNC0xLjFsLTItMnEtMC40LTAuNC0xLTAuNC0wLjYgMC0xIDAuNGwtNC4xIDQuMS00LTQuMXEtMC40LTAuNC0xLTAuNC0wLjYgMC0xIDAuNGwtMiAycS0wLjUgMC41LTAuNSAxLjEgMCAwLjUgMC41IDFsNCA0LTQgNHEtMC41IDAuNS0wLjUgMSAwIDAuNyAwLjUgMS4xbDIgMnEwLjQgMC40IDEgMC40IDAuNiAwIDEtMC40bDQtNC4xIDQuMSA0LjFxMC40IDAuNCAxIDAuNCAwLjYgMCAxLTAuNGwyLTJxMC40LTAuNCAwLjQtMXogbTguNy01cTAgNC43LTIuMyA4LjZ0LTYuMyA2LjItOC42IDIuMy04LjYtMi4zLTYuMi02LjItMi4zLTguNiAyLjMtOC42IDYuMi02LjIgOC42LTIuMyA4LjYgMi4zIDYuMyA2LjIgMi4zIDguNnpcIn0pKSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5BZGRDaXJjbGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgNDAgNDBcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJtMzAuMSAyMS40di0yLjhxMC0wLjYtMC40LTF0LTEtMC41aC01Ljd2LTUuN3EwLTAuNi0wLjQtMXQtMS0wLjRoLTIuOXEtMC42IDAtMSAwLjR0LTAuNCAxdjUuN2gtNS43cS0wLjYgMC0xIDAuNXQtMC41IDF2Mi44cTAgMC42IDAuNSAxdDEgMC41aDUuN3Y1LjdxMCAwLjUgMC40IDF0MSAwLjRoMi45cTAuNiAwIDEtMC40dDAuNC0xdi01LjdoNS43cTAuNiAwIDEtMC41dDAuNC0xeiBtNy4yLTEuNHEwIDQuNy0yLjMgOC42dC02LjMgNi4yLTguNiAyLjMtOC42LTIuMy02LjItNi4yLTIuMy04LjYgMi4zLTguNiA2LjItNi4yIDguNi0yLjMgOC42IDIuMyA2LjMgNi4yIDIuMyA4LjZ6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQWRkPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDQwIDQwXCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwibTMxLjYgMjEuNmgtMTB2MTBoLTMuMnYtMTBoLTEwdi0zLjJoMTB2LTEwaDMuMnYxMGgxMHYzLjJ6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuRWRpdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHUoe30scyh0KSx7dmlld0JveDpcIjAgMCA0MCA0MFwiLGZpbGw6XCJjdXJyZW50Q29sb3JcIixwcmVzZXJ2ZUFzcGVjdFJhdGlvOlwieE1pZFlNaWQgbWVldFwifSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIm0xOS44IDI2LjRsMi42LTIuNi0zLjQtMy40LTIuNiAyLjZ2MS4zaDIuMnYyLjFoMS4yeiBtOS44LTE2cS0wLjMtMC40LTAuNyAwbC03LjggNy44cS0wLjQgMC40IDAgMC43dDAuNyAwbDcuOC03LjhxMC40LTAuNCAwLTAuN3ogbTEuOCAxMy4ydjQuM3EwIDIuNi0xLjkgNC41dC00LjUgMS45aC0xOC42cS0yLjYgMC00LjUtMS45dC0xLjktNC41di0xOC42cTAtMi43IDEuOS00LjZ0NC41LTEuOGgxOC42cTEuNCAwIDIuNiAwLjUgMC4zIDAuMiAwLjQgMC41IDAuMSAwLjQtMC4yIDAuN2wtMS4xIDEuMXEtMC4zIDAuMy0wLjcgMC4xLTAuNS0wLjEtMS0wLjFoLTE4LjZxLTEuNCAwLTIuNSAxLjF0LTEgMi41djE4LjZxMCAxLjQgMSAyLjV0Mi41IDFoMTguNnExLjUgMCAyLjUtMXQxLjEtMi41di0yLjlxMC0wLjIgMC4yLTAuNGwxLjQtMS41cTAuMy0wLjMgMC44LTAuMXQwLjQgMC42eiBtLTIuMS0xNi41bDYuNCA2LjUtMTUgMTVoLTYuNHYtNi41eiBtOS45IDNsLTIuMSAyLTYuNC02LjQgMi4xLTJxMC42LTAuNyAxLjUtMC43dDEuNSAwLjdsMy40IDMuNHEwLjYgMC42IDAuNiAxLjV0LTAuNiAxLjV6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQ2hlY2tDaXJjbGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgNDAgNDBcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJtMzEuNyAxNi40cTAtMC42LTAuNC0xbC0yLjEtMi4xcS0wLjQtMC40LTEtMC40dC0xIDAuNGwtOS4xIDkuMS01LTVxLTAuNS0wLjQtMS0wLjR0LTEgMC40bC0yLjEgMnEtMC40IDAuNC0wLjQgMSAwIDAuNiAwLjQgMWw4LjEgOC4xcTAuNCAwLjQgMSAwLjQgMC42IDAgMS0wLjRsMTIuMi0xMi4xcTAuNC0wLjQgMC40LTF6IG01LjYgMy42cTAgNC43LTIuMyA4LjZ0LTYuMyA2LjItOC42IDIuMy04LjYtMi4zLTYuMi02LjItMi4zLTguNiAyLjMtOC42IDYuMi02LjIgOC42LTIuMyA4LjYgMi4zIDYuMyA2LjIgMi4zIDguNnpcIn0pKSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIXIoZSkpdGhyb3cgVHlwZUVycm9yKGUrXCIgaXMgbm90IGFuIG9iamVjdCFcIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgZT9udWxsIT09ZTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBlfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9e319LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDQ4KSxhPW4oMzMpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIHIoZSxhKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSEwfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big1KSxhPW4oMiksbz1uKDcxKSxpPW4oOCkscz1uKDcpLHU9ZnVuY3Rpb24oZSx0LG4pe3ZhciBsLGMsZixkPWUmdS5GLHA9ZSZ1LkcsYj1lJnUuUyxoPWUmdS5QLHk9ZSZ1LkIsdj1lJnUuVyxtPXA/YTphW3RdfHwoYVt0XT17fSksZz1tLnByb3RvdHlwZSxfPXA/cjpiP3JbdF06KHJbdF18fHt9KS5wcm90b3R5cGU7cCYmKG49dCk7Zm9yKGwgaW4gbikoYz0hZCYmXyYmdm9pZCAwIT09X1tsXSkmJnMobSxsKXx8KGY9Yz9fW2xdOm5bbF0sbVtsXT1wJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBfW2xdP25bbF06eSYmYz9vKGYscik6diYmX1tsXT09Zj9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LG4scil7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LG4pfXJldHVybiBuZXcgZSh0LG4scil9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdC5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdH0oZik6aCYmXCJmdW5jdGlvblwiPT10eXBlb2YgZj9vKEZ1bmN0aW9uLmNhbGwsZik6ZixoJiYoKG0udmlydHVhbHx8KG0udmlydHVhbD17fSkpW2xdPWYsZSZ1LlImJmcmJiFnW2xdJiZpKGcsbCxmKSkpfTt1LkY9MSx1Lkc9Mix1LlM9NCx1LlA9OCx1LkI9MTYsdS5XPTMyLHUuVT02NCx1LlI9MTI4LGUuZXhwb3J0cz11fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LGZ1bmN0aW9uKGUsdCl7dmFyIG49MCxyPU1hdGgucmFuZG9tKCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVyblwiU3ltYm9sKFwiLmNvbmNhdCh2b2lkIDA9PT1lP1wiXCI6ZSxcIilfXCIsKCsrbityKS50b1N0cmluZygzNikpfX0sZnVuY3Rpb24oZSx0KXt0LmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7dmFyIG49e307Zm9yKHZhciByIGluIGUpdC5pbmRleE9mKHIpPj0wfHxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKG5bcl09ZVtyXSk7cmV0dXJuIG59ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gaShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIHMoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgdT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksYz1uKDApLGY9cihjKSxkPW4oNDEpLHA9big0KSxiPW4oNDIpLGg9bigxNzEpLHk9cihoKSx2PW4oNTYpLG09cih2KSxnPW4oNTcpLF89cihnKSxqPW4oNTgpLE89cihqKSxFPW4oMTMpLHc9cihFKSx4PW4oNTkpLEM9bigxKSxrPXIoQyksUD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe28odGhpcyx0KTt2YXIgbj1pKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwodGhpcyxlKSk7Uy5jYWxsKG4pO3ZhciByPXQuZ2V0U3RhdGUoZSk7cmV0dXJuIG4uc3RhdGU9dSh7fSxyLHtwcmV2UHJvcHM6e319KSxufXJldHVybiBzKHQsZSksbCh0LFt7a2V5OlwiZ2V0QnJhY2VTdGFydFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxyPXRoaXMucHJvcHMsYT1yLnNyYyxvPXIudGhlbWUsaT1yLmljb25TdHlsZTtpZihcImFycmF5X2dyb3VwXCI9PT1yLnBhcmVudF90eXBlKXJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGsuZGVmYXVsdCkobyxcImJyYWNlXCIpLFwiYXJyYXlcIj09PWU/XCJbXCI6XCJ7XCIpLHQ/dGhpcy5nZXRPYmplY3RNZXRhRGF0YShhKTpudWxsKTt2YXIgcz10P3guRXhwYW5kZWRJY29uOnguQ29sbGFwc2VkSWNvbjtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix1KHtvbkNsaWNrOmZ1bmN0aW9uKGUpe24udG9nZ2xlQ29sbGFwc2VkKCl9fSwoMCxrLmRlZmF1bHQpKG8sXCJicmFjZS1yb3dcIikpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7Y2xhc3NOYW1lOlwiaWNvbi1jb250YWluZXJcIn0sKDAsay5kZWZhdWx0KShvLFwiaWNvbi1jb250YWluZXJcIikpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHMse3RoZW1lOm8saWNvblN0eWxlOml9KSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5kZWZhdWx0LHRoaXMucHJvcHMpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGsuZGVmYXVsdCkobyxcImJyYWNlXCIpLFwiYXJyYXlcIj09PWU/XCJbXCI6XCJ7XCIpKSx0P3RoaXMuZ2V0T2JqZWN0TWV0YURhdGEoYSk6bnVsbCl9fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5kZXB0aCxuPWUuc3JjLHI9KGUubmFtZXNwYWNlLGUubmFtZSxlLnR5cGUsZS5wYXJlbnRfdHlwZSksbz1lLnRoZW1lLGk9ZS5qc3ZSb290LHM9ZS5pY29uU3R5bGUsbD1hKGUsW1wiZGVwdGhcIixcInNyY1wiLFwibmFtZXNwYWNlXCIsXCJuYW1lXCIsXCJ0eXBlXCIsXCJwYXJlbnRfdHlwZVwiLFwidGhlbWVcIixcImpzdlJvb3RcIixcImljb25TdHlsZVwiXSksYz10aGlzLnN0YXRlLGQ9Yy5vYmplY3RfdHlwZSxwPWMuZXhwYW5kZWQsYj17fTtyZXR1cm4gaXx8XCJhcnJheV9ncm91cFwiPT09cj9cImFycmF5X2dyb3VwXCI9PT1yJiYoYi5ib3JkZXJMZWZ0PTAsYi5kaXNwbGF5PVwiaW5saW5lXCIpOmIucGFkZGluZ0xlZnQ9NSp0aGlzLnByb3BzLmluZGVudFdpZHRoLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7Y2xhc3NOYW1lOlwib2JqZWN0LWtleS12YWxcIn0sKDAsay5kZWZhdWx0KShvLGk/XCJqc3Ytcm9vdFwiOlwib2JqZWN0S2V5VmFsXCIsYikpLHRoaXMuZ2V0QnJhY2VTdGFydChkLHApLHA/dGhpcy5nZXRPYmplY3RDb250ZW50KHQsbix1KHt0aGVtZTpvLGljb25TdHlsZTpzfSxsKSk6dGhpcy5nZXRFbGxpcHNpcygpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJicmFjZS1yb3dcIn0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnUoe30sKDAsay5kZWZhdWx0KShvLFwiYnJhY2VcIikuc3R5bGUse3BhZGRpbmdMZWZ0OnA/XCIzcHhcIjpcIjBweFwifSl9LFwiYXJyYXlcIj09PWQ/XCJdXCI6XCJ9XCIpLHA/bnVsbDp0aGlzLmdldE9iamVjdE1ldGFEYXRhKG4pKSl9fV0sW3trZXk6XCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHNcIix2YWx1ZTpmdW5jdGlvbihlLG4pe3ZhciByPW4ucHJldlByb3BzO2lmKGUuc3JjIT09ci5zcmN8fGUuY29sbGFwc2VkIT09ci5jb2xsYXBzZWR8fGUubmFtZSE9PXIubmFtZXx8ZS5uYW1lc3BhY2UhPT1yLm5hbWVzcGFjZXx8ZS5yanZJZCE9PXIucmp2SWQpe3ZhciBhPXQuZ2V0U3RhdGUoZSk7cmV0dXJuIHUoe30sYSx7cHJldlByb3BzOmV9KX1yZXR1cm4gbnVsbH19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpO1AuZ2V0U3RhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0LmtleXMoZS5zcmMpLmxlbmd0aCxuPSghMT09PWUuY29sbGFwc2VkfHwhMCE9PWUuY29sbGFwc2VkJiZlLmNvbGxhcHNlZD5lLmRlcHRoKSYmKCFlLnNob3VsZENvbGxhcHNlfHwhMT09PWUuc2hvdWxkQ29sbGFwc2Uoe25hbWU6ZS5uYW1lLHNyYzplLnNyYyx0eXBlOigwLHAudG9UeXBlKShlLnNyYyksbmFtZXNwYWNlOmUubmFtZXNwYWNlfSkpJiYwIT09dDtyZXR1cm57ZXhwYW5kZWQ6dy5kZWZhdWx0LmdldChlLnJqdklkLGUubmFtZXNwYWNlLFwiZXhwYW5kZWRcIixuKSxvYmplY3RfdHlwZTpcImFycmF5XCI9PT1lLnR5cGU/XCJhcnJheVwiOlwib2JqZWN0XCIscGFyZW50X3R5cGU6XCJhcnJheVwiPT09ZS50eXBlP1wiYXJyYXlcIjpcIm9iamVjdFwiLHNpemU6dH19O3ZhciBTPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLnRvZ2dsZUNvbGxhcHNlZD1mdW5jdGlvbigpe2Uuc2V0U3RhdGUoe2V4cGFuZGVkOiFlLnN0YXRlLmV4cGFuZGVkfSxmdW5jdGlvbigpe3cuZGVmYXVsdC5zZXQoZS5wcm9wcy5yanZJZCxlLnByb3BzLm5hbWVzcGFjZSxcImV4cGFuZGVkXCIsZS5zdGF0ZS5leHBhbmRlZCl9KX0sdGhpcy5nZXRPYmplY3RDb250ZW50PWZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicHVzaGVkLWNvbnRlbnQgb2JqZWN0LWNvbnRhaW5lclwifSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHUoe2NsYXNzTmFtZTpcIm9iamVjdC1jb250ZW50XCJ9LCgwLGsuZGVmYXVsdCkoZS5wcm9wcy50aGVtZSxcInB1c2hlZC1jb250ZW50XCIpKSxlLnJlbmRlck9iamVjdENvbnRlbnRzKG4scikpKX0sdGhpcy5nZXRFbGxpcHNpcz1mdW5jdGlvbigpe3JldHVybiAwPT09ZS5zdGF0ZS5zaXplP251bGw6Zi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix1KHt9LCgwLGsuZGVmYXVsdCkoZS5wcm9wcy50aGVtZSxcImVsbGlwc2lzXCIpLHtjbGFzc05hbWU6XCJub2RlLWVsbGlwc2lzXCIsb25DbGljazplLnRvZ2dsZUNvbGxhcHNlZH0pLFwiLi4uXCIpfSx0aGlzLmdldE9iamVjdE1ldGFEYXRhPWZ1bmN0aW9uKHQpe3ZhciBuPWUucHJvcHMscj0obi5yanZJZCxuLnRoZW1lLGUuc3RhdGUuc2l6ZSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KG0uZGVmYXVsdCx1KHtzaXplOnJ9LGUucHJvcHMpKX0sdGhpcy5yZW5kZXJPYmplY3RDb250ZW50cz1mdW5jdGlvbih0LG4pe3ZhciByPWUucHJvcHMsYT1yLmRlcHRoLG89ci5wYXJlbnRfdHlwZSxpPXIuaW5kZXhfb2Zmc2V0LHM9ci5ncm91cEFycmF5c0FmdGVyTGVuZ3RoLGw9ci5uYW1lc3BhY2UsYz1lLnN0YXRlLm9iamVjdF90eXBlLGQ9KG4udGhlbWUsW10pLHA9dm9pZCAwLGg9T2JqZWN0LmtleXModHx8e30pO3JldHVybiBlLnByb3BzLnNvcnRLZXlzJiYoaD1oLnNvcnQoKSksaC5mb3JFYWNoKGZ1bmN0aW9uKHIpe2lmKHA9bmV3IE0ocix0W3JdKSxcImFycmF5X2dyb3VwXCI9PT1vJiZpJiYocC5uYW1lPXBhcnNlSW50KHAubmFtZSkraSksdC5oYXNPd25Qcm9wZXJ0eShyKSlpZihcIm9iamVjdFwiPT09cC50eXBlKWQucHVzaChmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChiLkpzb25PYmplY3QsdSh7a2V5OnAubmFtZSxkZXB0aDphKzEsbmFtZTpwLm5hbWUsc3JjOnAudmFsdWUsbmFtZXNwYWNlOmwuY29uY2F0KHAubmFtZSkscGFyZW50X3R5cGU6Y30sbikpKTtlbHNlIGlmKFwiYXJyYXlcIj09PXAudHlwZSl7dmFyIGg9Yi5Kc29uT2JqZWN0O3MmJnAudmFsdWUubGVuZ3RoPnMmJihoPV8uZGVmYXVsdCksZC5wdXNoKGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGgsdSh7a2V5OnAubmFtZSxkZXB0aDphKzEsbmFtZTpwLm5hbWUsc3JjOnAudmFsdWUsbmFtZXNwYWNlOmwuY29uY2F0KHAubmFtZSksdHlwZTpcImFycmF5XCIscGFyZW50X3R5cGU6Y30sbikpKX1lbHNlIGQucHVzaChmLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh5LmRlZmF1bHQsdSh7a2V5OnAubmFtZStcIl9cIitsLHZhcmlhYmxlOnAsc2luZ2xlSW5kZW50OjUsbmFtZXNwYWNlOmwsdHlwZTplLnByb3BzLnR5cGV9LG4pKSl9KSxkfX0sTT1mdW5jdGlvbiBlKHQsbil7byh0aGlzLGUpLHRoaXMubmFtZT10LHRoaXMudmFsdWU9bix0aGlzLnR5cGU9KDAscC50b1R5cGUpKG4pfTsoMCxkLnBvbHlmaWxsKShQKSx0LmRlZmF1bHQ9UH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNzApKCEwKTtuKDQzKShTdHJpbmcsXCJTdHJpbmdcIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LG49dGhpcy5faTtyZXR1cm4gbj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1yKHQsbiksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LGZ1bmN0aW9uKGUsdCl7dmFyIG49TWF0aC5jZWlsLHI9TWF0aC5mbG9vcjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9yOm4pKGUpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIitlKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighcihlKSlyZXR1cm4gZTt2YXIgbixhO2lmKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mKG49ZS50b1N0cmluZykmJiFyKGE9bi5jYWxsKGUpKSlyZXR1cm4gYTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZihuPWUudmFsdWVPZikmJiFyKGE9bi5jYWxsKGUpKSlyZXR1cm4gYTtpZighdCYmXCJmdW5jdGlvblwiPT10eXBlb2Yobj1lLnRvU3RyaW5nKSYmIXIoYT1uLmNhbGwoZSkpKXJldHVybiBhO3Rocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKX19LGZ1bmN0aW9uKGUsdCl7dmFyIG49e30udG9TdHJpbmc7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMikoXCJrZXlzXCIpLGE9bigyMyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByW2VdfHwocltlXT1hKGUpKX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIpLGE9big1KSxvPWFbXCJfX2NvcmUtanNfc2hhcmVkX19cIl18fChhW1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdPXt9KTsoZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG9bZV18fChvW2VdPXZvaWQgMCE9PXQ/dDp7fSl9KShcInZlcnNpb25zXCIsW10pLnB1c2goe3ZlcnNpb246ci52ZXJzaW9uLG1vZGU6bigyMCk/XCJwdXJlXCI6XCJnbG9iYWxcIixjb3B5cmlnaHQ6XCLCqSAyMDE4IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpXCJ9KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9XCJjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2ZcIi5zcGxpdChcIixcIil9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDkpLmYsYT1uKDcpLG89bigzKShcInRvU3RyaW5nVGFnXCIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbil7ZSYmIWEoZT1uP2U6ZS5wcm90b3R5cGUsbykmJnIoZSxvLHtjb25maWd1cmFibGU6ITAsdmFsdWU6dH0pfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KHIoZSkpfX0sZnVuY3Rpb24oZSx0LG4pe24oODApO2Zvcih2YXIgcj1uKDUpLGE9big4KSxvPW4oMTgpLGk9bigzKShcInRvU3RyaW5nVGFnXCIpLHM9XCJDU1NSdWxlTGlzdCxDU1NTdHlsZURlY2xhcmF0aW9uLENTU1ZhbHVlTGlzdCxDbGllbnRSZWN0TGlzdCxET01SZWN0TGlzdCxET01TdHJpbmdMaXN0LERPTVRva2VuTGlzdCxEYXRhVHJhbnNmZXJJdGVtTGlzdCxGaWxlTGlzdCxIVE1MQWxsQ29sbGVjdGlvbixIVE1MQ29sbGVjdGlvbixIVE1MRm9ybUVsZW1lbnQsSFRNTFNlbGVjdEVsZW1lbnQsTWVkaWFMaXN0LE1pbWVUeXBlQXJyYXksTmFtZWROb2RlTWFwLE5vZGVMaXN0LFBhaW50UmVxdWVzdExpc3QsUGx1Z2luLFBsdWdpbkFycmF5LFNWR0xlbmd0aExpc3QsU1ZHTnVtYmVyTGlzdCxTVkdQYXRoU2VnTGlzdCxTVkdQb2ludExpc3QsU1ZHU3RyaW5nTGlzdCxTVkdUcmFuc2Zvcm1MaXN0LFNvdXJjZUJ1ZmZlckxpc3QsU3R5bGVTaGVldExpc3QsVGV4dFRyYWNrQ3VlTGlzdCxUZXh0VHJhY2tMaXN0LFRvdWNoTGlzdFwiLnNwbGl0KFwiLFwiKSx1PTA7dTxzLmxlbmd0aDt1Kyspe3ZhciBsPXNbdV0sYz1yW2xdLGY9YyYmYy5wcm90b3R5cGU7ZiYmIWZbaV0mJmEoZixpLGwpLG9bbF09by5BcnJheX19LGZ1bmN0aW9uKGUsdCxuKXt0LmY9bigzKX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNSksYT1uKDIpLG89bigyMCksaT1uKDM3KSxzPW4oOSkuZjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9YS5TeW1ib2x8fChhLlN5bWJvbD1vP3t9OnIuU3ltYm9sfHx7fSk7XCJfXCI9PWUuY2hhckF0KDApfHxlIGluIHR8fHModCxlLHt2YWx1ZTppLmYoZSl9KX19LGZ1bmN0aW9uKGUsdCl7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHN9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlLHQsbil7cmV0dXJuIE1hdGgubWluKE1hdGgubWF4KGUsdCksbil9ZS5leHBvcnRzPW59LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKCl7dmFyIGU9dGhpcy5jb25zdHJ1Y3Rvci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHModGhpcy5wcm9wcyx0aGlzLnN0YXRlKTtudWxsIT09ZSYmdm9pZCAwIT09ZSYmdGhpcy5zZXRTdGF0ZShlKX1mdW5jdGlvbiBhKGUpe2Z1bmN0aW9uIHQodCl7dmFyIG49dGhpcy5jb25zdHJ1Y3Rvci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMoZSx0KTtyZXR1cm4gbnVsbCE9PW4mJnZvaWQgMCE9PW4/bjpudWxsfXRoaXMuc2V0U3RhdGUodC5iaW5kKHRoaXMpKX1mdW5jdGlvbiBvKGUsdCl7dHJ5e3ZhciBuPXRoaXMucHJvcHMscj10aGlzLnN0YXRlO3RoaXMucHJvcHM9ZSx0aGlzLnN0YXRlPXQsdGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEZsYWc9ITAsdGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdD10aGlzLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKG4scil9ZmluYWxseXt0aGlzLnByb3BzPW4sdGhpcy5zdGF0ZT1yfX1mdW5jdGlvbiBpKGUpe3ZhciB0PWUucHJvdG90eXBlO2lmKCF0fHwhdC5pc1JlYWN0Q29tcG9uZW50KXRocm93IG5ldyBFcnJvcihcIkNhbiBvbmx5IHBvbHlmaWxsIGNsYXNzIGNvbXBvbmVudHNcIik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpcmV0dXJuIGU7dmFyIG49bnVsbCxpPW51bGwscz1udWxsO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29tcG9uZW50V2lsbE1vdW50P249XCJjb21wb25lbnRXaWxsTW91bnRcIjpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJihuPVwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudFwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHM/aT1cImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHNcIjpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiYoaT1cIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29tcG9uZW50V2lsbFVwZGF0ZT9zPVwiY29tcG9uZW50V2lsbFVwZGF0ZVwiOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJihzPVwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGVcIiksbnVsbCE9PW58fG51bGwhPT1pfHxudWxsIT09cyl7dmFyIHU9ZS5kaXNwbGF5TmFtZXx8ZS5uYW1lLGw9XCJmdW5jdGlvblwiPT10eXBlb2YgZS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM/XCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMoKVwiOlwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKVwiO3Rocm93IEVycm9yKFwiVW5zYWZlIGxlZ2FjeSBsaWZlY3ljbGVzIHdpbGwgbm90IGJlIGNhbGxlZCBmb3IgY29tcG9uZW50cyB1c2luZyBuZXcgY29tcG9uZW50IEFQSXMuXFxuXFxuXCIrdStcIiB1c2VzIFwiK2wrXCIgYnV0IGFsc28gY29udGFpbnMgdGhlIGZvbGxvd2luZyBsZWdhY3kgbGlmZWN5Y2xlczpcIisobnVsbCE9PW4/XCJcXG4gIFwiK246XCJcIikrKG51bGwhPT1pP1wiXFxuICBcIitpOlwiXCIpKyhudWxsIT09cz9cIlxcbiAgXCIrczpcIlwiKStcIlxcblxcblRoZSBhYm92ZSBsaWZlY3ljbGVzIHNob3VsZCBiZSByZW1vdmVkLiBMZWFybiBtb3JlIGFib3V0IHRoaXMgd2FybmluZyBoZXJlOlxcbmh0dHBzOi8vZmIubWUvcmVhY3QtYXN5bmMtY29tcG9uZW50LWxpZmVjeWNsZS1ob29rc1wiKX1pZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyYmKHQuY29tcG9uZW50V2lsbE1vdW50PXIsdC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzPWEpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuY29tcG9uZW50RGlkVXBkYXRlKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBwb2x5ZmlsbCBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSgpIGZvciBjb21wb25lbnRzIHRoYXQgZG8gbm90IGRlZmluZSBjb21wb25lbnREaWRVcGRhdGUoKSBvbiB0aGUgcHJvdG90eXBlXCIpO3QuY29tcG9uZW50V2lsbFVwZGF0ZT1vO3ZhciBjPXQuY29tcG9uZW50RGlkVXBkYXRlO3QuY29tcG9uZW50RGlkVXBkYXRlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZz90aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90Om47Yy5jYWxsKHRoaXMsZSx0LHIpfX1yZXR1cm4gZX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxuLmQodCxcInBvbHlmaWxsXCIsZnVuY3Rpb24oKXtyZXR1cm4gaX0pLHIuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZz0hMCxhLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmc9ITAsby5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nPSEwfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGE9big2Myk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJKc29uQm9vbGVhblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGEpLmRlZmF1bHR9fSk7dmFyIG89bigxNTgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbkRhdGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihvKS5kZWZhdWx0fX0pO3ZhciBpPW4oMTU5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25GbG9hdFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGkpLmRlZmF1bHR9fSk7dmFyIHM9bigxNjApO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbkZ1bmN0aW9uXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIocykuZGVmYXVsdH19KTt2YXIgdT1uKDE2NSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJKc29uTmFuXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIodSkuZGVmYXVsdH19KTt2YXIgbD1uKDE2Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJKc29uTnVsbFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGwpLmRlZmF1bHR9fSk7dmFyIGM9bigxNjcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbkludGVnZXJcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihjKS5kZWZhdWx0fX0pO3ZhciBmPW4oMjUpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbk9iamVjdFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGYpLmRlZmF1bHR9fSk7dmFyIGQ9bigxNjgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvblJlZ2V4cFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGQpLmRlZmF1bHR9fSk7dmFyIHA9bigxNjkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvblN0cmluZ1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKHApLmRlZmF1bHR9fSk7dmFyIGI9bigxNzApO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvblVuZGVmaW5lZFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKGIpLmRlZmF1bHR9fSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDIwKSxhPW4oMjEpLG89big0NiksaT1uKDgpLHM9bigxOCksdT1uKDczKSxsPW4oMzQpLGM9big3OSksZj1uKDMpKFwiaXRlcmF0b3JcIiksZD0hKFtdLmtleXMmJlwibmV4dFwiaW5bXS5rZXlzKCkpLHA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuLGIsaCx5LHYpe3Uobix0LGIpO3ZhciBtLGcsXyxqPWZ1bmN0aW9uKGUpe2lmKCFkJiZlIGluIHgpcmV0dXJuIHhbZV07c3dpdGNoKGUpe2Nhc2VcImtleXNcIjpjYXNlXCJ2YWx1ZXNcIjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG4odGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBuKHRoaXMsZSl9fSxPPXQrXCIgSXRlcmF0b3JcIixFPVwidmFsdWVzXCI9PWgsdz0hMSx4PWUucHJvdG90eXBlLEM9eFtmXXx8eFtcIkBAaXRlcmF0b3JcIl18fGgmJnhbaF0saz1DfHxqKGgpLFA9aD9FP2ooXCJlbnRyaWVzXCIpOms6dm9pZCAwLFM9XCJBcnJheVwiPT10P3guZW50cmllc3x8QzpDO2lmKFMmJihfPWMoUy5jYWxsKG5ldyBlKSkpIT09T2JqZWN0LnByb3RvdHlwZSYmXy5uZXh0JiYobChfLE8sITApLHJ8fFwiZnVuY3Rpb25cIj09dHlwZW9mIF9bZl18fGkoXyxmLHApKSxFJiZDJiZcInZhbHVlc1wiIT09Qy5uYW1lJiYodz0hMCxrPWZ1bmN0aW9uKCl7cmV0dXJuIEMuY2FsbCh0aGlzKX0pLHImJiF2fHwhZCYmIXcmJnhbZl18fGkoeCxmLGspLHNbdF09ayxzW09dPXAsaClpZihtPXt2YWx1ZXM6RT9rOmooXCJ2YWx1ZXNcIiksa2V5czp5P2s6aihcImtleXNcIiksZW50cmllczpQfSx2KWZvcihnIGluIG0pZyBpbiB4fHxvKHgsZyxtW2ddKTtlbHNlIGEoYS5QK2EuRiooZHx8dyksdCxtKTtyZXR1cm4gbX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9IW4oMTApJiYhbigxMSkoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KG4oNDUpKFwiZGl2XCIpLFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE3KSxhPW4oNSkuZG9jdW1lbnQsbz1yKGEpJiZyKGEuY3JlYXRlRWxlbWVudCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvP2EuY3JlYXRlRWxlbWVudChlKTp7fX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9big4KX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTYpLGE9big3NCksbz1uKDMzKSxpPW4oMzEpKFwiSUVfUFJPVE9cIikscz1mdW5jdGlvbigpe30sdT1mdW5jdGlvbigpe3ZhciBlLHQ9big0NSkoXCJpZnJhbWVcIikscj1vLmxlbmd0aDtmb3IodC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLG4oNzgpLmFwcGVuZENoaWxkKHQpLHQuc3JjPVwiamF2YXNjcmlwdDpcIixlPXQuY29udGVudFdpbmRvdy5kb2N1bWVudCxlLm9wZW4oKSxlLndyaXRlKFwiPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDxcXC9zY3JpcHQ+XCIpLGUuY2xvc2UoKSx1PWUuRjtyLS07KWRlbGV0ZSB1LnByb3RvdHlwZVtvW3JdXTtyZXR1cm4gdSgpfTtlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgbjtyZXR1cm4gbnVsbCE9PWU/KHMucHJvdG90eXBlPXIoZSksbj1uZXcgcyxzLnByb3RvdHlwZT1udWxsLG5baV09ZSk6bj11KCksdm9pZCAwPT09dD9uOmEobix0KX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDcpLGE9bigxMiksbz1uKDc1KSghMSksaT1uKDMxKShcIklFX1BST1RPXCIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciBuLHM9YShlKSx1PTAsbD1bXTtmb3IobiBpbiBzKW4hPWkmJnIocyxuKSYmbC5wdXNoKG4pO2Zvcig7dC5sZW5ndGg+dTspcihzLG49dFt1KytdKSYmKH5vKGwsbil8fGwucHVzaChuKSk7cmV0dXJuIGx9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMCk7ZS5leHBvcnRzPU9iamVjdChcInpcIikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVyblwiU3RyaW5nXCI9PXIoZSk/ZS5zcGxpdChcIlwiKTpPYmplY3QoZSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big0OCksYT1uKDMzKS5jb25jYXQoXCJsZW5ndGhcIixcInByb3RvdHlwZVwiKTt0LmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKGUpe3JldHVybiByKGUsYSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMCksYT1uKDMpKFwidG9TdHJpbmdUYWdcIiksbz1cIkFyZ3VtZW50c1wiPT1yKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSksaT1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQsbixzO3JldHVybiB2b2lkIDA9PT1lP1wiVW5kZWZpbmVkXCI6bnVsbD09PWU/XCJOdWxsXCI6XCJzdHJpbmdcIj09dHlwZW9mKG49aSh0PU9iamVjdChlKSxhKSk/bjpvP3IodCk6XCJPYmplY3RcIj09KHM9cih0KSkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY2FsbGVlP1wiQXJndW1lbnRzXCI6c319LGZ1bmN0aW9uKGUsdCl7dmFyIG47bj1mdW5jdGlvbigpe3JldHVybiB0aGlzfSgpO3RyeXtuPW58fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKXx8KDAsZXZhbCkoXCJ0aGlzXCIpfWNhdGNoKGUpe1wib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJihuPXdpbmRvdyl9ZS5leHBvcnRzPW59LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZS5tYXRjaChyKX12YXIgcj0vLT9cXGQrKFxcLlxcZCspPyU/L2c7ZS5leHBvcnRzPW59LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcj1uKDQpO3QuZGVmYXVsdD1mdW5jdGlvbihlKXt2YXIgdD0oMCxyLnRvVHlwZSkoZSksbj12b2lkIDA7c3dpdGNoKHQpe2Nhc2VcInVuZGVmaW5lZFwiOm49XCJ1bmRlZmluZWRcIjticmVhaztjYXNlXCJuYW5cIjpuPVwiTmFOXCI7YnJlYWs7Y2FzZVwic3RyaW5nXCI6bj1lO2JyZWFrO2Nhc2VcImRhdGVcIjpjYXNlXCJmdW5jdGlvblwiOmNhc2VcInJlZ2V4cFwiOm49ZS50b1N0cmluZygpO2JyZWFrO2RlZmF1bHQ6dHJ5e249SlNPTi5zdHJpbmdpZnkoZSxudWxsLFwiICBcIil9Y2F0Y2goZSl7bj1cIlwifX1yZXR1cm4gbn19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9big0KSxkPW4oNTQpLHA9KHIoZCksbigxNSkpLGI9bigxKSxoPXIoYikseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe2EodGhpcyx0KTt2YXIgbj1vKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwodGhpcyxlKSk7cmV0dXJuIG4uY29waWVkVGltZXI9bnVsbCxuLmhhbmRsZUNvcHk9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIiksdD1uLnByb3BzLHI9dC5jbGlja0NhbGxiYWNrLGE9dC5zcmMsbz10Lm5hbWVzcGFjZTtlLmlubmVySFRNTD1KU09OLnN0cmluZ2lmeShuLmNsaXBib2FyZFZhbHVlKGEpLG51bGwsXCIgIFwiKSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpLGUuc2VsZWN0KCksZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpLGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZSksbi5jb3BpZWRUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5zZXRTdGF0ZSh7Y29waWVkOiExfSl9LDU1MDApLG4uc2V0U3RhdGUoe2NvcGllZDohMH0sZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiZyKHtzcmM6YSxuYW1lc3BhY2U6byxuYW1lOm9bby5sZW5ndGgtMV19KX0pfSxuLmdldENsaXBweUljb249ZnVuY3Rpb24oKXt2YXIgZT1uLnByb3BzLnRoZW1lO3JldHVybiBuLnN0YXRlLmNvcGllZD9jLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHAuQ2xpcHB5LHMoe2NsYXNzTmFtZTpcImNvcHktaWNvblwifSwoMCxoLmRlZmF1bHQpKGUsXCJjb3B5LWljb25cIikpKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxoLmRlZmF1bHQpKGUsXCJjb3B5LWljb24tY29waWVkXCIpLFwi4pyUXCIpKTpjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChwLkNsaXBweSxzKHtjbGFzc05hbWU6XCJjb3B5LWljb25cIn0sKDAsaC5kZWZhdWx0KShlLFwiY29weS1pY29uXCIpKSl9LG4uY2xpcGJvYXJkVmFsdWU9ZnVuY3Rpb24oZSl7c3dpdGNoKCgwLGYudG9UeXBlKShlKSl7Y2FzZVwiZnVuY3Rpb25cIjpjYXNlXCJyZWdleHBcIjpyZXR1cm4gZS50b1N0cmluZygpO2RlZmF1bHQ6cmV0dXJuIGV9fSxuLnN0YXRlPXtjb3BpZWQ6ITF9LG59cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJjb21wb25lbnRXaWxsVW5tb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jb3BpZWRUaW1lciYmKGNsZWFyVGltZW91dCh0aGlzLmNvcGllZFRpbWVyKSx0aGlzLmNvcGllZFRpbWVyPW51bGwpfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PShlLnNyYyxlLnRoZW1lKSxuPWUuaGlkZGVuLHI9KDAsaC5kZWZhdWx0KSh0LFwiY29weS10by1jbGlwYm9hcmRcIikuc3R5bGUsYT1cImlubGluZVwiO3JldHVybiBuJiYoYT1cIm5vbmVcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcImNvcHktdG8tY2xpcGJvYXJkLWNvbnRhaW5lclwifSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6cyh7fSxyLHtkaXNwbGF5OmF9KSxvbkNsaWNrOnRoaXMuaGFuZGxlQ29weX0sdGhpcy5nZXRDbGlwcHlJY29uKCkpKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD15fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxuPUFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKyluW3RdPWVbdF07cmV0dXJuIG59cmV0dXJuIEFycmF5LmZyb20oZSl9ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gaShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIHMoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgdT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxsPW4oMCksYz1yKGwpLGY9bigxNCksZD1yKGYpLHA9big1NSksYj1yKHApLGg9big0KSx5PW4oMTUpLHY9bigxKSxtPXIodiksZz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLHM7byh0aGlzLHQpO2Zvcih2YXIgbD1hcmd1bWVudHMubGVuZ3RoLGY9QXJyYXkobCkscD0wO3A8bDtwKyspZltwXT1hcmd1bWVudHNbcF07cmV0dXJuIG49cj1pKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQoZikpKSxyLmdldE9iamVjdFNpemU9ZnVuY3Rpb24oKXt2YXIgZT1yLnByb3BzLHQ9ZS5zaXplLG49ZS50aGVtZTtpZihlLmRpc3BsYXlPYmplY3RTaXplKXJldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix1KHtjbGFzc05hbWU6XCJvYmplY3Qtc2l6ZVwifSwoMCxtLmRlZmF1bHQpKG4sXCJvYmplY3Qtc2l6ZVwiKSksdCxcIiBpdGVtXCIsMT09PXQ/XCJcIjpcInNcIil9LHIuZ2V0QWRkQXR0cmlidXRlPWZ1bmN0aW9uKCl7dmFyIGU9ci5wcm9wcyx0PWUudGhlbWUsbj1lLm5hbWVzcGFjZSxvPWUubmFtZSxpPWUuc3JjLHM9ZS5yanZJZCxsPWUuZGVwdGg7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJjbGljay10by1hZGRcIixzdHlsZTp7dmVydGljYWxBbGlnbjpcInRvcFwifX0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoeS5BZGRDaXJjbGUsdSh7Y2xhc3NOYW1lOlwiY2xpY2stdG8tYWRkLWljb25cIn0sKDAsbS5kZWZhdWx0KSh0LFwiYWRkVmFySWNvblwiKSx7b25DbGljazpmdW5jdGlvbigpe3ZhciBlPXtuYW1lOmw+MD9vOm51bGwsbmFtZXNwYWNlOm4uc3BsaWNlKDAsbi5sZW5ndGgtMSksZXhpc3RpbmdfdmFsdWU6aSx2YXJpYWJsZV9yZW1vdmVkOiExLGtleV9uYW1lOm51bGx9O1wib2JqZWN0XCI9PT0oMCxoLnRvVHlwZSkoaSk/ZC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiQUREX1ZBUklBQkxFX0tFWV9SRVFVRVNUXCIscmp2SWQ6cyxkYXRhOmV9KTpkLmRlZmF1bHQuZGlzcGF0Y2goe25hbWU6XCJWQVJJQUJMRV9BRERFRFwiLHJqdklkOnMsZGF0YTp1KHt9LGUse25ld192YWx1ZTpbXS5jb25jYXQoYShpKSxbbnVsbF0pfSl9KX19KSkpfSxyLmdldFJlbW92ZU9iamVjdD1mdW5jdGlvbigpe3ZhciBlPXIucHJvcHMsdD1lLnRoZW1lLG49KGUuaG92ZXIsZS5uYW1lc3BhY2UpLGE9ZS5uYW1lLG89ZS5zcmMsaT1lLnJqdklkO2lmKDEhPT1uLmxlbmd0aClyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcImNsaWNrLXRvLXJlbW92ZVwifSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh5LlJlbW92ZUNpcmNsZSx1KHtjbGFzc05hbWU6XCJjbGljay10by1yZW1vdmUtaWNvblwifSwoMCxtLmRlZmF1bHQpKHQsXCJyZW1vdmVWYXJJY29uXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKCl7ZC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiVkFSSUFCTEVfUkVNT1ZFRFwiLHJqdklkOmksZGF0YTp7bmFtZTphLG5hbWVzcGFjZTpuLnNwbGljZSgwLG4ubGVuZ3RoLTEpLGV4aXN0aW5nX3ZhbHVlOm8sdmFyaWFibGVfcmVtb3ZlZDohMH19KX19KSkpfSxyLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBlPXIucHJvcHMsdD1lLnRoZW1lLG49ZS5vbkRlbGV0ZSxhPWUub25BZGQsbz1lLmVuYWJsZUNsaXBib2FyZCxpPWUuc3JjLHM9ZS5uYW1lc3BhY2U7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7fSwoMCxtLmRlZmF1bHQpKHQsXCJvYmplY3QtbWV0YS1kYXRhXCIpLHtjbGFzc05hbWU6XCJvYmplY3QtbWV0YS1kYXRhXCIsb25DbGljazpmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpfX0pLHIuZ2V0T2JqZWN0U2l6ZSgpLG8/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoYi5kZWZhdWx0LHUoe2NsaWNrQ2FsbGJhY2s6b30se3NyYzppLHRoZW1lOnQsbmFtZXNwYWNlOnN9KSk6bnVsbCwhMSE9PWE/ci5nZXRBZGRBdHRyaWJ1dGUoKTpudWxsLCExIT09bj9yLmdldFJlbW92ZU9iamVjdCgpOm51bGwpfSxzPW4saShyLHMpfXJldHVybiBzKHQsZSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1nfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxuPUFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKyluW3RdPWVbdF07cmV0dXJuIG59cmV0dXJuIEFycmF5LmZyb20oZSl9ZnVuY3Rpb24gbyhlLHQpe3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKXQuaW5kZXhPZihyKT49MHx8T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJihuW3JdPWVbcl0pO3JldHVybiBufWZ1bmN0aW9uIGkoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIHMoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiB1KGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGw9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sYz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGY9bigwKSxkPXIoZikscD1uKDEpLGI9cihwKSxoPW4oNTYpLHk9cihoKSx2PW4oNTgpLG09cih2KSxnPW4oMjUpLF89cihnKSxqPW4oNTkpLE89ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtpKHRoaXMsdCk7dmFyIG49cyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO3JldHVybiBuLnRvZ2dsZUNvbGxhcHNlZD1mdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gbi5zdGF0ZS5leHBhbmRlZCl0LnB1c2gobi5zdGF0ZS5leHBhbmRlZFtyXSk7dFtlXT0hdFtlXSxuLnNldFN0YXRlKHtleHBhbmRlZDp0fSl9LG4uc3RhdGU9e2V4cGFuZGVkOltdfSxufXJldHVybiB1KHQsZSksYyh0LFt7a2V5OlwiZ2V0RXhwYW5kZWRJY29uXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5wcm9wcyxuPXQudGhlbWUscj10Lmljb25TdHlsZTtyZXR1cm4gdGhpcy5zdGF0ZS5leHBhbmRlZFtlXT9kLmRlZmF1bHQuY3JlYXRlRWxlbWVudChqLkV4cGFuZGVkSWNvbix7dGhlbWU6bixpY29uU3R5bGU6cn0pOmQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGouQ29sbGFwc2VkSWNvbix7dGhlbWU6bixpY29uU3R5bGU6cn0pfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMucHJvcHMsbj10LnNyYyxyPXQuZ3JvdXBBcnJheXNBZnRlckxlbmd0aCxpPSh0LmRlcHRoLHQubmFtZSkscz10LnRoZW1lLHU9dC5qc3ZSb290LGM9dC5uYW1lc3BhY2UsZj0odC5wYXJlbnRfdHlwZSxvKHQsW1wic3JjXCIsXCJncm91cEFycmF5c0FmdGVyTGVuZ3RoXCIsXCJkZXB0aFwiLFwibmFtZVwiLFwidGhlbWVcIixcImpzdlJvb3RcIixcIm5hbWVzcGFjZVwiLFwicGFyZW50X3R5cGVcIl0pKSxwPTAsaD01KnRoaXMucHJvcHMuaW5kZW50V2lkdGg7dXx8KHA9NSp0aGlzLnByb3BzLmluZGVudFdpZHRoKTt2YXIgdj1yLGc9TWF0aC5jZWlsKG4ubGVuZ3RoL3YpO3JldHVybiBkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLGwoe2NsYXNzTmFtZTpcIm9iamVjdC1rZXktdmFsXCJ9LCgwLGIuZGVmYXVsdCkocyx1P1wianN2LXJvb3RcIjpcIm9iamVjdEtleVZhbFwiLHtwYWRkaW5nTGVmdDpwfSkpLGQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KG0uZGVmYXVsdCx0aGlzLnByb3BzKSxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHkuZGVmYXVsdCxsKHtzaXplOm4ubGVuZ3RofSx0aGlzLnByb3BzKSkpLFtdLmNvbmNhdChhKEFycmF5KGcpKSkubWFwKGZ1bmN0aW9uKHQscil7cmV0dXJuIGQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsbCh7a2V5OnIsY2xhc3NOYW1lOlwib2JqZWN0LWtleS12YWwgYXJyYXktZ3JvdXBcIn0sKDAsYi5kZWZhdWx0KShzLFwib2JqZWN0S2V5VmFsXCIse21hcmdpbkxlZnQ6NixwYWRkaW5nTGVmdDpofSkpLGQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGIuZGVmYXVsdCkocyxcImJyYWNlLXJvd1wiKSxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLGwoe2NsYXNzTmFtZTpcImljb24tY29udGFpbmVyXCJ9LCgwLGIuZGVmYXVsdCkocyxcImljb24tY29udGFpbmVyXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKHQpe2UudG9nZ2xlQ29sbGFwc2VkKHIpfX0pLGUuZ2V0RXhwYW5kZWRJY29uKHIpKSxlLnN0YXRlLmV4cGFuZGVkW3JdP2QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF8uZGVmYXVsdCxsKHtrZXk6aStyLGRlcHRoOjAsbmFtZTohMSxjb2xsYXBzZWQ6ITEsZ3JvdXBBcnJheXNBZnRlckxlbmd0aDp2LGluZGV4X29mZnNldDpyKnYsc3JjOm4uc2xpY2Uocip2LHIqdit2KSxuYW1lc3BhY2U6Yyx0eXBlOlwiYXJyYXlcIixwYXJlbnRfdHlwZTpcImFycmF5X2dyb3VwXCIsdGhlbWU6c30sZikpOmQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLGwoe30sKDAsYi5kZWZhdWx0KShzLFwiYnJhY2VcIikse29uQ2xpY2s6ZnVuY3Rpb24odCl7ZS50b2dnbGVDb2xsYXBzZWQocil9LGNsYXNzTmFtZTpcImFycmF5LWdyb3VwLWJyYWNlXCJ9KSxcIltcIixkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLGwoe30sKDAsYi5kZWZhdWx0KShzLFwiYXJyYXktZ3JvdXAtbWV0YS1kYXRhXCIpLHtjbGFzc05hbWU6XCJhcnJheS1ncm91cC1tZXRhLWRhdGFcIn0pLGQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLGwoe2NsYXNzTmFtZTpcIm9iamVjdC1zaXplXCJ9LCgwLGIuZGVmYXVsdCkocyxcIm9iamVjdC1zaXplXCIpKSxyKnYsXCIgLSBcIixyKnYrdj5uLmxlbmd0aD9uLmxlbmd0aDpyKnYrdikpLFwiXVwiKSkpfSkpfX1dKSx0fShkLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PU99LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUpe3ZhciB0PWUucGFyZW50X3R5cGUsbj1lLm5hbWVzcGFjZSxyPWUudGhlbWUsYT1lLmpzdlJvb3QsaT1lLm5hbWUsdT1lLm5hbWU/ZS5uYW1lOlwiXCI7cmV0dXJuIWF8fCExIT09aSYmbnVsbCE9PWk/XCJhcnJheVwiPT10P3MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG8oe30sKDAsbC5kZWZhdWx0KShyLFwiYXJyYXkta2V5XCIpLHtrZXk6bn0pLHMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJhcnJheS1rZXlcIn0sdSkscy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAsbC5kZWZhdWx0KShyLFwiY29sb25cIiksXCI6XCIpKTpzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixvKHt9LCgwLGwuZGVmYXVsdCkocixcIm9iamVjdC1uYW1lXCIpLHtrZXk6bn0pLHMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJvYmplY3Qta2V5XCJ9LHMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp7dmVydGljYWxBbGlnbjpcInRvcFwifX0sJ1wiJykscy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCx1KSxzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LCdcIicpKSxzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxsLmRlZmF1bHQpKHIsXCJjb2xvblwiKSxcIjpcIikpOnMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBvPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9O3QuZGVmYXVsdD1hO3ZhciBpPW4oMCkscz1yKGkpLHU9bigxKSxsPXIodSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUpe3ZhciB0PWUudGhlbWU7c3dpdGNoKGUuaWNvblN0eWxlKXtjYXNlXCJ0cmlhbmdsZVwiOnJldHVybiB1LmRlZmF1bHQuY3JlYXRlRWxlbWVudChmLkFycm93RG93bixpKHt9LCgwLGMuZGVmYXVsdCkodCxcImV4cGFuZGVkLWljb25cIikse2NsYXNzTmFtZTpcImV4cGFuZGVkLWljb25cIn0pKTtjYXNlXCJzcXVhcmVcIjpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5TcXVhcmVNaW51cyxpKHt9LCgwLGMuZGVmYXVsdCkodCxcImV4cGFuZGVkLWljb25cIikse2NsYXNzTmFtZTpcImV4cGFuZGVkLWljb25cIn0pKTtkZWZhdWx0OnJldHVybiB1LmRlZmF1bHQuY3JlYXRlRWxlbWVudChmLkNpcmNsZU1pbnVzLGkoe30sKDAsYy5kZWZhdWx0KSh0LFwiZXhwYW5kZWQtaWNvblwiKSx7Y2xhc3NOYW1lOlwiZXhwYW5kZWQtaWNvblwifSkpfX1mdW5jdGlvbiBvKGUpe3ZhciB0PWUudGhlbWU7c3dpdGNoKGUuaWNvblN0eWxlKXtjYXNlXCJ0cmlhbmdsZVwiOnJldHVybiB1LmRlZmF1bHQuY3JlYXRlRWxlbWVudChmLkFycm93UmlnaHQsaSh7fSwoMCxjLmRlZmF1bHQpKHQsXCJjb2xsYXBzZWQtaWNvblwiKSx7Y2xhc3NOYW1lOlwiY29sbGFwc2VkLWljb25cIn0pKTtjYXNlXCJzcXVhcmVcIjpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5TcXVhcmVQbHVzLGkoe30sKDAsYy5kZWZhdWx0KSh0LFwiY29sbGFwc2VkLWljb25cIikse2NsYXNzTmFtZTpcImNvbGxhcHNlZC1pY29uXCJ9KSk7ZGVmYXVsdDpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5DaXJjbGVQbHVzLGkoe30sKDAsYy5kZWZhdWx0KSh0LFwiY29sbGFwc2VkLWljb25cIikse2NsYXNzTmFtZTpcImNvbGxhcHNlZC1pY29uXCJ9KSl9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBpPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9O3QuRXhwYW5kZWRJY29uPWEsdC5Db2xsYXBzZWRJY29uPW87dmFyIHM9bigwKSx1PXIocyksbD1uKDEpLGM9cihsKSxmPW4oMTUpfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oNjEpfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNDEpLGQ9big2MikscD1yKGQpLGI9bigxNzcpLGg9cihiKSx5PW4oMTc5KSx2PXIoeSksbT1uKDQpLGc9bigxMyksXz1yKGcpLGo9bigxKSxPPXIoaik7bigxODApO3ZhciBFPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7YSh0aGlzLHQpO3ZhciBuPW8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbCh0aGlzLGUpKTtyZXR1cm4gbi5yanZJZD1EYXRlLm5vdygpLnRvU3RyaW5nKCksbi5nZXRMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtyZXR1cm57cmVzZXQ6bi5yZXNldFN0YXRlLFwidmFyaWFibGUtdXBkYXRlXCI6bi51cGRhdGVTcmMsXCJhZGQta2V5LXJlcXVlc3RcIjpuLmFkZEtleVJlcXVlc3R9fSxuLnVwZGF0ZVNyYz1mdW5jdGlvbigpe3ZhciBlPV8uZGVmYXVsdC5nZXQobi5yanZJZCxcImFjdGlvblwiLFwidmFyaWFibGUtdXBkYXRlXCIpLHQ9ZS5uYW1lLHI9ZS5uYW1lc3BhY2UsYT1lLm5ld192YWx1ZSxvPWUuZXhpc3RpbmdfdmFsdWUsaT0oZS52YXJpYWJsZV9yZW1vdmVkLGUudXBkYXRlZF9zcmMpLHM9ZS50eXBlLHU9bi5wcm9wcyxsPXUub25FZGl0LGM9dS5vbkRlbGV0ZSxmPXUub25BZGQsZD1uLnN0YXRlLnNyYyxwPXZvaWQgMCxiPXtleGlzdGluZ19zcmM6ZCxuZXdfdmFsdWU6YSx1cGRhdGVkX3NyYzppLG5hbWU6dCxuYW1lc3BhY2U6cixleGlzdGluZ192YWx1ZTpvfTtzd2l0Y2gocyl7Y2FzZVwidmFyaWFibGUtYWRkZWRcIjpwPWYoYik7YnJlYWs7Y2FzZVwidmFyaWFibGUtZWRpdGVkXCI6cD1sKGIpO2JyZWFrO2Nhc2VcInZhcmlhYmxlLXJlbW92ZWRcIjpwPWMoYil9ITEhPT1wPyhfLmRlZmF1bHQuc2V0KG4ucmp2SWQsXCJnbG9iYWxcIixcInNyY1wiLGkpLG4uc2V0U3RhdGUoe3NyYzppfSkpOm4uc2V0U3RhdGUoe3ZhbGlkYXRpb25GYWlsdXJlOiEwfSl9LG4uYWRkS2V5UmVxdWVzdD1mdW5jdGlvbigpe24uc2V0U3RhdGUoe2FkZEtleVJlcXVlc3Q6ITB9KX0sbi5yZXNldFN0YXRlPWZ1bmN0aW9uKCl7bi5zZXRTdGF0ZSh7dmFsaWRhdGlvbkZhaWx1cmU6ITEsYWRkS2V5UmVxdWVzdDohMX0pfSxuLnN0YXRlPXthZGRLZXlSZXF1ZXN0OiExLGVkaXRLZXlSZXF1ZXN0OiExLHZhbGlkYXRpb25GYWlsdXJlOiExLHNyYzp0LmRlZmF1bHRQcm9wcy5zcmMsbmFtZTp0LmRlZmF1bHRQcm9wcy5uYW1lLHRoZW1lOnQuZGVmYXVsdFByb3BzLnRoZW1lLHZhbGlkYXRpb25NZXNzYWdlOnQuZGVmYXVsdFByb3BzLnZhbGlkYXRpb25NZXNzYWdlLHByZXZTcmM6dC5kZWZhdWx0UHJvcHMuc3JjLHByZXZOYW1lOnQuZGVmYXVsdFByb3BzLm5hbWUscHJldlRoZW1lOnQuZGVmYXVsdFByb3BzLnRoZW1lfSxufXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwiY29tcG9uZW50RGlkTW91bnRcIix2YWx1ZTpmdW5jdGlvbigpe18uZGVmYXVsdC5zZXQodGhpcy5yanZJZCxcImdsb2JhbFwiLFwic3JjXCIsdGhpcy5zdGF0ZS5zcmMpO3ZhciBlPXRoaXMuZ2V0TGlzdGVuZXJzKCk7Zm9yKHZhciB0IGluIGUpXy5kZWZhdWx0Lm9uKHQrXCItXCIrdGhpcy5yanZJZCxlW3RdKTt0aGlzLnNldFN0YXRlKHthZGRLZXlSZXF1ZXN0OiExLGVkaXRLZXlSZXF1ZXN0OiExfSl9fSx7a2V5OlwiY29tcG9uZW50RGlkVXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXshMSE9PXQuYWRkS2V5UmVxdWVzdCYmdGhpcy5zZXRTdGF0ZSh7YWRkS2V5UmVxdWVzdDohMX0pLCExIT09dC5lZGl0S2V5UmVxdWVzdCYmdGhpcy5zZXRTdGF0ZSh7ZWRpdEtleVJlcXVlc3Q6ITF9KSxlLnNyYyE9PXRoaXMuc3RhdGUuc3JjJiZfLmRlZmF1bHQuc2V0KHRoaXMucmp2SWQsXCJnbG9iYWxcIixcInNyY1wiLHRoaXMuc3RhdGUuc3JjKX19LHtrZXk6XCJjb21wb25lbnRXaWxsVW5tb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5nZXRMaXN0ZW5lcnMoKTtmb3IodmFyIHQgaW4gZSlfLmRlZmF1bHQucmVtb3ZlTGlzdGVuZXIodCtcIi1cIit0aGlzLnJqdklkLGVbdF0pfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5zdGF0ZSx0PWUudmFsaWRhdGlvbkZhaWx1cmUsbj1lLnZhbGlkYXRpb25NZXNzYWdlLHI9ZS5hZGRLZXlSZXF1ZXN0LGE9ZS50aGVtZSxvPWUuc3JjLGk9ZS5uYW1lLHU9dGhpcy5wcm9wcyxsPXUuc3R5bGUsZj11LmRlZmF1bHRWYWx1ZTtyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicmVhY3QtanNvbi12aWV3XCIsc3R5bGU6cyh7fSwoMCxPLmRlZmF1bHQpKGEsXCJhcHAtY29udGFpbmVyXCIpLnN0eWxlLGwpfSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh2LmRlZmF1bHQse21lc3NhZ2U6bixhY3RpdmU6dCx0aGVtZTphLHJqdklkOnRoaXMucmp2SWR9KSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChwLmRlZmF1bHQscyh7fSx0aGlzLnByb3BzLHtzcmM6byxuYW1lOmksdGhlbWU6YSx0eXBlOigwLG0udG9UeXBlKShvKSxyanZJZDp0aGlzLnJqdklkfSkpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGguZGVmYXVsdCx7YWN0aXZlOnIsdGhlbWU6YSxyanZJZDp0aGlzLnJqdklkLGRlZmF1bHRWYWx1ZTpmfSkpfX1dLFt7a2V5OlwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzXCIsdmFsdWU6ZnVuY3Rpb24oZSxuKXtpZihlLnNyYyE9PW4ucHJldlNyY3x8ZS5uYW1lIT09bi5wcmV2TmFtZXx8ZS50aGVtZSE9PW4ucHJldlRoZW1lKXt2YXIgcj17c3JjOmUuc3JjLG5hbWU6ZS5uYW1lLHRoZW1lOmUudGhlbWUsdmFsaWRhdGlvbk1lc3NhZ2U6ZS52YWxpZGF0aW9uTWVzc2FnZSxwcmV2U3JjOmUuc3JjLHByZXZOYW1lOmUubmFtZSxwcmV2VGhlbWU6ZS50aGVtZX07cmV0dXJuIHQudmFsaWRhdGVTdGF0ZShyKX1yZXR1cm4gbnVsbH19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO0UuZGVmYXVsdFByb3BzPXtzcmM6e30sbmFtZTpcInJvb3RcIix0aGVtZTpcInJqdi1kZWZhdWx0XCIsY29sbGFwc2VkOiExLGNvbGxhcHNlU3RyaW5nc0FmdGVyTGVuZ3RoOiExLHNob3VsZENvbGxhcHNlOiExLHNvcnRLZXlzOiExLGdyb3VwQXJyYXlzQWZ0ZXJMZW5ndGg6MTAwLGluZGVudFdpZHRoOjQsZW5hYmxlQ2xpcGJvYXJkOiEwLGRpc3BsYXlPYmplY3RTaXplOiEwLGRpc3BsYXlEYXRhVHlwZXM6ITAsb25FZGl0OiExLG9uRGVsZXRlOiExLG9uQWRkOiExLG9uU2VsZWN0OiExLGljb25TdHlsZTpcInRyaWFuZ2xlXCIsc3R5bGU6e30sdmFsaWRhdGlvbk1lc3NhZ2U6XCJWYWxpZGF0aW9uIEVycm9yXCIsZGVmYXVsdFZhbHVlOm51bGx9LEUudmFsaWRhdGVTdGF0ZT1mdW5jdGlvbihlKXt2YXIgdD17fTtyZXR1cm5cIm9iamVjdFwiIT09KDAsbS50b1R5cGUpKGUudGhlbWUpfHwoMCxtLmlzVGhlbWUpKGUudGhlbWUpfHwoY29uc29sZS5lcnJvcihcInJlYWN0LWpzb24tdmlldyBlcnJvcjpcIixcInRoZW1lIHByb3AgbXVzdCBiZSBhIHRoZW1lIG5hbWUgb3IgdmFsaWQgYmFzZS0xNiB0aGVtZSBvYmplY3QuXCIsJ2RlZmF1bHRpbmcgdG8gXCJyanYtZGVmYXVsdFwiIHRoZW1lJyksdC50aGVtZT1cInJqdi1kZWZhdWx0XCIpLFwib2JqZWN0XCIhPT0oMCxtLnRvVHlwZSkoZS5zcmMpJiZcImFycmF5XCIhPT0oMCxtLnRvVHlwZSkoZS5zcmMpJiYoY29uc29sZS5lcnJvcihcInJlYWN0LWpzb24tdmlldyBlcnJvcjpcIixcInNyYyBwcm9wZXJ0eSBtdXN0IGJlIGEgdmFsaWQganNvbiBvYmplY3RcIiksdC5uYW1lPVwiRVJST1JcIix0LnNyYz17bWVzc2FnZTpcInNyYyBwcm9wZXJ0eSBtdXN0IGJlIGEgdmFsaWQganNvbiBvYmplY3RcIn0pLHMoe30sZSx0KX0sKDAsZi5wb2x5ZmlsbCkoRSksdC5kZWZhdWx0PUV9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9bigwKSxsPXIodSksYz1uKDI1KSxmPXIoYyksZD1uKDU3KSxwPXIoZCksYj1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLGk7YSh0aGlzLHQpO2Zvcih2YXIgdT1hcmd1bWVudHMubGVuZ3RoLGM9QXJyYXkodSksZD0wO2Q8dTtkKyspY1tkXT1hcmd1bWVudHNbZF07cmV0dXJuIG49cj1vKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQoYykpKSxyLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBlPXIsdD1lLnByb3BzLG49W3QubmFtZV0sYT1mLmRlZmF1bHQ7cmV0dXJuIHQuZ3JvdXBBcnJheXNBZnRlckxlbmd0aCYmdC5zcmMubGVuZ3RoPnQuZ3JvdXBBcnJheXNBZnRlckxlbmd0aCYmKGE9cC5kZWZhdWx0KSxsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJwcmV0dHktanNvbi1jb250YWluZXIgb2JqZWN0LWNvbnRhaW5lclwifSxsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJvYmplY3QtY29udGVudFwifSxsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChhLHMoe25hbWVzcGFjZTpuLGRlcHRoOjAsanN2Um9vdDohMH0sdCkpKSl9LGk9bixvKHIsaSl9cmV0dXJuIGkodCxlKSx0fShsLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9big2KSxkPXIoZikscD1uKDEpLGI9cihwKSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcztyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCxiLmRlZmF1bHQpKGUudGhlbWUsXCJib29sZWFuXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJib29sXCJ9LGUpKSxlLnZhbHVlP1widHJ1ZVwiOlwiZmFsc2VcIil9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9aH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQucmp2X2RlZmF1bHQ9e3NjaGVtZTpcInJqdi1kZWZhdWx0XCIsYXV0aG9yOlwibWFjIGdhaW5vclwiLGJhc2UwMDpcInJnYmEoMCwgMCwgMCwgMClcIixiYXNlMDE6XCJyZ2IoMjQ1LCAyNDUsIDI0NSlcIixiYXNlMDI6XCJyZ2IoMjM1LCAyMzUsIDIzNSlcIixiYXNlMDM6XCIjOTNhMWExXCIsYmFzZTA0OlwicmdiYSgwLCAwLCAwLCAwLjMpXCIsYmFzZTA1OlwiIzU4NmU3NVwiLGJhc2UwNjpcIiMwNzM2NDJcIixiYXNlMDc6XCIjMDAyYjM2XCIsYmFzZTA4OlwiI2QzMzY4MlwiLGJhc2UwOTpcIiNjYjRiMTZcIixiYXNlMEE6XCIjZGMzMjJmXCIsYmFzZTBCOlwiIzg1OTkwMFwiLGJhc2UwQzpcIiM2YzcxYzRcIixiYXNlMEQ6XCIjNTg2ZTc1XCIsYmFzZTBFOlwiIzJhYTE5OFwiLGJhc2UwRjpcIiMyNjhiZDJcIn0sdC5yanZfZ3JleT17c2NoZW1lOlwicmp2LWdyZXlcIixhdXRob3I6XCJtYWMgZ2Fpbm9yXCIsYmFzZTAwOlwicmdiYSgxLCAxLCAxLCAwKVwiLGJhc2UwMTpcInJnYmEoMSwgMSwgMSwgMC4xKVwiLGJhc2UwMjpcInJnYmEoMCwgMCwgMCwgMC4yKVwiLGJhc2UwMzpcInJnYmEoMSwgMSwgMSwgMC4zKVwiLGJhc2UwNDpcInJnYmEoMCwgMCwgMCwgMC40KVwiLGJhc2UwNTpcInJnYmEoMSwgMSwgMSwgMC41KVwiLGJhc2UwNjpcInJnYmEoMSwgMSwgMSwgMC42KVwiLGJhc2UwNzpcInJnYmEoMSwgMSwgMSwgMC43KVwiLGJhc2UwODpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwOTpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwQTpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwQjpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwQzpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwRDpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwRTpcInJnYmEoMSwgMSwgMSwgMC44KVwiLGJhc2UwRjpcInJnYmEoMSwgMSwgMSwgMC44KVwifX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD17d2hpdGU6XCIjZmZmXCIsYmxhY2s6XCIjMDAwXCIsdHJhbnNwYXJlbnQ6XCJyZ2JhKDEsIDEsIDEsIDApXCIsZ2xvYmFsRm9udEZhbWlseTpcIm1vbm9zcGFjZVwiLGdsb2JhbEN1cnNvcjpcImRlZmF1bHRcIixpbmRlbnRCbG9ja1dpZHRoOlwiNXB4XCIsYnJhY2VGb250V2VpZ2h0OlwiYm9sZFwiLGJyYWNlQ3Vyc29yOlwicG9pbnRlclwiLGVsbGlwc2lzRm9udFNpemU6XCIxOHB4XCIsZWxsaXBzaXNMaW5lSGVpZ2h0OlwiMTBweFwiLGVsbGlwc2lzQ3Vyc29yOlwicG9pbnRlclwiLGtleU1hcmdpbjpcIjBweCA1cHhcIixrZXlMZXR0ZXJTcGFjaW5nOlwiMC41cHhcIixrZXlGb250U3R5bGU6XCJub25lXCIsa2V5Qm9yZGVyUmFkaXVzOlwiM3B4XCIsa2V5Q29sb25XZWlnaHQ6XCJib2xkXCIsa2V5VmVydGljYWxBbGlnbjpcInRvcFwiLGtleU9wYWNpdHk6XCIwLjg1XCIsa2V5T3BhY2l0eUhvdmVyOlwiMVwiLGtleVZhbFBhZGRpbmdUb3A6XCIzcHhcIixrZXlWYWxQYWRkaW5nQm90dG9tOlwiM3B4XCIsa2V5VmFsUGFkZGluZ1JpZ2h0OlwiNXB4XCIsa2V5VmFsQm9yZGVyTGVmdDpcIjFweCBzb2xpZFwiLGtleVZhbEJvcmRlckhvdmVyOlwiMnB4IHNvbGlkXCIsa2V5VmFsUGFkZGluZ0hvdmVyOlwiM3B4IDVweCAzcHggNHB4XCIscHVzaGVkQ29udGVudE1hcmdpbkxlZnQ6XCI2cHhcIix2YXJpYWJsZVZhbHVlUGFkZGluZ1JpZ2h0OlwiNnB4XCIsbnVsbEZvbnRTaXplOlwiMTFweFwiLG51bGxGb250V2VpZ2h0OlwiYm9sZFwiLG51bGxQYWRkaW5nOlwiMXB4IDJweFwiLG51bGxCb3JkZXJSYWRpdXM6XCIzcHhcIixuYW5Gb250U2l6ZTpcIjExcHhcIixuYW5Gb250V2VpZ2h0OlwiYm9sZFwiLG5hblBhZGRpbmc6XCIxcHggMnB4XCIsbmFuQm9yZGVyUmFkaXVzOlwiM3B4XCIsdW5kZWZpbmVkRm9udFNpemU6XCIxMXB4XCIsdW5kZWZpbmVkRm9udFdlaWdodDpcImJvbGRcIix1bmRlZmluZWRQYWRkaW5nOlwiMXB4IDJweFwiLHVuZGVmaW5lZEJvcmRlclJhZGl1czpcIjNweFwiLGRhdGFUeXBlRm9udFNpemU6XCIxMXB4XCIsZGF0YVR5cGVNYXJnaW5SaWdodDpcIjRweFwiLGRhdGF0eXBlT3BhY2l0eTpcIjAuOFwiLG9iamVjdFNpemVCb3JkZXJSYWRpdXM6XCIzcHhcIixvYmplY3RTaXplRm9udFN0eWxlOlwiaXRhbGljXCIsb2JqZWN0U2l6ZU1hcmdpbjpcIjBweCA2cHggMHB4IDBweFwiLGNsaXBib2FyZEN1cnNvcjpcInBvaW50ZXJcIixjbGlwYm9hcmRDaGVja01hcmdpbkxlZnQ6XCItMTJweFwiLG1ldGFEYXRhUGFkZGluZzpcIjBweCAwcHggMHB4IDEwcHhcIixhcnJheUdyb3VwTWV0YVBhZGRpbmc6XCIwcHggMHB4IDBweCA0cHhcIixpY29uQ29udGFpbmVyV2lkdGg6XCIxN3B4XCIsdG9vbHRpcFBhZGRpbmc6XCI0cHhcIixlZGl0SW5wdXRIZWlnaHQ6XCIyNXB4XCIsZWRpdElucHV0TWluV2lkdGg6XCIxMzBweFwiLGVkaXRJbnB1dEJvcmRlclJhZGl1czpcIjJweFwiLGVkaXRJbnB1dFBhZGRpbmc6XCI1cHhcIixlZGl0SW5wdXRNYXJnaW5SaWdodDpcIjRweFwiLGVkaXRJbnB1dEZvbnRGYW1pbHk6XCJtb25vc3BhY2VcIixpY29uQ3Vyc29yOlwicG9pbnRlclwiLGljb25Gb250U2l6ZTpcIjE1cHhcIixpY29uUGFkZGluZ1JpZ2h0OlwiMXB4XCIsZGF0ZVZhbHVlTWFyZ2luTGVmdDpcIjJweFwiLGljb25NYXJnaW5SaWdodDpcIjNweFwiLGRldGVjdGVkUm93UGFkZGluZ1RvcDpcIjNweFwiLGFkZEtleUNvdmVyQmFja2dyb3VuZDpcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKVwiLGFkZEtleUNvdmVyUG9zaXRpb246XCJhYnNvbHV0ZVwiLGFkZEtleUNvdmVyUG9zaXRpb25QeDpcIjBweFwiLGFkZEtleU1vZGFsV2lkdGg6XCIyMDBweFwiLGFkZEtleU1vZGFsTWFyZ2luOlwiYXV0b1wiLGFkZEtleU1vZGFsUGFkZGluZzpcIjEwcHhcIixhZGRLZXlNb2RhbFJhZGl1czpcIjNweFwifX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZ2V0QmFzZTE2VGhlbWU9dC5jcmVhdGVTdHlsaW5nPXQuaW52ZXJ0VGhlbWU9dm9pZCAwO3ZhciBhPW4oNjcpLG89cihhKSxpPW4oOTQpLHM9cihpKSx1PW4oOTkpLGw9cih1KSxjPW4oMTA3KSxmPXIoYyksZD1uKDExMSkscD1yKGQpLGI9bigxMTIpLGg9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShiKSx5PW4oMTUwKSx2PXIoeSksbT1uKDE1MSksZz1yKG0pLF89bigxNTYpLGo9cihfKSxPPW4oMTU3KSxFPWguZGVmYXVsdCx3PSgwLGYuZGVmYXVsdCkoRSkseD1mdW5jdGlvbihlKXtyZXR1cm4gZTwuMjU/MTplPC41Py45LWU6MS4xLWV9LEM9KDAsai5kZWZhdWx0KShnLmRlZmF1bHQsTy5yZ2IyeXV2LGZ1bmN0aW9uKGUpe3ZhciB0PSgwLGwuZGVmYXVsdCkoZSwzKSxuPXRbMF0scj10WzFdLGE9dFsyXTtyZXR1cm5beChuKSxyLGFdfSxPLnl1djJyZ2Isdi5kZWZhdWx0KSxrPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm57Y2xhc3NOYW1lOlt0LmNsYXNzTmFtZSxlLmNsYXNzTmFtZV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpLHN0eWxlOigwLHMuZGVmYXVsdCkoe30sdC5zdHlsZXx8e30sZS5zdHlsZXx8e30pfX19LFA9ZnVuY3Rpb24oZSx0KXtpZih2b2lkIDA9PT1lKXJldHVybiB0O2lmKHZvaWQgMD09PXQpcmV0dXJuIGU7dmFyIG49dm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOigwLG8uZGVmYXVsdCkoZSkscj12b2lkIDA9PT10P1widW5kZWZpbmVkXCI6KDAsby5kZWZhdWx0KSh0KTtzd2l0Y2gobil7Y2FzZVwic3RyaW5nXCI6c3dpdGNoKHIpe2Nhc2VcInN0cmluZ1wiOnJldHVyblt0LGVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtjYXNlXCJvYmplY3RcIjpyZXR1cm4gayh7Y2xhc3NOYW1lOmUsc3R5bGU6dH0pO2Nhc2VcImZ1bmN0aW9uXCI6cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGE9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylhW28tMV09YXJndW1lbnRzW29dO3JldHVybiBrKHtjbGFzc05hbWU6ZX0pKHQuYXBwbHkodm9pZCAwLFtuXS5jb25jYXQoYSkpKX19Y2FzZVwib2JqZWN0XCI6c3dpdGNoKHIpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBrKHtjbGFzc05hbWU6dCxzdHlsZTplfSk7Y2FzZVwib2JqZWN0XCI6cmV0dXJuKDAscy5kZWZhdWx0KSh7fSx0LGUpO2Nhc2VcImZ1bmN0aW9uXCI6cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGE9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylhW28tMV09YXJndW1lbnRzW29dO3JldHVybiBrKHtzdHlsZTplfSkodC5hcHBseSh2b2lkIDAsW25dLmNvbmNhdChhKSkpfX1jYXNlXCJmdW5jdGlvblwiOnN3aXRjaChyKXtjYXNlXCJzdHJpbmdcIjpyZXR1cm4gZnVuY3Rpb24obil7Zm9yKHZhciByPWFyZ3VtZW50cy5sZW5ndGgsYT1BcnJheShyPjE/ci0xOjApLG89MTtvPHI7bysrKWFbby0xXT1hcmd1bWVudHNbb107cmV0dXJuIGUuYXBwbHkodm9pZCAwLFtrKG4pKHtjbGFzc05hbWU6dH0pXS5jb25jYXQoYSkpfTtjYXNlXCJvYmplY3RcIjpyZXR1cm4gZnVuY3Rpb24obil7Zm9yKHZhciByPWFyZ3VtZW50cy5sZW5ndGgsYT1BcnJheShyPjE/ci0xOjApLG89MTtvPHI7bysrKWFbby0xXT1hcmd1bWVudHNbb107cmV0dXJuIGUuYXBwbHkodm9pZCAwLFtrKG4pKHtzdHlsZTp0fSldLmNvbmNhdChhKSl9O2Nhc2VcImZ1bmN0aW9uXCI6cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGE9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylhW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLmFwcGx5KHZvaWQgMCxbdC5hcHBseSh2b2lkIDAsW25dLmNvbmNhdChhKSldLmNvbmNhdChhKSl9fX19LFM9ZnVuY3Rpb24oZSx0KXt2YXIgbj0oMCxmLmRlZmF1bHQpKHQpO2Zvcih2YXIgciBpbiBlKS0xPT09bi5pbmRleE9mKHIpJiZuLnB1c2gocik7cmV0dXJuIG4ucmVkdWNlKGZ1bmN0aW9uKG4scil7cmV0dXJuIG5bcl09UChlW3JdLHRbcl0pLG59LHt9KX0sTT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1hcmd1bWVudHMubGVuZ3RoLHI9QXJyYXkobj4yP24tMjowKSxhPTI7YTxuO2ErKylyW2EtMl09YXJndW1lbnRzW2FdO2lmKG51bGw9PT10KXJldHVybiBlO0FycmF5LmlzQXJyYXkodCl8fCh0PVt0XSk7dmFyIGk9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGVbdF19KS5maWx0ZXIoQm9vbGVhbiksdT1pLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P2UuY2xhc3NOYW1lPVtlLmNsYXNzTmFtZSx0XS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik6XCJvYmplY3RcIj09PSh2b2lkIDA9PT10P1widW5kZWZpbmVkXCI6KDAsby5kZWZhdWx0KSh0KSk/ZS5zdHlsZT0oMCxzLmRlZmF1bHQpKHt9LGUuc3R5bGUsdCk6XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKGU9KDAscy5kZWZhdWx0KSh7fSxlLHQuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQocikpKSksZX0se2NsYXNzTmFtZTpcIlwiLHN0eWxlOnt9fSk7cmV0dXJuIHUuY2xhc3NOYW1lfHxkZWxldGUgdS5jbGFzc05hbWUsMD09PSgwLGYuZGVmYXVsdCkodS5zdHlsZSkubGVuZ3RoJiZkZWxldGUgdS5zdHlsZSx1fSxBPXQuaW52ZXJ0VGhlbWU9ZnVuY3Rpb24oZSl7cmV0dXJuKDAsZi5kZWZhdWx0KShlKS5yZWR1Y2UoZnVuY3Rpb24odCxuKXtyZXR1cm4gdFtuXT0vXmJhc2UvLnRlc3Qobik/QyhlW25dKTpcInNjaGVtZVwiPT09bj9lW25dK1wiOmludmVydGVkXCI6ZVtuXSx0fSx7fSl9LFI9KHQuY3JlYXRlU3R5bGluZz0oMCxwLmRlZmF1bHQpKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49QXJyYXkodD4zP3QtMzowKSxyPTM7cjx0O3IrKyluW3ItM109YXJndW1lbnRzW3JdO3ZhciBhPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxvPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fSxpPWEuZGVmYXVsdEJhc2UxNix1PXZvaWQgMD09PWk/RTppLGw9YS5iYXNlMTZUaGVtZXMsYz12b2lkIDA9PT1sP251bGw6bCxkPVIobyxjKTtkJiYobz0oMCxzLmRlZmF1bHQpKHt9LGQsbykpO3ZhciBiPXcucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGVbdF09b1t0XXx8dVt0XSxlfSx7fSksaD0oMCxmLmRlZmF1bHQpKG8pLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybi0xPT09dy5pbmRleE9mKHQpPyhlW3RdPW9bdF0sZSk6ZX0se30pLHk9ZShiKSx2PVMoaCx5KTtyZXR1cm4oMCxwLmRlZmF1bHQpKE0sMikuYXBwbHkodm9pZCAwLFt2XS5jb25jYXQobikpfSwzKSx0LmdldEJhc2UxNlRoZW1lPWZ1bmN0aW9uKGUsdCl7aWYoZSYmZS5leHRlbmQmJihlPWUuZXh0ZW5kKSxcInN0cmluZ1wiPT10eXBlb2YgZSl7dmFyIG49ZS5zcGxpdChcIjpcIikscj0oMCxsLmRlZmF1bHQpKG4sMiksYT1yWzBdLG89clsxXTtlPSh0fHx7fSlbYV18fGhbYV0sXCJpbnZlcnRlZFwiPT09byYmKGU9QShlKSl9cmV0dXJuIGUmJmUuaGFzT3duUHJvcGVydHkoXCJiYXNlMDBcIik/ZTp2b2lkIDB9KX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuX19lc01vZHVsZT0hMDt2YXIgYT1uKDY4KSxvPXIoYSksaT1uKDgzKSxzPXIoaSksdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBzLmRlZmF1bHQmJlwic3ltYm9sXCI9PXR5cGVvZiBvLmRlZmF1bHQ/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygcy5kZWZhdWx0JiZlLmNvbnN0cnVjdG9yPT09cy5kZWZhdWx0JiZlIT09cy5kZWZhdWx0LnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfTt0LmRlZmF1bHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygcy5kZWZhdWx0JiZcInN5bWJvbFwiPT09dShvLmRlZmF1bHQpP2Z1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP1widW5kZWZpbmVkXCI6dShlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHMuZGVmYXVsdCYmZS5jb25zdHJ1Y3Rvcj09PXMuZGVmYXVsdCYmZSE9PXMuZGVmYXVsdC5wcm90b3R5cGU/XCJzeW1ib2xcIjp2b2lkIDA9PT1lP1widW5kZWZpbmVkXCI6dShlKX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9e2RlZmF1bHQ6big2OSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxuKXtuKDI2KSxuKDM2KSxlLmV4cG9ydHM9bigzNykuZihcIml0ZXJhdG9yXCIpfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyNyksYT1uKDI4KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQsbil7dmFyIG8saSxzPVN0cmluZyhhKHQpKSx1PXIobiksbD1zLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1sP2U/XCJcIjp2b2lkIDA6KG89cy5jaGFyQ29kZUF0KHUpLG88NTUyOTZ8fG8+NTYzMTl8fHUrMT09PWx8fChpPXMuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8aT41NzM0Mz9lP3MuY2hhckF0KHUpOm86ZT9zLnNsaWNlKHUsdSsyKTppLTU2MzIwKyhvLTU1Mjk2PDwxMCkrNjU1MzYpfX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDcyKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG4pe2lmKHIoZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gobil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZS5jYWxsKHQsbil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24obixyKXtyZXR1cm4gZS5jYWxsKHQsbixyKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihuLHIsYSl7cmV0dXJuIGUuY2FsbCh0LG4scixhKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKGUrXCIgaXMgbm90IGEgZnVuY3Rpb24hXCIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDcpLGE9bigyMiksbz1uKDM0KSxpPXt9O24oOCkoaSxuKDMpKFwiaXRlcmF0b3JcIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGUuZXhwb3J0cz1mdW5jdGlvbihlLHQsbil7ZS5wcm90b3R5cGU9cihpLHtuZXh0OmEoMSxuKX0pLG8oZSx0K1wiIEl0ZXJhdG9yXCIpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oOSksYT1uKDE2KSxvPW4oMTkpO2UuZXhwb3J0cz1uKDEwKT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe2EoZSk7Zm9yKHZhciBuLGk9byh0KSxzPWkubGVuZ3RoLHU9MDtzPnU7KXIuZihlLG49aVt1KytdLHRbbl0pO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTIpLGE9big3Niksbz1uKDc3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQsbixpKXt2YXIgcyx1PXIodCksbD1hKHUubGVuZ3RoKSxjPW8oaSxsKTtpZihlJiZuIT1uKXtmb3IoO2w+YzspaWYoKHM9dVtjKytdKSE9cylyZXR1cm4hMH1lbHNlIGZvcig7bD5jO2MrKylpZigoZXx8YyBpbiB1KSYmdVtjXT09PW4pcmV0dXJuIGV8fGN8fDA7cmV0dXJuIWUmJi0xfX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI3KSxhPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP2EocihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjcpLGE9TWF0aC5tYXgsbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1yKGUpLGU8MD9hKGUrdCwwKTpvKGUsdCl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big1KS5kb2N1bWVudDtlLmV4cG9ydHM9ciYmci5kb2N1bWVudEVsZW1lbnR9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDcpLGE9bigzNSksbz1uKDMxKShcIklFX1BST1RPXCIpLGk9T2JqZWN0LnByb3RvdHlwZTtlLmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1hKGUpLHIoZSxvKT9lW29dOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/aTpudWxsfX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oODEpLGE9big4Miksbz1uKDE4KSxpPW4oMTIpO2UuZXhwb3J0cz1uKDQzKShBcnJheSxcIkFycmF5XCIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PWkoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxuPXRoaXMuX2krKztyZXR1cm4hZXx8bj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLGEoMSkpOlwia2V5c1wiPT10P2EoMCxuKTpcInZhbHVlc1wiPT10P2EoMCxlW25dKTphKDAsW24sZVtuXV0pfSxcInZhbHVlc1wiKSxvLkFyZ3VtZW50cz1vLkFycmF5LHIoXCJrZXlzXCIpLHIoXCJ2YWx1ZXNcIikscihcImVudHJpZXNcIil9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPXtkZWZhdWx0Om4oODQpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQsbil7big4NSksbig5MSksbig5Miksbig5MyksZS5leHBvcnRzPW4oMikuU3ltYm9sfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big1KSxhPW4oNyksbz1uKDEwKSxpPW4oMjEpLHM9big0NiksdT1uKDg2KS5LRVksbD1uKDExKSxjPW4oMzIpLGY9bigzNCksZD1uKDIzKSxwPW4oMyksYj1uKDM3KSxoPW4oMzgpLHk9big4Nyksdj1uKDg4KSxtPW4oMTYpLGc9bigxNyksXz1uKDEyKSxqPW4oMjkpLE89bigyMiksRT1uKDQ3KSx3PW4oODkpLHg9big5MCksQz1uKDkpLGs9bigxOSksUD14LmYsUz1DLmYsTT13LmYsQT1yLlN5bWJvbCxSPXIuSlNPTixGPVImJlIuc3RyaW5naWZ5LEQ9cChcIl9oaWRkZW5cIiksVD1wKFwidG9QcmltaXRpdmVcIiksST17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxMPWMoXCJzeW1ib2wtcmVnaXN0cnlcIiksQj1jKFwic3ltYm9sc1wiKSxOPWMoXCJvcC1zeW1ib2xzXCIpLHo9T2JqZWN0LnByb3RvdHlwZSxxPVwiZnVuY3Rpb25cIj09dHlwZW9mIEEsVj1yLlFPYmplY3QsVT0hVnx8IVYucHJvdG90eXBlfHwhVi5wcm90b3R5cGUuZmluZENoaWxkLEs9byYmbChmdW5jdGlvbigpe3JldHVybiA3IT1FKFMoe30sXCJhXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBTKHRoaXMsXCJhXCIse3ZhbHVlOjd9KS5hfX0pKS5hfSk/ZnVuY3Rpb24oZSx0LG4pe3ZhciByPVAoeix0KTtyJiZkZWxldGUgelt0XSxTKGUsdCxuKSxyJiZlIT09eiYmUyh6LHQscil9OlMsVz1mdW5jdGlvbihlKXt2YXIgdD1CW2VdPUUoQS5wcm90b3R5cGUpO3JldHVybiB0Ll9rPWUsdH0sSD1xJiZcInN5bWJvbFwiPT10eXBlb2YgQS5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBfSxKPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZT09PXomJkooTix0LG4pLG0oZSksdD1qKHQsITApLG0obiksYShCLHQpPyhuLmVudW1lcmFibGU/KGEoZSxEKSYmZVtEXVt0XSYmKGVbRF1bdF09ITEpLG49RShuLHtlbnVtZXJhYmxlOk8oMCwhMSl9KSk6KGEoZSxEKXx8UyhlLEQsTygxLHt9KSksZVtEXVt0XT0hMCksSyhlLHQsbikpOlMoZSx0LG4pfSxHPWZ1bmN0aW9uKGUsdCl7bShlKTtmb3IodmFyIG4scj15KHQ9Xyh0KSksYT0wLG89ci5sZW5ndGg7bz5hOylKKGUsbj1yW2ErK10sdFtuXSk7cmV0dXJuIGV9LCQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dD9FKGUpOkcoRShlKSx0KX0sWT1mdW5jdGlvbihlKXt2YXIgdD1JLmNhbGwodGhpcyxlPWooZSwhMCkpO3JldHVybiEodGhpcz09PXomJmEoQixlKSYmIWEoTixlKSkmJighKHR8fCFhKHRoaXMsZSl8fCFhKEIsZSl8fGEodGhpcyxEKSYmdGhpc1tEXVtlXSl8fHQpfSxRPWZ1bmN0aW9uKGUsdCl7aWYoZT1fKGUpLHQ9aih0LCEwKSxlIT09enx8IWEoQix0KXx8YShOLHQpKXt2YXIgbj1QKGUsdCk7cmV0dXJuIW58fCFhKEIsdCl8fGEoZSxEKSYmZVtEXVt0XXx8KG4uZW51bWVyYWJsZT0hMCksbn19LFo9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG49TShfKGUpKSxyPVtdLG89MDtuLmxlbmd0aD5vOylhKEIsdD1uW28rK10pfHx0PT1EfHx0PT11fHxyLnB1c2godCk7cmV0dXJuIHJ9LFg9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG49ZT09PXoscj1NKG4/TjpfKGUpKSxvPVtdLGk9MDtyLmxlbmd0aD5pOykhYShCLHQ9cltpKytdKXx8biYmIWEoeix0KXx8by5wdXNoKEJbdF0pO3JldHVybiBvfTtxfHwoQT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBBKXRocm93IFR5cGVFcnJvcihcIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciFcIik7dmFyIGU9ZChhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCksdD1mdW5jdGlvbihuKXt0aGlzPT09eiYmdC5jYWxsKE4sbiksYSh0aGlzLEQpJiZhKHRoaXNbRF0sZSkmJih0aGlzW0RdW2VdPSExKSxLKHRoaXMsZSxPKDEsbikpfTtyZXR1cm4gbyYmVSYmSyh6LGUse2NvbmZpZ3VyYWJsZTohMCxzZXQ6dH0pLFcoZSl9LHMoQS5wcm90b3R5cGUsXCJ0b1N0cmluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSx4LmY9USxDLmY9SixuKDUwKS5mPXcuZj1aLG4oMjQpLmY9WSxuKDM5KS5mPVgsbyYmIW4oMjApJiZzKHosXCJwcm9wZXJ0eUlzRW51bWVyYWJsZVwiLFksITApLGIuZj1mdW5jdGlvbihlKXtyZXR1cm4gVyhwKGUpKX0pLGkoaS5HK2kuVytpLkYqIXEse1N5bWJvbDpBfSk7Zm9yKHZhciBlZT1cImhhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzXCIuc3BsaXQoXCIsXCIpLHRlPTA7ZWUubGVuZ3RoPnRlOylwKGVlW3RlKytdKTtmb3IodmFyIG5lPWsocC5zdG9yZSkscmU9MDtuZS5sZW5ndGg+cmU7KWgobmVbcmUrK10pO2koaS5TK2kuRiohcSxcIlN5bWJvbFwiLHtmb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIGEoTCxlKz1cIlwiKT9MW2VdOkxbZV09QShlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKCFIKGUpKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhIHN5bWJvbCFcIik7Zm9yKHZhciB0IGluIEwpaWYoTFt0XT09PWUpcmV0dXJuIHR9LHVzZVNldHRlcjpmdW5jdGlvbigpe1U9ITB9LHVzZVNpbXBsZTpmdW5jdGlvbigpe1U9ITF9fSksaShpLlMraS5GKiFxLFwiT2JqZWN0XCIse2NyZWF0ZTokLGRlZmluZVByb3BlcnR5OkosZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpRLGdldE93blByb3BlcnR5TmFtZXM6WixnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6WH0pLFImJmkoaS5TK2kuRiooIXF8fGwoZnVuY3Rpb24oKXt2YXIgZT1BKCk7cmV0dXJuXCJbbnVsbF1cIiE9RihbZV0pfHxcInt9XCIhPUYoe2E6ZX0pfHxcInt9XCIhPUYoT2JqZWN0KGUpKX0pKSxcIkpTT05cIix7c3RyaW5naWZ5OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuLHI9W2VdLGE9MTthcmd1bWVudHMubGVuZ3RoPmE7KXIucHVzaChhcmd1bWVudHNbYSsrXSk7aWYobj10PXJbMV0sKGcodCl8fHZvaWQgMCE9PWUpJiYhSChlKSlyZXR1cm4gdih0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiYodD1uLmNhbGwodGhpcyxlLHQpKSwhSCh0KSlyZXR1cm4gdH0pLHJbMV09dCxGLmFwcGx5KFIscil9fSksQS5wcm90b3R5cGVbVF18fG4oOCkoQS5wcm90b3R5cGUsVCxBLnByb3RvdHlwZS52YWx1ZU9mKSxmKEEsXCJTeW1ib2xcIiksZihNYXRoLFwiTWF0aFwiLCEwKSxmKHIuSlNPTixcIkpTT05cIiwhMCl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIzKShcIm1ldGFcIiksYT1uKDE3KSxvPW4oNyksaT1uKDkpLmYscz0wLHU9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sbD0hbigxMSkoZnVuY3Rpb24oKXtyZXR1cm4gdShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKX0pLGM9ZnVuY3Rpb24oZSl7aShlLHIse3ZhbHVlOntpOlwiT1wiKyArK3Msdzp7fX19KX0sZj1mdW5jdGlvbihlLHQpe2lmKCFhKGUpKXJldHVyblwic3ltYm9sXCI9PXR5cGVvZiBlP2U6KFwic3RyaW5nXCI9PXR5cGVvZiBlP1wiU1wiOlwiUFwiKStlO2lmKCFvKGUscikpe2lmKCF1KGUpKXJldHVyblwiRlwiO2lmKCF0KXJldHVyblwiRVwiO2MoZSl9cmV0dXJuIGVbcl0uaX0sZD1mdW5jdGlvbihlLHQpe2lmKCFvKGUscikpe2lmKCF1KGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2MoZSl9cmV0dXJuIGVbcl0ud30scD1mdW5jdGlvbihlKXtyZXR1cm4gbCYmYi5ORUVEJiZ1KGUpJiYhbyhlLHIpJiZjKGUpLGV9LGI9ZS5leHBvcnRzPXtLRVk6cixORUVEOiExLGZhc3RLZXk6ZixnZXRXZWFrOmQsb25GcmVlemU6cH19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE5KSxhPW4oMzkpLG89bigyNCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PXIoZSksbj1hLmY7aWYobilmb3IodmFyIGkscz1uKGUpLHU9by5mLGw9MDtzLmxlbmd0aD5sOyl1LmNhbGwoZSxpPXNbbCsrXSkmJnQucHVzaChpKTtyZXR1cm4gdH19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDMwKTtlLmV4cG9ydHM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuXCJBcnJheVwiPT1yKGUpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTIpLGE9big1MCkuZixvPXt9LnRvU3RyaW5nLGk9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmd2luZG93JiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpOltdLHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiBhKGUpfWNhdGNoKGUpe3JldHVybiBpLnNsaWNlKCl9fTtlLmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gaSYmXCJbb2JqZWN0IFdpbmRvd11cIj09by5jYWxsKGUpP3MoZSk6YShyKGUpKX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI0KSxhPW4oMjIpLG89bigxMiksaT1uKDI5KSxzPW4oNyksdT1uKDQ0KSxsPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dC5mPW4oMTApP2w6ZnVuY3Rpb24oZSx0KXtpZihlPW8oZSksdD1pKHQsITApLHUpdHJ5e3JldHVybiBsKGUsdCl9Y2F0Y2goZSl7fWlmKHMoZSx0KSlyZXR1cm4gYSghci5mLmNhbGwoZSx0KSxlW3RdKX19LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQsbil7bigzOCkoXCJhc3luY0l0ZXJhdG9yXCIpfSxmdW5jdGlvbihlLHQsbil7bigzOCkoXCJvYnNlcnZhYmxlXCIpfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwO3ZhciByPW4oOTUpLGE9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKTt0LmRlZmF1bHQ9YS5kZWZhdWx0fHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz17ZGVmYXVsdDpuKDk2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LG4pe24oOTcpLGUuZXhwb3J0cz1uKDIpLk9iamVjdC5hc3NpZ259LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIxKTtyKHIuUytyLkYsXCJPYmplY3RcIix7YXNzaWduOm4oOTgpfSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE5KSxhPW4oMzkpLG89bigyNCksaT1uKDM1KSxzPW4oNDkpLHU9T2JqZWN0LmFzc2lnbjtlLmV4cG9ydHM9IXV8fG4oMTEpKGZ1bmN0aW9uKCl7dmFyIGU9e30sdD17fSxuPVN5bWJvbCgpLHI9XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiO3JldHVybiBlW25dPTcsci5zcGxpdChcIlwiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RbZV09ZX0pLDchPXUoe30sZSlbbl18fE9iamVjdC5rZXlzKHUoe30sdCkpLmpvaW4oXCJcIikhPXJ9KT9mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1pKGUpLHU9YXJndW1lbnRzLmxlbmd0aCxsPTEsYz1hLmYsZj1vLmY7dT5sOylmb3IodmFyIGQscD1zKGFyZ3VtZW50c1tsKytdKSxiPWM/cihwKS5jb25jYXQoYyhwKSk6cihwKSxoPWIubGVuZ3RoLHk9MDtoPnk7KWYuY2FsbChwLGQ9Ylt5KytdKSYmKG5bZF09cFtkXSk7cmV0dXJuIG59OnV9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10Ll9fZXNNb2R1bGU9ITA7dmFyIGE9bigxMDApLG89cihhKSxpPW4oMTAzKSxzPXIoaSk7dC5kZWZhdWx0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciBuPVtdLHI9ITAsYT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBpLHU9KDAscy5kZWZhdWx0KShlKTshKHI9KGk9dS5uZXh0KCkpLmRvbmUpJiYobi5wdXNoKGkudmFsdWUpLCF0fHxuLmxlbmd0aCE9PXQpO3I9ITApO31jYXRjaChlKXthPSEwLG89ZX1maW5hbGx5e3RyeXshciYmdS5yZXR1cm4mJnUucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IG99fXJldHVybiBufXJldHVybiBmdW5jdGlvbih0LG4pe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHQ7aWYoKDAsby5kZWZhdWx0KShPYmplY3QodCkpKXJldHVybiBlKHQsbik7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIil9fSgpfSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPXtkZWZhdWx0Om4oMTAxKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LG4pe24oMzYpLG4oMjYpLGUuZXhwb3J0cz1uKDEwMil9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDUxKSxhPW4oMykoXCJpdGVyYXRvclwiKSxvPW4oMTgpO2UuZXhwb3J0cz1uKDIpLmlzSXRlcmFibGU9ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0KGUpO3JldHVybiB2b2lkIDAhPT10W2FdfHxcIkBAaXRlcmF0b3JcImluIHR8fG8uaGFzT3duUHJvcGVydHkocih0KSl9fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPXtkZWZhdWx0Om4oMTA0KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LG4pe24oMzYpLG4oMjYpLGUuZXhwb3J0cz1uKDEwNSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE2KSxhPW4oMTA2KTtlLmV4cG9ydHM9bigyKS5nZXRJdGVyYXRvcj1mdW5jdGlvbihlKXt2YXIgdD1hKGUpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgVHlwZUVycm9yKGUrXCIgaXMgbm90IGl0ZXJhYmxlIVwiKTtyZXR1cm4gcih0LmNhbGwoZSkpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNTEpLGE9bigzKShcIml0ZXJhdG9yXCIpLG89bigxOCk7ZS5leHBvcnRzPW4oMikuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT1lKXJldHVybiBlW2FdfHxlW1wiQEBpdGVyYXRvclwiXXx8b1tyKGUpXX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9e2RlZmF1bHQ6bigxMDgpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQsbil7bigxMDkpLGUuZXhwb3J0cz1uKDIpLk9iamVjdC5rZXlzfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzNSksYT1uKDE5KTtuKDExMCkoXCJrZXlzXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGEocihlKSl9fSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIxKSxhPW4oMiksbz1uKDExKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgbj0oYS5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLGk9e307aVtlXT10KG4pLHIoci5TK3IuRipvKGZ1bmN0aW9uKCl7bigxKX0pLFwiT2JqZWN0XCIsaSl9fSxmdW5jdGlvbihlLHQsbil7KGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oZSx0LG4pe3N3aXRjaChuLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBlLmNhbGwodCk7Y2FzZSAxOnJldHVybiBlLmNhbGwodCxuWzBdKTtjYXNlIDI6cmV0dXJuIGUuY2FsbCh0LG5bMF0sblsxXSk7Y2FzZSAzOnJldHVybiBlLmNhbGwodCxuWzBdLG5bMV0sblsyXSl9cmV0dXJuIGUuYXBwbHkodCxuKX1mdW5jdGlvbiByKGUsdCl7Zm9yKHZhciBuPS0xLHI9ZT9lLmxlbmd0aDowOysrbjxyJiYhMSE9PXQoZVtuXSxuLGUpOyk7cmV0dXJuIGV9ZnVuY3Rpb24gYShlLHQpe3JldHVybiEhKGU/ZS5sZW5ndGg6MCkmJmkoZSx0LDApPi0xfWZ1bmN0aW9uIG8oZSx0LG4scil7Zm9yKHZhciBhPWUubGVuZ3RoLG89bisocj8xOi0xKTtyP28tLTorK288YTspaWYodChlW29dLG8sZSkpcmV0dXJuIG87cmV0dXJuLTF9ZnVuY3Rpb24gaShlLHQsbil7aWYodCE9PXQpcmV0dXJuIG8oZSxzLG4pO2Zvcih2YXIgcj1uLTEsYT1lLmxlbmd0aDsrK3I8YTspaWYoZVtyXT09PXQpcmV0dXJuIHI7cmV0dXJuLTF9ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSE9PWV9ZnVuY3Rpb24gdShlLHQpe2Zvcih2YXIgbj1lLmxlbmd0aCxyPTA7bi0tOyllW25dPT09dCYmcisrO3JldHVybiByfWZ1bmN0aW9uIGwoZSx0KXtyZXR1cm4gbnVsbD09ZT92b2lkIDA6ZVt0XX1mdW5jdGlvbiBjKGUpe3ZhciB0PSExO2lmKG51bGwhPWUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUudG9TdHJpbmcpdHJ5e3Q9ISEoZStcIlwiKX1jYXRjaChlKXt9cmV0dXJuIHR9ZnVuY3Rpb24gZihlLHQpe2Zvcih2YXIgbj0tMSxyPWUubGVuZ3RoLGE9MCxvPVtdOysrbjxyOyl7dmFyIGk9ZVtuXTtpIT09dCYmaSE9PUt8fChlW25dPUssb1thKytdPW4pfXJldHVybiBvfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIFQoZSk/TWUoZSk6e319ZnVuY3Rpb24gcChlKXtyZXR1cm4hKCFUKGUpfHxTKGUpKSYmKEQoZSl8fGMoZSk/U2U6aGUpLnRlc3QoQShlKSl9ZnVuY3Rpb24gYihlLHQsbixyKXtmb3IodmFyIGE9LTEsbz1lLmxlbmd0aCxpPW4ubGVuZ3RoLHM9LTEsdT10Lmxlbmd0aCxsPUFlKG8taSwwKSxjPUFycmF5KHUrbCksZj0hcjsrK3M8dTspY1tzXT10W3NdO2Zvcig7KythPGk7KShmfHxhPG8pJiYoY1tuW2FdXT1lW2FdKTtmb3IoO2wtLTspY1tzKytdPWVbYSsrXTtyZXR1cm4gY31mdW5jdGlvbiBoKGUsdCxuLHIpe2Zvcih2YXIgYT0tMSxvPWUubGVuZ3RoLGk9LTEscz1uLmxlbmd0aCx1PS0xLGw9dC5sZW5ndGgsYz1BZShvLXMsMCksZj1BcnJheShjK2wpLGQ9IXI7KythPGM7KWZbYV09ZVthXTtmb3IodmFyIHA9YTsrK3U8bDspZltwK3VdPXRbdV07Zm9yKDsrK2k8czspKGR8fGE8bykmJihmW3ArbltpXV09ZVthKytdKTtyZXR1cm4gZn1mdW5jdGlvbiB5KGUsdCl7dmFyIG49LTEscj1lLmxlbmd0aDtmb3IodHx8KHQ9QXJyYXkocikpOysrbjxyOyl0W25dPWVbbl07cmV0dXJuIHR9ZnVuY3Rpb24gdihlLHQsbil7ZnVuY3Rpb24gcigpe3JldHVybih0aGlzJiZ0aGlzIT09amUmJnRoaXMgaW5zdGFuY2VvZiByP286ZSkuYXBwbHkoYT9uOnRoaXMsYXJndW1lbnRzKX12YXIgYT10Jlcsbz1tKGUpO3JldHVybiByfWZ1bmN0aW9uIG0oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHRbMF0pO2Nhc2UgMjpyZXR1cm4gbmV3IGUodFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSx0WzJdLHRbM10pO2Nhc2UgNTpyZXR1cm4gbmV3IGUodFswXSx0WzFdLHRbMl0sdFszXSx0WzRdKTtjYXNlIDY6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdKTtjYXNlIDc6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdLHRbNl0pfXZhciBuPWQoZS5wcm90b3R5cGUpLHI9ZS5hcHBseShuLHQpO3JldHVybiBUKHIpP3I6bn19ZnVuY3Rpb24gZyhlLHQscil7ZnVuY3Rpb24gYSgpe2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLHM9QXJyYXkoaSksdT1pLGw9dyhhKTt1LS07KXNbdV09YXJndW1lbnRzW3VdO3ZhciBjPWk8MyYmc1swXSE9PWwmJnNbaS0xXSE9PWw/W106ZihzLGwpO3JldHVybihpLT1jLmxlbmd0aCk8cj9PKGUsdCxfLGEucGxhY2Vob2xkZXIsdm9pZCAwLHMsYyx2b2lkIDAsdm9pZCAwLHItaSk6bih0aGlzJiZ0aGlzIT09amUmJnRoaXMgaW5zdGFuY2VvZiBhP286ZSx0aGlzLHMpfXZhciBvPW0oZSk7cmV0dXJuIGF9ZnVuY3Rpb24gXyhlLHQsbixyLGEsbyxpLHMsbCxjKXtmdW5jdGlvbiBkKCl7Zm9yKHZhciB4PWFyZ3VtZW50cy5sZW5ndGgsQz1BcnJheSh4KSxrPXg7ay0tOylDW2tdPWFyZ3VtZW50c1trXTtpZihnKXZhciBQPXcoZCksUz11KEMsUCk7aWYociYmKEM9YihDLHIsYSxnKSksbyYmKEM9aChDLG8saSxnKSkseC09UyxnJiZ4PGMpe3ZhciBBPWYoQyxQKTtyZXR1cm4gTyhlLHQsXyxkLnBsYWNlaG9sZGVyLG4sQyxBLHMsbCxjLXgpfXZhciBSPXk/bjp0aGlzLEY9dj9SW2VdOmU7cmV0dXJuIHg9Qy5sZW5ndGgscz9DPU0oQyxzKTpqJiZ4PjEmJkMucmV2ZXJzZSgpLHAmJmw8eCYmKEMubGVuZ3RoPWwpLHRoaXMmJnRoaXMhPT1qZSYmdGhpcyBpbnN0YW5jZW9mIGQmJihGPUV8fG0oRikpLEYuYXBwbHkoUixDKX12YXIgcD10JloseT10Jlcsdj10JkgsZz10JihHfCQpLGo9dCZYLEU9dj92b2lkIDA6bShlKTtyZXR1cm4gZH1mdW5jdGlvbiBqKGUsdCxyLGEpe2Z1bmN0aW9uIG8oKXtmb3IodmFyIHQ9LTEsdT1hcmd1bWVudHMubGVuZ3RoLGw9LTEsYz1hLmxlbmd0aCxmPUFycmF5KGMrdSksZD10aGlzJiZ0aGlzIT09amUmJnRoaXMgaW5zdGFuY2VvZiBvP3M6ZTsrK2w8YzspZltsXT1hW2xdO2Zvcig7dS0tOylmW2wrK109YXJndW1lbnRzWysrdF07cmV0dXJuIG4oZCxpP3I6dGhpcyxmKX12YXIgaT10Jlcscz1tKGUpO3JldHVybiBvfWZ1bmN0aW9uIE8oZSx0LG4scixhLG8saSxzLHUsbCl7dmFyIGM9dCZHLGY9Yz9pOnZvaWQgMCxkPWM/dm9pZCAwOmkscD1jP286dm9pZCAwLGI9Yz92b2lkIDA6bzt0fD1jP1k6USwodCY9fihjP1E6WSkpJkp8fCh0Jj1+KFd8SCkpO3ZhciBoPW4oZSx0LGEscCxmLGIsZCxzLHUsbCk7cmV0dXJuIGgucGxhY2Vob2xkZXI9cixEZShoLGUsdCl9ZnVuY3Rpb24gRShlLHQsbixyLGEsbyxpLHMpe3ZhciB1PXQmSDtpZighdSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKFUpO3ZhciBsPXI/ci5sZW5ndGg6MDtpZihsfHwodCY9fihZfFEpLHI9YT12b2lkIDApLGk9dm9pZCAwPT09aT9pOkFlKE4oaSksMCkscz12b2lkIDA9PT1zP3M6TihzKSxsLT1hP2EubGVuZ3RoOjAsdCZRKXt2YXIgYz1yLGY9YTtyPWE9dm9pZCAwfXZhciBkPVtlLHQsbixyLGEsYyxmLG8saSxzXTtpZihlPWRbMF0sdD1kWzFdLG49ZFsyXSxyPWRbM10sYT1kWzRdLHM9ZFs5XT1udWxsPT1kWzldP3U/MDplLmxlbmd0aDpBZShkWzldLWwsMCksIXMmJnQmKEd8JCkmJih0Jj1+KEd8JCkpLHQmJnQhPVcpcD10PT1HfHx0PT0kP2coZSx0LHMpOnQhPVkmJnQhPShXfFkpfHxhLmxlbmd0aD9fLmFwcGx5KHZvaWQgMCxkKTpqKGUsdCxuLHIpO2Vsc2UgdmFyIHA9dihlLHQsbik7cmV0dXJuIERlKHAsZSx0KX1mdW5jdGlvbiB3KGUpe3JldHVybiBlLnBsYWNlaG9sZGVyfWZ1bmN0aW9uIHgoZSx0KXt2YXIgbj1sKGUsdCk7cmV0dXJuIHAobik/bjp2b2lkIDB9ZnVuY3Rpb24gQyhlKXt2YXIgdD1lLm1hdGNoKGZlKTtyZXR1cm4gdD90WzFdLnNwbGl0KGRlKTpbXX1mdW5jdGlvbiBrKGUsdCl7dmFyIG49dC5sZW5ndGgscj1uLTE7cmV0dXJuIHRbcl09KG4+MT9cIiYgXCI6XCJcIikrdFtyXSx0PXQuam9pbihuPjI/XCIsIFwiOlwiIFwiKSxlLnJlcGxhY2UoY2UsXCJ7XFxuLyogW3dyYXBwZWQgd2l0aCBcIit0K1wiXSAqL1xcblwiKX1mdW5jdGlvbiBQKGUsdCl7cmV0dXJuISEodD1udWxsPT10P3RlOnQpJiYoXCJudW1iZXJcIj09dHlwZW9mIGV8fHZlLnRlc3QoZSkpJiZlPi0xJiZlJTE9PTAmJmU8dH1mdW5jdGlvbiBTKGUpe3JldHVybiEheGUmJnhlIGluIGV9ZnVuY3Rpb24gTShlLHQpe2Zvcih2YXIgbj1lLmxlbmd0aCxyPVJlKHQubGVuZ3RoLG4pLGE9eShlKTtyLS07KXt2YXIgbz10W3JdO2Vbcl09UChvLG4pP2Fbb106dm9pZCAwfXJldHVybiBlfWZ1bmN0aW9uIEEoZSl7aWYobnVsbCE9ZSl7dHJ5e3JldHVybiBDZS5jYWxsKGUpfWNhdGNoKGUpe310cnl7cmV0dXJuIGUrXCJcIn1jYXRjaChlKXt9fXJldHVyblwiXCJ9ZnVuY3Rpb24gUihlLHQpe3JldHVybiByKGFlLGZ1bmN0aW9uKG4pe3ZhciByPVwiXy5cIituWzBdO3QmblsxXSYmIWEoZSxyKSYmZS5wdXNoKHIpfSksZS5zb3J0KCl9ZnVuY3Rpb24gRihlLHQsbil7dD1uP3ZvaWQgMDp0O3ZhciByPUUoZSxHLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdCk7cmV0dXJuIHIucGxhY2Vob2xkZXI9Ri5wbGFjZWhvbGRlcixyfWZ1bmN0aW9uIEQoZSl7dmFyIHQ9VChlKT9QZS5jYWxsKGUpOlwiXCI7cmV0dXJuIHQ9PW9lfHx0PT1pZX1mdW5jdGlvbiBUKGUpe3ZhciB0PXR5cGVvZiBlO3JldHVybiEhZSYmKFwib2JqZWN0XCI9PXR8fFwiZnVuY3Rpb25cIj09dCl9ZnVuY3Rpb24gSShlKXtyZXR1cm4hIWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlfWZ1bmN0aW9uIEwoZSl7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIGV8fEkoZSkmJlBlLmNhbGwoZSk9PXNlfWZ1bmN0aW9uIEIoZSl7cmV0dXJuIGU/KGU9eihlKSk9PT1lZXx8ZT09PS1lZT8oZTwwPy0xOjEpKm5lOmU9PT1lP2U6MDowPT09ZT9lOjB9ZnVuY3Rpb24gTihlKXt2YXIgdD1CKGUpLG49dCUxO3JldHVybiB0PT09dD9uP3Qtbjp0OjB9ZnVuY3Rpb24geihlKXtpZihcIm51bWJlclwiPT10eXBlb2YgZSlyZXR1cm4gZTtpZihMKGUpKXJldHVybiByZTtpZihUKGUpKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnZhbHVlT2Y/ZS52YWx1ZU9mKCk6ZTtlPVQodCk/dCtcIlwiOnR9aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuIDA9PT1lP2U6K2U7ZT1lLnJlcGxhY2UobGUsXCJcIik7dmFyIG49YmUudGVzdChlKTtyZXR1cm4gbnx8eWUudGVzdChlKT9tZShlLnNsaWNlKDIpLG4/Mjo4KTpwZS50ZXN0KGUpP3JlOitlfWZ1bmN0aW9uIHEoZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGV9fWZ1bmN0aW9uIFYoZSl7cmV0dXJuIGV9dmFyIFU9XCJFeHBlY3RlZCBhIGZ1bmN0aW9uXCIsSz1cIl9fbG9kYXNoX3BsYWNlaG9sZGVyX19cIixXPTEsSD0yLEo9NCxHPTgsJD0xNixZPTMyLFE9NjQsWj0xMjgsWD01MTIsZWU9MS8wLHRlPTkwMDcxOTkyNTQ3NDA5OTEsbmU9MS43OTc2OTMxMzQ4NjIzMTU3ZTMwOCxyZT1OYU4sYWU9W1tcImFyeVwiLFpdLFtcImJpbmRcIixXXSxbXCJiaW5kS2V5XCIsSF0sW1wiY3VycnlcIixHXSxbXCJjdXJyeVJpZ2h0XCIsJF0sW1wiZmxpcFwiLFhdLFtcInBhcnRpYWxcIixZXSxbXCJwYXJ0aWFsUmlnaHRcIixRXSxbXCJyZWFyZ1wiLDI1Nl1dLG9lPVwiW29iamVjdCBGdW5jdGlvbl1cIixpZT1cIltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dXCIsc2U9XCJbb2JqZWN0IFN5bWJvbF1cIix1ZT0vW1xcXFxeJC4qKz8oKVtcXF17fXxdL2csbGU9L15cXHMrfFxccyskL2csY2U9L1xceyg/OlxcblxcL1xcKiBcXFt3cmFwcGVkIHdpdGggLitcXF0gXFwqXFwvKT9cXG4/LyxmZT0vXFx7XFxuXFwvXFwqIFxcW3dyYXBwZWQgd2l0aCAoLispXFxdIFxcKi8sZGU9Lyw/ICYgLyxwZT0vXlstK10weFswLTlhLWZdKyQvaSxiZT0vXjBiWzAxXSskL2ksaGU9L15cXFtvYmplY3QgLis/Q29uc3RydWN0b3JcXF0kLyx5ZT0vXjBvWzAtN10rJC9pLHZlPS9eKD86MHxbMS05XVxcZCopJC8sbWU9cGFyc2VJbnQsZ2U9XCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuT2JqZWN0PT09T2JqZWN0JiZ0LF9lPVwib2JqZWN0XCI9PXR5cGVvZiBzZWxmJiZzZWxmJiZzZWxmLk9iamVjdD09PU9iamVjdCYmc2VsZixqZT1nZXx8X2V8fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSxPZT1GdW5jdGlvbi5wcm90b3R5cGUsRWU9T2JqZWN0LnByb3RvdHlwZSx3ZT1qZVtcIl9fY29yZS1qc19zaGFyZWRfX1wiXSx4ZT1mdW5jdGlvbigpe3ZhciBlPS9bXi5dKyQvLmV4ZWMod2UmJndlLmtleXMmJndlLmtleXMuSUVfUFJPVE98fFwiXCIpO3JldHVybiBlP1wiU3ltYm9sKHNyYylfMS5cIitlOlwiXCJ9KCksQ2U9T2UudG9TdHJpbmcsa2U9RWUuaGFzT3duUHJvcGVydHksUGU9RWUudG9TdHJpbmcsU2U9UmVnRXhwKFwiXlwiK0NlLmNhbGwoa2UpLnJlcGxhY2UodWUsXCJcXFxcJCZcIikucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZyxcIiQxLio/XCIpK1wiJFwiKSxNZT1PYmplY3QuY3JlYXRlLEFlPU1hdGgubWF4LFJlPU1hdGgubWluLEZlPWZ1bmN0aW9uKCl7dmFyIGU9eChPYmplY3QsXCJkZWZpbmVQcm9wZXJ0eVwiKSx0PXgubmFtZTtyZXR1cm4gdCYmdC5sZW5ndGg+Mj9lOnZvaWQgMH0oKSxEZT1GZT9mdW5jdGlvbihlLHQsbil7dmFyIHI9dCtcIlwiO3JldHVybiBGZShlLFwidG9TdHJpbmdcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsdmFsdWU6cShrKHIsUihDKHIpLG4pKSl9KX06VjtGLnBsYWNlaG9sZGVyPXt9LGUuZXhwb3J0cz1GfSkuY2FsbCh0LG4oNTIpKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lLmRlZmF1bHQ6ZX10Ll9fZXNNb2R1bGU9ITA7dmFyIGE9bigxMTMpO3QudGhyZWV6ZXJvdHdvZm91cj1yKGEpO3ZhciBvPW4oMTE0KTt0LmFwYXRoeT1yKG8pO3ZhciBpPW4oMTE1KTt0LmFzaGVzPXIoaSk7dmFyIHM9bigxMTYpO3QuYXRlbGllckR1bmU9cihzKTt2YXIgdT1uKDExNyk7dC5hdGVsaWVyRm9yZXN0PXIodSk7dmFyIGw9bigxMTgpO3QuYXRlbGllckhlYXRoPXIobCk7dmFyIGM9bigxMTkpO3QuYXRlbGllckxha2VzaWRlPXIoYyk7dmFyIGY9bigxMjApO3QuYXRlbGllclNlYXNpZGU9cihmKTt2YXIgZD1uKDEyMSk7dC5iZXNwaW49cihkKTt2YXIgcD1uKDEyMik7dC5icmV3ZXI9cihwKTt2YXIgYj1uKDEyMyk7dC5icmlnaHQ9cihiKTt2YXIgaD1uKDEyNCk7dC5jaGFsaz1yKGgpO3ZhciB5PW4oMTI1KTt0LmNvZGVzY2hvb2w9cih5KTt2YXIgdj1uKDEyNik7dC5jb2xvcnM9cih2KTt2YXIgbT1uKDEyNyk7dC5kZWZhdWx0PXIobSk7dmFyIGc9bigxMjgpO3QuZWlnaHRpZXM9cihnKTt2YXIgXz1uKDEyOSk7dC5lbWJlcnM9cihfKTt2YXIgaj1uKDEzMCk7dC5mbGF0PXIoaik7dmFyIE89bigxMzEpO3QuZ29vZ2xlPXIoTyk7dmFyIEU9bigxMzIpO3QuZ3JheXNjYWxlPXIoRSk7dmFyIHc9bigxMzMpO3QuZ3JlZW5zY3JlZW49cih3KTt2YXIgeD1uKDEzNCk7dC5oYXJtb25pYz1yKHgpO3ZhciBDPW4oMTM1KTt0LmhvcHNjb3RjaD1yKEMpO3ZhciBrPW4oMTM2KTt0Lmlzb3RvcGU9cihrKTt2YXIgUD1uKDEzNyk7dC5tYXJyYWtlc2g9cihQKTt2YXIgUz1uKDEzOCk7dC5tb2NoYT1yKFMpO3ZhciBNPW4oMTM5KTt0Lm1vbm9rYWk9cihNKTt2YXIgQT1uKDE0MCk7dC5vY2Vhbj1yKEEpO3ZhciBSPW4oMTQxKTt0LnBhcmFpc289cihSKTt2YXIgRj1uKDE0Mik7dC5wb3A9cihGKTt2YXIgRD1uKDE0Myk7dC5yYWlsc2Nhc3RzPXIoRCk7dmFyIFQ9bigxNDQpO3Quc2hhcGVzaGlmdGVyPXIoVCk7dmFyIEk9bigxNDUpO3Quc29sYXJpemVkPXIoSSk7dmFyIEw9bigxNDYpO3Quc3VtbWVyZnJ1aXQ9cihMKTt2YXIgQj1uKDE0Nyk7dC50b21vcnJvdz1yKEIpO3ZhciBOPW4oMTQ4KTt0LnR1YmU9cihOKTt2YXIgej1uKDE0OSk7dC50d2lsaWdodD1yKHopfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwidGhyZWV6ZXJvdHdvZm91clwiLGF1dGhvcjpcImphbiB0LiBzb3R0IChodHRwOi8vZ2l0aHViLmNvbS9pZGxlYmVyZylcIixiYXNlMDA6XCIjMDkwMzAwXCIsYmFzZTAxOlwiIzNhMzQzMlwiLGJhc2UwMjpcIiM0YTQ1NDNcIixiYXNlMDM6XCIjNWM1ODU1XCIsYmFzZTA0OlwiIzgwN2Q3Y1wiLGJhc2UwNTpcIiNhNWEyYTJcIixiYXNlMDY6XCIjZDZkNWQ0XCIsYmFzZTA3OlwiI2Y3ZjdmN1wiLGJhc2UwODpcIiNkYjJkMjBcIixiYXNlMDk6XCIjZThiYmQwXCIsYmFzZTBBOlwiI2ZkZWQwMlwiLGJhc2UwQjpcIiMwMWEyNTJcIixiYXNlMEM6XCIjYjVlNGY0XCIsYmFzZTBEOlwiIzAxYTBlNFwiLGJhc2UwRTpcIiNhMTZhOTRcIixiYXNlMEY6XCIjY2RhYjUzXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJhcGF0aHlcIixhdXRob3I6XCJqYW5uaWsgc2llYmVydCAoaHR0cHM6Ly9naXRodWIuY29tL2phbm5pa3MpXCIsYmFzZTAwOlwiIzAzMUExNlwiLGJhc2UwMTpcIiMwQjM0MkRcIixiYXNlMDI6XCIjMTg0RTQ1XCIsYmFzZTAzOlwiIzJCNjg1RVwiLGJhc2UwNDpcIiM1RjlDOTJcIixiYXNlMDU6XCIjODFCNUFDXCIsYmFzZTA2OlwiI0E3Q0VDOFwiLGJhc2UwNzpcIiNEMkU3RTRcIixiYXNlMDg6XCIjM0U5Njg4XCIsYmFzZTA5OlwiIzNFNzk5NlwiLGJhc2UwQTpcIiMzRTRDOTZcIixiYXNlMEI6XCIjODgzRTk2XCIsYmFzZTBDOlwiIzk2M0U0Q1wiLGJhc2UwRDpcIiM5Njg4M0VcIixiYXNlMEU6XCIjNEM5NjNFXCIsYmFzZTBGOlwiIzNFOTY1QlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXNoZXNcIixhdXRob3I6XCJqYW5uaWsgc2llYmVydCAoaHR0cHM6Ly9naXRodWIuY29tL2phbm5pa3MpXCIsYmFzZTAwOlwiIzFDMjAyM1wiLGJhc2UwMTpcIiMzOTNGNDVcIixiYXNlMDI6XCIjNTY1RTY1XCIsYmFzZTAzOlwiIzc0N0M4NFwiLGJhc2UwNDpcIiNBREIzQkFcIixiYXNlMDU6XCIjQzdDQ0QxXCIsYmFzZTA2OlwiI0RGRTJFNVwiLGJhc2UwNzpcIiNGM0Y0RjVcIixiYXNlMDg6XCIjQzdBRTk1XCIsYmFzZTA5OlwiI0M3Qzc5NVwiLGJhc2UwQTpcIiNBRUM3OTVcIixiYXNlMEI6XCIjOTVDN0FFXCIsYmFzZTBDOlwiIzk1QUVDN1wiLGJhc2UwRDpcIiNBRTk1QzdcIixiYXNlMEU6XCIjQzc5NUFFXCIsYmFzZTBGOlwiI0M3OTU5NVwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXRlbGllciBkdW5lXCIsYXV0aG9yOlwiYnJhbSBkZSBoYWFuIChodHRwOi8vYXRlbGllcmJyYW0uZ2l0aHViLmlvL3N5bnRheC1oaWdobGlnaHRpbmcvYXRlbGllci1zY2hlbWVzL2R1bmUpXCIsYmFzZTAwOlwiIzIwMjAxZFwiLGJhc2UwMTpcIiMyOTI4MjRcIixiYXNlMDI6XCIjNmU2YjVlXCIsYmFzZTAzOlwiIzdkN2E2OFwiLGJhc2UwNDpcIiM5OTk1ODBcIixiYXNlMDU6XCIjYTZhMjhjXCIsYmFzZTA2OlwiI2U4ZTRjZlwiLGJhc2UwNzpcIiNmZWZiZWNcIixiYXNlMDg6XCIjZDczNzM3XCIsYmFzZTA5OlwiI2I2NTYxMVwiLGJhc2UwQTpcIiNjZmIwMTdcIixiYXNlMEI6XCIjNjBhYzM5XCIsYmFzZTBDOlwiIzFmYWQ4M1wiLGJhc2UwRDpcIiM2Njg0ZTFcIixiYXNlMEU6XCIjYjg1NGQ0XCIsYmFzZTBGOlwiI2Q0MzU1MlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXRlbGllciBmb3Jlc3RcIixhdXRob3I6XCJicmFtIGRlIGhhYW4gKGh0dHA6Ly9hdGVsaWVyYnJhbS5naXRodWIuaW8vc3ludGF4LWhpZ2hsaWdodGluZy9hdGVsaWVyLXNjaGVtZXMvZm9yZXN0KVwiLGJhc2UwMDpcIiMxYjE5MThcIixiYXNlMDE6XCIjMmMyNDIxXCIsYmFzZTAyOlwiIzY4NjE1ZVwiLGJhc2UwMzpcIiM3NjZlNmJcIixiYXNlMDQ6XCIjOWM5NDkxXCIsYmFzZTA1OlwiI2E4YTE5ZlwiLGJhc2UwNjpcIiNlNmUyZTBcIixiYXNlMDc6XCIjZjFlZmVlXCIsYmFzZTA4OlwiI2YyMmM0MFwiLGJhc2UwOTpcIiNkZjUzMjBcIixiYXNlMEE6XCIjZDU5MTFhXCIsYmFzZTBCOlwiIzVhYjczOFwiLGJhc2UwQzpcIiMwMGFkOWNcIixiYXNlMEQ6XCIjNDA3ZWU3XCIsYmFzZTBFOlwiIzY2NjZlYVwiLGJhc2UwRjpcIiNjMzNmZjNcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImF0ZWxpZXIgaGVhdGhcIixhdXRob3I6XCJicmFtIGRlIGhhYW4gKGh0dHA6Ly9hdGVsaWVyYnJhbS5naXRodWIuaW8vc3ludGF4LWhpZ2hsaWdodGluZy9hdGVsaWVyLXNjaGVtZXMvaGVhdGgpXCIsYmFzZTAwOlwiIzFiMTgxYlwiLGJhc2UwMTpcIiMyOTIzMjlcIixiYXNlMDI6XCIjNjk1ZDY5XCIsYmFzZTAzOlwiIzc3Njk3N1wiLGJhc2UwNDpcIiM5ZThmOWVcIixiYXNlMDU6XCIjYWI5YmFiXCIsYmFzZTA2OlwiI2Q4Y2FkOFwiLGJhc2UwNzpcIiNmN2YzZjdcIixiYXNlMDg6XCIjY2E0MDJiXCIsYmFzZTA5OlwiI2E2NTkyNlwiLGJhc2UwQTpcIiNiYjhhMzVcIixiYXNlMEI6XCIjMzc5YTM3XCIsYmFzZTBDOlwiIzE1OTM5M1wiLGJhc2UwRDpcIiM1MTZhZWNcIixiYXNlMEU6XCIjN2I1OWMwXCIsYmFzZTBGOlwiI2NjMzNjY1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXRlbGllciBsYWtlc2lkZVwiLGF1dGhvcjpcImJyYW0gZGUgaGFhbiAoaHR0cDovL2F0ZWxpZXJicmFtLmdpdGh1Yi5pby9zeW50YXgtaGlnaGxpZ2h0aW5nL2F0ZWxpZXItc2NoZW1lcy9sYWtlc2lkZS8pXCIsYmFzZTAwOlwiIzE2MWIxZFwiLGJhc2UwMTpcIiMxZjI5MmVcIixiYXNlMDI6XCIjNTE2ZDdiXCIsYmFzZTAzOlwiIzVhN2I4Y1wiLGJhc2UwNDpcIiM3MTk1YThcIixiYXNlMDU6XCIjN2VhMmI0XCIsYmFzZTA2OlwiI2MxZTRmNlwiLGJhc2UwNzpcIiNlYmY4ZmZcIixiYXNlMDg6XCIjZDIyZDcyXCIsYmFzZTA5OlwiIzkzNWMyNVwiLGJhc2UwQTpcIiM4YThhMGZcIixiYXNlMEI6XCIjNTY4YzNiXCIsYmFzZTBDOlwiIzJkOGY2ZlwiLGJhc2UwRDpcIiMyNTdmYWRcIixiYXNlMEU6XCIjNWQ1ZGIxXCIsYmFzZTBGOlwiI2I3MmRkMlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXRlbGllciBzZWFzaWRlXCIsYXV0aG9yOlwiYnJhbSBkZSBoYWFuIChodHRwOi8vYXRlbGllcmJyYW0uZ2l0aHViLmlvL3N5bnRheC1oaWdobGlnaHRpbmcvYXRlbGllci1zY2hlbWVzL3NlYXNpZGUvKVwiLGJhc2UwMDpcIiMxMzE1MTNcIixiYXNlMDE6XCIjMjQyOTI0XCIsYmFzZTAyOlwiIzVlNmU1ZVwiLGJhc2UwMzpcIiM2ODdkNjhcIixiYXNlMDQ6XCIjODA5OTgwXCIsYmFzZTA1OlwiIzhjYTY4Y1wiLGJhc2UwNjpcIiNjZmU4Y2ZcIixiYXNlMDc6XCIjZjBmZmYwXCIsYmFzZTA4OlwiI2U2MTkzY1wiLGJhc2UwOTpcIiM4NzcxMWRcIixiYXNlMEE6XCIjYzNjMzIyXCIsYmFzZTBCOlwiIzI5YTMyOVwiLGJhc2UwQzpcIiMxOTk5YjNcIixiYXNlMEQ6XCIjM2Q2MmY1XCIsYmFzZTBFOlwiI2FkMmJlZVwiLGJhc2UwRjpcIiNlNjE5YzNcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImJlc3BpblwiLGF1dGhvcjpcImphbiB0LiBzb3R0XCIsYmFzZTAwOlwiIzI4MjExY1wiLGJhc2UwMTpcIiMzNjMxMmVcIixiYXNlMDI6XCIjNWU1ZDVjXCIsYmFzZTAzOlwiIzY2NjY2NlwiLGJhc2UwNDpcIiM3OTc5NzdcIixiYXNlMDU6XCIjOGE4OTg2XCIsYmFzZTA2OlwiIzlkOWI5N1wiLGJhc2UwNzpcIiNiYWFlOWVcIixiYXNlMDg6XCIjY2Y2YTRjXCIsYmFzZTA5OlwiI2NmN2QzNFwiLGJhc2UwQTpcIiNmOWVlOThcIixiYXNlMEI6XCIjNTRiZTBkXCIsYmFzZTBDOlwiI2FmYzRkYlwiLGJhc2UwRDpcIiM1ZWE2ZWFcIixiYXNlMEU6XCIjOWI4NTlkXCIsYmFzZTBGOlwiIzkzNzEyMVwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYnJld2VyXCIsYXV0aG9yOlwidGltb3Row6llIHBvaXNvdCAoaHR0cDovL2dpdGh1Yi5jb20vdHBvaXNvdClcIixiYXNlMDA6XCIjMGMwZDBlXCIsYmFzZTAxOlwiIzJlMmYzMFwiLGJhc2UwMjpcIiM1MTUyNTNcIixiYXNlMDM6XCIjNzM3NDc1XCIsYmFzZTA0OlwiIzk1OTY5N1wiLGJhc2UwNTpcIiNiN2I4YjlcIixiYXNlMDY6XCIjZGFkYmRjXCIsYmFzZTA3OlwiI2ZjZmRmZVwiLGJhc2UwODpcIiNlMzFhMWNcIixiYXNlMDk6XCIjZTY1NTBkXCIsYmFzZTBBOlwiI2RjYTA2MFwiLGJhc2UwQjpcIiMzMWEzNTRcIixiYXNlMEM6XCIjODBiMWQzXCIsYmFzZTBEOlwiIzMxODJiZFwiLGJhc2UwRTpcIiM3NTZiYjFcIixiYXNlMEY6XCIjYjE1OTI4XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJicmlnaHRcIixhdXRob3I6XCJjaHJpcyBrZW1wc29uIChodHRwOi8vY2hyaXNrZW1wc29uLmNvbSlcIixiYXNlMDA6XCIjMDAwMDAwXCIsYmFzZTAxOlwiIzMwMzAzMFwiLGJhc2UwMjpcIiM1MDUwNTBcIixiYXNlMDM6XCIjYjBiMGIwXCIsYmFzZTA0OlwiI2QwZDBkMFwiLGJhc2UwNTpcIiNlMGUwZTBcIixiYXNlMDY6XCIjZjVmNWY1XCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNmYjAxMjBcIixiYXNlMDk6XCIjZmM2ZDI0XCIsYmFzZTBBOlwiI2ZkYTMzMVwiLGJhc2UwQjpcIiNhMWM2NTlcIixiYXNlMEM6XCIjNzZjN2I3XCIsYmFzZTBEOlwiIzZmYjNkMlwiLGJhc2UwRTpcIiNkMzgxYzNcIixiYXNlMEY6XCIjYmU2NDNjXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJjaGFsa1wiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMxNTE1MTVcIixiYXNlMDE6XCIjMjAyMDIwXCIsYmFzZTAyOlwiIzMwMzAzMFwiLGJhc2UwMzpcIiM1MDUwNTBcIixiYXNlMDQ6XCIjYjBiMGIwXCIsYmFzZTA1OlwiI2QwZDBkMFwiLGJhc2UwNjpcIiNlMGUwZTBcIixiYXNlMDc6XCIjZjVmNWY1XCIsYmFzZTA4OlwiI2ZiOWZiMVwiLGJhc2UwOTpcIiNlZGE5ODdcIixiYXNlMEE6XCIjZGRiMjZmXCIsYmFzZTBCOlwiI2FjYzI2N1wiLGJhc2UwQzpcIiMxMmNmYzBcIixiYXNlMEQ6XCIjNmZjMmVmXCIsYmFzZTBFOlwiI2UxYTNlZVwiLGJhc2UwRjpcIiNkZWFmOGZcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImNvZGVzY2hvb2xcIixhdXRob3I6XCJicmV0dG9mODZcIixiYXNlMDA6XCIjMjMyYzMxXCIsYmFzZTAxOlwiIzFjMzY1N1wiLGJhc2UwMjpcIiMyYTM0M2FcIixiYXNlMDM6XCIjM2Y0OTQ0XCIsYmFzZTA0OlwiIzg0ODk4Y1wiLGJhc2UwNTpcIiM5ZWE3YTZcIixiYXNlMDY6XCIjYTdjZmEzXCIsYmFzZTA3OlwiI2I1ZDhmNlwiLGJhc2UwODpcIiMyYTU0OTFcIixiYXNlMDk6XCIjNDM4MjBkXCIsYmFzZTBBOlwiI2EwM2IxZVwiLGJhc2UwQjpcIiMyMzc5ODZcIixiYXNlMEM6XCIjYjAyZjMwXCIsYmFzZTBEOlwiIzQ4NGQ3OVwiLGJhc2UwRTpcIiNjNTk4MjBcIixiYXNlMEY6XCIjYzk4MzQ0XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJjb2xvcnNcIixhdXRob3I6XCJtcm1ycyAoaHR0cDovL2NscnMuY2MpXCIsYmFzZTAwOlwiIzExMTExMVwiLGJhc2UwMTpcIiMzMzMzMzNcIixiYXNlMDI6XCIjNTU1NTU1XCIsYmFzZTAzOlwiIzc3Nzc3N1wiLGJhc2UwNDpcIiM5OTk5OTlcIixiYXNlMDU6XCIjYmJiYmJiXCIsYmFzZTA2OlwiI2RkZGRkZFwiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjZmY0MTM2XCIsYmFzZTA5OlwiI2ZmODUxYlwiLGJhc2UwQTpcIiNmZmRjMDBcIixiYXNlMEI6XCIjMmVjYzQwXCIsYmFzZTBDOlwiIzdmZGJmZlwiLGJhc2UwRDpcIiMwMDc0ZDlcIixiYXNlMEU6XCIjYjEwZGM5XCIsYmFzZTBGOlwiIzg1MTQ0YlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiZGVmYXVsdFwiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMxODE4MThcIixiYXNlMDE6XCIjMjgyODI4XCIsYmFzZTAyOlwiIzM4MzgzOFwiLGJhc2UwMzpcIiM1ODU4NThcIixiYXNlMDQ6XCIjYjhiOGI4XCIsYmFzZTA1OlwiI2Q4ZDhkOFwiLGJhc2UwNjpcIiNlOGU4ZThcIixiYXNlMDc6XCIjZjhmOGY4XCIsYmFzZTA4OlwiI2FiNDY0MlwiLGJhc2UwOTpcIiNkYzk2NTZcIixiYXNlMEE6XCIjZjdjYTg4XCIsYmFzZTBCOlwiI2ExYjU2Y1wiLGJhc2UwQzpcIiM4NmMxYjlcIixiYXNlMEQ6XCIjN2NhZmMyXCIsYmFzZTBFOlwiI2JhOGJhZlwiLGJhc2UwRjpcIiNhMTY5NDZcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImVpZ2h0aWVzXCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzJkMmQyZFwiLGJhc2UwMTpcIiMzOTM5MzlcIixiYXNlMDI6XCIjNTE1MTUxXCIsYmFzZTAzOlwiIzc0NzM2OVwiLGJhc2UwNDpcIiNhMDlmOTNcIixiYXNlMDU6XCIjZDNkMGM4XCIsYmFzZTA2OlwiI2U4ZTZkZlwiLGJhc2UwNzpcIiNmMmYwZWNcIixiYXNlMDg6XCIjZjI3NzdhXCIsYmFzZTA5OlwiI2Y5OTE1N1wiLGJhc2UwQTpcIiNmZmNjNjZcIixiYXNlMEI6XCIjOTljYzk5XCIsYmFzZTBDOlwiIzY2Y2NjY1wiLGJhc2UwRDpcIiM2Njk5Y2NcIixiYXNlMEU6XCIjY2M5OWNjXCIsYmFzZTBGOlwiI2QyN2I1M1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiZW1iZXJzXCIsYXV0aG9yOlwiamFubmlrIHNpZWJlcnQgKGh0dHBzOi8vZ2l0aHViLmNvbS9qYW5uaWtzKVwiLGJhc2UwMDpcIiMxNjEzMEZcIixiYXNlMDE6XCIjMkMyNjIwXCIsYmFzZTAyOlwiIzQzM0IzMlwiLGJhc2UwMzpcIiM1QTUwNDdcIixiYXNlMDQ6XCIjOEE4MDc1XCIsYmFzZTA1OlwiI0EzOUE5MFwiLGJhc2UwNjpcIiNCRUI2QUVcIixiYXNlMDc6XCIjREJENkQxXCIsYmFzZTA4OlwiIzgyNkQ1N1wiLGJhc2UwOTpcIiM4MjgyNTdcIixiYXNlMEE6XCIjNkQ4MjU3XCIsYmFzZTBCOlwiIzU3ODI2RFwiLGJhc2UwQzpcIiM1NzZEODJcIixiYXNlMEQ6XCIjNkQ1NzgyXCIsYmFzZTBFOlwiIzgyNTc2RFwiLGJhc2UwRjpcIiM4MjU3NTdcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImZsYXRcIixhdXRob3I6XCJjaHJpcyBrZW1wc29uIChodHRwOi8vY2hyaXNrZW1wc29uLmNvbSlcIixiYXNlMDA6XCIjMkMzRTUwXCIsYmFzZTAxOlwiIzM0NDk1RVwiLGJhc2UwMjpcIiM3RjhDOERcIixiYXNlMDM6XCIjOTVBNUE2XCIsYmFzZTA0OlwiI0JEQzNDN1wiLGJhc2UwNTpcIiNlMGUwZTBcIixiYXNlMDY6XCIjZjVmNWY1XCIsYmFzZTA3OlwiI0VDRjBGMVwiLGJhc2UwODpcIiNFNzRDM0NcIixiYXNlMDk6XCIjRTY3RTIyXCIsYmFzZTBBOlwiI0YxQzQwRlwiLGJhc2UwQjpcIiMyRUNDNzFcIixiYXNlMEM6XCIjMUFCQzlDXCIsYmFzZTBEOlwiIzM0OThEQlwiLGJhc2UwRTpcIiM5QjU5QjZcIixiYXNlMEY6XCIjYmU2NDNjXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJnb29nbGVcIixhdXRob3I6XCJzZXRoIHdyaWdodCAoaHR0cDovL3NldGhhd3JpZ2h0LmNvbSlcIixiYXNlMDA6XCIjMWQxZjIxXCIsYmFzZTAxOlwiIzI4MmEyZVwiLGJhc2UwMjpcIiMzNzNiNDFcIixiYXNlMDM6XCIjOTY5ODk2XCIsYmFzZTA0OlwiI2I0YjdiNFwiLGJhc2UwNTpcIiNjNWM4YzZcIixiYXNlMDY6XCIjZTBlMGUwXCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNDQzM0MkJcIixiYXNlMDk6XCIjRjk2QTM4XCIsYmFzZTBBOlwiI0ZCQTkyMlwiLGJhc2UwQjpcIiMxOTg4NDRcIixiYXNlMEM6XCIjMzk3MUVEXCIsYmFzZTBEOlwiIzM5NzFFRFwiLGJhc2UwRTpcIiNBMzZBQzdcIixiYXNlMEY6XCIjMzk3MUVEXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJncmF5c2NhbGVcIixhdXRob3I6XCJhbGV4YW5kcmUgZ2F2aW9saSAoaHR0cHM6Ly9naXRodWIuY29tL2FsZXh4Mi8pXCIsYmFzZTAwOlwiIzEwMTAxMFwiLGJhc2UwMTpcIiMyNTI1MjVcIixiYXNlMDI6XCIjNDY0NjQ2XCIsYmFzZTAzOlwiIzUyNTI1MlwiLGJhc2UwNDpcIiNhYmFiYWJcIixiYXNlMDU6XCIjYjliOWI5XCIsYmFzZTA2OlwiI2UzZTNlM1wiLGJhc2UwNzpcIiNmN2Y3ZjdcIixiYXNlMDg6XCIjN2M3YzdjXCIsYmFzZTA5OlwiIzk5OTk5OVwiLGJhc2UwQTpcIiNhMGEwYTBcIixiYXNlMEI6XCIjOGU4ZThlXCIsYmFzZTBDOlwiIzg2ODY4NlwiLGJhc2UwRDpcIiM2ODY4NjhcIixiYXNlMEU6XCIjNzQ3NDc0XCIsYmFzZTBGOlwiIzVlNWU1ZVwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiZ3JlZW4gc2NyZWVuXCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzAwMTEwMFwiLGJhc2UwMTpcIiMwMDMzMDBcIixiYXNlMDI6XCIjMDA1NTAwXCIsYmFzZTAzOlwiIzAwNzcwMFwiLGJhc2UwNDpcIiMwMDk5MDBcIixiYXNlMDU6XCIjMDBiYjAwXCIsYmFzZTA2OlwiIzAwZGQwMFwiLGJhc2UwNzpcIiMwMGZmMDBcIixiYXNlMDg6XCIjMDA3NzAwXCIsYmFzZTA5OlwiIzAwOTkwMFwiLGJhc2UwQTpcIiMwMDc3MDBcIixiYXNlMEI6XCIjMDBiYjAwXCIsYmFzZTBDOlwiIzAwNTUwMFwiLGJhc2UwRDpcIiMwMDk5MDBcIixiYXNlMEU6XCIjMDBiYjAwXCIsYmFzZTBGOlwiIzAwNTUwMFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiaGFybW9uaWMxNlwiLGF1dGhvcjpcImphbm5payBzaWViZXJ0IChodHRwczovL2dpdGh1Yi5jb20vamFubmlrcylcIixiYXNlMDA6XCIjMGIxYzJjXCIsYmFzZTAxOlwiIzIyM2I1NFwiLGJhc2UwMjpcIiM0MDVjNzlcIixiYXNlMDM6XCIjNjI3ZTk5XCIsYmFzZTA0OlwiI2FhYmNjZVwiLGJhc2UwNTpcIiNjYmQ2ZTJcIixiYXNlMDY6XCIjZTVlYmYxXCIsYmFzZTA3OlwiI2Y3ZjlmYlwiLGJhc2UwODpcIiNiZjhiNTZcIixiYXNlMDk6XCIjYmZiZjU2XCIsYmFzZTBBOlwiIzhiYmY1NlwiLGJhc2UwQjpcIiM1NmJmOGJcIixiYXNlMEM6XCIjNTY4YmJmXCIsYmFzZTBEOlwiIzhiNTZiZlwiLGJhc2UwRTpcIiNiZjU2OGJcIixiYXNlMEY6XCIjYmY1NjU2XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJob3BzY290Y2hcIixhdXRob3I6XCJqYW4gdC4gc290dFwiLGJhc2UwMDpcIiMzMjI5MzFcIixiYXNlMDE6XCIjNDMzYjQyXCIsYmFzZTAyOlwiIzVjNTQ1YlwiLGJhc2UwMzpcIiM3OTczNzlcIixiYXNlMDQ6XCIjOTg5NDk4XCIsYmFzZTA1OlwiI2I5YjViOFwiLGJhc2UwNjpcIiNkNWQzZDVcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2RkNDY0Y1wiLGJhc2UwOTpcIiNmZDhiMTlcIixiYXNlMEE6XCIjZmRjYzU5XCIsYmFzZTBCOlwiIzhmYzEzZVwiLGJhc2UwQzpcIiMxNDliOTNcIixiYXNlMEQ6XCIjMTI5MGJmXCIsYmFzZTBFOlwiI2M4NWU3Y1wiLGJhc2UwRjpcIiNiMzM1MDhcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImlzb3RvcGVcIixhdXRob3I6XCJqYW4gdC4gc290dFwiLGJhc2UwMDpcIiMwMDAwMDBcIixiYXNlMDE6XCIjNDA0MDQwXCIsYmFzZTAyOlwiIzYwNjA2MFwiLGJhc2UwMzpcIiM4MDgwODBcIixiYXNlMDQ6XCIjYzBjMGMwXCIsYmFzZTA1OlwiI2QwZDBkMFwiLGJhc2UwNjpcIiNlMGUwZTBcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2ZmMDAwMFwiLGJhc2UwOTpcIiNmZjk5MDBcIixiYXNlMEE6XCIjZmYwMDk5XCIsYmFzZTBCOlwiIzMzZmYwMFwiLGJhc2UwQzpcIiMwMGZmZmZcIixiYXNlMEQ6XCIjMDA2NmZmXCIsYmFzZTBFOlwiI2NjMDBmZlwiLGJhc2UwRjpcIiMzMzAwZmZcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcIm1hcnJha2VzaFwiLGF1dGhvcjpcImFsZXhhbmRyZSBnYXZpb2xpIChodHRwOi8vZ2l0aHViLmNvbS9hbGV4eDIvKVwiLGJhc2UwMDpcIiMyMDE2MDJcIixiYXNlMDE6XCIjMzAyZTAwXCIsYmFzZTAyOlwiIzVmNWIxN1wiLGJhc2UwMzpcIiM2YzY4MjNcIixiYXNlMDQ6XCIjODY4MTNiXCIsYmFzZTA1OlwiIzk0OGU0OFwiLGJhc2UwNjpcIiNjY2MzN2FcIixiYXNlMDc6XCIjZmFmMGE1XCIsYmFzZTA4OlwiI2MzNTM1OVwiLGJhc2UwOTpcIiNiMzYxNDRcIixiYXNlMEE6XCIjYTg4MzM5XCIsYmFzZTBCOlwiIzE4OTc0ZVwiLGJhc2UwQzpcIiM3NWE3MzhcIixiYXNlMEQ6XCIjNDc3Y2ExXCIsYmFzZTBFOlwiIzg4NjhiM1wiLGJhc2UwRjpcIiNiMzU4OGVcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcIm1vY2hhXCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzNCMzIyOFwiLGJhc2UwMTpcIiM1MzQ2MzZcIixiYXNlMDI6XCIjNjQ1MjQwXCIsYmFzZTAzOlwiIzdlNzA1YVwiLGJhc2UwNDpcIiNiOGFmYWRcIixiYXNlMDU6XCIjZDBjOGM2XCIsYmFzZTA2OlwiI2U5ZTFkZFwiLGJhc2UwNzpcIiNmNWVlZWJcIixiYXNlMDg6XCIjY2I2MDc3XCIsYmFzZTA5OlwiI2QyOGI3MVwiLGJhc2UwQTpcIiNmNGJjODdcIixiYXNlMEI6XCIjYmViNTViXCIsYmFzZTBDOlwiIzdiYmRhNFwiLGJhc2UwRDpcIiM4YWIzYjVcIixiYXNlMEU6XCIjYTg5YmI5XCIsYmFzZTBGOlwiI2JiOTU4NFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwibW9ub2thaVwiLGF1dGhvcjpcIndpbWVyIGhhemVuYmVyZyAoaHR0cDovL3d3dy5tb25va2FpLm5sKVwiLGJhc2UwMDpcIiMyNzI4MjJcIixiYXNlMDE6XCIjMzgzODMwXCIsYmFzZTAyOlwiIzQ5NDgzZVwiLGJhc2UwMzpcIiM3NTcxNWVcIixiYXNlMDQ6XCIjYTU5Zjg1XCIsYmFzZTA1OlwiI2Y4ZjhmMlwiLGJhc2UwNjpcIiNmNWY0ZjFcIixiYXNlMDc6XCIjZjlmOGY1XCIsYmFzZTA4OlwiI2Y5MjY3MlwiLGJhc2UwOTpcIiNmZDk3MWZcIixiYXNlMEE6XCIjZjRiZjc1XCIsYmFzZTBCOlwiI2E2ZTIyZVwiLGJhc2UwQzpcIiNhMWVmZTRcIixiYXNlMEQ6XCIjNjZkOWVmXCIsYmFzZTBFOlwiI2FlODFmZlwiLGJhc2UwRjpcIiNjYzY2MzNcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcIm9jZWFuXCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzJiMzAzYlwiLGJhc2UwMTpcIiMzNDNkNDZcIixiYXNlMDI6XCIjNGY1YjY2XCIsYmFzZTAzOlwiIzY1NzM3ZVwiLGJhc2UwNDpcIiNhN2FkYmFcIixiYXNlMDU6XCIjYzBjNWNlXCIsYmFzZTA2OlwiI2RmZTFlOFwiLGJhc2UwNzpcIiNlZmYxZjVcIixiYXNlMDg6XCIjYmY2MTZhXCIsYmFzZTA5OlwiI2QwODc3MFwiLGJhc2UwQTpcIiNlYmNiOGJcIixiYXNlMEI6XCIjYTNiZThjXCIsYmFzZTBDOlwiIzk2YjViNFwiLGJhc2UwRDpcIiM4ZmExYjNcIixiYXNlMEU6XCIjYjQ4ZWFkXCIsYmFzZTBGOlwiI2FiNzk2N1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwicGFyYWlzb1wiLGF1dGhvcjpcImphbiB0LiBzb3R0XCIsYmFzZTAwOlwiIzJmMWUyZVwiLGJhc2UwMTpcIiM0MTMyM2ZcIixiYXNlMDI6XCIjNGY0MjRjXCIsYmFzZTAzOlwiIzc3NmU3MVwiLGJhc2UwNDpcIiM4ZDg2ODdcIixiYXNlMDU6XCIjYTM5ZTliXCIsYmFzZTA2OlwiI2I5YjZiMFwiLGJhc2UwNzpcIiNlN2U5ZGJcIixiYXNlMDg6XCIjZWY2MTU1XCIsYmFzZTA5OlwiI2Y5OWIxNVwiLGJhc2UwQTpcIiNmZWM0MThcIixiYXNlMEI6XCIjNDhiNjg1XCIsYmFzZTBDOlwiIzViYzRiZlwiLGJhc2UwRDpcIiMwNmI2ZWZcIixiYXNlMEU6XCIjODE1YmE0XCIsYmFzZTBGOlwiI2U5NmJhOFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwicG9wXCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzAwMDAwMFwiLGJhc2UwMTpcIiMyMDIwMjBcIixiYXNlMDI6XCIjMzAzMDMwXCIsYmFzZTAzOlwiIzUwNTA1MFwiLGJhc2UwNDpcIiNiMGIwYjBcIixiYXNlMDU6XCIjZDBkMGQwXCIsYmFzZTA2OlwiI2UwZTBlMFwiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjZWIwMDhhXCIsYmFzZTA5OlwiI2YyOTMzM1wiLGJhc2UwQTpcIiNmOGNhMTJcIixiYXNlMEI6XCIjMzdiMzQ5XCIsYmFzZTBDOlwiIzAwYWFiYlwiLGJhc2UwRDpcIiMwZTVhOTRcIixiYXNlMEU6XCIjYjMxZThkXCIsYmFzZTBGOlwiIzdhMmQwMFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwicmFpbHNjYXN0c1wiLGF1dGhvcjpcInJ5YW4gYmF0ZXMgKGh0dHA6Ly9yYWlsc2Nhc3RzLmNvbSlcIixiYXNlMDA6XCIjMmIyYjJiXCIsYmFzZTAxOlwiIzI3MjkzNVwiLGJhc2UwMjpcIiMzYTQwNTVcIixiYXNlMDM6XCIjNWE2NDdlXCIsYmFzZTA0OlwiI2Q0Y2ZjOVwiLGJhc2UwNTpcIiNlNmUxZGNcIixiYXNlMDY6XCIjZjRmMWVkXCIsYmFzZTA3OlwiI2Y5ZjdmM1wiLGJhc2UwODpcIiNkYTQ5MzlcIixiYXNlMDk6XCIjY2M3ODMzXCIsYmFzZTBBOlwiI2ZmYzY2ZFwiLGJhc2UwQjpcIiNhNWMyNjFcIixiYXNlMEM6XCIjNTE5ZjUwXCIsYmFzZTBEOlwiIzZkOWNiZVwiLGJhc2UwRTpcIiNiNmIzZWJcIixiYXNlMEY6XCIjYmM5NDU4XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJzaGFwZXNoaWZ0ZXJcIixhdXRob3I6XCJ0eWxlciBiZW56aWdlciAoaHR0cDovL3R5YmVuei5jb20pXCIsYmFzZTAwOlwiIzAwMDAwMFwiLGJhc2UwMTpcIiMwNDA0MDRcIixiYXNlMDI6XCIjMTAyMDE1XCIsYmFzZTAzOlwiIzM0MzQzNFwiLGJhc2UwNDpcIiM1NTU1NTVcIixiYXNlMDU6XCIjYWJhYmFiXCIsYmFzZTA2OlwiI2UwZTBlMFwiLGJhc2UwNzpcIiNmOWY5ZjlcIixiYXNlMDg6XCIjZTkyZjJmXCIsYmFzZTA5OlwiI2UwOTQ0OFwiLGJhc2UwQTpcIiNkZGRkMTNcIixiYXNlMEI6XCIjMGVkODM5XCIsYmFzZTBDOlwiIzIzZWRkYVwiLGJhc2UwRDpcIiMzYjQ4ZTNcIixiYXNlMEU6XCIjZjk5NmUyXCIsYmFzZTBGOlwiIzY5NTQyZFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwic29sYXJpemVkXCIsYXV0aG9yOlwiZXRoYW4gc2Nob29ub3ZlciAoaHR0cDovL2V0aGFuc2Nob29ub3Zlci5jb20vc29sYXJpemVkKVwiLGJhc2UwMDpcIiMwMDJiMzZcIixiYXNlMDE6XCIjMDczNjQyXCIsYmFzZTAyOlwiIzU4NmU3NVwiLGJhc2UwMzpcIiM2NTdiODNcIixiYXNlMDQ6XCIjODM5NDk2XCIsYmFzZTA1OlwiIzkzYTFhMVwiLGJhc2UwNjpcIiNlZWU4ZDVcIixiYXNlMDc6XCIjZmRmNmUzXCIsYmFzZTA4OlwiI2RjMzIyZlwiLGJhc2UwOTpcIiNjYjRiMTZcIixiYXNlMEE6XCIjYjU4OTAwXCIsYmFzZTBCOlwiIzg1OTkwMFwiLGJhc2UwQzpcIiMyYWExOThcIixiYXNlMEQ6XCIjMjY4YmQyXCIsYmFzZTBFOlwiIzZjNzFjNFwiLGJhc2UwRjpcIiNkMzM2ODJcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInN1bW1lcmZydWl0XCIsYXV0aG9yOlwiY2hyaXN0b3BoZXIgY29ybGV5IChodHRwOi8vY3Njb3JsZXkuZ2l0aHViLmlvLylcIixiYXNlMDA6XCIjMTUxNTE1XCIsYmFzZTAxOlwiIzIwMjAyMFwiLGJhc2UwMjpcIiMzMDMwMzBcIixiYXNlMDM6XCIjNTA1MDUwXCIsYmFzZTA0OlwiI0IwQjBCMFwiLGJhc2UwNTpcIiNEMEQwRDBcIixiYXNlMDY6XCIjRTBFMEUwXCIsYmFzZTA3OlwiI0ZGRkZGRlwiLGJhc2UwODpcIiNGRjAwODZcIixiYXNlMDk6XCIjRkQ4OTAwXCIsYmFzZTBBOlwiI0FCQTgwMFwiLGJhc2UwQjpcIiMwMEM5MThcIixiYXNlMEM6XCIjMWZhYWFhXCIsYmFzZTBEOlwiIzM3NzdFNlwiLGJhc2UwRTpcIiNBRDAwQTFcIixiYXNlMEY6XCIjY2M2NjMzXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJ0b21vcnJvd1wiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMxZDFmMjFcIixiYXNlMDE6XCIjMjgyYTJlXCIsYmFzZTAyOlwiIzM3M2I0MVwiLGJhc2UwMzpcIiM5Njk4OTZcIixiYXNlMDQ6XCIjYjRiN2I0XCIsYmFzZTA1OlwiI2M1YzhjNlwiLGJhc2UwNjpcIiNlMGUwZTBcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2NjNjY2NlwiLGJhc2UwOTpcIiNkZTkzNWZcIixiYXNlMEE6XCIjZjBjNjc0XCIsYmFzZTBCOlwiI2I1YmQ2OFwiLGJhc2UwQzpcIiM4YWJlYjdcIixiYXNlMEQ6XCIjODFhMmJlXCIsYmFzZTBFOlwiI2IyOTRiYlwiLGJhc2UwRjpcIiNhMzY4NWFcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImxvbmRvbiB0dWJlXCIsYXV0aG9yOlwiamFuIHQuIHNvdHRcIixiYXNlMDA6XCIjMjMxZjIwXCIsYmFzZTAxOlwiIzFjM2Y5NVwiLGJhc2UwMjpcIiM1YTU3NThcIixiYXNlMDM6XCIjNzM3MTcxXCIsYmFzZTA0OlwiIzk1OWNhMVwiLGJhc2UwNTpcIiNkOWQ4ZDhcIixiYXNlMDY6XCIjZTdlN2U4XCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNlZTJlMjRcIixiYXNlMDk6XCIjZjM4NmExXCIsYmFzZTBBOlwiI2ZmZDIwNFwiLGJhc2UwQjpcIiMwMDg1M2VcIixiYXNlMEM6XCIjODVjZWJjXCIsYmFzZTBEOlwiIzAwOWRkY1wiLGJhc2UwRTpcIiM5ODAwNWRcIixiYXNlMEY6XCIjYjA2MTEwXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJ0d2lsaWdodFwiLGF1dGhvcjpcImRhdmlkIGhhcnQgKGh0dHA6Ly9oYXJ0LWRldi5jb20pXCIsYmFzZTAwOlwiIzFlMWUxZVwiLGJhc2UwMTpcIiMzMjM1MzdcIixiYXNlMDI6XCIjNDY0YjUwXCIsYmFzZTAzOlwiIzVmNWE2MFwiLGJhc2UwNDpcIiM4MzgxODRcIixiYXNlMDU6XCIjYTdhN2E3XCIsYmFzZTA2OlwiI2MzYzNjM1wiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjY2Y2YTRjXCIsYmFzZTA5OlwiI2NkYTg2OVwiLGJhc2UwQTpcIiNmOWVlOThcIixiYXNlMEI6XCIjOGY5ZDZhXCIsYmFzZTBDOlwiI2FmYzRkYlwiLGJhc2UwRDpcIiM3NTg3YTZcIixiYXNlMEU6XCIjOWI4NTlkXCIsYmFzZTBGOlwiIzliNzAzZlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlKXt2YXIgdD1NYXRoLnJvdW5kKG8oZSwwLDI1NSkpLG49dC50b1N0cmluZygxNik7cmV0dXJuIDE9PW4ubGVuZ3RoP1wiMFwiK246bn1mdW5jdGlvbiBhKGUpe3ZhciB0PTQ9PT1lLmxlbmd0aD9yKDI1NSplWzNdKTpcIlwiO3JldHVyblwiI1wiK3IoZVswXSkrcihlWzFdKStyKGVbMl0pK3R9dmFyIG89big0MCk7ZS5leHBvcnRzPWF9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUpe3ZhciB0PW8oZSksbj11KHQpO3JldHVybiA0PT09dC5sZW5ndGgmJm4ucHVzaCh0WzNdKSxufWZ1bmN0aW9uIGEoZSl7Zm9yKHZhciB0IGluIGwpaWYoMD09PWUuaW5kZXhPZih0KSlyZXR1cm4gbFt0XShlKX12YXIgbz1uKDE1MiksaT1uKDE1Mykscz1uKDE1NCksdT1uKDE1NSksbD17XCIjXCI6aSxoc2w6cixyZ2I6c307YS5yZ2I9cyxhLmhzbD1vLGEuaGV4PWksZS5leHBvcnRzPWF9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCl7c3dpdGNoKGU9cGFyc2VGbG9hdChlKSx0KXtjYXNlIDA6cmV0dXJuIGkoZSwwLDM2MCk7Y2FzZSAxOmNhc2UgMjpyZXR1cm4gaShlLDAsMTAwKTtjYXNlIDM6cmV0dXJuIGkoZSwwLDEpfX1mdW5jdGlvbiBhKGUpe3JldHVybiBvKGUpLm1hcChyKX12YXIgbz1uKDUzKSxpPW4oNDApO2UuZXhwb3J0cz1hfSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSl7Zm9yKHZhciB0PVwiI1wiLG49MTtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZS5jaGFyQXQobik7dCs9cityfXJldHVybiB0fWZ1bmN0aW9uIHIoZSl7NCE9PWUubGVuZ3RoJiY1IT09ZS5sZW5ndGh8fChlPW4oZSkpO3ZhciB0PVtwYXJzZUludChlLnN1YnN0cmluZygxLDMpLDE2KSxwYXJzZUludChlLnN1YnN0cmluZygzLDUpLDE2KSxwYXJzZUludChlLnN1YnN0cmluZyg1LDcpLDE2KV07aWYoOT09PWUubGVuZ3RoKXt2YXIgcj1wYXJzZUZsb2F0KChwYXJzZUludChlLnN1YnN0cmluZyg3LDkpLDE2KS8yNTUpLnRvRml4ZWQoMikpO3QucHVzaChyKX1yZXR1cm4gdH1lLmV4cG9ydHM9cn0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0KXtyZXR1cm4gdDwzPy0xIT1lLmluZGV4T2YoXCIlXCIpP01hdGgucm91bmQoMjU1KmkocGFyc2VJbnQoZSwxMCksMCwxMDApLzEwMCk6aShwYXJzZUludChlLDEwKSwwLDI1NSk6aShwYXJzZUZsb2F0KGUpLDAsMSl9ZnVuY3Rpb24gYShlKXtyZXR1cm4gbyhlKS5tYXAocil9dmFyIG89big1MyksaT1uKDQwKTtlLmV4cG9ydHM9YX0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKGUpe3ZhciB0LG4scixhLG8saT1lWzBdLzM2MCxzPWVbMV0vMTAwLHU9ZVsyXS8xMDA7aWYoMD09cylyZXR1cm4gbz0yNTUqdSxbbyxvLG9dO249dTwuNT91KigxK3MpOnUrcy11KnMsdD0yKnUtbixhPVswLDAsMF07Zm9yKHZhciBsPTA7bDwzO2wrKylyPWkrMS8zKi0obC0xKSxyPDAmJnIrKyxyPjEmJnItLSxvPTYqcjwxP3QrNioobi10KSpyOjIqcjwxP246MypyPDI/dCsobi10KSooMi8zLXIpKjY6dCxhW2xdPTI1NSpvO3JldHVybiBhfWUuZXhwb3J0cz1ufSxmdW5jdGlvbihlLHQsbil7KGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oZSx0LG4pe3N3aXRjaChuLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBlLmNhbGwodCk7Y2FzZSAxOnJldHVybiBlLmNhbGwodCxuWzBdKTtjYXNlIDI6cmV0dXJuIGUuY2FsbCh0LG5bMF0sblsxXSk7Y2FzZSAzOnJldHVybiBlLmNhbGwodCxuWzBdLG5bMV0sblsyXSl9cmV0dXJuIGUuYXBwbHkodCxuKX1mdW5jdGlvbiByKGUsdCl7Zm9yKHZhciBuPS0xLHI9dC5sZW5ndGgsYT1lLmxlbmd0aDsrK248cjspZVthK25dPXRbbl07cmV0dXJuIGV9ZnVuY3Rpb24gYShlLHQsbixvLHMpe3ZhciB1PS0xLGw9ZS5sZW5ndGg7Zm9yKG58fChuPWkpLHN8fChzPVtdKTsrK3U8bDspe3ZhciBjPWVbdV07dD4wJiZuKGMpP3Q+MT9hKGMsdC0xLG4sbyxzKTpyKHMsYyk6b3x8KHNbcy5sZW5ndGhdPWMpfXJldHVybiBzfWZ1bmN0aW9uIG8oZSx0KXtyZXR1cm4gdD1rKHZvaWQgMD09PXQ/ZS5sZW5ndGgtMTp0LDApLGZ1bmN0aW9uKCl7Zm9yKHZhciByPWFyZ3VtZW50cyxhPS0xLG89ayhyLmxlbmd0aC10LDApLGk9QXJyYXkobyk7KythPG87KWlbYV09clt0K2FdO2E9LTE7Zm9yKHZhciBzPUFycmF5KHQrMSk7KythPHQ7KXNbYV09clthXTtyZXR1cm4gc1t0XT1pLG4oZSx0aGlzLHMpfX1mdW5jdGlvbiBpKGUpe3JldHVybiBQKGUpfHxzKGUpfHwhIShDJiZlJiZlW0NdKX1mdW5jdGlvbiBzKGUpe3JldHVybiBsKGUpJiZPLmNhbGwoZSxcImNhbGxlZVwiKSYmKCF4LmNhbGwoZSxcImNhbGxlZVwiKXx8RS5jYWxsKGUpPT1oKX1mdW5jdGlvbiB1KGUpe3JldHVybiBudWxsIT1lJiZmKGUubGVuZ3RoKSYmIWMoZSl9ZnVuY3Rpb24gbChlKXtyZXR1cm4gcChlKSYmdShlKX1mdW5jdGlvbiBjKGUpe3ZhciB0PWQoZSk/RS5jYWxsKGUpOlwiXCI7cmV0dXJuIHQ9PXl8fHQ9PXZ9ZnVuY3Rpb24gZihlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZSYmZT4tMSYmZSUxPT0wJiZlPD1ifWZ1bmN0aW9uIGQoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuISFlJiYoXCJvYmplY3RcIj09dHx8XCJmdW5jdGlvblwiPT10KX1mdW5jdGlvbiBwKGUpe3JldHVybiEhZSYmXCJvYmplY3RcIj09dHlwZW9mIGV9dmFyIGI9OTAwNzE5OTI1NDc0MDk5MSxoPVwiW29iamVjdCBBcmd1bWVudHNdXCIseT1cIltvYmplY3QgRnVuY3Rpb25dXCIsdj1cIltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dXCIsbT1cIm9iamVjdFwiPT10eXBlb2YgdCYmdCYmdC5PYmplY3Q9PT1PYmplY3QmJnQsZz1cIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGYsXz1tfHxnfHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCksaj1PYmplY3QucHJvdG90eXBlLE89ai5oYXNPd25Qcm9wZXJ0eSxFPWoudG9TdHJpbmcsdz1fLlN5bWJvbCx4PWoucHJvcGVydHlJc0VudW1lcmFibGUsQz13P3cuaXNDb25jYXRTcHJlYWRhYmxlOnZvaWQgMCxrPU1hdGgubWF4LFA9QXJyYXkuaXNBcnJheSxTPWZ1bmN0aW9uKGUpe3JldHVybiBvKGZ1bmN0aW9uKGUpe2U9YShlLDEpO3ZhciB0PWUubGVuZ3RoLG49dDtmb3Iodm9pZCAwO24tLTspaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZVtuXSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYSBmdW5jdGlvblwiKTtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIG49MCxyPXQ/ZVtuXS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6YXJndW1lbnRzWzBdOysrbjx0OylyPWVbbl0uY2FsbCh0aGlzLHIpO3JldHVybiByfX0pfSgpO2UuZXhwb3J0cz1TfSkuY2FsbCh0LG4oNTIpKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7dmFyIHQsbixyLGE9ZVswXSxvPWVbMV0saT1lWzJdO3JldHVybiB0PTEqYSswKm8rMS4xMzk4MyppLG49MSphKy0uMzk0NjUqbystLjU4MDYqaSxyPTEqYSsyLjAyMzExKm8rMCppLHQ9TWF0aC5taW4oTWF0aC5tYXgoMCx0KSwxKSxuPU1hdGgubWluKE1hdGgubWF4KDAsbiksMSkscj1NYXRoLm1pbihNYXRoLm1heCgwLHIpLDEpLFsyNTUqdCwyNTUqbiwyNTUqcl19ZnVuY3Rpb24gYShlKXt2YXIgdD1lWzBdLzI1NSxuPWVbMV0vMjU1LHI9ZVsyXS8yNTU7cmV0dXJuWy4yOTkqdCsuNTg3Km4rLjExNCpyLC0uMTQ3MTMqdCstLjI4ODg2Km4rLjQzNipyLC42MTUqdCstLjUxNDk5Km4rLS4xMDAwMSpyXX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0Lnl1djJyZ2I9cix0LnJnYjJ5dXY9YX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDYpLGQ9cihmKSxwPW4oMSksYj1yKHApLGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9e3dlZWtkYXk6XCJzaG9ydFwiLHllYXI6XCJudW1lcmljXCIsbW9udGg6XCJzaG9ydFwiLGRheTpcIm51bWVyaWNcIixob3VyOlwiMi1kaWdpdFwiLG1pbnV0ZTpcIjItZGlnaXRcIn07cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiZGF0ZVwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChkLmRlZmF1bHQscyh7dHlwZV9uYW1lOlwiZGF0ZVwifSxlKSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIscyh7Y2xhc3NOYW1lOlwiZGF0ZS12YWx1ZVwifSwoMCxiLmRlZmF1bHQpKGUudGhlbWUsXCJkYXRlLXZhbHVlXCIpKSxlLnZhbHVlLnRvTG9jYWxlVGltZVN0cmluZyhcImVuLXVzXCIsdCkpKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1ofSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9bigxKSxiPXIocCksaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHM7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiZmxvYXRcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZC5kZWZhdWx0LHMoe3R5cGVfbmFtZTpcImZsb2F0XCJ9LGUpKSx0aGlzLnByb3BzLnZhbHVlKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1ofSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9bigxKSxiPXIocCksaD1uKDEzKSx5PXIoaCksdj1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe2EodGhpcyx0KTt2YXIgbj1vKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwodGhpcyxlKSk7cmV0dXJuIG0uY2FsbChuKSxuLnN0YXRlPXtjb2xsYXBzZWQ6eS5kZWZhdWx0LmdldChlLnJqdklkLGUubmFtZXNwYWNlLFwiY29sbGFwc2VkXCIsITApfSxufXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9dGhpcy5zdGF0ZS5jb2xsYXBzZWQ7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiZnVuY3Rpb25cIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZC5kZWZhdWx0LHMoe3R5cGVfbmFtZTpcImZ1bmN0aW9uXCJ9LGUpKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixzKHt9LCgwLGIuZGVmYXVsdCkoZS50aGVtZSxcImZ1bmN0aW9uLXZhbHVlXCIpLHtjbGFzc05hbWU6XCJyanYtZnVuY3Rpb24tY29udGFpbmVyXCIsb25DbGljazp0aGlzLnRvZ2dsZUNvbGxhcHNlZH0pLHRoaXMuZ2V0RnVuY3Rpb25EaXNwbGF5KHQpKSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSxtPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLnRvZ2dsZUNvbGxhcHNlZD1mdW5jdGlvbigpe2Uuc2V0U3RhdGUoe2NvbGxhcHNlZDohZS5zdGF0ZS5jb2xsYXBzZWR9LGZ1bmN0aW9uKCl7eS5kZWZhdWx0LnNldChlLnByb3BzLnJqdklkLGUucHJvcHMubmFtZXNwYWNlLFwiY29sbGFwc2VkXCIsZS5zdGF0ZS5jb2xsYXBzZWQpfSl9LHRoaXMuZ2V0RnVuY3Rpb25EaXNwbGF5PWZ1bmN0aW9uKHQpe3ZhciBuPWUucHJvcHM7cmV0dXJuIHQ/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxlLnByb3BzLnZhbHVlLnRvU3RyaW5nKCkuc2xpY2UoOSwtMSkucmVwbGFjZSgvXFx7W1xcc1xcU10rLyxcIlwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwiZnVuY3Rpb24tY29sbGFwc2VkXCIsc3R5bGU6e2ZvbnRXZWlnaHQ6XCJib2xkXCJ9fSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLFwie1wiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxiLmRlZmF1bHQpKG4udGhlbWUsXCJlbGxpcHNpc1wiKSxcIi4uLlwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLFwifVwiKSkpOmUucHJvcHMudmFsdWUudG9TdHJpbmcoKS5zbGljZSg5LC0xKX19O3QuZGVmYXVsdD12fSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oKXt0aGlzLl9ldmVudHM9dGhpcy5fZXZlbnRzfHx7fSx0aGlzLl9tYXhMaXN0ZW5lcnM9dGhpcy5fbWF4TGlzdGVuZXJzfHx2b2lkIDB9ZnVuY3Rpb24gcihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfWZ1bmN0aW9uIGEoZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV9ZnVuY3Rpb24gbyhlKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWV9ZnVuY3Rpb24gaShlKXtyZXR1cm4gdm9pZCAwPT09ZX1lLmV4cG9ydHM9bixuLkV2ZW50RW1pdHRlcj1uLG4ucHJvdG90eXBlLl9ldmVudHM9dm9pZCAwLG4ucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnM9dm9pZCAwLG4uZGVmYXVsdE1heExpc3RlbmVycz0xMCxuLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24oZSl7aWYoIWEoZSl8fGU8MHx8aXNOYU4oZSkpdGhyb3cgVHlwZUVycm9yKFwibiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyXCIpO3JldHVybiB0aGlzLl9tYXhMaXN0ZW5lcnM9ZSx0aGlzfSxuLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKGUpe3ZhciB0LG4sYSxzLHUsbDtpZih0aGlzLl9ldmVudHN8fCh0aGlzLl9ldmVudHM9e30pLFwiZXJyb3JcIj09PWUmJighdGhpcy5fZXZlbnRzLmVycm9yfHxvKHRoaXMuX2V2ZW50cy5lcnJvcikmJiF0aGlzLl9ldmVudHMuZXJyb3IubGVuZ3RoKSl7aWYoKHQ9YXJndW1lbnRzWzFdKWluc3RhbmNlb2YgRXJyb3IpdGhyb3cgdDt2YXIgYz1uZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCBcImVycm9yXCIgZXZlbnQuICgnK3QrXCIpXCIpO3Rocm93IGMuY29udGV4dD10LGN9aWYobj10aGlzLl9ldmVudHNbZV0saShuKSlyZXR1cm4hMTtpZihyKG4pKXN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDE6bi5jYWxsKHRoaXMpO2JyZWFrO2Nhc2UgMjpuLmNhbGwodGhpcyxhcmd1bWVudHNbMV0pO2JyZWFrO2Nhc2UgMzpuLmNhbGwodGhpcyxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdKTticmVhaztkZWZhdWx0OnM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLG4uYXBwbHkodGhpcyxzKX1lbHNlIGlmKG8obikpZm9yKHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLGw9bi5zbGljZSgpLGE9bC5sZW5ndGgsdT0wO3U8YTt1KyspbFt1XS5hcHBseSh0aGlzLHMpO3JldHVybiEwfSxuLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3ZhciBhO2lmKCFyKHQpKXRocm93IFR5cGVFcnJvcihcImxpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvblwiKTtyZXR1cm4gdGhpcy5fZXZlbnRzfHwodGhpcy5fZXZlbnRzPXt9KSx0aGlzLl9ldmVudHMubmV3TGlzdGVuZXImJnRoaXMuZW1pdChcIm5ld0xpc3RlbmVyXCIsZSxyKHQubGlzdGVuZXIpP3QubGlzdGVuZXI6dCksdGhpcy5fZXZlbnRzW2VdP28odGhpcy5fZXZlbnRzW2VdKT90aGlzLl9ldmVudHNbZV0ucHVzaCh0KTp0aGlzLl9ldmVudHNbZV09W3RoaXMuX2V2ZW50c1tlXSx0XTp0aGlzLl9ldmVudHNbZV09dCxvKHRoaXMuX2V2ZW50c1tlXSkmJiF0aGlzLl9ldmVudHNbZV0ud2FybmVkJiYoYT1pKHRoaXMuX21heExpc3RlbmVycyk/bi5kZWZhdWx0TWF4TGlzdGVuZXJzOnRoaXMuX21heExpc3RlbmVycykmJmE+MCYmdGhpcy5fZXZlbnRzW2VdLmxlbmd0aD5hJiYodGhpcy5fZXZlbnRzW2VdLndhcm5lZD0hMCxjb25zb2xlLmVycm9yKFwiKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gJWQgbGlzdGVuZXJzIGFkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdC5cIix0aGlzLl9ldmVudHNbZV0ubGVuZ3RoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBjb25zb2xlLnRyYWNlJiZjb25zb2xlLnRyYWNlKCkpLHRoaXN9LG4ucHJvdG90eXBlLm9uPW4ucHJvdG90eXBlLmFkZExpc3RlbmVyLG4ucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKCl7dGhpcy5yZW1vdmVMaXN0ZW5lcihlLG4pLGF8fChhPSEwLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1pZighcih0KSl0aHJvdyBUeXBlRXJyb3IoXCJsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7dmFyIGE9ITE7cmV0dXJuIG4ubGlzdGVuZXI9dCx0aGlzLm9uKGUsbiksdGhpc30sbi5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24oZSx0KXt2YXIgbixhLGkscztpZighcih0KSl0aHJvdyBUeXBlRXJyb3IoXCJsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7aWYoIXRoaXMuX2V2ZW50c3x8IXRoaXMuX2V2ZW50c1tlXSlyZXR1cm4gdGhpcztpZihuPXRoaXMuX2V2ZW50c1tlXSxpPW4ubGVuZ3RoLGE9LTEsbj09PXR8fHIobi5saXN0ZW5lcikmJm4ubGlzdGVuZXI9PT10KWRlbGV0ZSB0aGlzLl9ldmVudHNbZV0sdGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0ZW5lclwiLGUsdCk7ZWxzZSBpZihvKG4pKXtmb3Iocz1pO3MtLSA+MDspaWYobltzXT09PXR8fG5bc10ubGlzdGVuZXImJm5bc10ubGlzdGVuZXI9PT10KXthPXM7YnJlYWt9aWYoYTwwKXJldHVybiB0aGlzOzE9PT1uLmxlbmd0aD8obi5sZW5ndGg9MCxkZWxldGUgdGhpcy5fZXZlbnRzW2VdKTpuLnNwbGljZShhLDEpLHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIixlLHQpfXJldHVybiB0aGlzfSxuLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24oZSl7dmFyIHQsbjtpZighdGhpcy5fZXZlbnRzKXJldHVybiB0aGlzO2lmKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpcmV0dXJuIDA9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuX2V2ZW50cz17fTp0aGlzLl9ldmVudHNbZV0mJmRlbGV0ZSB0aGlzLl9ldmVudHNbZV0sdGhpcztpZigwPT09YXJndW1lbnRzLmxlbmd0aCl7Zm9yKHQgaW4gdGhpcy5fZXZlbnRzKVwicmVtb3ZlTGlzdGVuZXJcIiE9PXQmJnRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKHQpO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlbW92ZUxpc3RlbmVyXCIpLHRoaXMuX2V2ZW50cz17fSx0aGlzfWlmKG49dGhpcy5fZXZlbnRzW2VdLHIobikpdGhpcy5yZW1vdmVMaXN0ZW5lcihlLG4pO2Vsc2UgaWYobilmb3IoO24ubGVuZ3RoOyl0aGlzLnJlbW92ZUxpc3RlbmVyKGUsbltuLmxlbmd0aC0xXSk7cmV0dXJuIGRlbGV0ZSB0aGlzLl9ldmVudHNbZV0sdGhpc30sbi5wcm90b3R5cGUubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9ldmVudHMmJnRoaXMuX2V2ZW50c1tlXT9yKHRoaXMuX2V2ZW50c1tlXSk/W3RoaXMuX2V2ZW50c1tlXV06dGhpcy5fZXZlbnRzW2VdLnNsaWNlKCk6W119LG4ucHJvdG90eXBlLmxpc3RlbmVyQ291bnQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5fZXZlbnRzKXt2YXIgdD10aGlzLl9ldmVudHNbZV07aWYocih0KSlyZXR1cm4gMTtpZih0KXJldHVybiB0Lmxlbmd0aH1yZXR1cm4gMH0sbi5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUubGlzdGVuZXJDb3VudCh0KX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHMuRGlzcGF0Y2hlcj1uKDE2Myl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX10Ll9fZXNNb2R1bGU9ITA7dmFyIGE9bigxNjQpLG89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7cih0aGlzLGUpLHRoaXMuX2NhbGxiYWNrcz17fSx0aGlzLl9pc0Rpc3BhdGNoaW5nPSExLHRoaXMuX2lzSGFuZGxlZD17fSx0aGlzLl9pc1BlbmRpbmc9e30sdGhpcy5fbGFzdElEPTF9cmV0dXJuIGUucHJvdG90eXBlLnJlZ2lzdGVyPWZ1bmN0aW9uKGUpe3ZhciB0PVwiSURfXCIrdGhpcy5fbGFzdElEKys7cmV0dXJuIHRoaXMuX2NhbGxiYWNrc1t0XT1lLHR9LGUucHJvdG90eXBlLnVucmVnaXN0ZXI9ZnVuY3Rpb24oZSl7dGhpcy5fY2FsbGJhY2tzW2VdfHxhKCExKSxkZWxldGUgdGhpcy5fY2FsbGJhY2tzW2VdfSxlLnByb3RvdHlwZS53YWl0Rm9yPWZ1bmN0aW9uKGUpe3RoaXMuX2lzRGlzcGF0Y2hpbmd8fGEoITEpO2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKXt2YXIgbj1lW3RdO3RoaXMuX2lzUGVuZGluZ1tuXT90aGlzLl9pc0hhbmRsZWRbbl18fGEoITEpOih0aGlzLl9jYWxsYmFja3Nbbl18fGEoITEpLHRoaXMuX2ludm9rZUNhbGxiYWNrKG4pKX19LGUucHJvdG90eXBlLmRpc3BhdGNoPWZ1bmN0aW9uKGUpe3RoaXMuX2lzRGlzcGF0Y2hpbmcmJmEoITEpLHRoaXMuX3N0YXJ0RGlzcGF0Y2hpbmcoZSk7dHJ5e2Zvcih2YXIgdCBpbiB0aGlzLl9jYWxsYmFja3MpdGhpcy5faXNQZW5kaW5nW3RdfHx0aGlzLl9pbnZva2VDYWxsYmFjayh0KX1maW5hbGx5e3RoaXMuX3N0b3BEaXNwYXRjaGluZygpfX0sZS5wcm90b3R5cGUuaXNEaXNwYXRjaGluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0Rpc3BhdGNoaW5nfSxlLnByb3RvdHlwZS5faW52b2tlQ2FsbGJhY2s9ZnVuY3Rpb24oZSl7dGhpcy5faXNQZW5kaW5nW2VdPSEwLHRoaXMuX2NhbGxiYWNrc1tlXSh0aGlzLl9wZW5kaW5nUGF5bG9hZCksdGhpcy5faXNIYW5kbGVkW2VdPSEwfSxlLnByb3RvdHlwZS5fc3RhcnREaXNwYXRjaGluZz1mdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gdGhpcy5fY2FsbGJhY2tzKXRoaXMuX2lzUGVuZGluZ1t0XT0hMSx0aGlzLl9pc0hhbmRsZWRbdF09ITE7dGhpcy5fcGVuZGluZ1BheWxvYWQ9ZSx0aGlzLl9pc0Rpc3BhdGNoaW5nPSEwfSxlLnByb3RvdHlwZS5fc3RvcERpc3BhdGNoaW5nPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuX3BlbmRpbmdQYXlsb2FkLHRoaXMuX2lzRGlzcGF0Y2hpbmc9ITF9LGV9KCk7ZS5leHBvcnRzPW99LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUsdCxuLHIsbyxpLHMsdSl7aWYoYSh0KSwhZSl7dmFyIGw7aWYodm9pZCAwPT09dClsPW5ldyBFcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGM9W24scixvLGkscyx1XSxmPTA7bD1uZXcgRXJyb3IodC5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGNbZisrXX0pKSxsLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9dGhyb3cgbC5mcmFtZXNUb1BvcD0xLGx9fXZhciBhPWZ1bmN0aW9uKGUpe307ZS5leHBvcnRzPXJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksdT1uKDApLGw9cih1KSxjPW4oMSksZj1yKGMpLGQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSkscyh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCxmLmRlZmF1bHQpKHRoaXMucHJvcHMudGhlbWUsXCJuYW5cIiksXCJOYU5cIil9fV0pLHR9KGwuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9ZH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSx1PW4oMCksbD1yKHUpLGM9bigxKSxmPXIoYyksZD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxzKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGYuZGVmYXVsdCkodGhpcy5wcm9wcy50aGVtZSxcIm51bGxcIiksXCJOVUxMXCIpfX1dKSx0fShsLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9big2KSxkPXIoZikscD1uKDEpLGI9cihwKSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcztyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCxiLmRlZmF1bHQpKGUudGhlbWUsXCJpbnRlZ2VyXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJpbnRcIn0sZSkpLHRoaXMucHJvcHMudmFsdWUpfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWh9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9big2KSxkPXIoZikscD1uKDEpLGI9cihwKSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcztyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCxiLmRlZmF1bHQpKGUudGhlbWUsXCJyZWdleHBcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZC5kZWZhdWx0LHMoe3R5cGVfbmFtZTpcInJlZ2V4cFwifSxlKSksdGhpcy5wcm9wcy52YWx1ZS50b1N0cmluZygpKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1ofSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9big0KSxiPW4oMSksaD1yKGIpLHk9bigxMyksdj1yKHkpLG09ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXthKHRoaXMsdCk7dmFyIG49byh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO3JldHVybiBuLnRvZ2dsZUNvbGxhcHNlZD1mdW5jdGlvbigpe24uc2V0U3RhdGUoe2NvbGxhcHNlZDohbi5zdGF0ZS5jb2xsYXBzZWR9LGZ1bmN0aW9uKCl7di5kZWZhdWx0LnNldChuLnByb3BzLnJqdklkLG4ucHJvcHMubmFtZXNwYWNlLFwiY29sbGFwc2VkXCIsbi5zdGF0ZS5jb2xsYXBzZWQpfSl9LG4uc3RhdGU9e2NvbGxhcHNlZDp2LmRlZmF1bHQuZ2V0KGUucmp2SWQsZS5uYW1lc3BhY2UsXCJjb2xsYXBzZWRcIiwhMCl9LG59cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPSh0aGlzLnN0YXRlLmNvbGxhcHNlZCx0aGlzLnByb3BzKSx0PWUuY29sbGFwc2VTdHJpbmdzQWZ0ZXJMZW5ndGgsbj1lLnRoZW1lLHI9ZS52YWx1ZSxhPVwiaW50ZWdlclwiPT09KDAscC50b1R5cGUpKHQpLG89e3N0eWxlOntjdXJzb3I6XCJkZWZhdWx0XCJ9fTtyZXR1cm4gYSYmci5sZW5ndGg+dCYmKG8uc3R5bGUuY3Vyc29yPVwicG9pbnRlclwiLHRoaXMuc3RhdGUuY29sbGFwc2VkJiYocj1jLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLHIuc3Vic3RyaW5nKDAsdCksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAsaC5kZWZhdWx0KShuLFwiZWxsaXBzaXNcIiksXCIgLi4uXCIpKSkpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsaC5kZWZhdWx0KShuLFwic3RyaW5nXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJzdHJpbmdcIn0sZSkpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHMoe2NsYXNzTmFtZTpcInN0cmluZy12YWx1ZVwifSxvLHtvbkNsaWNrOnRoaXMudG9nZ2xlQ29sbGFwc2VkfSksJ1wiJyxyLCdcIicpKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1tfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLHU9bigwKSxsPXIodSksYz1uKDEpLGY9cihjKSxkPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHModCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGwuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsZi5kZWZhdWx0KSh0aGlzLnByb3BzLnRoZW1lLFwidW5kZWZpbmVkXCIpLFwidW5kZWZpbmVkXCIpfX1dKSx0fShsLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLG49QXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKW5bdF09ZVt0XTtyZXR1cm4gbn1yZXR1cm4gQXJyYXkuZnJvbShlKX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBpKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gcyhlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciB1PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxjPW4oMCksZj1yKGMpLGQ9bigxNzIpLHA9cihkKSxiPShuKDQpLG4oMTQpKSxoPXIoYikseT1uKDE3Niksdj1yKHkpLG09big1NCksZz1yKG0pLF89big1NSksaj1yKF8pLE89big0MiksRT1uKDE1KSx3PW4oMSkseD1yKHcpLEM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtvKHRoaXMsdCk7dmFyIG49aSh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO3JldHVybiBrLmNhbGwobiksbi5zdGF0ZT17ZWRpdE1vZGU6ITEsZWRpdFZhbHVlOlwiXCIscmVuYW1lS2V5OiExLHBhcnNlZElucHV0Ont0eXBlOiExLHZhbHVlOm51bGx9fSxufXJldHVybiBzKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5wcm9wcyxuPXQudmFyaWFibGUscj0odC5zcmMsdC5zaW5nbGVJbmRlbnQpLG89dC50eXBlLGk9dC50aGVtZSxzPXQubmFtZXNwYWNlLGw9dC5pbmRlbnRXaWR0aCxjPXQuZW5hYmxlQ2xpcGJvYXJkLGQ9dC5vbkVkaXQscD10Lm9uRGVsZXRlLGI9dC5vblNlbGVjdCxoPSh0LnJqdklkLHRoaXMuc3RhdGUuZWRpdE1vZGUpO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHUoe30sKDAseC5kZWZhdWx0KShpLFwib2JqZWN0S2V5VmFsXCIse3BhZGRpbmdMZWZ0Omwqcn0pLHtjbGFzc05hbWU6XCJ2YXJpYWJsZS1yb3dcIixrZXk6bi5uYW1lfSksXCJhcnJheVwiPT1vP2YuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHUoe30sKDAseC5kZWZhdWx0KShpLFwiYXJyYXkta2V5XCIpLHtrZXk6bi5uYW1lK1wiX1wiK3N9KSxuLm5hbWUsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCx4LmRlZmF1bHQpKGksXCJjb2xvblwiKSxcIjpcIikpOmYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsdSh7fSwoMCx4LmRlZmF1bHQpKGksXCJvYmplY3QtbmFtZVwiKSx7Y2xhc3NOYW1lOlwib2JqZWN0LWtleVwiLGtleTpuLm5hbWUrXCJfXCIrc30pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp7dmVydGljYWxBbGlnbjpcInRvcFwifX0sJ1wiJyksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCJ9fSxuLm5hbWUpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp7dmVydGljYWxBbGlnbjpcInRvcFwifX0sJ1wiJykpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLHguZGVmYXVsdCkoaSxcImNvbG9uXCIpLFwiOlwiKSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix1KHtjbGFzc05hbWU6XCJ2YXJpYWJsZS12YWx1ZVwiLG9uQ2xpY2s6ITE9PT1iJiYhMT09PWQ/bnVsbDpmdW5jdGlvbih0KXt2YXIgcj1bXS5jb25jYXQoYShzKSk7KHQuY3RybEtleXx8dC5tZXRhS2V5KSYmITEhPT1kP2UucHJlcG9wSW5wdXQobik6ITEhPT1iJiYoci5zaGlmdCgpLGIodSh7fSxuLHtuYW1lc3BhY2U6cn0pKSl9fSwoMCx4LmRlZmF1bHQpKGksXCJ2YXJpYWJsZVZhbHVlXCIse2N1cnNvcjohMT09PWI/XCJkZWZhdWx0XCI6XCJwb2ludGVyXCJ9KSksdGhpcy5nZXRWYWx1ZShuLGgpKSxjP2YuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGouZGVmYXVsdCx1KHtoaWRkZW46aCxzcmM6bi52YWx1ZSxjbGlja0NhbGxiYWNrOmN9LHt0aGVtZTppLG5hbWVzcGFjZTpzfSkpOm51bGwsITEhPT1kJiYwPT1oP3RoaXMuZ2V0RWRpdEljb24oKTpudWxsLCExIT09cCYmMD09aD90aGlzLmdldFJlbW92ZUljb24oKTpudWxsKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLGs9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuZ2V0RWRpdEljb249ZnVuY3Rpb24oKXt2YXIgdD1lLnByb3BzLG49dC52YXJpYWJsZSxyPXQudGhlbWU7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImNsaWNrLXRvLWVkaXRcIixzdHlsZTp7dmVydGljYWxBbGlnbjpcInRvcFwifX0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRS5FZGl0LHUoe2NsYXNzTmFtZTpcImNsaWNrLXRvLWVkaXQtaWNvblwifSwoMCx4LmRlZmF1bHQpKHIsXCJlZGl0VmFySWNvblwiKSx7b25DbGljazpmdW5jdGlvbigpe2UucHJlcG9wSW5wdXQobil9fSkpKX0sdGhpcy5wcmVwb3BJbnB1dD1mdW5jdGlvbih0KXtpZighMSE9PWUucHJvcHMub25FZGl0KXt2YXIgbj0oMCxnLmRlZmF1bHQpKHQudmFsdWUpLHI9KDAsdi5kZWZhdWx0KShuKTtlLnNldFN0YXRlKHtlZGl0TW9kZTohMCxlZGl0VmFsdWU6bixwYXJzZWRJbnB1dDp7dHlwZTpyLnR5cGUsdmFsdWU6ci52YWx1ZX19KX19LHRoaXMuZ2V0UmVtb3ZlSWNvbj1mdW5jdGlvbigpe3ZhciB0PWUucHJvcHMsbj10LnZhcmlhYmxlLHI9dC5uYW1lc3BhY2UsYT10LnRoZW1lLG89dC5yanZJZDtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwiY2xpY2stdG8tcmVtb3ZlXCIsc3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEUuUmVtb3ZlQ2lyY2xlLHUoe2NsYXNzTmFtZTpcImNsaWNrLXRvLXJlbW92ZS1pY29uXCJ9LCgwLHguZGVmYXVsdCkoYSxcInJlbW92ZVZhckljb25cIikse29uQ2xpY2s6ZnVuY3Rpb24oKXtoLmRlZmF1bHQuZGlzcGF0Y2goe25hbWU6XCJWQVJJQUJMRV9SRU1PVkVEXCIscmp2SWQ6byxkYXRhOntuYW1lOm4ubmFtZSxuYW1lc3BhY2U6cixleGlzdGluZ192YWx1ZTpuLnZhbHVlLHZhcmlhYmxlX3JlbW92ZWQ6ITB9fSl9fSkpKX0sdGhpcy5nZXRWYWx1ZT1mdW5jdGlvbih0LG4pe3ZhciByPSFuJiZ0LnR5cGUsYT1lLnByb3BzO3N3aXRjaChyKXtjYXNlITE6cmV0dXJuIGUuZ2V0RWRpdElucHV0KCk7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvblN0cmluZyx1KHt2YWx1ZTp0LnZhbHVlfSxhKSk7Y2FzZVwiaW50ZWdlclwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25JbnRlZ2VyLHUoe3ZhbHVlOnQudmFsdWV9LGEpKTtjYXNlXCJmbG9hdFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25GbG9hdCx1KHt2YWx1ZTp0LnZhbHVlfSxhKSk7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25Cb29sZWFuLHUoe3ZhbHVlOnQudmFsdWV9LGEpKTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25GdW5jdGlvbix1KHt2YWx1ZTp0LnZhbHVlfSxhKSk7Y2FzZVwibnVsbFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25OdWxsLGEpO2Nhc2VcIm5hblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25OYW4sYSk7Y2FzZVwidW5kZWZpbmVkXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvblVuZGVmaW5lZCxhKTtjYXNlXCJkYXRlXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvbkRhdGUsdSh7dmFsdWU6dC52YWx1ZX0sYSkpO2Nhc2VcInJlZ2V4cFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25SZWdleHAsdSh7dmFsdWU6dC52YWx1ZX0sYSkpO2RlZmF1bHQ6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcIm9iamVjdC12YWx1ZVwifSxKU09OLnN0cmluZ2lmeSh0LnZhbHVlKSl9fSx0aGlzLmdldEVkaXRJbnB1dD1mdW5jdGlvbigpe3ZhciB0PWUucHJvcHMudGhlbWUsbj1lLnN0YXRlLmVkaXRWYWx1ZTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHAuZGVmYXVsdCx1KHt0eXBlOlwidGV4dFwiLGlucHV0UmVmOmZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLmZvY3VzKCl9LHZhbHVlOm4sY2xhc3NOYW1lOlwidmFyaWFibGUtZWRpdG9yXCIsb25DaGFuZ2U6ZnVuY3Rpb24odCl7dmFyIG49dC50YXJnZXQudmFsdWUscj0oMCx2LmRlZmF1bHQpKG4pO2Uuc2V0U3RhdGUoe2VkaXRWYWx1ZTpuLHBhcnNlZElucHV0Ont0eXBlOnIudHlwZSx2YWx1ZTpyLnZhbHVlfX0pfSxvbktleURvd246ZnVuY3Rpb24odCl7c3dpdGNoKHQua2V5KXtjYXNlXCJFc2NhcGVcIjplLnNldFN0YXRlKHtlZGl0TW9kZTohMSxlZGl0VmFsdWU6XCJcIn0pO2JyZWFrO2Nhc2VcIkVudGVyXCI6KHQuY3RybEtleXx8dC5tZXRhS2V5KSYmZS5zdWJtaXRFZGl0KCEwKX10LnN0b3BQcm9wYWdhdGlvbigpfSxwbGFjZWhvbGRlcjpcInVwZGF0ZSB0aGlzIHZhbHVlXCJ9LCgwLHguZGVmYXVsdCkodCxcImVkaXQtaW5wdXRcIikpKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLHguZGVmYXVsdCkodCxcImVkaXQtaWNvbi1jb250YWluZXJcIiksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRS5SZW1vdmVDaXJjbGUsdSh7Y2xhc3NOYW1lOlwiZWRpdC1jYW5jZWxcIn0sKDAseC5kZWZhdWx0KSh0LFwiY2FuY2VsLWljb25cIikse29uQ2xpY2s6ZnVuY3Rpb24oKXtlLnNldFN0YXRlKHtlZGl0TW9kZTohMSxlZGl0VmFsdWU6XCJcIn0pfX0pKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChFLkNoZWNrQ2lyY2xlLHUoe2NsYXNzTmFtZTpcImVkaXQtY2hlY2sgc3RyaW5nLXZhbHVlXCJ9LCgwLHguZGVmYXVsdCkodCxcImNoZWNrLWljb25cIikse29uQ2xpY2s6ZnVuY3Rpb24oKXtlLnN1Ym1pdEVkaXQoKX19KSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixudWxsLGUuc2hvd0RldGVjdGVkKCkpKSl9LHRoaXMuc3VibWl0RWRpdD1mdW5jdGlvbih0KXt2YXIgbj1lLnByb3BzLHI9bi52YXJpYWJsZSxhPW4ubmFtZXNwYWNlLG89bi5yanZJZCxpPWUuc3RhdGUscz1pLmVkaXRWYWx1ZSx1PWkucGFyc2VkSW5wdXQsbD1zO3QmJnUudHlwZSYmKGw9dS52YWx1ZSksZS5zZXRTdGF0ZSh7ZWRpdE1vZGU6ITF9KSxoLmRlZmF1bHQuZGlzcGF0Y2goe25hbWU6XCJWQVJJQUJMRV9VUERBVEVEXCIscmp2SWQ6byxkYXRhOntuYW1lOnIubmFtZSxuYW1lc3BhY2U6YSxleGlzdGluZ192YWx1ZTpyLnZhbHVlLG5ld192YWx1ZTpsLHZhcmlhYmxlX3JlbW92ZWQ6ITF9fSl9LHRoaXMuc2hvd0RldGVjdGVkPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5wcm9wcyxuPXQudGhlbWUscj0odC52YXJpYWJsZSx0Lm5hbWVzcGFjZSx0LnJqdklkLGUuc3RhdGUucGFyc2VkSW5wdXQpLGE9KHIudHlwZSxyLnZhbHVlLGUuZ2V0RGV0ZWN0ZWRJbnB1dCgpKTtpZihhKXJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCx4LmRlZmF1bHQpKG4sXCJkZXRlY3RlZC1yb3dcIiksYSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChFLkNoZWNrQ2lyY2xlLHtjbGFzc05hbWU6XCJlZGl0LWNoZWNrIGRldGVjdGVkXCIsc3R5bGU6dSh7dmVydGljYWxBbGlnbjpcInRvcFwiLHBhZGRpbmdMZWZ0OlwiM3B4XCJ9LCgwLHguZGVmYXVsdCkobixcImNoZWNrLWljb25cIikuc3R5bGUpLG9uQ2xpY2s6ZnVuY3Rpb24oKXtlLnN1Ym1pdEVkaXQoITApfX0pKSl9LHRoaXMuZ2V0RGV0ZWN0ZWRJbnB1dD1mdW5jdGlvbigpe3ZhciB0PWUuc3RhdGUucGFyc2VkSW5wdXQsbj10LnR5cGUscj10LnZhbHVlLGE9ZS5wcm9wcyxvPWEudGhlbWU7aWYoITEhPT1uKXN3aXRjaChuLnRvTG93ZXJDYXNlKCkpe2Nhc2VcIm9iamVjdFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLHguZGVmYXVsdCkobyxcImJyYWNlXCIpLnN0eWxlLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KX0sXCJ7XCIpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLHguZGVmYXVsdCkobyxcImVsbGlwc2lzXCIpLnN0eWxlLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KX0sXCIuLi5cIiksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnUoe30sKDAseC5kZWZhdWx0KShvLFwiYnJhY2VcIikuc3R5bGUse2N1cnNvcjpcImRlZmF1bHRcIn0pfSxcIn1cIikpO2Nhc2VcImFycmF5XCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnUoe30sKDAseC5kZWZhdWx0KShvLFwiYnJhY2VcIikuc3R5bGUse2N1cnNvcjpcImRlZmF1bHRcIn0pfSxcIltcIiksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnUoe30sKDAseC5kZWZhdWx0KShvLFwiZWxsaXBzaXNcIikuc3R5bGUse2N1cnNvcjpcImRlZmF1bHRcIn0pfSxcIi4uLlwiKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6dSh7fSwoMCx4LmRlZmF1bHQpKG8sXCJicmFjZVwiKS5zdHlsZSx7Y3Vyc29yOlwiZGVmYXVsdFwifSl9LFwiXVwiKSk7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvblN0cmluZyx1KHt2YWx1ZTpyfSxhKSk7Y2FzZVwiaW50ZWdlclwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25JbnRlZ2VyLHUoe3ZhbHVlOnJ9LGEpKTtjYXNlXCJmbG9hdFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25GbG9hdCx1KHt2YWx1ZTpyfSxhKSk7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25Cb29sZWFuLHUoe3ZhbHVlOnJ9LGEpKTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25GdW5jdGlvbix1KHt2YWx1ZTpyfSxhKSk7Y2FzZVwibnVsbFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25OdWxsLGEpO2Nhc2VcIm5hblwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25OYW4sYSk7Y2FzZVwidW5kZWZpbmVkXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvblVuZGVmaW5lZCxhKTtjYXNlXCJkYXRlXCI6cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uSnNvbkRhdGUsdSh7dmFsdWU6bmV3IERhdGUocil9LGEpKX19fTt0LmRlZmF1bHQ9Q30sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBhKGUsdCl7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxlLl9fcHJvdG9fXz10fWZ1bmN0aW9uIG8oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsYT17fSxvPU9iamVjdC5rZXlzKGUpO2ZvcihyPTA7cjxvLmxlbmd0aDtyKyspbj1vW3JdLHQuaW5kZXhPZihuKT49MHx8KGFbbl09ZVtuXSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluZGV4T2Yobik+PTB8fE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYoYVtuXT1lW25dKX1yZXR1cm4gYX1mdW5jdGlvbiBpKGUsdCxuLHIsYSl7dm9pZCAwPT09biYmKG49ITEpLHZvaWQgMD09PXImJihyPW51bGwpLHZvaWQgMD09PWEmJihhPW51bGwpLG51bGw9PT12LnBhcmVudE5vZGUmJmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodik7dmFyIG89cyhlLHQsbik7aWYobnVsbD09PW8pcmV0dXJuIG51bGw7dmFyIGk9by5wYWRkaW5nU2l6ZSx1PW8uYm9yZGVyU2l6ZSxsPW8uYm94U2l6aW5nLGM9by5zaXppbmdTdHlsZTtPYmplY3Qua2V5cyhjKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Yuc3R5bGVbZV09Y1tlXX0pLG0odiksdi52YWx1ZT1lLnZhbHVlfHxlLnBsYWNlaG9sZGVyfHxcInhcIjt2YXIgZj0tMS8wLGQ9MS8wLHA9di5zY3JvbGxIZWlnaHQ7XCJib3JkZXItYm94XCI9PT1sP3ArPXU6XCJjb250ZW50LWJveFwiPT09bCYmKHAtPWkpLHYudmFsdWU9XCJ4XCI7dmFyIGI9di5zY3JvbGxIZWlnaHQtaTtyZXR1cm4gbnVsbD09PXImJm51bGw9PT1hfHwobnVsbCE9PXImJihmPWIqcixcImJvcmRlci1ib3hcIj09PWwmJihmPWYraSt1KSxwPU1hdGgubWF4KGYscCkpLG51bGwhPT1hJiYoZD1iKmEsXCJib3JkZXItYm94XCI9PT1sJiYoZD1kK2krdSkscD1NYXRoLm1pbihkLHApKSkse2hlaWdodDpwLG1pbkhlaWdodDpmLG1heEhlaWdodDpkLHJvd0NvdW50Ok1hdGguZmxvb3IocC9iKX19ZnVuY3Rpb24gcyhlLHQsbil7aWYodm9pZCAwPT09biYmKG49ITEpLG4mJnlbdF0pcmV0dXJuIHlbdF07dmFyIHI9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSk7aWYobnVsbD09PXIpcmV0dXJuIG51bGw7dmFyIGE9aC5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVt0XT1yLmdldFByb3BlcnR5VmFsdWUodCksZX0se30pLG89YVtcImJveC1zaXppbmdcIl07aWYoXCJcIj09PW8pcmV0dXJuIG51bGw7cCYmXCJib3JkZXItYm94XCI9PT1vJiYoYS53aWR0aD1wYXJzZUZsb2F0KGEud2lkdGgpK3BhcnNlRmxvYXQocltcImJvcmRlci1yaWdodC13aWR0aFwiXSkrcGFyc2VGbG9hdChyW1wiYm9yZGVyLWxlZnQtd2lkdGhcIl0pK3BhcnNlRmxvYXQocltcInBhZGRpbmctcmlnaHRcIl0pK3BhcnNlRmxvYXQocltcInBhZGRpbmctbGVmdFwiXSkrXCJweFwiKTt2YXIgaT1wYXJzZUZsb2F0KGFbXCJwYWRkaW5nLWJvdHRvbVwiXSkrcGFyc2VGbG9hdChhW1wicGFkZGluZy10b3BcIl0pLHM9cGFyc2VGbG9hdChhW1wiYm9yZGVyLWJvdHRvbS13aWR0aFwiXSkrcGFyc2VGbG9hdChhW1wiYm9yZGVyLXRvcC13aWR0aFwiXSksdT17c2l6aW5nU3R5bGU6YSxwYWRkaW5nU2l6ZTppLGJvcmRlclNpemU6cyxib3hTaXppbmc6b307cmV0dXJuIG4mJih5W3RdPXUpLHV9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHU9bigwKSxsPW4ubih1KSxjPW4oMTczKSxmPW4ubihjKSxkPShPYmplY3Quc2V0UHJvdG90eXBlT2YsXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0LFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudCkscD0hIWQmJiEhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmN1cnJlbnRTdHlsZSxiPXtcIm1pbi1oZWlnaHRcIjpcIjBcIixcIm1heC1oZWlnaHRcIjpcIm5vbmVcIixoZWlnaHQ6XCIwXCIsdmlzaWJpbGl0eTpcImhpZGRlblwiLG92ZXJmbG93OlwiaGlkZGVuXCIscG9zaXRpb246XCJhYnNvbHV0ZVwiLFwiei1pbmRleFwiOlwiLTEwMDBcIix0b3A6XCIwXCIscmlnaHQ6XCIwXCJ9LGg9W1wibGV0dGVyLXNwYWNpbmdcIixcImxpbmUtaGVpZ2h0XCIsXCJmb250LWZhbWlseVwiLFwiZm9udC13ZWlnaHRcIixcImZvbnQtc2l6ZVwiLFwiZm9udC1zdHlsZVwiLFwidGFiLXNpemVcIixcInRleHQtcmVuZGVyaW5nXCIsXCJ0ZXh0LXRyYW5zZm9ybVwiLFwid2lkdGhcIixcInRleHQtaW5kZW50XCIsXCJwYWRkaW5nLXRvcFwiLFwicGFkZGluZy1yaWdodFwiLFwicGFkZGluZy1ib3R0b21cIixcInBhZGRpbmctbGVmdFwiLFwiYm9yZGVyLXRvcC13aWR0aFwiLFwiYm9yZGVyLXJpZ2h0LXdpZHRoXCIsXCJib3JkZXItYm90dG9tLXdpZHRoXCIsXCJib3JkZXItbGVmdC13aWR0aFwiLFwiYm94LXNpemluZ1wiXSx5PXt9LHY9ZCYmZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpLG09ZnVuY3Rpb24oZSl7T2JqZWN0LmtleXMoYikuZm9yRWFjaChmdW5jdGlvbih0KXtlLnN0eWxlLnNldFByb3BlcnR5KHQsYlt0XSxcImltcG9ydGFudFwiKX0pfTtkJiZtKHYpO3ZhciBnPWZ1bmN0aW9uKGUpe3JldHVybiBkZWxldGUgeVtlXX0sXz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksZnVuY3Rpb24oKXtyZXR1cm4rK2V9fSgpLGo9ZnVuY3Rpb24oKXt9LE89ZCYmd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZT9bd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSx3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWVdOltzZXRUaW1lb3V0LGNsZWFyVGltZW91dF0sRT1PWzBdLHc9T1sxXSx4PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7dmFyIG47cmV0dXJuIG49ZS5jYWxsKHRoaXMsdCl8fHRoaXMsbi5fcmVzaXplTG9jaz0hMSxuLl9vblJvb3RET01Ob2RlPWZ1bmN0aW9uKGUpe24uX3Jvb3RET01Ob2RlPWUsbi5wcm9wcy5pbnB1dFJlZihlKX0sbi5fb25DaGFuZ2U9ZnVuY3Rpb24oZSl7bi5fY29udHJvbGxlZHx8bi5fcmVzaXplQ29tcG9uZW50KCksbi5wcm9wcy5vbkNoYW5nZShlKX0sbi5fcmVzaXplQ29tcG9uZW50PWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUmJihlPWopLHZvaWQgMD09PW4uX3Jvb3RET01Ob2RlKXJldHVybiB2b2lkIGUoKTt2YXIgdD1pKG4uX3Jvb3RET01Ob2RlLG4uX3VpZCxuLnByb3BzLnVzZUNhY2hlRm9yRE9NTWVhc3VyZW1lbnRzLG4ucHJvcHMubWluUm93cyxuLnByb3BzLm1heFJvd3MpO2lmKG51bGw9PT10KXJldHVybiB2b2lkIGUoKTt2YXIgcj10LmhlaWdodCxhPXQubWluSGVpZ2h0LG89dC5tYXhIZWlnaHQscz10LnJvd0NvdW50O2lmKG4ucm93Q291bnQ9cyxuLnN0YXRlLmhlaWdodCE9PXJ8fG4uc3RhdGUubWluSGVpZ2h0IT09YXx8bi5zdGF0ZS5tYXhIZWlnaHQhPT1vKXJldHVybiB2b2lkIG4uc2V0U3RhdGUoe2hlaWdodDpyLG1pbkhlaWdodDphLG1heEhlaWdodDpvfSxlKTtlKCl9LG4uc3RhdGU9e2hlaWdodDp0LnN0eWxlJiZ0LnN0eWxlLmhlaWdodHx8MCxtaW5IZWlnaHQ6LTEvMCxtYXhIZWlnaHQ6MS8wfSxuLl91aWQ9XygpLG4uX2NvbnRyb2xsZWQ9XCJzdHJpbmdcIj09dHlwZW9mIHQudmFsdWUsbn1hKHQsZSk7dmFyIG49dC5wcm90b3R5cGU7cmV0dXJuIG4ucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PShlLmlucHV0UmVmLGUubWF4Um93cyxlLm1pblJvd3MsZS5vbkhlaWdodENoYW5nZSxlLnVzZUNhY2hlRm9yRE9NTWVhc3VyZW1lbnRzLG8oZSxbXCJpbnB1dFJlZlwiLFwibWF4Um93c1wiLFwibWluUm93c1wiLFwib25IZWlnaHRDaGFuZ2VcIixcInVzZUNhY2hlRm9yRE9NTWVhc3VyZW1lbnRzXCJdKSk7cmV0dXJuIHQuc3R5bGU9cih7fSx0LnN0eWxlLHtoZWlnaHQ6dGhpcy5zdGF0ZS5oZWlnaHR9KSxNYXRoLm1heCh0LnN0eWxlLm1heEhlaWdodHx8MS8wLHRoaXMuc3RhdGUubWF4SGVpZ2h0KTx0aGlzLnN0YXRlLmhlaWdodCYmKHQuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIiksbC5hLmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiLHIoe30sdCx7b25DaGFuZ2U6dGhpcy5fb25DaGFuZ2UscmVmOnRoaXMuX29uUm9vdERPTU5vZGV9KSl9LG4uY29tcG9uZW50RGlkTW91bnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX3Jlc2l6ZUNvbXBvbmVudCgpLHRoaXMuX3Jlc2l6ZUxpc3RlbmVyPWZ1bmN0aW9uKCl7ZS5fcmVzaXplTG9ja3x8KGUuX3Jlc2l6ZUxvY2s9ITAsZS5fcmVzaXplQ29tcG9uZW50KGZ1bmN0aW9uKCl7cmV0dXJuIGUuX3Jlc2l6ZUxvY2s9ITF9KSl9LHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsdGhpcy5fcmVzaXplTGlzdGVuZXIpfSxuLmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7ZSE9PXRoaXMucHJvcHMmJih0aGlzLl9jbGVhck5leHRGcmFtZSgpLHRoaXMuX29uTmV4dEZyYW1lQWN0aW9uSWQ9RShmdW5jdGlvbigpe3JldHVybiBuLl9yZXNpemVDb21wb25lbnQoKX0pKSx0aGlzLnN0YXRlLmhlaWdodCE9PXQuaGVpZ2h0JiZ0aGlzLnByb3BzLm9uSGVpZ2h0Q2hhbmdlKHRoaXMuc3RhdGUuaGVpZ2h0LHRoaXMpfSxuLmNvbXBvbmVudFdpbGxVbm1vdW50PWZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJOZXh0RnJhbWUoKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMuX3Jlc2l6ZUxpc3RlbmVyKSxnKHRoaXMuX3VpZCl9LG4uX2NsZWFyTmV4dEZyYW1lPWZ1bmN0aW9uKCl7dyh0aGlzLl9vbk5leHRGcmFtZUFjdGlvbklkKX0sdH0obC5hLkNvbXBvbmVudCk7eC5wcm9wVHlwZXM9e2lucHV0UmVmOmYuYS5mdW5jLG1heFJvd3M6Zi5hLm51bWJlcixtaW5Sb3dzOmYuYS5udW1iZXIsb25DaGFuZ2U6Zi5hLmZ1bmMsb25IZWlnaHRDaGFuZ2U6Zi5hLmZ1bmMsdXNlQ2FjaGVGb3JET01NZWFzdXJlbWVudHM6Zi5hLmJvb2wsdmFsdWU6Zi5hLnN0cmluZ30seC5kZWZhdWx0UHJvcHM9e2lucHV0UmVmOmosb25DaGFuZ2U6aixvbkhlaWdodENoYW5nZTpqLHVzZUNhY2hlRm9yRE9NTWVhc3VyZW1lbnRzOiExfSx0LmRlZmF1bHQ9eH0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDE3NCkoKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoKXt9dmFyIGE9bigxNzUpO2UuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4scixvLGkpe2lmKGkhPT1hKXt2YXIgcz1uZXcgRXJyb3IoXCJDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiBVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiBSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzXCIpO3Rocm93IHMubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIixzfX1mdW5jdGlvbiB0KCl7cmV0dXJuIGV9ZS5pc1JlcXVpcmVkPWU7dmFyIG49e2FycmF5OmUsYm9vbDplLGZ1bmM6ZSxudW1iZXI6ZSxvYmplY3Q6ZSxzdHJpbmc6ZSxzeW1ib2w6ZSxhbnk6ZSxhcnJheU9mOnQsZWxlbWVudDplLGluc3RhbmNlT2Y6dCxub2RlOmUsb2JqZWN0T2Y6dCxvbmVPZjp0LG9uZU9mVHlwZTp0LHNoYXBlOnQsZXhhY3Q6dH07cmV0dXJuIG4uY2hlY2tQcm9wVHlwZXM9cixuLlByb3BUeXBlcz1uLG59fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPVwiU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRURcIn0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7ZT1lLnRyaW0oKTt0cnl7aWYoZT1KU09OLnN0cmluZ2lmeShKU09OLnBhcnNlKGUpKSxcIltcIj09PWVbMF0pcmV0dXJuIGEoXCJhcnJheVwiLEpTT04ucGFyc2UoZSkpO2lmKFwie1wiPT09ZVswXSlyZXR1cm4gYShcIm9iamVjdFwiLEpTT04ucGFyc2UoZSkpO2lmKGUubWF0Y2goL1xcLT9cXGQrXFwuXFxkKy8pJiZlLm1hdGNoKC9cXC0/XFxkK1xcLlxcZCsvKVswXT09PWUpcmV0dXJuIGEoXCJmbG9hdFwiLHBhcnNlRmxvYXQoZSkpO2lmKGUubWF0Y2goL1xcLT9cXGQrLykmJmUubWF0Y2goL1xcLT9cXGQrLylbMF09PT1lKXJldHVybiBhKFwiaW50ZWdlclwiLHBhcnNlSW50KGUpKX1jYXRjaChlKXt9c3dpdGNoKGU9ZS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJ1bmRlZmluZWRcIjpyZXR1cm4gYShcInVuZGVmaW5lZFwiLHZvaWQgMCk7Y2FzZVwibmFuXCI6cmV0dXJuIGEoXCJuYW5cIixOYU4pO2Nhc2VcIm51bGxcIjpyZXR1cm4gYShcIm51bGxcIixudWxsKTtjYXNlXCJ0cnVlXCI6cmV0dXJuIGEoXCJib29sZWFuXCIsITApO2Nhc2VcImZhbHNlXCI6cmV0dXJuIGEoXCJib29sZWFuXCIsITEpO2RlZmF1bHQ6aWYoZT1EYXRlLnBhcnNlKGUpKXJldHVybiBhKFwiZGF0ZVwiLG5ldyBEYXRlKGUpKX1yZXR1cm4gYSghMSxudWxsKX1mdW5jdGlvbiBhKGUsdCl7cmV0dXJue3R5cGU6ZSx2YWx1ZTp0fX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9cn0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDE0KSxkPXIoZikscD1uKDEzKSxiPXIocCksaD1uKDE3OCkseT1yKGgpLHY9bigxKSxtPShyKHYpLGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZSxuLHIsaTthKHRoaXMsdCk7Zm9yKHZhciB1PWFyZ3VtZW50cy5sZW5ndGgsbD1BcnJheSh1KSxjPTA7Yzx1O2MrKylsW2NdPWFyZ3VtZW50c1tjXTtyZXR1cm4gbj1yPW8odGhpcywoZT10Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsLmFwcGx5KGUsW3RoaXNdLmNvbmNhdChsKSkpLHIuaXNWYWxpZD1mdW5jdGlvbihlKXt2YXIgdD1yLnByb3BzLnJqdklkLG49Yi5kZWZhdWx0LmdldCh0LFwiYWN0aW9uXCIsXCJuZXcta2V5LXJlcXVlc3RcIik7cmV0dXJuXCJcIiE9ZSYmLTE9PT1PYmplY3Qua2V5cyhuLmV4aXN0aW5nX3ZhbHVlKS5pbmRleE9mKGUpfSxyLnN1Ym1pdD1mdW5jdGlvbihlKXt2YXIgdD1yLnByb3BzLnJqdklkLG49Yi5kZWZhdWx0LmdldCh0LFwiYWN0aW9uXCIsXCJuZXcta2V5LXJlcXVlc3RcIik7bi5uZXdfdmFsdWU9cyh7fSxuLmV4aXN0aW5nX3ZhbHVlKSxuLm5ld192YWx1ZVtlXT1yLnByb3BzLmRlZmF1bHRWYWx1ZSxkLmRlZmF1bHQuZGlzcGF0Y2goe25hbWU6XCJWQVJJQUJMRV9BRERFRFwiLHJqdklkOnQsZGF0YTpufSl9LGk9bixvKHIsaSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLmFjdGl2ZSxuPWUudGhlbWUscj1lLnJqdklkO3JldHVybiB0P2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHkuZGVmYXVsdCx7cmp2SWQ6cix0aGVtZTpuLGlzVmFsaWQ6dGhpcy5pc1ZhbGlkLHN1Ym1pdDp0aGlzLnN1Ym1pdH0pOm51bGx9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSk7dC5kZWZhdWx0PW19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxNCksZD1yKGYpLHA9bigxNSksYj1uKDEpLGg9cihiKSx5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7YSh0aGlzLHQpO3ZhciBuPW8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbCh0aGlzLGUpKTtyZXR1cm4gbi5jbG9zZU1vZGFsPWZ1bmN0aW9uKCl7ZC5kZWZhdWx0LmRpc3BhdGNoKHtyanZJZDpuLnByb3BzLnJqdklkLG5hbWU6XCJSRVNFVFwifSl9LG4uc3VibWl0PWZ1bmN0aW9uKCl7bi5wcm9wcy5zdWJtaXQobi5zdGF0ZS5pbnB1dCl9LG4uc3RhdGU9e2lucHV0OmUuaW5wdXQ/ZS5pbnB1dDpcIlwifSxufXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5wcm9wcyxuPXQudGhlbWUscj10LnJqdklkLGE9dC5pc1ZhbGlkLG89dGhpcy5zdGF0ZS5pbnB1dCxpPWEobyk7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIscyh7Y2xhc3NOYW1lOlwia2V5LW1vZGFsLXJlcXVlc3RcIn0sKDAsaC5kZWZhdWx0KShuLFwia2V5LW1vZGFsLXJlcXVlc3RcIikse29uQ2xpY2s6dGhpcy5jbG9zZU1vZGFsfSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixzKHt9LCgwLGguZGVmYXVsdCkobixcImtleS1tb2RhbFwiKSx7b25DbGljazpmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpfX0pLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsaC5kZWZhdWx0KShuLFwia2V5LW1vZGFsLWxhYmVsXCIpLFwiS2V5IE5hbWU6XCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse3N0eWxlOntwb3NpdGlvbjpcInJlbGF0aXZlXCJ9fSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImlucHV0XCIscyh7fSwoMCxoLmRlZmF1bHQpKG4sXCJrZXktbW9kYWwtaW5wdXRcIikse2NsYXNzTmFtZTpcImtleS1tb2RhbC1pbnB1dFwiLHJlZjpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5mb2N1cygpfSxzcGVsbENoZWNrOiExLHZhbHVlOm8scGxhY2Vob2xkZXI6XCIuLi5cIixvbkNoYW5nZTpmdW5jdGlvbih0KXtlLnNldFN0YXRlKHtpbnB1dDp0LnRhcmdldC52YWx1ZX0pfSxvbktleVByZXNzOmZ1bmN0aW9uKHQpe2kmJlwiRW50ZXJcIj09PXQua2V5P2Uuc3VibWl0KCk6XCJFc2NhcGVcIj09PXQua2V5JiZlLmNsb3NlTW9kYWwoKX19KSksaT9jLmRlZmF1bHQuY3JlYXRlRWxlbWVudChwLkNoZWNrQ2lyY2xlLHMoe30sKDAsaC5kZWZhdWx0KShuLFwia2V5LW1vZGFsLXN1Ym1pdFwiKSx7Y2xhc3NOYW1lOlwia2V5LW1vZGFsLXN1Ym1pdFwiLG9uQ2xpY2s6ZnVuY3Rpb24odCl7cmV0dXJuIGUuc3VibWl0KCl9fSkpOm51bGwpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGguZGVmYXVsdCkobixcImtleS1tb2RhbC1jYW5jZWxcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQocC5BZGQscyh7fSwoMCxoLmRlZmF1bHQpKG4sXCJrZXktbW9kYWwtY2FuY2VsLWljb25cIikse2NsYXNzTmFtZTpcImtleS1tb2RhbC1jYW5jZWxcIixvbkNsaWNrOmZ1bmN0aW9uKCl7ZC5kZWZhdWx0LmRpc3BhdGNoKHtyanZJZDpyLG5hbWU6XCJSRVNFVFwifSl9fSkpKSkpfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PXl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxNCksZD1yKGYpLHA9bigxMyksYj0ocihwKSxuKDE1KSksaD1uKDEpLHk9cihoKSx2PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUubWVzc2FnZSxuPWUuYWN0aXZlLHI9ZS50aGVtZSxhPWUucmp2SWQ7cmV0dXJuIG4/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixzKHtjbGFzc05hbWU6XCJ2YWxpZGF0aW9uLWZhaWx1cmVcIn0sKDAseS5kZWZhdWx0KShyLFwidmFsaWRhdGlvbi1mYWlsdXJlXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKCl7ZC5kZWZhdWx0LmRpc3BhdGNoKHtyanZJZDphLG5hbWU6XCJSRVNFVFwifSl9fSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAseS5kZWZhdWx0KShyLFwidmFsaWRhdGlvbi1mYWlsdXJlLWxhYmVsXCIpLHQpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGIuQWRkLCgwLHkuZGVmYXVsdCkocixcInZhbGlkYXRpb24tZmFpbHVyZS1jbGVhclwiKSkpOm51bGx9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9dn0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTgxKTtcInN0cmluZ1wiPT10eXBlb2YgciYmKHI9W1tlLmkscixcIlwiXV0pO3ZhciBhPXt9O2EudHJhbnNmb3JtPXZvaWQgMCxuKDE4MykocixhKSxyLmxvY2FscyYmKGUuZXhwb3J0cz1yLmxvY2Fscyl9LGZ1bmN0aW9uKGUsdCxuKXt0PWUuZXhwb3J0cz1uKDE4MikoITEpLHQucHVzaChbZS5pLFwiLnJlYWN0LWpzb24tdmlldyAuY29weS10by1jbGlwYm9hcmQtY29udGFpbmVye3ZlcnRpY2FsLWFsaWduOnRvcDtkaXNwbGF5Om5vbmV9LnJlYWN0LWpzb24tdmlldyAuY2xpY2stdG8tYWRkLC5yZWFjdC1qc29uLXZpZXcgLmNsaWNrLXRvLWVkaXQsLnJlYWN0LWpzb24tdmlldyAuY2xpY2stdG8tcmVtb3Zle2Rpc3BsYXk6bm9uZX0ucmVhY3QtanNvbi12aWV3IC5vYmplY3QtY29udGVudCAudmFyaWFibGUtcm93OmhvdmVyIC5jbGljay10by1lZGl0LC5yZWFjdC1qc29uLXZpZXcgLm9iamVjdC1jb250ZW50IC52YXJpYWJsZS1yb3c6aG92ZXIgLmNsaWNrLXRvLXJlbW92ZSwucmVhY3QtanNvbi12aWV3IC5vYmplY3Qta2V5LXZhbDpob3Zlcj5zcGFuPi5vYmplY3QtbWV0YS1kYXRhPi5jbGljay10by1hZGQsLnJlYWN0LWpzb24tdmlldyAub2JqZWN0LWtleS12YWw6aG92ZXI+c3Bhbj4ub2JqZWN0LW1ldGEtZGF0YT4uY2xpY2stdG8tcmVtb3ZlLC5yZWFjdC1qc29uLXZpZXcgLm9iamVjdC1rZXktdmFsOmhvdmVyPnNwYW4+Lm9iamVjdC1tZXRhLWRhdGE+LmNvcHktdG8tY2xpcGJvYXJkLWNvbnRhaW5lciwucmVhY3QtanNvbi12aWV3IC52YXJpYWJsZS1yb3c6aG92ZXIgLmNvcHktdG8tY2xpcGJvYXJkLWNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9ja31cIixcIlwiXSl9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlLHQpe3ZhciBuPWVbMV18fFwiXCIsYT1lWzNdO2lmKCFhKXJldHVybiBuO2lmKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGJ0b2Epe3ZhciBvPXIoYSk7cmV0dXJuW25dLmNvbmNhdChhLnNvdXJjZXMubWFwKGZ1bmN0aW9uKGUpe3JldHVyblwiLyojIHNvdXJjZVVSTD1cIithLnNvdXJjZVJvb3QrZStcIiAqL1wifSkpLmNvbmNhdChbb10pLmpvaW4oXCJcXG5cIil9cmV0dXJuW25dLmpvaW4oXCJcXG5cIil9ZnVuY3Rpb24gcihlKXtyZXR1cm5cIi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIitidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShlKSkpKStcIiAqL1wifWUuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1bXTtyZXR1cm4gdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbih0KXt2YXIgcj1uKHQsZSk7cmV0dXJuIHRbMl0/XCJAbWVkaWEgXCIrdFsyXStcIntcIityK1wifVwiOnJ9KS5qb2luKFwiXCIpfSx0Lmk9ZnVuY3Rpb24oZSxuKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9W1tudWxsLGUsXCJcIl1dKTtmb3IodmFyIHI9e30sYT0wO2E8dGhpcy5sZW5ndGg7YSsrKXt2YXIgbz10aGlzW2FdWzBdO1wibnVtYmVyXCI9PXR5cGVvZiBvJiYocltvXT0hMCl9Zm9yKGE9MDthPGUubGVuZ3RoO2ErKyl7dmFyIGk9ZVthXTtcIm51bWJlclwiPT10eXBlb2YgaVswXSYmcltpWzBdXXx8KG4mJiFpWzJdP2lbMl09bjpuJiYoaVsyXT1cIihcIitpWzJdK1wiKSBhbmQgKFwiK24rXCIpXCIpLHQucHVzaChpKSl9fSx0fX0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0KXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXSxhPWJbci5pZF07aWYoYSl7YS5yZWZzKys7Zm9yKHZhciBvPTA7bzxhLnBhcnRzLmxlbmd0aDtvKyspYS5wYXJ0c1tvXShyLnBhcnRzW29dKTtmb3IoO288ci5wYXJ0cy5sZW5ndGg7bysrKWEucGFydHMucHVzaChjKHIucGFydHNbb10sdCkpfWVsc2V7Zm9yKHZhciBpPVtdLG89MDtvPHIucGFydHMubGVuZ3RoO28rKylpLnB1c2goYyhyLnBhcnRzW29dLHQpKTtiW3IuaWRdPXtpZDpyLmlkLHJlZnM6MSxwYXJ0czppfX19fWZ1bmN0aW9uIGEoZSx0KXtmb3IodmFyIG49W10scj17fSxhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBvPWVbYV0saT10LmJhc2U/b1swXSt0LmJhc2U6b1swXSxzPW9bMV0sdT1vWzJdLGw9b1szXSxjPXtjc3M6cyxtZWRpYTp1LHNvdXJjZU1hcDpsfTtyW2ldP3JbaV0ucGFydHMucHVzaChjKTpuLnB1c2gocltpXT17aWQ6aSxwYXJ0czpbY119KX1yZXR1cm4gbn1mdW5jdGlvbiBvKGUsdCl7dmFyIG49eShlLmluc2VydEludG8pO2lmKCFuKXRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO3ZhciByPWdbZy5sZW5ndGgtMV07aWYoXCJ0b3BcIj09PWUuaW5zZXJ0QXQpcj9yLm5leHRTaWJsaW5nP24uaW5zZXJ0QmVmb3JlKHQsci5uZXh0U2libGluZyk6bi5hcHBlbmRDaGlsZCh0KTpuLmluc2VydEJlZm9yZSh0LG4uZmlyc3RDaGlsZCksZy5wdXNoKHQpO2Vsc2V7aWYoXCJib3R0b21cIiE9PWUuaW5zZXJ0QXQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcuIE11c3QgYmUgJ3RvcCcgb3IgJ2JvdHRvbScuXCIpO24uYXBwZW5kQ2hpbGQodCl9fWZ1bmN0aW9uIGkoZSl7aWYobnVsbD09PWUucGFyZW50Tm9kZSlyZXR1cm4hMTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSk7dmFyIHQ9Zy5pbmRleE9mKGUpO3Q+PTAmJmcuc3BsaWNlKHQsMSl9ZnVuY3Rpb24gcyhlKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7cmV0dXJuIGUuYXR0cnMudHlwZT1cInRleHQvY3NzXCIsbCh0LGUuYXR0cnMpLG8oZSx0KSx0fWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7cmV0dXJuIGUuYXR0cnMudHlwZT1cInRleHQvY3NzXCIsZS5hdHRycy5yZWw9XCJzdHlsZXNoZWV0XCIsbCh0LGUuYXR0cnMpLG8oZSx0KSx0fWZ1bmN0aW9uIGwoZSx0KXtPYmplY3Qua2V5cyh0KS5mb3JFYWNoKGZ1bmN0aW9uKG4pe2Uuc2V0QXR0cmlidXRlKG4sdFtuXSl9KX1mdW5jdGlvbiBjKGUsdCl7dmFyIG4scixhLG87aWYodC50cmFuc2Zvcm0mJmUuY3NzKXtpZighKG89dC50cmFuc2Zvcm0oZS5jc3MpKSlyZXR1cm4gZnVuY3Rpb24oKXt9O2UuY3NzPW99aWYodC5zaW5nbGV0b24pe3ZhciBsPW0rKztuPXZ8fCh2PXModCkpLHI9Zi5iaW5kKG51bGwsbixsLCExKSxhPWYuYmluZChudWxsLG4sbCwhMCl9ZWxzZSBlLnNvdXJjZU1hcCYmXCJmdW5jdGlvblwiPT10eXBlb2YgVVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBCbG9iJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBidG9hPyhuPXUodCkscj1wLmJpbmQobnVsbCxuLHQpLGE9ZnVuY3Rpb24oKXtpKG4pLG4uaHJlZiYmVVJMLnJldm9rZU9iamVjdFVSTChuLmhyZWYpfSk6KG49cyh0KSxyPWQuYmluZChudWxsLG4pLGE9ZnVuY3Rpb24oKXtpKG4pfSk7cmV0dXJuIHIoZSksZnVuY3Rpb24odCl7aWYodCl7aWYodC5jc3M9PT1lLmNzcyYmdC5tZWRpYT09PWUubWVkaWEmJnQuc291cmNlTWFwPT09ZS5zb3VyY2VNYXApcmV0dXJuO3IoZT10KX1lbHNlIGEoKX19ZnVuY3Rpb24gZihlLHQsbixyKXt2YXIgYT1uP1wiXCI6ci5jc3M7aWYoZS5zdHlsZVNoZWV0KWUuc3R5bGVTaGVldC5jc3NUZXh0PWoodCxhKTtlbHNle3ZhciBvPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGEpLGk9ZS5jaGlsZE5vZGVzO2lbdF0mJmUucmVtb3ZlQ2hpbGQoaVt0XSksaS5sZW5ndGg/ZS5pbnNlcnRCZWZvcmUobyxpW3RdKTplLmFwcGVuZENoaWxkKG8pfX1mdW5jdGlvbiBkKGUsdCl7dmFyIG49dC5jc3Mscj10Lm1lZGlhO2lmKHImJmUuc2V0QXR0cmlidXRlKFwibWVkaWFcIixyKSxlLnN0eWxlU2hlZXQpZS5zdHlsZVNoZWV0LmNzc1RleHQ9bjtlbHNle2Zvcig7ZS5maXJzdENoaWxkOyllLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCk7ZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuKSl9fWZ1bmN0aW9uIHAoZSx0LG4pe3ZhciByPW4uY3NzLGE9bi5zb3VyY2VNYXAsbz12b2lkIDA9PT10LmNvbnZlcnRUb0Fic29sdXRlVXJscyYmYTsodC5jb252ZXJ0VG9BYnNvbHV0ZVVybHN8fG8pJiYocj1fKHIpKSxhJiYocis9XCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiK2J0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGEpKSkpK1wiICovXCIpO3ZhciBpPW5ldyBCbG9iKFtyXSx7dHlwZTpcInRleHQvY3NzXCJ9KSxzPWUuaHJlZjtlLmhyZWY9VVJMLmNyZWF0ZU9iamVjdFVSTChpKSxzJiZVUkwucmV2b2tlT2JqZWN0VVJMKHMpfXZhciBiPXt9LGg9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PWUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSx0fX0oZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93JiZkb2N1bWVudCYmZG9jdW1lbnQuYWxsJiYhd2luZG93LmF0b2J9KSx5PWZ1bmN0aW9uKGUpe3ZhciB0PXt9O3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdm9pZCAwPT09dFtuXSYmKHRbbl09ZS5jYWxsKHRoaXMsbikpLHRbbl19fShmdW5jdGlvbihlKXtyZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKX0pLHY9bnVsbCxtPTAsZz1bXSxfPW4oMTg0KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgREVCVUcmJkRFQlVHJiZcIm9iamVjdFwiIT10eXBlb2YgZG9jdW1lbnQpdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO3Q9dHx8e30sdC5hdHRycz1cIm9iamVjdFwiPT10eXBlb2YgdC5hdHRycz90LmF0dHJzOnt9LHQuc2luZ2xldG9ufHwodC5zaW5nbGV0b249aCgpKSx0Lmluc2VydEludG98fCh0Lmluc2VydEludG89XCJoZWFkXCIpLHQuaW5zZXJ0QXR8fCh0Lmluc2VydEF0PVwiYm90dG9tXCIpO3ZhciBuPWEoZSx0KTtyZXR1cm4gcihuLHQpLGZ1bmN0aW9uKGUpe2Zvcih2YXIgbz1bXSxpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBzPW5baV0sdT1iW3MuaWRdO3UucmVmcy0tLG8ucHVzaCh1KX1lJiZyKGEoZSx0KSx0KTtmb3IodmFyIGk9MDtpPG8ubGVuZ3RoO2krKyl7dmFyIHU9b1tpXTtpZigwPT09dS5yZWZzKXtmb3IodmFyIGw9MDtsPHUucGFydHMubGVuZ3RoO2wrKyl1LnBhcnRzW2xdKCk7ZGVsZXRlIGJbdS5pZF19fX19O3ZhciBqPWZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQsbil7cmV0dXJuIGVbdF09bixlLmZpbHRlcihCb29sZWFuKS5qb2luKFwiXFxuXCIpfX0oKX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LmxvY2F0aW9uO2lmKCF0KXRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO2lmKCFlfHxcInN0cmluZ1wiIT10eXBlb2YgZSlyZXR1cm4gZTt2YXIgbj10LnByb3RvY29sK1wiLy9cIit0Lmhvc3Qscj1uK3QucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLFwiL1wiKTtyZXR1cm4gZS5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSxmdW5jdGlvbihlLHQpe3ZhciBhPXQudHJpbSgpLnJlcGxhY2UoL15cIiguKilcIiQvLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR9KS5yZXBsYWNlKC9eJyguKiknJC8sZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0pO2lmKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QoYSkpcmV0dXJuIGU7dmFyIG87cmV0dXJuIG89MD09PWEuaW5kZXhPZihcIi8vXCIpP2E6MD09PWEuaW5kZXhPZihcIi9cIik/bithOnIrYS5yZXBsYWNlKC9eXFwuXFwvLyxcIlwiKSxcInVybChcIitKU09OLnN0cmluZ2lmeShvKStcIilcIn0pfX1dKX0pOyIsIiFmdW5jdGlvbihlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKG51bGwpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZShudWxsKSk6d2luZG93LnN0eWxpcz1lKG51bGwpfShmdW5jdGlvbiBlKGEpe1widXNlIHN0cmljdFwiO3ZhciByPS9eXFwwKy9nLGM9L1tcXDBcXHJcXGZdL2cscz0vOiAqL2csdD0vem9vfGdyYS8saT0vKFssOiBdKSh0cmFuc2Zvcm0pL2csZj0vLCtcXHMqKD8hW14oXSpbKV0pL2csbj0vICtcXHMqKD8hW14oXSpbKV0pL2csbD0vICpbXFwwXSAqL2csbz0vLFxccis/L2csaD0vKFtcXHRcXHJcXG4gXSkqXFxmPyYvZyx1PS86Z2xvYmFsXFwoKCg/OlteXFwoXFwpXFxbXFxdXSp8XFxbLipcXF18XFwoW15cXChcXCldKlxcKSkqKVxcKS9nLGQ9L1xcVysvZyxiPS9AKGtcXHcrKVxccyooXFxTKilcXHMqLyxwPS86OihwbGFjZSkvZyxrPS86KHJlYWQtb25seSkvZyxnPS9cXHMrKD89W3tcXF07PTo+XSkvZyxBPS8oW1t9PTo+XSlcXHMrL2csQz0vKFxce1tee10rPyk7KD89XFx9KS9nLHc9L1xcc3syLH0vZyx2PS8oW15cXChdKSg6KykgKi9nLG09L1tzdmhdXFx3Ky1bdGJscl17Mn0vLHg9L1xcKFxccyooLiopXFxzKlxcKS9nLCQ9LyhbXFxzXFxTXSo/KTsvZyx5PS8tc2VsZnxmbGV4LS9nLE89L1teXSo/KDpbcnBdW2VsXWFbXFx3LV0rKVteXSovLGo9L3N0cmV0Y2h8OlxccypcXHcrXFwtKD86Y29udGV8YXZhaWwpLyx6PS8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sTj1cIi13ZWJraXQtXCIsUz1cIi1tb3otXCIsRj1cIi1tcy1cIixXPTU5LHE9MTI1LEI9MTIzLEQ9NDAsRT00MSxHPTkxLEg9OTMsST0xMCxKPTEzLEs9OSxMPTY0LE09MzIsUD0zOCxRPTQ1LFI9OTUsVD00MixVPTQ0LFY9NTgsWD0zOSxZPTM0LFo9NDcsXz02MixlZT00MyxhZT0xMjYscmU9MCxjZT0xMixzZT0xMSx0ZT0xMDcsaWU9MTA5LGZlPTExNSxuZT0xMTIsbGU9MTExLG9lPTEwNSxoZT05OSx1ZT0xMDAsZGU9MTEyLGJlPTEscGU9MSxrZT0wLGdlPTEsQWU9MSxDZT0xLHdlPTAsdmU9MCxtZT0wLHhlPVtdLCRlPVtdLHllPTAsT2U9bnVsbCxqZT0tMix6ZT0tMSxOZT0wLFNlPTEsRmU9MixXZT0zLHFlPTAsQmU9MSxEZT1cIlwiLEVlPVwiXCIsR2U9XCJcIjtmdW5jdGlvbiBIZShlLGEscyx0LGkpe2Zvcih2YXIgZixuLG89MCxoPTAsdT0wLGQ9MCxnPTAsQT0wLEM9MCx3PTAsbT0wLCQ9MCx5PTAsTz0wLGo9MCx6PTAsUj0wLHdlPTAsJGU9MCxPZT0wLGplPTAsemU9cy5sZW5ndGgsSmU9emUtMSxSZT1cIlwiLFRlPVwiXCIsVWU9XCJcIixWZT1cIlwiLFhlPVwiXCIsWWU9XCJcIjtSPHplOyl7aWYoQz1zLmNoYXJDb2RlQXQoUiksUj09PUplKWlmKGgrZCt1K28hPT0wKXtpZigwIT09aClDPWg9PT1aP0k6WjtkPXU9bz0wLHplKyssSmUrK31pZihoK2QrdStvPT09MCl7aWYoUj09PUplKXtpZih3ZT4wKVRlPVRlLnJlcGxhY2UoYyxcIlwiKTtpZihUZS50cmltKCkubGVuZ3RoPjApe3N3aXRjaChDKXtjYXNlIE06Y2FzZSBLOmNhc2UgVzpjYXNlIEo6Y2FzZSBJOmJyZWFrO2RlZmF1bHQ6VGUrPXMuY2hhckF0KFIpfUM9V319aWYoMT09PSRlKXN3aXRjaChDKXtjYXNlIEI6Y2FzZSBxOmNhc2UgVzpjYXNlIFk6Y2FzZSBYOmNhc2UgRDpjYXNlIEU6Y2FzZSBVOiRlPTA7Y2FzZSBLOmNhc2UgSjpjYXNlIEk6Y2FzZSBNOmJyZWFrO2RlZmF1bHQ6Zm9yKCRlPTAsamU9UixnPUMsUi0tLEM9VztqZTx6ZTspc3dpdGNoKHMuY2hhckNvZGVBdChqZSsrKSl7Y2FzZSBJOmNhc2UgSjpjYXNlIFc6KytSLEM9ZyxqZT16ZTticmVhaztjYXNlIFY6aWYod2U+MCkrK1IsQz1nO2Nhc2UgQjpqZT16ZX19c3dpdGNoKEMpe2Nhc2UgQjpmb3IoZz0oVGU9VGUudHJpbSgpKS5jaGFyQ29kZUF0KDApLHk9MSxqZT0rK1I7Ujx6ZTspe3N3aXRjaChDPXMuY2hhckNvZGVBdChSKSl7Y2FzZSBCOnkrKzticmVhaztjYXNlIHE6eS0tO2JyZWFrO2Nhc2UgWjpzd2l0Y2goQT1zLmNoYXJDb2RlQXQoUisxKSl7Y2FzZSBUOmNhc2UgWjpSPVFlKEEsUixKZSxzKX1icmVhaztjYXNlIEc6QysrO2Nhc2UgRDpDKys7Y2FzZSBZOmNhc2UgWDpmb3IoO1IrKzxKZSYmcy5jaGFyQ29kZUF0KFIpIT09QzspO31pZigwPT09eSlicmVhaztSKyt9aWYoVWU9cy5zdWJzdHJpbmcoamUsUiksZz09PXJlKWc9KFRlPVRlLnJlcGxhY2UocixcIlwiKS50cmltKCkpLmNoYXJDb2RlQXQoMCk7c3dpdGNoKGcpe2Nhc2UgTDppZih3ZT4wKVRlPVRlLnJlcGxhY2UoYyxcIlwiKTtzd2l0Y2goQT1UZS5jaGFyQ29kZUF0KDEpKXtjYXNlIHVlOmNhc2UgaWU6Y2FzZSBmZTpjYXNlIFE6Zj1hO2JyZWFrO2RlZmF1bHQ6Zj14ZX1pZihqZT0oVWU9SGUoYSxmLFVlLEEsaSsxKSkubGVuZ3RoLG1lPjAmJjA9PT1qZSlqZT1UZS5sZW5ndGg7aWYoeWU+MClpZihmPUllKHhlLFRlLE9lKSxuPVBlKFdlLFVlLGYsYSxwZSxiZSxqZSxBLGksdCksVGU9Zi5qb2luKFwiXCIpLHZvaWQgMCE9PW4paWYoMD09PShqZT0oVWU9bi50cmltKCkpLmxlbmd0aCkpQT0wLFVlPVwiXCI7aWYoamU+MClzd2l0Y2goQSl7Y2FzZSBmZTpUZT1UZS5yZXBsYWNlKHgsTWUpO2Nhc2UgdWU6Y2FzZSBpZTpjYXNlIFE6VWU9VGUrXCJ7XCIrVWUrXCJ9XCI7YnJlYWs7Y2FzZSB0ZTppZihVZT0oVGU9VGUucmVwbGFjZShiLFwiJDEgJDJcIisoQmU+MD9EZTpcIlwiKSkpK1wie1wiK1VlK1wifVwiLDE9PT1BZXx8Mj09PUFlJiZMZShcIkBcIitVZSwzKSlVZT1cIkBcIitOK1VlK1wiQFwiK1VlO2Vsc2UgVWU9XCJAXCIrVWU7YnJlYWs7ZGVmYXVsdDppZihVZT1UZStVZSx0PT09ZGUpVmUrPVVlLFVlPVwiXCJ9ZWxzZSBVZT1cIlwiO2JyZWFrO2RlZmF1bHQ6VWU9SGUoYSxJZShhLFRlLE9lKSxVZSx0LGkrMSl9WGUrPVVlLE89MCwkZT0wLHo9MCx3ZT0wLE9lPTAsaj0wLFRlPVwiXCIsVWU9XCJcIixDPXMuY2hhckNvZGVBdCgrK1IpO2JyZWFrO2Nhc2UgcTpjYXNlIFc6aWYoKGplPShUZT0od2U+MD9UZS5yZXBsYWNlKGMsXCJcIik6VGUpLnRyaW0oKSkubGVuZ3RoKT4xKXtpZigwPT09eilpZigoZz1UZS5jaGFyQ29kZUF0KDApKT09PVF8fGc+OTYmJmc8MTIzKWplPShUZT1UZS5yZXBsYWNlKFwiIFwiLFwiOlwiKSkubGVuZ3RoO2lmKHllPjApaWYodm9pZCAwIT09KG49UGUoU2UsVGUsYSxlLHBlLGJlLFZlLmxlbmd0aCx0LGksdCkpKWlmKDA9PT0oamU9KFRlPW4udHJpbSgpKS5sZW5ndGgpKVRlPVwiXFwwXFwwXCI7c3dpdGNoKGc9VGUuY2hhckNvZGVBdCgwKSxBPVRlLmNoYXJDb2RlQXQoMSksZyl7Y2FzZSByZTpicmVhaztjYXNlIEw6aWYoQT09PW9lfHxBPT09aGUpe1llKz1UZStzLmNoYXJBdChSKTticmVha31kZWZhdWx0OmlmKFRlLmNoYXJDb2RlQXQoamUtMSk9PT1WKWJyZWFrO1ZlKz1LZShUZSxnLEEsVGUuY2hhckNvZGVBdCgyKSl9fU89MCwkZT0wLHo9MCx3ZT0wLE9lPTAsVGU9XCJcIixDPXMuY2hhckNvZGVBdCgrK1IpfX1zd2l0Y2goQyl7Y2FzZSBKOmNhc2UgSTppZihoK2QrdStvK3ZlPT09MClzd2l0Y2goJCl7Y2FzZSBFOmNhc2UgWDpjYXNlIFk6Y2FzZSBMOmNhc2UgYWU6Y2FzZSBfOmNhc2UgVDpjYXNlIGVlOmNhc2UgWjpjYXNlIFE6Y2FzZSBWOmNhc2UgVTpjYXNlIFc6Y2FzZSBCOmNhc2UgcTpicmVhaztkZWZhdWx0OmlmKHo+MCkkZT0xfWlmKGg9PT1aKWg9MDtlbHNlIGlmKGdlK089PT0wJiZ0IT09dGUmJlRlLmxlbmd0aD4wKXdlPTEsVGUrPVwiXFwwXCI7aWYoeWUqcWU+MClQZShOZSxUZSxhLGUscGUsYmUsVmUubGVuZ3RoLHQsaSx0KTtiZT0xLHBlKys7YnJlYWs7Y2FzZSBXOmNhc2UgcTppZihoK2QrdStvPT09MCl7YmUrKzticmVha31kZWZhdWx0OnN3aXRjaChiZSsrLFJlPXMuY2hhckF0KFIpLEMpe2Nhc2UgSzpjYXNlIE06aWYoZCtvK2g9PT0wKXN3aXRjaCh3KXtjYXNlIFU6Y2FzZSBWOmNhc2UgSzpjYXNlIE06UmU9XCJcIjticmVhaztkZWZhdWx0OmlmKEMhPT1NKVJlPVwiIFwifWJyZWFrO2Nhc2UgcmU6UmU9XCJcXFxcMFwiO2JyZWFrO2Nhc2UgY2U6UmU9XCJcXFxcZlwiO2JyZWFrO2Nhc2Ugc2U6UmU9XCJcXFxcdlwiO2JyZWFrO2Nhc2UgUDppZihkK2grbz09PTAmJmdlPjApT2U9MSx3ZT0xLFJlPVwiXFxmXCIrUmU7YnJlYWs7Y2FzZSAxMDg6aWYoZCtoK28ra2U9PT0wJiZ6PjApc3dpdGNoKFIteil7Y2FzZSAyOmlmKHc9PT1uZSYmcy5jaGFyQ29kZUF0KFItMyk9PT1WKWtlPXc7Y2FzZSA4OmlmKG09PT1sZSlrZT1tfWJyZWFrO2Nhc2UgVjppZihkK2grbz09PTApej1SO2JyZWFrO2Nhc2UgVTppZihoK3UrZCtvPT09MCl3ZT0xLFJlKz1cIlxcclwiO2JyZWFrO2Nhc2UgWTpjYXNlIFg6aWYoMD09PWgpZD1kPT09Qz8wOjA9PT1kP0M6ZDticmVhaztjYXNlIEc6aWYoZCtoK3U9PT0wKW8rKzticmVhaztjYXNlIEg6aWYoZCtoK3U9PT0wKW8tLTticmVhaztjYXNlIEU6aWYoZCtoK289PT0wKXUtLTticmVhaztjYXNlIEQ6aWYoZCtoK289PT0wKXtpZigwPT09Tylzd2l0Y2goMip3KzMqbSl7Y2FzZSA1MzM6YnJlYWs7ZGVmYXVsdDp5PTAsTz0xfXUrK31icmVhaztjYXNlIEw6aWYoaCt1K2Qrbyt6K2o9PT0wKWo9MTticmVhaztjYXNlIFQ6Y2FzZSBaOmlmKGQrbyt1PjApYnJlYWs7c3dpdGNoKGgpe2Nhc2UgMDpzd2l0Y2goMipDKzMqcy5jaGFyQ29kZUF0KFIrMSkpe2Nhc2UgMjM1Omg9WjticmVhaztjYXNlIDIyMDpqZT1SLGg9VH1icmVhaztjYXNlIFQ6aWYoQz09PVomJnc9PT1UJiZqZSsyIT09Uil7aWYoMzM9PT1zLmNoYXJDb2RlQXQoamUrMikpVmUrPXMuc3Vic3RyaW5nKGplLFIrMSk7UmU9XCJcIixoPTB9fX1pZigwPT09aCl7aWYoZ2UrZCtvK2o9PT0wJiZ0IT09dGUmJkMhPT1XKXN3aXRjaChDKXtjYXNlIFU6Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIEU6Y2FzZSBEOmlmKDA9PT1PKXtzd2l0Y2godyl7Y2FzZSBLOmNhc2UgTTpjYXNlIEk6Y2FzZSBKOlJlKz1cIlxcMFwiO2JyZWFrO2RlZmF1bHQ6UmU9XCJcXDBcIitSZSsoQz09PVU/XCJcIjpcIlxcMFwiKX13ZT0xfWVsc2Ugc3dpdGNoKEMpe2Nhc2UgRDppZih6Kzc9PT1SJiYxMDg9PT13KXo9MDtPPSsreTticmVhaztjYXNlIEU6aWYoMD09KE89LS15KSl3ZT0xLFJlKz1cIlxcMFwifWJyZWFrO2Nhc2UgSzpjYXNlIE06c3dpdGNoKHcpe2Nhc2UgcmU6Y2FzZSBCOmNhc2UgcTpjYXNlIFc6Y2FzZSBVOmNhc2UgY2U6Y2FzZSBLOmNhc2UgTTpjYXNlIEk6Y2FzZSBKOmJyZWFrO2RlZmF1bHQ6aWYoMD09PU8pd2U9MSxSZSs9XCJcXDBcIn19aWYoVGUrPVJlLEMhPT1NJiZDIT09SykkPUN9fW09dyx3PUMsUisrfWlmKGplPVZlLmxlbmd0aCxtZT4wKWlmKDA9PT1qZSYmMD09PVhlLmxlbmd0aCYmMD09PWFbMF0ubGVuZ3RoPT1mYWxzZSlpZih0IT09aWV8fDE9PT1hLmxlbmd0aCYmKGdlPjA/RWU6R2UpPT09YVswXSlqZT1hLmpvaW4oXCIsXCIpLmxlbmd0aCsyO2lmKGplPjApe2lmKGY9MD09PWdlJiZ0IT09dGU/ZnVuY3Rpb24oZSl7Zm9yKHZhciBhLHIscz0wLHQ9ZS5sZW5ndGgsaT1BcnJheSh0KTtzPHQ7KytzKXtmb3IodmFyIGY9ZVtzXS5zcGxpdChsKSxuPVwiXCIsbz0wLGg9MCx1PTAsZD0wLGI9Zi5sZW5ndGg7bzxiOysrbyl7aWYoMD09PShoPShyPWZbb10pLmxlbmd0aCkmJmI+MSljb250aW51ZTtpZih1PW4uY2hhckNvZGVBdChuLmxlbmd0aC0xKSxkPXIuY2hhckNvZGVBdCgwKSxhPVwiXCIsMCE9PW8pc3dpdGNoKHUpe2Nhc2UgVDpjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgTTpjYXNlIEQ6YnJlYWs7ZGVmYXVsdDphPVwiIFwifXN3aXRjaChkKXtjYXNlIFA6cj1hK0VlO2Nhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBNOmNhc2UgRTpjYXNlIEQ6YnJlYWs7Y2FzZSBHOnI9YStyK0VlO2JyZWFrO2Nhc2UgVjpzd2l0Y2goMipyLmNoYXJDb2RlQXQoMSkrMypyLmNoYXJDb2RlQXQoMikpe2Nhc2UgNTMwOmlmKENlPjApe3I9YStyLnN1YnN0cmluZyg4LGgtMSk7YnJlYWt9ZGVmYXVsdDppZihvPDF8fGZbby0xXS5sZW5ndGg8MSlyPWErRWUrcn1icmVhaztjYXNlIFU6YT1cIlwiO2RlZmF1bHQ6aWYoaD4xJiZyLmluZGV4T2YoXCI6XCIpPjApcj1hK3IucmVwbGFjZSh2LFwiJDFcIitFZStcIiQyXCIpO2Vsc2Ugcj1hK3IrRWV9bis9cn1pW3NdPW4ucmVwbGFjZShjLFwiXCIpLnRyaW0oKX1yZXR1cm4gaX0oYSk6YSx5ZT4wKWlmKHZvaWQgMCE9PShuPVBlKEZlLFZlLGYsZSxwZSxiZSxqZSx0LGksdCkpJiYwPT09KFZlPW4pLmxlbmd0aClyZXR1cm4gWWUrVmUrWGU7aWYoVmU9Zi5qb2luKFwiLFwiKStcIntcIitWZStcIn1cIixBZSprZSE9MCl7aWYoMj09PUFlJiYhTGUoVmUsMikpa2U9MDtzd2l0Y2goa2Upe2Nhc2UgbGU6VmU9VmUucmVwbGFjZShrLFwiOlwiK1MrXCIkMVwiKStWZTticmVhaztjYXNlIG5lOlZlPVZlLnJlcGxhY2UocCxcIjo6XCIrTitcImlucHV0LSQxXCIpK1ZlLnJlcGxhY2UocCxcIjo6XCIrUytcIiQxXCIpK1ZlLnJlcGxhY2UocCxcIjpcIitGK1wiaW5wdXQtJDFcIikrVmV9a2U9MH19cmV0dXJuIFllK1ZlK1hlfWZ1bmN0aW9uIEllKGUsYSxyKXt2YXIgYz1hLnRyaW0oKS5zcGxpdChvKSxzPWMsdD1jLmxlbmd0aCxpPWUubGVuZ3RoO3N3aXRjaChpKXtjYXNlIDA6Y2FzZSAxOmZvcih2YXIgZj0wLG49MD09PWk/XCJcIjplWzBdK1wiIFwiO2Y8dDsrK2Ypc1tmXT1KZShuLHNbZl0scixpKS50cmltKCk7YnJlYWs7ZGVmYXVsdDpmPTA7dmFyIGw9MDtmb3Iocz1bXTtmPHQ7KytmKWZvcih2YXIgaD0wO2g8aTsrK2gpc1tsKytdPUplKGVbaF0rXCIgXCIsY1tmXSxyLGkpLnRyaW0oKX1yZXR1cm4gc31mdW5jdGlvbiBKZShlLGEscixjKXt2YXIgcz1hLHQ9cy5jaGFyQ29kZUF0KDApO2lmKHQ8MzMpdD0ocz1zLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtzd2l0Y2godCl7Y2FzZSBQOnN3aXRjaChnZStjKXtjYXNlIDA6Y2FzZSAxOmlmKDA9PT1lLnRyaW0oKS5sZW5ndGgpYnJlYWs7ZGVmYXVsdDpyZXR1cm4gcy5yZXBsYWNlKGgsXCIkMVwiK2UudHJpbSgpKX1icmVhaztjYXNlIFY6c3dpdGNoKHMuY2hhckNvZGVBdCgxKSl7Y2FzZSAxMDM6aWYoQ2U+MCYmZ2U+MClyZXR1cm4gcy5yZXBsYWNlKHUsXCIkMVwiKS5yZXBsYWNlKGgsXCIkMVwiK0dlKTticmVhaztkZWZhdWx0OnJldHVybiBlLnRyaW0oKStzLnJlcGxhY2UoaCxcIiQxXCIrZS50cmltKCkpfWRlZmF1bHQ6aWYocipnZT4wJiZzLmluZGV4T2YoXCJcXGZcIik+MClyZXR1cm4gcy5yZXBsYWNlKGgsKGUuY2hhckNvZGVBdCgwKT09PVY/XCJcIjpcIiQxXCIpK2UudHJpbSgpKX1yZXR1cm4gZStzfWZ1bmN0aW9uIEtlKGUsYSxyLGMpe3ZhciBsLG89MCxoPWUrXCI7XCIsdT0yKmErMypyKzQqYztpZig5NDQ9PT11KXJldHVybiBmdW5jdGlvbihlKXt2YXIgYT1lLmxlbmd0aCxyPWUuaW5kZXhPZihcIjpcIiw5KSsxLGM9ZS5zdWJzdHJpbmcoMCxyKS50cmltKCkscz1lLnN1YnN0cmluZyhyLGEtMSkudHJpbSgpO3N3aXRjaChlLmNoYXJDb2RlQXQoOSkqQmUpe2Nhc2UgMDpicmVhaztjYXNlIFE6aWYoMTEwIT09ZS5jaGFyQ29kZUF0KDEwKSlicmVhaztkZWZhdWx0OmZvcih2YXIgdD1zLnNwbGl0KChzPVwiXCIsZikpLGk9MCxyPTAsYT10Lmxlbmd0aDtpPGE7cj0wLCsraSl7Zm9yKHZhciBsPXRbaV0sbz1sLnNwbGl0KG4pO2w9b1tyXTspe3ZhciBoPWwuY2hhckNvZGVBdCgwKTtpZigxPT09QmUmJihoPkwmJmg8OTB8fGg+OTYmJmg8MTIzfHxoPT09Unx8aD09PVEmJmwuY2hhckNvZGVBdCgxKSE9PVEpKXN3aXRjaChpc05hTihwYXJzZUZsb2F0KGwpKSsoLTEhPT1sLmluZGV4T2YoXCIoXCIpKSl7Y2FzZSAxOnN3aXRjaChsKXtjYXNlXCJpbmZpbml0ZVwiOmNhc2VcImFsdGVybmF0ZVwiOmNhc2VcImJhY2t3YXJkc1wiOmNhc2VcInJ1bm5pbmdcIjpjYXNlXCJub3JtYWxcIjpjYXNlXCJmb3J3YXJkc1wiOmNhc2VcImJvdGhcIjpjYXNlXCJub25lXCI6Y2FzZVwibGluZWFyXCI6Y2FzZVwiZWFzZVwiOmNhc2VcImVhc2UtaW5cIjpjYXNlXCJlYXNlLW91dFwiOmNhc2VcImVhc2UtaW4tb3V0XCI6Y2FzZVwicGF1c2VkXCI6Y2FzZVwicmV2ZXJzZVwiOmNhc2VcImFsdGVybmF0ZS1yZXZlcnNlXCI6Y2FzZVwiaW5oZXJpdFwiOmNhc2VcImluaXRpYWxcIjpjYXNlXCJ1bnNldFwiOmNhc2VcInN0ZXAtc3RhcnRcIjpjYXNlXCJzdGVwLWVuZFwiOmJyZWFrO2RlZmF1bHQ6bCs9RGV9fW9bcisrXT1sfXMrPSgwPT09aT9cIlwiOlwiLFwiKStvLmpvaW4oXCIgXCIpfX1pZihzPWMrcytcIjtcIiwxPT09QWV8fDI9PT1BZSYmTGUocywxKSlyZXR1cm4gTitzK3M7cmV0dXJuIHN9KGgpO2Vsc2UgaWYoMD09PUFlfHwyPT09QWUmJiFMZShoLDEpKXJldHVybiBoO3N3aXRjaCh1KXtjYXNlIDEwMTU6cmV0dXJuIDk3PT09aC5jaGFyQ29kZUF0KDEwKT9OK2graDpoO2Nhc2UgOTUxOnJldHVybiAxMTY9PT1oLmNoYXJDb2RlQXQoMyk/TitoK2g6aDtjYXNlIDk2MzpyZXR1cm4gMTEwPT09aC5jaGFyQ29kZUF0KDUpP04raCtoOmg7Y2FzZSAxMDA5OmlmKDEwMCE9PWguY2hhckNvZGVBdCg0KSlicmVhaztjYXNlIDk2OTpjYXNlIDk0MjpyZXR1cm4gTitoK2g7Y2FzZSA5Nzg6cmV0dXJuIE4raCtTK2graDtjYXNlIDEwMTk6Y2FzZSA5ODM6cmV0dXJuIE4raCtTK2grRitoK2g7Y2FzZSA4ODM6aWYoaC5jaGFyQ29kZUF0KDgpPT09USlyZXR1cm4gTitoK2g7aWYoaC5pbmRleE9mKFwiaW1hZ2Utc2V0KFwiLDExKT4wKXJldHVybiBoLnJlcGxhY2UoeixcIiQxXCIrTitcIiQyXCIpK2g7cmV0dXJuIGg7Y2FzZSA5MzI6aWYoaC5jaGFyQ29kZUF0KDQpPT09USlzd2l0Y2goaC5jaGFyQ29kZUF0KDUpKXtjYXNlIDEwMzpyZXR1cm4gTitcImJveC1cIitoLnJlcGxhY2UoXCItZ3Jvd1wiLFwiXCIpK04raCtGK2gucmVwbGFjZShcImdyb3dcIixcInBvc2l0aXZlXCIpK2g7Y2FzZSAxMTU6cmV0dXJuIE4raCtGK2gucmVwbGFjZShcInNocmlua1wiLFwibmVnYXRpdmVcIikraDtjYXNlIDk4OnJldHVybiBOK2grRitoLnJlcGxhY2UoXCJiYXNpc1wiLFwicHJlZmVycmVkLXNpemVcIikraH1yZXR1cm4gTitoK0YraCtoO2Nhc2UgOTY0OnJldHVybiBOK2grRitcImZsZXgtXCIraCtoO2Nhc2UgMTAyMzppZig5OSE9PWguY2hhckNvZGVBdCg4KSlicmVhaztyZXR1cm4gbD1oLnN1YnN0cmluZyhoLmluZGV4T2YoXCI6XCIsMTUpKS5yZXBsYWNlKFwiZmxleC1cIixcIlwiKS5yZXBsYWNlKFwic3BhY2UtYmV0d2VlblwiLFwianVzdGlmeVwiKSxOK1wiYm94LXBhY2tcIitsK04raCtGK1wiZmxleC1wYWNrXCIrbCtoO2Nhc2UgMTAwNTpyZXR1cm4gdC50ZXN0KGgpP2gucmVwbGFjZShzLFwiOlwiK04pK2gucmVwbGFjZShzLFwiOlwiK1MpK2g6aDtjYXNlIDFlMzpzd2l0Y2gobz0obD1oLnN1YnN0cmluZygxMykudHJpbSgpKS5pbmRleE9mKFwiLVwiKSsxLGwuY2hhckNvZGVBdCgwKStsLmNoYXJDb2RlQXQobykpe2Nhc2UgMjI2Omw9aC5yZXBsYWNlKG0sXCJ0YlwiKTticmVhaztjYXNlIDIzMjpsPWgucmVwbGFjZShtLFwidGItcmxcIik7YnJlYWs7Y2FzZSAyMjA6bD1oLnJlcGxhY2UobSxcImxyXCIpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGh9cmV0dXJuIE4raCtGK2wraDtjYXNlIDEwMTc6aWYoLTE9PT1oLmluZGV4T2YoXCJzdGlja3lcIiw5KSlyZXR1cm4gaDtjYXNlIDk3NTpzd2l0Y2gobz0oaD1lKS5sZW5ndGgtMTAsdT0obD0oMzM9PT1oLmNoYXJDb2RlQXQobyk/aC5zdWJzdHJpbmcoMCxvKTpoKS5zdWJzdHJpbmcoZS5pbmRleE9mKFwiOlwiLDcpKzEpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSsoMHxsLmNoYXJDb2RlQXQoNykpKXtjYXNlIDIwMzppZihsLmNoYXJDb2RlQXQoOCk8MTExKWJyZWFrO2Nhc2UgMTE1Omg9aC5yZXBsYWNlKGwsTitsKStcIjtcIitoO2JyZWFrO2Nhc2UgMjA3OmNhc2UgMTAyOmg9aC5yZXBsYWNlKGwsTisodT4xMDI/XCJpbmxpbmUtXCI6XCJcIikrXCJib3hcIikrXCI7XCIraC5yZXBsYWNlKGwsTitsKStcIjtcIitoLnJlcGxhY2UobCxGK2wrXCJib3hcIikrXCI7XCIraH1yZXR1cm4gaCtcIjtcIjtjYXNlIDkzODppZihoLmNoYXJDb2RlQXQoNSk9PT1RKXN3aXRjaChoLmNoYXJDb2RlQXQoNikpe2Nhc2UgMTA1OnJldHVybiBsPWgucmVwbGFjZShcIi1pdGVtc1wiLFwiXCIpLE4raCtOK1wiYm94LVwiK2wrRitcImZsZXgtXCIrbCtoO2Nhc2UgMTE1OnJldHVybiBOK2grRitcImZsZXgtaXRlbS1cIitoLnJlcGxhY2UoeSxcIlwiKStoO2RlZmF1bHQ6cmV0dXJuIE4raCtGK1wiZmxleC1saW5lLXBhY2tcIitoLnJlcGxhY2UoXCJhbGlnbi1jb250ZW50XCIsXCJcIikucmVwbGFjZSh5LFwiXCIpK2h9YnJlYWs7Y2FzZSA5NzM6Y2FzZSA5ODk6aWYoaC5jaGFyQ29kZUF0KDMpIT09UXx8MTIyPT09aC5jaGFyQ29kZUF0KDQpKWJyZWFrO2Nhc2UgOTMxOmNhc2UgOTUzOmlmKHRydWU9PT1qLnRlc3QoZSkpaWYoMTE1PT09KGw9ZS5zdWJzdHJpbmcoZS5pbmRleE9mKFwiOlwiKSsxKSkuY2hhckNvZGVBdCgwKSlyZXR1cm4gS2UoZS5yZXBsYWNlKFwic3RyZXRjaFwiLFwiZmlsbC1hdmFpbGFibGVcIiksYSxyLGMpLnJlcGxhY2UoXCI6ZmlsbC1hdmFpbGFibGVcIixcIjpzdHJldGNoXCIpO2Vsc2UgcmV0dXJuIGgucmVwbGFjZShsLE4rbCkraC5yZXBsYWNlKGwsUytsLnJlcGxhY2UoXCJmaWxsLVwiLFwiXCIpKStoO2JyZWFrO2Nhc2UgOTYyOmlmKGg9TitoKygxMDI9PT1oLmNoYXJDb2RlQXQoNSk/RitoOlwiXCIpK2gscitjPT09MjExJiYxMDU9PT1oLmNoYXJDb2RlQXQoMTMpJiZoLmluZGV4T2YoXCJ0cmFuc2Zvcm1cIiwxMCk+MClyZXR1cm4gaC5zdWJzdHJpbmcoMCxoLmluZGV4T2YoXCI7XCIsMjcpKzEpLnJlcGxhY2UoaSxcIiQxXCIrTitcIiQyXCIpK2h9cmV0dXJuIGh9ZnVuY3Rpb24gTGUoZSxhKXt2YXIgcj1lLmluZGV4T2YoMT09PWE/XCI6XCI6XCJ7XCIpLGM9ZS5zdWJzdHJpbmcoMCwzIT09YT9yOjEwKSxzPWUuc3Vic3RyaW5nKHIrMSxlLmxlbmd0aC0xKTtyZXR1cm4gT2UoMiE9PWE/YzpjLnJlcGxhY2UoTyxcIiQxXCIpLHMsYSl9ZnVuY3Rpb24gTWUoZSxhKXt2YXIgcj1LZShhLGEuY2hhckNvZGVBdCgwKSxhLmNoYXJDb2RlQXQoMSksYS5jaGFyQ29kZUF0KDIpKTtyZXR1cm4gciE9PWErXCI7XCI/ci5yZXBsYWNlKCQsXCIgb3IgKCQxKVwiKS5zdWJzdHJpbmcoNCk6XCIoXCIrYStcIilcIn1mdW5jdGlvbiBQZShlLGEscixjLHMsdCxpLGYsbixsKXtmb3IodmFyIG8saD0wLHU9YTtoPHllOysraClzd2l0Y2gobz0kZVtoXS5jYWxsKFRlLGUsdSxyLGMscyx0LGksZixuLGwpKXtjYXNlIHZvaWQgMDpjYXNlIGZhbHNlOmNhc2UgdHJ1ZTpjYXNlIG51bGw6YnJlYWs7ZGVmYXVsdDp1PW99aWYodSE9PWEpcmV0dXJuIHV9ZnVuY3Rpb24gUWUoZSxhLHIsYyl7Zm9yKHZhciBzPWErMTtzPHI7KytzKXN3aXRjaChjLmNoYXJDb2RlQXQocykpe2Nhc2UgWjppZihlPT09VClpZihjLmNoYXJDb2RlQXQocy0xKT09PVQmJmErMiE9PXMpcmV0dXJuIHMrMTticmVhaztjYXNlIEk6aWYoZT09PVopcmV0dXJuIHMrMX1yZXR1cm4gc31mdW5jdGlvbiBSZShlKXtmb3IodmFyIGEgaW4gZSl7dmFyIHI9ZVthXTtzd2l0Y2goYSl7Y2FzZVwia2V5ZnJhbWVcIjpCZT0wfHI7YnJlYWs7Y2FzZVwiZ2xvYmFsXCI6Q2U9MHxyO2JyZWFrO2Nhc2VcImNhc2NhZGVcIjpnZT0wfHI7YnJlYWs7Y2FzZVwiY29tcHJlc3NcIjp3ZT0wfHI7YnJlYWs7Y2FzZVwic2VtaWNvbG9uXCI6dmU9MHxyO2JyZWFrO2Nhc2VcInByZXNlcnZlXCI6bWU9MHxyO2JyZWFrO2Nhc2VcInByZWZpeFwiOmlmKE9lPW51bGwsIXIpQWU9MDtlbHNlIGlmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHIpQWU9MTtlbHNlIEFlPTIsT2U9cn19cmV0dXJuIFJlfWZ1bmN0aW9uIFRlKGEscil7aWYodm9pZCAwIT09dGhpcyYmdGhpcy5jb25zdHJ1Y3Rvcj09PVRlKXJldHVybiBlKGEpO3ZhciBzPWEsdD1zLmNoYXJDb2RlQXQoMCk7aWYodDwzMyl0PShzPXMudHJpbSgpKS5jaGFyQ29kZUF0KDApO2lmKEJlPjApRGU9cy5yZXBsYWNlKGQsdD09PUc/XCJcIjpcIi1cIik7aWYodD0xLDE9PT1nZSlHZT1zO2Vsc2UgRWU9czt2YXIgaSxmPVtHZV07aWYoeWU+MClpZih2b2lkIDAhPT0oaT1QZSh6ZSxyLGYsZixwZSxiZSwwLDAsMCwwKSkmJlwic3RyaW5nXCI9PXR5cGVvZiBpKXI9aTt2YXIgbj1IZSh4ZSxmLHIsMCwwKTtpZih5ZT4wKWlmKHZvaWQgMCE9PShpPVBlKGplLG4sZixmLHBlLGJlLG4ubGVuZ3RoLDAsMCwwKSkmJlwic3RyaW5nXCIhPXR5cGVvZihuPWkpKXQ9MDtyZXR1cm4gRGU9XCJcIixHZT1cIlwiLEVlPVwiXCIsa2U9MCxwZT0xLGJlPTEsd2UqdD09MD9uOm4ucmVwbGFjZShjLFwiXCIpLnJlcGxhY2UoZyxcIlwiKS5yZXBsYWNlKEEsXCIkMVwiKS5yZXBsYWNlKEMsXCIkMVwiKS5yZXBsYWNlKHcsXCIgXCIpfWlmKFRlLnVzZT1mdW5jdGlvbiBlKGEpe3N3aXRjaChhKXtjYXNlIHZvaWQgMDpjYXNlIG51bGw6eWU9JGUubGVuZ3RoPTA7YnJlYWs7ZGVmYXVsdDppZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhKSRlW3llKytdPWE7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgYSlmb3IodmFyIHI9MCxjPWEubGVuZ3RoO3I8YzsrK3IpZShhW3JdKTtlbHNlIHFlPTB8ISFhfXJldHVybiBlfSxUZS5zZXQ9UmUsdm9pZCAwIT09YSlSZShhKTtyZXR1cm4gVGV9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxpcy5taW4uanMubWFwIiwidmFyIHNpbXBsZUlzRXF1YWwgPSBmdW5jdGlvbiBzaW1wbGVJc0VxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59O1xuXG5mdW5jdGlvbiBpbmRleCAocmVzdWx0Rm4sIGlzRXF1YWwpIHtcbiAgaWYgKGlzRXF1YWwgPT09IHZvaWQgMCkge1xuICAgIGlzRXF1YWwgPSBzaW1wbGVJc0VxdWFsO1xuICB9XG5cbiAgdmFyIGxhc3RUaGlzO1xuICB2YXIgbGFzdEFyZ3MgPSBbXTtcbiAgdmFyIGxhc3RSZXN1bHQ7XG4gIHZhciBjYWxsZWRPbmNlID0gZmFsc2U7XG5cbiAgdmFyIGlzTmV3QXJnRXF1YWxUb0xhc3QgPSBmdW5jdGlvbiBpc05ld0FyZ0VxdWFsVG9MYXN0KG5ld0FyZywgaW5kZXgpIHtcbiAgICByZXR1cm4gaXNFcXVhbChuZXdBcmcsIGxhc3RBcmdzW2luZGV4XSk7XG4gIH07XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIHJlc3VsdCgpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbmV3QXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIG5ld0FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgbmV3QXJncy5sZW5ndGggPT09IGxhc3RBcmdzLmxlbmd0aCAmJiBuZXdBcmdzLmV2ZXJ5KGlzTmV3QXJnRXF1YWxUb0xhc3QpKSB7XG4gICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICB9XG5cbiAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgY2FsbGVkT25jZSA9IHRydWU7XG4gICAgbGFzdFRoaXMgPSB0aGlzO1xuICAgIGxhc3RBcmdzID0gbmV3QXJncztcbiAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgfTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiAgSW4gdGhlXG4vLyBicm93c2VyIHRoaXMgaXMgYSBsaXR0bGUgY29tcGxpY2F0ZWQgZHVlIHRvIHVua25vd24gcXVhbGl0eSBvZiBNYXRoLnJhbmRvbSgpXG4vLyBhbmQgaW5jb25zaXN0ZW50IHN1cHBvcnQgZm9yIHRoZSBgY3J5cHRvYCBBUEkuICBXZSBkbyB0aGUgYmVzdCB3ZSBjYW4gdmlhXG4vLyBmZWF0dXJlLWRldGVjdGlvblxuXG4vLyBnZXRSYW5kb21WYWx1ZXMgbmVlZHMgdG8gYmUgaW52b2tlZCBpbiBhIGNvbnRleHQgd2hlcmUgXCJ0aGlzXCIgaXMgYSBDcnlwdG9cbi8vIGltcGxlbWVudGF0aW9uLiBBbHNvLCBmaW5kIHRoZSBjb21wbGV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gb24gSUUxMS5cbnZhciBnZXRSYW5kb21WYWx1ZXMgPSAodHlwZW9mKGNyeXB0bykgIT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQoY3J5cHRvKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mKG1zQ3J5cHRvKSAhPSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93Lm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyA9PSAnZnVuY3Rpb24nICYmIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKSk7XG5cbmlmIChnZXRSYW5kb21WYWx1ZXMpIHtcbiAgLy8gV0hBVFdHIGNyeXB0byBSTkcgLSBodHRwOi8vd2lraS53aGF0d2cub3JnL3dpa2kvQ3J5cHRvXG4gIHZhciBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd2hhdHdnUk5HKCkge1xuICAgIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG4gICAgcmV0dXJuIHJuZHM4O1xuICB9O1xufSBlbHNlIHtcbiAgLy8gTWF0aC5yYW5kb20oKS1iYXNlZCAoUk5HKVxuICAvL1xuICAvLyBJZiBhbGwgZWxzZSBmYWlscywgdXNlIE1hdGgucmFuZG9tKCkuICBJdCdzIGZhc3QsIGJ1dCBpcyBvZiB1bnNwZWNpZmllZFxuICAvLyBxdWFsaXR5LlxuICB2YXIgcm5kcyA9IG5ldyBBcnJheSgxNik7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYXRoUk5HKCkge1xuICAgIGZvciAodmFyIGkgPSAwLCByOyBpIDwgMTY7IGkrKykge1xuICAgICAgaWYgKChpICYgMHgwMykgPT09IDApIHIgPSBNYXRoLnJhbmRvbSgpICogMHgxMDAwMDAwMDA7XG4gICAgICBybmRzW2ldID0gciA+Pj4gKChpICYgMHgwMykgPDwgMykgJiAweGZmO1xuICAgIH1cblxuICAgIHJldHVybiBybmRzO1xuICB9O1xufVxuIiwiLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG52YXIgYnl0ZVRvSGV4ID0gW107XG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleFtpXSA9IChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zdWJzdHIoMSk7XG59XG5cbmZ1bmN0aW9uIGJ5dGVzVG9VdWlkKGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gb2Zmc2V0IHx8IDA7XG4gIHZhciBidGggPSBieXRlVG9IZXg7XG4gIC8vIGpvaW4gdXNlZCB0byBmaXggbWVtb3J5IGlzc3VlIGNhdXNlZCBieSBjb25jYXRlbmF0aW9uOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMTc1I2M0XG4gIHJldHVybiAoW2J0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sIFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV1dKS5qb2luKCcnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBieXRlc1RvVXVpZDtcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jaGFpbkZ1bmN0aW9uID0gcmVxdWlyZSgnY2hhaW4tZnVuY3Rpb24nKTtcblxudmFyIF9jaGFpbkZ1bmN0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYWluRnVuY3Rpb24pO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxudmFyIF9DaGlsZE1hcHBpbmcgPSByZXF1aXJlKCcuL3V0aWxzL0NoaWxkTWFwcGluZycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIGNvbXBvbmVudDogX3Byb3BUeXBlczIuZGVmYXVsdC5hbnksXG4gIGNoaWxkRmFjdG9yeTogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBjaGlsZHJlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5ub2RlXG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnQ6ICdzcGFuJyxcbiAgY2hpbGRGYWN0b3J5OiBmdW5jdGlvbiBjaGlsZEZhY3RvcnkoY2hpbGQpIHtcbiAgICByZXR1cm4gY2hpbGQ7XG4gIH1cbn07XG5cbnZhciBUcmFuc2l0aW9uR3JvdXAgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVHJhbnNpdGlvbkdyb3VwLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBUcmFuc2l0aW9uR3JvdXAocHJvcHMsIGNvbnRleHQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhbnNpdGlvbkdyb3VwKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcywgY29udGV4dCkpO1xuXG4gICAgX3RoaXMucGVyZm9ybUFwcGVhciA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XSA9IHRydWU7XG5cbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50V2lsbEFwcGVhcikge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50V2lsbEFwcGVhcihfdGhpcy5faGFuZGxlRG9uZUFwcGVhcmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVBcHBlYXJpbmcoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5faGFuZGxlRG9uZUFwcGVhcmluZyA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgaWYgKGNvbXBvbmVudC5jb21wb25lbnREaWRBcHBlYXIpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudERpZEFwcGVhcigpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XTtcblxuICAgICAgdmFyIGN1cnJlbnRDaGlsZE1hcHBpbmcgPSAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKCFjdXJyZW50Q2hpbGRNYXBwaW5nIHx8ICFjdXJyZW50Q2hpbGRNYXBwaW5nLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgLy8gVGhpcyB3YXMgcmVtb3ZlZCBiZWZvcmUgaXQgaGFkIGZ1bGx5IGFwcGVhcmVkLiBSZW1vdmUgaXQuXG4gICAgICAgIF90aGlzLnBlcmZvcm1MZWF2ZShrZXksIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLnBlcmZvcm1FbnRlciA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XSA9IHRydWU7XG5cbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50V2lsbEVudGVyKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnRXaWxsRW50ZXIoX3RoaXMuX2hhbmRsZURvbmVFbnRlcmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVFbnRlcmluZyhrZXksIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLl9oYW5kbGVEb25lRW50ZXJpbmcgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50RGlkRW50ZXIpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudERpZEVudGVyKCk7XG4gICAgICB9XG5cbiAgICAgIGRlbGV0ZSBfdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1trZXldO1xuXG4gICAgICB2YXIgY3VycmVudENoaWxkTWFwcGluZyA9ICgwLCBfQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZykoX3RoaXMucHJvcHMuY2hpbGRyZW4pO1xuXG4gICAgICBpZiAoIWN1cnJlbnRDaGlsZE1hcHBpbmcgfHwgIWN1cnJlbnRDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAvLyBUaGlzIHdhcyByZW1vdmVkIGJlZm9yZSBpdCBoYWQgZnVsbHkgZW50ZXJlZC4gUmVtb3ZlIGl0LlxuICAgICAgICBfdGhpcy5wZXJmb3JtTGVhdmUoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5wZXJmb3JtTGVhdmUgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV0gPSB0cnVlO1xuXG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudFdpbGxMZWF2ZSkge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50V2lsbExlYXZlKF90aGlzLl9oYW5kbGVEb25lTGVhdmluZy5iaW5kKF90aGlzLCBrZXksIGNvbXBvbmVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTm90ZSB0aGF0IHRoaXMgaXMgc29tZXdoYXQgZGFuZ2Vyb3VzIGIvYyBpdCBjYWxscyBzZXRTdGF0ZSgpXG4gICAgICAgIC8vIGFnYWluLCBlZmZlY3RpdmVseSBtdXRhdGluZyB0aGUgY29tcG9uZW50IGJlZm9yZSBhbGwgdGhlIHdvcmtcbiAgICAgICAgLy8gaXMgZG9uZS5cbiAgICAgICAgX3RoaXMuX2hhbmRsZURvbmVMZWF2aW5nKGtleSwgY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMuX2hhbmRsZURvbmVMZWF2aW5nID0gZnVuY3Rpb24gKGtleSwgY29tcG9uZW50KSB7XG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudERpZExlYXZlKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnREaWRMZWF2ZSgpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XTtcblxuICAgICAgdmFyIGN1cnJlbnRDaGlsZE1hcHBpbmcgPSAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKGN1cnJlbnRDaGlsZE1hcHBpbmcgJiYgY3VycmVudENoaWxkTWFwcGluZy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIC8vIFRoaXMgZW50ZXJlZCBhZ2FpbiBiZWZvcmUgaXQgZnVsbHkgbGVmdC4gQWRkIGl0IGFnYWluLlxuICAgICAgICBfdGhpcy5rZXlzVG9FbnRlci5wdXNoKGtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgICB2YXIgbmV3Q2hpbGRyZW4gPSBfZXh0ZW5kcyh7fSwgc3RhdGUuY2hpbGRyZW4pO1xuICAgICAgICAgIGRlbGV0ZSBuZXdDaGlsZHJlbltrZXldO1xuICAgICAgICAgIHJldHVybiB7IGNoaWxkcmVuOiBuZXdDaGlsZHJlbiB9O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMuY2hpbGRSZWZzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgY2hpbGRyZW46ICgwLCBfQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZykocHJvcHMuY2hpbGRyZW4pXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzID0ge307XG4gICAgdGhpcy5rZXlzVG9FbnRlciA9IFtdO1xuICAgIHRoaXMua2V5c1RvTGVhdmUgPSBbXTtcbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIGluaXRpYWxDaGlsZE1hcHBpbmcgPSB0aGlzLnN0YXRlLmNoaWxkcmVuO1xuICAgIGZvciAodmFyIGtleSBpbiBpbml0aWFsQ2hpbGRNYXBwaW5nKSB7XG4gICAgICBpZiAoaW5pdGlhbENoaWxkTWFwcGluZ1trZXldKSB7XG4gICAgICAgIHRoaXMucGVyZm9ybUFwcGVhcihrZXksIHRoaXMuY2hpbGRSZWZzW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIHZhciBuZXh0Q2hpbGRNYXBwaW5nID0gKDAsIF9DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKShuZXh0UHJvcHMuY2hpbGRyZW4pO1xuICAgIHZhciBwcmV2Q2hpbGRNYXBwaW5nID0gdGhpcy5zdGF0ZS5jaGlsZHJlbjtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgY2hpbGRyZW46ICgwLCBfQ2hpbGRNYXBwaW5nLm1lcmdlQ2hpbGRNYXBwaW5ncykocHJldkNoaWxkTWFwcGluZywgbmV4dENoaWxkTWFwcGluZylcbiAgICB9KTtcblxuICAgIGZvciAodmFyIGtleSBpbiBuZXh0Q2hpbGRNYXBwaW5nKSB7XG4gICAgICB2YXIgaGFzUHJldiA9IHByZXZDaGlsZE1hcHBpbmcgJiYgcHJldkNoaWxkTWFwcGluZy5oYXNPd25Qcm9wZXJ0eShrZXkpO1xuICAgICAgaWYgKG5leHRDaGlsZE1hcHBpbmdba2V5XSAmJiAhaGFzUHJldiAmJiAhdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1trZXldKSB7XG4gICAgICAgIHRoaXMua2V5c1RvRW50ZXIucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rZXkgaW4gcHJldkNoaWxkTWFwcGluZykge1xuICAgICAgdmFyIGhhc05leHQgPSBuZXh0Q2hpbGRNYXBwaW5nICYmIG5leHRDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoX2tleSk7XG4gICAgICBpZiAocHJldkNoaWxkTWFwcGluZ1tfa2V5XSAmJiAhaGFzTmV4dCAmJiAhdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1tfa2V5XSkge1xuICAgICAgICB0aGlzLmtleXNUb0xlYXZlLnB1c2goX2tleSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSWYgd2Ugd2FudCB0byBzb21lZGF5IGNoZWNrIGZvciByZW9yZGVyaW5nLCB3ZSBjb3VsZCBkbyBpdCBoZXJlLlxuICB9O1xuXG4gIFRyYW5zaXRpb25Hcm91cC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGtleXNUb0VudGVyID0gdGhpcy5rZXlzVG9FbnRlcjtcbiAgICB0aGlzLmtleXNUb0VudGVyID0gW107XG4gICAga2V5c1RvRW50ZXIuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gX3RoaXMyLnBlcmZvcm1FbnRlcihrZXksIF90aGlzMi5jaGlsZFJlZnNba2V5XSk7XG4gICAgfSk7XG5cbiAgICB2YXIga2V5c1RvTGVhdmUgPSB0aGlzLmtleXNUb0xlYXZlO1xuICAgIHRoaXMua2V5c1RvTGVhdmUgPSBbXTtcbiAgICBrZXlzVG9MZWF2ZS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBfdGhpczIucGVyZm9ybUxlYXZlKGtleSwgX3RoaXMyLmNoaWxkUmVmc1trZXldKTtcbiAgICB9KTtcbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIC8vIFRPRE86IHdlIGNvdWxkIGdldCByaWQgb2YgdGhlIG5lZWQgZm9yIHRoZSB3cmFwcGVyIG5vZGVcbiAgICAvLyBieSBjbG9uaW5nIGEgc2luZ2xlIGNoaWxkXG4gICAgdmFyIGNoaWxkcmVuVG9SZW5kZXIgPSBbXTtcblxuICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGtleSkge1xuICAgICAgdmFyIGNoaWxkID0gX3RoaXMzLnN0YXRlLmNoaWxkcmVuW2tleV07XG4gICAgICBpZiAoY2hpbGQpIHtcbiAgICAgICAgdmFyIGlzQ2FsbGJhY2tSZWYgPSB0eXBlb2YgY2hpbGQucmVmICE9PSAnc3RyaW5nJztcbiAgICAgICAgdmFyIGZhY3RvcnlDaGlsZCA9IF90aGlzMy5wcm9wcy5jaGlsZEZhY3RvcnkoY2hpbGQpO1xuICAgICAgICB2YXIgcmVmID0gZnVuY3Rpb24gcmVmKHIpIHtcbiAgICAgICAgICBfdGhpczMuY2hpbGRSZWZzW2tleV0gPSByO1xuICAgICAgICB9O1xuXG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKGlzQ2FsbGJhY2tSZWYsICdzdHJpbmcgcmVmcyBhcmUgbm90IHN1cHBvcnRlZCBvbiBjaGlsZHJlbiBvZiBUcmFuc2l0aW9uR3JvdXAgYW5kIHdpbGwgYmUgaWdub3JlZC4gJyArICdQbGVhc2UgdXNlIGEgY2FsbGJhY2sgcmVmIGluc3RlYWQ6IGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvcmVmcy1hbmQtdGhlLWRvbS5odG1sI3RoZS1yZWYtY2FsbGJhY2stYXR0cmlidXRlJykgOiB2b2lkIDA7XG5cbiAgICAgICAgLy8gQWx3YXlzIGNoYWluaW5nIHRoZSByZWZzIGxlYWRzIHRvIHByb2JsZW1zIHdoZW4gdGhlIGNoaWxkRmFjdG9yeVxuICAgICAgICAvLyB3cmFwcyB0aGUgY2hpbGQuIFRoZSBjaGlsZCByZWYgY2FsbGJhY2sgZ2V0cyBjYWxsZWQgdHdpY2Ugd2l0aCB0aGVcbiAgICAgICAgLy8gd3JhcHBlciBhbmQgdGhlIGNoaWxkLiBTbyB3ZSBvbmx5IG5lZWQgdG8gY2hhaW4gdGhlIHJlZiBpZiB0aGVcbiAgICAgICAgLy8gZmFjdG9yeUNoaWxkIGlzIG5vdCBkaWZmZXJlbnQgZnJvbSBjaGlsZC5cbiAgICAgICAgaWYgKGZhY3RvcnlDaGlsZCA9PT0gY2hpbGQgJiYgaXNDYWxsYmFja1JlZikge1xuICAgICAgICAgIHJlZiA9ICgwLCBfY2hhaW5GdW5jdGlvbjIuZGVmYXVsdCkoY2hpbGQucmVmLCByZWYpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gWW91IG1heSBuZWVkIHRvIGFwcGx5IHJlYWN0aXZlIHVwZGF0ZXMgdG8gYSBjaGlsZCBhcyBpdCBpcyBsZWF2aW5nLlxuICAgICAgICAvLyBUaGUgbm9ybWFsIFJlYWN0IHdheSB0byBkbyBpdCB3b24ndCB3b3JrIHNpbmNlIHRoZSBjaGlsZCB3aWxsIGhhdmVcbiAgICAgICAgLy8gYWxyZWFkeSBiZWVuIHJlbW92ZWQuIEluIGNhc2UgeW91IG5lZWQgdGhpcyBiZWhhdmlvciB5b3UgY2FuIHByb3ZpZGVcbiAgICAgICAgLy8gYSBjaGlsZEZhY3RvcnkgZnVuY3Rpb24gdG8gd3JhcCBldmVyeSBjaGlsZCwgZXZlbiB0aGUgb25lcyB0aGF0IGFyZVxuICAgICAgICAvLyBsZWF2aW5nLlxuICAgICAgICBjaGlsZHJlblRvUmVuZGVyLnB1c2goX3JlYWN0Mi5kZWZhdWx0LmNsb25lRWxlbWVudChmYWN0b3J5Q2hpbGQsIHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICByZWY6IHJlZlxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLnN0YXRlLmNoaWxkcmVuKSB7XG4gICAgICBfbG9vcChrZXkpO1xuICAgIH1cblxuICAgIC8vIERvIG5vdCBmb3J3YXJkIFRyYW5zaXRpb25Hcm91cCBwcm9wcyB0byBwcmltaXRpdmUgRE9NIG5vZGVzXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHRoaXMucHJvcHMpO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uTGVhdmU7XG4gICAgZGVsZXRlIHByb3BzLnRyYW5zaXRpb25OYW1lO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uQXBwZWFyO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uRW50ZXI7XG4gICAgZGVsZXRlIHByb3BzLmNoaWxkRmFjdG9yeTtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkxlYXZlVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkVudGVyVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkFwcGVhclRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLmNvbXBvbmVudDtcblxuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLnByb3BzLmNvbXBvbmVudCwgcHJvcHMsIGNoaWxkcmVuVG9SZW5kZXIpO1xuICB9O1xuXG4gIHJldHVybiBUcmFuc2l0aW9uR3JvdXA7XG59KF9yZWFjdDIuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5UcmFuc2l0aW9uR3JvdXAuZGlzcGxheU5hbWUgPSAnVHJhbnNpdGlvbkdyb3VwJztcblxuXG5UcmFuc2l0aW9uR3JvdXAucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gcHJvcFR5cGVzIDoge307XG5UcmFuc2l0aW9uR3JvdXAuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBUcmFuc2l0aW9uR3JvdXA7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9kZWZhdWx0ID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMubmFtZVNoYXBlID0gdW5kZWZpbmVkO1xuZXhwb3J0cy50cmFuc2l0aW9uVGltZW91dCA9IHRyYW5zaXRpb25UaW1lb3V0O1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uVGltZW91dCh0cmFuc2l0aW9uVHlwZSkge1xuICB2YXIgdGltZW91dFByb3BOYW1lID0gJ3RyYW5zaXRpb24nICsgdHJhbnNpdGlvblR5cGUgKyAnVGltZW91dCc7XG4gIHZhciBlbmFibGVkUHJvcE5hbWUgPSAndHJhbnNpdGlvbicgKyB0cmFuc2l0aW9uVHlwZTtcblxuICByZXR1cm4gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgLy8gSWYgdGhlIHRyYW5zaXRpb24gaXMgZW5hYmxlZFxuICAgIGlmIChwcm9wc1tlbmFibGVkUHJvcE5hbWVdKSB7XG4gICAgICAvLyBJZiBubyB0aW1lb3V0IGR1cmF0aW9uIGlzIHByb3ZpZGVkXG4gICAgICBpZiAocHJvcHNbdGltZW91dFByb3BOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IodGltZW91dFByb3BOYW1lICsgJyB3YXNuXFwndCBzdXBwbGllZCB0byBDU1NUcmFuc2l0aW9uR3JvdXA6ICcgKyAndGhpcyBjYW4gY2F1c2UgdW5yZWxpYWJsZSBhbmltYXRpb25zIGFuZCB3b25cXCd0IGJlIHN1cHBvcnRlZCBpbiAnICsgJ2EgZnV0dXJlIHZlcnNpb24gb2YgUmVhY3QuIFNlZSAnICsgJ2h0dHBzOi8vZmIubWUvcmVhY3QtYW5pbWF0aW9uLXRyYW5zaXRpb24tZ3JvdXAtdGltZW91dCBmb3IgbW9yZSAnICsgJ2luZm9ybWF0aW9uLicpO1xuXG4gICAgICAgIC8vIElmIHRoZSBkdXJhdGlvbiBpc24ndCBhIG51bWJlclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcHJvcHNbdGltZW91dFByb3BOYW1lXSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcih0aW1lb3V0UHJvcE5hbWUgKyAnIG11c3QgYmUgYSBudW1iZXIgKGluIG1pbGxpc2Vjb25kcyknKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbn1cblxudmFyIG5hbWVTaGFwZSA9IGV4cG9ydHMubmFtZVNoYXBlID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0LnNoYXBlKHtcbiAgZW50ZXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBsZWF2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGFjdGl2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbn0pLCBfcHJvcFR5cGVzMi5kZWZhdWx0LnNoYXBlKHtcbiAgZW50ZXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBlbnRlckFjdGl2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGxlYXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgbGVhdmVBY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBhcHBlYXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBhcHBlYXJBY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59KV0pOyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQocmVxdWlyZShcInJlYWN0XCIpLHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpLHJlcXVpcmUoXCJkM1wiKSxyZXF1aXJlKFwidXVpZFwiKSxyZXF1aXJlKFwiY2xvbmVcIikscmVxdWlyZShcImRlZXAtZXF1YWxcIikscmVxdWlyZShcInJlYWN0LXRyYW5zaXRpb24tZ3JvdXBcIikpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJyZWFjdC1kMy10cmVlXCIsW1wicmVhY3RcIixcInByb3AtdHlwZXNcIixcImQzXCIsXCJ1dWlkXCIsXCJjbG9uZVwiLFwiZGVlcC1lcXVhbFwiLFwicmVhY3QtdHJhbnNpdGlvbi1ncm91cFwiXSx0KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzW1wicmVhY3QtZDMtdHJlZVwiXT10KHJlcXVpcmUoXCJyZWFjdFwiKSxyZXF1aXJlKFwicHJvcC10eXBlc1wiKSxyZXF1aXJlKFwiZDNcIikscmVxdWlyZShcInV1aWRcIikscmVxdWlyZShcImNsb25lXCIpLHJlcXVpcmUoXCJkZWVwLWVxdWFsXCIpLHJlcXVpcmUoXCJyZWFjdC10cmFuc2l0aW9uLWdyb3VwXCIpKTplW1wicmVhY3QtZDMtdHJlZVwiXT10KGUucmVhY3QsZVtcInByb3AtdHlwZXNcIl0sZS5kMyxlLnV1aWQsZS5jbG9uZSxlW1wiZGVlcC1lcXVhbFwiXSxlW1wicmVhY3QtdHJhbnNpdGlvbi1ncm91cFwiXSl9KHRoaXMsZnVuY3Rpb24oZSx0LG4scixvLGEsaSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQocil7aWYobltyXSlyZXR1cm4gbltyXS5leHBvcnRzO3ZhciBvPW5bcl09e2k6cixsOiExLGV4cG9ydHM6e319O3JldHVybiBlW3JdLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLHQpLG8ubD0hMCxvLmV4cG9ydHN9dmFyIG49e307cmV0dXJuIHQubT1lLHQuYz1uLHQuZD1mdW5jdGlvbihlLG4scil7dC5vKGUsbil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4se2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpyfSl9LHQubj1mdW5jdGlvbihlKXt2YXIgbj1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gdC5kKG4sXCJhXCIsbiksbn0sdC5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSx0LnA9XCJcIix0KHQucz02KX0oW2Z1bmN0aW9uKHQsbil7dC5leHBvcnRzPWV9LGZ1bmN0aW9uKGUsbil7ZS5leHBvcnRzPXR9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPW59LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXJ9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlLHQpe3ZhciBuPWVbMV18fFwiXCIsbz1lWzNdO2lmKCFvKXJldHVybiBuO2lmKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGJ0b2Epe3ZhciBhPXIobyk7cmV0dXJuW25dLmNvbmNhdChvLnNvdXJjZXMubWFwKGZ1bmN0aW9uKGUpe3JldHVyblwiLyojIHNvdXJjZVVSTD1cIitvLnNvdXJjZVJvb3QrZStcIiAqL1wifSkpLmNvbmNhdChbYV0pLmpvaW4oXCJcXG5cIil9cmV0dXJuW25dLmpvaW4oXCJcXG5cIil9ZnVuY3Rpb24gcihlKXtyZXR1cm5cIi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIitidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShlKSkpKStcIiAqL1wifWUuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1bXTtyZXR1cm4gdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbih0KXt2YXIgcj1uKHQsZSk7cmV0dXJuIHRbMl0/XCJAbWVkaWEgXCIrdFsyXStcIntcIityK1wifVwiOnJ9KS5qb2luKFwiXCIpfSx0Lmk9ZnVuY3Rpb24oZSxuKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9W1tudWxsLGUsXCJcIl1dKTtmb3IodmFyIHI9e30sbz0wO288dGhpcy5sZW5ndGg7bysrKXt2YXIgYT10aGlzW29dWzBdO1wibnVtYmVyXCI9PXR5cGVvZiBhJiYoclthXT0hMCl9Zm9yKG89MDtvPGUubGVuZ3RoO28rKyl7dmFyIGk9ZVtvXTtcIm51bWJlclwiPT10eXBlb2YgaVswXSYmcltpWzBdXXx8KG4mJiFpWzJdP2lbMl09bjpuJiYoaVsyXT1cIihcIitpWzJdK1wiKSBhbmQgKFwiK24rXCIpXCIpLHQucHVzaChpKSl9fSx0fX0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0KXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXSxvPXlbci5pZF07aWYobyl7by5yZWZzKys7Zm9yKHZhciBhPTA7YTxvLnBhcnRzLmxlbmd0aDthKyspby5wYXJ0c1thXShyLnBhcnRzW2FdKTtmb3IoO2E8ci5wYXJ0cy5sZW5ndGg7YSsrKW8ucGFydHMucHVzaChmKHIucGFydHNbYV0sdCkpfWVsc2V7Zm9yKHZhciBpPVtdLGE9MDthPHIucGFydHMubGVuZ3RoO2ErKylpLnB1c2goZihyLnBhcnRzW2FdLHQpKTt5W3IuaWRdPXtpZDpyLmlkLHJlZnM6MSxwYXJ0czppfX19fWZ1bmN0aW9uIG8oZSx0KXtmb3IodmFyIG49W10scj17fSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBhPWVbb10saT10LmJhc2U/YVswXSt0LmJhc2U6YVswXSxzPWFbMV0sdT1hWzJdLGw9YVszXSxjPXtjc3M6cyxtZWRpYTp1LHNvdXJjZU1hcDpsfTtyW2ldP3JbaV0ucGFydHMucHVzaChjKTpuLnB1c2gocltpXT17aWQ6aSxwYXJ0czpbY119KX1yZXR1cm4gbn1mdW5jdGlvbiBhKGUsdCl7dmFyIG49bShlLmluc2VydEludG8pO2lmKCFuKXRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO3ZhciByPXhbeC5sZW5ndGgtMV07aWYoXCJ0b3BcIj09PWUuaW5zZXJ0QXQpcj9yLm5leHRTaWJsaW5nP24uaW5zZXJ0QmVmb3JlKHQsci5uZXh0U2libGluZyk6bi5hcHBlbmRDaGlsZCh0KTpuLmluc2VydEJlZm9yZSh0LG4uZmlyc3RDaGlsZCkseC5wdXNoKHQpO2Vsc2UgaWYoXCJib3R0b21cIj09PWUuaW5zZXJ0QXQpbi5hcHBlbmRDaGlsZCh0KTtlbHNle2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlLmluc2VydEF0fHwhZS5pbnNlcnRBdC5iZWZvcmUpdGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7dmFyIG89bShlLmluc2VydEF0LmJlZm9yZSxuKTtuLmluc2VydEJlZm9yZSh0LG8pfX1mdW5jdGlvbiBpKGUpe2lmKG51bGw9PT1lLnBhcmVudE5vZGUpcmV0dXJuITE7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpO3ZhciB0PXguaW5kZXhPZihlKTt0Pj0wJiZ4LnNwbGljZSh0LDEpfWZ1bmN0aW9uIHMoZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO2lmKHZvaWQgMD09PWUuYXR0cnMudHlwZSYmKGUuYXR0cnMudHlwZT1cInRleHQvY3NzXCIpLHZvaWQgMD09PWUuYXR0cnMubm9uY2Upe3ZhciBuPWMoKTtuJiYoZS5hdHRycy5ub25jZT1uKX1yZXR1cm4gbCh0LGUuYXR0cnMpLGEoZSx0KSx0fWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7cmV0dXJuIHZvaWQgMD09PWUuYXR0cnMudHlwZSYmKGUuYXR0cnMudHlwZT1cInRleHQvY3NzXCIpLGUuYXR0cnMucmVsPVwic3R5bGVzaGVldFwiLGwodCxlLmF0dHJzKSxhKGUsdCksdH1mdW5jdGlvbiBsKGUsdCl7T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihuKXtlLnNldEF0dHJpYnV0ZShuLHRbbl0pfSl9ZnVuY3Rpb24gYygpe3JldHVybiBuLm5jfWZ1bmN0aW9uIGYoZSx0KXt2YXIgbixyLG8sYTtpZih0LnRyYW5zZm9ybSYmZS5jc3Mpe2lmKCEoYT10LnRyYW5zZm9ybShlLmNzcykpKXJldHVybiBmdW5jdGlvbigpe307ZS5jc3M9YX1pZih0LnNpbmdsZXRvbil7dmFyIGw9TysrO249Z3x8KGc9cyh0KSkscj1kLmJpbmQobnVsbCxuLGwsITEpLG89ZC5iaW5kKG51bGwsbixsLCEwKX1lbHNlIGUuc291cmNlTWFwJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVUkwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEJsb2ImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGJ0b2E/KG49dSh0KSxyPWguYmluZChudWxsLG4sdCksbz1mdW5jdGlvbigpe2kobiksbi5ocmVmJiZVUkwucmV2b2tlT2JqZWN0VVJMKG4uaHJlZil9KToobj1zKHQpLHI9cC5iaW5kKG51bGwsbiksbz1mdW5jdGlvbigpe2kobil9KTtyZXR1cm4gcihlKSxmdW5jdGlvbih0KXtpZih0KXtpZih0LmNzcz09PWUuY3NzJiZ0Lm1lZGlhPT09ZS5tZWRpYSYmdC5zb3VyY2VNYXA9PT1lLnNvdXJjZU1hcClyZXR1cm47cihlPXQpfWVsc2UgbygpfX1mdW5jdGlvbiBkKGUsdCxuLHIpe3ZhciBvPW4/XCJcIjpyLmNzcztpZihlLnN0eWxlU2hlZXQpZS5zdHlsZVNoZWV0LmNzc1RleHQ9dyh0LG8pO2Vsc2V7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobyksaT1lLmNoaWxkTm9kZXM7aVt0XSYmZS5yZW1vdmVDaGlsZChpW3RdKSxpLmxlbmd0aD9lLmluc2VydEJlZm9yZShhLGlbdF0pOmUuYXBwZW5kQ2hpbGQoYSl9fWZ1bmN0aW9uIHAoZSx0KXt2YXIgbj10LmNzcyxyPXQubWVkaWE7aWYociYmZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLHIpLGUuc3R5bGVTaGVldCllLnN0eWxlU2hlZXQuY3NzVGV4dD1uO2Vsc2V7Zm9yKDtlLmZpcnN0Q2hpbGQ7KWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKTtlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pKX19ZnVuY3Rpb24gaChlLHQsbil7dmFyIHI9bi5jc3Msbz1uLnNvdXJjZU1hcCxhPXZvaWQgMD09PXQuY29udmVydFRvQWJzb2x1dGVVcmxzJiZvOyh0LmNvbnZlcnRUb0Fic29sdXRlVXJsc3x8YSkmJihyPV8ocikpLG8mJihyKz1cIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIrYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkobykpKSkrXCIgKi9cIik7dmFyIGk9bmV3IEJsb2IoW3JdLHt0eXBlOlwidGV4dC9jc3NcIn0pLHM9ZS5ocmVmO2UuaHJlZj1VUkwuY3JlYXRlT2JqZWN0VVJMKGkpLHMmJlVSTC5yZXZva2VPYmplY3RVUkwocyl9dmFyIHk9e30sYj1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLHR9fShmdW5jdGlvbigpe3JldHVybiB3aW5kb3cmJmRvY3VtZW50JiZkb2N1bWVudC5hbGwmJiF3aW5kb3cuYXRvYn0pLHY9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdD90LnF1ZXJ5U2VsZWN0b3IoZSk6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKX0sbT1mdW5jdGlvbihlKXt2YXIgdD17fTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlKXJldHVybiBlKCk7aWYodm9pZCAwPT09dFtlXSl7dmFyIHI9di5jYWxsKHRoaXMsZSxuKTtpZih3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQmJnIgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpdHJ5e3I9ci5jb250ZW50RG9jdW1lbnQuaGVhZH1jYXRjaChlKXtyPW51bGx9dFtlXT1yfXJldHVybiB0W2VdfX0oKSxnPW51bGwsTz0wLHg9W10sXz1uKDE3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgREVCVUcmJkRFQlVHJiZcIm9iamVjdFwiIT10eXBlb2YgZG9jdW1lbnQpdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO3Q9dHx8e30sdC5hdHRycz1cIm9iamVjdFwiPT10eXBlb2YgdC5hdHRycz90LmF0dHJzOnt9LHQuc2luZ2xldG9ufHxcImJvb2xlYW5cIj09dHlwZW9mIHQuc2luZ2xldG9ufHwodC5zaW5nbGV0b249YigpKSx0Lmluc2VydEludG98fCh0Lmluc2VydEludG89XCJoZWFkXCIpLHQuaW5zZXJ0QXR8fCh0Lmluc2VydEF0PVwiYm90dG9tXCIpO3ZhciBuPW8oZSx0KTtyZXR1cm4gcihuLHQpLGZ1bmN0aW9uKGUpe2Zvcih2YXIgYT1bXSxpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBzPW5baV0sdT15W3MuaWRdO3UucmVmcy0tLGEucHVzaCh1KX1pZihlKXtyKG8oZSx0KSx0KX1mb3IodmFyIGk9MDtpPGEubGVuZ3RoO2krKyl7dmFyIHU9YVtpXTtpZigwPT09dS5yZWZzKXtmb3IodmFyIGw9MDtsPHUucGFydHMubGVuZ3RoO2wrKyl1LnBhcnRzW2xdKCk7ZGVsZXRlIHlbdS5pZF19fX19O3ZhciB3PWZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQsbil7cmV0dXJuIGVbdF09bixlLmZpbHRlcihCb29sZWFuKS5qb2luKFwiXFxuXCIpfX0oKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQudHJlZVV0aWw9dC5UcmVlPXZvaWQgMDt2YXIgcj1uKDcpLG89ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKSxhPW4oMjMpLGk9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShhKTt0LlRyZWU9by5kZWZhdWx0LHQudHJlZVV0aWw9aSx0LmRlZmF1bHQ9by5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gYShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMSksZD1yKGYpLHA9bigyKSxoPW4oOCkseT1yKGgpLGI9big5KSx2PXIoYiksbT1uKDMpLGc9cihtKSxPPW4oMTApLHg9cihPKSxfPW4oMTIpLHc9cihfKSxqPW4oMTgpLGs9cihqKTtuKDIxKTt2YXIgUz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLGk7byh0aGlzLHQpO2Zvcih2YXIgcz1hcmd1bWVudHMubGVuZ3RoLHU9QXJyYXkocyksbD0wO2w8cztsKyspdVtsXT1hcmd1bWVudHNbbF07cmV0dXJuIG49cj1hKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQodSkpKSxyLnN0YXRlPXtkYXRhOnIuYXNzaWduSW50ZXJuYWxQcm9wZXJ0aWVzKCgwLHkuZGVmYXVsdCkoci5wcm9wcy5kYXRhKSkscmQzdFN2Z0NsYXNzTmFtZTpcIl9cIitnLmRlZmF1bHQudjQoKSxyZDN0R0NsYXNzTmFtZTpcIl9cIitnLmRlZmF1bHQudjQoKX0sci5pbnRlcm5hbFN0YXRlPXtpbml0aWFsUmVuZGVyOiEwLHRhcmdldE5vZGU6bnVsbCxpc1RyYW5zaXRpb25pbmc6ITEsZDM6e3NjYWxlOnIucHJvcHMuem9vbSx0cmFuc2xhdGU6ci5wcm9wcy50cmFuc2xhdGV9fSxyLmhhbmRsZU5vZGVUb2dnbGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj0oMCx5LmRlZmF1bHQpKHIuc3RhdGUuZGF0YSksbz1yLmZpbmROb2Rlc0J5SWQoZSxuLFtdKSxhPW9bMF07dC5wZXJzaXN0KCksci5wcm9wcy5jb2xsYXBzaWJsZSYmIXIuc3RhdGUuaXNUcmFuc2l0aW9uaW5nPyhhLl9jb2xsYXBzZWQ/KHIuZXhwYW5kTm9kZShhKSxyLnByb3BzLnNob3VsZENvbGxhcHNlTmVpZ2hib3JOb2RlcyYmci5jb2xsYXBzZU5laWdoYm9yTm9kZXMoYSxuKSk6ci5jb2xsYXBzZU5vZGUoYSksci5zZXRTdGF0ZSh7ZGF0YTpuLGlzVHJhbnNpdGlvbmluZzohMH0sZnVuY3Rpb24oKXtyZXR1cm4gci5oYW5kbGVPbkNsaWNrQ2IoYSx0KX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gci5zZXRTdGF0ZSh7aXNUcmFuc2l0aW9uaW5nOiExfSl9LHIucHJvcHMudHJhbnNpdGlvbkR1cmF0aW9uKzEwKSxyLmludGVybmFsU3RhdGUudGFyZ2V0Tm9kZT1hKTpyLmhhbmRsZU9uQ2xpY2tDYihhLHQpfSxyLmhhbmRsZU9uQ2xpY2tDYj1mdW5jdGlvbihlLHQpe3ZhciBuPXIucHJvcHMub25DbGljaztuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiZuKCgwLHkuZGVmYXVsdCkoZSksdCl9LHIuaGFuZGxlT25Nb3VzZU92ZXJDYj1mdW5jdGlvbihlLHQpe3ZhciBuPXIucHJvcHMub25Nb3VzZU92ZXI7aWYobiYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbil7dmFyIG89KDAseS5kZWZhdWx0KShyLnN0YXRlLmRhdGEpLGE9ci5maW5kTm9kZXNCeUlkKGUsbyxbXSksaT1hWzBdO3QucGVyc2lzdCgpLG4oKDAseS5kZWZhdWx0KShpKSx0KX19LHIuaGFuZGxlT25Nb3VzZU91dENiPWZ1bmN0aW9uKGUsdCl7dmFyIG49ci5wcm9wcy5vbk1vdXNlT3V0O2lmKG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG4pe3ZhciBvPSgwLHkuZGVmYXVsdCkoci5zdGF0ZS5kYXRhKSxhPXIuZmluZE5vZGVzQnlJZChlLG8sW10pLGk9YVswXTt0LnBlcnNpc3QoKSxuKCgwLHkuZGVmYXVsdCkoaSksdCl9fSxpPW4sYShyLGkpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwiY29tcG9uZW50V2lsbE1vdW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmludGVybmFsU3RhdGUuZDM9dGhpcy5jYWxjdWxhdGVEM0dlb21ldHJ5KHRoaXMucHJvcHMpfX0se2tleTpcImNvbXBvbmVudERpZE1vdW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmJpbmRab29tTGlzdGVuZXIodGhpcy5wcm9wcyksdGhpcy5pbnRlcm5hbFN0YXRlLmluaXRpYWxSZW5kZXI9ITF9fSx7a2V5OlwiY29tcG9uZW50RGlkVXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7ZS50cmFuc2l0aW9uRHVyYXRpb24hPT10aGlzLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbiYmdGhpcy5iaW5kWm9vbUxpc3RlbmVyKHRoaXMucHJvcHMpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMucHJvcHMub25VcGRhdGUmJih0aGlzLnByb3BzLm9uVXBkYXRlKHtub2RlOnRoaXMuaW50ZXJuYWxTdGF0ZS50YXJnZXROb2RlPygwLHkuZGVmYXVsdCkodGhpcy5pbnRlcm5hbFN0YXRlLnRhcmdldE5vZGUpOm51bGwsem9vbTp0aGlzLmludGVybmFsU3RhdGUuZDMuc2NhbGUsdHJhbnNsYXRlOnRoaXMuaW50ZXJuYWxTdGF0ZS5kMy50cmFuc2xhdGV9KSx0aGlzLmludGVybmFsU3RhdGUudGFyZ2V0Tm9kZT1udWxsKX19LHtrZXk6XCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5wcm9wcy5kYXRhIT09ZS5kYXRhJiZ0aGlzLnNldFN0YXRlKHtkYXRhOnRoaXMuYXNzaWduSW50ZXJuYWxQcm9wZXJ0aWVzKCgwLHkuZGVmYXVsdCkoZS5kYXRhKSl9KSx0aGlzLmludGVybmFsU3RhdGUuZDM9dGhpcy5jYWxjdWxhdGVEM0dlb21ldHJ5KGUpLCgwLHYuZGVmYXVsdCkodGhpcy5wcm9wcy50cmFuc2xhdGUsZS50cmFuc2xhdGUpJiYoMCx2LmRlZmF1bHQpKHRoaXMucHJvcHMuc2NhbGVFeHRlbnQsZS5zY2FsZUV4dGVudCkmJnRoaXMucHJvcHMuem9vbT09PWUuem9vbXx8dGhpcy5iaW5kWm9vbUxpc3RlbmVyKGUpfX0se2tleTpcInNldEluaXRpYWxUcmVlRGVwdGhcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtlLl9jb2xsYXBzZWQ9ZS5kZXB0aD49dH0pfX0se2tleTpcImJpbmRab29tTGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49ZS56b29tYWJsZSxyPWUuc2NhbGVFeHRlbnQsbz1lLnRyYW5zbGF0ZSxhPWUuem9vbSxpPWUub25VcGRhdGUscz10aGlzLnN0YXRlLHU9cy5yZDN0U3ZnQ2xhc3NOYW1lLGw9cy5yZDN0R0NsYXNzTmFtZSxjPSgwLHAuc2VsZWN0KShcIi5cIit1KSxmPSgwLHAuc2VsZWN0KShcIi5cIitsKTtuJiZjLmNhbGwocC5iZWhhdmlvci56b29tKCkuc2NhbGVFeHRlbnQoW3IubWluLHIubWF4XSkub24oXCJ6b29tXCIsZnVuY3Rpb24oKXtmLmF0dHIoXCJ0cmFuc2Zvcm1cIixcInRyYW5zbGF0ZShcIitwLmV2ZW50LnRyYW5zbGF0ZStcIikgc2NhbGUoXCIrcC5ldmVudC5zY2FsZStcIilcIiksXCJmdW5jdGlvblwiPT10eXBlb2YgaSYmKGkoe25vZGU6bnVsbCx6b29tOnAuZXZlbnQuc2NhbGUsdHJhbnNsYXRlOnt4OnAuZXZlbnQudHJhbnNsYXRlWzBdLHk6cC5ldmVudC50cmFuc2xhdGVbMV19fSksdC5pbnRlcm5hbFN0YXRlLmQzLnNjYWxlPXAuZXZlbnQuc2NhbGUsdC5pbnRlcm5hbFN0YXRlLmQzLnRyYW5zbGF0ZT17eDpwLmV2ZW50LnRyYW5zbGF0ZVswXSx5OnAuZXZlbnQudHJhbnNsYXRlWzFdfSl9KS5zY2FsZShhKS50cmFuc2xhdGUoW28ueCxvLnldKSl9fSx7a2V5OlwiYXNzaWduSW50ZXJuYWxQcm9wZXJ0aWVzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4oQXJyYXkuaXNBcnJheShlKT9lOltlXSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmlkPWcuZGVmYXVsdC52NCgpLHZvaWQgMD09PWUuX2NvbGxhcHNlZCYmKGUuX2NvbGxhcHNlZD0hMSksZS5jaGlsZHJlbiYmZS5jaGlsZHJlbi5sZW5ndGg+MCYmKGUuY2hpbGRyZW49dC5hc3NpZ25JbnRlcm5hbFByb3BlcnRpZXMoZS5jaGlsZHJlbiksZS5fY2hpbGRyZW49ZS5jaGlsZHJlbiksZX0pfX0se2tleTpcImZpbmROb2Rlc0J5SWRcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcztyZXR1cm4gbi5sZW5ndGg+MD9uOihuPW4uY29uY2F0KHQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkPT09ZX0pKSx0LmZvckVhY2goZnVuY3Rpb24odCl7dC5fY2hpbGRyZW4mJnQuX2NoaWxkcmVuLmxlbmd0aD4wJiYobj1yLmZpbmROb2Rlc0J5SWQoZSx0Ll9jaGlsZHJlbixuKSl9KSxuKX19LHtrZXk6XCJmaW5kTm9kZXNBdERlcHRoXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXM7cmV0dXJuIG49bi5jb25jYXQodC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQuZGVwdGg9PT1lfSkpLHQuZm9yRWFjaChmdW5jdGlvbih0KXt0Ll9jaGlsZHJlbiYmdC5fY2hpbGRyZW4ubGVuZ3RoPjAmJihuPXIuZmluZE5vZGVzQXREZXB0aChlLHQuX2NoaWxkcmVuLG4pKX0pLG59fSx7a2V5OlwiY29sbGFwc2VOb2RlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztlLl9jb2xsYXBzZWQ9ITAsZS5fY2hpbGRyZW4mJmUuX2NoaWxkcmVuLmxlbmd0aD4wJiZlLl9jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuY29sbGFwc2VOb2RlKGUpfSl9fSx7a2V5OlwiZXhwYW5kTm9kZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe2UuX2NvbGxhcHNlZD0hMX19LHtrZXk6XCJjb2xsYXBzZU5laWdoYm9yTm9kZXNcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7dGhpcy5maW5kTm9kZXNBdERlcHRoKGUuZGVwdGgsdCxbXSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkIT09ZS5pZH0pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG4uY29sbGFwc2VOb2RlKGUpfSl9fSx7a2V5OlwiZ2VuZXJhdGVUcmVlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5pbml0aWFsRGVwdGgsbj1lLnVzZUNvbGxhcHNlRGF0YSxyPWUuZGVwdGhGYWN0b3Isbz1lLnNlcGFyYXRpb24sYT1lLm5vZGVTaXplLGk9ZS5vcmllbnRhdGlvbixzPXAubGF5b3V0LnRyZWUoKS5ub2RlU2l6ZShcImhvcml6b250YWxcIj09PWk/W2EueSxhLnhdOlthLngsYS55XSkuc2VwYXJhdGlvbihmdW5jdGlvbihlLHQpe3JldHVybiBlLnBhcmVudC5pZD09PXQucGFyZW50LmlkP28uc2libGluZ3M6by5ub25TaWJsaW5nc30pLmNoaWxkcmVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLl9jb2xsYXBzZWQ/bnVsbDplLl9jaGlsZHJlbn0pLHU9dGhpcy5zdGF0ZS5kYXRhWzBdLGw9cy5ub2Rlcyh1KTtyZXR1cm4hMT09PW4mJnZvaWQgMCE9PXQmJnRoaXMuaW50ZXJuYWxTdGF0ZS5pbml0aWFsUmVuZGVyJiYodGhpcy5zZXRJbml0aWFsVHJlZURlcHRoKGwsdCksbD1zLm5vZGVzKHUpKSxyJiZsLmZvckVhY2goZnVuY3Rpb24oZSl7ZS55PWUuZGVwdGgqcn0pLHtub2RlczpsLGxpbmtzOnMubGlua3MobCl9fX0se2tleTpcImNhbGN1bGF0ZUQzR2VvbWV0cnlcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7cmV0dXJuIHQ9ZS56b29tPmUuc2NhbGVFeHRlbnQubWF4P2Uuc2NhbGVFeHRlbnQubWF4OmUuem9vbTxlLnNjYWxlRXh0ZW50Lm1pbj9lLnNjYWxlRXh0ZW50Lm1pbjplLnpvb20se3RyYW5zbGF0ZTplLnRyYW5zbGF0ZSxzY2FsZTp0fX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLmdlbmVyYXRlVHJlZSgpLG49dC5ub2RlcyxyPXQubGlua3Msbz10aGlzLnN0YXRlLGE9by5yZDN0U3ZnQ2xhc3NOYW1lLGk9by5yZDN0R0NsYXNzTmFtZSx1PXRoaXMucHJvcHMsbD11Lm5vZGVTdmdTaGFwZSxmPXUubm9kZUxhYmVsQ29tcG9uZW50LGQ9dS5vcmllbnRhdGlvbixwPXUucGF0aEZ1bmMsaD11LnRyYW5zaXRpb25EdXJhdGlvbix5PXUuem9vbWFibGUsYj11LnRleHRMYXlvdXQsdj11Lm5vZGVTaXplLG09dS5kZXB0aEZhY3RvcixPPXUuaW5pdGlhbERlcHRoLF89dS5zZXBhcmF0aW9uLGo9dS5jaXJjbGVSYWRpdXMsUz11LmFsbG93Rm9yZWlnbk9iamVjdHMsRT11LnN0eWxlcyxOPXRoaXMuaW50ZXJuYWxTdGF0ZS5kMyxQPU4udHJhbnNsYXRlLEQ9Ti5zY2FsZSxDPXMoe30sdixfLHtkZXB0aEZhY3RvcjptLGluaXRpYWxEZXB0aDpPfSk7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInJkM3QtdHJlZS1jb250YWluZXIgXCIrKHk/XCJyZDN0LWdyYWJiYWJsZVwiOnZvaWQgMCl9LGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIse2NsYXNzTmFtZTphLHdpZHRoOlwiMTAwJVwiLGhlaWdodDpcIjEwMCVcIn0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoeC5kZWZhdWx0LHt0cmFuc2l0aW9uRHVyYXRpb246aCxjb21wb25lbnQ6XCJnXCIsY2xhc3NOYW1lOmksdHJhbnNmb3JtOlwidHJhbnNsYXRlKFwiK1AueCtcIixcIitQLnkrXCIpIHNjYWxlKFwiK0QrXCIpXCJ9LHIubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChrLmRlZmF1bHQse2tleTpnLmRlZmF1bHQudjQoKSxvcmllbnRhdGlvbjpkLHBhdGhGdW5jOnAsbGlua0RhdGE6ZSx0cmFuc2l0aW9uRHVyYXRpb246aCxzdHlsZXM6RS5saW5rc30pfSksbi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHcuZGVmYXVsdCx7a2V5OnQuaWQsbm9kZVN2Z1NoYXBlOnMoe30sbCx0Lm5vZGVTdmdTaGFwZSksbm9kZUxhYmVsQ29tcG9uZW50OmYsbm9kZVNpemU6dixvcmllbnRhdGlvbjpkLHRyYW5zaXRpb25EdXJhdGlvbjpoLG5vZGVEYXRhOnQsbmFtZTp0Lm5hbWUsYXR0cmlidXRlczp0LmF0dHJpYnV0ZXMsb25DbGljazplLmhhbmRsZU5vZGVUb2dnbGUsb25Nb3VzZU92ZXI6ZS5oYW5kbGVPbk1vdXNlT3ZlckNiLG9uTW91c2VPdXQ6ZS5oYW5kbGVPbk1vdXNlT3V0Q2IsdGV4dExheW91dDpiLGNpcmNsZVJhZGl1czpqLHN1YnNjcmlwdGlvbnM6QyxhbGxvd0ZvcmVpZ25PYmplY3RzOlMsc3R5bGVzOkUubm9kZXN9KX0pKSkpfX1dKSx0fShjLmRlZmF1bHQuQ29tcG9uZW50KTt0LmRlZmF1bHQ9UyxTLmRlZmF1bHRQcm9wcz17bm9kZVN2Z1NoYXBlOntzaGFwZTpcImNpcmNsZVwiLHNoYXBlUHJvcHM6e3I6MTB9fSxub2RlTGFiZWxDb21wb25lbnQ6bnVsbCxvbkNsaWNrOnZvaWQgMCxvbk1vdXNlT3Zlcjp2b2lkIDAsb25Nb3VzZU91dDp2b2lkIDAsb25VcGRhdGU6dm9pZCAwLG9yaWVudGF0aW9uOlwiaG9yaXpvbnRhbFwiLHRyYW5zbGF0ZTp7eDowLHk6MH0scGF0aEZ1bmM6XCJkaWFnb25hbFwiLHRyYW5zaXRpb25EdXJhdGlvbjo1MDAsZGVwdGhGYWN0b3I6dm9pZCAwLGNvbGxhcHNpYmxlOiEwLHVzZUNvbGxhcHNlRGF0YTohMSxpbml0aWFsRGVwdGg6dm9pZCAwLHpvb21hYmxlOiEwLHpvb206MSxzY2FsZUV4dGVudDp7bWluOi4xLG1heDoxfSxub2RlU2l6ZTp7eDoxNDAseToxNDB9LHNlcGFyYXRpb246e3NpYmxpbmdzOjEsbm9uU2libGluZ3M6Mn0sdGV4dExheW91dDp7dGV4dEFuY2hvcjpcInN0YXJ0XCIseDoxMCx5Oi0xMCx0cmFuc2Zvcm06dm9pZCAwfSxhbGxvd0ZvcmVpZ25PYmplY3RzOiExLHNob3VsZENvbGxhcHNlTmVpZ2hib3JOb2RlczohMSxjaXJjbGVSYWRpdXM6dm9pZCAwLHN0eWxlczp7fX0sUy5wcm9wVHlwZXM9e2RhdGE6ZC5kZWZhdWx0Lm9uZU9mVHlwZShbZC5kZWZhdWx0LmFycmF5LGQuZGVmYXVsdC5vYmplY3RdKS5pc1JlcXVpcmVkLG5vZGVTdmdTaGFwZTpkLmRlZmF1bHQuc2hhcGUoe3NoYXBlOmQuZGVmYXVsdC5zdHJpbmcsc2hhcGVQcm9wczpkLmRlZmF1bHQub2JqZWN0fSksbm9kZUxhYmVsQ29tcG9uZW50OmQuZGVmYXVsdC5vYmplY3Qsb25DbGljazpkLmRlZmF1bHQuZnVuYyxvbk1vdXNlT3ZlcjpkLmRlZmF1bHQuZnVuYyxvbk1vdXNlT3V0OmQuZGVmYXVsdC5mdW5jLG9uVXBkYXRlOmQuZGVmYXVsdC5mdW5jLG9yaWVudGF0aW9uOmQuZGVmYXVsdC5vbmVPZihbXCJob3Jpem9udGFsXCIsXCJ2ZXJ0aWNhbFwiXSksdHJhbnNsYXRlOmQuZGVmYXVsdC5zaGFwZSh7eDpkLmRlZmF1bHQubnVtYmVyLHk6ZC5kZWZhdWx0Lm51bWJlcn0pLHBhdGhGdW5jOmQuZGVmYXVsdC5vbmVPZlR5cGUoW2QuZGVmYXVsdC5vbmVPZihbXCJkaWFnb25hbFwiLFwiZWxib3dcIixcInN0cmFpZ2h0XCJdKSxkLmRlZmF1bHQuZnVuY10pLHRyYW5zaXRpb25EdXJhdGlvbjpkLmRlZmF1bHQubnVtYmVyLGRlcHRoRmFjdG9yOmQuZGVmYXVsdC5udW1iZXIsY29sbGFwc2libGU6ZC5kZWZhdWx0LmJvb2wsdXNlQ29sbGFwc2VEYXRhOmQuZGVmYXVsdC5ib29sLGluaXRpYWxEZXB0aDpkLmRlZmF1bHQubnVtYmVyLHpvb21hYmxlOmQuZGVmYXVsdC5ib29sLHpvb206ZC5kZWZhdWx0Lm51bWJlcixzY2FsZUV4dGVudDpkLmRlZmF1bHQuc2hhcGUoe21pbjpkLmRlZmF1bHQubnVtYmVyLG1heDpkLmRlZmF1bHQubnVtYmVyfSksbm9kZVNpemU6ZC5kZWZhdWx0LnNoYXBlKHt4OmQuZGVmYXVsdC5udW1iZXIseTpkLmRlZmF1bHQubnVtYmVyfSksc2VwYXJhdGlvbjpkLmRlZmF1bHQuc2hhcGUoe3NpYmxpbmdzOmQuZGVmYXVsdC5udW1iZXIsbm9uU2libGluZ3M6ZC5kZWZhdWx0Lm51bWJlcn0pLHRleHRMYXlvdXQ6ZC5kZWZhdWx0Lm9iamVjdCxhbGxvd0ZvcmVpZ25PYmplY3RzOmQuZGVmYXVsdC5ib29sLHNob3VsZENvbGxhcHNlTmVpZ2hib3JOb2RlczpkLmRlZmF1bHQuYm9vbCxjaXJjbGVSYWRpdXM6ZC5kZWZhdWx0Lm51bWJlcixzdHlsZXM6ZC5kZWZhdWx0LnNoYXBlKHtub2RlczpkLmRlZmF1bHQub2JqZWN0LGxpbmtzOmQuZGVmYXVsdC5vYmplY3R9KX0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9b30sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9YX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGEoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSx1PW4oMCksbD1yKHUpLGM9bigxKSxmPXIoYyksZD1uKDExKSxwPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZSxuLHIsaTtvKHRoaXMsdCk7Zm9yKHZhciBzPWFyZ3VtZW50cy5sZW5ndGgsdT1BcnJheShzKSxsPTA7bDxzO2wrKyl1W2xdPWFyZ3VtZW50c1tsXTtyZXR1cm4gbj1yPWEodGhpcywoZT10Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsLmFwcGx5KGUsW3RoaXNdLmNvbmNhdCh1KSkpLHIuc3RhdGU9e2VuYWJsZVRyYW5zaXRpb25zOnIucHJvcHMudHJhbnNpdGlvbkR1cmF0aW9uPjB9LGk9bixhKHIsaSl9cmV0dXJuIGkodCxlKSxzKHQsW3trZXk6XCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7ZS50cmFuc2l0aW9uRHVyYXRpb24hPT10aGlzLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbiYmdGhpcy5zZXRTdGF0ZSh7ZW5hYmxlVHJhbnNpdGlvbnM6ZS50cmFuc2l0aW9uRHVyYXRpb24+MH0pfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhdGUuZW5hYmxlVHJhbnNpdGlvbnM/bC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZC5UcmFuc2l0aW9uR3JvdXAse2NvbXBvbmVudDp0aGlzLnByb3BzLmNvbXBvbmVudCxjbGFzc05hbWU6dGhpcy5wcm9wcy5jbGFzc05hbWUsdHJhbnNmb3JtOnRoaXMucHJvcHMudHJhbnNmb3JtfSx0aGlzLnByb3BzLmNoaWxkcmVuKTpsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIix7Y2xhc3NOYW1lOnRoaXMucHJvcHMuY2xhc3NOYW1lLHRyYW5zZm9ybTp0aGlzLnByb3BzLnRyYW5zZm9ybX0sdGhpcy5wcm9wcy5jaGlsZHJlbil9fV0pLHR9KGwuZGVmYXVsdC5Db21wb25lbnQpO3QuZGVmYXVsdD1wLHAuZGVmYXVsdFByb3BzPXtjb21wb25lbnQ6XCJnXCJ9LHAucHJvcFR5cGVzPXt0cmFuc2l0aW9uRHVyYXRpb246Zi5kZWZhdWx0Lm51bWJlci5pc1JlcXVpcmVkLGNvbXBvbmVudDpmLmRlZmF1bHQuc3RyaW5nLGNsYXNzTmFtZTpmLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsdHJhbnNmb3JtOmYuZGVmYXVsdC5zdHJpbmcuaXNSZXF1aXJlZCxjaGlsZHJlbjpmLmRlZmF1bHQuYXJyYXkuaXNSZXF1aXJlZH0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9aX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGEoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDEpLGQ9cihmKSxwPW4oMiksaD1uKDEzKSx5PXIoaCksYj1uKDE0KSx2PXIoYik7bigxNSk7dmFyIG09ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4scixpO28odGhpcyx0KTtmb3IodmFyIHU9YXJndW1lbnRzLmxlbmd0aCxsPUFycmF5KHUpLGY9MDtmPHU7ZisrKWxbZl09YXJndW1lbnRzW2ZdO3JldHVybiBuPXI9YSh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KGwpKSksci5zdGF0ZT17dHJhbnNmb3JtOnIuc2V0VHJhbnNmb3JtKHIucHJvcHMubm9kZURhdGEsci5wcm9wcy5vcmllbnRhdGlvbiwhMCksaW5pdGlhbFN0eWxlOntvcGFjaXR5OjB9fSxyLnNob3VsZE5vZGVUcmFuc2Zvcm09ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5zdWJzY3JpcHRpb25zIT09ZS5zdWJzY3JpcHRpb25zfHx0Lm5vZGVEYXRhLnghPT1lLm5vZGVEYXRhLnh8fHQubm9kZURhdGEueSE9PWUubm9kZURhdGEueXx8dC5vcmllbnRhdGlvbiE9PWUub3JpZW50YXRpb259LHIucmVuZGVyTm9kZUVsZW1lbnQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ci5wcm9wcyxuPXQuY2lyY2xlUmFkaXVzLG89dC5ub2RlU3ZnU2hhcGU7cmV0dXJuIG4/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJjaXJjbGVcIix7cjpuLHN0eWxlOmUuY2lyY2xlfSk6XCJub25lXCI9PT1vLnNoYXBlP251bGw6Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoby5zaGFwZSxzKHt9LGUuY2lyY2xlLG8uc2hhcGVQcm9wcykpfSxyLmhhbmRsZUNsaWNrPWZ1bmN0aW9uKGUpe3IucHJvcHMub25DbGljayhyLnByb3BzLm5vZGVEYXRhLmlkLGUpfSxyLmhhbmRsZU9uTW91c2VPdmVyPWZ1bmN0aW9uKGUpe3IucHJvcHMub25Nb3VzZU92ZXIoci5wcm9wcy5ub2RlRGF0YS5pZCxlKX0sci5oYW5kbGVPbk1vdXNlT3V0PWZ1bmN0aW9uKGUpe3IucHJvcHMub25Nb3VzZU91dChyLnByb3BzLm5vZGVEYXRhLmlkLGUpfSxpPW4sYShyLGkpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwiY29tcG9uZW50RGlkTW91bnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLm5vZGVEYXRhLG49ZS5vcmllbnRhdGlvbixyPWUudHJhbnNpdGlvbkR1cmF0aW9uLG89dGhpcy5zZXRUcmFuc2Zvcm0odCxuKTt0aGlzLmFwcGx5VHJhbnNmb3JtKG8scil9fSx7a2V5OlwiY29tcG9uZW50V2lsbFVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuc2V0VHJhbnNmb3JtKGUubm9kZURhdGEsZS5vcmllbnRhdGlvbik7dGhpcy5hcHBseVRyYW5zZm9ybSh0LGUudHJhbnNpdGlvbkR1cmF0aW9uKX19LHtrZXk6XCJzaG91bGRDb21wb25lbnRVcGRhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zaG91bGROb2RlVHJhbnNmb3JtKHRoaXMucHJvcHMsZSl9fSx7a2V5Olwic2V0VHJhbnNmb3JtXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdLHI9ZS54LG89ZS55LGE9ZS5wYXJlbnQ7aWYobil7dmFyIGk9YT9hLng6MCxzPWE/YS55OjA7cmV0dXJuXCJob3Jpem9udGFsXCI9PT10P1widHJhbnNsYXRlKFwiK3MrXCIsXCIraStcIilcIjpcInRyYW5zbGF0ZShcIitpK1wiLFwiK3MrXCIpXCJ9cmV0dXJuXCJob3Jpem9udGFsXCI9PT10P1widHJhbnNsYXRlKFwiK28rXCIsXCIrcitcIilcIjpcInRyYW5zbGF0ZShcIityK1wiLFwiK28rXCIpXCJ9fSx7a2V5OlwiYXBwbHlUcmFuc2Zvcm1cIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXToxLHI9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOmZ1bmN0aW9uKCl7fTswPT09dD8oKDAscC5zZWxlY3QpKHRoaXMubm9kZSkuYXR0cihcInRyYW5zZm9ybVwiLGUpLnN0eWxlKFwib3BhY2l0eVwiLG4pLHIoKSk6KDAscC5zZWxlY3QpKHRoaXMubm9kZSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKHQpLmF0dHIoXCJ0cmFuc2Zvcm1cIixlKS5zdHlsZShcIm9wYWNpdHlcIixuKS5lYWNoKFwiZW5kXCIscil9fSx7a2V5OlwiY29tcG9uZW50V2lsbExlYXZlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5wcm9wcyxuPXQubm9kZURhdGEscj10Lm9yaWVudGF0aW9uLG89dC50cmFuc2l0aW9uRHVyYXRpb24sYT10aGlzLnNldFRyYW5zZm9ybShuLHIsITApO3RoaXMuYXBwbHlUcmFuc2Zvcm0oYSxvLDAsZSl9fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5wcm9wcyxuPXQubm9kZURhdGEscj10Lm5vZGVTaXplLG89dC5ub2RlTGFiZWxDb21wb25lbnQsYT10LmFsbG93Rm9yZWlnbk9iamVjdHMsaT10LnN0eWxlcyx1PW4uX2NoaWxkcmVuP3Moe30saS5ub2RlKTpzKHt9LGkubGVhZk5vZGUpO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIix7aWQ6bi5pZCxyZWY6ZnVuY3Rpb24odCl7ZS5ub2RlPXR9LHN0eWxlOnRoaXMuc3RhdGUuaW5pdGlhbFN0eWxlLGNsYXNzTmFtZTpuLl9jaGlsZHJlbj9cIm5vZGVCYXNlXCI6XCJsZWFmTm9kZUJhc2VcIix0cmFuc2Zvcm06dGhpcy5zdGF0ZS50cmFuc2Zvcm0sb25DbGljazp0aGlzLmhhbmRsZUNsaWNrLG9uTW91c2VPdmVyOnRoaXMuaGFuZGxlT25Nb3VzZU92ZXIsb25Nb3VzZU91dDp0aGlzLmhhbmRsZU9uTW91c2VPdXR9LHRoaXMucmVuZGVyTm9kZUVsZW1lbnQodSksYSYmbz9jLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh2LmRlZmF1bHQscyh7bm9kZURhdGE6bixub2RlU2l6ZTpyfSxvKSk6Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoeS5kZWZhdWx0LHMoe30sdGhpcy5wcm9wcyx7bm9kZVN0eWxlOnV9KSkpfX1dKSx0fShjLmRlZmF1bHQuQ29tcG9uZW50KTt0LmRlZmF1bHQ9bSxtLmRlZmF1bHRQcm9wcz17bm9kZUxhYmVsQ29tcG9uZW50Om51bGwsYXR0cmlidXRlczp2b2lkIDAsY2lyY2xlUmFkaXVzOnZvaWQgMCxzdHlsZXM6e25vZGU6e2NpcmNsZTp7fSxuYW1lOnt9LGF0dHJpYnV0ZXM6e319LGxlYWZOb2RlOntjaXJjbGU6e30sbmFtZTp7fSxhdHRyaWJ1dGVzOnt9fX19LG0ucHJvcFR5cGVzPXtub2RlRGF0YTpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsbm9kZVN2Z1NoYXBlOmQuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCxub2RlTGFiZWxDb21wb25lbnQ6ZC5kZWZhdWx0Lm9iamVjdCxub2RlU2l6ZTpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsb3JpZW50YXRpb246ZC5kZWZhdWx0Lm9uZU9mKFtcImhvcml6b250YWxcIixcInZlcnRpY2FsXCJdKS5pc1JlcXVpcmVkLHRyYW5zaXRpb25EdXJhdGlvbjpkLmRlZmF1bHQubnVtYmVyLmlzUmVxdWlyZWQsb25DbGljazpkLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLG9uTW91c2VPdmVyOmQuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQsb25Nb3VzZU91dDpkLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLG5hbWU6ZC5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkLGF0dHJpYnV0ZXM6ZC5kZWZhdWx0Lm9iamVjdCx0ZXh0TGF5b3V0OmQuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCxzdWJzY3JpcHRpb25zOmQuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCxhbGxvd0ZvcmVpZ25PYmplY3RzOmQuZGVmYXVsdC5ib29sLmlzUmVxdWlyZWQsY2lyY2xlUmFkaXVzOmQuZGVmYXVsdC5udW1iZXIsc3R5bGVzOmQuZGVmYXVsdC5vYmplY3R9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBhKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksdT1uKDApLGw9cih1KSxjPW4oMyksZj1yKGMpLGQ9bigxKSxwPXIoZCksaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIG8odGhpcyx0KSxhKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxzKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLm5hbWUsbj1lLm5vZGVTdHlsZSxyPWUudGV4dExheW91dCxvPWUuYXR0cmlidXRlcztyZXR1cm4gbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsbnVsbCxsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInRleHRcIix7Y2xhc3NOYW1lOlwibm9kZU5hbWVCYXNlXCIsc3R5bGU6bi5uYW1lLHRleHRBbmNob3I6ci50ZXh0QW5jaG9yLHg6ci54LHk6ci55LHRyYW5zZm9ybTpyLnRyYW5zZm9ybSxkeTpcIi4zNWVtXCJ9LHQpLGwuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwidGV4dFwiLHtjbGFzc05hbWU6XCJub2RlQXR0cmlidXRlc0Jhc2VcIix5OnIueSsxMCx0ZXh0QW5jaG9yOnIudGV4dEFuY2hvcix0cmFuc2Zvcm06ci50cmFuc2Zvcm0sc3R5bGU6bi5hdHRyaWJ1dGVzfSxvJiZPYmplY3Qua2V5cyhvKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGwuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwidHNwYW5cIix7eDpyLngsZHk6XCIxLjJlbVwiLGtleTpmLmRlZmF1bHQudjQoKX0sZSxcIjogXCIsb1tlXSl9KSkpfX1dKSx0fShsLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWgsaC5kZWZhdWx0UHJvcHM9e2F0dHJpYnV0ZXM6dm9pZCAwfSxoLnByb3BUeXBlcz17bmFtZTpwLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsYXR0cmlidXRlczpwLmRlZmF1bHQub2JqZWN0LHRleHRMYXlvdXQ6cC5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLG5vZGVTdHlsZTpwLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWR9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBhKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQkFTRV9NQVJHSU49dm9pZCAwO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxKSxkPXIoZikscD10LkJBU0VfTUFSR0lOPTI0LGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBvKHRoaXMsdCksYSh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5ub2RlRGF0YSxuPWUubm9kZVNpemUscj1lLnJlbmRlcixvPWUuZm9yZWlnbk9iamVjdFdyYXBwZXI7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZm9yZWlnbk9iamVjdFwiLHMoe3dpZHRoOm4ueC1wLGhlaWdodDpuLnktcH0sbyksYy5kZWZhdWx0LmNsb25lRWxlbWVudChyLHtub2RlRGF0YTp0fSkpfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWgsaC5kZWZhdWx0UHJvcHM9e2ZvcmVpZ25PYmplY3RXcmFwcGVyOnt9fSxoLnByb3BUeXBlcz17cmVuZGVyOmQuZGVmYXVsdC5vbmVPZlR5cGUoW2QuZGVmYXVsdC5lbGVtZW50LGQuZGVmYXVsdC5ub2RlXSkuaXNSZXF1aXJlZCxub2RlRGF0YTpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsbm9kZVNpemU6ZC5kZWZhdWx0LnNoYXBlKHt4OmQuZGVmYXVsdC5udW1iZXIseTpkLmRlZmF1bHQubnVtYmVyfSkuaXNSZXF1aXJlZCxmb3JlaWduT2JqZWN0V3JhcHBlcjpkLmRlZmF1bHQub2JqZWN0fX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMTYpO1wic3RyaW5nXCI9PXR5cGVvZiByJiYocj1bW2UuaSxyLFwiXCJdXSk7dmFyIG89e2htcjohMH07by50cmFuc2Zvcm09dm9pZCAwLG8uaW5zZXJ0SW50bz12b2lkIDA7big1KShyLG8pO3IubG9jYWxzJiYoZS5leHBvcnRzPXIubG9jYWxzKX0sZnVuY3Rpb24oZSx0LG4pe3Q9ZS5leHBvcnRzPW4oNCkodm9pZCAwKSx0LnB1c2goW2UuaSxcIi5ub2RlQmFzZSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmaWxsOiAjNzc3O1xcbiAgc3Ryb2tlOiAjMDAwO1xcbiAgc3Ryb2tlLXdpZHRoOiAyO1xcbn1cXG5cXG4ubGVhZk5vZGVCYXNlIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGZpbGw6IHRyYW5zcGFyZW50O1xcbiAgc3Ryb2tlOiAjMDAwO1xcbiAgc3Ryb2tlLXdpZHRoOiAyO1xcbn1cXG5cXG4ubm9kZU5hbWVCYXNlIHtcXG4gIGZpbGw6ICMwMDA7XFxuICBzdHJva2U6ICMwMDA7XFxuICBzdHJva2Utd2lkdGg6IDE7XFxufVxcblxcbi5ub2RlQXR0cmlidXRlc0Jhc2Uge1xcbiAgZmlsbDogIzc3NztcXG4gIHN0cm9rZTogIzc3NztcXG4gIHN0cm9rZS13aWR0aDogMTtcXG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcXG59XFxuXCIsXCJcIl0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cubG9jYXRpb247aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7aWYoIWV8fFwic3RyaW5nXCIhPXR5cGVvZiBlKXJldHVybiBlO3ZhciBuPXQucHJvdG9jb2wrXCIvL1wiK3QuaG9zdCxyPW4rdC5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sXCIvXCIpO3JldHVybiBlLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLGZ1bmN0aW9uKGUsdCl7dmFyIG89dC50cmltKCkucmVwbGFjZSgvXlwiKC4qKVwiJC8sZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0pLnJlcGxhY2UoL14nKC4qKSckLyxmdW5jdGlvbihlLHQpe3JldHVybiB0fSk7aWYoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdChvKSlyZXR1cm4gZTt2YXIgYTtyZXR1cm4gYT0wPT09by5pbmRleE9mKFwiLy9cIik/bzowPT09by5pbmRleE9mKFwiL1wiKT9uK286citvLnJlcGxhY2UoL15cXC5cXC8vLFwiXCIpLFwidXJsKFwiK0pTT04uc3RyaW5naWZ5KGEpK1wiKVwifSl9fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gYShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMSksZD1yKGYpLHA9bigyKTtuKDE5KTt2YXIgaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLGk7byh0aGlzLHQpO2Zvcih2YXIgcz1hcmd1bWVudHMubGVuZ3RoLHU9QXJyYXkocyksbD0wO2w8cztsKyspdVtsXT1hcmd1bWVudHNbbF07cmV0dXJuIG49cj1hKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQodSkpKSxyLnN0YXRlPXtpbml0aWFsU3R5bGU6e29wYWNpdHk6MH19LGk9bixhKHIsaSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJjb21wb25lbnREaWRNb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5hcHBseU9wYWNpdHkoMSx0aGlzLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbil9fSx7a2V5OlwiY29tcG9uZW50V2lsbExlYXZlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5hcHBseU9wYWNpdHkoMCx0aGlzLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbixlKX19LHtrZXk6XCJhcHBseU9wYWNpdHlcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpmdW5jdGlvbigpe307MD09PXQ/KCgwLHAuc2VsZWN0KSh0aGlzLmxpbmspLnN0eWxlKFwib3BhY2l0eVwiLGUpLG4oKSk6KDAscC5zZWxlY3QpKHRoaXMubGluaykudHJhbnNpdGlvbigpLmR1cmF0aW9uKHQpLnN0eWxlKFwib3BhY2l0eVwiLGUpLmVhY2goXCJlbmRcIixuKX19LHtrZXk6XCJkcmF3RGlhZ29uYWxQYXRoXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gcC5zdmcuZGlhZ29uYWwoKS5wcm9qZWN0aW9uKGZ1bmN0aW9uKGUpe3JldHVyblwiaG9yaXpvbnRhbFwiPT09dD9bZS55LGUueF06W2UueCxlLnldfSkoZSl9fSx7a2V5OlwiZHJhd1N0cmFpZ2h0UGF0aFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49cC5zdmcubGluZSgpLmludGVycG9sYXRlKFwiYmFzaXNcIikueChmdW5jdGlvbihlKXtyZXR1cm4gZS54fSkueShmdW5jdGlvbihlKXtyZXR1cm4gZS55fSkscj1be3g6ZS5zb3VyY2UueCx5OmUuc291cmNlLnl9LHt4OmUudGFyZ2V0LngseTplLnRhcmdldC55fV07cmV0dXJuXCJob3Jpem9udGFsXCI9PT10JiYocj1be3g6ZS5zb3VyY2UueSx5OmUuc291cmNlLnh9LHt4OmUudGFyZ2V0LnkseTplLnRhcmdldC54fV0pLG4ocil9fSx7a2V5OlwiZHJhd0VsYm93UGF0aFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJob3Jpem9udGFsXCI9PT10P1wiTVwiK2Uuc291cmNlLnkrXCIsXCIrZS5zb3VyY2UueCtcIlZcIitlLnRhcmdldC54K1wiSFwiK2UudGFyZ2V0Lnk6XCJNXCIrZS5zb3VyY2UueCtcIixcIitlLnNvdXJjZS55K1wiVlwiK2UudGFyZ2V0LnkrXCJIXCIrZS50YXJnZXQueH19LHtrZXk6XCJkcmF3UGF0aFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUubGlua0RhdGEsbj1lLm9yaWVudGF0aW9uLHI9ZS5wYXRoRnVuYztyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiByP3IodCxuKTpcImVsYm93XCI9PT1yP3RoaXMuZHJhd0VsYm93UGF0aCh0LG4pOlwic3RyYWlnaHRcIj09PXI/dGhpcy5kcmF3U3RyYWlnaHRQYXRoKHQsbik6dGhpcy5kcmF3RGlhZ29uYWxQYXRoKHQsbil9fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5wcm9wcy5zdHlsZXM7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtyZWY6ZnVuY3Rpb24odCl7ZS5saW5rPXR9LHN0eWxlOnMoe30sdGhpcy5zdGF0ZS5pbml0aWFsU3R5bGUsdCksY2xhc3NOYW1lOlwibGlua0Jhc2VcIixkOnRoaXMuZHJhd1BhdGgoKX0pfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWgsaC5kZWZhdWx0UHJvcHM9e3N0eWxlczp7fX0saC5wcm9wVHlwZXM9e2xpbmtEYXRhOmQuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCxvcmllbnRhdGlvbjpkLmRlZmF1bHQub25lT2YoW1wiaG9yaXpvbnRhbFwiLFwidmVydGljYWxcIl0pLmlzUmVxdWlyZWQscGF0aEZ1bmM6ZC5kZWZhdWx0Lm9uZU9mVHlwZShbZC5kZWZhdWx0Lm9uZU9mKFtcImRpYWdvbmFsXCIsXCJlbGJvd1wiLFwic3RyYWlnaHRcIl0pLGQuZGVmYXVsdC5mdW5jXSkuaXNSZXF1aXJlZCx0cmFuc2l0aW9uRHVyYXRpb246ZC5kZWZhdWx0Lm51bWJlci5pc1JlcXVpcmVkLHN0eWxlczpkLmRlZmF1bHQub2JqZWN0fSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyMCk7XCJzdHJpbmdcIj09dHlwZW9mIHImJihyPVtbZS5pLHIsXCJcIl1dKTt2YXIgbz17aG1yOiEwfTtvLnRyYW5zZm9ybT12b2lkIDAsby5pbnNlcnRJbnRvPXZvaWQgMDtuKDUpKHIsbyk7ci5sb2NhbHMmJihlLmV4cG9ydHM9ci5sb2NhbHMpfSxmdW5jdGlvbihlLHQsbil7dD1lLmV4cG9ydHM9big0KSh2b2lkIDApLHQucHVzaChbZS5pLFwiLmxpbmtCYXNlIHtcXG4gIGZpbGw6IG5vbmU7XFxuICBzdHJva2U6ICMwMDA7XFxufVwiLFwiXCJdKX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjIpO1wic3RyaW5nXCI9PXR5cGVvZiByJiYocj1bW2UuaSxyLFwiXCJdXSk7dmFyIG89e2htcjohMH07by50cmFuc2Zvcm09dm9pZCAwLG8uaW5zZXJ0SW50bz12b2lkIDA7big1KShyLG8pO3IubG9jYWxzJiYoZS5leHBvcnRzPXIubG9jYWxzKX0sZnVuY3Rpb24oZSx0LG4pe3Q9ZS5leHBvcnRzPW4oNCkodm9pZCAwKSx0LnB1c2goW2UuaSxcIi5yZDN0LXRyZWUtY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4ucmQzdC1ncmFiYmFibGUge1xcbiAgY3Vyc29yOiBtb3ZlOyAvKiBmYWxsYmFjayBpZiBncmFiIGN1cnNvciBpcyB1bnN1cHBvcnRlZCAqL1xcbiAgY3Vyc29yOiBncmFiO1xcbiAgY3Vyc29yOiAtbW96LWdyYWI7XFxuICBjdXJzb3I6IC13ZWJraXQtZ3JhYjtcXG59XFxuLnJkM3QtZ3JhYmJhYmxlOmFjdGl2ZSB7XFxuICAgIGN1cnNvcjogZ3JhYmJpbmc7XFxuICAgIGN1cnNvcjogLW1vei1ncmFiYmluZztcXG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nO1xcbn1cXG5cIixcIlwiXSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUsdCl7dmFyIG49e30scj1mdW5jdGlvbihlKXtyZXR1cm4gbltlXXx8KG5bZV09e25hbWU6ZX0pLG5bZV19LG89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbltlXXx8KG5bZV09e25hbWU6ZSxhdHRyaWJ1dGVzOnR9KSxuW2VdfTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lmKHQpe3ZhciBuPXt9O3QuZm9yRWFjaChmdW5jdGlvbih0KXtuW3RdPWVbdF19KSxlLmF0dHJpYnV0ZXM9bn1lLnNvdXJjZT1yKGUucGFyZW50KSxlLnRhcmdldD1vKGUuY2hpbGQsZS5hdHRyaWJ1dGVzKTt2YXIgYT1lLnNvdXJjZSxpPWUudGFyZ2V0O2EuaWQ9Yy5kZWZhdWx0LnY0KCksaS5pZD1jLmRlZmF1bHQudjQoKSxpLnBhcmVudD1hLm5hbWV8fG51bGwsYS5fY29sbGFwc2VkPWkuX2NvbGxhcHNlZD0hMSxhLl9jaGlsZHJlbj9hLl9jaGlsZHJlbi5wdXNoKGkpOmEuX2NoaWxkcmVuPVtpXX0pLFtlLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hZS5zb3VyY2UucGFyZW50fSlbMF0uc291cmNlXX1mdW5jdGlvbiBvKGUsdCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4sbyl7dHJ5eygwLHUuY3N2KShlLGZ1bmN0aW9uKGUpe3JldHVybiBuKHIoZSx0KSl9KX1jYXRjaChlKXtvKGUpfX0pfWZ1bmN0aW9uIGEoZSl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsbil7dHJ5eygwLHUuanNvbikoZSxmdW5jdGlvbihlKXtyZXR1cm4gdChbZV0pfSl9Y2F0Y2goZSl7bihlKX19KX1mdW5jdGlvbiBpKGUsdCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4sbyl7dHJ5eygwLHUuanNvbikoZSxmdW5jdGlvbihlKXtyZXR1cm4gbihyKGUsdCkpfSl9Y2F0Y2goZSl7byhlKX19KX1mdW5jdGlvbiBzKGUpe3JldHVybiByKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciB1PW4oMiksbD1uKDMpLGM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShsKTt0LmRlZmF1bHQ9e3BhcnNlQ1NWOm8scGFyc2VKU09OOmEscGFyc2VGbGF0SlNPTjppLGdlbmVyYXRlSGllcmFyY2h5OnN9LGUuZXhwb3J0cz10LmRlZmF1bHR9XSl9KTsiLCIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI2Mzg2Yzk1OTc4NDYzOGE2ZDJmMWRiYzljNWI5YzJiNS5wbmdcIjsiLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb29wfGxvd3xtYXJnaW5IZWlnaHR8bWFyZ2luV2lkdGh8bWF4fG1heExlbmd0aHxtZWRpYXxtZWRpYUdyb3VwfG1ldGhvZHxtaW58bWluTGVuZ3RofG11bHRpcGxlfG11dGVkfG5hbWV8bm9uY2V8bm9WYWxpZGF0ZXxvcGVufG9wdGltdW18cGF0dGVybnxwbGFjZWhvbGRlcnxwbGF5c0lubGluZXxwb3N0ZXJ8cHJlbG9hZHxwcm9maWxlfHJhZGlvR3JvdXB8cmVhZE9ubHl8cmVmZXJyZXJQb2xpY3l8cmVsfHJlcXVpcmVkfHJldmVyc2VkfHJvbGV8cm93c3xyb3dTcGFufHNhbmRib3h8c2NvcGV8c2NvcGVkfHNjcm9sbGluZ3xzZWFtbGVzc3xzZWxlY3RlZHxzaGFwZXxzaXplfHNpemVzfHNsb3R8c3BhbnxzcGVsbENoZWNrfHNyY3xzcmNEb2N8c3JjTGFuZ3xzcmNTZXR8c3RhcnR8c3RlcHxzdHlsZXxzdW1tYXJ5fHRhYkluZGV4fHRhcmdldHx0aXRsZXx0eXBlfHVzZU1hcHx2YWx1ZXx3aWR0aHx3bW9kZXx3cmFwfGFib3V0fGRhdGF0eXBlfGlubGlzdHxwcmVmaXh8cHJvcGVydHl8cmVzb3VyY2V8dHlwZW9mfHZvY2FifGF1dG9DYXBpdGFsaXplfGF1dG9Db3JyZWN0fGF1dG9TYXZlfGNvbG9yfGl0ZW1Qcm9wfGl0ZW1TY29wZXxpdGVtVHlwZXxpdGVtSUR8aXRlbVJlZnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC87IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmZWU2OGE0Y2Q3ZTYwMDllZjYxZDIzXG5cbnZhciBpbmRleCA9IG1lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgcmV0dXJuIHJlYWN0UHJvcHNSZWdleC50ZXN0KHByb3ApIHx8IHByb3AuY2hhckNvZGVBdCgwKSA9PT0gMTExXG4gIC8qIG8gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDEpID09PSAxMTBcbiAgLyogbiAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMikgPCA5MTtcbn1cbi8qIForMSAqL1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguMC1hbHBoYS4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgaD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxsPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1sP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bD9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bD9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1sP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PWw/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bD9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1sP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bD9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLHk9bD9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsej1sP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxhYT1sP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsYmE9bD9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBjYShhLGIsZCxjLGUsZyxrLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBtPVtkLGMsZSxnLGssZl0sbj0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIG1bbisrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIEIoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxkPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTA7YzxiO2MrKylkKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGQpfXZhciBDPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxEPXt9O1xuZnVuY3Rpb24gRShhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0IoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q312YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztoKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9e2N1cnJlbnQ6bnVsbH0sSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZCl7dmFyIGM9dm9pZCAwLGU9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxmKXtmb3IodmFyIG09QXJyYXkoZiksbj0wO248ZjtuKyspbVtuXT1hcmd1bWVudHNbbisyXTtlLmNoaWxkcmVuPW19aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWVbY10mJihlW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczplLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gZGEoYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE4oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTz0vXFwvKy9nLFA9W107ZnVuY3Rpb24gUShhLGIsZCxjKXtpZihQLmxlbmd0aCl7dmFyIGU9UC5wb3AoKTtlLnJlc3VsdD1hO2Uua2V5UHJlZml4PWI7ZS5mdW5jPWQ7ZS5jb250ZXh0PWM7ZS5jb3VudD0wO3JldHVybiBlfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmQsY29udGV4dDpjLGNvdW50OjB9fVxuZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XG5mdW5jdGlvbiBTKGEsYixkLGMpe3ZhciBlPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1lfHxcImJvb2xlYW5cIj09PWUpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBkKGMsYSxcIlwiPT09Yj9cIi5cIitUKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2U9YVtrXTt2YXIgZj1iK1QoZSxrKTtnKz1TKGUsZixkLGMpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QSYmYVtBXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGU9YS5uZXh0KCkpLmRvbmU7KWU9ZS52YWx1ZSxmPWIrVChlLGsrKyksZys9UyhlLGYsZCxjKTtlbHNlXCJvYmplY3RcIj09PWUmJihkPVwiXCIrYSxCKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZD9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpkLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBVKGEsYixkKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLGIsZCl9ZnVuY3Rpb24gVChhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gZWEoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gZmEoYSxiLGQpe3ZhciBjPWEucmVzdWx0LGU9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VihhLGMsZCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihOKGEpJiYoYT1kYShhLGUrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2QpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFYoYSxiLGQsYyxlKXt2YXIgZz1cIlwiO251bGwhPWQmJihnPShcIlwiK2QpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGUpO1UoYSxmYSxiKTtSKGIpfWZ1bmN0aW9uIFcoKXt2YXIgYT1JLmN1cnJlbnQ7bnVsbD09PWE/QihcIjI5OFwiKTp2b2lkIDA7cmV0dXJuIGF9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtWKGEsYyxudWxsLGIsZCk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGQpO1UoYSxlYSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVShhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1YoYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpCKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpFLFB1cmVDb21wb25lbnQ6RyxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6YmEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19LG1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6YWEsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCxTdXNwZW5zZTp6LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGQpe251bGw9PT1hfHx2b2lkIDA9PT1hP0IoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGU9aCh7fSxhLnByb3BzKSxnPWEua2V5LGs9YS5yZWYsZj1hLl9vd25lcjtcbmlmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixmPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBtPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihtPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1tP21bY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxjKXttPUFycmF5KGMpO2Zvcih2YXIgbj0wO248YztuKyspbVtuXT1hcmd1bWVudHNbbisyXTtlLmNoaWxkcmVuPW19cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmcscmVmOmsscHJvcHM6ZSxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjguMC1hbHBoYS4xXCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjpofX07WC5Db25jdXJyZW50TW9kZT14O1guUHJvZmlsZXI9dTtYLnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlPXZvaWQgMDtYLnVuc3RhYmxlX1Byb2ZpbGVyPXZvaWQgMDtYLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfTtYLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX07WC51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUVmZmVjdChhLGIpfTtYLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGQpe3JldHVybiBXKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZCl9O1xuWC51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtYLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O1gudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfTtYLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGQpe3JldHVybiBXKCkudXNlUmVkdWNlcihhLGIsZCl9O1gudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlUmVmKGEpfTtYLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9O3ZhciBZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguMC1hbHBoYS4xXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFxYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtxYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3JhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtyYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZzYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oc2EoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gc2EoYSxiLGMpe3RhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7dGFbYV09Yjt1YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBxYT1bXSxyYT17fSx0YT17fSx1YT17fSx2YT1udWxsLHdhPW51bGwseGE9bnVsbDtmdW5jdGlvbiB5YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9eGEoYyk7bGEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB6YShhLGIpe251bGw9PWI/dChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiBBYShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQmE9bnVsbDtmdW5jdGlvbiBDYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeWEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeWEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIERhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIEVhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dmEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEZhKGEpe251bGwhPT1hJiYoQmE9emEoQmEsYSkpO2E9QmE7QmE9bnVsbDtpZihhJiYoQWEoYSxDYSksQmE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBHYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxIYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0dhLElhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrR2E7ZnVuY3Rpb24gSmEoYSl7aWYoYVtIYV0pcmV0dXJuIGFbSGFdO2Zvcig7IWFbSGFdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbSGFdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gS2EoYSl7YT1hW0hhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gTGEoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3QoXCIzM1wiKX1mdW5jdGlvbiBNYShhKXtyZXR1cm4gYVtJYV18fG51bGx9ZnVuY3Rpb24gTmEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBPYShhLGIsYyl7aWYoYj1FYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXphKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXphKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gUGEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1OYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspT2EoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylPYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBRYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1FYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9emEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9emEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFJhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUWEoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gU2EoYSl7QWEoYSxQYSl9dmFyIFRhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVWEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVmE9e2FuaW1hdGlvbmVuZDpVYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpVYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlVhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlVhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sV2E9e30sWGE9e307XG5UYSYmKFhhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFZhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFZhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFZhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFZhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWWEoYSl7aWYoV2FbYV0pcmV0dXJuIFdhW2FdO2lmKCFWYVthXSlyZXR1cm4gYTt2YXIgYj1WYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBYYSlyZXR1cm4gV2FbYV09YltjXTtyZXR1cm4gYX1cbnZhciBaYT1ZYShcImFuaW1hdGlvbmVuZFwiKSwkYT1ZYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxhYj1ZYShcImFuaW1hdGlvbnN0YXJ0XCIpLGJiPVlhKFwidHJhbnNpdGlvbmVuZFwiKSxjYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksZGI9bnVsbCxlYj1udWxsLGZiPW51bGw7XG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGRiP2RiLnZhbHVlOmRiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxuZnVuY3Rpb24gdihhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/aGI6aWI7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1pYjtyZXR1cm4gdGhpc31cbm4odi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1oYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1oYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1oYn0saXNQZXJzaXN0ZW50OmliLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7di5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG52LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2piKGMpO3JldHVybiBjfTtqYih2KTtmdW5jdGlvbiBrYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBsYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBqYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1rYjthLnJlbGVhc2U9bGJ9dmFyIG1iPXYuZXh0ZW5kKHtkYXRhOm51bGx9KSxuYj12LmV4dGVuZCh7ZGF0YTpudWxsfSksb2I9WzksMTMsMjcsMzJdLHFiPVRhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxyYj1udWxsO1RhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihyYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHNiPVRhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcmIsdGI9VGEmJighcWJ8fHJiJiY4PHJiJiYxMT49cmIpLHViPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHZiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHdiPSExO1xuZnVuY3Rpb24geGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1vYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHliKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHpiPSExO2Z1bmN0aW9uIEFiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB5YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7d2I9ITA7cmV0dXJuIHViO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXViJiZ3Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBCYihhLGIpe2lmKHpiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFxYiYmeGIoYSxiKT8oYT1nYigpLGZiPWViPWRiPW51bGwsemI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHRiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBDYj17ZXZlbnRUeXBlczp2YixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYocWIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT12Yi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT12Yi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9dmIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHpiP3hiKGEsYykmJihlPXZiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9dmIuY29tcG9zaXRpb25TdGFydCk7ZT8odGImJlwia29cIiE9PWMubG9jYWxlJiYoemJ8fGUhPT12Yi5jb21wb3NpdGlvblN0YXJ0P2U9PT12Yi5jb21wb3NpdGlvbkVuZCYmemImJihmPWdiKCkpOihkYj1kLGViPVwidmFsdWVcImluIGRiP2RiLnZhbHVlOmRiLnRleHRDb250ZW50LHpiPVxuITApKSxlPW1iLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXliKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxTYShlKSxmPWUpOmY9bnVsbDsoYT1zYj9BYihhLGMpOkJiKGEsYykpPyhiPW5iLmdldFBvb2xlZCh2Yi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsU2EoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sRGI9bnVsbCxFYj1udWxsLEZiPW51bGw7ZnVuY3Rpb24gR2IoYSl7aWYoYT13YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIERiP3QoXCIyODBcIik6dm9pZCAwO3ZhciBiPXZhKGEuc3RhdGVOb2RlKTtEYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEhiKGEpe0ViP0ZiP0ZiLnB1c2goYSk6RmI9W2FdOkViPWF9ZnVuY3Rpb24gSWIoKXtpZihFYil7dmFyIGE9RWIsYj1GYjtGYj1FYj1udWxsO0diKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylHYihiW2FdKX19XG5mdW5jdGlvbiBKYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEtiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIExiKCl7fXZhciBNYj0hMTtmdW5jdGlvbiBOYihhLGIpe2lmKE1iKXJldHVybiBhKGIpO01iPSEwO3RyeXtyZXR1cm4gSmIoYSxiKX1maW5hbGx5e2lmKE1iPSExLG51bGwhPT1FYnx8bnVsbCE9PUZiKUxiKCksSWIoKX19dmFyIE9iPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFBiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhT2JbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gUWIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIFJiKGEpe2lmKCFUYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBTYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWIoYSl7dmFyIGI9U2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgWGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsWWI9L14oLiopW1xcXFxcXC9dLyxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmI9Qj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYj1CP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWM9Qj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmM9Qj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2M9Qj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGM9Qj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWM9Qj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYz1CP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2M9Qj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGM9Qj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6XG42MDExMyxpYz1CP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGpjPUI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsa2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGxjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1rYyYmYVtrY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGljOnJldHVybiBtYyhhLnR5cGUpO2Nhc2UgamM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBtYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBuYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9bWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9bWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIG9jPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxwYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHFjPXt9LHJjPXt9O1xuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG9jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gdWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8dGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBFKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRj17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtGW2JdPW5ldyBFKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgdmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB3YyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2YyxcbndjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0YudGFiSW5kZXg9bmV3IEUoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24geGMoYSxiLGMsZCl7dmFyIGU9Ri5oYXNPd25Qcm9wZXJ0eShiKT9GW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwodWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3NjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB5YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gemMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYyhhLGIpe0JjKGEsYik7dmFyIGM9eWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGMoYSxiLnR5cGUseWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEZjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEdjKGEsYixjKXthPXYuZ2V0UG9vbGVkKEZjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SGIoYyk7U2EoYSk7cmV0dXJuIGF9dmFyIEhjPW51bGwsSWM9bnVsbDtmdW5jdGlvbiBKYyhhKXtGYShhKX1cbmZ1bmN0aW9uIEtjKGEpe3ZhciBiPUxhKGEpO2lmKFdiKGIpKXJldHVybiBhfWZ1bmN0aW9uIExjKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIE1jPSExO1RhJiYoTWM9UmIoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gTmMoKXtIYyYmKEhjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE9jKSxJYz1IYz1udWxsKX1mdW5jdGlvbiBPYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmS2MoSWMpJiYoYT1HYyhJYyxhLFFiKGEpKSxOYihKYyxhKSl9ZnVuY3Rpb24gUGMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KE5jKCksSGM9YixJYz1jLEhjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE9jKSk6XCJibHVyXCI9PT1hJiZOYygpfWZ1bmN0aW9uIFFjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIEtjKEljKX1cbmZ1bmN0aW9uIFJjKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gS2MoYil9ZnVuY3Rpb24gU2MoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gS2MoYil9XG52YXIgVGM9e2V2ZW50VHlwZXM6RmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpNYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/TGEoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPUxjOlBiKGUpP01jP2Y9U2M6KGY9UWMsZz1QYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9UmMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEdjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sVWM9di5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFZjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFdjKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9VmNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBYYygpe3JldHVybiBXY31cbnZhciBZYz0wLGFkPTAsYmQ9ITEsY2Q9ITEsZGQ9VWMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlhjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVljO1ljPWEuc2NyZWVuWDtyZXR1cm4gYmQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihiZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPWFkO2FkPWEuc2NyZWVuWTtyZXR1cm4gY2Q/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihjZD0hMCwwKX19KSxlZD1kZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZmQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGdkPXtldmVudFR5cGVzOmZkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0phKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbD12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1kZCxoPWZkLm1vdXNlTGVhdmUsaz1mZC5tb3VzZUVudGVyLGw9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1lZCxoPWZkLnBvaW50ZXJMZWF2ZSxrPWZkLnBvaW50ZXJFbnRlcixsPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpMYShmKTtlPW51bGw9PWI/ZTpMYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1sK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPWwrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtsPTA7Zm9yKGc9YjtnO2c9TmEoZykpbCsrO2c9MDtmb3Ioaz1lO2s7az1OYShrKSlnKys7Zm9yKDswPGwtZzspYj1OYShiKSxsLS07Zm9yKDswPGctbDspZT1OYShlKSxnLS07Zm9yKDtsLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1OYShiKTtlPU5hKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtsPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2IucHVzaChmKTtmPU5hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7bD1kLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TmEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylRYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylRYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19O2Z1bmN0aW9uIGhkKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgaWQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGpkKGEsYil7aWYoaGQoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFpZC5jYWxsKGIsY1tkXSl8fCFoZChhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGtkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGxkKGEpezIhPT1rZChhKT90KFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIG1kKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWtkKGEpLDM9PT1iP3QoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGxkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGxkKGUpLGI7Zz1nLnNpYmxpbmd9dChcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOnQoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD90KFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/dChcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBuZChhKXthPW1kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIG9kPXYuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxwZD12LmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLHFkPVVjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gcmQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgc2Q9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHRkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx1ZD1VYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9c2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3RkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpYYyxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9yZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9yZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHZkPWRkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx3ZD1VYy5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpYY30pLHhkPXYuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHlkPWRkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksemQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbWmEsXCJhbmltYXRpb25FbmRcIl0sWyRhLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFthYixcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2JiLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sQWQ9e30sQmQ9e307ZnVuY3Rpb24gQ2QoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTtBZFthXT1iO0JkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIl0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiXSxbXCJkcm9wXCIsXCJkcm9wXCJdLFtcImZvY3VzXCIsXCJmb2N1c1wiXSxbXCJpbnB1dFwiLFwiaW5wdXRcIl0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCJdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiXSxbXCJrZXl1cFwiLFwia2V5VXBcIl0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIl0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiXSxbXCJwYXN0ZVwiLFwicGFzdGVcIl0sW1wicGF1c2VcIixcInBhdXNlXCJdLFtcInBsYXlcIixcInBsYXlcIl0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiXSxcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMCl9KTt6ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITEpfSk7XG52YXIgRGQ9e2V2ZW50VHlwZXM6QWQsaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlOmZ1bmN0aW9uKGEpe2E9QmRbYV07cmV0dXJuIHZvaWQgMCE9PWEmJiEwPT09YS5pc0ludGVyYWN0aXZlfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPUJkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09cmQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXVkO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1xZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPWRkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG52ZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXdkO2JyZWFrO2Nhc2UgWmE6Y2FzZSAkYTpjYXNlIGFiOmE9b2Q7YnJlYWs7Y2FzZSBiYjphPXhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPVVjO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9eWQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1wZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPWVkO2JyZWFrO2RlZmF1bHQ6YT12fWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7U2EoYik7cmV0dXJuIGJ9fSxFZD1EZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsXG5GZD1bXTtmdW5jdGlvbiBHZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1KYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1RYihhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxxYS5sZW5ndGg7aCsrKXt2YXIgaz1xYVtoXTtrJiYoaz1rLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz16YShnLGspKX1GYShnKX19dmFyIEhkPSEwO1xuZnVuY3Rpb24gRyhhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfWZ1bmN0aW9uIEtkKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMCl9ZnVuY3Rpb24gSWQoYSxiKXtLYihKZCxhLGIpfVxuZnVuY3Rpb24gSmQoYSxiKXtpZihIZCl7dmFyIGM9UWIoYik7Yz1KYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWtkKGMpfHwoYz1udWxsKTtpZihGZC5sZW5ndGgpe3ZhciBkPUZkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e05iKEdkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+RmQubGVuZ3RoJiZGZC5wdXNoKGEpfX19dmFyIExkPXt9LE1kPTAsTmQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO1xuZnVuY3Rpb24gT2QoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsTmQpfHwoYVtOZF09TWQrKyxMZFthW05kXV09e30pO3JldHVybiBMZFthW05kXV19ZnVuY3Rpb24gUGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIFFkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIFJkKGEsYil7dmFyIGM9UWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9UWQoYyl9fWZ1bmN0aW9uIFNkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/U2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gVGQoKXtmb3IodmFyIGE9d2luZG93LGI9UGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXthPWIuY29udGVudERvY3VtZW50LmRlZmF1bHRWaWV3fWNhdGNoKGMpe2JyZWFrfWI9UGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gVWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBWZD1UYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFdkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxYZD1udWxsLFlkPW51bGwsWmQ9bnVsbCwkZD0hMTtcbmZ1bmN0aW9uIGFlKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoJGR8fG51bGw9PVhkfHxYZCE9PVBkKGMpKXJldHVybiBudWxsO2M9WGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmVWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gWmQmJmpkKFpkLGMpP251bGw6KFpkPWMsYT12LmdldFBvb2xlZChXZC5zZWxlY3QsWWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1YZCxTYShhKSxhKX1cbnZhciBiZT17ZXZlbnRUeXBlczpXZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1PZChlKTtmPXVhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/TGEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihQYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlYZD1lLFlkPWIsWmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlpkPVlkPVhkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOiRkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gJGQ9ITEsYWUoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoVmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBhZShjLGQpfXJldHVybiBudWxsfX07RGEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt2YT1NYTt3YT1LYTt4YT1MYTtEYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkRkLEVudGVyTGVhdmVFdmVudFBsdWdpbjpnZCxDaGFuZ2VFdmVudFBsdWdpbjpUYyxTZWxlY3RFdmVudFBsdWdpbjpiZSxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOkNifSk7ZnVuY3Rpb24gY2UoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkZShhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWNlKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBlZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIreWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGZlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGdlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/dChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOnQoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnljKGMpfX1cbmZ1bmN0aW9uIGhlKGEsYil7dmFyIGM9eWMoYi52YWx1ZSksZD15YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGllKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBqZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBrZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGxlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9rZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBtZT12b2lkIDAsbmU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09amUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bWU9bWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9bWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gb2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBwZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxxZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocGUpLmZvckVhY2goZnVuY3Rpb24oYSl7cWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtwZVtiXT1wZVthXX0pfSk7ZnVuY3Rpb24gcmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHBlLmhhc093blByb3BlcnR5KGEpJiZwZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBzZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1yZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB0ZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdWUoYSxiKXtiJiYodGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/dChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp0KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT90KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gdmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gd2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9T2QoYSk7Yj11YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6S2QoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOktkKFwiZm9jdXNcIixhKTtLZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6UmIoZSkmJktkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWNiLmluZGV4T2YoZSkmJkcoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24geGUoKXt9dmFyIHllPW51bGwsemU9bnVsbDtcbmZ1bmN0aW9uIEJlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiBDZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIERlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEVlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtcbmZ1bmN0aW9uIEZlKGEsYixjLGQsZSl7YVtJYV09ZTtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmQmMoYSxlKTt2ZShjLGQpO2Q9dmUoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9zZShhLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/bmUoYSxoKTpcImNoaWxkcmVuXCI9PT1nP29lKGEsaCk6eGMoYSxnLGgsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOkNjKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz9lZShhLCEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/ZWUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsXG4hMCk6ZWUoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fWZ1bmN0aW9uIEdlKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gSGUoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIEllPVtdLEplPS0xO2Z1bmN0aW9uIEgoYSl7MD5KZXx8KGEuY3VycmVudD1JZVtKZV0sSWVbSmVdPW51bGwsSmUtLSl9ZnVuY3Rpb24gSShhLGIpe0plKys7SWVbSmVdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgS2U9e30sSj17Y3VycmVudDpLZX0sSz17Y3VycmVudDohMX0sTGU9S2U7XG5mdW5jdGlvbiBNZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEtlO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBOZShhKXtIKEssYSk7SChKLGEpfWZ1bmN0aW9uIE9lKGEpe0goSyxhKTtIKEosYSl9XG5mdW5jdGlvbiBQZShhLGIsYyl7Si5jdXJyZW50IT09S2U/dChcIjE2OFwiKTp2b2lkIDA7SShKLGIsYSk7SShLLGMsYSl9ZnVuY3Rpb24gUWUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWUgaW4gYT92b2lkIDA6dChcIjEwOFwiLG1jKGIpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxjLGQpfWZ1bmN0aW9uIFJlKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8S2U7TGU9Si5jdXJyZW50O0koSixiLGEpO0koSyxLLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBTZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6dChcIjE2OVwiKTtjPyhiPVFlKGEsYixMZSksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEgoSyxhKSxIKEosYSksSShKLGIsYSkpOkgoSyxhKTtJKEssYyxhKX12YXIgVGU9bnVsbCxVZT1udWxsO2Z1bmN0aW9uIFZlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBXZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtUZT1WZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7VWU9VmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFhlKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5maXJzdENvbnRleHREZXBlbmRlbmN5PXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFllKGEsYixjLGQpe3JldHVybiBuZXcgWGUoYSxiLGMsZCl9XG5mdW5jdGlvbiBaZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uICRlKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBaZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2MpcmV0dXJuIDExO2lmKGE9PT1pYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBhZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVllKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5O2Muc2libGluZz1cbmEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBiZihhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpWmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWM6cmV0dXJuIGNmKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmM6cmV0dXJuIGRmKGMsZXwzLGYsYik7Y2FzZSBiYzpyZXR1cm4gZGYoYyxlfDIsZixiKTtjYXNlIGNjOnJldHVybiBhPVllKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9Y2MsYS50eXBlPWNjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGM6cmV0dXJuIGE9WWUoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9aGMsYS50eXBlPWhjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYzpnPTEwO2JyZWFrIGE7Y2FzZSBlYzpnPTk7YnJlYWsgYTtjYXNlIGdjOmc9MTE7YnJlYWsgYTtjYXNlIGljOmc9XG4xNDticmVhayBhO2Nhc2UgamM6Zz0xNjtkPW51bGw7YnJlYWsgYX10KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9WWUoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIsYyxkKXthPVllKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBkZihhLGIsYyxkKXthPVllKDgsYSxkLGIpO2I9MD09PShiJjEpP2JjOmZjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gZWYoYSxiLGMpe2E9WWUoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gZmYoYSxiLGMpe2I9WWUoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9ZnVuY3Rpb24gZ2YoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM8Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPmImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpO2hmKGIsYSl9XG5mdW5jdGlvbiBqZihhLGIpe2EuZGlkRXJyb3I9ITE7YS5sYXRlc3RQaW5nZWRUaW1lPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZSxkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtoZihiLGEpfWZ1bmN0aW9uIGtmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifVxuZnVuY3Rpb24gaGYoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPGEpJiYoZT1kKTthPWU7MCE9PWEmJmM+YSYmKGE9Yyk7Yi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1lO2IuZXhwaXJhdGlvblRpbWU9YX12YXIgbGY9ITE7ZnVuY3Rpb24gbWYoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gbmYoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIG9mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIHBmKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHFmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1tZihhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1tZihhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1tZihjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9bmYoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9bmYoZCkpO251bGw9PT1lfHxkPT09ZT9wZihkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KHBmKGQsYikscGYoZSxiKSk6KHBmKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcmYoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1tZihhLm1lbW9pemVkU3RhdGUpOnNmKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gc2YoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9bmYoYikpO3JldHVybiBifVxuZnVuY3Rpb24gdGYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0yMDQ5fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjpsZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIHVmKGEsYixjLGQsZSl7bGY9ITE7Yj1zZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWssZj1sKSxoPG0mJihoPW0pKToobD10ZihhLGIsayxsLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1rOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdEVmZmVjdD1rKSkpO2s9ay5uZXh0fW09bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgcT1rLmV4cGlyYXRpb25UaW1lO3E8ZT8obnVsbD09PW0mJihtPWssbnVsbD09PWcmJihmPWwpKSxoPHEmJihoPXEpKToobD10ZihhLGIsayxsLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9XG4zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWs6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RDYXB0dXJlZEVmZmVjdD1rKSkpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9bCk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1sfVxuZnVuY3Rpb24gdmYoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO3dmKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDt3ZihiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gd2YoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24geGYoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpuYyhiKX19dmFyIHlmPXtjdXJyZW50Om51bGx9LHpmPW51bGwsQWY9bnVsbCxCZj1udWxsO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0koeWYsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIERmKGEpe3ZhciBiPXlmLmN1cnJlbnQ7SCh5ZixhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIEVmKGEpe3pmPWE7QmY9QWY9bnVsbDthLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9bnVsbH1cbmZ1bmN0aW9uIEZmKGEsYil7aWYoQmYhPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKUJmPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O251bGw9PT1BZj8obnVsbD09PXpmP3QoXCIyOTNcIik6dm9pZCAwLHpmLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9QWY9Yik6QWY9QWYubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9ZnVuY3Rpb24gR2YoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZighaGQoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH12YXIgSGY9MCxNPW51bGwsSWY9bnVsbCxOPW51bGwsSmY9bnVsbCxPPW51bGwsS2Y9MCxMZj1udWxsLE1mPSExLE5mPSExLE9mPW51bGwsUGY9MDtmdW5jdGlvbiBRZigpe251bGw9PT1NP3QoXCIyOThcIik6dm9pZCAwO3JldHVybiBNfVxuZnVuY3Rpb24gUmYoYSxiLGMsZCl7Zm9yKDtOZjspTmY9ITEsUGYrPTEsTGY9Tz1OPW51bGwsYz1hKGIsZCk7T2Y9bnVsbDtQZj0wO2E9TTthLm1lbW9pemVkU3RhdGU9SmY7YS5leHBpcmF0aW9uVGltZT1LZjthLnVwZGF0ZVF1ZXVlPUxmO2E9bnVsbCE9PU4mJm51bGwhPT1OLm5leHQ7SGY9MDtPPUpmPU49SWY9TT1udWxsO0tmPTA7TGY9bnVsbDthP3QoXCIzMDBcIik6dm9pZCAwO3JldHVybiBjfWZ1bmN0aW9uIFNmKCl7SGY9MDtPPUpmPU49SWY9TT1udWxsO0tmPTA7TGY9bnVsbDtOZj0hMTtPZj1udWxsO1BmPTB9ZnVuY3Rpb24gVGYoKXtyZXR1cm57bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLHF1ZXVlOm51bGwsYmFzZVVwZGF0ZTpudWxsLG5leHQ6bnVsbH19XG5mdW5jdGlvbiBVZihhKXtyZXR1cm57bWVtb2l6ZWRTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOmEuYmFzZVN0YXRlLHF1ZXVlOmEucXVldWUsYmFzZVVwZGF0ZTphLmJhc2VVcGRhdGUsbmV4dDpudWxsfX1mdW5jdGlvbiBWZigpe2lmKG51bGw9PT1PKW51bGw9PT1KZj8oTWY9ITEsTj1JZixKZj1PPW51bGw9PT1OP1RmKCk6VWYoTikpOihNZj0hMCxOPUlmLE89SmYpO2Vsc2UgaWYobnVsbD09PU8ubmV4dCl7TWY9ITE7aWYobnVsbD09PU4pdmFyIGE9VGYoKTtlbHNlIE49Ti5uZXh0LGE9bnVsbD09PU4/VGYoKTpVZihOKTtPPU8ubmV4dD1hfWVsc2UgTWY9ITAsTz1PLm5leHQsTj1udWxsIT09Tj9OLm5leHQ6bnVsbDtyZXR1cm4gT31mdW5jdGlvbiBXZihhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIFhmKGEsYixjKXtNPVFmKCk7Tz1WZigpO3ZhciBkPU8ucXVldWU7aWYobnVsbCE9PWQpe2lmKE1mKXtiPWQuZGlzcGF0Y2g7aWYobnVsbCE9PU9mKXt2YXIgZT1PZi5nZXQoZCk7aWYodm9pZCAwIT09ZSl7T2YuZGVsZXRlKGQpO2M9Ty5tZW1vaXplZFN0YXRlO2RvIGM9YShjLGUuYWN0aW9uKSxlPWUubmV4dDt3aGlsZShudWxsIT09ZSk7Ty5tZW1vaXplZFN0YXRlPWM7Ty5iYXNlVXBkYXRlPT09ZC5sYXN0JiYoTy5iYXNlU3RhdGU9Yyk7cmV0dXJuW2MsYl19fXJldHVybltPLm1lbW9pemVkU3RhdGUsYl19Yj1kLmxhc3Q7dmFyIGY9Ty5iYXNlVXBkYXRlO251bGwhPT1mPyhudWxsIT09YiYmKGIubmV4dD1udWxsKSxiPWYubmV4dCk6Yj1udWxsIT09Yj9iLm5leHQ6bnVsbDtpZihudWxsIT09Yil7Yz1PLmJhc2VTdGF0ZTt2YXIgZz1lPW51bGwsaD1iLGs9ITE7ZG97dmFyIGw9aC5leHBpcmF0aW9uVGltZTtsPEhmPyhrfHwoaz0hMCxnPWYsZT1jKSxsPktmJiYoS2Y9bCkpOlxuYz1hKGMsaC5hY3Rpb24pO2Y9aDtoPWgubmV4dH13aGlsZShudWxsIT09aCYmaCE9PWIpO2t8fChnPWYsZT1jKTtPLm1lbW9pemVkU3RhdGU9YztPLmJhc2VVcGRhdGU9ZztPLmJhc2VTdGF0ZT1lfXJldHVybltPLm1lbW9pemVkU3RhdGUsZC5kaXNwYXRjaF19YT09PVdmP1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiJiYoYj1iKCkpOnZvaWQgMCE9PWMmJm51bGwhPT1jJiYoYj1hKGIsYykpO08ubWVtb2l6ZWRTdGF0ZT1PLmJhc2VTdGF0ZT1iO2Q9Ty5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGx9O2E9ZC5kaXNwYXRjaD1ZZi5iaW5kKG51bGwsTSxkKTtyZXR1cm5bTy5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gWmYoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGlucHV0czpkLG5leHQ6bnVsbH07bnVsbD09PUxmPyhMZj17bGFzdEVmZmVjdDpudWxsfSxMZi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYj1MZi5sYXN0RWZmZWN0LG51bGw9PT1iP0xmLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGM9Yi5uZXh0LGIubmV4dD1hLGEubmV4dD1jLExmLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uICRmKGEsYil7YWcoNCwzNixhLGIpfWZ1bmN0aW9uIGFnKGEsYixjLGQpe009UWYoKTtPPVZmKCk7ZD12b2lkIDAhPT1kJiZudWxsIT09ZD9kOltjXTt2YXIgZT1udWxsO2lmKG51bGwhPT1OKXt2YXIgZj1OLm1lbW9pemVkU3RhdGU7ZT1mLmRlc3Ryb3k7aWYoR2YoZCxmLmlucHV0cykpe1pmKDAsYyxlLGQpO3JldHVybn19TS5lZmZlY3RUYWd8PWE7Ty5tZW1vaXplZFN0YXRlPVpmKGIsYyxlLGQpfVxuZnVuY3Rpb24gWWYoYSxiLGMpezI1PlBmP3ZvaWQgMDp0KFwiMzAxXCIpO3ZhciBkPWEuYWx0ZXJuYXRlO2lmKGE9PT1NfHxudWxsIT09ZCYmZD09PU0paWYoTmY9ITAsYT17ZXhwaXJhdGlvblRpbWU6SGYsYWN0aW9uOmMsbmV4dDpudWxsfSxudWxsPT09T2YmJihPZj1uZXcgTWFwKSxkPU9mLmdldChiKSx2b2lkIDA9PT1kKU9mLnNldChiLGEpO2Vsc2V7Zm9yKGI9ZDtudWxsIT09Yi5uZXh0OyliPWIubmV4dDtiLm5leHQ9YX1lbHNle2Q9YmcoKTtkPWNnKGQsYSk7Yz17ZXhwaXJhdGlvblRpbWU6ZCxhY3Rpb246YyxuZXh0Om51bGx9O2RnKCk7dmFyIGU9Yi5sYXN0O2lmKG51bGw9PT1lKWMubmV4dD1jO2Vsc2V7dmFyIGY9ZS5uZXh0O251bGwhPT1mJiYoYy5uZXh0PWYpO2UubmV4dD1jfWIubGFzdD1jO2VnKGEsZCl9fXZhciBmZz17fSxnZz17Y3VycmVudDpmZ30saGc9e2N1cnJlbnQ6Zmd9LGlnPXtjdXJyZW50OmZnfTtcbmZ1bmN0aW9uIGpnKGEpe2E9PT1mZz90KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1mdW5jdGlvbiBrZyhhLGIpe0koaWcsYixhKTtJKGhnLGEsYSk7SShnZyxmZyxhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9bGUoYixjKX1IKGdnLGEpO0koZ2csYixhKX1mdW5jdGlvbiBsZyhhKXtIKGdnLGEpO0goaGcsYSk7SChpZyxhKX1mdW5jdGlvbiBtZyhhKXtqZyhpZy5jdXJyZW50KTt2YXIgYj1qZyhnZy5jdXJyZW50KTt2YXIgYz1sZShiLGEudHlwZSk7YiE9PWMmJihJKGhnLGEsYSksSShnZyxjLGEpKX1mdW5jdGlvbiBuZyhhKXtoZy5jdXJyZW50PT09YSYmKEgoZ2csYSksSChoZyxhKSl9XG5mdW5jdGlvbiBRKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifWZ1bmN0aW9uIG9nKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDp0aHJvdyBhLl9zdGF0dXM9MCxiPWEuX2N0b3IsYj1iKCksYi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KSxhLl9yZXN1bHQ9YixiO319dmFyIHBnPVhiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiByZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBzZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWJnKCk7ZD1jZyhkLGEpO3ZhciBlPW9mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtkZygpO3FmKGEsZSk7ZWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9YmcoKTtkPWNnKGQsYSk7dmFyIGU9b2YoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7ZGcoKTtxZihhLGUpO2VnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPWJnKCk7Yz1jZyhjLGEpO3ZhciBkPW9mKGMpO2QudGFnPVxuMjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7ZGcoKTtxZihhLGQpO2VnKGEsYyl9fTtmdW5jdGlvbiB0ZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFqZChjLGQpfHwhamQoZSxmKTohMH1cbmZ1bmN0aW9uIHVnKGEsYixjKXt2YXIgZD0hMSxlPUtlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXBnLmN1cnJlbnQucmVhZENvbnRleHQoZik6KGU9TChiKT9MZTpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9NZShhLGUpOktlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9c2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gdmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnNnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gd2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1xZzt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXBnLmN1cnJlbnQucmVhZENvbnRleHQoZik6KGY9TChiKT9MZTpKLmN1cnJlbnQsZS5jb250ZXh0PU1lKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHVmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihyZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZzZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih1ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHhnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiB5ZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/dChcIjI4OVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6dChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09cWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/dChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOnQoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEFnKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ0KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBCZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPWFmKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9ZWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPXlnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1iZihjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj15ZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWZmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPWNmKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBxKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1lZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYz1iZihiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj15ZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGI6cmV0dXJuIGI9ZmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHhnKGIpfHxcbmxjKGIpKXJldHVybiBiPWNmKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFjP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYjpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZih4ZyhjKXx8bGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYz9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZih4ZyhkKXx8bGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxwPW51bGwsbT1nLHU9Zz0wLHI9bnVsbDtudWxsIT09bSYmdTxoLmxlbmd0aDt1Kyspe20uaW5kZXg+dT8ocj1tLG09bnVsbCk6cj1tLnNpYmxpbmc7dmFyIHc9eChlLG0saFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PW0mJihtPXIpO2JyZWFrfWEmJlxubSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHcsZyx1KTtudWxsPT09cD9sPXc6cC5zaWJsaW5nPXc7cD13O209cn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKG09cShlLGhbdV0saykpZz1mKG0sZyx1KSxudWxsPT09cD9sPW06cC5zaWJsaW5nPW0scD1tO3JldHVybiBsfWZvcihtPWQoZSxtKTt1PGgubGVuZ3RoO3UrKylpZihyPUEobSxlLHUsaFt1XSxrKSlhJiZudWxsIT09ci5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1yLmtleT91OnIua2V5KSxnPWYocixnLHUpLG51bGw9PT1wP2w9cjpwLnNpYmxpbmc9cixwPXI7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBWKGUsZyxoLGspe3ZhciBsPWxjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3QoXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/dChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHA9Zyx1PWc9MCxyPW51bGwsdz1oLm5leHQoKTtudWxsIT09cCYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cC5pbmRleD51PyhyPXAscD1udWxsKTpyPXAuc2libGluZzt2YXIgej14KGUscCx3LnZhbHVlLGspO2lmKG51bGw9PT16KXtwfHwocD1yKTticmVha31hJiZwJiZudWxsPT09ei5hbHRlcm5hdGUmJmIoZSxwKTtnPWYoeixnLHUpO251bGw9PT1tP2w9ejptLnNpYmxpbmc9ejttPXo7cD1yfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHApLGw7aWYobnVsbD09PXApe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXEoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocD1kKGUscCk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocCxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcC5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZwLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYyYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PWFjOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWFjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj15ZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PWFjPyhkPWNmKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1iZihmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj15ZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGI6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1mZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9ZWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoeGcoZikpcmV0dXJuIEMoYSxkLGYsaCk7aWYobGMoZikpcmV0dXJuIFYoYSxkLGYsaCk7bCYmQWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx0KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgQ2c9QmcoITApLERnPUJnKCExKSxFZz1udWxsLEZnPW51bGwsR2c9ITE7XG5mdW5jdGlvbiBIZyhhLGIpe3ZhciBjPVllKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gSWcoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBKZyhhKXtpZihHZyl7dmFyIGI9Rmc7aWYoYil7dmFyIGM9YjtpZighSWcoYSxiKSl7Yj1HZShjKTtpZighYnx8IUlnKGEsYikpe2EuZWZmZWN0VGFnfD0yO0dnPSExO0VnPWE7cmV0dXJufUhnKEVnLGMpfUVnPWE7Rmc9SGUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9MixHZz0hMSxFZz1hfX1mdW5jdGlvbiBLZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YS5yZXR1cm47RWc9YX1mdW5jdGlvbiBMZyhhKXtpZihhIT09RWcpcmV0dXJuITE7aWYoIUdnKXJldHVybiBLZyhhKSxHZz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUNlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1GZztiOylIZyhhLGIpLGI9R2UoYik7S2coYSk7Rmc9RWc/R2UoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gTWcoKXtGZz1FZz1udWxsO0dnPSExfXZhciBOZz1YYi5SZWFjdEN1cnJlbnRPd25lcjtcbmZ1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9EZyhiLG51bGwsYyxkKTpDZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7RWYoYixlKTtIZj1lO009YjtJZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDt2YXIgZz1jKGQsZik7Zz1SZihjLGQsZyxmKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixnLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gUGcoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFaZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxRZyhhLGIsZyxkLGUsZik7YT1iZihjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmpkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIFJnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPWFmKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBRZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZlPGYmJmpkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZj9SZyhhLGIsZik6U2coYSxiLGMsZCxmKX1mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIFNnKGEsYixjLGQsZSl7dmFyIGY9TChjKT9MZTpKLmN1cnJlbnQ7Zj1NZShiLGYpO0VmKGIsZSk7SGY9ZTtNPWI7SWY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7dmFyIGc9YyhkLGYpO2c9UmYoYyxkLGcsZik7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO0VmKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSx1ZyhiLGMsZCxlKSx3ZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1wZy5jdXJyZW50LnJlYWRDb250ZXh0KGwpOihsPUwoYyk/TGU6Si5jdXJyZW50LGw9TWUoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJnZnKGIsZyxkLGwpO2xmPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtrPWcuc3RhdGU9eDt2YXIgQT1iLnVwZGF0ZVF1ZXVlO251bGwhPT1BJiYodWYoYixBLGQsZyxlKSxrPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fGxmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKHJnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD1sZnx8dGcoYixjLGgsZCx4LGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6UShiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1wZy5jdXJyZW50LnJlYWRDb250ZXh0KGwpOihsPUwoYyk/TGU6Si5jdXJyZW50LGw9TWUoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcbihxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmdmcoYixnLGQsbCksbGY9ITEsaz1iLm1lbW9pemVkU3RhdGUseD1nLnN0YXRlPWssQT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1BJiYodWYoYixBLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fGxmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKHJnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT1sZnx8dGcoYixjLGgsZCxrLHgsbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gVmcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe1RnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZTZShiLGMsITEpLFJnKGEsYixmKTtkPWIuc3RhdGVOb2RlO05nLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUNnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9Q2coYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmU2UoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBXZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1BlKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlBlKGEsYi5jb250ZXh0LCExKTtrZyhhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBYZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9Y2YobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPWNmKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPURnKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPWFmKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz1hZihoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1DZyhiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1jZihudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1jZihnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPUNnKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiBSZyhhLGIsYyl7bnVsbCE9PWEmJihiLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5KTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/dChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPWFmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPWFmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFlnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hJiZhLm1lbW9pemVkUHJvcHM9PT1iLnBlbmRpbmdQcm9wcyYmIUsuY3VycmVudCYmZDxjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzpXZyhiKTtNZygpO2JyZWFrO2Nhc2UgNTptZyhiKTticmVhaztjYXNlIDE6TChiLnR5cGUpJiZSZShiKTticmVhaztjYXNlIDQ6a2coYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOkNmKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBYZyhhLGIsYyk7Yj1SZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gUmcoYSxiLGMpfWIuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIuZWxlbWVudFR5cGU7bnVsbCE9PVxuYSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1NZShiLEouY3VycmVudCk7RWYoYixjKTtIZj1jO009YjtJZj1udWxsO3ZhciBmPWQoYSxlKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5yZW5kZXImJnZvaWQgMD09PWYuJCR0eXBlb2Ype2IudGFnPTE7U2YoKTtMKGQpPyhlPSEwLFJlKGIpKTplPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09Zi5zdGF0ZSYmdm9pZCAwIT09Zi5zdGF0ZT9mLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJnJnKGIsZCxnLGEpO2YudXBkYXRlcj1zZztiLnN0YXRlTm9kZT1mO2YuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO3dnKGIsZCxhLGMpO2I9VmcobnVsbCxiLGQsITAsZSxjKX1lbHNlIGIudGFnPTAsZj1SZihkLFxuYSxmLGUpLFIobnVsbCxiLGYsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6Zj1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtlPWIucGVuZGluZ1Byb3BzO2E9b2coZik7Yi50eXBlPWE7Zj1iLnRhZz0kZShhKTtlPVEoYSxlKTtnPXZvaWQgMDtzd2l0Y2goZil7Y2FzZSAwOmc9U2cobnVsbCxiLGEsZSxjKTticmVhaztjYXNlIDE6Zz1VZyhudWxsLGIsYSxlLGMpO2JyZWFrO2Nhc2UgMTE6Zz1PZyhudWxsLGIsYSxlLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1QZyhudWxsLGIsYSxRKGEudHlwZSxlKSxkLGMpO2JyZWFrO2RlZmF1bHQ6dChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGY9Yi5lbGVtZW50VHlwZT09PWQ/ZjpRKGQsZiksU2coYSxiLGQsZixjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZj1iLmVsZW1lbnRUeXBlPT09XG5kP2Y6UShkLGYpLFVnKGEsYixkLGYsYyk7Y2FzZSAzOldnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD90KFwiMjgyXCIpOnZvaWQgMDtmPWIubWVtb2l6ZWRTdGF0ZTtmPW51bGwhPT1mP2YuZWxlbWVudDpudWxsO3VmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWYpTWcoKSxiPVJnKGEsYixjKTtlbHNle2Y9Yi5zdGF0ZU5vZGU7aWYoZj0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZi5oeWRyYXRlKUZnPUhlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLEVnPWIsZj1HZz0hMDtmPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPURnKGIsbnVsbCxkLGMpKTooUihhLGIsZCxjKSxNZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBtZyhiKSxudWxsPT09YSYmSmcoYiksZD1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9Zi5jaGlsZHJlbixDZShkLFxuZik/Zz1udWxsOm51bGwhPT1lJiZDZShkLGUpJiYoYi5lZmZlY3RUYWd8PTE2KSxUZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZi5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZKZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIFhnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGtnKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUNnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGY9Yi5lbGVtZW50VHlwZT09PWQ/ZjpRKGQsZiksT2coYSxiLGQsZixjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2Y9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7ZT1mLnZhbHVlO0NmKGIsZSk7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7ZT1oZChoLGUpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGUpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWUpe2lmKGcuY2hpbGRyZW49PT1mLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPVJnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmUpKXtpZigxPT09Zy50YWcpe3ZhciBrPW9mKGMpO2sudGFnPTI7cWYoZyxrKX1nLmV4cGlyYXRpb25UaW1lPFxuYyYmKGcuZXhwaXJhdGlvblRpbWU9Yyk7az1nLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKGwuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YyYmKGsuY2hpbGRFeHBpcmF0aW9uVGltZT1jKTtlbHNlIGlmKG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YylrLmNoaWxkRXhwaXJhdGlvblRpbWU9YztlbHNlIGJyZWFrO2w9bC5yZXR1cm59fWs9Zy5jaGlsZDtoPWgubmV4dH13aGlsZShudWxsIT09aCl9ZWxzZSBrPTEwPT09Zy50YWc/Zy50eXBlPT09Yi50eXBlP251bGw6Zy5jaGlsZDpnLmNoaWxkO2lmKG51bGwhPT1rKWsucmV0dXJuPWc7ZWxzZSBmb3Ioaz1nO251bGwhPT1rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztcbmlmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVIoYSxiLGYuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZj1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxkPWUuY2hpbGRyZW4sRWYoYixjKSxmPUZmKGYsZS51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChmKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZj1iLnR5cGUsZT1RKGYsYi5wZW5kaW5nUHJvcHMpLGU9UShmLnR5cGUsZSksUGcoYSxiLGYsZSxkLGMpO2Nhc2UgMTU6cmV0dXJuIFFnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGY9Yi5lbGVtZW50VHlwZT09PWQ/ZjpRKGQsZiksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT1cbiEwLFJlKGIpKTphPSExLEVmKGIsYyksdWcoYixkLGYsYyksd2coYixkLGYsYyksVmcobnVsbCxiLGQsITAsYSxjKTtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIFpnKGEpe2EuZWZmZWN0VGFnfD00fXZhciAkZz12b2lkIDAsYWg9dm9pZCAwLGJoPXZvaWQgMCxjaD12b2lkIDA7JGc9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O2FoPWZ1bmN0aW9uKCl7fTtcbmJoPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtqZyhnZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emMoZyxmKTtkPXpjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1kZShnLGYpO2Q9ZGUoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1mZShnLGYpO2Q9ZmUoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz14ZSl9dWUoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cbmMpe3ZhciBrPWZbY107Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiYoaHx8KGg9e30pLGhbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWMmJlwiY2hpbGRyZW5cIiE9PWMmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmXCJhdXRvRm9jdXNcIiE9PWMmJih0YS5oYXNPd25Qcm9wZXJ0eShjKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goYyxudWxsKSk7Zm9yKGMgaW4gZCl7dmFyIGw9ZFtjXTtrPW51bGwhPWY/ZltjXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShjKSYmbCE9PWsmJihudWxsIT1sfHxudWxsIT1rKSlpZihcInN0eWxlXCI9PT1jKWlmKGspe2ZvcihnIGluIGspIWsuaGFzT3duUHJvcGVydHkoZyl8fGwmJmwuaGFzT3duUHJvcGVydHkoZyl8fChofHwoaD17fSksaFtnXT1cIlwiKTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJmtbZ10hPT1sW2ddJiYoaHx8XG4oaD17fSksaFtnXT1sW2ddKX1lbHNlIGh8fChhfHwoYT1bXSksYS5wdXNoKGMsaCkpLGg9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Yz8obD1sP2wuX19odG1sOnZvaWQgMCxrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmshPT1sJiYoYT1hfHxbXSkucHVzaChjLFwiXCIrbCkpOlwiY2hpbGRyZW5cIj09PWM/az09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChjLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiYodGEuaGFzT3duUHJvcGVydHkoYyk/KG51bGwhPWwmJndlKGUsYyksYXx8az09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goYyxsKSl9aCYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGgpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYmWmcoYil9fTtjaD1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmWmcoYil9O1xudmFyIGRoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIGVoKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9bmMoYykpO251bGwhPT1jJiZtYyhjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZtYyhhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBpaChhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtqaChhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBraChhLGIsYyl7Yz1jLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2Rve2lmKDAhPT0oZC50YWcmYSkpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9bnVsbDtudWxsIT09ZSYmZSgpfTAhPT0oZC50YWcmYikmJihlPWQuY3JlYXRlLGU9ZSgpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlJiYoZT1udWxsKSxkLmRlc3Ryb3k9ZSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIGxoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1yZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gbWgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVlJiZVZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYobnVsbCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtqaChlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOmloKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtqaChhLGYpfWJyZWFrO2Nhc2UgNTppaChhKTticmVhaztjYXNlIDQ6bmgoYSl9fVxuZnVuY3Rpb24gb2goYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBwaChhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihvaChiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihvZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8b2goYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXhlKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gbmgoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKG1oKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz8oZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGU9ITApOm1oKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIHFoKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6a2goNCw4LGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkZlKGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWIubWVtb2l6ZWRTdGF0ZTtkPXZvaWQgMDthPWI7bnVsbD09PWM/ZD0hMTooZD0hMCxhPWIuY2hpbGQsMD09PWMudGltZWRPdXRBdCYmKGMudGltZWRPdXRBdD1iZygpKSk7bnVsbCE9PWEmJmxoKGEsZCk7Yz1iLnVwZGF0ZVF1ZXVlO1xuaWYobnVsbCE9PWMpe2IudXBkYXRlUXVldWU9bnVsbDt2YXIgZz1iLnN0YXRlTm9kZTtudWxsPT09ZyYmKGc9Yi5zdGF0ZU5vZGU9bmV3IGRoKTtjLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9cmguYmluZChudWxsLGIsYSk7Zy5oYXMoYSl8fChnLmFkZChhKSxhLnRoZW4oYyxjKSl9KX1icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dChcIjE2M1wiKX19dmFyIHNoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIHRoKGEsYixjKXtjPW9mKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe3VoKGQpO2VoKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gdmgoYSxiLGMpe2M9b2YoYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09d2g/d2g9bmV3IFNldChbdGhpc10pOndoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7ZWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJk5lKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIGxnKGEpLE9lKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT90KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBuZyhhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSA0OnJldHVybiBsZyhhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIERmKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgeWg9e3JlYWRDb250ZXh0OkZmLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7TT1RZigpO089VmYoKTtiPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6W2FdO3ZhciBjPU8ubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmR2YoYixjWzFdKSlyZXR1cm4gY1swXTtPLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtRZigpO3JldHVybiBGZihhLGIpfSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXthZyg1MTYsMTkyLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpbYSxiXTskZihmdW5jdGlvbigpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXt2YXIgYz1iKCk7YShjKTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYShudWxsKX19aWYobnVsbCE9PWEmJnZvaWQgMCE9PWEpcmV0dXJuIGM9YigpLGEuY3VycmVudD1jLGZ1bmN0aW9uKCl7YS5jdXJyZW50PVxubnVsbH19LGMpfSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7UWYoKX0sdXNlTGF5b3V0RWZmZWN0OiRmLHVzZU1lbW86ZnVuY3Rpb24oYSxiKXtNPVFmKCk7Tz1WZigpO2I9dm9pZCAwIT09YiYmbnVsbCE9PWI/YjpbYV07dmFyIGM9Ty5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiZHZihiLGNbMV0pKXJldHVybiBjWzBdO2E9YSgpO08ubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpYZix1c2VSZWY6ZnVuY3Rpb24oYSl7TT1RZigpO089VmYoKTtudWxsPT09Ty5tZW1vaXplZFN0YXRlPyhhPXtjdXJyZW50OmF9LE8ubWVtb2l6ZWRTdGF0ZT1hKTphPU8ubWVtb2l6ZWRTdGF0ZTtyZXR1cm4gYX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIFhmKFdmLGEpfX0semg9WGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixBaD1YYi5SZWFjdEN1cnJlbnRPd25lcixCaD0xMDczNzQxODIyLENoPTAsRGg9ITEsUz1udWxsLEVoPW51bGwsVD0wLEZoPS0xLEdoPSExLFxuVT1udWxsLEhoPSExLEloPW51bGwsSmg9bnVsbCxLaD1udWxsLHdoPW51bGw7ZnVuY3Rpb24gTGgoKXtpZihudWxsIT09Uylmb3IodmFyIGE9Uy5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmTmUoYik7YnJlYWs7Y2FzZSAzOmxnKGIpO09lKGIpO2JyZWFrO2Nhc2UgNTpuZyhiKTticmVhaztjYXNlIDQ6bGcoYik7YnJlYWs7Y2FzZSAxMDpEZihiKX1hPWEucmV0dXJufUVoPW51bGw7VD0wO0ZoPS0xO0doPSExO1M9bnVsbH1cbmZ1bmN0aW9uIE1oKGEsYil7S2g9Smg9SWg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9YjtraCgxMjgsMCxmKTtraCgwLDY0LGYpfWNhdGNoKGcpe2Q9ITAsZT1nfWQmJmpoKGIsZSl9Yj1iLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PWIpO1c9YztjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJk5oKGEsYyl9ZnVuY3Rpb24gZGcoKXtudWxsIT09S2gmJihiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhKaCksS2goKSl9XG5mdW5jdGlvbiBPaChhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7Uz1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVQ7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TChiLnR5cGUpJiZOZShiKTticmVhaztjYXNlIDM6bGcoYik7T2UoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpTGcoYiksYi5lZmZlY3RUYWcmPS0zO2FoKGIpO2JyZWFrO2Nhc2UgNTpuZyhiKTt2YXIgaD1qZyhpZy5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpYmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBrPWpnKGdnLmN1cnJlbnQpO2lmKExnKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgbD1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscT1oO2VbSGFdPWc7ZVtJYV09bTtmPXZvaWQgMDtoPWw7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RyhcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8Y2IubGVuZ3RoO2wrKylHKGNiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixlKTtHKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RyhcInJlc2V0XCIsZSk7RyhcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKGUsbSk7RyhcImludmFsaWRcIixlKTt3ZShxLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZSk7d2UocSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmdlKGUsbSksRyhcImludmFsaWRcIixlKSx3ZShxLFwib25DaGFuZ2VcIil9dWUoaCxtKTtsPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYoaz1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6dGEuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWsmJndlKHEsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpWYihlKTtFYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKGUpO2llKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz14ZSl9Zj1sO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJlpnKGIpfWVsc2V7bT1iO2U9ZjtxPWc7bD05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtrPT09amUuaHRtbCYmKGs9a2UoZSkpO2s9PT1qZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHEuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6cS5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmcS5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbSGFdPW07ZVtJYV09ZzskZyhlLGIsITEsITEpO3E9ZTtsPWY7bT1nO3ZhciB4PWgsQT12ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkcoXCJsb2FkXCIsXG5xKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGNiLmxlbmd0aDtoKyspRyhjYltoXSxxKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLHEpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixxKTtHKFwibG9hZFwiLHEpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkcoXCJyZXNldFwiLHEpO0coXCJzdWJtaXRcIixxKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIscSk7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKHEsbSk7aD16YyhxLG0pO0coXCJpbnZhbGlkXCIscSk7d2UoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWRlKHEsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixxKTt3ZSh4LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Z2UocSxcbm0pO2g9ZmUocSxtKTtHKFwiaW52YWxpZFwiLHEpO3dlKHgsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX11ZShsLGgpO2s9dm9pZCAwO3ZhciBDPWwsVj1xLHc9aDtmb3IoayBpbiB3KWlmKHcuaGFzT3duUHJvcGVydHkoaykpe3ZhciBwPXdba107XCJzdHlsZVwiPT09az9zZShWLHApOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHA9cD9wLl9faHRtbDp2b2lkIDAsbnVsbCE9cCYmbmUoVixwKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHA/KFwidGV4dGFyZWFcIiE9PUN8fFwiXCIhPT1wKSYmb2UoVixwKTpcIm51bWJlclwiPT09dHlwZW9mIHAmJm9lKFYsXCJcIitwKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYodGEuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cCYmd2UoeCxrKTpudWxsIT1wJiZ4YyhWLGsscCxBKSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOlZiKHEpO1xuRWMocSxtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihxKTtpZShxLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZxLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit5YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cTtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtxPW0udmFsdWU7bnVsbCE9cT9lZShoLCEhbS5tdWx0aXBsZSxxLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZWUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHEub25jbGljaz14ZSl9KGc9QmUoZixnKSkmJlpnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP2NoKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPWpnKGlnLmN1cnJlbnQpLGpnKGdnLmN1cnJlbnQpLExnKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0hhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJlpnKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0hhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtTPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XG5iLmxhc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpO2lmKGchPT1mfHwwPT09KGIuZWZmZWN0VGFnJjEpJiZnKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6bGcoYik7YWgoYik7YnJlYWs7Y2FzZSAxMDpEZihiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkwoYi50eXBlKSYmTmUoYik7YnJlYWs7ZGVmYXVsdDp0KFwiMTU2XCIpfVM9bnVsbH1iPWE7aWYoMT09PVR8fDEhPT1iLmNoaWxkRXhwaXJhdGlvblRpbWUpe2c9MDtmb3IoZj1iLmNoaWxkO251bGwhPT1mOyllPWYuZXhwaXJhdGlvblRpbWUsaD1mLmNoaWxkRXhwaXJhdGlvblRpbWUsZT5nJiYoZz1lKSxoPmcmJihnPWgpLGY9Zi5zaWJsaW5nO2IuY2hpbGRFeHBpcmF0aW9uVGltZT1nfWlmKG51bGwhPT1TKXJldHVybiBTO251bGwhPT1jJiYwPT09KGMuZWZmZWN0VGFnJjEwMjQpJiYobnVsbD09PVxuYy5maXJzdEVmZmVjdCYmKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpfWVsc2V7YT14aChhLFQpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MTAyMyxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9MTAyNCl9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBQaChhKXt2YXIgYj1ZZyhhLmFsdGVybmF0ZSxhLFQpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9T2goYSkpO0FoLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFFoKGEsYil7RGg/dChcIjI0M1wiKTp2b2lkIDA7ZGcoKTtEaD0hMDt6aC5jdXJyZW50PXloO3ZhciBjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoYyE9PVR8fGEhPT1FaHx8bnVsbD09PVMpTGgoKSxFaD1hLFQ9YyxTPWFmKEVoLmN1cnJlbnQsbnVsbCxUKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVMmJiFSaCgpOylTPVBoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz1QaChTKX1jYXRjaChDKXtpZihCZj1BZj16Zj1udWxsLFNmKCksbnVsbD09PVMpZD0hMCx1aChDKTtlbHNle251bGw9PT1TP3QoXCIyNzFcIik6dm9pZCAwO3ZhciBlPVMsZj1lLnJldHVybjtpZihudWxsPT09ZilkPSEwLHVoKEMpO2Vsc2V7YTp7dmFyIGc9YSxoPWYsaz1lLGw9QztmPVQ7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09bCYmXCJvYmplY3RcIj09PVxudHlwZW9mIGwmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsLnRoZW4pe3ZhciBtPWw7bD1oO3ZhciBxPS0xLHg9LTE7ZG97aWYoMTM9PT1sLnRhZyl7dmFyIEE9bC5hbHRlcm5hdGU7aWYobnVsbCE9PUEmJihBPUEubWVtb2l6ZWRTdGF0ZSxudWxsIT09QSkpe3g9MTAqKDEwNzM3NDE4MjItQS50aW1lZE91dEF0KTticmVha31BPWwucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgQSlpZigwPj1BKXE9MDtlbHNlIGlmKC0xPT09cXx8QTxxKXE9QX1sPWwucmV0dXJufXdoaWxlKG51bGwhPT1sKTtsPWg7ZG97aWYoQT0xMz09PWwudGFnKUE9dm9pZCAwPT09bC5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1sLm1lbW9pemVkU3RhdGU7aWYoQSl7aD1sLnVwZGF0ZVF1ZXVlO251bGw9PT1oPyhoPW5ldyBTZXQsaC5hZGQobSksbC51cGRhdGVRdWV1ZT1oKTpoLmFkZChtKTtpZigwPT09KGwubW9kZSYxKSl7bC5lZmZlY3RUYWd8PTY0O2suZWZmZWN0VGFnJj1cbi0xOTU3OzE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZj1vZigxMDczNzQxODIzKSxmLnRhZz0yLHFmKGssZikpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWcucGluZ0NhY2hlO251bGw9PT1rPyhrPWcucGluZ0NhY2hlPW5ldyBzaCxoPW5ldyBTZXQsay5zZXQobSxoKSk6KGg9ay5nZXQobSksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxrLnNldChtLGgpKSk7aC5oYXMoZil8fChoLmFkZChmKSxrPVNoLmJpbmQobnVsbCxnLG0sZiksbS50aGVuKGssaykpOy0xPT09cT9nPTEwNzM3NDE4MjM6KC0xPT09eCYmKHg9MTAqKDEwNzM3NDE4MjIta2YoZyxmKSktNUUzKSxnPXgrcSk7MDw9ZyYmRmg8ZyYmKEZoPWcpO2wuZWZmZWN0VGFnfD0yMDQ4O2wuZXhwaXJhdGlvblRpbWU9ZjticmVhayBhfWw9bC5yZXR1cm59d2hpbGUobnVsbCE9PWwpO2w9RXJyb3IoKG1jKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitcbm5jKGspKX1HaD0hMDtsPXhmKGwsayk7Zz1oO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmcuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPXRoKGcsbCxmKTtyZihnLGYpO2JyZWFrIGE7Y2FzZSAxOmlmKG09bCxxPWcudHlwZSx4PWcuc3RhdGVOb2RlLDA9PT0oZy5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09eCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHguY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09d2h8fCF3aC5oYXMoeCkpKSl7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9dmgoZyxtLGYpO3JmKGcsZik7YnJlYWsgYX19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyl9Uz1PaChlKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO0RoPSExO0JmPUFmPXpmPXpoLmN1cnJlbnQ9bnVsbDtTZigpO2lmKGQpRWg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVxuUylhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7ZD1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1kP3QoXCIyODFcIik6dm9pZCAwO0VoPW51bGw7aWYoR2gpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxjfHwwIT09ZiYmZjxjfHwwIT09ZyYmZzxjKXtqZihhLGMpO1RoKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249YztiPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztUaChhLGQsYyxiLC0xKTtyZXR1cm59fWImJi0xIT09Rmg/KGpmKGEsYyksYj0xMCooMTA3Mzc0MTgyMi1rZihhLGMpKSxiPEZoJiYoRmg9YiksYj0xMCooMTA3Mzc0MTgyMi1iZygpKSxiPUZoLWIsVGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPVxuYyxhLmZpbmlzaGVkV29yaz1kKX19ZnVuY3Rpb24gamgoYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09d2h8fCF3aC5oYXMoZCkpKXthPXhmKGIsYSk7YT12aChjLGEsMTA3Mzc0MTgyMyk7cWYoYyxhKTtlZyhjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT14ZihiLGEpO2E9dGgoYyxhLDEwNzM3NDE4MjMpO3FmKGMsYSk7ZWcoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPXhmKGIsYSksYz10aChhLGMsMTA3Mzc0MTgyMykscWYoYSxjKSxlZyhhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIGNnKGEsYil7MCE9PUNoP2E9Q2g6RGg/YT1IaD8xMDczNzQxODIzOlQ6Yi5tb2RlJjE/KGE9VWg/MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpOjEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSksbnVsbCE9PUVoJiZhPT09VCYmLS1hKTphPTEwNzM3NDE4MjM7VWgmJigwPT09Vmh8fGE8VmgpJiYoVmg9YSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBTaChhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1FaCYmVD09PWMpRWg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztoZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmTmgoYSxjKX19ZnVuY3Rpb24gcmgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1iZygpO2I9Y2coYixhKTthPVdoKGEsYik7bnVsbCE9PWEmJihnZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmTmgoYSxiKSl9XG5mdW5jdGlvbiBXaChhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gZWcoYSxiKXthPVdoKGEsYik7bnVsbCE9PWEmJighRGgmJjAhPT1UJiZiPlQmJkxoKCksZ2YoYSxiKSxEaCYmIUhoJiZFaD09PWF8fE5oKGEsYS5leHBpcmF0aW9uVGltZSksWGg+WWgmJihYaD0wLHQoXCIxODVcIikpKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe3ZhciBmPUNoO0NoPTEwNzM3NDE4MjM7dHJ5e3JldHVybiBhKGIsYyxkLGUpfWZpbmFsbHl7Q2g9Zn19dmFyICRoPW51bGwsWD1udWxsLGFpPTAsYmk9dm9pZCAwLFc9ITEsY2k9bnVsbCxZPTAsVmg9MCxkaT0hMSxlaT1udWxsLFo9ITEsZmk9ITEsVWg9ITEsZ2k9bnVsbCxoaT1iYS51bnN0YWJsZV9ub3coKSxpaT0xMDczNzQxODIyLShoaS8xMHwwKSxqaT1paSxZaD01MCxYaD0wLGtpPW51bGw7ZnVuY3Rpb24gbGkoKXtpaT0xMDczNzQxODIyLSgoYmEudW5zdGFibGVfbm93KCktaGkpLzEwfDApfVxuZnVuY3Rpb24gbWkoYSxiKXtpZigwIT09YWkpe2lmKGI8YWkpcmV0dXJuO251bGwhPT1iaSYmYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soYmkpfWFpPWI7YT1iYS51bnN0YWJsZV9ub3coKS1oaTtiaT1iYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKG5pLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBUaChhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8UmgoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9RGUob2kuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gb2koYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9YjtsaSgpO2ppPWlpO3BpKGEsYyl9ZnVuY3Rpb24gYmcoKXtpZihXKXJldHVybiBqaTtxaSgpO2lmKDA9PT1ZfHwxPT09WSlsaSgpLGppPWlpO3JldHVybiBqaX1cbmZ1bmN0aW9uIE5oKGEsYil7bnVsbD09PWEubmV4dFNjaGVkdWxlZFJvb3Q/KGEuZXhwaXJhdGlvblRpbWU9YixudWxsPT09WD8oJGg9WD1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KFg9WC5uZXh0U2NoZWR1bGVkUm9vdD1hLFgubmV4dFNjaGVkdWxlZFJvb3Q9JGgpKTpiPmEuZXhwaXJhdGlvblRpbWUmJihhLmV4cGlyYXRpb25UaW1lPWIpO1d8fChaP2ZpJiYoY2k9YSxZPTEwNzM3NDE4MjMscmkoYSwxMDczNzQxODIzLCExKSk6MTA3Mzc0MTgyMz09PWI/c2koMTA3Mzc0MTgyMywhMSk6bWkoYSxiKSl9XG5mdW5jdGlvbiBxaSgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1YKWZvcih2YXIgYz1YLGQ9JGg7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PVg/dChcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3QpeyRoPVg9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PSRoKSRoPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxYLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PVgpe1g9YztYLm5leHRTY2hlZHVsZWRSb290PSRoO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7ZT5hJiYoYT1lLGI9ZCk7aWYoZD09PVgpYnJlYWs7aWYoMTA3Mzc0MTgyMz09PVxuYSlicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX1jaT1iO1k9YX12YXIgdGk9ITE7ZnVuY3Rpb24gUmgoKXtyZXR1cm4gdGk/ITA6YmEudW5zdGFibGVfc2hvdWxkWWllbGQoKT90aT0hMDohMX1mdW5jdGlvbiBuaSgpe3RyeXtpZighUmgoKSYmbnVsbCE9PSRoKXtsaSgpO3ZhciBhPSRoO2Rve3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7MCE9PWImJmlpPD1iJiYoYS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1paSk7YT1hLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGEhPT0kaCl9c2koMCwhMCl9ZmluYWxseXt0aT0hMX19XG5mdW5jdGlvbiBzaShhLGIpe3FpKCk7aWYoYilmb3IobGkoKSxqaT1paTtudWxsIT09Y2kmJjAhPT1ZJiZhPD1ZJiYhKHRpJiZpaT5ZKTspcmkoY2ksWSxpaT5ZKSxxaSgpLGxpKCksamk9aWk7ZWxzZSBmb3IoO251bGwhPT1jaSYmMCE9PVkmJmE8PVk7KXJpKGNpLFksITEpLHFpKCk7YiYmKGFpPTAsYmk9bnVsbCk7MCE9PVkmJm1pKGNpLFkpO1hoPTA7a2k9bnVsbDtpZihudWxsIT09Z2kpZm9yKGE9Z2ksZ2k9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtkaXx8KGRpPSEwLGVpPWQpfX1pZihkaSl0aHJvdyBhPWVpLGVpPW51bGwsZGk9ITEsYTt9ZnVuY3Rpb24gcGkoYSxiKXtXP3QoXCIyNTNcIik6dm9pZCAwO2NpPWE7WT1iO3JpKGEsYiwhMSk7c2koMTA3Mzc0MTgyMywhMSl9XG5mdW5jdGlvbiByaShhLGIsYyl7Vz90KFwiMjQ1XCIpOnZvaWQgMDtXPSEwO2lmKGMpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kP3VpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRWUoZCkpLFFoKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmKFJoKCk/YS5maW5pc2hlZFdvcms9ZDp1aShhLGQsYikpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/dWkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxFZShkKSksUWgoYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiZ1aShhLGQsYikpO1c9ITF9XG5mdW5jdGlvbiB1aShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YyYmKG51bGw9PT1naT9naT1bZF06Z2kucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT1raT9YaCsrOihraT1hLFhoPTApO0hoPURoPSEwO2EuY3VycmVudD09PWI/dChcIjE3N1wiKTp2b2lkIDA7Yz1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09Yz90KFwiMjYxXCIpOnZvaWQgMDthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO2Q9Yi5leHBpcmF0aW9uVGltZTt2YXIgZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU7ZD1lPmQ/ZTpkO2EuZGlkRXJyb3I9ITE7MD09PWQ/KGEuZWFybGllc3RQZW5kaW5nVGltZT0wLGEubGF0ZXN0UGVuZGluZ1RpbWU9MCxhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT1cbjApOihkPGEubGF0ZXN0UGluZ2VkVGltZSYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKSxlPWEubGF0ZXN0UGVuZGluZ1RpbWUsMCE9PWUmJihlPmQ/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+ZCYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSksZT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZSwwPT09ZT9nZihhLGQpOmQ8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGdmKGEsZCkpOmQ+ZSYmZ2YoYSxkKSk7aGYoMCxhKTtBaC5jdXJyZW50PW51bGw7MTxiLmVmZmVjdFRhZz9udWxsIT09Yi5sYXN0RWZmZWN0PyhiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLGQ9Yi5maXJzdEVmZmVjdCk6ZD1iOmQ9Yi5maXJzdEVmZmVjdDt5ZT1IZDtlPVRkKCk7aWYoVWQoZSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluXG5lKXZhciBmPXtzdGFydDplLnNlbGVjdGlvblN0YXJ0LGVuZDplLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntmPShmPWUub3duZXJEb2N1bWVudCkmJmYuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZz1mLmdldFNlbGVjdGlvbiYmZi5nZXRTZWxlY3Rpb24oKTtpZihnJiYwIT09Zy5yYW5nZUNvdW50KXtmPWcuYW5jaG9yTm9kZTt2YXIgaD1nLmFuY2hvck9mZnNldCxrPWcuZm9jdXNOb2RlO2c9Zy5mb2N1c09mZnNldDt0cnl7Zi5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHBiKXtmPW51bGw7YnJlYWsgYX12YXIgbD0wLG09LTEscT0tMSx4PTAsQT0wLEM9ZSxWPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdzs7KXtDIT09Znx8MCE9PWgmJjMhPT1DLm5vZGVUeXBlfHwobT1sK2gpO0MhPT1rfHwwIT09ZyYmMyE9PUMubm9kZVR5cGV8fChxPWwrZyk7Mz09PUMubm9kZVR5cGUmJihsKz1DLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odz1DLmZpcnN0Q2hpbGQpKWJyZWFrO1Y9QztDPXd9Zm9yKDs7KXtpZihDPT09XG5lKWJyZWFrIGI7Vj09PWYmJisreD09PWgmJihtPWwpO1Y9PT1rJiYrK0E9PT1nJiYocT1sKTtpZihudWxsIT09KHc9Qy5uZXh0U2libGluZykpYnJlYWs7Qz1WO1Y9Qy5wYXJlbnROb2RlfUM9d31mPS0xPT09bXx8LTE9PT1xP251bGw6e3N0YXJ0Om0sZW5kOnF9fWVsc2UgZj1udWxsfWY9Znx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZj1udWxsO3plPXtmb2N1c2VkRWxlbTplLHNlbGVjdGlvblJhbmdlOmZ9O0hkPSExO2ZvcihVPWQ7bnVsbCE9PVU7KXtlPSExO2Y9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7aWYoVS5lZmZlY3RUYWcmMjU2KWE6e3ZhciBwPVUuYWx0ZXJuYXRlO2g9VTtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6a2goMiwwLGgpO2JyZWFrIGE7Y2FzZSAxOmlmKGguZWZmZWN0VGFnJjI1NiYmbnVsbCE9PXApe3ZhciB1PXAubWVtb2l6ZWRQcm9wcyx6PXAubWVtb2l6ZWRTdGF0ZSx6Zz1oLnN0YXRlTm9kZSx5aT16Zy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShoLmVsZW1lbnRUeXBlPT09XG5oLnR5cGU/dTpRKGgudHlwZSx1KSx6KTt6Zy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT15aX1icmVhayBhO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrIGE7ZGVmYXVsdDp0KFwiMTYzXCIpfX1VPVUubmV4dEVmZmVjdH19Y2F0Y2gocGIpe2U9ITAsZj1wYn1lJiYobnVsbD09PVU/dChcIjE3OFwiKTp2b2lkIDAsamgoVSxmKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9Zm9yKFU9ZDtudWxsIT09VTspe3A9ITE7dT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXt2YXIgeT1VLmVmZmVjdFRhZzt5JjE2JiZvZShVLnN0YXRlTm9kZSxcIlwiKTtpZih5JjEyOCl7dmFyIEQ9VS5hbHRlcm5hdGU7aWYobnVsbCE9PUQpe3ZhciByPUQucmVmO251bGwhPT1yJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHI/cihudWxsKTpyLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh5JjE0KXtjYXNlIDI6cGgoVSk7VS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpwaChVKTtcblUuZWZmZWN0VGFnJj0tMztxaChVLmFsdGVybmF0ZSxVKTticmVhaztjYXNlIDQ6cWgoVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA4Ono9VTtuaCh6KTt6LnJldHVybj1udWxsO3ouY2hpbGQ9bnVsbDt6Lm1lbW9pemVkU3RhdGU9bnVsbDt6LnVwZGF0ZVF1ZXVlPW51bGw7dmFyIFA9ei5hbHRlcm5hdGU7bnVsbCE9PVAmJihQLnJldHVybj1udWxsLFAuY2hpbGQ9bnVsbCxQLm1lbW9pemVkU3RhdGU9bnVsbCxQLnVwZGF0ZVF1ZXVlPW51bGwpfVU9VS5uZXh0RWZmZWN0fX1jYXRjaChwYil7cD0hMCx1PXBifXAmJihudWxsPT09VT90KFwiMTc4XCIpOnZvaWQgMCxqaChVLHUpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1yPXplO0Q9VGQoKTt5PXIuZm9jdXNlZEVsZW07cD1yLnNlbGVjdGlvblJhbmdlO2lmKEQhPT15JiZ5JiZ5Lm93bmVyRG9jdW1lbnQmJlNkKHkub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQseSkpe251bGwhPT1wJiZVZCh5KSYmKEQ9cC5zdGFydCxyPXAuZW5kLFxudm9pZCAwPT09ciYmKHI9RCksXCJzZWxlY3Rpb25TdGFydFwiaW4geT8oeS5zZWxlY3Rpb25TdGFydD1ELHkuc2VsZWN0aW9uRW5kPU1hdGgubWluKHIseS52YWx1ZS5sZW5ndGgpKToocj0oRD15Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmRC5kZWZhdWx0Vmlld3x8d2luZG93LHIuZ2V0U2VsZWN0aW9uJiYocj1yLmdldFNlbGVjdGlvbigpLHU9eS50ZXh0Q29udGVudC5sZW5ndGgsUD1NYXRoLm1pbihwLnN0YXJ0LHUpLHA9dm9pZCAwPT09cC5lbmQ/UDpNYXRoLm1pbihwLmVuZCx1KSwhci5leHRlbmQmJlA+cCYmKHU9cCxwPVAsUD11KSx1PVJkKHksUCksej1SZCh5LHApLHUmJnomJigxIT09ci5yYW5nZUNvdW50fHxyLmFuY2hvck5vZGUhPT11Lm5vZGV8fHIuYW5jaG9yT2Zmc2V0IT09dS5vZmZzZXR8fHIuZm9jdXNOb2RlIT09ei5ub2RlfHxyLmZvY3VzT2Zmc2V0IT09ei5vZmZzZXQpJiYoRD1ELmNyZWF0ZVJhbmdlKCksRC5zZXRTdGFydCh1Lm5vZGUsdS5vZmZzZXQpLHIucmVtb3ZlQWxsUmFuZ2VzKCksXG5QPnA/KHIuYWRkUmFuZ2UoRCksci5leHRlbmQoei5ub2RlLHoub2Zmc2V0KSk6KEQuc2V0RW5kKHoubm9kZSx6Lm9mZnNldCksci5hZGRSYW5nZShEKSkpKSkpO0Q9W107Zm9yKHI9eTtyPXIucGFyZW50Tm9kZTspMT09PXIubm9kZVR5cGUmJkQucHVzaCh7ZWxlbWVudDpyLGxlZnQ6ci5zY3JvbGxMZWZ0LHRvcDpyLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB5LmZvY3VzJiZ5LmZvY3VzKCk7Zm9yKHk9MDt5PEQubGVuZ3RoO3krKylyPURbeV0sci5lbGVtZW50LnNjcm9sbExlZnQ9ci5sZWZ0LHIuZWxlbWVudC5zY3JvbGxUb3A9ci50b3B9emU9bnVsbDtIZD0hIXllO3llPW51bGw7YS5jdXJyZW50PWI7Zm9yKFU9ZDtudWxsIT09VTspe3k9ITE7RD12b2lkIDA7dHJ5e2ZvcihyPWEsUD1jO251bGwhPT1VOyl7dmFyIHBhPVUuZWZmZWN0VGFnO2lmKHBhJjM2KXt2YXIgVGI9VS5hbHRlcm5hdGU7cD1VO3U9UDtzd2l0Y2gocC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6a2goMTYsXG4zMixwKTticmVhaztjYXNlIDE6dmFyIFpjPXAuc3RhdGVOb2RlO2lmKHAuZWZmZWN0VGFnJjQpaWYobnVsbD09PVRiKVpjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgTWk9cC5lbGVtZW50VHlwZT09PXAudHlwZT9UYi5tZW1vaXplZFByb3BzOlEocC50eXBlLFRiLm1lbW9pemVkUHJvcHMpO1pjLmNvbXBvbmVudERpZFVwZGF0ZShNaSxUYi5tZW1vaXplZFN0YXRlLFpjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgZmg9cC51cGRhdGVRdWV1ZTtudWxsIT09ZmgmJnZmKHAsZmgsWmMsdSk7YnJlYWs7Y2FzZSAzOnZhciBnaD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1naCl7ej1udWxsO2lmKG51bGwhPT1wLmNoaWxkKXN3aXRjaChwLmNoaWxkLnRhZyl7Y2FzZSA1Ono9cC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOno9cC5jaGlsZC5zdGF0ZU5vZGV9dmYocCxnaCx6LHUpfWJyZWFrO2Nhc2UgNTp2YXIgTmk9cC5zdGF0ZU5vZGU7bnVsbD09PVxuVGImJnAuZWZmZWN0VGFnJjQmJkJlKHAudHlwZSxwLm1lbW9pemVkUHJvcHMpJiZOaS5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX1pZihwYSYxMjgpe3ZhciAkYz1VLnJlZjtpZihudWxsIT09JGMpe3ZhciBoaD1VLnN0YXRlTm9kZTtzd2l0Y2goVS50YWcpe2Nhc2UgNTp2YXIgQWU9aGg7YnJlYWs7ZGVmYXVsdDpBZT1oaH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgJGM/JGMoQWUpOiRjLmN1cnJlbnQ9QWV9fXBhJjUxMiYmKEloPXIpO1U9VS5uZXh0RWZmZWN0fX1jYXRjaChwYil7eT0hMCxEPXBifXkmJihudWxsPT09VT90KFwiMTc4XCIpOnZvaWQgMCxqaChVLEQpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1udWxsIT09ZCYmbnVsbCE9PUloJiYocGE9TWguYmluZChudWxsLGEsZCksSmg9YmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhwYSksS2g9XG5wYSk7RGg9SGg9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIFRlJiZUZShiLnN0YXRlTm9kZSk7cGE9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPWI+cGE/YjpwYTswPT09YiYmKHdoPW51bGwpO2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfWZ1bmN0aW9uIHVoKGEpe251bGw9PT1jaT90KFwiMjQ2XCIpOnZvaWQgMDtjaS5leHBpcmF0aW9uVGltZT0wO2RpfHwoZGk9ITAsZWk9YSl9ZnVuY3Rpb24gdmkoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFd8fHNpKDEwNzM3NDE4MjMsITEpfX1mdW5jdGlvbiB3aShhLGIpe2lmKFomJiFmaSl7Zmk9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Zmk9ITF9fXJldHVybiBhKGIpfVxuZnVuY3Rpb24geGkoYSxiLGMpe2lmKFVoKXJldHVybiBhKGIsYyk7Wnx8V3x8MD09PVZofHwoc2koVmgsITEpLFZoPTApO3ZhciBkPVVoLGU9WjtaPVVoPSEwO3RyeXtyZXR1cm4gYShiLGMpfWZpbmFsbHl7VWg9ZCwoWj1lKXx8V3x8c2koMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09a2QoYykmJjE9PT1jLnRhZz92b2lkIDA6dChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7dChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihMKGgpKXtjPVFlKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUtlO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPW9mKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcbmRnKCk7cWYoZixlKTtlZyhmLGQpO3JldHVybiBkfWZ1bmN0aW9uIEFpKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPWJnKCk7ZT1jZyhmLGUpO3JldHVybiB6aShhLGIsYyxlLGQpfWZ1bmN0aW9uIEJpKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gQ2koYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYixrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbkRiPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2MoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPU1hKGQpO2U/dm9pZCAwOnQoXCI5MFwiKTtXYihkKTtDYyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmVlKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiBEaShhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItYmcoKSs1MDApLzI1fDApKzEpO2I+PUJoJiYoYj1CaC0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1CaD1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9RGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6dChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IEVpO3ppKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcbkRpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbkRpLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDp0KFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP3QoXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7cGkoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07RGkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIEVpKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9RWkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbkVpLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gRmkoYSxiLGMpe2I9WWUoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuRmkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBFaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7QWkoYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtGaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgRWk7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0FpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307RmkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IEVpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtBaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuRmkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IERpKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gR2koYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUpiPXZpO0tiPXhpO0xiPWZ1bmN0aW9uKCl7V3x8MD09PVZofHwoc2koVmgsITEpLFZoPTApfTtcbmZ1bmN0aW9uIEhpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgRmkoYSwhMSxiKX1cbmZ1bmN0aW9uIElpKGEsYixjLGQsZSl7R2koYyk/dm9pZCAwOnQoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1CaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPUhpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUJpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX13aShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gQmkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIEppKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7R2koYik/dm9pZCAwOnQoXCIyMDBcIik7cmV0dXJuIENpKGEsYixudWxsLGMpfVxudmFyIExpPXtjcmVhdGVQb3J0YWw6SmksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj90KFwiMTg4XCIpOnQoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bmQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gSWkobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIElpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/dChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gSWkoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7R2koYSk/XG52b2lkIDA6dChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KHdpKGZ1bmN0aW9uKCl7SWkobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gSmkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOnZpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczp4aSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3QoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIFpoKGEsYil9ZmluYWxseXtaPWMsc2koMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OktpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1aO1o9ITA7dHJ5e1poKGEpfWZpbmFsbHl7KFo9Yil8fFd8fHNpKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbS2EsXG5MYSxNYSxEYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscmEsU2EsZnVuY3Rpb24oYSl7QWEoYSxSYSl9LEhiLEliLEpkLEZhXX19O2Z1bmN0aW9uIEtpKGEsYil7R2koYSk/dm9pZCAwOnQoXCIyOTlcIixcImNyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBGaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1MaS5jcmVhdGVSb290PUtpO0xpLnVuc3RhYmxlX2NyZWF0ZVJvb3Q9dm9pZCAwO1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFdlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOlhiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1uZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpKYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjguMC1hbHBoYS4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7dmFyIE9pPXtkZWZhdWx0OkxpfSxQaT1PaSYmTGl8fE9pO21vZHVsZS5leHBvcnRzPVBpLmRlZmF1bHR8fFBpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xMy4wLWFscGhhLjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgYz1udWxsLGY9ITEsaD0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1jLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1jLGI9Yy5uZXh0O2lmKGM9PT1iKWM9bnVsbDtlbHNle3ZhciBkPWMucHJldmlvdXM7Yz1kLm5leHQ9YjtiLnByZXZpb3VzPWR9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtkPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBlPWgsUT1sO2g9YTtsPWI7dHJ5e3ZhciBnPWQoKX1maW5hbGx5e2g9ZSxsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpaWYoZz17Y2FsbGJhY2s6Zyxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWMpYz1nLm5leHQ9Zy5wcmV2aW91cz1nO2Vsc2V7ZD1udWxsO2E9Yztkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtkPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWMpO251bGw9PT1kP2Q9YzpkPT09YyYmKGM9ZyxwKCkpO2I9ZC5wcmV2aW91cztiLm5leHQ9ZC5wcmV2aW91cz1nO2cubmV4dD1kO2cucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09YyYmMT09PWMucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWM/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZjtmPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09Yzspe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoYy5leHBpcmF0aW9uVGltZTw9ZCl7ZG8gdSgpO3doaWxlKG51bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPD1kKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWMpe2RvIHUoKTt3aGlsZShudWxsIT09YyYmIXcoKSl9fWZpbmFsbHl7bT0hMSxmPWIsbnVsbCE9PWM/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpLGU9ITE7aWYoMD49UC1kKWlmKC0xIT09YiYmYjw9ZCllPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZSl9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGQ9aCxlPWs7aD1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2g9ZCxrPWUsdigpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgZD0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9ZCtiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goaCl7Y2FzZSAxOmI9ZCstMTticmVhaztjYXNlIDI6Yj1kKzI1MDticmVhaztjYXNlIDU6Yj1kKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9ZCsxRTQ7YnJlYWs7ZGVmYXVsdDpiPWQrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpoLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1jKWM9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtkPW51bGw7dmFyIGU9Yztkb3tpZihlLmV4cGlyYXRpb25UaW1lPmIpe2Q9ZTticmVha31lPWUubmV4dH13aGlsZShlIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1hLHAoKSk7XG5iPWQucHJldmlvdXM7Yi5uZXh0PWQucHJldmlvdXM9YTthLm5leHQ9ZDthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSljPW51bGw7ZWxzZXthPT09YyYmKGM9Yik7dmFyIGQ9YS5wcmV2aW91cztkLm5leHQ9YjtiLnByZXZpb3VzPWR9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWg7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGQ9aCxlPWs7aD1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7aD1kLGs9ZSx2KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBofTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hZiYmKG51bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGx8fHcoKSl9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtudWxsIT09YyYmcCgpfTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGN9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiIWZ1bmN0aW9uKCkge1xuICB2YXIgZDMgPSB7XG4gICAgdmVyc2lvbjogXCIzLjUuMTdcIlxuICB9O1xuICB2YXIgZDNfYXJyYXlTbGljZSA9IFtdLnNsaWNlLCBkM19hcnJheSA9IGZ1bmN0aW9uKGxpc3QpIHtcbiAgICByZXR1cm4gZDNfYXJyYXlTbGljZS5jYWxsKGxpc3QpO1xuICB9O1xuICB2YXIgZDNfZG9jdW1lbnQgPSB0aGlzLmRvY3VtZW50O1xuICBmdW5jdGlvbiBkM19kb2N1bWVudEVsZW1lbnQobm9kZSkge1xuICAgIHJldHVybiBub2RlICYmIChub2RlLm93bmVyRG9jdW1lbnQgfHwgbm9kZS5kb2N1bWVudCB8fCBub2RlKS5kb2N1bWVudEVsZW1lbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfd2luZG93KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZSAmJiAobm9kZS5vd25lckRvY3VtZW50ICYmIG5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyB8fCBub2RlLmRvY3VtZW50ICYmIG5vZGUgfHwgbm9kZS5kZWZhdWx0Vmlldyk7XG4gIH1cbiAgaWYgKGQzX2RvY3VtZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIGQzX2FycmF5KGQzX2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jaGlsZE5vZGVzKVswXS5ub2RlVHlwZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBkM19hcnJheSA9IGZ1bmN0aW9uKGxpc3QpIHtcbiAgICAgICAgdmFyIGkgPSBsaXN0Lmxlbmd0aCwgYXJyYXkgPSBuZXcgQXJyYXkoaSk7XG4gICAgICAgIHdoaWxlIChpLS0pIGFycmF5W2ldID0gbGlzdFtpXTtcbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgaWYgKCFEYXRlLm5vdykgRGF0ZS5ub3cgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gK25ldyBEYXRlKCk7XG4gIH07XG4gIGlmIChkM19kb2N1bWVudCkge1xuICAgIHRyeSB7XG4gICAgICBkM19kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiRElWXCIpLnN0eWxlLnNldFByb3BlcnR5KFwib3BhY2l0eVwiLCAwLCBcIlwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdmFyIGQzX2VsZW1lbnRfcHJvdG90eXBlID0gdGhpcy5FbGVtZW50LnByb3RvdHlwZSwgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGUgPSBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGUsIGQzX2VsZW1lbnRfc2V0QXR0cmlidXRlTlMgPSBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGVOUywgZDNfc3R5bGVfcHJvdG90eXBlID0gdGhpcy5DU1NTdHlsZURlY2xhcmF0aW9uLnByb3RvdHlwZSwgZDNfc3R5bGVfc2V0UHJvcGVydHkgPSBkM19zdHlsZV9wcm90b3R5cGUuc2V0UHJvcGVydHk7XG4gICAgICBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgICBkM19lbGVtZW50X3NldEF0dHJpYnV0ZS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlICsgXCJcIik7XG4gICAgICB9O1xuICAgICAgZDNfZWxlbWVudF9wcm90b3R5cGUuc2V0QXR0cmlidXRlTlMgPSBmdW5jdGlvbihzcGFjZSwgbG9jYWwsIHZhbHVlKSB7XG4gICAgICAgIGQzX2VsZW1lbnRfc2V0QXR0cmlidXRlTlMuY2FsbCh0aGlzLCBzcGFjZSwgbG9jYWwsIHZhbHVlICsgXCJcIik7XG4gICAgICB9O1xuICAgICAgZDNfc3R5bGVfcHJvdG90eXBlLnNldFByb3BlcnR5ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgICAgIGQzX3N0eWxlX3NldFByb3BlcnR5LmNhbGwodGhpcywgbmFtZSwgdmFsdWUgKyBcIlwiLCBwcmlvcml0eSk7XG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBkMy5hc2NlbmRpbmcgPSBkM19hc2NlbmRpbmc7XG4gIGZ1bmN0aW9uIGQzX2FzY2VuZGluZyhhLCBiKSB7XG4gICAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xuICB9XG4gIGQzLmRlc2NlbmRpbmcgPSBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGIgPCBhID8gLTEgOiBiID4gYSA/IDEgOiBiID49IGEgPyAwIDogTmFOO1xuICB9O1xuICBkMy5taW4gPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBpID0gLTEsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGI7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsICYmIGEgPiBiKSBhID0gYjtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYSA+IGIpIGEgPSBiO1xuICAgIH1cbiAgICByZXR1cm4gYTtcbiAgfTtcbiAgZDMubWF4ID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBiO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBiID4gYSkgYSA9IGI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGIgPiBhKSBhID0gYjtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG4gIH07XG4gIGQzLmV4dGVudCA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgYiwgYztcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYyA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChhID4gYikgYSA9IGI7XG4gICAgICAgIGlmIChjIDwgYikgYyA9IGI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGMgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCkge1xuICAgICAgICBpZiAoYSA+IGIpIGEgPSBiO1xuICAgICAgICBpZiAoYyA8IGIpIGMgPSBiO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gWyBhLCBjIF07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX251bWJlcih4KSB7XG4gICAgcmV0dXJuIHggPT09IG51bGwgPyBOYU4gOiAreDtcbiAgfVxuICBmdW5jdGlvbiBkM19udW1lcmljKHgpIHtcbiAgICByZXR1cm4gIWlzTmFOKHgpO1xuICB9XG4gIGQzLnN1bSA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIHMgPSAwLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBpID0gLTE7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gK2FycmF5W2ldKSkgcyArPSBhO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9ICtmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkpIHMgKz0gYTtcbiAgICB9XG4gICAgcmV0dXJuIHM7XG4gIH07XG4gIGQzLm1lYW4gPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBzID0gMCwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgaSA9IC0xLCBqID0gbjtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoYXJyYXlbaV0pKSkgcyArPSBhOyBlbHNlIC0tajtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpKSkgcyArPSBhOyBlbHNlIC0tajtcbiAgICB9XG4gICAgaWYgKGopIHJldHVybiBzIC8gajtcbiAgfTtcbiAgZDMucXVhbnRpbGUgPSBmdW5jdGlvbih2YWx1ZXMsIHApIHtcbiAgICB2YXIgSCA9ICh2YWx1ZXMubGVuZ3RoIC0gMSkgKiBwICsgMSwgaCA9IE1hdGguZmxvb3IoSCksIHYgPSArdmFsdWVzW2ggLSAxXSwgZSA9IEggLSBoO1xuICAgIHJldHVybiBlID8gdiArIGUgKiAodmFsdWVzW2hdIC0gdikgOiB2O1xuICB9O1xuICBkMy5tZWRpYW4gPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBudW1iZXJzID0gW10sIG4gPSBhcnJheS5sZW5ndGgsIGEsIGkgPSAtMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoYXJyYXlbaV0pKSkgbnVtYmVycy5wdXNoKGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkpKSBudW1iZXJzLnB1c2goYSk7XG4gICAgfVxuICAgIGlmIChudW1iZXJzLmxlbmd0aCkgcmV0dXJuIGQzLnF1YW50aWxlKG51bWJlcnMuc29ydChkM19hc2NlbmRpbmcpLCAuNSk7XG4gIH07XG4gIGQzLnZhcmlhbmNlID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgbiA9IGFycmF5Lmxlbmd0aCwgbSA9IDAsIGEsIGQsIHMgPSAwLCBpID0gLTEsIGogPSAwO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGFycmF5W2ldKSkpIHtcbiAgICAgICAgICBkID0gYSAtIG07XG4gICAgICAgICAgbSArPSBkIC8gKytqO1xuICAgICAgICAgIHMgKz0gZCAqIChhIC0gbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkpKSB7XG4gICAgICAgICAgZCA9IGEgLSBtO1xuICAgICAgICAgIG0gKz0gZCAvICsrajtcbiAgICAgICAgICBzICs9IGQgKiAoYSAtIG0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChqID4gMSkgcmV0dXJuIHMgLyAoaiAtIDEpO1xuICB9O1xuICBkMy5kZXZpYXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IGQzLnZhcmlhbmNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHYgPyBNYXRoLnNxcnQodikgOiB2O1xuICB9O1xuICBmdW5jdGlvbiBkM19iaXNlY3Rvcihjb21wYXJlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxlZnQ6IGZ1bmN0aW9uKGEsIHgsIGxvLCBoaSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGxvID0gMDtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCA0KSBoaSA9IGEubGVuZ3RoO1xuICAgICAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgICAgIHZhciBtaWQgPSBsbyArIGhpID4+PiAxO1xuICAgICAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPCAwKSBsbyA9IG1pZCArIDE7IGVsc2UgaGkgPSBtaWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxvO1xuICAgICAgfSxcbiAgICAgIHJpZ2h0OiBmdW5jdGlvbihhLCB4LCBsbywgaGkpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBsbyA9IDA7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgNCkgaGkgPSBhLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgICBpZiAoY29tcGFyZShhW21pZF0sIHgpID4gMCkgaGkgPSBtaWQ7IGVsc2UgbG8gPSBtaWQgKyAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsbztcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIHZhciBkM19iaXNlY3QgPSBkM19iaXNlY3RvcihkM19hc2NlbmRpbmcpO1xuICBkMy5iaXNlY3RMZWZ0ID0gZDNfYmlzZWN0LmxlZnQ7XG4gIGQzLmJpc2VjdCA9IGQzLmJpc2VjdFJpZ2h0ID0gZDNfYmlzZWN0LnJpZ2h0O1xuICBkMy5iaXNlY3RvciA9IGZ1bmN0aW9uKGYpIHtcbiAgICByZXR1cm4gZDNfYmlzZWN0b3IoZi5sZW5ndGggPT09IDEgPyBmdW5jdGlvbihkLCB4KSB7XG4gICAgICByZXR1cm4gZDNfYXNjZW5kaW5nKGYoZCksIHgpO1xuICAgIH0gOiBmKTtcbiAgfTtcbiAgZDMuc2h1ZmZsZSA9IGZ1bmN0aW9uKGFycmF5LCBpMCwgaTEpIHtcbiAgICBpZiAoKG0gPSBhcmd1bWVudHMubGVuZ3RoKSA8IDMpIHtcbiAgICAgIGkxID0gYXJyYXkubGVuZ3RoO1xuICAgICAgaWYgKG0gPCAyKSBpMCA9IDA7XG4gICAgfVxuICAgIHZhciBtID0gaTEgLSBpMCwgdCwgaTtcbiAgICB3aGlsZSAobSkge1xuICAgICAgaSA9IE1hdGgucmFuZG9tKCkgKiBtLS0gfCAwO1xuICAgICAgdCA9IGFycmF5W20gKyBpMF0sIGFycmF5W20gKyBpMF0gPSBhcnJheVtpICsgaTBdLCBhcnJheVtpICsgaTBdID0gdDtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xuICB9O1xuICBkMy5wZXJtdXRlID0gZnVuY3Rpb24oYXJyYXksIGluZGV4ZXMpIHtcbiAgICB2YXIgaSA9IGluZGV4ZXMubGVuZ3RoLCBwZXJtdXRlcyA9IG5ldyBBcnJheShpKTtcbiAgICB3aGlsZSAoaS0tKSBwZXJtdXRlc1tpXSA9IGFycmF5W2luZGV4ZXNbaV1dO1xuICAgIHJldHVybiBwZXJtdXRlcztcbiAgfTtcbiAgZDMucGFpcnMgPSBmdW5jdGlvbihhcnJheSkge1xuICAgIHZhciBpID0gMCwgbiA9IGFycmF5Lmxlbmd0aCAtIDEsIHAwLCBwMSA9IGFycmF5WzBdLCBwYWlycyA9IG5ldyBBcnJheShuIDwgMCA/IDAgOiBuKTtcbiAgICB3aGlsZSAoaSA8IG4pIHBhaXJzW2ldID0gWyBwMCA9IHAxLCBwMSA9IGFycmF5WysraV0gXTtcbiAgICByZXR1cm4gcGFpcnM7XG4gIH07XG4gIGQzLnRyYW5zcG9zZSA9IGZ1bmN0aW9uKG1hdHJpeCkge1xuICAgIGlmICghKG4gPSBtYXRyaXgubGVuZ3RoKSkgcmV0dXJuIFtdO1xuICAgIGZvciAodmFyIGkgPSAtMSwgbSA9IGQzLm1pbihtYXRyaXgsIGQzX3RyYW5zcG9zZUxlbmd0aCksIHRyYW5zcG9zZSA9IG5ldyBBcnJheShtKTsgKytpIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBqID0gLTEsIG4sIHJvdyA9IHRyYW5zcG9zZVtpXSA9IG5ldyBBcnJheShuKTsgKytqIDwgbjsgKSB7XG4gICAgICAgIHJvd1tqXSA9IG1hdHJpeFtqXVtpXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zcG9zZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNwb3NlTGVuZ3RoKGQpIHtcbiAgICByZXR1cm4gZC5sZW5ndGg7XG4gIH1cbiAgZDMuemlwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnRyYW5zcG9zZShhcmd1bWVudHMpO1xuICB9O1xuICBkMy5rZXlzID0gZnVuY3Rpb24obWFwKSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWFwKSBrZXlzLnB1c2goa2V5KTtcbiAgICByZXR1cm4ga2V5cztcbiAgfTtcbiAgZDMudmFsdWVzID0gZnVuY3Rpb24obWFwKSB7XG4gICAgdmFyIHZhbHVlcyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBtYXApIHZhbHVlcy5wdXNoKG1hcFtrZXldKTtcbiAgICByZXR1cm4gdmFsdWVzO1xuICB9O1xuICBkMy5lbnRyaWVzID0gZnVuY3Rpb24obWFwKSB7XG4gICAgdmFyIGVudHJpZXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWFwKSBlbnRyaWVzLnB1c2goe1xuICAgICAga2V5OiBrZXksXG4gICAgICB2YWx1ZTogbWFwW2tleV1cbiAgICB9KTtcbiAgICByZXR1cm4gZW50cmllcztcbiAgfTtcbiAgZDMubWVyZ2UgPSBmdW5jdGlvbihhcnJheXMpIHtcbiAgICB2YXIgbiA9IGFycmF5cy5sZW5ndGgsIG0sIGkgPSAtMSwgaiA9IDAsIG1lcmdlZCwgYXJyYXk7XG4gICAgd2hpbGUgKCsraSA8IG4pIGogKz0gYXJyYXlzW2ldLmxlbmd0aDtcbiAgICBtZXJnZWQgPSBuZXcgQXJyYXkoaik7XG4gICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICBhcnJheSA9IGFycmF5c1tuXTtcbiAgICAgIG0gPSBhcnJheS5sZW5ndGg7XG4gICAgICB3aGlsZSAoLS1tID49IDApIHtcbiAgICAgICAgbWVyZ2VkWy0tal0gPSBhcnJheVttXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZDtcbiAgfTtcbiAgdmFyIGFicyA9IE1hdGguYWJzO1xuICBkMy5yYW5nZSA9IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSB7XG4gICAgICBzdGVwID0gMTtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgICBzdG9wID0gc3RhcnQ7XG4gICAgICAgIHN0YXJ0ID0gMDtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKChzdG9wIC0gc3RhcnQpIC8gc3RlcCA9PT0gSW5maW5pdHkpIHRocm93IG5ldyBFcnJvcihcImluZmluaXRlIHJhbmdlXCIpO1xuICAgIHZhciByYW5nZSA9IFtdLCBrID0gZDNfcmFuZ2VfaW50ZWdlclNjYWxlKGFicyhzdGVwKSksIGkgPSAtMSwgajtcbiAgICBzdGFydCAqPSBrLCBzdG9wICo9IGssIHN0ZXAgKj0gaztcbiAgICBpZiAoc3RlcCA8IDApIHdoaWxlICgoaiA9IHN0YXJ0ICsgc3RlcCAqICsraSkgPiBzdG9wKSByYW5nZS5wdXNoKGogLyBrKTsgZWxzZSB3aGlsZSAoKGogPSBzdGFydCArIHN0ZXAgKiArK2kpIDwgc3RvcCkgcmFuZ2UucHVzaChqIC8gayk7XG4gICAgcmV0dXJuIHJhbmdlO1xuICB9O1xuICBmdW5jdGlvbiBkM19yYW5nZV9pbnRlZ2VyU2NhbGUoeCkge1xuICAgIHZhciBrID0gMTtcbiAgICB3aGlsZSAoeCAqIGsgJSAxKSBrICo9IDEwO1xuICAgIHJldHVybiBrO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2NsYXNzKGN0b3IsIHByb3BlcnRpZXMpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gcHJvcGVydGllcykge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGN0b3IucHJvdG90eXBlLCBrZXksIHtcbiAgICAgICAgdmFsdWU6IHByb3BlcnRpZXNba2V5XSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBkMy5tYXAgPSBmdW5jdGlvbihvYmplY3QsIGYpIHtcbiAgICB2YXIgbWFwID0gbmV3IGQzX01hcCgpO1xuICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBkM19NYXApIHtcbiAgICAgIG9iamVjdC5mb3JFYWNoKGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgICAgbWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gb2JqZWN0Lmxlbmd0aCwgbztcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB3aGlsZSAoKytpIDwgbikgbWFwLnNldChpLCBvYmplY3RbaV0pOyBlbHNlIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KGYuY2FsbChvYmplY3QsIG8gPSBvYmplY3RbaV0sIGkpLCBvKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkgbWFwLnNldChrZXksIG9iamVjdFtrZXldKTtcbiAgICB9XG4gICAgcmV0dXJuIG1hcDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfTWFwKCkge1xuICAgIHRoaXMuXyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIH1cbiAgdmFyIGQzX21hcF9wcm90byA9IFwiX19wcm90b19fXCIsIGQzX21hcF96ZXJvID0gXCJcXHgwMFwiO1xuICBkM19jbGFzcyhkM19NYXAsIHtcbiAgICBoYXM6IGQzX21hcF9oYXMsXG4gICAgZ2V0OiBmdW5jdGlvbihrZXkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9bZDNfbWFwX2VzY2FwZShrZXkpXTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuX1tkM19tYXBfZXNjYXBlKGtleSldID0gdmFsdWU7XG4gICAgfSxcbiAgICByZW1vdmU6IGQzX21hcF9yZW1vdmUsXG4gICAga2V5czogZDNfbWFwX2tleXMsXG4gICAgdmFsdWVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIHZhbHVlcy5wdXNoKHRoaXMuX1trZXldKTtcbiAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfSxcbiAgICBlbnRyaWVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSBlbnRyaWVzLnB1c2goe1xuICAgICAgICBrZXk6IGQzX21hcF91bmVzY2FwZShrZXkpLFxuICAgICAgICB2YWx1ZTogdGhpcy5fW2tleV1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGVudHJpZXM7XG4gICAgfSxcbiAgICBzaXplOiBkM19tYXBfc2l6ZSxcbiAgICBlbXB0eTogZDNfbWFwX2VtcHR5LFxuICAgIGZvckVhY2g6IGZ1bmN0aW9uKGYpIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIGYuY2FsbCh0aGlzLCBkM19tYXBfdW5lc2NhcGUoa2V5KSwgdGhpcy5fW2tleV0pO1xuICAgIH1cbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX21hcF9lc2NhcGUoa2V5KSB7XG4gICAgcmV0dXJuIChrZXkgKz0gXCJcIikgPT09IGQzX21hcF9wcm90byB8fCBrZXlbMF0gPT09IGQzX21hcF96ZXJvID8gZDNfbWFwX3plcm8gKyBrZXkgOiBrZXk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX3VuZXNjYXBlKGtleSkge1xuICAgIHJldHVybiAoa2V5ICs9IFwiXCIpWzBdID09PSBkM19tYXBfemVybyA/IGtleS5zbGljZSgxKSA6IGtleTtcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfaGFzKGtleSkge1xuICAgIHJldHVybiBkM19tYXBfZXNjYXBlKGtleSkgaW4gdGhpcy5fO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9yZW1vdmUoa2V5KSB7XG4gICAgcmV0dXJuIChrZXkgPSBkM19tYXBfZXNjYXBlKGtleSkpIGluIHRoaXMuXyAmJiBkZWxldGUgdGhpcy5fW2tleV07XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX2tleXMoKSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSBrZXlzLnB1c2goZDNfbWFwX3VuZXNjYXBlKGtleSkpO1xuICAgIHJldHVybiBrZXlzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9zaXplKCkge1xuICAgIHZhciBzaXplID0gMDtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSArK3NpemU7XG4gICAgcmV0dXJuIHNpemU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX2VtcHR5KCkge1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBkMy5uZXN0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG5lc3QgPSB7fSwga2V5cyA9IFtdLCBzb3J0S2V5cyA9IFtdLCBzb3J0VmFsdWVzLCByb2xsdXA7XG4gICAgZnVuY3Rpb24gbWFwKG1hcFR5cGUsIGFycmF5LCBkZXB0aCkge1xuICAgICAgaWYgKGRlcHRoID49IGtleXMubGVuZ3RoKSByZXR1cm4gcm9sbHVwID8gcm9sbHVwLmNhbGwobmVzdCwgYXJyYXkpIDogc29ydFZhbHVlcyA/IGFycmF5LnNvcnQoc29ydFZhbHVlcykgOiBhcnJheTtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBhcnJheS5sZW5ndGgsIGtleSA9IGtleXNbZGVwdGgrK10sIGtleVZhbHVlLCBvYmplY3QsIHNldHRlciwgdmFsdWVzQnlLZXkgPSBuZXcgZDNfTWFwKCksIHZhbHVlcztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmICh2YWx1ZXMgPSB2YWx1ZXNCeUtleS5nZXQoa2V5VmFsdWUgPSBrZXkob2JqZWN0ID0gYXJyYXlbaV0pKSkge1xuICAgICAgICAgIHZhbHVlcy5wdXNoKG9iamVjdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWVzQnlLZXkuc2V0KGtleVZhbHVlLCBbIG9iamVjdCBdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1hcFR5cGUpIHtcbiAgICAgICAgb2JqZWN0ID0gbWFwVHlwZSgpO1xuICAgICAgICBzZXR0ZXIgPSBmdW5jdGlvbihrZXlWYWx1ZSwgdmFsdWVzKSB7XG4gICAgICAgICAgb2JqZWN0LnNldChrZXlWYWx1ZSwgbWFwKG1hcFR5cGUsIHZhbHVlcywgZGVwdGgpKTtcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9iamVjdCA9IHt9O1xuICAgICAgICBzZXR0ZXIgPSBmdW5jdGlvbihrZXlWYWx1ZSwgdmFsdWVzKSB7XG4gICAgICAgICAgb2JqZWN0W2tleVZhbHVlXSA9IG1hcChtYXBUeXBlLCB2YWx1ZXMsIGRlcHRoKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHZhbHVlc0J5S2V5LmZvckVhY2goc2V0dGVyKTtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGVudHJpZXMobWFwLCBkZXB0aCkge1xuICAgICAgaWYgKGRlcHRoID49IGtleXMubGVuZ3RoKSByZXR1cm4gbWFwO1xuICAgICAgdmFyIGFycmF5ID0gW10sIHNvcnRLZXkgPSBzb3J0S2V5c1tkZXB0aCsrXTtcbiAgICAgIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKGtleSwga2V5TWFwKSB7XG4gICAgICAgIGFycmF5LnB1c2goe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHZhbHVlczogZW50cmllcyhrZXlNYXAsIGRlcHRoKVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHNvcnRLZXkgPyBhcnJheS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHNvcnRLZXkoYS5rZXksIGIua2V5KTtcbiAgICAgIH0pIDogYXJyYXk7XG4gICAgfVxuICAgIG5lc3QubWFwID0gZnVuY3Rpb24oYXJyYXksIG1hcFR5cGUpIHtcbiAgICAgIHJldHVybiBtYXAobWFwVHlwZSwgYXJyYXksIDApO1xuICAgIH07XG4gICAgbmVzdC5lbnRyaWVzID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICAgIHJldHVybiBlbnRyaWVzKG1hcChkMy5tYXAsIGFycmF5LCAwKSwgMCk7XG4gICAgfTtcbiAgICBuZXN0LmtleSA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgIGtleXMucHVzaChkKTtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgbmVzdC5zb3J0S2V5cyA9IGZ1bmN0aW9uKG9yZGVyKSB7XG4gICAgICBzb3J0S2V5c1trZXlzLmxlbmd0aCAtIDFdID0gb3JkZXI7XG4gICAgICByZXR1cm4gbmVzdDtcbiAgICB9O1xuICAgIG5lc3Quc29ydFZhbHVlcyA9IGZ1bmN0aW9uKG9yZGVyKSB7XG4gICAgICBzb3J0VmFsdWVzID0gb3JkZXI7XG4gICAgICByZXR1cm4gbmVzdDtcbiAgICB9O1xuICAgIG5lc3Qucm9sbHVwID0gZnVuY3Rpb24oZikge1xuICAgICAgcm9sbHVwID0gZjtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgcmV0dXJuIG5lc3Q7XG4gIH07XG4gIGQzLnNldCA9IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgdmFyIHNldCA9IG5ldyBkM19TZXQoKTtcbiAgICBpZiAoYXJyYXkpIGZvciAodmFyIGkgPSAwLCBuID0gYXJyYXkubGVuZ3RoOyBpIDwgbjsgKytpKSBzZXQuYWRkKGFycmF5W2ldKTtcbiAgICByZXR1cm4gc2V0O1xuICB9O1xuICBmdW5jdGlvbiBkM19TZXQoKSB7XG4gICAgdGhpcy5fID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgfVxuICBkM19jbGFzcyhkM19TZXQsIHtcbiAgICBoYXM6IGQzX21hcF9oYXMsXG4gICAgYWRkOiBmdW5jdGlvbihrZXkpIHtcbiAgICAgIHRoaXMuX1tkM19tYXBfZXNjYXBlKGtleSArPSBcIlwiKV0gPSB0cnVlO1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9LFxuICAgIHJlbW92ZTogZDNfbWFwX3JlbW92ZSxcbiAgICB2YWx1ZXM6IGQzX21hcF9rZXlzLFxuICAgIHNpemU6IGQzX21hcF9zaXplLFxuICAgIGVtcHR5OiBkM19tYXBfZW1wdHksXG4gICAgZm9yRWFjaDogZnVuY3Rpb24oZikge1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgZi5jYWxsKHRoaXMsIGQzX21hcF91bmVzY2FwZShrZXkpKTtcbiAgICB9XG4gIH0pO1xuICBkMy5iZWhhdmlvciA9IHt9O1xuICBmdW5jdGlvbiBkM19pZGVudGl0eShkKSB7XG4gICAgcmV0dXJuIGQ7XG4gIH1cbiAgZDMucmViaW5kID0gZnVuY3Rpb24odGFyZ2V0LCBzb3VyY2UpIHtcbiAgICB2YXIgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoLCBtZXRob2Q7XG4gICAgd2hpbGUgKCsraSA8IG4pIHRhcmdldFttZXRob2QgPSBhcmd1bWVudHNbaV1dID0gZDNfcmViaW5kKHRhcmdldCwgc291cmNlLCBzb3VyY2VbbWV0aG9kXSk7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmViaW5kKHRhcmdldCwgc291cmNlLCBtZXRob2QpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmFsdWUgPSBtZXRob2QuYXBwbHkoc291cmNlLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIHZhbHVlID09PSBzb3VyY2UgPyB0YXJnZXQgOiB2YWx1ZTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3ZlbmRvclN5bWJvbChvYmplY3QsIG5hbWUpIHtcbiAgICBpZiAobmFtZSBpbiBvYmplY3QpIHJldHVybiBuYW1lO1xuICAgIG5hbWUgPSBuYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSgxKTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGQzX3ZlbmRvclByZWZpeGVzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIHByZWZpeE5hbWUgPSBkM192ZW5kb3JQcmVmaXhlc1tpXSArIG5hbWU7XG4gICAgICBpZiAocHJlZml4TmFtZSBpbiBvYmplY3QpIHJldHVybiBwcmVmaXhOYW1lO1xuICAgIH1cbiAgfVxuICB2YXIgZDNfdmVuZG9yUHJlZml4ZXMgPSBbIFwid2Via2l0XCIsIFwibXNcIiwgXCJtb3pcIiwgXCJNb3pcIiwgXCJvXCIsIFwiT1wiIF07XG4gIGZ1bmN0aW9uIGQzX25vb3AoKSB7fVxuICBkMy5kaXNwYXRjaCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkaXNwYXRjaCA9IG5ldyBkM19kaXNwYXRjaCgpLCBpID0gLTEsIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkaXNwYXRjaFthcmd1bWVudHNbaV1dID0gZDNfZGlzcGF0Y2hfZXZlbnQoZGlzcGF0Y2gpO1xuICAgIHJldHVybiBkaXNwYXRjaDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZGlzcGF0Y2goKSB7fVxuICBkM19kaXNwYXRjaC5wcm90b3R5cGUub24gPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgIHZhciBpID0gdHlwZS5pbmRleE9mKFwiLlwiKSwgbmFtZSA9IFwiXCI7XG4gICAgaWYgKGkgPj0gMCkge1xuICAgICAgbmFtZSA9IHR5cGUuc2xpY2UoaSArIDEpO1xuICAgICAgdHlwZSA9IHR5cGUuc2xpY2UoMCwgaSk7XG4gICAgfVxuICAgIGlmICh0eXBlKSByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB0aGlzW3R5cGVdLm9uKG5hbWUpIDogdGhpc1t0eXBlXS5vbihuYW1lLCBsaXN0ZW5lcik7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICAgIGlmIChsaXN0ZW5lciA9PSBudWxsKSBmb3IgKHR5cGUgaW4gdGhpcykge1xuICAgICAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhpc1t0eXBlXS5vbihuYW1lLCBudWxsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZGlzcGF0Y2hfZXZlbnQoZGlzcGF0Y2gpIHtcbiAgICB2YXIgbGlzdGVuZXJzID0gW10sIGxpc3RlbmVyQnlOYW1lID0gbmV3IGQzX01hcCgpO1xuICAgIGZ1bmN0aW9uIGV2ZW50KCkge1xuICAgICAgdmFyIHogPSBsaXN0ZW5lcnMsIGkgPSAtMSwgbiA9IHoubGVuZ3RoLCBsO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChsID0geltpXS5vbikgbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIGRpc3BhdGNoO1xuICAgIH1cbiAgICBldmVudC5vbiA9IGZ1bmN0aW9uKG5hbWUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbCA9IGxpc3RlbmVyQnlOYW1lLmdldChuYW1lKSwgaTtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIGwgJiYgbC5vbjtcbiAgICAgIGlmIChsKSB7XG4gICAgICAgIGwub24gPSBudWxsO1xuICAgICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuc2xpY2UoMCwgaSA9IGxpc3RlbmVycy5pbmRleE9mKGwpKS5jb25jYXQobGlzdGVuZXJzLnNsaWNlKGkgKyAxKSk7XG4gICAgICAgIGxpc3RlbmVyQnlOYW1lLnJlbW92ZShuYW1lKTtcbiAgICAgIH1cbiAgICAgIGlmIChsaXN0ZW5lcikgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXJCeU5hbWUuc2V0KG5hbWUsIHtcbiAgICAgICAgb246IGxpc3RlbmVyXG4gICAgICB9KSk7XG4gICAgICByZXR1cm4gZGlzcGF0Y2g7XG4gICAgfTtcbiAgICByZXR1cm4gZXZlbnQ7XG4gIH1cbiAgZDMuZXZlbnQgPSBudWxsO1xuICBmdW5jdGlvbiBkM19ldmVudFByZXZlbnREZWZhdWx0KCkge1xuICAgIGQzLmV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZXZlbnRTb3VyY2UoKSB7XG4gICAgdmFyIGUgPSBkMy5ldmVudCwgcztcbiAgICB3aGlsZSAocyA9IGUuc291cmNlRXZlbnQpIGUgPSBzO1xuICAgIHJldHVybiBlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2V2ZW50RGlzcGF0Y2godGFyZ2V0KSB7XG4gICAgdmFyIGRpc3BhdGNoID0gbmV3IGQzX2Rpc3BhdGNoKCksIGkgPSAwLCBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgZGlzcGF0Y2hbYXJndW1lbnRzW2ldXSA9IGQzX2Rpc3BhdGNoX2V2ZW50KGRpc3BhdGNoKTtcbiAgICBkaXNwYXRjaC5vZiA9IGZ1bmN0aW9uKHRoaXosIGFyZ3VtZW50eikge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGUxKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdmFyIGUwID0gZTEuc291cmNlRXZlbnQgPSBkMy5ldmVudDtcbiAgICAgICAgICBlMS50YXJnZXQgPSB0YXJnZXQ7XG4gICAgICAgICAgZDMuZXZlbnQgPSBlMTtcbiAgICAgICAgICBkaXNwYXRjaFtlMS50eXBlXS5hcHBseSh0aGl6LCBhcmd1bWVudHopO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGQzLmV2ZW50ID0gZTA7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfTtcbiAgICByZXR1cm4gZGlzcGF0Y2g7XG4gIH1cbiAgZDMucmVxdW90ZSA9IGZ1bmN0aW9uKHMpIHtcbiAgICByZXR1cm4gcy5yZXBsYWNlKGQzX3JlcXVvdGVfcmUsIFwiXFxcXCQmXCIpO1xuICB9O1xuICB2YXIgZDNfcmVxdW90ZV9yZSA9IC9bXFxcXFxcXlxcJFxcKlxcK1xcP1xcfFxcW1xcXVxcKFxcKVxcLlxce1xcfV0vZztcbiAgdmFyIGQzX3N1YmNsYXNzID0ge30uX19wcm90b19fID8gZnVuY3Rpb24ob2JqZWN0LCBwcm90b3R5cGUpIHtcbiAgICBvYmplY3QuX19wcm90b19fID0gcHJvdG90eXBlO1xuICB9IDogZnVuY3Rpb24ob2JqZWN0LCBwcm90b3R5cGUpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm90b3R5cGUpIG9iamVjdFtwcm9wZXJ0eV0gPSBwcm90b3R5cGVbcHJvcGVydHldO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb24oZ3JvdXBzKSB7XG4gICAgZDNfc3ViY2xhc3MoZ3JvdXBzLCBkM19zZWxlY3Rpb25Qcm90b3R5cGUpO1xuICAgIHJldHVybiBncm91cHM7XG4gIH1cbiAgdmFyIGQzX3NlbGVjdCA9IGZ1bmN0aW9uKHMsIG4pIHtcbiAgICByZXR1cm4gbi5xdWVyeVNlbGVjdG9yKHMpO1xuICB9LCBkM19zZWxlY3RBbGwgPSBmdW5jdGlvbihzLCBuKSB7XG4gICAgcmV0dXJuIG4ucXVlcnlTZWxlY3RvckFsbChzKTtcbiAgfSwgZDNfc2VsZWN0TWF0Y2hlcyA9IGZ1bmN0aW9uKG4sIHMpIHtcbiAgICB2YXIgZDNfc2VsZWN0TWF0Y2hlciA9IG4ubWF0Y2hlcyB8fCBuW2QzX3ZlbmRvclN5bWJvbChuLCBcIm1hdGNoZXNTZWxlY3RvclwiKV07XG4gICAgZDNfc2VsZWN0TWF0Y2hlcyA9IGZ1bmN0aW9uKG4sIHMpIHtcbiAgICAgIHJldHVybiBkM19zZWxlY3RNYXRjaGVyLmNhbGwobiwgcyk7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfc2VsZWN0TWF0Y2hlcyhuLCBzKTtcbiAgfTtcbiAgaWYgKHR5cGVvZiBTaXp6bGUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGQzX3NlbGVjdCA9IGZ1bmN0aW9uKHMsIG4pIHtcbiAgICAgIHJldHVybiBTaXp6bGUocywgbilbMF0gfHwgbnVsbDtcbiAgICB9O1xuICAgIGQzX3NlbGVjdEFsbCA9IFNpenpsZTtcbiAgICBkM19zZWxlY3RNYXRjaGVzID0gU2l6emxlLm1hdGNoZXNTZWxlY3RvcjtcbiAgfVxuICBkMy5zZWxlY3Rpb24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2VsZWN0KGQzX2RvY3VtZW50LmRvY3VtZW50RWxlbWVudCk7XG4gIH07XG4gIHZhciBkM19zZWxlY3Rpb25Qcm90b3R5cGUgPSBkMy5zZWxlY3Rpb24ucHJvdG90eXBlID0gW107XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGUsIGdyb3VwLCBub2RlO1xuICAgIHNlbGVjdG9yID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSAoZ3JvdXAgPSB0aGlzW2pdKS5wYXJlbnROb2RlO1xuICAgICAgZm9yICh2YXIgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2goc3Vibm9kZSA9IHNlbGVjdG9yLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpO1xuICAgICAgICAgIGlmIChzdWJub2RlICYmIFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3NlbGVjdG9yKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiID8gc2VsZWN0b3IgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zZWxlY3Qoc2VsZWN0b3IsIHRoaXMpO1xuICAgIH07XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNlbGVjdEFsbCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gICAgdmFyIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgbm9kZTtcbiAgICBzZWxlY3RvciA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBkM19hcnJheShzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSk7XG4gICAgICAgICAgc3ViZ3JvdXAucGFyZW50Tm9kZSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihzdWJncm91cHMpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fc2VsZWN0b3JBbGwoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgPyBzZWxlY3RvciA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NlbGVjdEFsbChzZWxlY3RvciwgdGhpcyk7XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfbnNYaHRtbCA9IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiO1xuICB2YXIgZDNfbnNQcmVmaXggPSB7XG4gICAgc3ZnOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgeGh0bWw6IGQzX25zWGh0bWwsXG4gICAgeGxpbms6IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFxuICAgIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIixcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zL1wiXG4gIH07XG4gIGQzLm5zID0ge1xuICAgIHByZWZpeDogZDNfbnNQcmVmaXgsXG4gICAgcXVhbGlmeTogZnVuY3Rpb24obmFtZSkge1xuICAgICAgdmFyIGkgPSBuYW1lLmluZGV4T2YoXCI6XCIpLCBwcmVmaXggPSBuYW1lO1xuICAgICAgaWYgKGkgPj0gMCAmJiAocHJlZml4ID0gbmFtZS5zbGljZSgwLCBpKSkgIT09IFwieG1sbnNcIikgbmFtZSA9IG5hbWUuc2xpY2UoaSArIDEpO1xuICAgICAgcmV0dXJuIGQzX25zUHJlZml4Lmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7XG4gICAgICAgIHNwYWNlOiBkM19uc1ByZWZpeFtwcmVmaXhdLFxuICAgICAgICBsb2NhbDogbmFtZVxuICAgICAgfSA6IG5hbWU7XG4gICAgfVxuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuYXR0ciA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICAgICAgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZSk7XG4gICAgICAgIHJldHVybiBuYW1lLmxvY2FsID8gbm9kZS5nZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKSA6IG5vZGUuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgICAgfVxuICAgICAgZm9yICh2YWx1ZSBpbiBuYW1lKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2F0dHIodmFsdWUsIG5hbWVbdmFsdWVdKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fYXR0cihuYW1lLCB2YWx1ZSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fYXR0cihuYW1lLCB2YWx1ZSkge1xuICAgIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWUpO1xuICAgIGZ1bmN0aW9uIGF0dHJOdWxsKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJOdWxsTlMoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyQ29uc3RhbnQoKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCB2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJGdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpOyBlbHNlIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyRnVuY3Rpb25OUygpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7IGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCB4KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBuYW1lLmxvY2FsID8gYXR0ck51bGxOUyA6IGF0dHJOdWxsIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24gOiBuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfY29sbGFwc2Uocykge1xuICAgIHJldHVybiBzLnRyaW0oKS5yZXBsYWNlKC9cXHMrL2csIFwiIFwiKTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2xhc3NlZCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKSwgbiA9IChuYW1lID0gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkpLmxlbmd0aCwgaSA9IC0xO1xuICAgICAgICBpZiAodmFsdWUgPSBub2RlLmNsYXNzTGlzdCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIXZhbHVlLmNvbnRhaW5zKG5hbWVbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgPSBub2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpO1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIWQzX3NlbGVjdGlvbl9jbGFzc2VkUmUobmFtZVtpXSkudGVzdCh2YWx1ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFsdWUgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9jbGFzc2VkKHZhbHVlLCBuYW1lW3ZhbHVlXSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2NsYXNzZWQobmFtZSwgdmFsdWUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWRSZShuYW1lKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCIoPzpefFxcXFxzKylcIiArIGQzLnJlcXVvdGUobmFtZSkgKyBcIig/OlxcXFxzK3wkKVwiLCBcImdcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkge1xuICAgIHJldHVybiAobmFtZSArIFwiXCIpLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWQobmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkubWFwKGQzX3NlbGVjdGlvbl9jbGFzc2VkTmFtZSk7XG4gICAgdmFyIG4gPSBuYW1lLmxlbmd0aDtcbiAgICBmdW5jdGlvbiBjbGFzc2VkQ29uc3RhbnQoKSB7XG4gICAgICB2YXIgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIG5hbWVbaV0odGhpcywgdmFsdWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGFzc2VkRnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSA9IC0xLCB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBuYW1lW2ldKHRoaXMsIHgpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBjbGFzc2VkRnVuY3Rpb24gOiBjbGFzc2VkQ29uc3RhbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWROYW1lKG5hbWUpIHtcbiAgICB2YXIgcmUgPSBkM19zZWxlY3Rpb25fY2xhc3NlZFJlKG5hbWUpO1xuICAgIHJldHVybiBmdW5jdGlvbihub2RlLCB2YWx1ZSkge1xuICAgICAgaWYgKGMgPSBub2RlLmNsYXNzTGlzdCkgcmV0dXJuIHZhbHVlID8gYy5hZGQobmFtZSkgOiBjLnJlbW92ZShuYW1lKTtcbiAgICAgIHZhciBjID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJlLmxhc3RJbmRleCA9IDA7XG4gICAgICAgIGlmICghcmUudGVzdChjKSkgbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBkM19jb2xsYXBzZShjICsgXCIgXCIgKyBuYW1lKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGQzX2NvbGxhcHNlKGMucmVwbGFjZShyZSwgXCIgXCIpKSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc3R5bGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAzKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKG4gPCAyKSB2YWx1ZSA9IFwiXCI7XG4gICAgICAgIGZvciAocHJpb3JpdHkgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9zdHlsZShwcmlvcml0eSwgbmFtZVtwcmlvcml0eV0sIHZhbHVlKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKG4gPCAyKSB7XG4gICAgICAgIHZhciBub2RlID0gdGhpcy5ub2RlKCk7XG4gICAgICAgIHJldHVybiBkM193aW5kb3cobm9kZSkuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xuICAgICAgfVxuICAgICAgcHJpb3JpdHkgPSBcIlwiO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9zdHlsZShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3N0eWxlKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICAgIGZ1bmN0aW9uIHN0eWxlTnVsbCgpIHtcbiAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQoKSB7XG4gICAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHZhbHVlLCBwcmlvcml0eSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24oKSB7XG4gICAgICB2YXIgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoeCA9PSBudWxsKSB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpOyBlbHNlIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgeCwgcHJpb3JpdHkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHN0eWxlTnVsbCA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gc3R5bGVGdW5jdGlvbiA6IHN0eWxlQ29uc3RhbnQ7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnByb3BlcnR5ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIHRoaXMubm9kZSgpW25hbWVdO1xuICAgICAgZm9yICh2YWx1ZSBpbiBuYW1lKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX3Byb3BlcnR5KHZhbHVlLCBuYW1lW3ZhbHVlXSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX3Byb3BlcnR5KG5hbWUsIHZhbHVlKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9wcm9wZXJ0eShuYW1lLCB2YWx1ZSkge1xuICAgIGZ1bmN0aW9uIHByb3BlcnR5TnVsbCgpIHtcbiAgICAgIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwcm9wZXJ0eUNvbnN0YW50KCkge1xuICAgICAgdGhpc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwcm9wZXJ0eUZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHggPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKHggPT0gbnVsbCkgZGVsZXRlIHRoaXNbbmFtZV07IGVsc2UgdGhpc1tuYW1lXSA9IHg7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA9PSBudWxsID8gcHJvcGVydHlOdWxsIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBwcm9wZXJ0eUZ1bmN0aW9uIDogcHJvcGVydHlDb25zdGFudDtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2godHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgICB9IDogdmFsdWUgPT0gbnVsbCA/IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgfSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgIH0pIDogdGhpcy5ub2RlKCkudGV4dENvbnRlbnQ7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5odG1sID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMuZWFjaCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgdGhpcy5pbm5lckhUTUwgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgICB9IDogdmFsdWUgPT0gbnVsbCA/IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5pbm5lckhUTUwgPSBcIlwiO1xuICAgIH0gOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuaW5uZXJIVE1MID0gdmFsdWU7XG4gICAgfSkgOiB0aGlzLm5vZGUoKS5pbm5lckhUTUw7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgbmFtZSA9IGQzX3NlbGVjdGlvbl9jcmVhdG9yKG5hbWUpO1xuICAgIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmFwcGVuZENoaWxkKG5hbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgfSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9jcmVhdG9yKG5hbWUpIHtcbiAgICBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLm93bmVyRG9jdW1lbnQsIG5hbWVzcGFjZSA9IHRoaXMubmFtZXNwYWNlVVJJO1xuICAgICAgcmV0dXJuIG5hbWVzcGFjZSA9PT0gZDNfbnNYaHRtbCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubmFtZXNwYWNlVVJJID09PSBkM19uc1hodG1sID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKSA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuYW1lc3BhY2UsIG5hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGVOUygpIHtcbiAgICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiAobmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZSkpLmxvY2FsID8gY3JlYXRlTlMgOiBjcmVhdGU7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICAgIG5hbWUgPSBkM19zZWxlY3Rpb25fY3JlYXRvcihuYW1lKTtcbiAgICBiZWZvcmUgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3IoYmVmb3JlKTtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUobmFtZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBiZWZvcmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCBudWxsKTtcbiAgICB9KTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uUmVtb3ZlKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uUmVtb3ZlKCkge1xuICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5kYXRhID0gZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgIHZhciBpID0gLTEsIG4gPSB0aGlzLmxlbmd0aCwgZ3JvdXAsIG5vZGU7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICB2YWx1ZSA9IG5ldyBBcnJheShuID0gKGdyb3VwID0gdGhpc1swXSkubGVuZ3RoKTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICB2YWx1ZVtpXSA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYmluZChncm91cCwgZ3JvdXBEYXRhKSB7XG4gICAgICB2YXIgaSwgbiA9IGdyb3VwLmxlbmd0aCwgbSA9IGdyb3VwRGF0YS5sZW5ndGgsIG4wID0gTWF0aC5taW4obiwgbSksIHVwZGF0ZU5vZGVzID0gbmV3IEFycmF5KG0pLCBlbnRlck5vZGVzID0gbmV3IEFycmF5KG0pLCBleGl0Tm9kZXMgPSBuZXcgQXJyYXkobiksIG5vZGUsIG5vZGVEYXRhO1xuICAgICAgaWYgKGtleSkge1xuICAgICAgICB2YXIgbm9kZUJ5S2V5VmFsdWUgPSBuZXcgZDNfTWFwKCksIGtleVZhbHVlcyA9IG5ldyBBcnJheShuKSwga2V5VmFsdWU7XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBuOyApIHtcbiAgICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgICBpZiAobm9kZUJ5S2V5VmFsdWUuaGFzKGtleVZhbHVlID0ga2V5LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSkpKSB7XG4gICAgICAgICAgICAgIGV4aXROb2Rlc1tpXSA9IG5vZGU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBub2RlQnlLZXlWYWx1ZS5zZXQoa2V5VmFsdWUsIG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAga2V5VmFsdWVzW2ldID0ga2V5VmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBtOyApIHtcbiAgICAgICAgICBpZiAoIShub2RlID0gbm9kZUJ5S2V5VmFsdWUuZ2V0KGtleVZhbHVlID0ga2V5LmNhbGwoZ3JvdXBEYXRhLCBub2RlRGF0YSA9IGdyb3VwRGF0YVtpXSwgaSkpKSkge1xuICAgICAgICAgICAgZW50ZXJOb2Rlc1tpXSA9IGQzX3NlbGVjdGlvbl9kYXRhTm9kZShub2RlRGF0YSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChub2RlICE9PSB0cnVlKSB7XG4gICAgICAgICAgICB1cGRhdGVOb2Rlc1tpXSA9IG5vZGU7XG4gICAgICAgICAgICBub2RlLl9fZGF0YV9fID0gbm9kZURhdGE7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5vZGVCeUtleVZhbHVlLnNldChrZXlWYWx1ZSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG47ICkge1xuICAgICAgICAgIGlmIChpIGluIGtleVZhbHVlcyAmJiBub2RlQnlLZXlWYWx1ZS5nZXQoa2V5VmFsdWVzW2ldKSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgZXhpdE5vZGVzW2ldID0gZ3JvdXBbaV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGkgPSAtMTsgKytpIDwgbjA7ICkge1xuICAgICAgICAgIG5vZGUgPSBncm91cFtpXTtcbiAgICAgICAgICBub2RlRGF0YSA9IGdyb3VwRGF0YVtpXTtcbiAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgbm9kZS5fX2RhdGFfXyA9IG5vZGVEYXRhO1xuICAgICAgICAgICAgdXBkYXRlTm9kZXNbaV0gPSBub2RlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBlbnRlck5vZGVzW2ldID0gZDNfc2VsZWN0aW9uX2RhdGFOb2RlKG5vZGVEYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICg7aSA8IG07ICsraSkge1xuICAgICAgICAgIGVudGVyTm9kZXNbaV0gPSBkM19zZWxlY3Rpb25fZGF0YU5vZGUoZ3JvdXBEYXRhW2ldKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKDtpIDwgbjsgKytpKSB7XG4gICAgICAgICAgZXhpdE5vZGVzW2ldID0gZ3JvdXBbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVudGVyTm9kZXMudXBkYXRlID0gdXBkYXRlTm9kZXM7XG4gICAgICBlbnRlck5vZGVzLnBhcmVudE5vZGUgPSB1cGRhdGVOb2Rlcy5wYXJlbnROb2RlID0gZXhpdE5vZGVzLnBhcmVudE5vZGUgPSBncm91cC5wYXJlbnROb2RlO1xuICAgICAgZW50ZXIucHVzaChlbnRlck5vZGVzKTtcbiAgICAgIHVwZGF0ZS5wdXNoKHVwZGF0ZU5vZGVzKTtcbiAgICAgIGV4aXQucHVzaChleGl0Tm9kZXMpO1xuICAgIH1cbiAgICB2YXIgZW50ZXIgPSBkM19zZWxlY3Rpb25fZW50ZXIoW10pLCB1cGRhdGUgPSBkM19zZWxlY3Rpb24oW10pLCBleGl0ID0gZDNfc2VsZWN0aW9uKFtdKTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGJpbmQoZ3JvdXAgPSB0aGlzW2ldLCB2YWx1ZS5jYWxsKGdyb3VwLCBncm91cC5wYXJlbnROb2RlLl9fZGF0YV9fLCBpKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGJpbmQoZ3JvdXAgPSB0aGlzW2ldLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZS5lbnRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGVudGVyO1xuICAgIH07XG4gICAgdXBkYXRlLmV4aXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBleGl0O1xuICAgIH07XG4gICAgcmV0dXJuIHVwZGF0ZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2RhdGFOb2RlKGRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgX19kYXRhX186IGRhdGFcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5kYXR1bSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLnByb3BlcnR5KFwiX19kYXRhX19cIiwgdmFsdWUpIDogdGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIpO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24oZmlsdGVyKSB7XG4gICAgdmFyIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgZ3JvdXAsIG5vZGU7XG4gICAgaWYgKHR5cGVvZiBmaWx0ZXIgIT09IFwiZnVuY3Rpb25cIikgZmlsdGVyID0gZDNfc2VsZWN0aW9uX2ZpbHRlcihmaWx0ZXIpO1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gdGhpcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgc3ViZ3JvdXAucGFyZW50Tm9kZSA9IChncm91cCA9IHRoaXNbal0pLnBhcmVudE5vZGU7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgZmlsdGVyLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2ZpbHRlcihzZWxlY3Rvcikge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zZWxlY3RNYXRjaGVzKHRoaXMsIHNlbGVjdG9yKTtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5vcmRlciA9IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IGdyb3VwLmxlbmd0aCAtIDEsIG5leHQgPSBncm91cFtpXSwgbm9kZTsgLS1pID49IDA7ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgaWYgKG5leHQgJiYgbmV4dCAhPT0gbm9kZS5uZXh0U2libGluZykgbmV4dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBuZXh0KTtcbiAgICAgICAgICBuZXh0ID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNvcnQgPSBmdW5jdGlvbihjb21wYXJhdG9yKSB7XG4gICAgY29tcGFyYXRvciA9IGQzX3NlbGVjdGlvbl9zb3J0Q29tcGFyYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHRoaXNbal0uc29ydChjb21wYXJhdG9yKTtcbiAgICByZXR1cm4gdGhpcy5vcmRlcigpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fc29ydENvbXBhcmF0b3IoY29tcGFyYXRvcikge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgY29tcGFyYXRvciA9IGQzX2FzY2VuZGluZztcbiAgICByZXR1cm4gZnVuY3Rpb24oYSwgYikge1xuICAgICAgcmV0dXJuIGEgJiYgYiA/IGNvbXBhcmF0b3IoYS5fX2RhdGFfXywgYi5fX2RhdGFfXykgOiAhYSAtICFiO1xuICAgIH07XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmVhY2ggPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBjYWxsYmFjay5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgIH0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZWFjaChncm91cHMsIGNhbGxiYWNrKSB7XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSBncm91cHMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkgY2FsbGJhY2sobm9kZSwgaSwgaik7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBncm91cHM7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmNhbGwgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHZhciBhcmdzID0gZDNfYXJyYXkoYXJndW1lbnRzKTtcbiAgICBjYWxsYmFjay5hcHBseShhcmdzWzBdID0gdGhpcywgYXJncyk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5lbXB0eSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAhdGhpcy5ub2RlKCk7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5ub2RlID0gZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICB2YXIgbm9kZSA9IGdyb3VwW2ldO1xuICAgICAgICBpZiAobm9kZSkgcmV0dXJuIG5vZGU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBuID0gMDtcbiAgICBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCBmdW5jdGlvbigpIHtcbiAgICAgICsrbjtcbiAgICB9KTtcbiAgICByZXR1cm4gbjtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2VudGVyKHNlbGVjdGlvbikge1xuICAgIGQzX3N1YmNsYXNzKHNlbGVjdGlvbiwgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlKTtcbiAgICByZXR1cm4gc2VsZWN0aW9uO1xuICB9XG4gIHZhciBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUgPSBbXTtcbiAgZDMuc2VsZWN0aW9uLmVudGVyID0gZDNfc2VsZWN0aW9uX2VudGVyO1xuICBkMy5zZWxlY3Rpb24uZW50ZXIucHJvdG90eXBlID0gZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuYXBwZW5kID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmFwcGVuZDtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLmVtcHR5ID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmVtcHR5O1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUubm9kZSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5ub2RlO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuY2FsbCA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5jYWxsO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuc2l6ZSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5zaXplO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBzdWJub2RlLCB1cGdyb3VwLCBncm91cCwgbm9kZTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICB1cGdyb3VwID0gKGdyb3VwID0gdGhpc1tqXSkudXBkYXRlO1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBzdWJncm91cC5wYXJlbnROb2RlID0gZ3JvdXAucGFyZW50Tm9kZTtcbiAgICAgIGZvciAodmFyIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKHVwZ3JvdXBbaV0gPSBzdWJub2RlID0gc2VsZWN0b3IuY2FsbChncm91cC5wYXJlbnROb2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSk7XG4gICAgICAgICAgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbihuYW1lLCBiZWZvcmUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIGJlZm9yZSA9IGQzX3NlbGVjdGlvbl9lbnRlckluc2VydEJlZm9yZSh0aGlzKTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmluc2VydC5jYWxsKHRoaXMsIG5hbWUsIGJlZm9yZSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9lbnRlckluc2VydEJlZm9yZShlbnRlcikge1xuICAgIHZhciBpMCwgajA7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGQsIGksIGopIHtcbiAgICAgIHZhciBncm91cCA9IGVudGVyW2pdLnVwZGF0ZSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZTtcbiAgICAgIGlmIChqICE9IGowKSBqMCA9IGosIGkwID0gMDtcbiAgICAgIGlmIChpID49IGkwKSBpMCA9IGkgKyAxO1xuICAgICAgd2hpbGUgKCEobm9kZSA9IGdyb3VwW2kwXSkgJiYgKytpMCA8IG4pIDtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gIH1cbiAgZDMuc2VsZWN0ID0gZnVuY3Rpb24obm9kZSkge1xuICAgIHZhciBncm91cDtcbiAgICBpZiAodHlwZW9mIG5vZGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIGdyb3VwID0gWyBkM19zZWxlY3Qobm9kZSwgZDNfZG9jdW1lbnQpIF07XG4gICAgICBncm91cC5wYXJlbnROb2RlID0gZDNfZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICBncm91cCA9IFsgbm9kZSBdO1xuICAgICAgZ3JvdXAucGFyZW50Tm9kZSA9IGQzX2RvY3VtZW50RWxlbWVudChub2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihbIGdyb3VwIF0pO1xuICB9O1xuICBkMy5zZWxlY3RBbGwgPSBmdW5jdGlvbihub2Rlcykge1xuICAgIHZhciBncm91cDtcbiAgICBpZiAodHlwZW9mIG5vZGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBncm91cCA9IGQzX2FycmF5KGQzX3NlbGVjdEFsbChub2RlcywgZDNfZG9jdW1lbnQpKTtcbiAgICAgIGdyb3VwLnBhcmVudE5vZGUgPSBkM19kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwID0gZDNfYXJyYXkobm9kZXMpO1xuICAgICAgZ3JvdXAucGFyZW50Tm9kZSA9IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oWyBncm91cCBdKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLm9uID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIsIGNhcHR1cmUpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAzKSB7XG4gICAgICBpZiAodHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKG4gPCAyKSBsaXN0ZW5lciA9IGZhbHNlO1xuICAgICAgICBmb3IgKGNhcHR1cmUgaW4gdHlwZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9vbihjYXB0dXJlLCB0eXBlW2NhcHR1cmVdLCBsaXN0ZW5lcikpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGlmIChuIDwgMikgcmV0dXJuIChuID0gdGhpcy5ub2RlKClbXCJfX29uXCIgKyB0eXBlXSkgJiYgbi5fO1xuICAgICAgY2FwdHVyZSA9IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9vbih0eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fb24odHlwZSwgbGlzdGVuZXIsIGNhcHR1cmUpIHtcbiAgICB2YXIgbmFtZSA9IFwiX19vblwiICsgdHlwZSwgaSA9IHR5cGUuaW5kZXhPZihcIi5cIiksIHdyYXAgPSBkM19zZWxlY3Rpb25fb25MaXN0ZW5lcjtcbiAgICBpZiAoaSA+IDApIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpO1xuICAgIHZhciBmaWx0ZXIgPSBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLmdldCh0eXBlKTtcbiAgICBpZiAoZmlsdGVyKSB0eXBlID0gZmlsdGVyLCB3cmFwID0gZDNfc2VsZWN0aW9uX29uRmlsdGVyO1xuICAgIGZ1bmN0aW9uIG9uUmVtb3ZlKCkge1xuICAgICAgdmFyIGwgPSB0aGlzW25hbWVdO1xuICAgICAgaWYgKGwpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGwsIGwuJCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvbkFkZCgpIHtcbiAgICAgIHZhciBsID0gd3JhcChsaXN0ZW5lciwgZDNfYXJyYXkoYXJndW1lbnRzKSk7XG4gICAgICBvblJlbW92ZS5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIHRoaXNbbmFtZV0gPSBsLCBsLiQgPSBjYXB0dXJlKTtcbiAgICAgIGwuXyA9IGxpc3RlbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGwoKSB7XG4gICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKFwiXl9fb24oW14uXSspXCIgKyBkMy5yZXF1b3RlKHR5cGUpICsgXCIkXCIpLCBtYXRjaDtcbiAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICBpZiAobWF0Y2ggPSBuYW1lLm1hdGNoKHJlKSkge1xuICAgICAgICAgIHZhciBsID0gdGhpc1tuYW1lXTtcbiAgICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIobWF0Y2hbMV0sIGwsIGwuJCk7XG4gICAgICAgICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGkgPyBsaXN0ZW5lciA/IG9uQWRkIDogb25SZW1vdmUgOiBsaXN0ZW5lciA/IGQzX25vb3AgOiByZW1vdmVBbGw7XG4gIH1cbiAgdmFyIGQzX3NlbGVjdGlvbl9vbkZpbHRlcnMgPSBkMy5tYXAoe1xuICAgIG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG4gICAgbW91c2VsZWF2ZTogXCJtb3VzZW91dFwiXG4gIH0pO1xuICBpZiAoZDNfZG9jdW1lbnQpIHtcbiAgICBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLmZvckVhY2goZnVuY3Rpb24oaykge1xuICAgICAgaWYgKFwib25cIiArIGsgaW4gZDNfZG9jdW1lbnQpIGQzX3NlbGVjdGlvbl9vbkZpbHRlcnMucmVtb3ZlKGspO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyKGxpc3RlbmVyLCBhcmd1bWVudHopIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIG8gPSBkMy5ldmVudDtcbiAgICAgIGQzLmV2ZW50ID0gZTtcbiAgICAgIGFyZ3VtZW50elswXSA9IHRoaXMuX19kYXRhX187XG4gICAgICB0cnkge1xuICAgICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHopO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDMuZXZlbnQgPSBvO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX29uRmlsdGVyKGxpc3RlbmVyLCBhcmd1bWVudHopIHtcbiAgICB2YXIgbCA9IGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyKGxpc3RlbmVyLCBhcmd1bWVudHopO1xuICAgIHJldHVybiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gdGhpcywgcmVsYXRlZCA9IGUucmVsYXRlZFRhcmdldDtcbiAgICAgIGlmICghcmVsYXRlZCB8fCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIShyZWxhdGVkLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHRhcmdldCkgJiA4KSkge1xuICAgICAgICBsLmNhbGwodGFyZ2V0LCBlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIHZhciBkM19ldmVudF9kcmFnU2VsZWN0LCBkM19ldmVudF9kcmFnSWQgPSAwO1xuICBmdW5jdGlvbiBkM19ldmVudF9kcmFnU3VwcHJlc3Mobm9kZSkge1xuICAgIHZhciBuYW1lID0gXCIuZHJhZ3N1cHByZXNzLVwiICsgKytkM19ldmVudF9kcmFnSWQsIGNsaWNrID0gXCJjbGlja1wiICsgbmFtZSwgdyA9IGQzLnNlbGVjdChkM193aW5kb3cobm9kZSkpLm9uKFwidG91Y2htb3ZlXCIgKyBuYW1lLCBkM19ldmVudFByZXZlbnREZWZhdWx0KS5vbihcImRyYWdzdGFydFwiICsgbmFtZSwgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCkub24oXCJzZWxlY3RzdGFydFwiICsgbmFtZSwgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCk7XG4gICAgaWYgKGQzX2V2ZW50X2RyYWdTZWxlY3QgPT0gbnVsbCkge1xuICAgICAgZDNfZXZlbnRfZHJhZ1NlbGVjdCA9IFwib25zZWxlY3RzdGFydFwiIGluIG5vZGUgPyBmYWxzZSA6IGQzX3ZlbmRvclN5bWJvbChub2RlLnN0eWxlLCBcInVzZXJTZWxlY3RcIik7XG4gICAgfVxuICAgIGlmIChkM19ldmVudF9kcmFnU2VsZWN0KSB7XG4gICAgICB2YXIgc3R5bGUgPSBkM19kb2N1bWVudEVsZW1lbnQobm9kZSkuc3R5bGUsIHNlbGVjdCA9IHN0eWxlW2QzX2V2ZW50X2RyYWdTZWxlY3RdO1xuICAgICAgc3R5bGVbZDNfZXZlbnRfZHJhZ1NlbGVjdF0gPSBcIm5vbmVcIjtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHN1cHByZXNzQ2xpY2spIHtcbiAgICAgIHcub24obmFtZSwgbnVsbCk7XG4gICAgICBpZiAoZDNfZXZlbnRfZHJhZ1NlbGVjdCkgc3R5bGVbZDNfZXZlbnRfZHJhZ1NlbGVjdF0gPSBzZWxlY3Q7XG4gICAgICBpZiAoc3VwcHJlc3NDbGljaykge1xuICAgICAgICB2YXIgb2ZmID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdy5vbihjbGljaywgbnVsbCk7XG4gICAgICAgIH07XG4gICAgICAgIHcub24oY2xpY2ssIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBvZmYoKTtcbiAgICAgICAgfSwgdHJ1ZSk7XG4gICAgICAgIHNldFRpbWVvdXQob2ZmLCAwKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzLm1vdXNlID0gZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgcmV0dXJuIGQzX21vdXNlUG9pbnQoY29udGFpbmVyLCBkM19ldmVudFNvdXJjZSgpKTtcbiAgfTtcbiAgdmFyIGQzX21vdXNlX2J1ZzQ0MDgzID0gdGhpcy5uYXZpZ2F0b3IgJiYgL1dlYktpdC8udGVzdCh0aGlzLm5hdmlnYXRvci51c2VyQWdlbnQpID8gLTEgOiAwO1xuICBmdW5jdGlvbiBkM19tb3VzZVBvaW50KGNvbnRhaW5lciwgZSkge1xuICAgIGlmIChlLmNoYW5nZWRUb3VjaGVzKSBlID0gZS5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgICB2YXIgc3ZnID0gY29udGFpbmVyLm93bmVyU1ZHRWxlbWVudCB8fCBjb250YWluZXI7XG4gICAgaWYgKHN2Zy5jcmVhdGVTVkdQb2ludCkge1xuICAgICAgdmFyIHBvaW50ID0gc3ZnLmNyZWF0ZVNWR1BvaW50KCk7XG4gICAgICBpZiAoZDNfbW91c2VfYnVnNDQwODMgPCAwKSB7XG4gICAgICAgIHZhciB3aW5kb3cgPSBkM193aW5kb3coY29udGFpbmVyKTtcbiAgICAgICAgaWYgKHdpbmRvdy5zY3JvbGxYIHx8IHdpbmRvdy5zY3JvbGxZKSB7XG4gICAgICAgICAgc3ZnID0gZDMuc2VsZWN0KFwiYm9keVwiKS5hcHBlbmQoXCJzdmdcIikuc3R5bGUoe1xuICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICBtYXJnaW46IDAsXG4gICAgICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAgICAgYm9yZGVyOiBcIm5vbmVcIlxuICAgICAgICAgIH0sIFwiaW1wb3J0YW50XCIpO1xuICAgICAgICAgIHZhciBjdG0gPSBzdmdbMF1bMF0uZ2V0U2NyZWVuQ1RNKCk7XG4gICAgICAgICAgZDNfbW91c2VfYnVnNDQwODMgPSAhKGN0bS5mIHx8IGN0bS5lKTtcbiAgICAgICAgICBzdmcucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkM19tb3VzZV9idWc0NDA4MykgcG9pbnQueCA9IGUucGFnZVgsIHBvaW50LnkgPSBlLnBhZ2VZOyBlbHNlIHBvaW50LnggPSBlLmNsaWVudFgsIFxuICAgICAgcG9pbnQueSA9IGUuY2xpZW50WTtcbiAgICAgIHBvaW50ID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKGNvbnRhaW5lci5nZXRTY3JlZW5DVE0oKS5pbnZlcnNlKCkpO1xuICAgICAgcmV0dXJuIFsgcG9pbnQueCwgcG9pbnQueSBdO1xuICAgIH1cbiAgICB2YXIgcmVjdCA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4gWyBlLmNsaWVudFggLSByZWN0LmxlZnQgLSBjb250YWluZXIuY2xpZW50TGVmdCwgZS5jbGllbnRZIC0gcmVjdC50b3AgLSBjb250YWluZXIuY2xpZW50VG9wIF07XG4gIH1cbiAgZDMudG91Y2ggPSBmdW5jdGlvbihjb250YWluZXIsIHRvdWNoZXMsIGlkZW50aWZpZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGlkZW50aWZpZXIgPSB0b3VjaGVzLCB0b3VjaGVzID0gZDNfZXZlbnRTb3VyY2UoKS5jaGFuZ2VkVG91Y2hlcztcbiAgICBpZiAodG91Y2hlcykgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzLmxlbmd0aCwgdG91Y2g7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgodG91Y2ggPSB0b3VjaGVzW2ldKS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICAgIHJldHVybiBkM19tb3VzZVBvaW50KGNvbnRhaW5lciwgdG91Y2gpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgZDMuYmVoYXZpb3IuZHJhZyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBldmVudCA9IGQzX2V2ZW50RGlzcGF0Y2goZHJhZywgXCJkcmFnXCIsIFwiZHJhZ3N0YXJ0XCIsIFwiZHJhZ2VuZFwiKSwgb3JpZ2luID0gbnVsbCwgbW91c2Vkb3duID0gZHJhZ3N0YXJ0KGQzX25vb3AsIGQzLm1vdXNlLCBkM193aW5kb3csIFwibW91c2Vtb3ZlXCIsIFwibW91c2V1cFwiKSwgdG91Y2hzdGFydCA9IGRyYWdzdGFydChkM19iZWhhdmlvcl9kcmFnVG91Y2hJZCwgZDMudG91Y2gsIGQzX2lkZW50aXR5LCBcInRvdWNobW92ZVwiLCBcInRvdWNoZW5kXCIpO1xuICAgIGZ1bmN0aW9uIGRyYWcoKSB7XG4gICAgICB0aGlzLm9uKFwibW91c2Vkb3duLmRyYWdcIiwgbW91c2Vkb3duKS5vbihcInRvdWNoc3RhcnQuZHJhZ1wiLCB0b3VjaHN0YXJ0KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZHJhZ3N0YXJ0KGlkLCBwb3NpdGlvbiwgc3ViamVjdCwgbW92ZSwgZW5kKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcywgdGFyZ2V0ID0gZDMuZXZlbnQudGFyZ2V0LmNvcnJlc3BvbmRpbmdFbGVtZW50IHx8IGQzLmV2ZW50LnRhcmdldCwgcGFyZW50ID0gdGhhdC5wYXJlbnROb2RlLCBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoYXQsIGFyZ3VtZW50cyksIGRyYWdnZWQgPSAwLCBkcmFnSWQgPSBpZCgpLCBkcmFnTmFtZSA9IFwiLmRyYWdcIiArIChkcmFnSWQgPT0gbnVsbCA/IFwiXCIgOiBcIi1cIiArIGRyYWdJZCksIGRyYWdPZmZzZXQsIGRyYWdTdWJqZWN0ID0gZDMuc2VsZWN0KHN1YmplY3QodGFyZ2V0KSkub24obW92ZSArIGRyYWdOYW1lLCBtb3ZlZCkub24oZW5kICsgZHJhZ05hbWUsIGVuZGVkKSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3ModGFyZ2V0KSwgcG9zaXRpb24wID0gcG9zaXRpb24ocGFyZW50LCBkcmFnSWQpO1xuICAgICAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgICAgZHJhZ09mZnNldCA9IG9yaWdpbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICAgICAgICAgIGRyYWdPZmZzZXQgPSBbIGRyYWdPZmZzZXQueCAtIHBvc2l0aW9uMFswXSwgZHJhZ09mZnNldC55IC0gcG9zaXRpb24wWzFdIF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZHJhZ09mZnNldCA9IFsgMCwgMCBdO1xuICAgICAgICB9XG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiBcImRyYWdzdGFydFwiXG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBtb3ZlZCgpIHtcbiAgICAgICAgICB2YXIgcG9zaXRpb24xID0gcG9zaXRpb24ocGFyZW50LCBkcmFnSWQpLCBkeCwgZHk7XG4gICAgICAgICAgaWYgKCFwb3NpdGlvbjEpIHJldHVybjtcbiAgICAgICAgICBkeCA9IHBvc2l0aW9uMVswXSAtIHBvc2l0aW9uMFswXTtcbiAgICAgICAgICBkeSA9IHBvc2l0aW9uMVsxXSAtIHBvc2l0aW9uMFsxXTtcbiAgICAgICAgICBkcmFnZ2VkIHw9IGR4IHwgZHk7XG4gICAgICAgICAgcG9zaXRpb24wID0gcG9zaXRpb24xO1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6IFwiZHJhZ1wiLFxuICAgICAgICAgICAgeDogcG9zaXRpb24xWzBdICsgZHJhZ09mZnNldFswXSxcbiAgICAgICAgICAgIHk6IHBvc2l0aW9uMVsxXSArIGRyYWdPZmZzZXRbMV0sXG4gICAgICAgICAgICBkeDogZHgsXG4gICAgICAgICAgICBkeTogZHlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgICAgICBpZiAoIXBvc2l0aW9uKHBhcmVudCwgZHJhZ0lkKSkgcmV0dXJuO1xuICAgICAgICAgIGRyYWdTdWJqZWN0Lm9uKG1vdmUgKyBkcmFnTmFtZSwgbnVsbCkub24oZW5kICsgZHJhZ05hbWUsIG51bGwpO1xuICAgICAgICAgIGRyYWdSZXN0b3JlKGRyYWdnZWQpO1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6IFwiZHJhZ2VuZFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIGRyYWcub3JpZ2luID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JpZ2luO1xuICAgICAgb3JpZ2luID0geDtcbiAgICAgIHJldHVybiBkcmFnO1xuICAgIH07XG4gICAgcmV0dXJuIGQzLnJlYmluZChkcmFnLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfYmVoYXZpb3JfZHJhZ1RvdWNoSWQoKSB7XG4gICAgcmV0dXJuIGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXI7XG4gIH1cbiAgZDMudG91Y2hlcyA9IGZ1bmN0aW9uKGNvbnRhaW5lciwgdG91Y2hlcykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgdG91Y2hlcyA9IGQzX2V2ZW50U291cmNlKCkudG91Y2hlcztcbiAgICByZXR1cm4gdG91Y2hlcyA/IGQzX2FycmF5KHRvdWNoZXMpLm1hcChmdW5jdGlvbih0b3VjaCkge1xuICAgICAgdmFyIHBvaW50ID0gZDNfbW91c2VQb2ludChjb250YWluZXIsIHRvdWNoKTtcbiAgICAgIHBvaW50LmlkZW50aWZpZXIgPSB0b3VjaC5pZGVudGlmaWVyO1xuICAgICAgcmV0dXJuIHBvaW50O1xuICAgIH0pIDogW107XG4gIH07XG4gIHZhciDOtSA9IDFlLTYsIM61MiA9IM61ICogzrUsIM+AID0gTWF0aC5QSSwgz4QgPSAyICogz4AsIM+EzrUgPSDPhCAtIM61LCBoYWxmz4AgPSDPgCAvIDIsIGQzX3JhZGlhbnMgPSDPgCAvIDE4MCwgZDNfZGVncmVlcyA9IDE4MCAvIM+AO1xuICBmdW5jdGlvbiBkM19zZ24oeCkge1xuICAgIHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDtcbiAgfVxuICBmdW5jdGlvbiBkM19jcm9zczJkKGEsIGIsIGMpIHtcbiAgICByZXR1cm4gKGJbMF0gLSBhWzBdKSAqIChjWzFdIC0gYVsxXSkgLSAoYlsxXSAtIGFbMV0pICogKGNbMF0gLSBhWzBdKTtcbiAgfVxuICBmdW5jdGlvbiBkM19hY29zKHgpIHtcbiAgICByZXR1cm4geCA+IDEgPyAwIDogeCA8IC0xID8gz4AgOiBNYXRoLmFjb3MoeCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfYXNpbih4KSB7XG4gICAgcmV0dXJuIHggPiAxID8gaGFsZs+AIDogeCA8IC0xID8gLWhhbGbPgCA6IE1hdGguYXNpbih4KTtcbiAgfVxuICBmdW5jdGlvbiBkM19zaW5oKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpIC0gMSAvIHgpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19jb3NoKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpICsgMSAvIHgpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM190YW5oKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoMiAqIHgpKSAtIDEpIC8gKHggKyAxKTtcbiAgfVxuICBmdW5jdGlvbiBkM19oYXZlcnNpbih4KSB7XG4gICAgcmV0dXJuICh4ID0gTWF0aC5zaW4oeCAvIDIpKSAqIHg7XG4gIH1cbiAgdmFyIM+BID0gTWF0aC5TUVJUMiwgz4EyID0gMiwgz4E0ID0gNDtcbiAgZDMuaW50ZXJwb2xhdGVab29tID0gZnVuY3Rpb24ocDAsIHAxKSB7XG4gICAgdmFyIHV4MCA9IHAwWzBdLCB1eTAgPSBwMFsxXSwgdzAgPSBwMFsyXSwgdXgxID0gcDFbMF0sIHV5MSA9IHAxWzFdLCB3MSA9IHAxWzJdLCBkeCA9IHV4MSAtIHV4MCwgZHkgPSB1eTEgLSB1eTAsIGQyID0gZHggKiBkeCArIGR5ICogZHksIGksIFM7XG4gICAgaWYgKGQyIDwgzrUyKSB7XG4gICAgICBTID0gTWF0aC5sb2codzEgLyB3MCkgLyDPgTtcbiAgICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHJldHVybiBbIHV4MCArIHQgKiBkeCwgdXkwICsgdCAqIGR5LCB3MCAqIE1hdGguZXhwKM+BICogdCAqIFMpIF07XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZDEgPSBNYXRoLnNxcnQoZDIpLCBiMCA9ICh3MSAqIHcxIC0gdzAgKiB3MCArIM+BNCAqIGQyKSAvICgyICogdzAgKiDPgTIgKiBkMSksIGIxID0gKHcxICogdzEgLSB3MCAqIHcwIC0gz4E0ICogZDIpIC8gKDIgKiB3MSAqIM+BMiAqIGQxKSwgcjAgPSBNYXRoLmxvZyhNYXRoLnNxcnQoYjAgKiBiMCArIDEpIC0gYjApLCByMSA9IE1hdGgubG9nKE1hdGguc3FydChiMSAqIGIxICsgMSkgLSBiMSk7XG4gICAgICBTID0gKHIxIC0gcjApIC8gz4E7XG4gICAgICBpID0gZnVuY3Rpb24odCkge1xuICAgICAgICB2YXIgcyA9IHQgKiBTLCBjb3NocjAgPSBkM19jb3NoKHIwKSwgdSA9IHcwIC8gKM+BMiAqIGQxKSAqIChjb3NocjAgKiBkM190YW5oKM+BICogcyArIHIwKSAtIGQzX3NpbmgocjApKTtcbiAgICAgICAgcmV0dXJuIFsgdXgwICsgdSAqIGR4LCB1eTAgKyB1ICogZHksIHcwICogY29zaHIwIC8gZDNfY29zaCjPgSAqIHMgKyByMCkgXTtcbiAgICAgIH07XG4gICAgfVxuICAgIGkuZHVyYXRpb24gPSBTICogMWUzO1xuICAgIHJldHVybiBpO1xuICB9O1xuICBkMy5iZWhhdmlvci56b29tID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZpZXcgPSB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMCxcbiAgICAgIGs6IDFcbiAgICB9LCB0cmFuc2xhdGUwLCBjZW50ZXIwLCBjZW50ZXIsIHNpemUgPSBbIDk2MCwgNTAwIF0sIHNjYWxlRXh0ZW50ID0gZDNfYmVoYXZpb3Jfem9vbUluZmluaXR5LCBkdXJhdGlvbiA9IDI1MCwgem9vbWluZyA9IDAsIG1vdXNlZG93biA9IFwibW91c2Vkb3duLnpvb21cIiwgbW91c2Vtb3ZlID0gXCJtb3VzZW1vdmUuem9vbVwiLCBtb3VzZXVwID0gXCJtb3VzZXVwLnpvb21cIiwgbW91c2V3aGVlbFRpbWVyLCB0b3VjaHN0YXJ0ID0gXCJ0b3VjaHN0YXJ0Lnpvb21cIiwgdG91Y2h0aW1lLCBldmVudCA9IGQzX2V2ZW50RGlzcGF0Y2goem9vbSwgXCJ6b29tc3RhcnRcIiwgXCJ6b29tXCIsIFwiem9vbWVuZFwiKSwgeDAsIHgxLCB5MCwgeTE7XG4gICAgaWYgKCFkM19iZWhhdmlvcl96b29tV2hlZWwpIHtcbiAgICAgIGQzX2JlaGF2aW9yX3pvb21XaGVlbCA9IFwib253aGVlbFwiIGluIGQzX2RvY3VtZW50ID8gKGQzX2JlaGF2aW9yX3pvb21EZWx0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gLWQzLmV2ZW50LmRlbHRhWSAqIChkMy5ldmVudC5kZWx0YU1vZGUgPyAxMjAgOiAxKTtcbiAgICAgIH0sIFwid2hlZWxcIikgOiBcIm9ubW91c2V3aGVlbFwiIGluIGQzX2RvY3VtZW50ID8gKGQzX2JlaGF2aW9yX3pvb21EZWx0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZDMuZXZlbnQud2hlZWxEZWx0YTtcbiAgICAgIH0sIFwibW91c2V3aGVlbFwiKSA6IChkM19iZWhhdmlvcl96b29tRGVsdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIC1kMy5ldmVudC5kZXRhaWw7XG4gICAgICB9LCBcIk1vek1vdXNlUGl4ZWxTY3JvbGxcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb20oZykge1xuICAgICAgZy5vbihtb3VzZWRvd24sIG1vdXNlZG93bmVkKS5vbihkM19iZWhhdmlvcl96b29tV2hlZWwgKyBcIi56b29tXCIsIG1vdXNld2hlZWxlZCkub24oXCJkYmxjbGljay56b29tXCIsIGRibGNsaWNrZWQpLm9uKHRvdWNoc3RhcnQsIHRvdWNoc3RhcnRlZCk7XG4gICAgfVxuICAgIHpvb20uZXZlbnQgPSBmdW5jdGlvbihnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoaXMsIGFyZ3VtZW50cyksIHZpZXcxID0gdmlldztcbiAgICAgICAgaWYgKGQzX3RyYW5zaXRpb25Jbmhlcml0SWQpIHtcbiAgICAgICAgICBkMy5zZWxlY3QodGhpcykudHJhbnNpdGlvbigpLmVhY2goXCJzdGFydC56b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmlldyA9IHRoaXMuX19jaGFydF9fIHx8IHtcbiAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgeTogMCxcbiAgICAgICAgICAgICAgazogMVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9KS50d2VlbihcInpvb206em9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBkeCA9IHNpemVbMF0sIGR5ID0gc2l6ZVsxXSwgY3ggPSBjZW50ZXIwID8gY2VudGVyMFswXSA6IGR4IC8gMiwgY3kgPSBjZW50ZXIwID8gY2VudGVyMFsxXSA6IGR5IC8gMiwgaSA9IGQzLmludGVycG9sYXRlWm9vbShbIChjeCAtIHZpZXcueCkgLyB2aWV3LmssIChjeSAtIHZpZXcueSkgLyB2aWV3LmssIGR4IC8gdmlldy5rIF0sIFsgKGN4IC0gdmlldzEueCkgLyB2aWV3MS5rLCAoY3kgLSB2aWV3MS55KSAvIHZpZXcxLmssIGR4IC8gdmlldzEuayBdKTtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgIHZhciBsID0gaSh0KSwgayA9IGR4IC8gbFsyXTtcbiAgICAgICAgICAgICAgdGhpcy5fX2NoYXJ0X18gPSB2aWV3ID0ge1xuICAgICAgICAgICAgICAgIHg6IGN4IC0gbFswXSAqIGssXG4gICAgICAgICAgICAgICAgeTogY3kgLSBsWzFdICogayxcbiAgICAgICAgICAgICAgICBrOiBrXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pLmVhY2goXCJpbnRlcnJ1cHQuem9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICAgICAgfSkuZWFjaChcImVuZC56b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9fY2hhcnRfXyA9IHZpZXc7XG4gICAgICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgICB6b29tLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgdmlldy54LCB2aWV3LnkgXTtcbiAgICAgIHZpZXcgPSB7XG4gICAgICAgIHg6ICtfWzBdLFxuICAgICAgICB5OiArX1sxXSxcbiAgICAgICAgazogdmlldy5rXG4gICAgICB9O1xuICAgICAgcmVzY2FsZSgpO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmlldy5rO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogdmlldy54LFxuICAgICAgICB5OiB2aWV3LnksXG4gICAgICAgIGs6IG51bGxcbiAgICAgIH07XG4gICAgICBzY2FsZVRvKCtfKTtcbiAgICAgIHJlc2NhbGUoKTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS5zY2FsZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNjYWxlRXh0ZW50O1xuICAgICAgc2NhbGVFeHRlbnQgPSBfID09IG51bGwgPyBkM19iZWhhdmlvcl96b29tSW5maW5pdHkgOiBbICtfWzBdLCArX1sxXSBdO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNlbnRlcjtcbiAgICAgIGNlbnRlciA9IF8gJiYgWyArX1swXSwgK19bMV0gXTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSBfICYmIFsgK19bMF0sICtfWzFdIF07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uZHVyYXRpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkdXJhdGlvbjtcbiAgICAgIGR1cmF0aW9uID0gK187XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20ueCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgxO1xuICAgICAgeDEgPSB6O1xuICAgICAgeDAgPSB6LmNvcHkoKTtcbiAgICAgIHZpZXcgPSB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIGs6IDFcbiAgICAgIH07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20ueSA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHkxO1xuICAgICAgeTEgPSB6O1xuICAgICAgeTAgPSB6LmNvcHkoKTtcbiAgICAgIHZpZXcgPSB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIGs6IDFcbiAgICAgIH07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGxvY2F0aW9uKHApIHtcbiAgICAgIHJldHVybiBbIChwWzBdIC0gdmlldy54KSAvIHZpZXcuaywgKHBbMV0gLSB2aWV3LnkpIC8gdmlldy5rIF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50KGwpIHtcbiAgICAgIHJldHVybiBbIGxbMF0gKiB2aWV3LmsgKyB2aWV3LngsIGxbMV0gKiB2aWV3LmsgKyB2aWV3LnkgXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2NhbGVUbyhzKSB7XG4gICAgICB2aWV3LmsgPSBNYXRoLm1heChzY2FsZUV4dGVudFswXSwgTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0sIHMpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJhbnNsYXRlVG8ocCwgbCkge1xuICAgICAgbCA9IHBvaW50KGwpO1xuICAgICAgdmlldy54ICs9IHBbMF0gLSBsWzBdO1xuICAgICAgdmlldy55ICs9IHBbMV0gLSBsWzFdO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tVG8odGhhdCwgcCwgbCwgaykge1xuICAgICAgdGhhdC5fX2NoYXJ0X18gPSB7XG4gICAgICAgIHg6IHZpZXcueCxcbiAgICAgICAgeTogdmlldy55LFxuICAgICAgICBrOiB2aWV3LmtcbiAgICAgIH07XG4gICAgICBzY2FsZVRvKE1hdGgucG93KDIsIGspKTtcbiAgICAgIHRyYW5zbGF0ZVRvKGNlbnRlcjAgPSBwLCBsKTtcbiAgICAgIHRoYXQgPSBkMy5zZWxlY3QodGhhdCk7XG4gICAgICBpZiAoZHVyYXRpb24gPiAwKSB0aGF0ID0gdGhhdC50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pO1xuICAgICAgdGhhdC5jYWxsKHpvb20uZXZlbnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgICAgaWYgKHgxKSB4MS5kb21haW4oeDAucmFuZ2UoKS5tYXAoZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gKHggLSB2aWV3LngpIC8gdmlldy5rO1xuICAgICAgfSkubWFwKHgwLmludmVydCkpO1xuICAgICAgaWYgKHkxKSB5MS5kb21haW4oeTAucmFuZ2UoKS5tYXAoZnVuY3Rpb24oeSkge1xuICAgICAgICByZXR1cm4gKHkgLSB2aWV3LnkpIC8gdmlldy5rO1xuICAgICAgfSkubWFwKHkwLmludmVydCkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tc3RhcnRlZChkaXNwYXRjaCkge1xuICAgICAgaWYgKCF6b29taW5nKyspIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogXCJ6b29tc3RhcnRcIlxuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb21lZChkaXNwYXRjaCkge1xuICAgICAgcmVzY2FsZSgpO1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiBcInpvb21cIixcbiAgICAgICAgc2NhbGU6IHZpZXcuayxcbiAgICAgICAgdHJhbnNsYXRlOiBbIHZpZXcueCwgdmlldy55IF1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tZW5kZWQoZGlzcGF0Y2gpIHtcbiAgICAgIGlmICghLS16b29taW5nKSBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiem9vbWVuZFwiXG4gICAgICB9KSwgY2VudGVyMCA9IG51bGw7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1vdXNlZG93bmVkKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzLCBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoYXQsIGFyZ3VtZW50cyksIGRyYWdnZWQgPSAwLCBzdWJqZWN0ID0gZDMuc2VsZWN0KGQzX3dpbmRvdyh0aGF0KSkub24obW91c2Vtb3ZlLCBtb3ZlZCkub24obW91c2V1cCwgZW5kZWQpLCBsb2NhdGlvbjAgPSBsb2NhdGlvbihkMy5tb3VzZSh0aGF0KSksIGRyYWdSZXN0b3JlID0gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKHRoYXQpO1xuICAgICAgZDNfc2VsZWN0aW9uX2ludGVycnVwdC5jYWxsKHRoYXQpO1xuICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgZnVuY3Rpb24gbW92ZWQoKSB7XG4gICAgICAgIGRyYWdnZWQgPSAxO1xuICAgICAgICB0cmFuc2xhdGVUbyhkMy5tb3VzZSh0aGF0KSwgbG9jYXRpb24wKTtcbiAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGVuZGVkKCkge1xuICAgICAgICBzdWJqZWN0Lm9uKG1vdXNlbW92ZSwgbnVsbCkub24obW91c2V1cCwgbnVsbCk7XG4gICAgICAgIGRyYWdSZXN0b3JlKGRyYWdnZWQpO1xuICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXMsIGRpc3BhdGNoID0gZXZlbnQub2YodGhhdCwgYXJndW1lbnRzKSwgbG9jYXRpb25zMCA9IHt9LCBkaXN0YW5jZTAgPSAwLCBzY2FsZTAsIHpvb21OYW1lID0gXCIuem9vbS1cIiArIGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXIsIHRvdWNobW92ZSA9IFwidG91Y2htb3ZlXCIgKyB6b29tTmFtZSwgdG91Y2hlbmQgPSBcInRvdWNoZW5kXCIgKyB6b29tTmFtZSwgdGFyZ2V0cyA9IFtdLCBzdWJqZWN0ID0gZDMuc2VsZWN0KHRoYXQpLCBkcmFnUmVzdG9yZSA9IGQzX2V2ZW50X2RyYWdTdXBwcmVzcyh0aGF0KTtcbiAgICAgIHN0YXJ0ZWQoKTtcbiAgICAgIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgIHN1YmplY3Qub24obW91c2Vkb3duLCBudWxsKS5vbih0b3VjaHN0YXJ0LCBzdGFydGVkKTtcbiAgICAgIGZ1bmN0aW9uIHJlbG9jYXRlKCkge1xuICAgICAgICB2YXIgdG91Y2hlcyA9IGQzLnRvdWNoZXModGhhdCk7XG4gICAgICAgIHNjYWxlMCA9IHZpZXcuaztcbiAgICAgICAgdG91Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICBpZiAodC5pZGVudGlmaWVyIGluIGxvY2F0aW9uczApIGxvY2F0aW9uczBbdC5pZGVudGlmaWVyXSA9IGxvY2F0aW9uKHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRvdWNoZXM7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBzdGFydGVkKCkge1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZDMuZXZlbnQudGFyZ2V0O1xuICAgICAgICBkMy5zZWxlY3QodGFyZ2V0KS5vbih0b3VjaG1vdmUsIG1vdmVkKS5vbih0b3VjaGVuZCwgZW5kZWQpO1xuICAgICAgICB0YXJnZXRzLnB1c2godGFyZ2V0KTtcbiAgICAgICAgdmFyIGNoYW5nZWQgPSBkMy5ldmVudC5jaGFuZ2VkVG91Y2hlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBjaGFuZ2VkLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGxvY2F0aW9uczBbY2hhbmdlZFtpXS5pZGVudGlmaWVyXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRvdWNoZXMgPSByZWxvY2F0ZSgpLCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICBpZiAodG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICBpZiAobm93IC0gdG91Y2h0aW1lIDwgNTAwKSB7XG4gICAgICAgICAgICB2YXIgcCA9IHRvdWNoZXNbMF07XG4gICAgICAgICAgICB6b29tVG8odGhhdCwgcCwgbG9jYXRpb25zMFtwLmlkZW50aWZpZXJdLCBNYXRoLmZsb29yKE1hdGgubG9nKHZpZXcuaykgLyBNYXRoLkxOMikgKyAxKTtcbiAgICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdG91Y2h0aW1lID0gbm93O1xuICAgICAgICB9IGVsc2UgaWYgKHRvdWNoZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgIHZhciBwID0gdG91Y2hlc1swXSwgcSA9IHRvdWNoZXNbMV0sIGR4ID0gcFswXSAtIHFbMF0sIGR5ID0gcFsxXSAtIHFbMV07XG4gICAgICAgICAgZGlzdGFuY2UwID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgICB2YXIgdG91Y2hlcyA9IGQzLnRvdWNoZXModGhhdCksIHAwLCBsMCwgcDEsIGwxO1xuICAgICAgICBkM19zZWxlY3Rpb25faW50ZXJydXB0LmNhbGwodGhhdCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gdG91Y2hlcy5sZW5ndGg7IGkgPCBuOyArK2ksIGwxID0gbnVsbCkge1xuICAgICAgICAgIHAxID0gdG91Y2hlc1tpXTtcbiAgICAgICAgICBpZiAobDEgPSBsb2NhdGlvbnMwW3AxLmlkZW50aWZpZXJdKSB7XG4gICAgICAgICAgICBpZiAobDApIGJyZWFrO1xuICAgICAgICAgICAgcDAgPSBwMSwgbDAgPSBsMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGwxKSB7XG4gICAgICAgICAgdmFyIGRpc3RhbmNlMSA9IChkaXN0YW5jZTEgPSBwMVswXSAtIHAwWzBdKSAqIGRpc3RhbmNlMSArIChkaXN0YW5jZTEgPSBwMVsxXSAtIHAwWzFdKSAqIGRpc3RhbmNlMSwgc2NhbGUxID0gZGlzdGFuY2UwICYmIE1hdGguc3FydChkaXN0YW5jZTEgLyBkaXN0YW5jZTApO1xuICAgICAgICAgIHAwID0gWyAocDBbMF0gKyBwMVswXSkgLyAyLCAocDBbMV0gKyBwMVsxXSkgLyAyIF07XG4gICAgICAgICAgbDAgPSBbIChsMFswXSArIGwxWzBdKSAvIDIsIChsMFsxXSArIGwxWzFdKSAvIDIgXTtcbiAgICAgICAgICBzY2FsZVRvKHNjYWxlMSAqIHNjYWxlMCk7XG4gICAgICAgIH1cbiAgICAgICAgdG91Y2h0aW1lID0gbnVsbDtcbiAgICAgICAgdHJhbnNsYXRlVG8ocDAsIGwwKTtcbiAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGVuZGVkKCkge1xuICAgICAgICBpZiAoZDMuZXZlbnQudG91Y2hlcy5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgY2hhbmdlZCA9IGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gY2hhbmdlZC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBsb2NhdGlvbnMwW2NoYW5nZWRbaV0uaWRlbnRpZmllcl07XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAodmFyIGlkZW50aWZpZXIgaW4gbG9jYXRpb25zMCkge1xuICAgICAgICAgICAgcmV0dXJuIHZvaWQgcmVsb2NhdGUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZDMuc2VsZWN0QWxsKHRhcmdldHMpLm9uKHpvb21OYW1lLCBudWxsKTtcbiAgICAgICAgc3ViamVjdC5vbihtb3VzZWRvd24sIG1vdXNlZG93bmVkKS5vbih0b3VjaHN0YXJ0LCB0b3VjaHN0YXJ0ZWQpO1xuICAgICAgICBkcmFnUmVzdG9yZSgpO1xuICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBtb3VzZXdoZWVsZWQoKSB7XG4gICAgICB2YXIgZGlzcGF0Y2ggPSBldmVudC5vZih0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKG1vdXNld2hlZWxUaW1lcikgY2xlYXJUaW1lb3V0KG1vdXNld2hlZWxUaW1lcik7IGVsc2UgZDNfc2VsZWN0aW9uX2ludGVycnVwdC5jYWxsKHRoaXMpLCBcbiAgICAgIHRyYW5zbGF0ZTAgPSBsb2NhdGlvbihjZW50ZXIwID0gY2VudGVyIHx8IGQzLm1vdXNlKHRoaXMpKSwgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgbW91c2V3aGVlbFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgbW91c2V3aGVlbFRpbWVyID0gbnVsbDtcbiAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgIH0sIDUwKTtcbiAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgIHNjYWxlVG8oTWF0aC5wb3coMiwgZDNfYmVoYXZpb3Jfem9vbURlbHRhKCkgKiAuMDAyKSAqIHZpZXcuayk7XG4gICAgICB0cmFuc2xhdGVUbyhjZW50ZXIwLCB0cmFuc2xhdGUwKTtcbiAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRibGNsaWNrZWQoKSB7XG4gICAgICB2YXIgcCA9IGQzLm1vdXNlKHRoaXMpLCBrID0gTWF0aC5sb2codmlldy5rKSAvIE1hdGguTE4yO1xuICAgICAgem9vbVRvKHRoaXMsIHAsIGxvY2F0aW9uKHApLCBkMy5ldmVudC5zaGlmdEtleSA/IE1hdGguY2VpbChrKSAtIDEgOiBNYXRoLmZsb29yKGspICsgMSk7XG4gICAgfVxuICAgIHJldHVybiBkMy5yZWJpbmQoem9vbSwgZXZlbnQsIFwib25cIik7XG4gIH07XG4gIHZhciBkM19iZWhhdmlvcl96b29tSW5maW5pdHkgPSBbIDAsIEluZmluaXR5IF0sIGQzX2JlaGF2aW9yX3pvb21EZWx0YSwgZDNfYmVoYXZpb3Jfem9vbVdoZWVsO1xuICBkMy5jb2xvciA9IGQzX2NvbG9yO1xuICBmdW5jdGlvbiBkM19jb2xvcigpIHt9XG4gIGQzX2NvbG9yLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpICsgXCJcIjtcbiAgfTtcbiAgZDMuaHNsID0gZDNfaHNsO1xuICBmdW5jdGlvbiBkM19oc2woaCwgcywgbCkge1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgZDNfaHNsID8gdm9pZCAodGhpcy5oID0gK2gsIHRoaXMucyA9ICtzLCB0aGlzLmwgPSArbCkgOiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGggaW5zdGFuY2VvZiBkM19oc2wgPyBuZXcgZDNfaHNsKGguaCwgaC5zLCBoLmwpIDogZDNfcmdiX3BhcnNlKFwiXCIgKyBoLCBkM19yZ2JfaHNsLCBkM19oc2wpIDogbmV3IGQzX2hzbChoLCBzLCBsKTtcbiAgfVxuICB2YXIgZDNfaHNsUHJvdG90eXBlID0gZDNfaHNsLnByb3RvdHlwZSA9IG5ldyBkM19jb2xvcigpO1xuICBkM19oc2xQcm90b3R5cGUuYnJpZ2h0ZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgayA9IE1hdGgucG93KC43LCBhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpO1xuICAgIHJldHVybiBuZXcgZDNfaHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgLyBrKTtcbiAgfTtcbiAgZDNfaHNsUHJvdG90eXBlLmRhcmtlciA9IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gTWF0aC5wb3coLjcsIGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSk7XG4gICAgcmV0dXJuIG5ldyBkM19oc2wodGhpcy5oLCB0aGlzLnMsIGsgKiB0aGlzLmwpO1xuICB9O1xuICBkM19oc2xQcm90b3R5cGUucmdiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2hzbF9yZ2IodGhpcy5oLCB0aGlzLnMsIHRoaXMubCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2hzbF9yZ2IoaCwgcywgbCkge1xuICAgIHZhciBtMSwgbTI7XG4gICAgaCA9IGlzTmFOKGgpID8gMCA6IChoICU9IDM2MCkgPCAwID8gaCArIDM2MCA6IGg7XG4gICAgcyA9IGlzTmFOKHMpID8gMCA6IHMgPCAwID8gMCA6IHMgPiAxID8gMSA6IHM7XG4gICAgbCA9IGwgPCAwID8gMCA6IGwgPiAxID8gMSA6IGw7XG4gICAgbTIgPSBsIDw9IC41ID8gbCAqICgxICsgcykgOiBsICsgcyAtIGwgKiBzO1xuICAgIG0xID0gMiAqIGwgLSBtMjtcbiAgICBmdW5jdGlvbiB2KGgpIHtcbiAgICAgIGlmIChoID4gMzYwKSBoIC09IDM2MDsgZWxzZSBpZiAoaCA8IDApIGggKz0gMzYwO1xuICAgICAgaWYgKGggPCA2MCkgcmV0dXJuIG0xICsgKG0yIC0gbTEpICogaCAvIDYwO1xuICAgICAgaWYgKGggPCAxODApIHJldHVybiBtMjtcbiAgICAgIGlmIChoIDwgMjQwKSByZXR1cm4gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MDtcbiAgICAgIHJldHVybiBtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdnYoaCkge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQodihoKSAqIDI1NSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgZDNfcmdiKHZ2KGggKyAxMjApLCB2dihoKSwgdnYoaCAtIDEyMCkpO1xuICB9XG4gIGQzLmhjbCA9IGQzX2hjbDtcbiAgZnVuY3Rpb24gZDNfaGNsKGgsIGMsIGwpIHtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGQzX2hjbCA/IHZvaWQgKHRoaXMuaCA9ICtoLCB0aGlzLmMgPSArYywgdGhpcy5sID0gK2wpIDogYXJndW1lbnRzLmxlbmd0aCA8IDIgPyBoIGluc3RhbmNlb2YgZDNfaGNsID8gbmV3IGQzX2hjbChoLmgsIGguYywgaC5sKSA6IGggaW5zdGFuY2VvZiBkM19sYWIgPyBkM19sYWJfaGNsKGgubCwgaC5hLCBoLmIpIDogZDNfbGFiX2hjbCgoaCA9IGQzX3JnYl9sYWIoKGggPSBkMy5yZ2IoaCkpLnIsIGguZywgaC5iKSkubCwgaC5hLCBoLmIpIDogbmV3IGQzX2hjbChoLCBjLCBsKTtcbiAgfVxuICB2YXIgZDNfaGNsUHJvdG90eXBlID0gZDNfaGNsLnByb3RvdHlwZSA9IG5ldyBkM19jb2xvcigpO1xuICBkM19oY2xQcm90b3R5cGUuYnJpZ2h0ZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBkM19oY2wodGhpcy5oLCB0aGlzLmMsIE1hdGgubWluKDEwMCwgdGhpcy5sICsgZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSkpO1xuICB9O1xuICBkM19oY2xQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgZDNfaGNsKHRoaXMuaCwgdGhpcy5jLCBNYXRoLm1heCgwLCB0aGlzLmwgLSBkM19sYWJfSyAqIChhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpKSk7XG4gIH07XG4gIGQzX2hjbFByb3RvdHlwZS5yZ2IgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfaGNsX2xhYih0aGlzLmgsIHRoaXMuYywgdGhpcy5sKS5yZ2IoKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfaGNsX2xhYihoLCBjLCBsKSB7XG4gICAgaWYgKGlzTmFOKGgpKSBoID0gMDtcbiAgICBpZiAoaXNOYU4oYykpIGMgPSAwO1xuICAgIHJldHVybiBuZXcgZDNfbGFiKGwsIE1hdGguY29zKGggKj0gZDNfcmFkaWFucykgKiBjLCBNYXRoLnNpbihoKSAqIGMpO1xuICB9XG4gIGQzLmxhYiA9IGQzX2xhYjtcbiAgZnVuY3Rpb24gZDNfbGFiKGwsIGEsIGIpIHtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGQzX2xhYiA/IHZvaWQgKHRoaXMubCA9ICtsLCB0aGlzLmEgPSArYSwgdGhpcy5iID0gK2IpIDogYXJndW1lbnRzLmxlbmd0aCA8IDIgPyBsIGluc3RhbmNlb2YgZDNfbGFiID8gbmV3IGQzX2xhYihsLmwsIGwuYSwgbC5iKSA6IGwgaW5zdGFuY2VvZiBkM19oY2wgPyBkM19oY2xfbGFiKGwuaCwgbC5jLCBsLmwpIDogZDNfcmdiX2xhYigobCA9IGQzX3JnYihsKSkuciwgbC5nLCBsLmIpIDogbmV3IGQzX2xhYihsLCBhLCBiKTtcbiAgfVxuICB2YXIgZDNfbGFiX0sgPSAxODtcbiAgdmFyIGQzX2xhYl9YID0gLjk1MDQ3LCBkM19sYWJfWSA9IDEsIGQzX2xhYl9aID0gMS4wODg4MztcbiAgdmFyIGQzX2xhYlByb3RvdHlwZSA9IGQzX2xhYi5wcm90b3R5cGUgPSBuZXcgZDNfY29sb3IoKTtcbiAgZDNfbGFiUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgZDNfbGFiKE1hdGgubWluKDEwMCwgdGhpcy5sICsgZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSksIHRoaXMuYSwgdGhpcy5iKTtcbiAgfTtcbiAgZDNfbGFiUHJvdG90eXBlLmRhcmtlciA9IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IGQzX2xhYihNYXRoLm1heCgwLCB0aGlzLmwgLSBkM19sYWJfSyAqIChhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpKSwgdGhpcy5hLCB0aGlzLmIpO1xuICB9O1xuICBkM19sYWJQcm90b3R5cGUucmdiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2xhYl9yZ2IodGhpcy5sLCB0aGlzLmEsIHRoaXMuYik7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xhYl9yZ2IobCwgYSwgYikge1xuICAgIHZhciB5ID0gKGwgKyAxNikgLyAxMTYsIHggPSB5ICsgYSAvIDUwMCwgeiA9IHkgLSBiIC8gMjAwO1xuICAgIHggPSBkM19sYWJfeHl6KHgpICogZDNfbGFiX1g7XG4gICAgeSA9IGQzX2xhYl94eXooeSkgKiBkM19sYWJfWTtcbiAgICB6ID0gZDNfbGFiX3h5eih6KSAqIGQzX2xhYl9aO1xuICAgIHJldHVybiBuZXcgZDNfcmdiKGQzX3h5el9yZ2IoMy4yNDA0NTQyICogeCAtIDEuNTM3MTM4NSAqIHkgLSAuNDk4NTMxNCAqIHopLCBkM194eXpfcmdiKC0uOTY5MjY2ICogeCArIDEuODc2MDEwOCAqIHkgKyAuMDQxNTU2ICogeiksIGQzX3h5el9yZ2IoLjA1NTY0MzQgKiB4IC0gLjIwNDAyNTkgKiB5ICsgMS4wNTcyMjUyICogeikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xhYl9oY2wobCwgYSwgYikge1xuICAgIHJldHVybiBsID4gMCA/IG5ldyBkM19oY2woTWF0aC5hdGFuMihiLCBhKSAqIGQzX2RlZ3JlZXMsIE1hdGguc3FydChhICogYSArIGIgKiBiKSwgbCkgOiBuZXcgZDNfaGNsKE5hTiwgTmFOLCBsKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYWJfeHl6KHgpIHtcbiAgICByZXR1cm4geCA+IC4yMDY4OTMwMzQgPyB4ICogeCAqIHggOiAoeCAtIDQgLyAyOSkgLyA3Ljc4NzAzNztcbiAgfVxuICBmdW5jdGlvbiBkM194eXpfbGFiKHgpIHtcbiAgICByZXR1cm4geCA+IC4wMDg4NTYgPyBNYXRoLnBvdyh4LCAxIC8gMykgOiA3Ljc4NzAzNyAqIHggKyA0IC8gMjk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeHl6X3JnYihyKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQoMjU1ICogKHIgPD0gLjAwMzA0ID8gMTIuOTIgKiByIDogMS4wNTUgKiBNYXRoLnBvdyhyLCAxIC8gMi40KSAtIC4wNTUpKTtcbiAgfVxuICBkMy5yZ2IgPSBkM19yZ2I7XG4gIGZ1bmN0aW9uIGQzX3JnYihyLCBnLCBiKSB7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBkM19yZ2IgPyB2b2lkICh0aGlzLnIgPSB+fnIsIHRoaXMuZyA9IH5+ZywgdGhpcy5iID0gfn5iKSA6IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gciBpbnN0YW5jZW9mIGQzX3JnYiA/IG5ldyBkM19yZ2Ioci5yLCByLmcsIHIuYikgOiBkM19yZ2JfcGFyc2UoXCJcIiArIHIsIGQzX3JnYiwgZDNfaHNsX3JnYikgOiBuZXcgZDNfcmdiKHIsIGcsIGIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYk51bWJlcih2YWx1ZSkge1xuICAgIHJldHVybiBuZXcgZDNfcmdiKHZhbHVlID4+IDE2LCB2YWx1ZSA+PiA4ICYgMjU1LCB2YWx1ZSAmIDI1NSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiU3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIGQzX3JnYk51bWJlcih2YWx1ZSkgKyBcIlwiO1xuICB9XG4gIHZhciBkM19yZ2JQcm90b3R5cGUgPSBkM19yZ2IucHJvdG90eXBlID0gbmV3IGQzX2NvbG9yKCk7XG4gIGQzX3JnYlByb3RvdHlwZS5icmlnaHRlciA9IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gTWF0aC5wb3coLjcsIGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSk7XG4gICAgdmFyIHIgPSB0aGlzLnIsIGcgPSB0aGlzLmcsIGIgPSB0aGlzLmIsIGkgPSAzMDtcbiAgICBpZiAoIXIgJiYgIWcgJiYgIWIpIHJldHVybiBuZXcgZDNfcmdiKGksIGksIGkpO1xuICAgIGlmIChyICYmIHIgPCBpKSByID0gaTtcbiAgICBpZiAoZyAmJiBnIDwgaSkgZyA9IGk7XG4gICAgaWYgKGIgJiYgYiA8IGkpIGIgPSBpO1xuICAgIHJldHVybiBuZXcgZDNfcmdiKE1hdGgubWluKDI1NSwgciAvIGspLCBNYXRoLm1pbigyNTUsIGcgLyBrKSwgTWF0aC5taW4oMjU1LCBiIC8gaykpO1xuICB9O1xuICBkM19yZ2JQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICByZXR1cm4gbmV3IGQzX3JnYihrICogdGhpcy5yLCBrICogdGhpcy5nLCBrICogdGhpcy5iKTtcbiAgfTtcbiAgZDNfcmdiUHJvdG90eXBlLmhzbCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19yZ2JfaHNsKHRoaXMuciwgdGhpcy5nLCB0aGlzLmIpO1xuICB9O1xuICBkM19yZ2JQcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCIjXCIgKyBkM19yZ2JfaGV4KHRoaXMucikgKyBkM19yZ2JfaGV4KHRoaXMuZykgKyBkM19yZ2JfaGV4KHRoaXMuYik7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3JnYl9oZXgodikge1xuICAgIHJldHVybiB2IDwgMTYgPyBcIjBcIiArIE1hdGgubWF4KDAsIHYpLnRvU3RyaW5nKDE2KSA6IE1hdGgubWluKDI1NSwgdikudG9TdHJpbmcoMTYpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl9wYXJzZShmb3JtYXQsIHJnYiwgaHNsKSB7XG4gICAgdmFyIHIgPSAwLCBnID0gMCwgYiA9IDAsIG0xLCBtMiwgY29sb3I7XG4gICAgbTEgPSAvKFthLXpdKylcXCgoLiopXFwpLy5leGVjKGZvcm1hdCA9IGZvcm1hdC50b0xvd2VyQ2FzZSgpKTtcbiAgICBpZiAobTEpIHtcbiAgICAgIG0yID0gbTFbMl0uc3BsaXQoXCIsXCIpO1xuICAgICAgc3dpdGNoIChtMVsxXSkge1xuICAgICAgIGNhc2UgXCJoc2xcIjpcbiAgICAgICAge1xuICAgICAgICAgIHJldHVybiBoc2wocGFyc2VGbG9hdChtMlswXSksIHBhcnNlRmxvYXQobTJbMV0pIC8gMTAwLCBwYXJzZUZsb2F0KG0yWzJdKSAvIDEwMCk7XG4gICAgICAgIH1cblxuICAgICAgIGNhc2UgXCJyZ2JcIjpcbiAgICAgICAge1xuICAgICAgICAgIHJldHVybiByZ2IoZDNfcmdiX3BhcnNlTnVtYmVyKG0yWzBdKSwgZDNfcmdiX3BhcnNlTnVtYmVyKG0yWzFdKSwgZDNfcmdiX3BhcnNlTnVtYmVyKG0yWzJdKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGNvbG9yID0gZDNfcmdiX25hbWVzLmdldChmb3JtYXQpKSB7XG4gICAgICByZXR1cm4gcmdiKGNvbG9yLnIsIGNvbG9yLmcsIGNvbG9yLmIpO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ICE9IG51bGwgJiYgZm9ybWF0LmNoYXJBdCgwKSA9PT0gXCIjXCIgJiYgIWlzTmFOKGNvbG9yID0gcGFyc2VJbnQoZm9ybWF0LnNsaWNlKDEpLCAxNikpKSB7XG4gICAgICBpZiAoZm9ybWF0Lmxlbmd0aCA9PT0gNCkge1xuICAgICAgICByID0gKGNvbG9yICYgMzg0MCkgPj4gNDtcbiAgICAgICAgciA9IHIgPj4gNCB8IHI7XG4gICAgICAgIGcgPSBjb2xvciAmIDI0MDtcbiAgICAgICAgZyA9IGcgPj4gNCB8IGc7XG4gICAgICAgIGIgPSBjb2xvciAmIDE1O1xuICAgICAgICBiID0gYiA8PCA0IHwgYjtcbiAgICAgIH0gZWxzZSBpZiAoZm9ybWF0Lmxlbmd0aCA9PT0gNykge1xuICAgICAgICByID0gKGNvbG9yICYgMTY3MTE2ODApID4+IDE2O1xuICAgICAgICBnID0gKGNvbG9yICYgNjUyODApID4+IDg7XG4gICAgICAgIGIgPSBjb2xvciAmIDI1NTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJnYihyLCBnLCBiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfaHNsKHIsIGcsIGIpIHtcbiAgICB2YXIgbWluID0gTWF0aC5taW4ociAvPSAyNTUsIGcgLz0gMjU1LCBiIC89IDI1NSksIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLCBkID0gbWF4IC0gbWluLCBoLCBzLCBsID0gKG1heCArIG1pbikgLyAyO1xuICAgIGlmIChkKSB7XG4gICAgICBzID0gbCA8IC41ID8gZCAvIChtYXggKyBtaW4pIDogZCAvICgyIC0gbWF4IC0gbWluKTtcbiAgICAgIGlmIChyID09IG1heCkgaCA9IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApOyBlbHNlIGlmIChnID09IG1heCkgaCA9IChiIC0gcikgLyBkICsgMjsgZWxzZSBoID0gKHIgLSBnKSAvIGQgKyA0O1xuICAgICAgaCAqPSA2MDtcbiAgICB9IGVsc2Uge1xuICAgICAgaCA9IE5hTjtcbiAgICAgIHMgPSBsID4gMCAmJiBsIDwgMSA/IDAgOiBoO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGQzX2hzbChoLCBzLCBsKTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfbGFiKHIsIGcsIGIpIHtcbiAgICByID0gZDNfcmdiX3h5eihyKTtcbiAgICBnID0gZDNfcmdiX3h5eihnKTtcbiAgICBiID0gZDNfcmdiX3h5eihiKTtcbiAgICB2YXIgeCA9IGQzX3h5el9sYWIoKC40MTI0NTY0ICogciArIC4zNTc1NzYxICogZyArIC4xODA0Mzc1ICogYikgLyBkM19sYWJfWCksIHkgPSBkM194eXpfbGFiKCguMjEyNjcyOSAqIHIgKyAuNzE1MTUyMiAqIGcgKyAuMDcyMTc1ICogYikgLyBkM19sYWJfWSksIHogPSBkM194eXpfbGFiKCguMDE5MzMzOSAqIHIgKyAuMTE5MTkyICogZyArIC45NTAzMDQxICogYikgLyBkM19sYWJfWik7XG4gICAgcmV0dXJuIGQzX2xhYigxMTYgKiB5IC0gMTYsIDUwMCAqICh4IC0geSksIDIwMCAqICh5IC0geikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl94eXoocikge1xuICAgIHJldHVybiAociAvPSAyNTUpIDw9IC4wNDA0NSA/IHIgLyAxMi45MiA6IE1hdGgucG93KChyICsgLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfcGFyc2VOdW1iZXIoYykge1xuICAgIHZhciBmID0gcGFyc2VGbG9hdChjKTtcbiAgICByZXR1cm4gYy5jaGFyQXQoYy5sZW5ndGggLSAxKSA9PT0gXCIlXCIgPyBNYXRoLnJvdW5kKGYgKiAyLjU1KSA6IGY7XG4gIH1cbiAgdmFyIGQzX3JnYl9uYW1lcyA9IGQzLm1hcCh7XG4gICAgYWxpY2VibHVlOiAxNTc5MjM4MyxcbiAgICBhbnRpcXVld2hpdGU6IDE2NDQ0Mzc1LFxuICAgIGFxdWE6IDY1NTM1LFxuICAgIGFxdWFtYXJpbmU6IDgzODg1NjQsXG4gICAgYXp1cmU6IDE1Nzk0MTc1LFxuICAgIGJlaWdlOiAxNjExOTI2MCxcbiAgICBiaXNxdWU6IDE2NzcwMjQ0LFxuICAgIGJsYWNrOiAwLFxuICAgIGJsYW5jaGVkYWxtb25kOiAxNjc3MjA0NSxcbiAgICBibHVlOiAyNTUsXG4gICAgYmx1ZXZpb2xldDogOTA1NTIwMixcbiAgICBicm93bjogMTA4MjQyMzQsXG4gICAgYnVybHl3b29kOiAxNDU5NjIzMSxcbiAgICBjYWRldGJsdWU6IDYyNjY1MjgsXG4gICAgY2hhcnRyZXVzZTogODM4ODM1MixcbiAgICBjaG9jb2xhdGU6IDEzNzg5NDcwLFxuICAgIGNvcmFsOiAxNjc0NDI3MixcbiAgICBjb3JuZmxvd2VyYmx1ZTogNjU5MTk4MSxcbiAgICBjb3Juc2lsazogMTY3NzUzODgsXG4gICAgY3JpbXNvbjogMTQ0MjMxMDAsXG4gICAgY3lhbjogNjU1MzUsXG4gICAgZGFya2JsdWU6IDEzOSxcbiAgICBkYXJrY3lhbjogMzU3MjMsXG4gICAgZGFya2dvbGRlbnJvZDogMTIwOTI5MzksXG4gICAgZGFya2dyYXk6IDExMTE5MDE3LFxuICAgIGRhcmtncmVlbjogMjU2MDAsXG4gICAgZGFya2dyZXk6IDExMTE5MDE3LFxuICAgIGRhcmtraGFraTogMTI0MzMyNTksXG4gICAgZGFya21hZ2VudGE6IDkxMDk2NDMsXG4gICAgZGFya29saXZlZ3JlZW46IDU1OTc5OTksXG4gICAgZGFya29yYW5nZTogMTY3NDc1MjAsXG4gICAgZGFya29yY2hpZDogMTAwNDAwMTIsXG4gICAgZGFya3JlZDogOTEwOTUwNCxcbiAgICBkYXJrc2FsbW9uOiAxNTMwODQxMCxcbiAgICBkYXJrc2VhZ3JlZW46IDk0MTk5MTksXG4gICAgZGFya3NsYXRlYmx1ZTogNDczNDM0NyxcbiAgICBkYXJrc2xhdGVncmF5OiAzMTAwNDk1LFxuICAgIGRhcmtzbGF0ZWdyZXk6IDMxMDA0OTUsXG4gICAgZGFya3R1cnF1b2lzZTogNTI5NDUsXG4gICAgZGFya3Zpb2xldDogOTY5OTUzOSxcbiAgICBkZWVwcGluazogMTY3MTY5NDcsXG4gICAgZGVlcHNreWJsdWU6IDQ5MTUxLFxuICAgIGRpbWdyYXk6IDY5MDgyNjUsXG4gICAgZGltZ3JleTogNjkwODI2NSxcbiAgICBkb2RnZXJibHVlOiAyMDAzMTk5LFxuICAgIGZpcmVicmljazogMTE2NzQxNDYsXG4gICAgZmxvcmFsd2hpdGU6IDE2Nzc1OTIwLFxuICAgIGZvcmVzdGdyZWVuOiAyMjYzODQyLFxuICAgIGZ1Y2hzaWE6IDE2NzExOTM1LFxuICAgIGdhaW5zYm9ybzogMTQ0NzQ0NjAsXG4gICAgZ2hvc3R3aGl0ZTogMTYzMTY2NzEsXG4gICAgZ29sZDogMTY3NjY3MjAsXG4gICAgZ29sZGVucm9kOiAxNDMyOTEyMCxcbiAgICBncmF5OiA4NDIxNTA0LFxuICAgIGdyZWVuOiAzMjc2OCxcbiAgICBncmVlbnllbGxvdzogMTE0MDMwNTUsXG4gICAgZ3JleTogODQyMTUwNCxcbiAgICBob25leWRldzogMTU3OTQxNjAsXG4gICAgaG90cGluazogMTY3Mzg3NDAsXG4gICAgaW5kaWFucmVkOiAxMzQ1ODUyNCxcbiAgICBpbmRpZ286IDQ5MTUzMzAsXG4gICAgaXZvcnk6IDE2Nzc3MjAwLFxuICAgIGtoYWtpOiAxNTc4NzY2MCxcbiAgICBsYXZlbmRlcjogMTUxMzI0MTAsXG4gICAgbGF2ZW5kZXJibHVzaDogMTY3NzMzNjUsXG4gICAgbGF3bmdyZWVuOiA4MTkwOTc2LFxuICAgIGxlbW9uY2hpZmZvbjogMTY3NzU4ODUsXG4gICAgbGlnaHRibHVlOiAxMTM5MzI1NCxcbiAgICBsaWdodGNvcmFsOiAxNTc2MTUzNixcbiAgICBsaWdodGN5YW46IDE0NzQ1NTk5LFxuICAgIGxpZ2h0Z29sZGVucm9keWVsbG93OiAxNjQ0ODIxMCxcbiAgICBsaWdodGdyYXk6IDEzODgyMzIzLFxuICAgIGxpZ2h0Z3JlZW46IDk0OTgyNTYsXG4gICAgbGlnaHRncmV5OiAxMzg4MjMyMyxcbiAgICBsaWdodHBpbms6IDE2NzU4NDY1LFxuICAgIGxpZ2h0c2FsbW9uOiAxNjc1Mjc2MixcbiAgICBsaWdodHNlYWdyZWVuOiAyMTQyODkwLFxuICAgIGxpZ2h0c2t5Ymx1ZTogODkwMDM0NixcbiAgICBsaWdodHNsYXRlZ3JheTogNzgzMzc1MyxcbiAgICBsaWdodHNsYXRlZ3JleTogNzgzMzc1MyxcbiAgICBsaWdodHN0ZWVsYmx1ZTogMTE1ODQ3MzQsXG4gICAgbGlnaHR5ZWxsb3c6IDE2Nzc3MTg0LFxuICAgIGxpbWU6IDY1MjgwLFxuICAgIGxpbWVncmVlbjogMzMyOTMzMCxcbiAgICBsaW5lbjogMTY0NDU2NzAsXG4gICAgbWFnZW50YTogMTY3MTE5MzUsXG4gICAgbWFyb29uOiA4Mzg4NjA4LFxuICAgIG1lZGl1bWFxdWFtYXJpbmU6IDY3MzczMjIsXG4gICAgbWVkaXVtYmx1ZTogMjA1LFxuICAgIG1lZGl1bW9yY2hpZDogMTIyMTE2NjcsXG4gICAgbWVkaXVtcHVycGxlOiA5NjYyNjgzLFxuICAgIG1lZGl1bXNlYWdyZWVuOiAzOTc4MDk3LFxuICAgIG1lZGl1bXNsYXRlYmx1ZTogODA4Nzc5MCxcbiAgICBtZWRpdW1zcHJpbmdncmVlbjogNjQxNTQsXG4gICAgbWVkaXVtdHVycXVvaXNlOiA0NzcyMzAwLFxuICAgIG1lZGl1bXZpb2xldHJlZDogMTMwNDcxNzMsXG4gICAgbWlkbmlnaHRibHVlOiAxNjQ0OTEyLFxuICAgIG1pbnRjcmVhbTogMTYxMjE4NTAsXG4gICAgbWlzdHlyb3NlOiAxNjc3MDI3MyxcbiAgICBtb2NjYXNpbjogMTY3NzAyMjksXG4gICAgbmF2YWpvd2hpdGU6IDE2NzY4Njg1LFxuICAgIG5hdnk6IDEyOCxcbiAgICBvbGRsYWNlOiAxNjY0MzU1OCxcbiAgICBvbGl2ZTogODQyMTM3NixcbiAgICBvbGl2ZWRyYWI6IDcwNDg3MzksXG4gICAgb3JhbmdlOiAxNjc1MzkyMCxcbiAgICBvcmFuZ2VyZWQ6IDE2NzI5MzQ0LFxuICAgIG9yY2hpZDogMTQzMTU3MzQsXG4gICAgcGFsZWdvbGRlbnJvZDogMTU2NTcxMzAsXG4gICAgcGFsZWdyZWVuOiAxMDAyNTg4MCxcbiAgICBwYWxldHVycXVvaXNlOiAxMTUyOTk2NixcbiAgICBwYWxldmlvbGV0cmVkOiAxNDM4MTIwMyxcbiAgICBwYXBheWF3aGlwOiAxNjc3MzA3NyxcbiAgICBwZWFjaHB1ZmY6IDE2NzY3NjczLFxuICAgIHBlcnU6IDEzNDY4OTkxLFxuICAgIHBpbms6IDE2NzYxMDM1LFxuICAgIHBsdW06IDE0NTI0NjM3LFxuICAgIHBvd2RlcmJsdWU6IDExNTkxOTEwLFxuICAgIHB1cnBsZTogODM4ODczNixcbiAgICByZWJlY2NhcHVycGxlOiA2Njk3ODgxLFxuICAgIHJlZDogMTY3MTE2ODAsXG4gICAgcm9zeWJyb3duOiAxMjM1NzUxOSxcbiAgICByb3lhbGJsdWU6IDQyODY5NDUsXG4gICAgc2FkZGxlYnJvd246IDkxMjcxODcsXG4gICAgc2FsbW9uOiAxNjQxNjg4MixcbiAgICBzYW5keWJyb3duOiAxNjAzMjg2NCxcbiAgICBzZWFncmVlbjogMzA1MDMyNyxcbiAgICBzZWFzaGVsbDogMTY3NzQ2MzgsXG4gICAgc2llbm5hOiAxMDUwNjc5NyxcbiAgICBzaWx2ZXI6IDEyNjMyMjU2LFxuICAgIHNreWJsdWU6IDg5MDAzMzEsXG4gICAgc2xhdGVibHVlOiA2OTcwMDYxLFxuICAgIHNsYXRlZ3JheTogNzM3Mjk0NCxcbiAgICBzbGF0ZWdyZXk6IDczNzI5NDQsXG4gICAgc25vdzogMTY3NzU5MzAsXG4gICAgc3ByaW5nZ3JlZW46IDY1NDA3LFxuICAgIHN0ZWVsYmx1ZTogNDYyMDk4MCxcbiAgICB0YW46IDEzODA4NzgwLFxuICAgIHRlYWw6IDMyODk2LFxuICAgIHRoaXN0bGU6IDE0MjA0ODg4LFxuICAgIHRvbWF0bzogMTY3MzcwOTUsXG4gICAgdHVycXVvaXNlOiA0MjUxODU2LFxuICAgIHZpb2xldDogMTU2MzEwODYsXG4gICAgd2hlYXQ6IDE2MTEzMzMxLFxuICAgIHdoaXRlOiAxNjc3NzIxNSxcbiAgICB3aGl0ZXNtb2tlOiAxNjExOTI4NSxcbiAgICB5ZWxsb3c6IDE2Nzc2OTYwLFxuICAgIHllbGxvd2dyZWVuOiAxMDE0NTA3NFxuICB9KTtcbiAgZDNfcmdiX25hbWVzLmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIGQzX3JnYl9uYW1lcy5zZXQoa2V5LCBkM19yZ2JOdW1iZXIodmFsdWUpKTtcbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX2Z1bmN0b3Iodikge1xuICAgIHJldHVybiB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdiA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHY7XG4gICAgfTtcbiAgfVxuICBkMy5mdW5jdG9yID0gZDNfZnVuY3RvcjtcbiAgZDMueGhyID0gZDNfeGhyVHlwZShkM19pZGVudGl0eSk7XG4gIGZ1bmN0aW9uIGQzX3hoclR5cGUocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odXJsLCBtaW1lVHlwZSwgY2FsbGJhY2spIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBtaW1lVHlwZSA9PT0gXCJmdW5jdGlvblwiKSBjYWxsYmFjayA9IG1pbWVUeXBlLCBcbiAgICAgIG1pbWVUeXBlID0gbnVsbDtcbiAgICAgIHJldHVybiBkM194aHIodXJsLCBtaW1lVHlwZSwgcmVzcG9uc2UsIGNhbGxiYWNrKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3hocih1cmwsIG1pbWVUeXBlLCByZXNwb25zZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgeGhyID0ge30sIGRpc3BhdGNoID0gZDMuZGlzcGF0Y2goXCJiZWZvcmVzZW5kXCIsIFwicHJvZ3Jlc3NcIiwgXCJsb2FkXCIsIFwiZXJyb3JcIiksIGhlYWRlcnMgPSB7fSwgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpLCByZXNwb25zZVR5cGUgPSBudWxsO1xuICAgIGlmICh0aGlzLlhEb21haW5SZXF1ZXN0ICYmICEoXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiByZXF1ZXN0KSAmJiAvXihodHRwKHMpPzopP1xcL1xcLy8udGVzdCh1cmwpKSByZXF1ZXN0ID0gbmV3IFhEb21haW5SZXF1ZXN0KCk7XG4gICAgXCJvbmxvYWRcIiBpbiByZXF1ZXN0ID8gcmVxdWVzdC5vbmxvYWQgPSByZXF1ZXN0Lm9uZXJyb3IgPSByZXNwb25kIDogcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlcXVlc3QucmVhZHlTdGF0ZSA+IDMgJiYgcmVzcG9uZCgpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gcmVzcG9uZCgpIHtcbiAgICAgIHZhciBzdGF0dXMgPSByZXF1ZXN0LnN0YXR1cywgcmVzdWx0O1xuICAgICAgaWYgKCFzdGF0dXMgJiYgZDNfeGhySGFzUmVzcG9uc2UocmVxdWVzdCkgfHwgc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICByZXN1bHQgPSByZXNwb25zZS5jYWxsKHhociwgcmVxdWVzdCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkaXNwYXRjaC5lcnJvci5jYWxsKHhociwgZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGRpc3BhdGNoLmxvYWQuY2FsbCh4aHIsIHJlc3VsdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXNwYXRjaC5lcnJvci5jYWxsKHhociwgcmVxdWVzdCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlcXVlc3Qub25wcm9ncmVzcyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICB2YXIgbyA9IGQzLmV2ZW50O1xuICAgICAgZDMuZXZlbnQgPSBldmVudDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRpc3BhdGNoLnByb2dyZXNzLmNhbGwoeGhyLCByZXF1ZXN0KTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzLmV2ZW50ID0gbztcbiAgICAgIH1cbiAgICB9O1xuICAgIHhoci5oZWFkZXIgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgbmFtZSA9IChuYW1lICsgXCJcIikudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIGhlYWRlcnNbbmFtZV07XG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkgZGVsZXRlIGhlYWRlcnNbbmFtZV07IGVsc2UgaGVhZGVyc1tuYW1lXSA9IHZhbHVlICsgXCJcIjtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIubWltZVR5cGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbWltZVR5cGU7XG4gICAgICBtaW1lVHlwZSA9IHZhbHVlID09IG51bGwgPyBudWxsIDogdmFsdWUgKyBcIlwiO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIHhoci5yZXNwb25zZVR5cGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmVzcG9uc2VUeXBlO1xuICAgICAgcmVzcG9uc2VUeXBlID0gdmFsdWU7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgeGhyLnJlc3BvbnNlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJlc3BvbnNlID0gdmFsdWU7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgWyBcImdldFwiLCBcInBvc3RcIiBdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICB4aHJbbWV0aG9kXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4geGhyLnNlbmQuYXBwbHkoeGhyLCBbIG1ldGhvZCBdLmNvbmNhdChkM19hcnJheShhcmd1bWVudHMpKSk7XG4gICAgICB9O1xuICAgIH0pO1xuICAgIHhoci5zZW5kID0gZnVuY3Rpb24obWV0aG9kLCBkYXRhLCBjYWxsYmFjaykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIGRhdGEgPT09IFwiZnVuY3Rpb25cIikgY2FsbGJhY2sgPSBkYXRhLCBkYXRhID0gbnVsbDtcbiAgICAgIHJlcXVlc3Qub3BlbihtZXRob2QsIHVybCwgdHJ1ZSk7XG4gICAgICBpZiAobWltZVR5cGUgIT0gbnVsbCAmJiAhKFwiYWNjZXB0XCIgaW4gaGVhZGVycykpIGhlYWRlcnNbXCJhY2NlcHRcIl0gPSBtaW1lVHlwZSArIFwiLCovKlwiO1xuICAgICAgaWYgKHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcikgZm9yICh2YXIgbmFtZSBpbiBoZWFkZXJzKSByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIobmFtZSwgaGVhZGVyc1tuYW1lXSk7XG4gICAgICBpZiAobWltZVR5cGUgIT0gbnVsbCAmJiByZXF1ZXN0Lm92ZXJyaWRlTWltZVR5cGUpIHJlcXVlc3Qub3ZlcnJpZGVNaW1lVHlwZShtaW1lVHlwZSk7XG4gICAgICBpZiAocmVzcG9uc2VUeXBlICE9IG51bGwpIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gcmVzcG9uc2VUeXBlO1xuICAgICAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHhoci5vbihcImVycm9yXCIsIGNhbGxiYWNrKS5vbihcImxvYWRcIiwgZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICBjYWxsYmFjayhudWxsLCByZXF1ZXN0KTtcbiAgICAgIH0pO1xuICAgICAgZGlzcGF0Y2guYmVmb3Jlc2VuZC5jYWxsKHhociwgcmVxdWVzdCk7XG4gICAgICByZXF1ZXN0LnNlbmQoZGF0YSA9PSBudWxsID8gbnVsbCA6IGRhdGEpO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIHhoci5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIGQzLnJlYmluZCh4aHIsIGRpc3BhdGNoLCBcIm9uXCIpO1xuICAgIHJldHVybiBjYWxsYmFjayA9PSBudWxsID8geGhyIDogeGhyLmdldChkM194aHJfZml4Q2FsbGJhY2soY2FsbGJhY2spKTtcbiAgfVxuICBmdW5jdGlvbiBkM194aHJfZml4Q2FsbGJhY2soY2FsbGJhY2spIHtcbiAgICByZXR1cm4gY2FsbGJhY2subGVuZ3RoID09PSAxID8gZnVuY3Rpb24oZXJyb3IsIHJlcXVlc3QpIHtcbiAgICAgIGNhbGxiYWNrKGVycm9yID09IG51bGwgPyByZXF1ZXN0IDogbnVsbCk7XG4gICAgfSA6IGNhbGxiYWNrO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3hockhhc1Jlc3BvbnNlKHJlcXVlc3QpIHtcbiAgICB2YXIgdHlwZSA9IHJlcXVlc3QucmVzcG9uc2VUeXBlO1xuICAgIHJldHVybiB0eXBlICYmIHR5cGUgIT09IFwidGV4dFwiID8gcmVxdWVzdC5yZXNwb25zZSA6IHJlcXVlc3QucmVzcG9uc2VUZXh0O1xuICB9XG4gIGQzLmRzdiA9IGZ1bmN0aW9uKGRlbGltaXRlciwgbWltZVR5cGUpIHtcbiAgICB2YXIgcmVGb3JtYXQgPSBuZXcgUmVnRXhwKCdbXCInICsgZGVsaW1pdGVyICsgXCJcXG5dXCIpLCBkZWxpbWl0ZXJDb2RlID0gZGVsaW1pdGVyLmNoYXJDb2RlQXQoMCk7XG4gICAgZnVuY3Rpb24gZHN2KHVybCwgcm93LCBjYWxsYmFjaykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBjYWxsYmFjayA9IHJvdywgcm93ID0gbnVsbDtcbiAgICAgIHZhciB4aHIgPSBkM194aHIodXJsLCBtaW1lVHlwZSwgcm93ID09IG51bGwgPyByZXNwb25zZSA6IHR5cGVkUmVzcG9uc2Uocm93KSwgY2FsbGJhY2spO1xuICAgICAgeGhyLnJvdyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB4aHIucmVzcG9uc2UoKHJvdyA9IF8pID09IG51bGwgPyByZXNwb25zZSA6IHR5cGVkUmVzcG9uc2UoXykpIDogcm93O1xuICAgICAgfTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc3BvbnNlKHJlcXVlc3QpIHtcbiAgICAgIHJldHVybiBkc3YucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0eXBlZFJlc3BvbnNlKGYpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybiBkc3YucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQsIGYpO1xuICAgICAgfTtcbiAgICB9XG4gICAgZHN2LnBhcnNlID0gZnVuY3Rpb24odGV4dCwgZikge1xuICAgICAgdmFyIG87XG4gICAgICByZXR1cm4gZHN2LnBhcnNlUm93cyh0ZXh0LCBmdW5jdGlvbihyb3csIGkpIHtcbiAgICAgICAgaWYgKG8pIHJldHVybiBvKHJvdywgaSAtIDEpO1xuICAgICAgICB2YXIgYSA9IG5ldyBGdW5jdGlvbihcImRcIiwgXCJyZXR1cm4ge1wiICsgcm93Lm1hcChmdW5jdGlvbihuYW1lLCBpKSB7XG4gICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG5hbWUpICsgXCI6IGRbXCIgKyBpICsgXCJdXCI7XG4gICAgICAgIH0pLmpvaW4oXCIsXCIpICsgXCJ9XCIpO1xuICAgICAgICBvID0gZiA/IGZ1bmN0aW9uKHJvdywgaSkge1xuICAgICAgICAgIHJldHVybiBmKGEocm93KSwgaSk7XG4gICAgICAgIH0gOiBhO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBkc3YucGFyc2VSb3dzID0gZnVuY3Rpb24odGV4dCwgZikge1xuICAgICAgdmFyIEVPTCA9IHt9LCBFT0YgPSB7fSwgcm93cyA9IFtdLCBOID0gdGV4dC5sZW5ndGgsIEkgPSAwLCBuID0gMCwgdCwgZW9sO1xuICAgICAgZnVuY3Rpb24gdG9rZW4oKSB7XG4gICAgICAgIGlmIChJID49IE4pIHJldHVybiBFT0Y7XG4gICAgICAgIGlmIChlb2wpIHJldHVybiBlb2wgPSBmYWxzZSwgRU9MO1xuICAgICAgICB2YXIgaiA9IEk7XG4gICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoaikgPT09IDM0KSB7XG4gICAgICAgICAgdmFyIGkgPSBqO1xuICAgICAgICAgIHdoaWxlIChpKysgPCBOKSB7XG4gICAgICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGkpID09PSAzNCkge1xuICAgICAgICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGkgKyAxKSAhPT0gMzQpIGJyZWFrO1xuICAgICAgICAgICAgICArK2k7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIEkgPSBpICsgMjtcbiAgICAgICAgICB2YXIgYyA9IHRleHQuY2hhckNvZGVBdChpICsgMSk7XG4gICAgICAgICAgaWYgKGMgPT09IDEzKSB7XG4gICAgICAgICAgICBlb2wgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChpICsgMikgPT09IDEwKSArK0k7XG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAxMCkge1xuICAgICAgICAgICAgZW9sID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRleHQuc2xpY2UoaiArIDEsIGkpLnJlcGxhY2UoL1wiXCIvZywgJ1wiJyk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKEkgPCBOKSB7XG4gICAgICAgICAgdmFyIGMgPSB0ZXh0LmNoYXJDb2RlQXQoSSsrKSwgayA9IDE7XG4gICAgICAgICAgaWYgKGMgPT09IDEwKSBlb2wgPSB0cnVlOyBlbHNlIGlmIChjID09PSAxMykge1xuICAgICAgICAgICAgZW9sID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoSSkgPT09IDEwKSArK0ksICsraztcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgIT09IGRlbGltaXRlckNvZGUpIGNvbnRpbnVlO1xuICAgICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGosIEkgLSBrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqKTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICgodCA9IHRva2VuKCkpICE9PSBFT0YpIHtcbiAgICAgICAgdmFyIGEgPSBbXTtcbiAgICAgICAgd2hpbGUgKHQgIT09IEVPTCAmJiB0ICE9PSBFT0YpIHtcbiAgICAgICAgICBhLnB1c2godCk7XG4gICAgICAgICAgdCA9IHRva2VuKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGYgJiYgKGEgPSBmKGEsIG4rKykpID09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgICByb3dzLnB1c2goYSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm93cztcbiAgICB9O1xuICAgIGRzdi5mb3JtYXQgPSBmdW5jdGlvbihyb3dzKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShyb3dzWzBdKSkgcmV0dXJuIGRzdi5mb3JtYXRSb3dzKHJvd3MpO1xuICAgICAgdmFyIGZpZWxkU2V0ID0gbmV3IGQzX1NldCgpLCBmaWVsZHMgPSBbXTtcbiAgICAgIHJvd3MuZm9yRWFjaChmdW5jdGlvbihyb3cpIHtcbiAgICAgICAgZm9yICh2YXIgZmllbGQgaW4gcm93KSB7XG4gICAgICAgICAgaWYgKCFmaWVsZFNldC5oYXMoZmllbGQpKSB7XG4gICAgICAgICAgICBmaWVsZHMucHVzaChmaWVsZFNldC5hZGQoZmllbGQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIFsgZmllbGRzLm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpIF0uY29uY2F0KHJvd3MubWFwKGZ1bmN0aW9uKHJvdykge1xuICAgICAgICByZXR1cm4gZmllbGRzLm1hcChmdW5jdGlvbihmaWVsZCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXRWYWx1ZShyb3dbZmllbGRdKTtcbiAgICAgICAgfSkuam9pbihkZWxpbWl0ZXIpO1xuICAgICAgfSkpLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbiAgICBkc3YuZm9ybWF0Um93cyA9IGZ1bmN0aW9uKHJvd3MpIHtcbiAgICAgIHJldHVybiByb3dzLm1hcChmb3JtYXRSb3cpLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBmb3JtYXRSb3cocm93KSB7XG4gICAgICByZXR1cm4gcm93Lm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb3JtYXRWYWx1ZSh0ZXh0KSB7XG4gICAgICByZXR1cm4gcmVGb3JtYXQudGVzdCh0ZXh0KSA/ICdcIicgKyB0ZXh0LnJlcGxhY2UoL1xcXCIvZywgJ1wiXCInKSArICdcIicgOiB0ZXh0O1xuICAgIH1cbiAgICByZXR1cm4gZHN2O1xuICB9O1xuICBkMy5jc3YgPSBkMy5kc3YoXCIsXCIsIFwidGV4dC9jc3ZcIik7XG4gIGQzLnRzdiA9IGQzLmRzdihcIlx0XCIsIFwidGV4dC90YWItc2VwYXJhdGVkLXZhbHVlc1wiKTtcbiAgdmFyIGQzX3RpbWVyX3F1ZXVlSGVhZCwgZDNfdGltZXJfcXVldWVUYWlsLCBkM190aW1lcl9pbnRlcnZhbCwgZDNfdGltZXJfdGltZW91dCwgZDNfdGltZXJfZnJhbWUgPSB0aGlzW2QzX3ZlbmRvclN5bWJvbCh0aGlzLCBcInJlcXVlc3RBbmltYXRpb25GcmFtZVwiKV0gfHwgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCAxNyk7XG4gIH07XG4gIGQzLnRpbWVyID0gZnVuY3Rpb24oKSB7XG4gICAgZDNfdGltZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdGltZXIoY2FsbGJhY2ssIGRlbGF5LCB0aGVuKSB7XG4gICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGlmIChuIDwgMikgZGVsYXkgPSAwO1xuICAgIGlmIChuIDwgMykgdGhlbiA9IERhdGUubm93KCk7XG4gICAgdmFyIHRpbWUgPSB0aGVuICsgZGVsYXksIHRpbWVyID0ge1xuICAgICAgYzogY2FsbGJhY2ssXG4gICAgICB0OiB0aW1lLFxuICAgICAgbjogbnVsbFxuICAgIH07XG4gICAgaWYgKGQzX3RpbWVyX3F1ZXVlVGFpbCkgZDNfdGltZXJfcXVldWVUYWlsLm4gPSB0aW1lcjsgZWxzZSBkM190aW1lcl9xdWV1ZUhlYWQgPSB0aW1lcjtcbiAgICBkM190aW1lcl9xdWV1ZVRhaWwgPSB0aW1lcjtcbiAgICBpZiAoIWQzX3RpbWVyX2ludGVydmFsKSB7XG4gICAgICBkM190aW1lcl90aW1lb3V0ID0gY2xlYXJUaW1lb3V0KGQzX3RpbWVyX3RpbWVvdXQpO1xuICAgICAgZDNfdGltZXJfaW50ZXJ2YWwgPSAxO1xuICAgICAgZDNfdGltZXJfZnJhbWUoZDNfdGltZXJfc3RlcCk7XG4gICAgfVxuICAgIHJldHVybiB0aW1lcjtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lcl9zdGVwKCkge1xuICAgIHZhciBub3cgPSBkM190aW1lcl9tYXJrKCksIGRlbGF5ID0gZDNfdGltZXJfc3dlZXAoKSAtIG5vdztcbiAgICBpZiAoZGVsYXkgPiAyNCkge1xuICAgICAgaWYgKGlzRmluaXRlKGRlbGF5KSkge1xuICAgICAgICBjbGVhclRpbWVvdXQoZDNfdGltZXJfdGltZW91dCk7XG4gICAgICAgIGQzX3RpbWVyX3RpbWVvdXQgPSBzZXRUaW1lb3V0KGQzX3RpbWVyX3N0ZXAsIGRlbGF5KTtcbiAgICAgIH1cbiAgICAgIGQzX3RpbWVyX2ludGVydmFsID0gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgZDNfdGltZXJfaW50ZXJ2YWwgPSAxO1xuICAgICAgZDNfdGltZXJfZnJhbWUoZDNfdGltZXJfc3RlcCk7XG4gICAgfVxuICB9XG4gIGQzLnRpbWVyLmZsdXNoID0gZnVuY3Rpb24oKSB7XG4gICAgZDNfdGltZXJfbWFyaygpO1xuICAgIGQzX3RpbWVyX3N3ZWVwKCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RpbWVyX21hcmsoKSB7XG4gICAgdmFyIG5vdyA9IERhdGUubm93KCksIHRpbWVyID0gZDNfdGltZXJfcXVldWVIZWFkO1xuICAgIHdoaWxlICh0aW1lcikge1xuICAgICAgaWYgKG5vdyA+PSB0aW1lci50ICYmIHRpbWVyLmMobm93IC0gdGltZXIudCkpIHRpbWVyLmMgPSBudWxsO1xuICAgICAgdGltZXIgPSB0aW1lci5uO1xuICAgIH1cbiAgICByZXR1cm4gbm93O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVyX3N3ZWVwKCkge1xuICAgIHZhciB0MCwgdDEgPSBkM190aW1lcl9xdWV1ZUhlYWQsIHRpbWUgPSBJbmZpbml0eTtcbiAgICB3aGlsZSAodDEpIHtcbiAgICAgIGlmICh0MS5jKSB7XG4gICAgICAgIGlmICh0MS50IDwgdGltZSkgdGltZSA9IHQxLnQ7XG4gICAgICAgIHQxID0gKHQwID0gdDEpLm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0MSA9IHQwID8gdDAubiA9IHQxLm4gOiBkM190aW1lcl9xdWV1ZUhlYWQgPSB0MS5uO1xuICAgICAgfVxuICAgIH1cbiAgICBkM190aW1lcl9xdWV1ZVRhaWwgPSB0MDtcbiAgICByZXR1cm4gdGltZTtcbiAgfVxuICBmdW5jdGlvbiBkM19mb3JtYXRfcHJlY2lzaW9uKHgsIHApIHtcbiAgICByZXR1cm4gcCAtICh4ID8gTWF0aC5jZWlsKE1hdGgubG9nKHgpIC8gTWF0aC5MTjEwKSA6IDEpO1xuICB9XG4gIGQzLnJvdW5kID0gZnVuY3Rpb24oeCwgbikge1xuICAgIHJldHVybiBuID8gTWF0aC5yb3VuZCh4ICogKG4gPSBNYXRoLnBvdygxMCwgbikpKSAvIG4gOiBNYXRoLnJvdW5kKHgpO1xuICB9O1xuICB2YXIgZDNfZm9ybWF0UHJlZml4ZXMgPSBbIFwieVwiLCBcInpcIiwgXCJhXCIsIFwiZlwiLCBcInBcIiwgXCJuXCIsIFwiwrVcIiwgXCJtXCIsIFwiXCIsIFwia1wiLCBcIk1cIiwgXCJHXCIsIFwiVFwiLCBcIlBcIiwgXCJFXCIsIFwiWlwiLCBcIllcIiBdLm1hcChkM19mb3JtYXRQcmVmaXgpO1xuICBkMy5mb3JtYXRQcmVmaXggPSBmdW5jdGlvbih2YWx1ZSwgcHJlY2lzaW9uKSB7XG4gICAgdmFyIGkgPSAwO1xuICAgIGlmICh2YWx1ZSA9ICt2YWx1ZSkge1xuICAgICAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgKj0gLTE7XG4gICAgICBpZiAocHJlY2lzaW9uKSB2YWx1ZSA9IGQzLnJvdW5kKHZhbHVlLCBkM19mb3JtYXRfcHJlY2lzaW9uKHZhbHVlLCBwcmVjaXNpb24pKTtcbiAgICAgIGkgPSAxICsgTWF0aC5mbG9vcigxZS0xMiArIE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4xMCk7XG4gICAgICBpID0gTWF0aC5tYXgoLTI0LCBNYXRoLm1pbigyNCwgTWF0aC5mbG9vcigoaSAtIDEpIC8gMykgKiAzKSk7XG4gICAgfVxuICAgIHJldHVybiBkM19mb3JtYXRQcmVmaXhlc1s4ICsgaSAvIDNdO1xuICB9O1xuICBmdW5jdGlvbiBkM19mb3JtYXRQcmVmaXgoZCwgaSkge1xuICAgIHZhciBrID0gTWF0aC5wb3coMTAsIGFicyg4IC0gaSkgKiAzKTtcbiAgICByZXR1cm4ge1xuICAgICAgc2NhbGU6IGkgPiA4ID8gZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gZCAvIGs7XG4gICAgICB9IDogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gZCAqIGs7XG4gICAgICB9LFxuICAgICAgc3ltYm9sOiBkXG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19sb2NhbGVfbnVtYmVyRm9ybWF0KGxvY2FsZSkge1xuICAgIHZhciBsb2NhbGVfZGVjaW1hbCA9IGxvY2FsZS5kZWNpbWFsLCBsb2NhbGVfdGhvdXNhbmRzID0gbG9jYWxlLnRob3VzYW5kcywgbG9jYWxlX2dyb3VwaW5nID0gbG9jYWxlLmdyb3VwaW5nLCBsb2NhbGVfY3VycmVuY3kgPSBsb2NhbGUuY3VycmVuY3ksIGZvcm1hdEdyb3VwID0gbG9jYWxlX2dyb3VwaW5nICYmIGxvY2FsZV90aG91c2FuZHMgPyBmdW5jdGlvbih2YWx1ZSwgd2lkdGgpIHtcbiAgICAgIHZhciBpID0gdmFsdWUubGVuZ3RoLCB0ID0gW10sIGogPSAwLCBnID0gbG9jYWxlX2dyb3VwaW5nWzBdLCBsZW5ndGggPSAwO1xuICAgICAgd2hpbGUgKGkgPiAwICYmIGcgPiAwKSB7XG4gICAgICAgIGlmIChsZW5ndGggKyBnICsgMSA+IHdpZHRoKSBnID0gTWF0aC5tYXgoMSwgd2lkdGggLSBsZW5ndGgpO1xuICAgICAgICB0LnB1c2godmFsdWUuc3Vic3RyaW5nKGkgLT0gZywgaSArIGcpKTtcbiAgICAgICAgaWYgKChsZW5ndGggKz0gZyArIDEpID4gd2lkdGgpIGJyZWFrO1xuICAgICAgICBnID0gbG9jYWxlX2dyb3VwaW5nW2ogPSAoaiArIDEpICUgbG9jYWxlX2dyb3VwaW5nLmxlbmd0aF07XG4gICAgICB9XG4gICAgICByZXR1cm4gdC5yZXZlcnNlKCkuam9pbihsb2NhbGVfdGhvdXNhbmRzKTtcbiAgICB9IDogZDNfaWRlbnRpdHk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIG1hdGNoID0gZDNfZm9ybWF0X3JlLmV4ZWMoc3BlY2lmaWVyKSwgZmlsbCA9IG1hdGNoWzFdIHx8IFwiIFwiLCBhbGlnbiA9IG1hdGNoWzJdIHx8IFwiPlwiLCBzaWduID0gbWF0Y2hbM10gfHwgXCItXCIsIHN5bWJvbCA9IG1hdGNoWzRdIHx8IFwiXCIsIHpmaWxsID0gbWF0Y2hbNV0sIHdpZHRoID0gK21hdGNoWzZdLCBjb21tYSA9IG1hdGNoWzddLCBwcmVjaXNpb24gPSBtYXRjaFs4XSwgdHlwZSA9IG1hdGNoWzldLCBzY2FsZSA9IDEsIHByZWZpeCA9IFwiXCIsIHN1ZmZpeCA9IFwiXCIsIGludGVnZXIgPSBmYWxzZSwgZXhwb25lbnQgPSB0cnVlO1xuICAgICAgaWYgKHByZWNpc2lvbikgcHJlY2lzaW9uID0gK3ByZWNpc2lvbi5zdWJzdHJpbmcoMSk7XG4gICAgICBpZiAoemZpbGwgfHwgZmlsbCA9PT0gXCIwXCIgJiYgYWxpZ24gPT09IFwiPVwiKSB7XG4gICAgICAgIHpmaWxsID0gZmlsbCA9IFwiMFwiO1xuICAgICAgICBhbGlnbiA9IFwiPVwiO1xuICAgICAgfVxuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgY2FzZSBcIm5cIjpcbiAgICAgICAgY29tbWEgPSB0cnVlO1xuICAgICAgICB0eXBlID0gXCJnXCI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcIiVcIjpcbiAgICAgICAgc2NhbGUgPSAxMDA7XG4gICAgICAgIHN1ZmZpeCA9IFwiJVwiO1xuICAgICAgICB0eXBlID0gXCJmXCI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcInBcIjpcbiAgICAgICAgc2NhbGUgPSAxMDA7XG4gICAgICAgIHN1ZmZpeCA9IFwiJVwiO1xuICAgICAgICB0eXBlID0gXCJyXCI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcImJcIjpcbiAgICAgICBjYXNlIFwib1wiOlxuICAgICAgIGNhc2UgXCJ4XCI6XG4gICAgICAgY2FzZSBcIlhcIjpcbiAgICAgICAgaWYgKHN5bWJvbCA9PT0gXCIjXCIpIHByZWZpeCA9IFwiMFwiICsgdHlwZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgY2FzZSBcImNcIjpcbiAgICAgICAgZXhwb25lbnQgPSBmYWxzZTtcblxuICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgIGludGVnZXIgPSB0cnVlO1xuICAgICAgICBwcmVjaXNpb24gPSAwO1xuICAgICAgICBicmVhaztcblxuICAgICAgIGNhc2UgXCJzXCI6XG4gICAgICAgIHNjYWxlID0gLTE7XG4gICAgICAgIHR5cGUgPSBcInJcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBpZiAoc3ltYm9sID09PSBcIiRcIikgcHJlZml4ID0gbG9jYWxlX2N1cnJlbmN5WzBdLCBzdWZmaXggPSBsb2NhbGVfY3VycmVuY3lbMV07XG4gICAgICBpZiAodHlwZSA9PSBcInJcIiAmJiAhcHJlY2lzaW9uKSB0eXBlID0gXCJnXCI7XG4gICAgICBpZiAocHJlY2lzaW9uICE9IG51bGwpIHtcbiAgICAgICAgaWYgKHR5cGUgPT0gXCJnXCIpIHByZWNpc2lvbiA9IE1hdGgubWF4KDEsIE1hdGgubWluKDIxLCBwcmVjaXNpb24pKTsgZWxzZSBpZiAodHlwZSA9PSBcImVcIiB8fCB0eXBlID09IFwiZlwiKSBwcmVjaXNpb24gPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyMCwgcHJlY2lzaW9uKSk7XG4gICAgICB9XG4gICAgICB0eXBlID0gZDNfZm9ybWF0X3R5cGVzLmdldCh0eXBlKSB8fCBkM19mb3JtYXRfdHlwZURlZmF1bHQ7XG4gICAgICB2YXIgemNvbW1hID0gemZpbGwgJiYgY29tbWE7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgdmFyIGZ1bGxTdWZmaXggPSBzdWZmaXg7XG4gICAgICAgIGlmIChpbnRlZ2VyICYmIHZhbHVlICUgMSkgcmV0dXJuIFwiXCI7XG4gICAgICAgIHZhciBuZWdhdGl2ZSA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gKHZhbHVlID0gLXZhbHVlLCBcIi1cIikgOiBzaWduID09PSBcIi1cIiA/IFwiXCIgOiBzaWduO1xuICAgICAgICBpZiAoc2NhbGUgPCAwKSB7XG4gICAgICAgICAgdmFyIHVuaXQgPSBkMy5mb3JtYXRQcmVmaXgodmFsdWUsIHByZWNpc2lvbik7XG4gICAgICAgICAgdmFsdWUgPSB1bml0LnNjYWxlKHZhbHVlKTtcbiAgICAgICAgICBmdWxsU3VmZml4ID0gdW5pdC5zeW1ib2wgKyBzdWZmaXg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgKj0gc2NhbGU7XG4gICAgICAgIH1cbiAgICAgICAgdmFsdWUgPSB0eXBlKHZhbHVlLCBwcmVjaXNpb24pO1xuICAgICAgICB2YXIgaSA9IHZhbHVlLmxhc3RJbmRleE9mKFwiLlwiKSwgYmVmb3JlLCBhZnRlcjtcbiAgICAgICAgaWYgKGkgPCAwKSB7XG4gICAgICAgICAgdmFyIGogPSBleHBvbmVudCA/IHZhbHVlLmxhc3RJbmRleE9mKFwiZVwiKSA6IC0xO1xuICAgICAgICAgIGlmIChqIDwgMCkgYmVmb3JlID0gdmFsdWUsIGFmdGVyID0gXCJcIjsgZWxzZSBiZWZvcmUgPSB2YWx1ZS5zdWJzdHJpbmcoMCwgaiksIGFmdGVyID0gdmFsdWUuc3Vic3RyaW5nKGopO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJlZm9yZSA9IHZhbHVlLnN1YnN0cmluZygwLCBpKTtcbiAgICAgICAgICBhZnRlciA9IGxvY2FsZV9kZWNpbWFsICsgdmFsdWUuc3Vic3RyaW5nKGkgKyAxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXpmaWxsICYmIGNvbW1hKSBiZWZvcmUgPSBmb3JtYXRHcm91cChiZWZvcmUsIEluZmluaXR5KTtcbiAgICAgICAgdmFyIGxlbmd0aCA9IHByZWZpeC5sZW5ndGggKyBiZWZvcmUubGVuZ3RoICsgYWZ0ZXIubGVuZ3RoICsgKHpjb21tYSA/IDAgOiBuZWdhdGl2ZS5sZW5ndGgpLCBwYWRkaW5nID0gbGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkobGVuZ3RoID0gd2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpIDogXCJcIjtcbiAgICAgICAgaWYgKHpjb21tYSkgYmVmb3JlID0gZm9ybWF0R3JvdXAocGFkZGluZyArIGJlZm9yZSwgcGFkZGluZy5sZW5ndGggPyB3aWR0aCAtIGFmdGVyLmxlbmd0aCA6IEluZmluaXR5KTtcbiAgICAgICAgbmVnYXRpdmUgKz0gcHJlZml4O1xuICAgICAgICB2YWx1ZSA9IGJlZm9yZSArIGFmdGVyO1xuICAgICAgICByZXR1cm4gKGFsaWduID09PSBcIjxcIiA/IG5lZ2F0aXZlICsgdmFsdWUgKyBwYWRkaW5nIDogYWxpZ24gPT09IFwiPlwiID8gcGFkZGluZyArIG5lZ2F0aXZlICsgdmFsdWUgOiBhbGlnbiA9PT0gXCJeXCIgPyBwYWRkaW5nLnN1YnN0cmluZygwLCBsZW5ndGggPj49IDEpICsgbmVnYXRpdmUgKyB2YWx1ZSArIHBhZGRpbmcuc3Vic3RyaW5nKGxlbmd0aCkgOiBuZWdhdGl2ZSArICh6Y29tbWEgPyB2YWx1ZSA6IHBhZGRpbmcgKyB2YWx1ZSkpICsgZnVsbFN1ZmZpeDtcbiAgICAgIH07XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZm9ybWF0X3JlID0gLyg/OihbXntdKT8oWzw+PV5dKSk/KFsrXFwtIF0pPyhbJCNdKT8oMCk/KFxcZCspPygsKT8oXFwuLT9cXGQrKT8oW2EteiVdKT8vaTtcbiAgdmFyIGQzX2Zvcm1hdF90eXBlcyA9IGQzLm1hcCh7XG4gICAgYjogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHgudG9TdHJpbmcoMik7XG4gICAgfSxcbiAgICBjOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSh4KTtcbiAgICB9LFxuICAgIG86IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB4LnRvU3RyaW5nKDgpO1xuICAgIH0sXG4gICAgeDogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHgudG9TdHJpbmcoMTYpO1xuICAgIH0sXG4gICAgWDogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHgudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7XG4gICAgfSxcbiAgICBnOiBmdW5jdGlvbih4LCBwKSB7XG4gICAgICByZXR1cm4geC50b1ByZWNpc2lvbihwKTtcbiAgICB9LFxuICAgIGU6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiB4LnRvRXhwb25lbnRpYWwocCk7XG4gICAgfSxcbiAgICBmOiBmdW5jdGlvbih4LCBwKSB7XG4gICAgICByZXR1cm4geC50b0ZpeGVkKHApO1xuICAgIH0sXG4gICAgcjogZnVuY3Rpb24oeCwgcCkge1xuICAgICAgcmV0dXJuICh4ID0gZDMucm91bmQoeCwgZDNfZm9ybWF0X3ByZWNpc2lvbih4LCBwKSkpLnRvRml4ZWQoTWF0aC5tYXgoMCwgTWF0aC5taW4oMjAsIGQzX2Zvcm1hdF9wcmVjaXNpb24oeCAqICgxICsgMWUtMTUpLCBwKSkpKTtcbiAgICB9XG4gIH0pO1xuICBmdW5jdGlvbiBkM19mb3JtYXRfdHlwZURlZmF1bHQoeCkge1xuICAgIHJldHVybiB4ICsgXCJcIjtcbiAgfVxuICB2YXIgZDNfdGltZSA9IGQzLnRpbWUgPSB7fSwgZDNfZGF0ZSA9IERhdGU7XG4gIGZ1bmN0aW9uIGQzX2RhdGVfdXRjKCkge1xuICAgIHRoaXMuXyA9IG5ldyBEYXRlKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gRGF0ZS5VVEMuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGFyZ3VtZW50c1swXSk7XG4gIH1cbiAgZDNfZGF0ZV91dGMucHJvdG90eXBlID0ge1xuICAgIGdldERhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENEYXRlKCk7XG4gICAgfSxcbiAgICBnZXREYXk6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENEYXkoKTtcbiAgICB9LFxuICAgIGdldEZ1bGxZZWFyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDRnVsbFllYXIoKTtcbiAgICB9LFxuICAgIGdldEhvdXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDSG91cnMoKTtcbiAgICB9LFxuICAgIGdldE1pbGxpc2Vjb25kczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICAgIH0sXG4gICAgZ2V0TWludXRlczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ01pbnV0ZXMoKTtcbiAgICB9LFxuICAgIGdldE1vbnRoOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDTW9udGgoKTtcbiAgICB9LFxuICAgIGdldFNlY29uZHM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENTZWNvbmRzKCk7XG4gICAgfSxcbiAgICBnZXRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VGltZSgpO1xuICAgIH0sXG4gICAgZ2V0VGltZXpvbmVPZmZzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfSxcbiAgICB2YWx1ZU9mOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8udmFsdWVPZigpO1xuICAgIH0sXG4gICAgc2V0RGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENEYXRlLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldERheTogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENEYXkuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0RnVsbFllYXI6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDRnVsbFllYXIuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0SG91cnM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDSG91cnMuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0TWlsbGlzZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ01pbGxpc2Vjb25kcy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRNaW51dGVzOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ01pbnV0ZXMuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0TW9udGg6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDTW9udGguYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0U2Vjb25kczogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENTZWNvbmRzLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldFRpbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VGltZS5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9O1xuICB2YXIgZDNfdGltZV9wcm90b3R5cGUgPSBEYXRlLnByb3RvdHlwZTtcbiAgZnVuY3Rpb24gZDNfdGltZV9pbnRlcnZhbChsb2NhbCwgc3RlcCwgbnVtYmVyKSB7XG4gICAgZnVuY3Rpb24gcm91bmQoZGF0ZSkge1xuICAgICAgdmFyIGQwID0gbG9jYWwoZGF0ZSksIGQxID0gb2Zmc2V0KGQwLCAxKTtcbiAgICAgIHJldHVybiBkYXRlIC0gZDAgPCBkMSAtIGRhdGUgPyBkMCA6IGQxO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjZWlsKGRhdGUpIHtcbiAgICAgIHN0ZXAoZGF0ZSA9IGxvY2FsKG5ldyBkM19kYXRlKGRhdGUgLSAxKSksIDEpO1xuICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9mZnNldChkYXRlLCBrKSB7XG4gICAgICBzdGVwKGRhdGUgPSBuZXcgZDNfZGF0ZSgrZGF0ZSksIGspO1xuICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJhbmdlKHQwLCB0MSwgZHQpIHtcbiAgICAgIHZhciB0aW1lID0gY2VpbCh0MCksIHRpbWVzID0gW107XG4gICAgICBpZiAoZHQgPiAxKSB7XG4gICAgICAgIHdoaWxlICh0aW1lIDwgdDEpIHtcbiAgICAgICAgICBpZiAoIShudW1iZXIodGltZSkgJSBkdCkpIHRpbWVzLnB1c2gobmV3IERhdGUoK3RpbWUpKTtcbiAgICAgICAgICBzdGVwKHRpbWUsIDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aGlsZSAodGltZSA8IHQxKSB0aW1lcy5wdXNoKG5ldyBEYXRlKCt0aW1lKSksIHN0ZXAodGltZSwgMSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGltZXM7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJhbmdlX3V0Yyh0MCwgdDEsIGR0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBkM19kYXRlID0gZDNfZGF0ZV91dGM7XG4gICAgICAgIHZhciB1dGMgPSBuZXcgZDNfZGF0ZV91dGMoKTtcbiAgICAgICAgdXRjLl8gPSB0MDtcbiAgICAgICAgcmV0dXJuIHJhbmdlKHV0YywgdDEsIGR0KTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzX2RhdGUgPSBEYXRlO1xuICAgICAgfVxuICAgIH1cbiAgICBsb2NhbC5mbG9vciA9IGxvY2FsO1xuICAgIGxvY2FsLnJvdW5kID0gcm91bmQ7XG4gICAgbG9jYWwuY2VpbCA9IGNlaWw7XG4gICAgbG9jYWwub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIGxvY2FsLnJhbmdlID0gcmFuZ2U7XG4gICAgdmFyIHV0YyA9IGxvY2FsLnV0YyA9IGQzX3RpbWVfaW50ZXJ2YWxfdXRjKGxvY2FsKTtcbiAgICB1dGMuZmxvb3IgPSB1dGM7XG4gICAgdXRjLnJvdW5kID0gZDNfdGltZV9pbnRlcnZhbF91dGMocm91bmQpO1xuICAgIHV0Yy5jZWlsID0gZDNfdGltZV9pbnRlcnZhbF91dGMoY2VpbCk7XG4gICAgdXRjLm9mZnNldCA9IGQzX3RpbWVfaW50ZXJ2YWxfdXRjKG9mZnNldCk7XG4gICAgdXRjLnJhbmdlID0gcmFuZ2VfdXRjO1xuICAgIHJldHVybiBsb2NhbDtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2ludGVydmFsX3V0YyhtZXRob2QpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSwgaykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICB2YXIgdXRjID0gbmV3IGQzX2RhdGVfdXRjKCk7XG4gICAgICAgIHV0Yy5fID0gZGF0ZTtcbiAgICAgICAgcmV0dXJuIG1ldGhvZCh1dGMsIGspLl87XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkM19kYXRlID0gRGF0ZTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzX3RpbWUueWVhciA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUgPSBkM190aW1lLmRheShkYXRlKTtcbiAgICBkYXRlLnNldE1vbnRoKDAsIDEpO1xuICAgIHJldHVybiBkYXRlO1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIG9mZnNldCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICB9KTtcbiAgZDNfdGltZS55ZWFycyA9IGQzX3RpbWUueWVhci5yYW5nZTtcbiAgZDNfdGltZS55ZWFycy51dGMgPSBkM190aW1lLnllYXIudXRjLnJhbmdlO1xuICBkM190aW1lLmRheSA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciBkYXkgPSBuZXcgZDNfZGF0ZSgyZTMsIDApO1xuICAgIGRheS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCkpO1xuICAgIHJldHVybiBkYXk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIG9mZnNldCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXREYXRlKCkgLSAxO1xuICB9KTtcbiAgZDNfdGltZS5kYXlzID0gZDNfdGltZS5kYXkucmFuZ2U7XG4gIGQzX3RpbWUuZGF5cy51dGMgPSBkM190aW1lLmRheS51dGMucmFuZ2U7XG4gIGQzX3RpbWUuZGF5T2ZZZWFyID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciB5ZWFyID0gZDNfdGltZS55ZWFyKGRhdGUpO1xuICAgIHJldHVybiBNYXRoLmZsb29yKChkYXRlIC0geWVhciAtIChkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkgLSB5ZWFyLmdldFRpbWV6b25lT2Zmc2V0KCkpICogNmU0KSAvIDg2NGU1KTtcbiAgfTtcbiAgWyBcInN1bmRheVwiLCBcIm1vbmRheVwiLCBcInR1ZXNkYXlcIiwgXCJ3ZWRuZXNkYXlcIiwgXCJ0aHVyc2RheVwiLCBcImZyaWRheVwiLCBcInNhdHVyZGF5XCIgXS5mb3JFYWNoKGZ1bmN0aW9uKGRheSwgaSkge1xuICAgIGkgPSA3IC0gaTtcbiAgICB2YXIgaW50ZXJ2YWwgPSBkM190aW1lW2RheV0gPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIChkYXRlID0gZDNfdGltZS5kYXkoZGF0ZSkpLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSAoZGF0ZS5nZXREYXkoKSArIGkpICUgNyk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIE1hdGguZmxvb3Iob2Zmc2V0KSAqIDcpO1xuICAgIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIHZhciBkYXkgPSBkM190aW1lLnllYXIoZGF0ZSkuZ2V0RGF5KCk7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcigoZDNfdGltZS5kYXlPZlllYXIoZGF0ZSkgKyAoZGF5ICsgaSkgJSA3KSAvIDcpIC0gKGRheSAhPT0gaSk7XG4gICAgfSk7XG4gICAgZDNfdGltZVtkYXkgKyBcInNcIl0gPSBpbnRlcnZhbC5yYW5nZTtcbiAgICBkM190aW1lW2RheSArIFwic1wiXS51dGMgPSBpbnRlcnZhbC51dGMucmFuZ2U7XG4gICAgZDNfdGltZVtkYXkgKyBcIk9mWWVhclwiXSA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIHZhciBkYXkgPSBkM190aW1lLnllYXIoZGF0ZSkuZ2V0RGF5KCk7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcigoZDNfdGltZS5kYXlPZlllYXIoZGF0ZSkgKyAoZGF5ICsgaSkgJSA3KSAvIDcpO1xuICAgIH07XG4gIH0pO1xuICBkM190aW1lLndlZWsgPSBkM190aW1lLnN1bmRheTtcbiAgZDNfdGltZS53ZWVrcyA9IGQzX3RpbWUuc3VuZGF5LnJhbmdlO1xuICBkM190aW1lLndlZWtzLnV0YyA9IGQzX3RpbWUuc3VuZGF5LnV0Yy5yYW5nZTtcbiAgZDNfdGltZS53ZWVrT2ZZZWFyID0gZDNfdGltZS5zdW5kYXlPZlllYXI7XG4gIGZ1bmN0aW9uIGQzX2xvY2FsZV90aW1lRm9ybWF0KGxvY2FsZSkge1xuICAgIHZhciBsb2NhbGVfZGF0ZVRpbWUgPSBsb2NhbGUuZGF0ZVRpbWUsIGxvY2FsZV9kYXRlID0gbG9jYWxlLmRhdGUsIGxvY2FsZV90aW1lID0gbG9jYWxlLnRpbWUsIGxvY2FsZV9wZXJpb2RzID0gbG9jYWxlLnBlcmlvZHMsIGxvY2FsZV9kYXlzID0gbG9jYWxlLmRheXMsIGxvY2FsZV9zaG9ydERheXMgPSBsb2NhbGUuc2hvcnREYXlzLCBsb2NhbGVfbW9udGhzID0gbG9jYWxlLm1vbnRocywgbG9jYWxlX3Nob3J0TW9udGhzID0gbG9jYWxlLnNob3J0TW9udGhzO1xuICAgIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0KHRlbXBsYXRlKSB7XG4gICAgICB2YXIgbiA9IHRlbXBsYXRlLmxlbmd0aDtcbiAgICAgIGZ1bmN0aW9uIGZvcm1hdChkYXRlKSB7XG4gICAgICAgIHZhciBzdHJpbmcgPSBbXSwgaSA9IC0xLCBqID0gMCwgYywgcCwgZjtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBpZiAodGVtcGxhdGUuY2hhckNvZGVBdChpKSA9PT0gMzcpIHtcbiAgICAgICAgICAgIHN0cmluZy5wdXNoKHRlbXBsYXRlLnNsaWNlKGosIGkpKTtcbiAgICAgICAgICAgIGlmICgocCA9IGQzX3RpbWVfZm9ybWF0UGFkc1tjID0gdGVtcGxhdGUuY2hhckF0KCsraSldKSAhPSBudWxsKSBjID0gdGVtcGxhdGUuY2hhckF0KCsraSk7XG4gICAgICAgICAgICBpZiAoZiA9IGQzX3RpbWVfZm9ybWF0c1tjXSkgYyA9IGYoZGF0ZSwgcCA9PSBudWxsID8gYyA9PT0gXCJlXCIgPyBcIiBcIiA6IFwiMFwiIDogcCk7XG4gICAgICAgICAgICBzdHJpbmcucHVzaChjKTtcbiAgICAgICAgICAgIGogPSBpICsgMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3RyaW5nLnB1c2godGVtcGxhdGUuc2xpY2UoaiwgaSkpO1xuICAgICAgICByZXR1cm4gc3RyaW5nLmpvaW4oXCJcIik7XG4gICAgICB9XG4gICAgICBmb3JtYXQucGFyc2UgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgICAgdmFyIGQgPSB7XG4gICAgICAgICAgeTogMTkwMCxcbiAgICAgICAgICBtOiAwLFxuICAgICAgICAgIGQ6IDEsXG4gICAgICAgICAgSDogMCxcbiAgICAgICAgICBNOiAwLFxuICAgICAgICAgIFM6IDAsXG4gICAgICAgICAgTDogMCxcbiAgICAgICAgICBaOiBudWxsXG4gICAgICAgIH0sIGkgPSBkM190aW1lX3BhcnNlKGQsIHRlbXBsYXRlLCBzdHJpbmcsIDApO1xuICAgICAgICBpZiAoaSAhPSBzdHJpbmcubGVuZ3RoKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKFwicFwiIGluIGQpIGQuSCA9IGQuSCAlIDEyICsgZC5wICogMTI7XG4gICAgICAgIHZhciBsb2NhbFogPSBkLlogIT0gbnVsbCAmJiBkM19kYXRlICE9PSBkM19kYXRlX3V0YywgZGF0ZSA9IG5ldyAobG9jYWxaID8gZDNfZGF0ZV91dGMgOiBkM19kYXRlKSgpO1xuICAgICAgICBpZiAoXCJqXCIgaW4gZCkgZGF0ZS5zZXRGdWxsWWVhcihkLnksIDAsIGQuaik7IGVsc2UgaWYgKFwiV1wiIGluIGQgfHwgXCJVXCIgaW4gZCkge1xuICAgICAgICAgIGlmICghKFwid1wiIGluIGQpKSBkLncgPSBcIldcIiBpbiBkID8gMSA6IDA7XG4gICAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkLnksIDAsIDEpO1xuICAgICAgICAgIGRhdGUuc2V0RnVsbFllYXIoZC55LCAwLCBcIldcIiBpbiBkID8gKGQudyArIDYpICUgNyArIGQuVyAqIDcgLSAoZGF0ZS5nZXREYXkoKSArIDUpICUgNyA6IGQudyArIGQuVSAqIDcgLSAoZGF0ZS5nZXREYXkoKSArIDYpICUgNyk7XG4gICAgICAgIH0gZWxzZSBkYXRlLnNldEZ1bGxZZWFyKGQueSwgZC5tLCBkLmQpO1xuICAgICAgICBkYXRlLnNldEhvdXJzKGQuSCArIChkLlogLyAxMDAgfCAwKSwgZC5NICsgZC5aICUgMTAwLCBkLlMsIGQuTCk7XG4gICAgICAgIHJldHVybiBsb2NhbFogPyBkYXRlLl8gOiBkYXRlO1xuICAgICAgfTtcbiAgICAgIGZvcm1hdC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGVtcGxhdGU7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZShkYXRlLCB0ZW1wbGF0ZSwgc3RyaW5nLCBqKSB7XG4gICAgICB2YXIgYywgcCwgdCwgaSA9IDAsIG4gPSB0ZW1wbGF0ZS5sZW5ndGgsIG0gPSBzdHJpbmcubGVuZ3RoO1xuICAgICAgd2hpbGUgKGkgPCBuKSB7XG4gICAgICAgIGlmIChqID49IG0pIHJldHVybiAtMTtcbiAgICAgICAgYyA9IHRlbXBsYXRlLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgICAgaWYgKGMgPT09IDM3KSB7XG4gICAgICAgICAgdCA9IHRlbXBsYXRlLmNoYXJBdChpKyspO1xuICAgICAgICAgIHAgPSBkM190aW1lX3BhcnNlcnNbdCBpbiBkM190aW1lX2Zvcm1hdFBhZHMgPyB0ZW1wbGF0ZS5jaGFyQXQoaSsrKSA6IHRdO1xuICAgICAgICAgIGlmICghcCB8fCAoaiA9IHAoZGF0ZSwgc3RyaW5nLCBqKSkgPCAwKSByZXR1cm4gLTE7XG4gICAgICAgIH0gZWxzZSBpZiAoYyAhPSBzdHJpbmcuY2hhckNvZGVBdChqKyspKSB7XG4gICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gajtcbiAgICB9XG4gICAgZDNfdGltZV9mb3JtYXQudXRjID0gZnVuY3Rpb24odGVtcGxhdGUpIHtcbiAgICAgIHZhciBsb2NhbCA9IGQzX3RpbWVfZm9ybWF0KHRlbXBsYXRlKTtcbiAgICAgIGZ1bmN0aW9uIGZvcm1hdChkYXRlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICAgIHZhciB1dGMgPSBuZXcgZDNfZGF0ZSgpO1xuICAgICAgICAgIHV0Yy5fID0gZGF0ZTtcbiAgICAgICAgICByZXR1cm4gbG9jYWwodXRjKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBkM19kYXRlID0gRGF0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZm9ybWF0LnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICAgIHZhciBkYXRlID0gbG9jYWwucGFyc2Uoc3RyaW5nKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZSAmJiBkYXRlLl87XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmb3JtYXQudG9TdHJpbmcgPSBsb2NhbC50b1N0cmluZztcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gICAgfTtcbiAgICBkM190aW1lX2Zvcm1hdC5tdWx0aSA9IGQzX3RpbWVfZm9ybWF0LnV0Yy5tdWx0aSA9IGQzX3RpbWVfZm9ybWF0TXVsdGk7XG4gICAgdmFyIGQzX3RpbWVfcGVyaW9kTG9va3VwID0gZDMubWFwKCksIGQzX3RpbWVfZGF5UmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9kYXlzKSwgZDNfdGltZV9kYXlMb29rdXAgPSBkM190aW1lX2Zvcm1hdExvb2t1cChsb2NhbGVfZGF5cyksIGQzX3RpbWVfZGF5QWJicmV2UmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9zaG9ydERheXMpLCBkM190aW1lX2RheUFiYnJldkxvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydERheXMpLCBkM190aW1lX21vbnRoUmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9tb250aHMpLCBkM190aW1lX21vbnRoTG9va3VwID0gZDNfdGltZV9mb3JtYXRMb29rdXAobG9jYWxlX21vbnRocyksIGQzX3RpbWVfbW9udGhBYmJyZXZSZSA9IGQzX3RpbWVfZm9ybWF0UmUobG9jYWxlX3Nob3J0TW9udGhzKSwgZDNfdGltZV9tb250aEFiYnJldkxvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydE1vbnRocyk7XG4gICAgbG9jYWxlX3BlcmlvZHMuZm9yRWFjaChmdW5jdGlvbihwLCBpKSB7XG4gICAgICBkM190aW1lX3BlcmlvZExvb2t1cC5zZXQocC50b0xvd2VyQ2FzZSgpLCBpKTtcbiAgICB9KTtcbiAgICB2YXIgZDNfdGltZV9mb3JtYXRzID0ge1xuICAgICAgYTogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX3Nob3J0RGF5c1tkLmdldERheSgpXTtcbiAgICAgIH0sXG4gICAgICBBOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfZGF5c1tkLmdldERheSgpXTtcbiAgICAgIH0sXG4gICAgICBiOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRNb250aCgpXTtcbiAgICAgIH0sXG4gICAgICBCOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0TW9udGgoKV07XG4gICAgICB9LFxuICAgICAgYzogZDNfdGltZV9mb3JtYXQobG9jYWxlX2RhdGVUaW1lKSxcbiAgICAgIGQ6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RGF0ZSgpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBlOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldERhdGUoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgSDogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRIb3VycygpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBJOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldEhvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG4gICAgICB9LFxuICAgICAgajogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoMSArIGQzX3RpbWUuZGF5T2ZZZWFyKGQpLCBwLCAzKTtcbiAgICAgIH0sXG4gICAgICBMOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1pbGxpc2Vjb25kcygpLCBwLCAzKTtcbiAgICAgIH0sXG4gICAgICBtOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1vbnRoKCkgKyAxLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBNOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1pbnV0ZXMoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgcDogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldEhvdXJzKCkgPj0gMTIpXTtcbiAgICAgIH0sXG4gICAgICBTOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldFNlY29uZHMoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgVTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZDNfdGltZS5zdW5kYXlPZlllYXIoZCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIHc6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQuZ2V0RGF5KCk7XG4gICAgICB9LFxuICAgICAgVzogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZDNfdGltZS5tb25kYXlPZlllYXIoZCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIHg6IGQzX3RpbWVfZm9ybWF0KGxvY2FsZV9kYXRlKSxcbiAgICAgIFg6IGQzX3RpbWVfZm9ybWF0KGxvY2FsZV90aW1lKSxcbiAgICAgIHk6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG4gICAgICB9LFxuICAgICAgWTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRGdWxsWWVhcigpICUgMWU0LCBwLCA0KTtcbiAgICAgIH0sXG4gICAgICBaOiBkM190aW1lX3pvbmUsXG4gICAgICBcIiVcIjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBcIiVcIjtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBkM190aW1lX3BhcnNlcnMgPSB7XG4gICAgICBhOiBkM190aW1lX3BhcnNlV2Vla2RheUFiYnJldixcbiAgICAgIEE6IGQzX3RpbWVfcGFyc2VXZWVrZGF5LFxuICAgICAgYjogZDNfdGltZV9wYXJzZU1vbnRoQWJicmV2LFxuICAgICAgQjogZDNfdGltZV9wYXJzZU1vbnRoLFxuICAgICAgYzogZDNfdGltZV9wYXJzZUxvY2FsZUZ1bGwsXG4gICAgICBkOiBkM190aW1lX3BhcnNlRGF5LFxuICAgICAgZTogZDNfdGltZV9wYXJzZURheSxcbiAgICAgIEg6IGQzX3RpbWVfcGFyc2VIb3VyMjQsXG4gICAgICBJOiBkM190aW1lX3BhcnNlSG91cjI0LFxuICAgICAgajogZDNfdGltZV9wYXJzZURheU9mWWVhcixcbiAgICAgIEw6IGQzX3RpbWVfcGFyc2VNaWxsaXNlY29uZHMsXG4gICAgICBtOiBkM190aW1lX3BhcnNlTW9udGhOdW1iZXIsXG4gICAgICBNOiBkM190aW1lX3BhcnNlTWludXRlcyxcbiAgICAgIHA6IGQzX3RpbWVfcGFyc2VBbVBtLFxuICAgICAgUzogZDNfdGltZV9wYXJzZVNlY29uZHMsXG4gICAgICBVOiBkM190aW1lX3BhcnNlV2Vla051bWJlclN1bmRheSxcbiAgICAgIHc6IGQzX3RpbWVfcGFyc2VXZWVrZGF5TnVtYmVyLFxuICAgICAgVzogZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJNb25kYXksXG4gICAgICB4OiBkM190aW1lX3BhcnNlTG9jYWxlRGF0ZSxcbiAgICAgIFg6IGQzX3RpbWVfcGFyc2VMb2NhbGVUaW1lLFxuICAgICAgeTogZDNfdGltZV9wYXJzZVllYXIsXG4gICAgICBZOiBkM190aW1lX3BhcnNlRnVsbFllYXIsXG4gICAgICBaOiBkM190aW1lX3BhcnNlWm9uZSxcbiAgICAgIFwiJVwiOiBkM190aW1lX3BhcnNlTGl0ZXJhbFBlcmNlbnRcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrZGF5QWJicmV2KGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9kYXlBYmJyZXZSZS5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIG4gPSBkM190aW1lX2RheUFiYnJldlJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICAgIHJldHVybiBuID8gKGRhdGUudyA9IGQzX3RpbWVfZGF5QWJicmV2TG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrZGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9kYXlSZS5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIG4gPSBkM190aW1lX2RheVJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICAgIHJldHVybiBuID8gKGRhdGUudyA9IGQzX3RpbWVfZGF5TG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNb250aEFiYnJldihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIGQzX3RpbWVfbW9udGhBYmJyZXZSZS5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIG4gPSBkM190aW1lX21vbnRoQWJicmV2UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS5tID0gZDNfdGltZV9tb250aEFiYnJldkxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTW9udGgoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICBkM190aW1lX21vbnRoUmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9tb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICAgIHJldHVybiBuID8gKGRhdGUubSA9IGQzX3RpbWVfbW9udGhMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUxvY2FsZUZ1bGwoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9wYXJzZShkYXRlLCBkM190aW1lX2Zvcm1hdHMuYy50b1N0cmluZygpLCBzdHJpbmcsIGkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTG9jYWxlRGF0ZShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3BhcnNlKGRhdGUsIGQzX3RpbWVfZm9ybWF0cy54LnRvU3RyaW5nKCksIHN0cmluZywgaSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VMb2NhbGVUaW1lKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfcGFyc2UoZGF0ZSwgZDNfdGltZV9mb3JtYXRzLlgudG9TdHJpbmcoKSwgc3RyaW5nLCBpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUFtUG0oZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfcGVyaW9kTG9va3VwLmdldChzdHJpbmcuc2xpY2UoaSwgaSArPSAyKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIHJldHVybiBuID09IG51bGwgPyAtMSA6IChkYXRlLnAgPSBuLCBpKTtcbiAgICB9XG4gICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0O1xuICB9XG4gIHZhciBkM190aW1lX2Zvcm1hdFBhZHMgPSB7XG4gICAgXCItXCI6IFwiXCIsXG4gICAgXzogXCIgXCIsXG4gICAgXCIwXCI6IFwiMFwiXG4gIH0sIGQzX3RpbWVfbnVtYmVyUmUgPSAvXlxccypcXGQrLywgZDNfdGltZV9wZXJjZW50UmUgPSAvXiUvO1xuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdFBhZCh2YWx1ZSwgZmlsbCwgd2lkdGgpIHtcbiAgICB2YXIgc2lnbiA9IHZhbHVlIDwgMCA/IFwiLVwiIDogXCJcIiwgc3RyaW5nID0gKHNpZ24gPyAtdmFsdWUgOiB2YWx1ZSkgKyBcIlwiLCBsZW5ndGggPSBzdHJpbmcubGVuZ3RoO1xuICAgIHJldHVybiBzaWduICsgKGxlbmd0aCA8IHdpZHRoID8gbmV3IEFycmF5KHdpZHRoIC0gbGVuZ3RoICsgMSkuam9pbihmaWxsKSArIHN0cmluZyA6IHN0cmluZyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRSZShuYW1lcykge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiICsgbmFtZXMubWFwKGQzLnJlcXVvdGUpLmpvaW4oXCJ8XCIpICsgXCIpXCIsIFwiaVwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdExvb2t1cChuYW1lcykge1xuICAgIHZhciBtYXAgPSBuZXcgZDNfTWFwKCksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgbWFwLnNldChuYW1lc1tpXS50b0xvd2VyQ2FzZSgpLCBpKTtcbiAgICByZXR1cm4gbWFwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrZGF5TnVtYmVyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLncgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyU3VuZGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGRhdGUuVSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJNb25kYXkoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5XID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlRnVsbFllYXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgNCkpO1xuICAgIHJldHVybiBuID8gKGRhdGUueSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVllYXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUueSA9IGQzX3RpbWVfZXhwYW5kWWVhcigrblswXSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlWm9uZShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICByZXR1cm4gL15bKy1dXFxkezR9JC8udGVzdChzdHJpbmcgPSBzdHJpbmcuc2xpY2UoaSwgaSArIDUpKSA/IChkYXRlLlogPSAtc3RyaW5nLCBcbiAgICBpICsgNSkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2V4cGFuZFllYXIoZCkge1xuICAgIHJldHVybiBkICsgKGQgPiA2OCA/IDE5MDAgOiAyZTMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNb250aE51bWJlcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5tID0gblswXSAtIDEsIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlRGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLmQgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VEYXlPZlllYXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMykpO1xuICAgIHJldHVybiBuID8gKGRhdGUuaiA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUhvdXIyNChkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5IID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTWludXRlcyhkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5NID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlU2Vjb25kcyhkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5TID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTWlsbGlzZWNvbmRzKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDMpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLkwgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfem9uZShkKSB7XG4gICAgdmFyIHogPSBkLmdldFRpbWV6b25lT2Zmc2V0KCksIHpzID0geiA+IDAgPyBcIi1cIiA6IFwiK1wiLCB6aCA9IGFicyh6KSAvIDYwIHwgMCwgem0gPSBhYnMoeikgJSA2MDtcbiAgICByZXR1cm4genMgKyBkM190aW1lX2Zvcm1hdFBhZCh6aCwgXCIwXCIsIDIpICsgZDNfdGltZV9mb3JtYXRQYWQoem0sIFwiMFwiLCAyKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTGl0ZXJhbFBlcmNlbnQoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9wZXJjZW50UmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfcGVyY2VudFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gICAgcmV0dXJuIG4gPyBpICsgblswXS5sZW5ndGggOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdE11bHRpKGZvcm1hdHMpIHtcbiAgICB2YXIgbiA9IGZvcm1hdHMubGVuZ3RoLCBpID0gLTE7XG4gICAgd2hpbGUgKCsraSA8IG4pIGZvcm1hdHNbaV1bMF0gPSB0aGlzKGZvcm1hdHNbaV1bMF0pO1xuICAgIHJldHVybiBmdW5jdGlvbihkYXRlKSB7XG4gICAgICB2YXIgaSA9IDAsIGYgPSBmb3JtYXRzW2ldO1xuICAgICAgd2hpbGUgKCFmWzFdKGRhdGUpKSBmID0gZm9ybWF0c1srK2ldO1xuICAgICAgcmV0dXJuIGZbMF0oZGF0ZSk7XG4gICAgfTtcbiAgfVxuICBkMy5sb2NhbGUgPSBmdW5jdGlvbihsb2NhbGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbnVtYmVyRm9ybWF0OiBkM19sb2NhbGVfbnVtYmVyRm9ybWF0KGxvY2FsZSksXG4gICAgICB0aW1lRm9ybWF0OiBkM19sb2NhbGVfdGltZUZvcm1hdChsb2NhbGUpXG4gICAgfTtcbiAgfTtcbiAgdmFyIGQzX2xvY2FsZV9lblVTID0gZDMubG9jYWxlKHtcbiAgICBkZWNpbWFsOiBcIi5cIixcbiAgICB0aG91c2FuZHM6IFwiLFwiLFxuICAgIGdyb3VwaW5nOiBbIDMgXSxcbiAgICBjdXJyZW5jeTogWyBcIiRcIiwgXCJcIiBdLFxuICAgIGRhdGVUaW1lOiBcIiVhICViICVlICVYICVZXCIsXG4gICAgZGF0ZTogXCIlbS8lZC8lWVwiLFxuICAgIHRpbWU6IFwiJUg6JU06JVNcIixcbiAgICBwZXJpb2RzOiBbIFwiQU1cIiwgXCJQTVwiIF0sXG4gICAgZGF5czogWyBcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCIgXSxcbiAgICBzaG9ydERheXM6IFsgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIiBdLFxuICAgIG1vbnRoczogWyBcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsIFwiQXByaWxcIiwgXCJNYXlcIiwgXCJKdW5lXCIsIFwiSnVseVwiLCBcIkF1Z3VzdFwiLCBcIlNlcHRlbWJlclwiLCBcIk9jdG9iZXJcIiwgXCJOb3ZlbWJlclwiLCBcIkRlY2VtYmVyXCIgXSxcbiAgICBzaG9ydE1vbnRoczogWyBcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiIF1cbiAgfSk7XG4gIGQzLmZvcm1hdCA9IGQzX2xvY2FsZV9lblVTLm51bWJlckZvcm1hdDtcbiAgZDMuZ2VvID0ge307XG4gIGZ1bmN0aW9uIGQzX2FkZGVyKCkge31cbiAgZDNfYWRkZXIucHJvdG90eXBlID0ge1xuICAgIHM6IDAsXG4gICAgdDogMCxcbiAgICBhZGQ6IGZ1bmN0aW9uKHkpIHtcbiAgICAgIGQzX2FkZGVyU3VtKHksIHRoaXMudCwgZDNfYWRkZXJUZW1wKTtcbiAgICAgIGQzX2FkZGVyU3VtKGQzX2FkZGVyVGVtcC5zLCB0aGlzLnMsIHRoaXMpO1xuICAgICAgaWYgKHRoaXMucykgdGhpcy50ICs9IGQzX2FkZGVyVGVtcC50OyBlbHNlIHRoaXMucyA9IGQzX2FkZGVyVGVtcC50O1xuICAgIH0sXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zID0gdGhpcy50ID0gMDtcbiAgICB9LFxuICAgIHZhbHVlT2Y6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMucztcbiAgICB9XG4gIH07XG4gIHZhciBkM19hZGRlclRlbXAgPSBuZXcgZDNfYWRkZXIoKTtcbiAgZnVuY3Rpb24gZDNfYWRkZXJTdW0oYSwgYiwgbykge1xuICAgIHZhciB4ID0gby5zID0gYSArIGIsIGJ2ID0geCAtIGEsIGF2ID0geCAtIGJ2O1xuICAgIG8udCA9IGEgLSBhdiArIChiIC0gYnYpO1xuICB9XG4gIGQzLmdlby5zdHJlYW0gPSBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgaWYgKG9iamVjdCAmJiBkM19nZW9fc3RyZWFtT2JqZWN0VHlwZS5oYXNPd25Qcm9wZXJ0eShvYmplY3QudHlwZSkpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1PYmplY3RUeXBlW29iamVjdC50eXBlXShvYmplY3QsIGxpc3RlbmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KG9iamVjdCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGdlb21ldHJ5LCBsaXN0ZW5lcikge1xuICAgIGlmIChnZW9tZXRyeSAmJiBkM19nZW9fc3RyZWFtR2VvbWV0cnlUeXBlLmhhc093blByb3BlcnR5KGdlb21ldHJ5LnR5cGUpKSB7XG4gICAgICBkM19nZW9fc3RyZWFtR2VvbWV0cnlUeXBlW2dlb21ldHJ5LnR5cGVdKGdlb21ldHJ5LCBsaXN0ZW5lcik7XG4gICAgfVxuICB9XG4gIHZhciBkM19nZW9fc3RyZWFtT2JqZWN0VHlwZSA9IHtcbiAgICBGZWF0dXJlOiBmdW5jdGlvbihmZWF0dXJlLCBsaXN0ZW5lcikge1xuICAgICAgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGZlYXR1cmUuZ2VvbWV0cnksIGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgZmVhdHVyZXMgPSBvYmplY3QuZmVhdHVyZXMsIGkgPSAtMSwgbiA9IGZlYXR1cmVzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19nZW9fc3RyZWFtR2VvbWV0cnkoZmVhdHVyZXNbaV0uZ2VvbWV0cnksIGxpc3RlbmVyKTtcbiAgICB9XG4gIH07XG4gIHZhciBkM19nZW9fc3RyZWFtR2VvbWV0cnlUeXBlID0ge1xuICAgIFNwaGVyZTogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgbGlzdGVuZXIuc3BoZXJlKCk7XG4gICAgfSxcbiAgICBQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgb2JqZWN0ID0gb2JqZWN0LmNvb3JkaW5hdGVzO1xuICAgICAgbGlzdGVuZXIucG9pbnQob2JqZWN0WzBdLCBvYmplY3RbMV0sIG9iamVjdFsyXSk7XG4gICAgfSxcbiAgICBNdWx0aVBvaW50OiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBvYmplY3QgPSBjb29yZGluYXRlc1tpXSwgbGlzdGVuZXIucG9pbnQob2JqZWN0WzBdLCBvYmplY3RbMV0sIG9iamVjdFsyXSk7XG4gICAgfSxcbiAgICBMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICBkM19nZW9fc3RyZWFtTGluZShvYmplY3QuY29vcmRpbmF0ZXMsIGxpc3RlbmVyLCAwKTtcbiAgICB9LFxuICAgIE11bHRpTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLCAwKTtcbiAgICB9LFxuICAgIFBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1Qb2x5Z29uKG9iamVjdC5jb29yZGluYXRlcywgbGlzdGVuZXIpO1xuICAgIH0sXG4gICAgTXVsdGlQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19nZW9fc3RyZWFtUG9seWdvbihjb29yZGluYXRlc1tpXSwgbGlzdGVuZXIpO1xuICAgIH0sXG4gICAgR2VvbWV0cnlDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgZ2VvbWV0cmllcyA9IG9iamVjdC5nZW9tZXRyaWVzLCBpID0gLTEsIG4gPSBnZW9tZXRyaWVzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19nZW9fc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cmllc1tpXSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3N0cmVhbUxpbmUoY29vcmRpbmF0ZXMsIGxpc3RlbmVyLCBjbG9zZWQpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoIC0gY2xvc2VkLCBjb29yZGluYXRlO1xuICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgIHdoaWxlICgrK2kgPCBuKSBjb29yZGluYXRlID0gY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLnBvaW50KGNvb3JkaW5hdGVbMF0sIGNvb3JkaW5hdGVbMV0sIGNvb3JkaW5hdGVbMl0pO1xuICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fc3RyZWFtUG9seWdvbihjb29yZGluYXRlcywgbGlzdGVuZXIpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkM19nZW9fc3RyZWFtTGluZShjb29yZGluYXRlc1tpXSwgbGlzdGVuZXIsIDEpO1xuICAgIGxpc3RlbmVyLnBvbHlnb25FbmQoKTtcbiAgfVxuICBkMy5nZW8uYXJlYSA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGQzX2dlb19hcmVhU3VtID0gMDtcbiAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgZDNfZ2VvX2FyZWEpO1xuICAgIHJldHVybiBkM19nZW9fYXJlYVN1bTtcbiAgfTtcbiAgdmFyIGQzX2dlb19hcmVhU3VtLCBkM19nZW9fYXJlYVJpbmdTdW0gPSBuZXcgZDNfYWRkZXIoKTtcbiAgdmFyIGQzX2dlb19hcmVhID0ge1xuICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fYXJlYVN1bSArPSA0ICogz4A7XG4gICAgfSxcbiAgICBwb2ludDogZDNfbm9vcCxcbiAgICBsaW5lU3RhcnQ6IGQzX25vb3AsXG4gICAgbGluZUVuZDogZDNfbm9vcCxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2FyZWFSaW5nU3VtLnJlc2V0KCk7XG4gICAgICBkM19nZW9fYXJlYS5saW5lU3RhcnQgPSBkM19nZW9fYXJlYVJpbmdTdGFydDtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGFyZWEgPSAyICogZDNfZ2VvX2FyZWFSaW5nU3VtO1xuICAgICAgZDNfZ2VvX2FyZWFTdW0gKz0gYXJlYSA8IDAgPyA0ICogz4AgKyBhcmVhIDogYXJlYTtcbiAgICAgIGQzX2dlb19hcmVhLmxpbmVTdGFydCA9IGQzX2dlb19hcmVhLmxpbmVFbmQgPSBkM19nZW9fYXJlYS5wb2ludCA9IGQzX25vb3A7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fYXJlYVJpbmdTdGFydCgpIHtcbiAgICB2YXIgzrswMCwgz4YwMCwgzrswLCBjb3PPhjAsIHNpbs+GMDtcbiAgICBkM19nZW9fYXJlYS5wb2ludCA9IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgZDNfZ2VvX2FyZWEucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICDOuzAgPSAozrswMCA9IM67KSAqIGQzX3JhZGlhbnMsIGNvc8+GMCA9IE1hdGguY29zKM+GID0gKM+GMDAgPSDPhikgKiBkM19yYWRpYW5zIC8gMiArIM+AIC8gNCksIFxuICAgICAgc2luz4YwID0gTWF0aC5zaW4oz4YpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KM67LCDPhikge1xuICAgICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICAgIM+GID0gz4YgKiBkM19yYWRpYW5zIC8gMiArIM+AIC8gNDtcbiAgICAgIHZhciBkzrsgPSDOuyAtIM67MCwgc2TOuyA9IGTOuyA+PSAwID8gMSA6IC0xLCBhZM67ID0gc2TOuyAqIGTOuywgY29zz4YgPSBNYXRoLmNvcyjPhiksIHNpbs+GID0gTWF0aC5zaW4oz4YpLCBrID0gc2luz4YwICogc2luz4YsIHUgPSBjb3PPhjAgKiBjb3PPhiArIGsgKiBNYXRoLmNvcyhhZM67KSwgdiA9IGsgKiBzZM67ICogTWF0aC5zaW4oYWTOuyk7XG4gICAgICBkM19nZW9fYXJlYVJpbmdTdW0uYWRkKE1hdGguYXRhbjIodiwgdSkpO1xuICAgICAgzrswID0gzrssIGNvc8+GMCA9IGNvc8+GLCBzaW7PhjAgPSBzaW7PhjtcbiAgICB9XG4gICAgZDNfZ2VvX2FyZWEubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KM67MDAsIM+GMDApO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbihzcGhlcmljYWwpIHtcbiAgICB2YXIgzrsgPSBzcGhlcmljYWxbMF0sIM+GID0gc3BoZXJpY2FsWzFdLCBjb3PPhiA9IE1hdGguY29zKM+GKTtcbiAgICByZXR1cm4gWyBjb3PPhiAqIE1hdGguY29zKM67KSwgY29zz4YgKiBNYXRoLnNpbijOuyksIE1hdGguc2luKM+GKSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5Eb3QoYSwgYikge1xuICAgIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKGEsIGIpIHtcbiAgICByZXR1cm4gWyBhWzFdICogYlsyXSAtIGFbMl0gKiBiWzFdLCBhWzJdICogYlswXSAtIGFbMF0gKiBiWzJdLCBhWzBdICogYlsxXSAtIGFbMV0gKiBiWzBdIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbkFkZChhLCBiKSB7XG4gICAgYVswXSArPSBiWzBdO1xuICAgIGFbMV0gKz0gYlsxXTtcbiAgICBhWzJdICs9IGJbMl07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhblNjYWxlKHZlY3Rvciwgaykge1xuICAgIHJldHVybiBbIHZlY3RvclswXSAqIGssIHZlY3RvclsxXSAqIGssIHZlY3RvclsyXSAqIGsgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuTm9ybWFsaXplKGQpIHtcbiAgICB2YXIgbCA9IE1hdGguc3FydChkWzBdICogZFswXSArIGRbMV0gKiBkWzFdICsgZFsyXSAqIGRbMl0pO1xuICAgIGRbMF0gLz0gbDtcbiAgICBkWzFdIC89IGw7XG4gICAgZFsyXSAvPSBsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19zcGhlcmljYWwoY2FydGVzaWFuKSB7XG4gICAgcmV0dXJuIFsgTWF0aC5hdGFuMihjYXJ0ZXNpYW5bMV0sIGNhcnRlc2lhblswXSksIGQzX2FzaW4oY2FydGVzaWFuWzJdKSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19zcGhlcmljYWxFcXVhbChhLCBiKSB7XG4gICAgcmV0dXJuIGFicyhhWzBdIC0gYlswXSkgPCDOtSAmJiBhYnMoYVsxXSAtIGJbMV0pIDwgzrU7XG4gIH1cbiAgZDMuZ2VvLmJvdW5kcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciDOuzAsIM+GMCwgzrsxLCDPhjEsIM67XywgzrtfXywgz4ZfXywgcDAsIGTOu1N1bSwgcmFuZ2VzLCByYW5nZTtcbiAgICB2YXIgYm91bmQgPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBib3VuZC5wb2ludCA9IHJpbmdQb2ludDtcbiAgICAgICAgYm91bmQubGluZVN0YXJ0ID0gcmluZ1N0YXJ0O1xuICAgICAgICBib3VuZC5saW5lRW5kID0gcmluZ0VuZDtcbiAgICAgICAgZM67U3VtID0gMDtcbiAgICAgICAgZDNfZ2VvX2FyZWEucG9seWdvblN0YXJ0KCk7XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGQzX2dlb19hcmVhLnBvbHlnb25FbmQoKTtcbiAgICAgICAgYm91bmQucG9pbnQgPSBwb2ludDtcbiAgICAgICAgYm91bmQubGluZVN0YXJ0ID0gbGluZVN0YXJ0O1xuICAgICAgICBib3VuZC5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgaWYgKGQzX2dlb19hcmVhUmluZ1N1bSA8IDApIM67MCA9IC0ozrsxID0gMTgwKSwgz4YwID0gLSjPhjEgPSA5MCk7IGVsc2UgaWYgKGTOu1N1bSA+IM61KSDPhjEgPSA5MDsgZWxzZSBpZiAoZM67U3VtIDwgLc61KSDPhjAgPSAtOTA7XG4gICAgICAgIHJhbmdlWzBdID0gzrswLCByYW5nZVsxXSA9IM67MTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGZ1bmN0aW9uIHBvaW50KM67LCDPhikge1xuICAgICAgcmFuZ2VzLnB1c2gocmFuZ2UgPSBbIM67MCA9IM67LCDOuzEgPSDOuyBdKTtcbiAgICAgIGlmICjPhiA8IM+GMCkgz4YwID0gz4Y7XG4gICAgICBpZiAoz4YgPiDPhjEpIM+GMSA9IM+GO1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lUG9pbnQozrssIM+GKSB7XG4gICAgICB2YXIgcCA9IGQzX2dlb19jYXJ0ZXNpYW4oWyDOuyAqIGQzX3JhZGlhbnMsIM+GICogZDNfcmFkaWFucyBdKTtcbiAgICAgIGlmIChwMCkge1xuICAgICAgICB2YXIgbm9ybWFsID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKHAwLCBwKSwgZXF1YXRvcmlhbCA9IFsgbm9ybWFsWzFdLCAtbm9ybWFsWzBdLCAwIF0sIGluZmxlY3Rpb24gPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MoZXF1YXRvcmlhbCwgbm9ybWFsKTtcbiAgICAgICAgZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShpbmZsZWN0aW9uKTtcbiAgICAgICAgaW5mbGVjdGlvbiA9IGQzX2dlb19zcGhlcmljYWwoaW5mbGVjdGlvbik7XG4gICAgICAgIHZhciBkzrsgPSDOuyAtIM67XywgcyA9IGTOuyA+IDAgPyAxIDogLTEsIM67aSA9IGluZmxlY3Rpb25bMF0gKiBkM19kZWdyZWVzICogcywgYW50aW1lcmlkaWFuID0gYWJzKGTOuykgPiAxODA7XG4gICAgICAgIGlmIChhbnRpbWVyaWRpYW4gXiAocyAqIM67XyA8IM67aSAmJiDOu2kgPCBzICogzrspKSB7XG4gICAgICAgICAgdmFyIM+GaSA9IGluZmxlY3Rpb25bMV0gKiBkM19kZWdyZWVzO1xuICAgICAgICAgIGlmICjPhmkgPiDPhjEpIM+GMSA9IM+GaTtcbiAgICAgICAgfSBlbHNlIGlmICjOu2kgPSAozrtpICsgMzYwKSAlIDM2MCAtIDE4MCwgYW50aW1lcmlkaWFuIF4gKHMgKiDOu18gPCDOu2kgJiYgzrtpIDwgcyAqIM67KSkge1xuICAgICAgICAgIHZhciDPhmkgPSAtaW5mbGVjdGlvblsxXSAqIGQzX2RlZ3JlZXM7XG4gICAgICAgICAgaWYgKM+GaSA8IM+GMCkgz4YwID0gz4ZpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICjPhiA8IM+GMCkgz4YwID0gz4Y7XG4gICAgICAgICAgaWYgKM+GID4gz4YxKSDPhjEgPSDPhjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYW50aW1lcmlkaWFuKSB7XG4gICAgICAgICAgaWYgKM67IDwgzrtfKSB7XG4gICAgICAgICAgICBpZiAoYW5nbGUozrswLCDOuykgPiBhbmdsZSjOuzAsIM67MSkpIM67MSA9IM67O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoYW5nbGUozrssIM67MSkgPiBhbmdsZSjOuzAsIM67MSkpIM67MCA9IM67O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAozrsxID49IM67MCkge1xuICAgICAgICAgICAgaWYgKM67IDwgzrswKSDOuzAgPSDOuztcbiAgICAgICAgICAgIGlmICjOuyA+IM67MSkgzrsxID0gzrs7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICjOuyA+IM67Xykge1xuICAgICAgICAgICAgICBpZiAoYW5nbGUozrswLCDOuykgPiBhbmdsZSjOuzAsIM67MSkpIM67MSA9IM67O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKGFuZ2xlKM67LCDOuzEpID4gYW5nbGUozrswLCDOuzEpKSDOuzAgPSDOuztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBvaW50KM67LCDPhik7XG4gICAgICB9XG4gICAgICBwMCA9IHAsIM67XyA9IM67O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICBib3VuZC5wb2ludCA9IGxpbmVQb2ludDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgIHJhbmdlWzBdID0gzrswLCByYW5nZVsxXSA9IM67MTtcbiAgICAgIGJvdW5kLnBvaW50ID0gcG9pbnQ7XG4gICAgICBwMCA9IG51bGw7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJpbmdQb2ludCjOuywgz4YpIHtcbiAgICAgIGlmIChwMCkge1xuICAgICAgICB2YXIgZM67ID0gzrsgLSDOu187XG4gICAgICAgIGTOu1N1bSArPSBhYnMoZM67KSA+IDE4MCA/IGTOuyArIChkzrsgPiAwID8gMzYwIDogLTM2MCkgOiBkzrs7XG4gICAgICB9IGVsc2UgzrtfXyA9IM67LCDPhl9fID0gz4Y7XG4gICAgICBkM19nZW9fYXJlYS5wb2ludCjOuywgz4YpO1xuICAgICAgbGluZVBvaW50KM67LCDPhik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJpbmdTdGFydCgpIHtcbiAgICAgIGQzX2dlb19hcmVhLmxpbmVTdGFydCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgcmluZ1BvaW50KM67X18sIM+GX18pO1xuICAgICAgZDNfZ2VvX2FyZWEubGluZUVuZCgpO1xuICAgICAgaWYgKGFicyhkzrtTdW0pID4gzrUpIM67MCA9IC0ozrsxID0gMTgwKTtcbiAgICAgIHJhbmdlWzBdID0gzrswLCByYW5nZVsxXSA9IM67MTtcbiAgICAgIHAwID0gbnVsbDtcbiAgICB9XG4gICAgZnVuY3Rpb24gYW5nbGUozrswLCDOuzEpIHtcbiAgICAgIHJldHVybiAozrsxIC09IM67MCkgPCAwID8gzrsxICsgMzYwIDogzrsxO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjb21wYXJlUmFuZ2VzKGEsIGIpIHtcbiAgICAgIHJldHVybiBhWzBdIC0gYlswXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gd2l0aGluUmFuZ2UoeCwgcmFuZ2UpIHtcbiAgICAgIHJldHVybiByYW5nZVswXSA8PSByYW5nZVsxXSA/IHJhbmdlWzBdIDw9IHggJiYgeCA8PSByYW5nZVsxXSA6IHggPCByYW5nZVswXSB8fCByYW5nZVsxXSA8IHg7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihmZWF0dXJlKSB7XG4gICAgICDPhjEgPSDOuzEgPSAtKM67MCA9IM+GMCA9IEluZmluaXR5KTtcbiAgICAgIHJhbmdlcyA9IFtdO1xuICAgICAgZDMuZ2VvLnN0cmVhbShmZWF0dXJlLCBib3VuZCk7XG4gICAgICB2YXIgbiA9IHJhbmdlcy5sZW5ndGg7XG4gICAgICBpZiAobikge1xuICAgICAgICByYW5nZXMuc29ydChjb21wYXJlUmFuZ2VzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDEsIGEgPSByYW5nZXNbMF0sIGIsIG1lcmdlZCA9IFsgYSBdOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgYiA9IHJhbmdlc1tpXTtcbiAgICAgICAgICBpZiAod2l0aGluUmFuZ2UoYlswXSwgYSkgfHwgd2l0aGluUmFuZ2UoYlsxXSwgYSkpIHtcbiAgICAgICAgICAgIGlmIChhbmdsZShhWzBdLCBiWzFdKSA+IGFuZ2xlKGFbMF0sIGFbMV0pKSBhWzFdID0gYlsxXTtcbiAgICAgICAgICAgIGlmIChhbmdsZShiWzBdLCBhWzFdKSA+IGFuZ2xlKGFbMF0sIGFbMV0pKSBhWzBdID0gYlswXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbWVyZ2VkLnB1c2goYSA9IGIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgYmVzdCA9IC1JbmZpbml0eSwgZM67O1xuICAgICAgICBmb3IgKHZhciBuID0gbWVyZ2VkLmxlbmd0aCAtIDEsIGkgPSAwLCBhID0gbWVyZ2VkW25dLCBiOyBpIDw9IG47IGEgPSBiLCArK2kpIHtcbiAgICAgICAgICBiID0gbWVyZ2VkW2ldO1xuICAgICAgICAgIGlmICgoZM67ID0gYW5nbGUoYVsxXSwgYlswXSkpID4gYmVzdCkgYmVzdCA9IGTOuywgzrswID0gYlswXSwgzrsxID0gYVsxXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmFuZ2VzID0gcmFuZ2UgPSBudWxsO1xuICAgICAgcmV0dXJuIM67MCA9PT0gSW5maW5pdHkgfHwgz4YwID09PSBJbmZpbml0eSA/IFsgWyBOYU4sIE5hTiBdLCBbIE5hTiwgTmFOIF0gXSA6IFsgWyDOuzAsIM+GMCBdLCBbIM67MSwgz4YxIF0gXTtcbiAgICB9O1xuICB9KCk7XG4gIGQzLmdlby5jZW50cm9pZCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGQzX2dlb19jZW50cm9pZFcwID0gZDNfZ2VvX2NlbnRyb2lkVzEgPSBkM19nZW9fY2VudHJvaWRYMCA9IGQzX2dlb19jZW50cm9pZFkwID0gZDNfZ2VvX2NlbnRyb2lkWjAgPSBkM19nZW9fY2VudHJvaWRYMSA9IGQzX2dlb19jZW50cm9pZFkxID0gZDNfZ2VvX2NlbnRyb2lkWjEgPSBkM19nZW9fY2VudHJvaWRYMiA9IGQzX2dlb19jZW50cm9pZFkyID0gZDNfZ2VvX2NlbnRyb2lkWjIgPSAwO1xuICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBkM19nZW9fY2VudHJvaWQpO1xuICAgIHZhciB4ID0gZDNfZ2VvX2NlbnRyb2lkWDIsIHkgPSBkM19nZW9fY2VudHJvaWRZMiwgeiA9IGQzX2dlb19jZW50cm9pZFoyLCBtID0geCAqIHggKyB5ICogeSArIHogKiB6O1xuICAgIGlmIChtIDwgzrUyKSB7XG4gICAgICB4ID0gZDNfZ2VvX2NlbnRyb2lkWDEsIHkgPSBkM19nZW9fY2VudHJvaWRZMSwgeiA9IGQzX2dlb19jZW50cm9pZFoxO1xuICAgICAgaWYgKGQzX2dlb19jZW50cm9pZFcxIDwgzrUpIHggPSBkM19nZW9fY2VudHJvaWRYMCwgeSA9IGQzX2dlb19jZW50cm9pZFkwLCB6ID0gZDNfZ2VvX2NlbnRyb2lkWjA7XG4gICAgICBtID0geCAqIHggKyB5ICogeSArIHogKiB6O1xuICAgICAgaWYgKG0gPCDOtTIpIHJldHVybiBbIE5hTiwgTmFOIF07XG4gICAgfVxuICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSwgeCkgKiBkM19kZWdyZWVzLCBkM19hc2luKHogLyBNYXRoLnNxcnQobSkpICogZDNfZGVncmVlcyBdO1xuICB9O1xuICB2YXIgZDNfZ2VvX2NlbnRyb2lkVzAsIGQzX2dlb19jZW50cm9pZFcxLCBkM19nZW9fY2VudHJvaWRYMCwgZDNfZ2VvX2NlbnRyb2lkWTAsIGQzX2dlb19jZW50cm9pZFowLCBkM19nZW9fY2VudHJvaWRYMSwgZDNfZ2VvX2NlbnRyb2lkWTEsIGQzX2dlb19jZW50cm9pZFoxLCBkM19nZW9fY2VudHJvaWRYMiwgZDNfZ2VvX2NlbnRyb2lkWTIsIGQzX2dlb19jZW50cm9pZFoyO1xuICB2YXIgZDNfZ2VvX2NlbnRyb2lkID0ge1xuICAgIHNwaGVyZTogZDNfbm9vcCxcbiAgICBwb2ludDogZDNfZ2VvX2NlbnRyb2lkUG9pbnQsXG4gICAgbGluZVN0YXJ0OiBkM19nZW9fY2VudHJvaWRMaW5lU3RhcnQsXG4gICAgbGluZUVuZDogZDNfZ2VvX2NlbnRyb2lkTGluZUVuZCxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLmxpbmVTdGFydCA9IGQzX2dlb19jZW50cm9pZFJpbmdTdGFydDtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLmxpbmVTdGFydCA9IGQzX2dlb19jZW50cm9pZExpbmVTdGFydDtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19jZW50cm9pZFBvaW50KM67LCDPhikge1xuICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyk7XG4gICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooY29zz4YgKiBNYXRoLmNvcyjOuyksIGNvc8+GICogTWF0aC5zaW4ozrspLCBNYXRoLnNpbijPhikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKHgsIHksIHopIHtcbiAgICArK2QzX2dlb19jZW50cm9pZFcwO1xuICAgIGQzX2dlb19jZW50cm9pZFgwICs9ICh4IC0gZDNfZ2VvX2NlbnRyb2lkWDApIC8gZDNfZ2VvX2NlbnRyb2lkVzA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWTAgKz0gKHkgLSBkM19nZW9fY2VudHJvaWRZMCkgLyBkM19nZW9fY2VudHJvaWRXMDtcbiAgICBkM19nZW9fY2VudHJvaWRaMCArPSAoeiAtIGQzX2dlb19jZW50cm9pZFowKSAvIGQzX2dlb19jZW50cm9pZFcwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jZW50cm9pZExpbmVTdGFydCgpIHtcbiAgICB2YXIgeDAsIHkwLCB6MDtcbiAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKTtcbiAgICAgIHgwID0gY29zz4YgKiBNYXRoLmNvcyjOuyk7XG4gICAgICB5MCA9IGNvc8+GICogTWF0aC5zaW4ozrspO1xuICAgICAgejAgPSBNYXRoLnNpbijPhik7XG4gICAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKSwgeCA9IGNvc8+GICogTWF0aC5jb3MozrspLCB5ID0gY29zz4YgKiBNYXRoLnNpbijOuyksIHogPSBNYXRoLnNpbijPhiksIHcgPSBNYXRoLmF0YW4yKE1hdGguc3FydCgodyA9IHkwICogeiAtIHowICogeSkgKiB3ICsgKHcgPSB6MCAqIHggLSB4MCAqIHopICogdyArICh3ID0geDAgKiB5IC0geTAgKiB4KSAqIHcpLCB4MCAqIHggKyB5MCAqIHkgKyB6MCAqIHopO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkVzEgKz0gdztcbiAgICAgIGQzX2dlb19jZW50cm9pZFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMSArPSB3ICogKHkwICsgKHkwID0geSkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjEgKz0gdyAqICh6MCArICh6MCA9IHopKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKHgwLCB5MCwgejApO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRMaW5lRW5kKCkge1xuICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IGQzX2dlb19jZW50cm9pZFBvaW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jZW50cm9pZFJpbmdTdGFydCgpIHtcbiAgICB2YXIgzrswMCwgz4YwMCwgeDAsIHkwLCB6MDtcbiAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIM67MDAgPSDOuywgz4YwMCA9IM+GO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpO1xuICAgICAgeDAgPSBjb3PPhiAqIE1hdGguY29zKM67KTtcbiAgICAgIHkwID0gY29zz4YgKiBNYXRoLnNpbijOuyk7XG4gICAgICB6MCA9IE1hdGguc2luKM+GKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKHgwLCB5MCwgejApO1xuICAgIH07XG4gICAgZDNfZ2VvX2NlbnRyb2lkLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIG5leHRQb2ludCjOuzAwLCDPhjAwKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5saW5lRW5kID0gZDNfZ2VvX2NlbnRyb2lkTGluZUVuZDtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IGQzX2dlb19jZW50cm9pZFBvaW50O1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KM67LCDPhikge1xuICAgICAgzrsgKj0gZDNfcmFkaWFucztcbiAgICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpLCB4ID0gY29zz4YgKiBNYXRoLmNvcyjOuyksIHkgPSBjb3PPhiAqIE1hdGguc2luKM67KSwgeiA9IE1hdGguc2luKM+GKSwgY3ggPSB5MCAqIHogLSB6MCAqIHksIGN5ID0gejAgKiB4IC0geDAgKiB6LCBjeiA9IHgwICogeSAtIHkwICogeCwgbSA9IE1hdGguc3FydChjeCAqIGN4ICsgY3kgKiBjeSArIGN6ICogY3opLCB1ID0geDAgKiB4ICsgeTAgKiB5ICsgejAgKiB6LCB2ID0gbSAmJiAtZDNfYWNvcyh1KSAvIG0sIHcgPSBNYXRoLmF0YW4yKG0sIHUpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDIgKz0gdiAqIGN4O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTIgKz0gdiAqIGN5O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjIgKz0gdiAqIGN6O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkVzEgKz0gdztcbiAgICAgIGQzX2dlb19jZW50cm9pZFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMSArPSB3ICogKHkwICsgKHkwID0geSkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjEgKz0gdyAqICh6MCArICh6MCA9IHopKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKHgwLCB5MCwgejApO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY29tcG9zZShhLCBiKSB7XG4gICAgZnVuY3Rpb24gY29tcG9zZSh4LCB5KSB7XG4gICAgICByZXR1cm4geCA9IGEoeCwgeSksIGIoeFswXSwgeFsxXSk7XG4gICAgfVxuICAgIGlmIChhLmludmVydCAmJiBiLmludmVydCkgY29tcG9zZS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICByZXR1cm4geCA9IGIuaW52ZXJ0KHgsIHkpLCB4ICYmIGEuaW52ZXJ0KHhbMF0sIHhbMV0pO1xuICAgIH07XG4gICAgcmV0dXJuIGNvbXBvc2U7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJ1ZSgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFBvbHlnb24oc2VnbWVudHMsIGNvbXBhcmUsIGNsaXBTdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIGxpc3RlbmVyKSB7XG4gICAgdmFyIHN1YmplY3QgPSBbXSwgY2xpcCA9IFtdO1xuICAgIHNlZ21lbnRzLmZvckVhY2goZnVuY3Rpb24oc2VnbWVudCkge1xuICAgICAgaWYgKChuID0gc2VnbWVudC5sZW5ndGggLSAxKSA8PSAwKSByZXR1cm47XG4gICAgICB2YXIgbiwgcDAgPSBzZWdtZW50WzBdLCBwMSA9IHNlZ21lbnRbbl07XG4gICAgICBpZiAoZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHAwLCBwMSkpIHtcbiAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSBsaXN0ZW5lci5wb2ludCgocDAgPSBzZWdtZW50W2ldKVswXSwgcDBbMV0pO1xuICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHZhciBhID0gbmV3IGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwMCwgc2VnbWVudCwgbnVsbCwgdHJ1ZSksIGIgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAwLCBudWxsLCBhLCBmYWxzZSk7XG4gICAgICBhLm8gPSBiO1xuICAgICAgc3ViamVjdC5wdXNoKGEpO1xuICAgICAgY2xpcC5wdXNoKGIpO1xuICAgICAgYSA9IG5ldyBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocDEsIHNlZ21lbnQsIG51bGwsIGZhbHNlKTtcbiAgICAgIGIgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAxLCBudWxsLCBhLCB0cnVlKTtcbiAgICAgIGEubyA9IGI7XG4gICAgICBzdWJqZWN0LnB1c2goYSk7XG4gICAgICBjbGlwLnB1c2goYik7XG4gICAgfSk7XG4gICAgY2xpcC5zb3J0KGNvbXBhcmUpO1xuICAgIGQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhcihzdWJqZWN0KTtcbiAgICBkM19nZW9fY2xpcFBvbHlnb25MaW5rQ2lyY3VsYXIoY2xpcCk7XG4gICAgaWYgKCFzdWJqZWN0Lmxlbmd0aCkgcmV0dXJuO1xuICAgIGZvciAodmFyIGkgPSAwLCBlbnRyeSA9IGNsaXBTdGFydEluc2lkZSwgbiA9IGNsaXAubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBjbGlwW2ldLmUgPSBlbnRyeSA9ICFlbnRyeTtcbiAgICB9XG4gICAgdmFyIHN0YXJ0ID0gc3ViamVjdFswXSwgcG9pbnRzLCBwb2ludDtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgdmFyIGN1cnJlbnQgPSBzdGFydCwgaXNTdWJqZWN0ID0gdHJ1ZTtcbiAgICAgIHdoaWxlIChjdXJyZW50LnYpIGlmICgoY3VycmVudCA9IGN1cnJlbnQubikgPT09IHN0YXJ0KSByZXR1cm47XG4gICAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgIGRvIHtcbiAgICAgICAgY3VycmVudC52ID0gY3VycmVudC5vLnYgPSB0cnVlO1xuICAgICAgICBpZiAoY3VycmVudC5lKSB7XG4gICAgICAgICAgaWYgKGlzU3ViamVjdCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoOyBpIDwgbjsgKytpKSBsaXN0ZW5lci5wb2ludCgocG9pbnQgPSBwb2ludHNbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5uLngsIDEsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgICBwb2ludHMgPSBjdXJyZW50LnAuejtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBwb2ludHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW50ZXJwb2xhdGUoY3VycmVudC54LCBjdXJyZW50LnAueCwgLTEsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucDtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5vO1xuICAgICAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgICAgIGlzU3ViamVjdCA9ICFpc1N1YmplY3Q7XG4gICAgICB9IHdoaWxlICghY3VycmVudC52KTtcbiAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBQb2x5Z29uTGlua0NpcmN1bGFyKGFycmF5KSB7XG4gICAgaWYgKCEobiA9IGFycmF5Lmxlbmd0aCkpIHJldHVybjtcbiAgICB2YXIgbiwgaSA9IDAsIGEgPSBhcnJheVswXSwgYjtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgYS5uID0gYiA9IGFycmF5W2ldO1xuICAgICAgYi5wID0gYTtcbiAgICAgIGEgPSBiO1xuICAgIH1cbiAgICBhLm4gPSBiID0gYXJyYXlbMF07XG4gICAgYi5wID0gYTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocG9pbnQsIHBvaW50cywgb3RoZXIsIGVudHJ5KSB7XG4gICAgdGhpcy54ID0gcG9pbnQ7XG4gICAgdGhpcy56ID0gcG9pbnRzO1xuICAgIHRoaXMubyA9IG90aGVyO1xuICAgIHRoaXMuZSA9IGVudHJ5O1xuICAgIHRoaXMudiA9IGZhbHNlO1xuICAgIHRoaXMubiA9IHRoaXMucCA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXAocG9pbnRWaXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIGNsaXBTdGFydCkge1xuICAgIHJldHVybiBmdW5jdGlvbihyb3RhdGUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGluZSA9IGNsaXBMaW5lKGxpc3RlbmVyKSwgcm90YXRlZENsaXBTdGFydCA9IHJvdGF0ZS5pbnZlcnQoY2xpcFN0YXJ0WzBdLCBjbGlwU3RhcnRbMV0pO1xuICAgICAgdmFyIGNsaXAgPSB7XG4gICAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50UmluZztcbiAgICAgICAgICBjbGlwLmxpbmVTdGFydCA9IHJpbmdTdGFydDtcbiAgICAgICAgICBjbGlwLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgICAgIHNlZ21lbnRzID0gW107XG4gICAgICAgICAgcG9seWdvbiA9IFtdO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgICAgY2xpcC5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgICAgY2xpcC5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgICBzZWdtZW50cyA9IGQzLm1lcmdlKHNlZ21lbnRzKTtcbiAgICAgICAgICB2YXIgY2xpcFN0YXJ0SW5zaWRlID0gZDNfZ2VvX3BvaW50SW5Qb2x5Z29uKHJvdGF0ZWRDbGlwU3RhcnQsIHBvbHlnb24pO1xuICAgICAgICAgIGlmIChzZWdtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9fY2xpcFBvbHlnb24oc2VnbWVudHMsIGQzX2dlb19jbGlwU29ydCwgY2xpcFN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgbGlzdGVuZXIpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2xpcFN0YXJ0SW5zaWRlKSB7XG4gICAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvbkVuZCgpLCBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICAgIHNlZ21lbnRzID0gcG9seWdvbiA9IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbGlzdGVuZXIucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgbGlzdGVuZXIpO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2x5Z29uRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmdW5jdGlvbiBwb2ludCjOuywgz4YpIHtcbiAgICAgICAgdmFyIHBvaW50ID0gcm90YXRlKM67LCDPhik7XG4gICAgICAgIGlmIChwb2ludFZpc2libGUozrsgPSBwb2ludFswXSwgz4YgPSBwb2ludFsxXSkpIGxpc3RlbmVyLnBvaW50KM67LCDPhik7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwb2ludExpbmUozrssIM+GKSB7XG4gICAgICAgIHZhciBwb2ludCA9IHJvdGF0ZSjOuywgz4YpO1xuICAgICAgICBsaW5lLnBvaW50KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludExpbmU7XG4gICAgICAgIGxpbmUubGluZVN0YXJ0KCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIGxpbmUubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgdmFyIHNlZ21lbnRzO1xuICAgICAgdmFyIGJ1ZmZlciA9IGQzX2dlb19jbGlwQnVmZmVyTGlzdGVuZXIoKSwgcmluZ0xpc3RlbmVyID0gY2xpcExpbmUoYnVmZmVyKSwgcG9seWdvblN0YXJ0ZWQgPSBmYWxzZSwgcG9seWdvbiwgcmluZztcbiAgICAgIGZ1bmN0aW9uIHBvaW50UmluZyjOuywgz4YpIHtcbiAgICAgICAgcmluZy5wdXNoKFsgzrssIM+GIF0pO1xuICAgICAgICB2YXIgcG9pbnQgPSByb3RhdGUozrssIM+GKTtcbiAgICAgICAgcmluZ0xpc3RlbmVyLnBvaW50KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICAgIHJpbmdMaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgcmluZyA9IFtdO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgICAgcG9pbnRSaW5nKHJpbmdbMF1bMF0sIHJpbmdbMF1bMV0pO1xuICAgICAgICByaW5nTGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICB2YXIgY2xlYW4gPSByaW5nTGlzdGVuZXIuY2xlYW4oKSwgcmluZ1NlZ21lbnRzID0gYnVmZmVyLmJ1ZmZlcigpLCBzZWdtZW50LCBuID0gcmluZ1NlZ21lbnRzLmxlbmd0aDtcbiAgICAgICAgcmluZy5wb3AoKTtcbiAgICAgICAgcG9seWdvbi5wdXNoKHJpbmcpO1xuICAgICAgICByaW5nID0gbnVsbDtcbiAgICAgICAgaWYgKCFuKSByZXR1cm47XG4gICAgICAgIGlmIChjbGVhbiAmIDEpIHtcbiAgICAgICAgICBzZWdtZW50ID0gcmluZ1NlZ21lbnRzWzBdO1xuICAgICAgICAgIHZhciBuID0gc2VnbWVudC5sZW5ndGggLSAxLCBpID0gLTEsIHBvaW50O1xuICAgICAgICAgIGlmIChuID4gMCkge1xuICAgICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgd2hpbGUgKCsraSA8IG4pIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IHNlZ21lbnRbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobiA+IDEgJiYgY2xlYW4gJiAyKSByaW5nU2VnbWVudHMucHVzaChyaW5nU2VnbWVudHMucG9wKCkuY29uY2F0KHJpbmdTZWdtZW50cy5zaGlmdCgpKSk7XG4gICAgICAgIHNlZ21lbnRzLnB1c2gocmluZ1NlZ21lbnRzLmZpbHRlcihkM19nZW9fY2xpcFNlZ21lbnRMZW5ndGgxKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2xpcDtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwU2VnbWVudExlbmd0aDEoc2VnbWVudCkge1xuICAgIHJldHVybiBzZWdtZW50Lmxlbmd0aCA+IDE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lcigpIHtcbiAgICB2YXIgbGluZXMgPSBbXSwgbGluZTtcbiAgICByZXR1cm4ge1xuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGluZXMucHVzaChsaW5lID0gW10pO1xuICAgICAgfSxcbiAgICAgIHBvaW50OiBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgICAgbGluZS5wdXNoKFsgzrssIM+GIF0pO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgICBidWZmZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYnVmZmVyID0gbGluZXM7XG4gICAgICAgIGxpbmVzID0gW107XG4gICAgICAgIGxpbmUgPSBudWxsO1xuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgICAgfSxcbiAgICAgIHJlam9pbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChsaW5lcy5sZW5ndGggPiAxKSBsaW5lcy5wdXNoKGxpbmVzLnBvcCgpLmNvbmNhdChsaW5lcy5zaGlmdCgpKSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFNvcnQoYSwgYikge1xuICAgIHJldHVybiAoKGEgPSBhLngpWzBdIDwgMCA/IGFbMV0gLSBoYWxmz4AgLSDOtSA6IGhhbGbPgCAtIGFbMV0pIC0gKChiID0gYi54KVswXSA8IDAgPyBiWzFdIC0gaGFsZs+AIC0gzrUgOiBoYWxmz4AgLSBiWzFdKTtcbiAgfVxuICB2YXIgZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4gPSBkM19nZW9fY2xpcChkM190cnVlLCBkM19nZW9fY2xpcEFudGltZXJpZGlhbkxpbmUsIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUsIFsgLc+ALCAtz4AgLyAyIF0pO1xuICBmdW5jdGlvbiBkM19nZW9fY2xpcEFudGltZXJpZGlhbkxpbmUobGlzdGVuZXIpIHtcbiAgICB2YXIgzrswID0gTmFOLCDPhjAgPSBOYU4sIHPOuzAgPSBOYU4sIGNsZWFuO1xuICAgIHJldHVybiB7XG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgY2xlYW4gPSAxO1xuICAgICAgfSxcbiAgICAgIHBvaW50OiBmdW5jdGlvbijOuzEsIM+GMSkge1xuICAgICAgICB2YXIgc867MSA9IM67MSA+IDAgPyDPgCA6IC3PgCwgZM67ID0gYWJzKM67MSAtIM67MCk7XG4gICAgICAgIGlmIChhYnMoZM67IC0gz4ApIDwgzrUpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludCjOuzAsIM+GMCA9ICjPhjAgKyDPhjEpIC8gMiA+IDAgPyBoYWxmz4AgOiAtaGFsZs+AKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrswLCDPhjApO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrsxLCDPhjApO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KM67MSwgz4YwKTtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoc867MCAhPT0gc867MSAmJiBkzrsgPj0gz4ApIHtcbiAgICAgICAgICBpZiAoYWJzKM67MCAtIHPOuzApIDwgzrUpIM67MCAtPSBzzrswICogzrU7XG4gICAgICAgICAgaWYgKGFicyjOuzEgLSBzzrsxKSA8IM61KSDOuzEgLT0gc867MSAqIM61O1xuICAgICAgICAgIM+GMCA9IGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KM67MCwgz4YwLCDOuzEsIM+GMSk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MCwgz4YwKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MSwgz4YwKTtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgbGlzdGVuZXIucG9pbnQozrswID0gzrsxLCDPhjAgPSDPhjEpO1xuICAgICAgICBzzrswID0gc867MTtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICDOuzAgPSDPhjAgPSBOYU47XG4gICAgICB9LFxuICAgICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gMiAtIGNsZWFuO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QozrswLCDPhjAsIM67MSwgz4YxKSB7XG4gICAgdmFyIGNvc8+GMCwgY29zz4YxLCBzaW7OuzBfzrsxID0gTWF0aC5zaW4ozrswIC0gzrsxKTtcbiAgICByZXR1cm4gYWJzKHNpbs67MF/OuzEpID4gzrUgPyBNYXRoLmF0YW4oKE1hdGguc2luKM+GMCkgKiAoY29zz4YxID0gTWF0aC5jb3Moz4YxKSkgKiBNYXRoLnNpbijOuzEpIC0gTWF0aC5zaW4oz4YxKSAqIChjb3PPhjAgPSBNYXRoLmNvcyjPhjApKSAqIE1hdGguc2luKM67MCkpIC8gKGNvc8+GMCAqIGNvc8+GMSAqIHNpbs67MF/OuzEpKSA6ICjPhjAgKyDPhjEpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIGxpc3RlbmVyKSB7XG4gICAgdmFyIM+GO1xuICAgIGlmIChmcm9tID09IG51bGwpIHtcbiAgICAgIM+GID0gZGlyZWN0aW9uICogaGFsZs+AO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgwLCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCjPgCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoz4AsIDApO1xuICAgICAgbGlzdGVuZXIucG9pbnQoz4AsIC3Phik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgwLCAtz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCAtz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCAwKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC3PgCwgz4YpO1xuICAgIH0gZWxzZSBpZiAoYWJzKGZyb21bMF0gLSB0b1swXSkgPiDOtSkge1xuICAgICAgdmFyIHMgPSBmcm9tWzBdIDwgdG9bMF0gPyDPgCA6IC3PgDtcbiAgICAgIM+GID0gZGlyZWN0aW9uICogcyAvIDI7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtcywgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoMCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQocywgz4YpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsaXN0ZW5lci5wb2ludCh0b1swXSwgdG9bMV0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcG9pbnRJblBvbHlnb24ocG9pbnQsIHBvbHlnb24pIHtcbiAgICB2YXIgbWVyaWRpYW4gPSBwb2ludFswXSwgcGFyYWxsZWwgPSBwb2ludFsxXSwgbWVyaWRpYW5Ob3JtYWwgPSBbIE1hdGguc2luKG1lcmlkaWFuKSwgLU1hdGguY29zKG1lcmlkaWFuKSwgMCBdLCBwb2xhckFuZ2xlID0gMCwgd2luZGluZyA9IDA7XG4gICAgZDNfZ2VvX2FyZWFSaW5nU3VtLnJlc2V0KCk7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2x5Z29uLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIHJpbmcgPSBwb2x5Z29uW2ldLCBtID0gcmluZy5sZW5ndGg7XG4gICAgICBpZiAoIW0pIGNvbnRpbnVlO1xuICAgICAgdmFyIHBvaW50MCA9IHJpbmdbMF0sIM67MCA9IHBvaW50MFswXSwgz4YwID0gcG9pbnQwWzFdIC8gMiArIM+AIC8gNCwgc2luz4YwID0gTWF0aC5zaW4oz4YwKSwgY29zz4YwID0gTWF0aC5jb3Moz4YwKSwgaiA9IDE7XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBpZiAoaiA9PT0gbSkgaiA9IDA7XG4gICAgICAgIHBvaW50ID0gcmluZ1tqXTtcbiAgICAgICAgdmFyIM67ID0gcG9pbnRbMF0sIM+GID0gcG9pbnRbMV0gLyAyICsgz4AgLyA0LCBzaW7PhiA9IE1hdGguc2luKM+GKSwgY29zz4YgPSBNYXRoLmNvcyjPhiksIGTOuyA9IM67IC0gzrswLCBzZM67ID0gZM67ID49IDAgPyAxIDogLTEsIGFkzrsgPSBzZM67ICogZM67LCBhbnRpbWVyaWRpYW4gPSBhZM67ID4gz4AsIGsgPSBzaW7PhjAgKiBzaW7PhjtcbiAgICAgICAgZDNfZ2VvX2FyZWFSaW5nU3VtLmFkZChNYXRoLmF0YW4yKGsgKiBzZM67ICogTWF0aC5zaW4oYWTOuyksIGNvc8+GMCAqIGNvc8+GICsgayAqIE1hdGguY29zKGFkzrspKSk7XG4gICAgICAgIHBvbGFyQW5nbGUgKz0gYW50aW1lcmlkaWFuID8gZM67ICsgc2TOuyAqIM+EIDogZM67O1xuICAgICAgICBpZiAoYW50aW1lcmlkaWFuIF4gzrswID49IG1lcmlkaWFuIF4gzrsgPj0gbWVyaWRpYW4pIHtcbiAgICAgICAgICB2YXIgYXJjID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKGQzX2dlb19jYXJ0ZXNpYW4ocG9pbnQwKSwgZDNfZ2VvX2NhcnRlc2lhbihwb2ludCkpO1xuICAgICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoYXJjKTtcbiAgICAgICAgICB2YXIgaW50ZXJzZWN0aW9uID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKG1lcmlkaWFuTm9ybWFsLCBhcmMpO1xuICAgICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgICB2YXIgz4ZhcmMgPSAoYW50aW1lcmlkaWFuIF4gZM67ID49IDAgPyAtMSA6IDEpICogZDNfYXNpbihpbnRlcnNlY3Rpb25bMl0pO1xuICAgICAgICAgIGlmIChwYXJhbGxlbCA+IM+GYXJjIHx8IHBhcmFsbGVsID09PSDPhmFyYyAmJiAoYXJjWzBdIHx8IGFyY1sxXSkpIHtcbiAgICAgICAgICAgIHdpbmRpbmcgKz0gYW50aW1lcmlkaWFuIF4gZM67ID49IDAgPyAxIDogLTE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghaisrKSBicmVhaztcbiAgICAgICAgzrswID0gzrssIHNpbs+GMCA9IHNpbs+GLCBjb3PPhjAgPSBjb3PPhiwgcG9pbnQwID0gcG9pbnQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAocG9sYXJBbmdsZSA8IC3OtSB8fCBwb2xhckFuZ2xlIDwgzrUgJiYgZDNfZ2VvX2FyZWFSaW5nU3VtIDwgLc61KSBeIHdpbmRpbmcgJiAxO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwQ2lyY2xlKHJhZGl1cykge1xuICAgIHZhciBjciA9IE1hdGguY29zKHJhZGl1cyksIHNtYWxsUmFkaXVzID0gY3IgPiAwLCBub3RIZW1pc3BoZXJlID0gYWJzKGNyKSA+IM61LCBpbnRlcnBvbGF0ZSA9IGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZShyYWRpdXMsIDYgKiBkM19yYWRpYW5zKTtcbiAgICByZXR1cm4gZDNfZ2VvX2NsaXAodmlzaWJsZSwgY2xpcExpbmUsIGludGVycG9sYXRlLCBzbWFsbFJhZGl1cyA/IFsgMCwgLXJhZGl1cyBdIDogWyAtz4AsIHJhZGl1cyAtIM+AIF0pO1xuICAgIGZ1bmN0aW9uIHZpc2libGUozrssIM+GKSB7XG4gICAgICByZXR1cm4gTWF0aC5jb3MozrspICogTWF0aC5jb3Moz4YpID4gY3I7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNsaXBMaW5lKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgcG9pbnQwLCBjMCwgdjAsIHYwMCwgY2xlYW47XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHYwMCA9IHYwID0gZmFsc2U7XG4gICAgICAgICAgY2xlYW4gPSAxO1xuICAgICAgICB9LFxuICAgICAgICBwb2ludDogZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICAgICAgdmFyIHBvaW50MSA9IFsgzrssIM+GIF0sIHBvaW50MiwgdiA9IHZpc2libGUozrssIM+GKSwgYyA9IHNtYWxsUmFkaXVzID8gdiA/IDAgOiBjb2RlKM67LCDPhikgOiB2ID8gY29kZSjOuyArICjOuyA8IDAgPyDPgCA6IC3PgCksIM+GKSA6IDA7XG4gICAgICAgICAgaWYgKCFwb2ludDAgJiYgKHYwMCA9IHYwID0gdikpIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGlmICh2ICE9PSB2MCkge1xuICAgICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MCwgcG9pbnQxKTtcbiAgICAgICAgICAgIGlmIChkM19nZW9fc3BoZXJpY2FsRXF1YWwocG9pbnQwLCBwb2ludDIpIHx8IGQzX2dlb19zcGhlcmljYWxFcXVhbChwb2ludDEsIHBvaW50MikpIHtcbiAgICAgICAgICAgICAgcG9pbnQxWzBdICs9IM61O1xuICAgICAgICAgICAgICBwb2ludDFbMV0gKz0gzrU7XG4gICAgICAgICAgICAgIHYgPSB2aXNpYmxlKHBvaW50MVswXSwgcG9pbnQxWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHYgIT09IHYwKSB7XG4gICAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgICBpZiAodikge1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MSwgcG9pbnQwKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQocG9pbnQyWzBdLCBwb2ludDJbMV0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MCwgcG9pbnQxKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQocG9pbnQyWzBdLCBwb2ludDJbMV0pO1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwb2ludDAgPSBwb2ludDI7XG4gICAgICAgICAgfSBlbHNlIGlmIChub3RIZW1pc3BoZXJlICYmIHBvaW50MCAmJiBzbWFsbFJhZGl1cyBeIHYpIHtcbiAgICAgICAgICAgIHZhciB0O1xuICAgICAgICAgICAgaWYgKCEoYyAmIGMwKSAmJiAodCA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCwgdHJ1ZSkpKSB7XG4gICAgICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgICAgICAgaWYgKHNtYWxsUmFkaXVzKSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQodFswXVswXSwgdFswXVsxXSk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMV1bMF0sIHRbMV1bMV0pO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0WzBdWzBdLCB0WzBdWzFdKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodiAmJiAoIXBvaW50MCB8fCAhZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHBvaW50MCwgcG9pbnQxKSkpIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHBvaW50MVswXSwgcG9pbnQxWzFdKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcG9pbnQwID0gcG9pbnQxLCB2MCA9IHYsIGMwID0gYztcbiAgICAgICAgfSxcbiAgICAgICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKHYwKSBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgcG9pbnQwID0gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBjbGVhbiB8ICh2MDAgJiYgdjApIDw8IDE7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGludGVyc2VjdChhLCBiLCB0d28pIHtcbiAgICAgIHZhciBwYSA9IGQzX2dlb19jYXJ0ZXNpYW4oYSksIHBiID0gZDNfZ2VvX2NhcnRlc2lhbihiKTtcbiAgICAgIHZhciBuMSA9IFsgMSwgMCwgMCBdLCBuMiA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhwYSwgcGIpLCBuMm4yID0gZDNfZ2VvX2NhcnRlc2lhbkRvdChuMiwgbjIpLCBuMW4yID0gbjJbMF0sIGRldGVybWluYW50ID0gbjJuMiAtIG4xbjIgKiBuMW4yO1xuICAgICAgaWYgKCFkZXRlcm1pbmFudCkgcmV0dXJuICF0d28gJiYgYTtcbiAgICAgIHZhciBjMSA9IGNyICogbjJuMiAvIGRldGVybWluYW50LCBjMiA9IC1jciAqIG4xbjIgLyBkZXRlcm1pbmFudCwgbjF4bjIgPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MobjEsIG4yKSwgQSA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZShuMSwgYzEpLCBCID0gZDNfZ2VvX2NhcnRlc2lhblNjYWxlKG4yLCBjMik7XG4gICAgICBkM19nZW9fY2FydGVzaWFuQWRkKEEsIEIpO1xuICAgICAgdmFyIHUgPSBuMXhuMiwgdyA9IGQzX2dlb19jYXJ0ZXNpYW5Eb3QoQSwgdSksIHV1ID0gZDNfZ2VvX2NhcnRlc2lhbkRvdCh1LCB1KSwgdDIgPSB3ICogdyAtIHV1ICogKGQzX2dlb19jYXJ0ZXNpYW5Eb3QoQSwgQSkgLSAxKTtcbiAgICAgIGlmICh0MiA8IDApIHJldHVybjtcbiAgICAgIHZhciB0ID0gTWF0aC5zcXJ0KHQyKSwgcSA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZSh1LCAoLXcgLSB0KSAvIHV1KTtcbiAgICAgIGQzX2dlb19jYXJ0ZXNpYW5BZGQocSwgQSk7XG4gICAgICBxID0gZDNfZ2VvX3NwaGVyaWNhbChxKTtcbiAgICAgIGlmICghdHdvKSByZXR1cm4gcTtcbiAgICAgIHZhciDOuzAgPSBhWzBdLCDOuzEgPSBiWzBdLCDPhjAgPSBhWzFdLCDPhjEgPSBiWzFdLCB6O1xuICAgICAgaWYgKM67MSA8IM67MCkgeiA9IM67MCwgzrswID0gzrsxLCDOuzEgPSB6O1xuICAgICAgdmFyIM60zrsgPSDOuzEgLSDOuzAsIHBvbGFyID0gYWJzKM60zrsgLSDPgCkgPCDOtSwgbWVyaWRpYW4gPSBwb2xhciB8fCDOtM67IDwgzrU7XG4gICAgICBpZiAoIXBvbGFyICYmIM+GMSA8IM+GMCkgeiA9IM+GMCwgz4YwID0gz4YxLCDPhjEgPSB6O1xuICAgICAgaWYgKG1lcmlkaWFuID8gcG9sYXIgPyDPhjAgKyDPhjEgPiAwIF4gcVsxXSA8IChhYnMocVswXSAtIM67MCkgPCDOtSA/IM+GMCA6IM+GMSkgOiDPhjAgPD0gcVsxXSAmJiBxWzFdIDw9IM+GMSA6IM60zrsgPiDPgCBeICjOuzAgPD0gcVswXSAmJiBxWzBdIDw9IM67MSkpIHtcbiAgICAgICAgdmFyIHExID0gZDNfZ2VvX2NhcnRlc2lhblNjYWxlKHUsICgtdyArIHQpIC8gdXUpO1xuICAgICAgICBkM19nZW9fY2FydGVzaWFuQWRkKHExLCBBKTtcbiAgICAgICAgcmV0dXJuIFsgcSwgZDNfZ2VvX3NwaGVyaWNhbChxMSkgXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY29kZSjOuywgz4YpIHtcbiAgICAgIHZhciByID0gc21hbGxSYWRpdXMgPyByYWRpdXMgOiDPgCAtIHJhZGl1cywgY29kZSA9IDA7XG4gICAgICBpZiAozrsgPCAtcikgY29kZSB8PSAxOyBlbHNlIGlmICjOuyA+IHIpIGNvZGUgfD0gMjtcbiAgICAgIGlmICjPhiA8IC1yKSBjb2RlIHw9IDQ7IGVsc2UgaWYgKM+GID4gcikgY29kZSB8PSA4O1xuICAgICAgcmV0dXJuIGNvZGU7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fY2xpcExpbmUoeDAsIHkwLCB4MSwgeTEpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obGluZSkge1xuICAgICAgdmFyIGEgPSBsaW5lLmEsIGIgPSBsaW5lLmIsIGF4ID0gYS54LCBheSA9IGEueSwgYnggPSBiLngsIGJ5ID0gYi55LCB0MCA9IDAsIHQxID0gMSwgZHggPSBieCAtIGF4LCBkeSA9IGJ5IC0gYXksIHI7XG4gICAgICByID0geDAgLSBheDtcbiAgICAgIGlmICghZHggJiYgciA+IDApIHJldHVybjtcbiAgICAgIHIgLz0gZHg7XG4gICAgICBpZiAoZHggPCAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICAgICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgICAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gICAgICB9XG4gICAgICByID0geDEgLSBheDtcbiAgICAgIGlmICghZHggJiYgciA8IDApIHJldHVybjtcbiAgICAgIHIgLz0gZHg7XG4gICAgICBpZiAoZHggPCAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICAgICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgICAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gICAgICB9XG4gICAgICByID0geTAgLSBheTtcbiAgICAgIGlmICghZHkgJiYgciA+IDApIHJldHVybjtcbiAgICAgIHIgLz0gZHk7XG4gICAgICBpZiAoZHkgPCAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICAgICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgICAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gICAgICB9XG4gICAgICByID0geTEgLSBheTtcbiAgICAgIGlmICghZHkgJiYgciA8IDApIHJldHVybjtcbiAgICAgIHIgLz0gZHk7XG4gICAgICBpZiAoZHkgPCAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICAgICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgICAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gICAgICB9XG4gICAgICBpZiAodDAgPiAwKSBsaW5lLmEgPSB7XG4gICAgICAgIHg6IGF4ICsgdDAgKiBkeCxcbiAgICAgICAgeTogYXkgKyB0MCAqIGR5XG4gICAgICB9O1xuICAgICAgaWYgKHQxIDwgMSkgbGluZS5iID0ge1xuICAgICAgICB4OiBheCArIHQxICogZHgsXG4gICAgICAgIHk6IGF5ICsgdDEgKiBkeVxuICAgICAgfTtcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX2dlb19jbGlwRXh0ZW50TUFYID0gMWU5O1xuICBkMy5nZW8uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4MCwgeTAsIHgxLCB5MSwgc3RyZWFtLCBjbGlwLCBjbGlwRXh0ZW50ID0ge1xuICAgICAgc3RyZWFtOiBmdW5jdGlvbihvdXRwdXQpIHtcbiAgICAgICAgaWYgKHN0cmVhbSkgc3RyZWFtLnZhbGlkID0gZmFsc2U7XG4gICAgICAgIHN0cmVhbSA9IGNsaXAob3V0cHV0KTtcbiAgICAgICAgc3RyZWFtLnZhbGlkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICAgIH0sXG4gICAgICBleHRlbnQ6IGZ1bmN0aW9uKF8pIHtcbiAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBbIHgwLCB5MCBdLCBbIHgxLCB5MSBdIF07XG4gICAgICAgIGNsaXAgPSBkM19nZW9fY2xpcEV4dGVudCh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKTtcbiAgICAgICAgaWYgKHN0cmVhbSkgc3RyZWFtLnZhbGlkID0gZmFsc2UsIHN0cmVhbSA9IG51bGw7XG4gICAgICAgIHJldHVybiBjbGlwRXh0ZW50O1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGNsaXBFeHRlbnQuZXh0ZW50KFsgWyAwLCAwIF0sIFsgOTYwLCA1MDAgXSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBFeHRlbnQoeDAsIHkwLCB4MSwgeTEpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgICAgIHZhciBsaXN0ZW5lcl8gPSBsaXN0ZW5lciwgYnVmZmVyTGlzdGVuZXIgPSBkM19nZW9fY2xpcEJ1ZmZlckxpc3RlbmVyKCksIGNsaXBMaW5lID0gZDNfZ2VvbV9jbGlwTGluZSh4MCwgeTAsIHgxLCB5MSksIHNlZ21lbnRzLCBwb2x5Z29uLCByaW5nO1xuICAgICAgdmFyIGNsaXAgPSB7XG4gICAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbGlzdGVuZXIgPSBidWZmZXJMaXN0ZW5lcjtcbiAgICAgICAgICBzZWdtZW50cyA9IFtdO1xuICAgICAgICAgIHBvbHlnb24gPSBbXTtcbiAgICAgICAgICBjbGVhbiA9IHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXJfO1xuICAgICAgICAgIHNlZ21lbnRzID0gZDMubWVyZ2Uoc2VnbWVudHMpO1xuICAgICAgICAgIHZhciBjbGlwU3RhcnRJbnNpZGUgPSBpbnNpZGVQb2x5Z29uKFsgeDAsIHkxIF0pLCBpbnNpZGUgPSBjbGVhbiAmJiBjbGlwU3RhcnRJbnNpZGUsIHZpc2libGUgPSBzZWdtZW50cy5sZW5ndGg7XG4gICAgICAgICAgaWYgKGluc2lkZSB8fCB2aXNpYmxlKSB7XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICAgIGlmIChpbnNpZGUpIHtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICAgICAgZDNfZ2VvX2NsaXBQb2x5Z29uKHNlZ21lbnRzLCBjb21wYXJlLCBjbGlwU3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2x5Z29uRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNlZ21lbnRzID0gcG9seWdvbiA9IHJpbmcgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZnVuY3Rpb24gaW5zaWRlUG9seWdvbihwKSB7XG4gICAgICAgIHZhciB3biA9IDAsIG4gPSBwb2x5Z29uLmxlbmd0aCwgeSA9IHBbMV07XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgZm9yICh2YXIgaiA9IDEsIHYgPSBwb2x5Z29uW2ldLCBtID0gdi5sZW5ndGgsIGEgPSB2WzBdLCBiOyBqIDwgbTsgKytqKSB7XG4gICAgICAgICAgICBiID0gdltqXTtcbiAgICAgICAgICAgIGlmIChhWzFdIDw9IHkpIHtcbiAgICAgICAgICAgICAgaWYgKGJbMV0gPiB5ICYmIGQzX2Nyb3NzMmQoYSwgYiwgcCkgPiAwKSArK3duO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKGJbMV0gPD0geSAmJiBkM19jcm9zczJkKGEsIGIsIHApIDwgMCkgLS13bjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGEgPSBiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gd24gIT09IDA7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBpbnRlcnBvbGF0ZShmcm9tLCB0bywgZGlyZWN0aW9uLCBsaXN0ZW5lcikge1xuICAgICAgICB2YXIgYSA9IDAsIGExID0gMDtcbiAgICAgICAgaWYgKGZyb20gPT0gbnVsbCB8fCAoYSA9IGNvcm5lcihmcm9tLCBkaXJlY3Rpb24pKSAhPT0gKGExID0gY29ybmVyKHRvLCBkaXJlY3Rpb24pKSB8fCBjb21wYXJlUG9pbnRzKGZyb20sIHRvKSA8IDAgXiBkaXJlY3Rpb24gPiAwKSB7XG4gICAgICAgICAgZG8ge1xuICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQoYSA9PT0gMCB8fCBhID09PSAzID8geDAgOiB4MSwgYSA+IDEgPyB5MSA6IHkwKTtcbiAgICAgICAgICB9IHdoaWxlICgoYSA9IChhICsgZGlyZWN0aW9uICsgNCkgJSA0KSAhPT0gYTEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRvWzBdLCB0b1sxXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHBvaW50VmlzaWJsZSh4LCB5KSB7XG4gICAgICAgIHJldHVybiB4MCA8PSB4ICYmIHggPD0geDEgJiYgeTAgPD0geSAmJiB5IDw9IHkxO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgICBpZiAocG9pbnRWaXNpYmxlKHgsIHkpKSBsaXN0ZW5lci5wb2ludCh4LCB5KTtcbiAgICAgIH1cbiAgICAgIHZhciB4X18sIHlfXywgdl9fLCB4XywgeV8sIHZfLCBmaXJzdCwgY2xlYW47XG4gICAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICAgIGlmIChwb2x5Z29uKSBwb2x5Z29uLnB1c2gocmluZyA9IFtdKTtcbiAgICAgICAgZmlyc3QgPSB0cnVlO1xuICAgICAgICB2XyA9IGZhbHNlO1xuICAgICAgICB4XyA9IHlfID0gTmFOO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgICAgaWYgKHNlZ21lbnRzKSB7XG4gICAgICAgICAgbGluZVBvaW50KHhfXywgeV9fKTtcbiAgICAgICAgICBpZiAodl9fICYmIHZfKSBidWZmZXJMaXN0ZW5lci5yZWpvaW4oKTtcbiAgICAgICAgICBzZWdtZW50cy5wdXNoKGJ1ZmZlckxpc3RlbmVyLmJ1ZmZlcigpKTtcbiAgICAgICAgfVxuICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIGlmICh2XykgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZVBvaW50KHgsIHkpIHtcbiAgICAgICAgeCA9IE1hdGgubWF4KC1kM19nZW9fY2xpcEV4dGVudE1BWCwgTWF0aC5taW4oZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIHgpKTtcbiAgICAgICAgeSA9IE1hdGgubWF4KC1kM19nZW9fY2xpcEV4dGVudE1BWCwgTWF0aC5taW4oZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIHkpKTtcbiAgICAgICAgdmFyIHYgPSBwb2ludFZpc2libGUoeCwgeSk7XG4gICAgICAgIGlmIChwb2x5Z29uKSByaW5nLnB1c2goWyB4LCB5IF0pO1xuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICB4X18gPSB4LCB5X18gPSB5LCB2X18gPSB2O1xuICAgICAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQoeCwgeSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh2ICYmIHZfKSBsaXN0ZW5lci5wb2ludCh4LCB5KTsgZWxzZSB7XG4gICAgICAgICAgICB2YXIgbCA9IHtcbiAgICAgICAgICAgICAgYToge1xuICAgICAgICAgICAgICAgIHg6IHhfLFxuICAgICAgICAgICAgICAgIHk6IHlfXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGI6IHtcbiAgICAgICAgICAgICAgICB4OiB4LFxuICAgICAgICAgICAgICAgIHk6IHlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChjbGlwTGluZShsKSkge1xuICAgICAgICAgICAgICBpZiAoIXZfKSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQobC5hLngsIGwuYS55KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludChsLmIueCwgbC5iLnkpO1xuICAgICAgICAgICAgICBpZiAoIXYpIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgICAgY2xlYW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodikge1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQoeCwgeSk7XG4gICAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHhfID0geCwgeV8gPSB5LCB2XyA9IHY7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2xpcDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGNvcm5lcihwLCBkaXJlY3Rpb24pIHtcbiAgICAgIHJldHVybiBhYnMocFswXSAtIHgwKSA8IM61ID8gZGlyZWN0aW9uID4gMCA/IDAgOiAzIDogYWJzKHBbMF0gLSB4MSkgPCDOtSA/IGRpcmVjdGlvbiA+IDAgPyAyIDogMSA6IGFicyhwWzFdIC0geTApIDwgzrUgPyBkaXJlY3Rpb24gPiAwID8gMSA6IDAgOiBkaXJlY3Rpb24gPiAwID8gMyA6IDI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvbXBhcmUoYSwgYikge1xuICAgICAgcmV0dXJuIGNvbXBhcmVQb2ludHMoYS54LCBiLngpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjb21wYXJlUG9pbnRzKGEsIGIpIHtcbiAgICAgIHZhciBjYSA9IGNvcm5lcihhLCAxKSwgY2IgPSBjb3JuZXIoYiwgMSk7XG4gICAgICByZXR1cm4gY2EgIT09IGNiID8gY2EgLSBjYiA6IGNhID09PSAwID8gYlsxXSAtIGFbMV0gOiBjYSA9PT0gMSA/IGFbMF0gLSBiWzBdIDogY2EgPT09IDIgPyBhWzFdIC0gYlsxXSA6IGJbMF0gLSBhWzBdO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY29uaWMocHJvamVjdEF0KSB7XG4gICAgdmFyIM+GMCA9IDAsIM+GMSA9IM+AIC8gMywgbSA9IGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpLCBwID0gbSjPhjAsIM+GMSk7XG4gICAgcC5wYXJhbGxlbHMgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIM+GMCAvIM+AICogMTgwLCDPhjEgLyDPgCAqIDE4MCBdO1xuICAgICAgcmV0dXJuIG0oz4YwID0gX1swXSAqIM+AIC8gMTgwLCDPhjEgPSBfWzFdICogz4AgLyAxODApO1xuICAgIH07XG4gICAgcmV0dXJuIHA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbmljRXF1YWxBcmVhKM+GMCwgz4YxKSB7XG4gICAgdmFyIHNpbs+GMCA9IE1hdGguc2luKM+GMCksIG4gPSAoc2luz4YwICsgTWF0aC5zaW4oz4YxKSkgLyAyLCBDID0gMSArIHNpbs+GMCAqICgyICogbiAtIHNpbs+GMCksIM+BMCA9IE1hdGguc3FydChDKSAvIG47XG4gICAgZnVuY3Rpb24gZm9yd2FyZCjOuywgz4YpIHtcbiAgICAgIHZhciDPgSA9IE1hdGguc3FydChDIC0gMiAqIG4gKiBNYXRoLnNpbijPhikpIC8gbjtcbiAgICAgIHJldHVybiBbIM+BICogTWF0aC5zaW4ozrsgKj0gbiksIM+BMCAtIM+BICogTWF0aC5jb3MozrspIF07XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BMF95ID0gz4EwIC0geTtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeCwgz4EwX3kpIC8gbiwgZDNfYXNpbigoQyAtICh4ICogeCArIM+BMF95ICogz4EwX3kpICogbiAqIG4pIC8gKDIgKiBuKSkgXTtcbiAgICB9O1xuICAgIHJldHVybiBmb3J3YXJkO1xuICB9XG4gIChkMy5nZW8uY29uaWNFcXVhbEFyZWEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX2NvbmljKGQzX2dlb19jb25pY0VxdWFsQXJlYSk7XG4gIH0pLnJhdyA9IGQzX2dlb19jb25pY0VxdWFsQXJlYTtcbiAgZDMuZ2VvLmFsYmVycyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5nZW8uY29uaWNFcXVhbEFyZWEoKS5yb3RhdGUoWyA5NiwgMCBdKS5jZW50ZXIoWyAtLjYsIDM4LjcgXSkucGFyYWxsZWxzKFsgMjkuNSwgNDUuNSBdKS5zY2FsZSgxMDcwKTtcbiAgfTtcbiAgZDMuZ2VvLmFsYmVyc1VzYSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBsb3dlcjQ4ID0gZDMuZ2VvLmFsYmVycygpO1xuICAgIHZhciBhbGFza2EgPSBkMy5nZW8uY29uaWNFcXVhbEFyZWEoKS5yb3RhdGUoWyAxNTQsIDAgXSkuY2VudGVyKFsgLTIsIDU4LjUgXSkucGFyYWxsZWxzKFsgNTUsIDY1IF0pO1xuICAgIHZhciBoYXdhaWkgPSBkMy5nZW8uY29uaWNFcXVhbEFyZWEoKS5yb3RhdGUoWyAxNTcsIDAgXSkuY2VudGVyKFsgLTMsIDE5LjkgXSkucGFyYWxsZWxzKFsgOCwgMTggXSk7XG4gICAgdmFyIHBvaW50LCBwb2ludFN0cmVhbSA9IHtcbiAgICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHBvaW50ID0gWyB4LCB5IF07XG4gICAgICB9XG4gICAgfSwgbG93ZXI0OFBvaW50LCBhbGFza2FQb2ludCwgaGF3YWlpUG9pbnQ7XG4gICAgZnVuY3Rpb24gYWxiZXJzVXNhKGNvb3JkaW5hdGVzKSB7XG4gICAgICB2YXIgeCA9IGNvb3JkaW5hdGVzWzBdLCB5ID0gY29vcmRpbmF0ZXNbMV07XG4gICAgICBwb2ludCA9IG51bGw7XG4gICAgICAobG93ZXI0OFBvaW50KHgsIHkpLCBwb2ludCkgfHwgKGFsYXNrYVBvaW50KHgsIHkpLCBwb2ludCkgfHwgaGF3YWlpUG9pbnQoeCwgeSk7XG4gICAgICByZXR1cm4gcG9pbnQ7XG4gICAgfVxuICAgIGFsYmVyc1VzYS5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgICAgdmFyIGsgPSBsb3dlcjQ4LnNjYWxlKCksIHQgPSBsb3dlcjQ4LnRyYW5zbGF0ZSgpLCB4ID0gKGNvb3JkaW5hdGVzWzBdIC0gdFswXSkgLyBrLCB5ID0gKGNvb3JkaW5hdGVzWzFdIC0gdFsxXSkgLyBrO1xuICAgICAgcmV0dXJuICh5ID49IC4xMiAmJiB5IDwgLjIzNCAmJiB4ID49IC0uNDI1ICYmIHggPCAtLjIxNCA/IGFsYXNrYSA6IHkgPj0gLjE2NiAmJiB5IDwgLjIzNCAmJiB4ID49IC0uMjE0ICYmIHggPCAtLjExNSA/IGhhd2FpaSA6IGxvd2VyNDgpLmludmVydChjb29yZGluYXRlcyk7XG4gICAgfTtcbiAgICBhbGJlcnNVc2Euc3RyZWFtID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICB2YXIgbG93ZXI0OFN0cmVhbSA9IGxvd2VyNDguc3RyZWFtKHN0cmVhbSksIGFsYXNrYVN0cmVhbSA9IGFsYXNrYS5zdHJlYW0oc3RyZWFtKSwgaGF3YWlpU3RyZWFtID0gaGF3YWlpLnN0cmVhbShzdHJlYW0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5zcGhlcmUoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0uc3BoZXJlKCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLnNwaGVyZSgpO1xuICAgICAgICB9LFxuICAgICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDgucHJlY2lzaW9uKCk7XG4gICAgICBsb3dlcjQ4LnByZWNpc2lvbihfKTtcbiAgICAgIGFsYXNrYS5wcmVjaXNpb24oXyk7XG4gICAgICBoYXdhaWkucHJlY2lzaW9uKF8pO1xuICAgICAgcmV0dXJuIGFsYmVyc1VzYTtcbiAgICB9O1xuICAgIGFsYmVyc1VzYS5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDguc2NhbGUoKTtcbiAgICAgIGxvd2VyNDguc2NhbGUoXyk7XG4gICAgICBhbGFza2Euc2NhbGUoXyAqIC4zNSk7XG4gICAgICBoYXdhaWkuc2NhbGUoXyk7XG4gICAgICByZXR1cm4gYWxiZXJzVXNhLnRyYW5zbGF0ZShsb3dlcjQ4LnRyYW5zbGF0ZSgpKTtcbiAgICB9O1xuICAgIGFsYmVyc1VzYS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnRyYW5zbGF0ZSgpO1xuICAgICAgdmFyIGsgPSBsb3dlcjQ4LnNjYWxlKCksIHggPSArX1swXSwgeSA9ICtfWzFdO1xuICAgICAgbG93ZXI0OFBvaW50ID0gbG93ZXI0OC50cmFuc2xhdGUoXykuY2xpcEV4dGVudChbIFsgeCAtIC40NTUgKiBrLCB5IC0gLjIzOCAqIGsgXSwgWyB4ICsgLjQ1NSAqIGssIHkgKyAuMjM4ICogayBdIF0pLnN0cmVhbShwb2ludFN0cmVhbSkucG9pbnQ7XG4gICAgICBhbGFza2FQb2ludCA9IGFsYXNrYS50cmFuc2xhdGUoWyB4IC0gLjMwNyAqIGssIHkgKyAuMjAxICogayBdKS5jbGlwRXh0ZW50KFsgWyB4IC0gLjQyNSAqIGsgKyDOtSwgeSArIC4xMiAqIGsgKyDOtSBdLCBbIHggLSAuMjE0ICogayAtIM61LCB5ICsgLjIzNCAqIGsgLSDOtSBdIF0pLnN0cmVhbShwb2ludFN0cmVhbSkucG9pbnQ7XG4gICAgICBoYXdhaWlQb2ludCA9IGhhd2FpaS50cmFuc2xhdGUoWyB4IC0gLjIwNSAqIGssIHkgKyAuMjEyICogayBdKS5jbGlwRXh0ZW50KFsgWyB4IC0gLjIxNCAqIGsgKyDOtSwgeSArIC4xNjYgKiBrICsgzrUgXSwgWyB4IC0gLjExNSAqIGsgLSDOtSwgeSArIC4yMzQgKiBrIC0gzrUgXSBdKS5zdHJlYW0ocG9pbnRTdHJlYW0pLnBvaW50O1xuICAgICAgcmV0dXJuIGFsYmVyc1VzYTtcbiAgICB9O1xuICAgIHJldHVybiBhbGJlcnNVc2Euc2NhbGUoMTA3MCk7XG4gIH07XG4gIHZhciBkM19nZW9fcGF0aEFyZWFTdW0sIGQzX2dlb19wYXRoQXJlYVBvbHlnb24sIGQzX2dlb19wYXRoQXJlYSA9IHtcbiAgICBwb2ludDogZDNfbm9vcCxcbiAgICBsaW5lU3RhcnQ6IGQzX25vb3AsXG4gICAgbGluZUVuZDogZDNfbm9vcCxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhUG9seWdvbiA9IDA7XG4gICAgICBkM19nZW9fcGF0aEFyZWEubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhBcmVhUmluZ1N0YXJ0O1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWEubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhBcmVhLmxpbmVFbmQgPSBkM19nZW9fcGF0aEFyZWEucG9pbnQgPSBkM19ub29wO1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhU3VtICs9IGFicyhkM19nZW9fcGF0aEFyZWFQb2x5Z29uIC8gMik7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fcGF0aEFyZWFSaW5nU3RhcnQoKSB7XG4gICAgdmFyIHgwMCwgeTAwLCB4MCwgeTA7XG4gICAgZDNfZ2VvX3BhdGhBcmVhLnBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQoeCwgeSkge1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhUG9seWdvbiArPSB5MCAqIHggLSB4MCAqIHk7XG4gICAgICB4MCA9IHgsIHkwID0geTtcbiAgICB9XG4gICAgZDNfZ2VvX3BhdGhBcmVhLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIG5leHRQb2ludCh4MDAsIHkwMCk7XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZ2VvX3BhdGhCb3VuZHNYMCwgZDNfZ2VvX3BhdGhCb3VuZHNZMCwgZDNfZ2VvX3BhdGhCb3VuZHNYMSwgZDNfZ2VvX3BhdGhCb3VuZHNZMTtcbiAgdmFyIGQzX2dlb19wYXRoQm91bmRzID0ge1xuICAgIHBvaW50OiBkM19nZW9fcGF0aEJvdW5kc1BvaW50LFxuICAgIGxpbmVTdGFydDogZDNfbm9vcCxcbiAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgIHBvbHlnb25TdGFydDogZDNfbm9vcCxcbiAgICBwb2x5Z29uRW5kOiBkM19ub29wXG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQm91bmRzUG9pbnQoeCwgeSkge1xuICAgIGlmICh4IDwgZDNfZ2VvX3BhdGhCb3VuZHNYMCkgZDNfZ2VvX3BhdGhCb3VuZHNYMCA9IHg7XG4gICAgaWYgKHggPiBkM19nZW9fcGF0aEJvdW5kc1gxKSBkM19nZW9fcGF0aEJvdW5kc1gxID0geDtcbiAgICBpZiAoeSA8IGQzX2dlb19wYXRoQm91bmRzWTApIGQzX2dlb19wYXRoQm91bmRzWTAgPSB5O1xuICAgIGlmICh5ID4gZDNfZ2VvX3BhdGhCb3VuZHNZMSkgZDNfZ2VvX3BhdGhCb3VuZHNZMSA9IHk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhCdWZmZXIoKSB7XG4gICAgdmFyIHBvaW50Q2lyY2xlID0gZDNfZ2VvX3BhdGhCdWZmZXJDaXJjbGUoNC41KSwgYnVmZmVyID0gW107XG4gICAgdmFyIHN0cmVhbSA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50TGluZVN0YXJ0O1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCA9IGxpbmVFbmRQb2x5Z29uO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgICAgfSxcbiAgICAgIHBvaW50UmFkaXVzOiBmdW5jdGlvbihfKSB7XG4gICAgICAgIHBvaW50Q2lyY2xlID0gZDNfZ2VvX3BhdGhCdWZmZXJDaXJjbGUoXyk7XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICB9LFxuICAgICAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gYnVmZmVyLmpvaW4oXCJcIik7XG4gICAgICAgICAgYnVmZmVyID0gW107XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgYnVmZmVyLnB1c2goXCJNXCIsIHgsIFwiLFwiLCB5LCBwb2ludENpcmNsZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50TGluZVN0YXJ0KHgsIHkpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKFwiTVwiLCB4LCBcIixcIiwgeSk7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludExpbmU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50TGluZSh4LCB5KSB7XG4gICAgICBidWZmZXIucHVzaChcIkxcIiwgeCwgXCIsXCIsIHkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmRQb2x5Z29uKCkge1xuICAgICAgYnVmZmVyLnB1c2goXCJaXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyZWFtO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQnVmZmVyQ2lyY2xlKHJhZGl1cykge1xuICAgIHJldHVybiBcIm0wLFwiICsgcmFkaXVzICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAtMiAqIHJhZGl1cyArIFwiYVwiICsgcmFkaXVzICsgXCIsXCIgKyByYWRpdXMgKyBcIiAwIDEsMSAwLFwiICsgMiAqIHJhZGl1cyArIFwielwiO1xuICB9XG4gIHZhciBkM19nZW9fcGF0aENlbnRyb2lkID0ge1xuICAgIHBvaW50OiBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQsXG4gICAgbGluZVN0YXJ0OiBkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0LFxuICAgIGxpbmVFbmQ6IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lRW5kLFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLmxpbmVTdGFydCA9IGQzX2dlb19wYXRoQ2VudHJvaWRSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQ7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLmxpbmVTdGFydCA9IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLmxpbmVFbmQgPSBkM19nZW9fcGF0aENlbnRyb2lkTGluZUVuZDtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4LCB5KSB7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWDAgKz0geDtcbiAgICBkM19nZW9fY2VudHJvaWRZMCArPSB5O1xuICAgICsrZDNfZ2VvX2NlbnRyb2lkWjA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVTdGFydCgpIHtcbiAgICB2YXIgeDAsIHkwO1xuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCh4LCB5KSB7XG4gICAgICB2YXIgZHggPSB4IC0geDAsIGR5ID0geSAtIHkwLCB6ID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjEgKz0gejtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lRW5kKCkge1xuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZFJpbmdTdGFydCgpIHtcbiAgICB2YXIgeDAwLCB5MDAsIHgwLCB5MDtcbiAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geSk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQoeCwgeSkge1xuICAgICAgdmFyIGR4ID0geCAtIHgwLCBkeSA9IHkgLSB5MCwgeiA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB6ICogKHgwICsgeCkgLyAyO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0geiAqICh5MCArIHkpIC8gMjtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHo7XG4gICAgICB6ID0geTAgKiB4IC0geDAgKiB5O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDIgKz0geiAqICh4MCArIHgpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTIgKz0geiAqICh5MCArIHkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjIgKz0geiAqIDM7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xuICAgIH1cbiAgICBkM19nZW9fcGF0aENlbnRyb2lkLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIG5leHRQb2ludCh4MDAsIHkwMCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENvbnRleHQoY29udGV4dCkge1xuICAgIHZhciBwb2ludFJhZGl1cyA9IDQuNTtcbiAgICB2YXIgc3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lU3RhcnQ7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZFBvbHlnb247XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgICB9LFxuICAgICAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgICAgcG9pbnRSYWRpdXMgPSBfO1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgICAgfSxcbiAgICAgIHJlc3VsdDogZDNfbm9vcFxuICAgIH07XG4gICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgY29udGV4dC5tb3ZlVG8oeCArIHBvaW50UmFkaXVzLCB5KTtcbiAgICAgIGNvbnRleHQuYXJjKHgsIHksIHBvaW50UmFkaXVzLCAwLCDPhCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50TGluZVN0YXJ0KHgsIHkpIHtcbiAgICAgIGNvbnRleHQubW92ZVRvKHgsIHkpO1xuICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludExpbmUoeCwgeSkge1xuICAgICAgY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZFBvbHlnb24oKSB7XG4gICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyZWFtO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19yZXNhbXBsZShwcm9qZWN0KSB7XG4gICAgdmFyIM60MiA9IC41LCBjb3NNaW5EaXN0YW5jZSA9IE1hdGguY29zKDMwICogZDNfcmFkaWFucyksIG1heERlcHRoID0gMTY7XG4gICAgZnVuY3Rpb24gcmVzYW1wbGUoc3RyZWFtKSB7XG4gICAgICByZXR1cm4gKG1heERlcHRoID8gcmVzYW1wbGVSZWN1cnNpdmUgOiByZXNhbXBsZU5vbmUpKHN0cmVhbSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2FtcGxlTm9uZShzdHJlYW0pIHtcbiAgICAgIHJldHVybiBkM19nZW9fdHJhbnNmb3JtUG9pbnQoc3RyZWFtLCBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeFswXSwgeFsxXSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzYW1wbGVSZWN1cnNpdmUoc3RyZWFtKSB7XG4gICAgICB2YXIgzrswMCwgz4YwMCwgeDAwLCB5MDAsIGEwMCwgYjAwLCBjMDAsIM67MCwgeDAsIHkwLCBhMCwgYjAsIGMwO1xuICAgICAgdmFyIHJlc2FtcGxlID0ge1xuICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICByZXNhbXBsZS5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgICAgcmVzYW1wbGUubGluZVN0YXJ0ID0gbGluZVN0YXJ0O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgICB4MCA9IE5hTjtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVQb2ludCjOuywgz4YpIHtcbiAgICAgICAgdmFyIGMgPSBkM19nZW9fY2FydGVzaWFuKFsgzrssIM+GIF0pLCBwID0gcHJvamVjdCjOuywgz4YpO1xuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDAgPSBwWzBdLCB5MCA9IHBbMV0sIM67MCA9IM67LCBhMCA9IGNbMF0sIGIwID0gY1sxXSwgYzAgPSBjWzJdLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHgwLCB5MCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgICByZXNhbXBsZS5wb2ludCA9IHBvaW50O1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgICBsaW5lU3RhcnQoKTtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSByaW5nUG9pbnQ7XG4gICAgICAgIHJlc2FtcGxlLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ1BvaW50KM67LCDPhikge1xuICAgICAgICBsaW5lUG9pbnQozrswMCA9IM67LCDPhjAwID0gz4YpLCB4MDAgPSB4MCwgeTAwID0geTAsIGEwMCA9IGEwLCBiMDAgPSBiMCwgYzAwID0gYzA7XG4gICAgICAgIHJlc2FtcGxlLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgwMCwgeTAwLCDOuzAwLCBhMDAsIGIwMCwgYzAwLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgcmVzYW1wbGUubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIGxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNhbXBsZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgxLCB5MSwgzrsxLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKSB7XG4gICAgICB2YXIgZHggPSB4MSAtIHgwLCBkeSA9IHkxIC0geTAsIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICBpZiAoZDIgPiA0ICogzrQyICYmIGRlcHRoLS0pIHtcbiAgICAgICAgdmFyIGEgPSBhMCArIGExLCBiID0gYjAgKyBiMSwgYyA9IGMwICsgYzEsIG0gPSBNYXRoLnNxcnQoYSAqIGEgKyBiICogYiArIGMgKiBjKSwgz4YyID0gTWF0aC5hc2luKGMgLz0gbSksIM67MiA9IGFicyhhYnMoYykgLSAxKSA8IM61IHx8IGFicyjOuzAgLSDOuzEpIDwgzrUgPyAozrswICsgzrsxKSAvIDIgOiBNYXRoLmF0YW4yKGIsIGEpLCBwID0gcHJvamVjdCjOuzIsIM+GMiksIHgyID0gcFswXSwgeTIgPSBwWzFdLCBkeDIgPSB4MiAtIHgwLCBkeTIgPSB5MiAtIHkwLCBkeiA9IGR5ICogZHgyIC0gZHggKiBkeTI7XG4gICAgICAgIGlmIChkeiAqIGR6IC8gZDIgPiDOtDIgfHwgYWJzKChkeCAqIGR4MiArIGR5ICogZHkyKSAvIGQyIC0gLjUpID4gLjMgfHwgYTAgKiBhMSArIGIwICogYjEgKyBjMCAqIGMxIDwgY29zTWluRGlzdGFuY2UpIHtcbiAgICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDIsIHkyLCDOuzIsIGEgLz0gbSwgYiAvPSBtLCBjLCBkZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgICBzdHJlYW0ucG9pbnQoeDIsIHkyKTtcbiAgICAgICAgICByZXNhbXBsZUxpbmVUbyh4MiwgeTIsIM67MiwgYSwgYiwgYywgeDEsIHkxLCDOuzEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJlc2FtcGxlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydCjOtDIpO1xuICAgICAgbWF4RGVwdGggPSAozrQyID0gXyAqIF8pID4gMCAmJiAxNjtcbiAgICAgIHJldHVybiByZXNhbXBsZTtcbiAgICB9O1xuICAgIHJldHVybiByZXNhbXBsZTtcbiAgfVxuICBkMy5nZW8ucGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwb2ludFJhZGl1cyA9IDQuNSwgcHJvamVjdGlvbiwgY29udGV4dCwgcHJvamVjdFN0cmVhbSwgY29udGV4dFN0cmVhbSwgY2FjaGVTdHJlYW07XG4gICAgZnVuY3Rpb24gcGF0aChvYmplY3QpIHtcbiAgICAgIGlmIChvYmplY3QpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwb2ludFJhZGl1cyA9PT0gXCJmdW5jdGlvblwiKSBjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtwb2ludFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICAgICAgaWYgKCFjYWNoZVN0cmVhbSB8fCAhY2FjaGVTdHJlYW0udmFsaWQpIGNhY2hlU3RyZWFtID0gcHJvamVjdFN0cmVhbShjb250ZXh0U3RyZWFtKTtcbiAgICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGNhY2hlU3RyZWFtKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZXh0U3RyZWFtLnJlc3VsdCgpO1xuICAgIH1cbiAgICBwYXRoLmFyZWEgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYVN1bSA9IDA7XG4gICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgcHJvamVjdFN0cmVhbShkM19nZW9fcGF0aEFyZWEpKTtcbiAgICAgIHJldHVybiBkM19nZW9fcGF0aEFyZWFTdW07XG4gICAgfTtcbiAgICBwYXRoLmNlbnRyb2lkID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMCA9IGQzX2dlb19jZW50cm9pZFkwID0gZDNfZ2VvX2NlbnRyb2lkWjAgPSBkM19nZW9fY2VudHJvaWRYMSA9IGQzX2dlb19jZW50cm9pZFkxID0gZDNfZ2VvX2NlbnRyb2lkWjEgPSBkM19nZW9fY2VudHJvaWRYMiA9IGQzX2dlb19jZW50cm9pZFkyID0gZDNfZ2VvX2NlbnRyb2lkWjIgPSAwO1xuICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIHByb2plY3RTdHJlYW0oZDNfZ2VvX3BhdGhDZW50cm9pZCkpO1xuICAgICAgcmV0dXJuIGQzX2dlb19jZW50cm9pZFoyID8gWyBkM19nZW9fY2VudHJvaWRYMiAvIGQzX2dlb19jZW50cm9pZFoyLCBkM19nZW9fY2VudHJvaWRZMiAvIGQzX2dlb19jZW50cm9pZFoyIF0gOiBkM19nZW9fY2VudHJvaWRaMSA/IFsgZDNfZ2VvX2NlbnRyb2lkWDEgLyBkM19nZW9fY2VudHJvaWRaMSwgZDNfZ2VvX2NlbnRyb2lkWTEgLyBkM19nZW9fY2VudHJvaWRaMSBdIDogZDNfZ2VvX2NlbnRyb2lkWjAgPyBbIGQzX2dlb19jZW50cm9pZFgwIC8gZDNfZ2VvX2NlbnRyb2lkWjAsIGQzX2dlb19jZW50cm9pZFkwIC8gZDNfZ2VvX2NlbnRyb2lkWjAgXSA6IFsgTmFOLCBOYU4gXTtcbiAgICB9O1xuICAgIHBhdGguYm91bmRzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICBkM19nZW9fcGF0aEJvdW5kc1gxID0gZDNfZ2VvX3BhdGhCb3VuZHNZMSA9IC0oZDNfZ2VvX3BhdGhCb3VuZHNYMCA9IGQzX2dlb19wYXRoQm91bmRzWTAgPSBJbmZpbml0eSk7XG4gICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgcHJvamVjdFN0cmVhbShkM19nZW9fcGF0aEJvdW5kcykpO1xuICAgICAgcmV0dXJuIFsgWyBkM19nZW9fcGF0aEJvdW5kc1gwLCBkM19nZW9fcGF0aEJvdW5kc1kwIF0sIFsgZDNfZ2VvX3BhdGhCb3VuZHNYMSwgZDNfZ2VvX3BhdGhCb3VuZHNZMSBdIF07XG4gICAgfTtcbiAgICBwYXRoLnByb2plY3Rpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcm9qZWN0aW9uO1xuICAgICAgcHJvamVjdFN0cmVhbSA9IChwcm9qZWN0aW9uID0gXykgPyBfLnN0cmVhbSB8fCBkM19nZW9fcGF0aFByb2plY3RTdHJlYW0oXykgOiBkM19pZGVudGl0eTtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcGF0aC5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29udGV4dDtcbiAgICAgIGNvbnRleHRTdHJlYW0gPSAoY29udGV4dCA9IF8pID09IG51bGwgPyBuZXcgZDNfZ2VvX3BhdGhCdWZmZXIoKSA6IG5ldyBkM19nZW9fcGF0aENvbnRleHQoXyk7XG4gICAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMocG9pbnRSYWRpdXMpO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwYXRoLnBvaW50UmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcG9pbnRSYWRpdXM7XG4gICAgICBwb2ludFJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogKGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK18pLCArXyk7XG4gICAgICByZXR1cm4gcGF0aDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBwYXRoLnByb2plY3Rpb24oZDMuZ2VvLmFsYmVyc1VzYSgpKS5jb250ZXh0KG51bGwpO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fcGF0aFByb2plY3RTdHJlYW0ocHJvamVjdCkge1xuICAgIHZhciByZXNhbXBsZSA9IGQzX2dlb19yZXNhbXBsZShmdW5jdGlvbih4LCB5KSB7XG4gICAgICByZXR1cm4gcHJvamVjdChbIHggKiBkM19kZWdyZWVzLCB5ICogZDNfZGVncmVlcyBdKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zKHJlc2FtcGxlKHN0cmVhbSkpO1xuICAgIH07XG4gIH1cbiAgZDMuZ2VvLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG1ldGhvZHMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RyZWFtOiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgICAgdmFyIHRyYW5zZm9ybSA9IG5ldyBkM19nZW9fdHJhbnNmb3JtKHN0cmVhbSk7XG4gICAgICAgIGZvciAodmFyIGsgaW4gbWV0aG9kcykgdHJhbnNmb3JtW2tdID0gbWV0aG9kc1trXTtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybTtcbiAgICAgIH1cbiAgICB9O1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnNmb3JtKHN0cmVhbSkge1xuICAgIHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuICB9XG4gIGQzX2dlb190cmFuc2Zvcm0ucHJvdG90eXBlID0ge1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICB9LFxuICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5zcGhlcmUoKTtcbiAgICB9LFxuICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICB9LFxuICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0ubGluZUVuZCgpO1xuICAgIH0sXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnNmb3JtUG9pbnQoc3RyZWFtLCBwb2ludCkge1xuICAgIHJldHVybiB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0uc3BoZXJlKCk7XG4gICAgICB9LFxuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzLmdlby5wcm9qZWN0aW9uID0gZDNfZ2VvX3Byb2plY3Rpb247XG4gIGQzLmdlby5wcm9qZWN0aW9uTXV0YXRvciA9IGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcjtcbiAgZnVuY3Rpb24gZDNfZ2VvX3Byb2plY3Rpb24ocHJvamVjdCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbk11dGF0b3IoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcHJvamVjdDtcbiAgICB9KSgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpIHtcbiAgICB2YXIgcHJvamVjdCwgcm90YXRlLCBwcm9qZWN0Um90YXRlLCBwcm9qZWN0UmVzYW1wbGUgPSBkM19nZW9fcmVzYW1wbGUoZnVuY3Rpb24oeCwgeSkge1xuICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICByZXR1cm4gWyB4WzBdICogayArIM60eCwgzrR5IC0geFsxXSAqIGsgXTtcbiAgICB9KSwgayA9IDE1MCwgeCA9IDQ4MCwgeSA9IDI1MCwgzrsgPSAwLCDPhiA9IDAsIM60zrsgPSAwLCDOtM+GID0gMCwgzrTOsyA9IDAsIM60eCwgzrR5LCBwcmVjbGlwID0gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4sIHBvc3RjbGlwID0gZDNfaWRlbnRpdHksIGNsaXBBbmdsZSA9IG51bGwsIGNsaXBFeHRlbnQgPSBudWxsLCBzdHJlYW07XG4gICAgZnVuY3Rpb24gcHJvamVjdGlvbihwb2ludCkge1xuICAgICAgcG9pbnQgPSBwcm9qZWN0Um90YXRlKHBvaW50WzBdICogZDNfcmFkaWFucywgcG9pbnRbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBbIHBvaW50WzBdICogayArIM60eCwgzrR5IC0gcG9pbnRbMV0gKiBrIF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGludmVydChwb2ludCkge1xuICAgICAgcG9pbnQgPSBwcm9qZWN0Um90YXRlLmludmVydCgocG9pbnRbMF0gLSDOtHgpIC8gaywgKM60eSAtIHBvaW50WzFdKSAvIGspO1xuICAgICAgcmV0dXJuIHBvaW50ICYmIFsgcG9pbnRbMF0gKiBkM19kZWdyZWVzLCBwb2ludFsxXSAqIGQzX2RlZ3JlZXMgXTtcbiAgICB9XG4gICAgcHJvamVjdGlvbi5zdHJlYW0gPSBmdW5jdGlvbihvdXRwdXQpIHtcbiAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlO1xuICAgICAgc3RyZWFtID0gZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zKHByZWNsaXAocm90YXRlLCBwcm9qZWN0UmVzYW1wbGUocG9zdGNsaXAob3V0cHV0KSkpKTtcbiAgICAgIHN0cmVhbS52YWxpZCA9IHRydWU7XG4gICAgICByZXR1cm4gc3RyZWFtO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5jbGlwQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwQW5nbGU7XG4gICAgICBwcmVjbGlwID0gXyA9PSBudWxsID8gKGNsaXBBbmdsZSA9IF8sIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuKSA6IGQzX2dlb19jbGlwQ2lyY2xlKChjbGlwQW5nbGUgPSArXykgKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBpbnZhbGlkYXRlKCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwRXh0ZW50O1xuICAgICAgY2xpcEV4dGVudCA9IF87XG4gICAgICBwb3N0Y2xpcCA9IF8gPyBkM19nZW9fY2xpcEV4dGVudChfWzBdWzBdLCBfWzBdWzFdLCBfWzFdWzBdLCBfWzFdWzFdKSA6IGQzX2lkZW50aXR5O1xuICAgICAgcmV0dXJuIGludmFsaWRhdGUoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBrO1xuICAgICAgayA9ICtfO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgeCwgeSBdO1xuICAgICAgeCA9ICtfWzBdO1xuICAgICAgeSA9ICtfWzFdO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgzrsgKiBkM19kZWdyZWVzLCDPhiAqIGQzX2RlZ3JlZXMgXTtcbiAgICAgIM67ID0gX1swXSAlIDM2MCAqIGQzX3JhZGlhbnM7XG4gICAgICDPhiA9IF9bMV0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgzrTOuyAqIGQzX2RlZ3JlZXMsIM60z4YgKiBkM19kZWdyZWVzLCDOtM6zICogZDNfZGVncmVlcyBdO1xuICAgICAgzrTOuyA9IF9bMF0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgzrTPhiA9IF9bMV0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgzrTOsyA9IF8ubGVuZ3RoID4gMiA/IF9bMl0gJSAzNjAgKiBkM19yYWRpYW5zIDogMDtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgZDMucmViaW5kKHByb2plY3Rpb24sIHByb2plY3RSZXNhbXBsZSwgXCJwcmVjaXNpb25cIik7XG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICBwcm9qZWN0Um90YXRlID0gZDNfZ2VvX2NvbXBvc2Uocm90YXRlID0gZDNfZ2VvX3JvdGF0aW9uKM60zrssIM60z4YsIM60zrMpLCBwcm9qZWN0KTtcbiAgICAgIHZhciBjZW50ZXIgPSBwcm9qZWN0KM67LCDPhik7XG4gICAgICDOtHggPSB4IC0gY2VudGVyWzBdICogaztcbiAgICAgIM60eSA9IHkgKyBjZW50ZXJbMV0gKiBrO1xuICAgICAgcmV0dXJuIGludmFsaWRhdGUoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW52YWxpZGF0ZSgpIHtcbiAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlLCBzdHJlYW0gPSBudWxsO1xuICAgICAgcmV0dXJuIHByb2plY3Rpb247XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHByb2plY3QgPSBwcm9qZWN0QXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHByb2plY3Rpb24uaW52ZXJ0ID0gcHJvamVjdC5pbnZlcnQgJiYgaW52ZXJ0O1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcHJvamVjdGlvblJhZGlhbnMoc3RyZWFtKSB7XG4gICAgcmV0dXJuIGQzX2dlb190cmFuc2Zvcm1Qb2ludChzdHJlYW0sIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHN0cmVhbS5wb2ludCh4ICogZDNfcmFkaWFucywgeSAqIGQzX3JhZGlhbnMpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19lcXVpcmVjdGFuZ3VsYXIozrssIM+GKSB7XG4gICAgcmV0dXJuIFsgzrssIM+GIF07XG4gIH1cbiAgKGQzLmdlby5lcXVpcmVjdGFuZ3VsYXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcik7XG4gIH0pLnJhdyA9IGQzX2dlb19lcXVpcmVjdGFuZ3VsYXIuaW52ZXJ0ID0gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcjtcbiAgZDMuZ2VvLnJvdGF0aW9uID0gZnVuY3Rpb24ocm90YXRlKSB7XG4gICAgcm90YXRlID0gZDNfZ2VvX3JvdGF0aW9uKHJvdGF0ZVswXSAlIDM2MCAqIGQzX3JhZGlhbnMsIHJvdGF0ZVsxXSAqIGQzX3JhZGlhbnMsIHJvdGF0ZS5sZW5ndGggPiAyID8gcm90YXRlWzJdICogZDNfcmFkaWFucyA6IDApO1xuICAgIGZ1bmN0aW9uIGZvcndhcmQoY29vcmRpbmF0ZXMpIHtcbiAgICAgIGNvb3JkaW5hdGVzID0gcm90YXRlKGNvb3JkaW5hdGVzWzBdICogZDNfcmFkaWFucywgY29vcmRpbmF0ZXNbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlcztcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgICAgY29vcmRpbmF0ZXMgPSByb3RhdGUuaW52ZXJ0KGNvb3JkaW5hdGVzWzBdICogZDNfcmFkaWFucywgY29vcmRpbmF0ZXNbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlcztcbiAgICB9O1xuICAgIHJldHVybiBmb3J3YXJkO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9faWRlbnRpdHlSb3RhdGlvbijOuywgz4YpIHtcbiAgICByZXR1cm4gWyDOuyA+IM+AID8gzrsgLSDPhCA6IM67IDwgLc+AID8gzrsgKyDPhCA6IM67LCDPhiBdO1xuICB9XG4gIGQzX2dlb19pZGVudGl0eVJvdGF0aW9uLmludmVydCA9IGQzX2dlb19lcXVpcmVjdGFuZ3VsYXI7XG4gIGZ1bmN0aW9uIGQzX2dlb19yb3RhdGlvbijOtM67LCDOtM+GLCDOtM6zKSB7XG4gICAgcmV0dXJuIM60zrsgPyDOtM+GIHx8IM60zrMgPyBkM19nZW9fY29tcG9zZShkM19nZW9fcm90YXRpb27OuyjOtM67KSwgZDNfZ2VvX3JvdGF0aW9uz4bOsyjOtM+GLCDOtM6zKSkgOiBkM19nZW9fcm90YXRpb27OuyjOtM67KSA6IM60z4YgfHwgzrTOsyA/IGQzX2dlb19yb3RhdGlvbs+GzrMozrTPhiwgzrTOsykgOiBkM19nZW9faWRlbnRpdHlSb3RhdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fZm9yd2FyZFJvdGF0aW9uzrsozrTOuykge1xuICAgIHJldHVybiBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIHJldHVybiDOuyArPSDOtM67LCBbIM67ID4gz4AgPyDOuyAtIM+EIDogzrsgPCAtz4AgPyDOuyArIM+EIDogzrssIM+GIF07XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcm90YXRpb27OuyjOtM67KSB7XG4gICAgdmFyIHJvdGF0aW9uID0gZDNfZ2VvX2ZvcndhcmRSb3RhdGlvbs67KM60zrspO1xuICAgIHJvdGF0aW9uLmludmVydCA9IGQzX2dlb19mb3J3YXJkUm90YXRpb27OuygtzrTOuyk7XG4gICAgcmV0dXJuIHJvdGF0aW9uO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19yb3RhdGlvbs+GzrMozrTPhiwgzrTOsykge1xuICAgIHZhciBjb3POtM+GID0gTWF0aC5jb3MozrTPhiksIHNpbs60z4YgPSBNYXRoLnNpbijOtM+GKSwgY29zzrTOsyA9IE1hdGguY29zKM60zrMpLCBzaW7OtM6zID0gTWF0aC5zaW4ozrTOsyk7XG4gICAgZnVuY3Rpb24gcm90YXRpb24ozrssIM+GKSB7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiksIHggPSBNYXRoLmNvcyjOuykgKiBjb3PPhiwgeSA9IE1hdGguc2luKM67KSAqIGNvc8+GLCB6ID0gTWF0aC5zaW4oz4YpLCBrID0geiAqIGNvc860z4YgKyB4ICogc2luzrTPhjtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSAqIGNvc860zrMgLSBrICogc2luzrTOsywgeCAqIGNvc860z4YgLSB6ICogc2luzrTPhiksIGQzX2FzaW4oayAqIGNvc860zrMgKyB5ICogc2luzrTOsykgXTtcbiAgICB9XG4gICAgcm90YXRpb24uaW52ZXJ0ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiksIHggPSBNYXRoLmNvcyjOuykgKiBjb3PPhiwgeSA9IE1hdGguc2luKM67KSAqIGNvc8+GLCB6ID0gTWF0aC5zaW4oz4YpLCBrID0geiAqIGNvc860zrMgLSB5ICogc2luzrTOsztcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSAqIGNvc860zrMgKyB6ICogc2luzrTOsywgeCAqIGNvc860z4YgKyBrICogc2luzrTPhiksIGQzX2FzaW4oayAqIGNvc860z4YgLSB4ICogc2luzrTPhikgXTtcbiAgICB9O1xuICAgIHJldHVybiByb3RhdGlvbjtcbiAgfVxuICBkMy5nZW8uY2lyY2xlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9yaWdpbiA9IFsgMCwgMCBdLCBhbmdsZSwgcHJlY2lzaW9uID0gNiwgaW50ZXJwb2xhdGU7XG4gICAgZnVuY3Rpb24gY2lyY2xlKCkge1xuICAgICAgdmFyIGNlbnRlciA9IHR5cGVvZiBvcmlnaW4gPT09IFwiZnVuY3Rpb25cIiA/IG9yaWdpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogb3JpZ2luLCByb3RhdGUgPSBkM19nZW9fcm90YXRpb24oLWNlbnRlclswXSAqIGQzX3JhZGlhbnMsIC1jZW50ZXJbMV0gKiBkM19yYWRpYW5zLCAwKS5pbnZlcnQsIHJpbmcgPSBbXTtcbiAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHtcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICByaW5nLnB1c2goeCA9IHJvdGF0ZSh4LCB5KSk7XG4gICAgICAgICAgeFswXSAqPSBkM19kZWdyZWVzLCB4WzFdICo9IGQzX2RlZ3JlZXM7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJQb2x5Z29uXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBbIHJpbmcgXVxuICAgICAgfTtcbiAgICB9XG4gICAgY2lyY2xlLm9yaWdpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yaWdpbjtcbiAgICAgIG9yaWdpbiA9IHg7XG4gICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH07XG4gICAgY2lyY2xlLmFuZ2xlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYW5nbGU7XG4gICAgICBpbnRlcnBvbGF0ZSA9IGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZSgoYW5nbGUgPSAreCkgKiBkM19yYWRpYW5zLCBwcmVjaXNpb24gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjaXJjbGU7XG4gICAgfTtcbiAgICBjaXJjbGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJlY2lzaW9uO1xuICAgICAgaW50ZXJwb2xhdGUgPSBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUoYW5nbGUgKiBkM19yYWRpYW5zLCAocHJlY2lzaW9uID0gK18pICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH07XG4gICAgcmV0dXJuIGNpcmNsZS5hbmdsZSg5MCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZShyYWRpdXMsIHByZWNpc2lvbikge1xuICAgIHZhciBjciA9IE1hdGguY29zKHJhZGl1cyksIHNyID0gTWF0aC5zaW4ocmFkaXVzKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oZnJvbSwgdG8sIGRpcmVjdGlvbiwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBzdGVwID0gZGlyZWN0aW9uICogcHJlY2lzaW9uO1xuICAgICAgaWYgKGZyb20gIT0gbnVsbCkge1xuICAgICAgICBmcm9tID0gZDNfZ2VvX2NpcmNsZUFuZ2xlKGNyLCBmcm9tKTtcbiAgICAgICAgdG8gPSBkM19nZW9fY2lyY2xlQW5nbGUoY3IsIHRvKTtcbiAgICAgICAgaWYgKGRpcmVjdGlvbiA+IDAgPyBmcm9tIDwgdG8gOiBmcm9tID4gdG8pIGZyb20gKz0gZGlyZWN0aW9uICogz4Q7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmcm9tID0gcmFkaXVzICsgZGlyZWN0aW9uICogz4Q7XG4gICAgICAgIHRvID0gcmFkaXVzIC0gLjUgKiBzdGVwO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgcG9pbnQsIHQgPSBmcm9tOyBkaXJlY3Rpb24gPiAwID8gdCA+IHRvIDogdCA8IHRvOyB0IC09IHN0ZXApIHtcbiAgICAgICAgbGlzdGVuZXIucG9pbnQoKHBvaW50ID0gZDNfZ2VvX3NwaGVyaWNhbChbIGNyLCAtc3IgKiBNYXRoLmNvcyh0KSwgLXNyICogTWF0aC5zaW4odCkgXSkpWzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2lyY2xlQW5nbGUoY3IsIHBvaW50KSB7XG4gICAgdmFyIGEgPSBkM19nZW9fY2FydGVzaWFuKHBvaW50KTtcbiAgICBhWzBdIC09IGNyO1xuICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoYSk7XG4gICAgdmFyIGFuZ2xlID0gZDNfYWNvcygtYVsxXSk7XG4gICAgcmV0dXJuICgoLWFbMl0gPCAwID8gLWFuZ2xlIDogYW5nbGUpICsgMiAqIE1hdGguUEkgLSDOtSkgJSAoMiAqIE1hdGguUEkpO1xuICB9XG4gIGQzLmdlby5kaXN0YW5jZSA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgzpTOuyA9IChiWzBdIC0gYVswXSkgKiBkM19yYWRpYW5zLCDPhjAgPSBhWzFdICogZDNfcmFkaWFucywgz4YxID0gYlsxXSAqIGQzX3JhZGlhbnMsIHNpbs6UzrsgPSBNYXRoLnNpbijOlM67KSwgY29zzpTOuyA9IE1hdGguY29zKM6UzrspLCBzaW7PhjAgPSBNYXRoLnNpbijPhjApLCBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCBzaW7PhjEgPSBNYXRoLnNpbijPhjEpLCBjb3PPhjEgPSBNYXRoLmNvcyjPhjEpLCB0O1xuICAgIHJldHVybiBNYXRoLmF0YW4yKE1hdGguc3FydCgodCA9IGNvc8+GMSAqIHNpbs6UzrspICogdCArICh0ID0gY29zz4YwICogc2luz4YxIC0gc2luz4YwICogY29zz4YxICogY29zzpTOuykgKiB0KSwgc2luz4YwICogc2luz4YxICsgY29zz4YwICogY29zz4YxICogY29zzpTOuyk7XG4gIH07XG4gIGQzLmdlby5ncmF0aWN1bGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgeDEsIHgwLCBYMSwgWDAsIHkxLCB5MCwgWTEsIFkwLCBkeCA9IDEwLCBkeSA9IGR4LCBEWCA9IDkwLCBEWSA9IDM2MCwgeCwgeSwgWCwgWSwgcHJlY2lzaW9uID0gMi41O1xuICAgIGZ1bmN0aW9uIGdyYXRpY3VsZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiTXVsdGlMaW5lU3RyaW5nXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBsaW5lcygpXG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lcygpIHtcbiAgICAgIHJldHVybiBkMy5yYW5nZShNYXRoLmNlaWwoWDAgLyBEWCkgKiBEWCwgWDEsIERYKS5tYXAoWCkuY29uY2F0KGQzLnJhbmdlKE1hdGguY2VpbChZMCAvIERZKSAqIERZLCBZMSwgRFkpLm1hcChZKSkuY29uY2F0KGQzLnJhbmdlKE1hdGguY2VpbCh4MCAvIGR4KSAqIGR4LCB4MSwgZHgpLmZpbHRlcihmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBhYnMoeCAlIERYKSA+IM61O1xuICAgICAgfSkubWFwKHgpKS5jb25jYXQoZDMucmFuZ2UoTWF0aC5jZWlsKHkwIC8gZHkpICogZHksIHkxLCBkeSkuZmlsdGVyKGZ1bmN0aW9uKHkpIHtcbiAgICAgICAgcmV0dXJuIGFicyh5ICUgRFkpID4gzrU7XG4gICAgICB9KS5tYXAoeSkpO1xuICAgIH1cbiAgICBncmF0aWN1bGUubGluZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBsaW5lcygpLm1hcChmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6IFwiTGluZVN0cmluZ1wiLFxuICAgICAgICAgIGNvb3JkaW5hdGVzOiBjb29yZGluYXRlc1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBncmF0aWN1bGUub3V0bGluZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJQb2x5Z29uXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBbIFgoWDApLmNvbmNhdChZKFkxKS5zbGljZSgxKSwgWChYMSkucmV2ZXJzZSgpLnNsaWNlKDEpLCBZKFkwKS5yZXZlcnNlKCkuc2xpY2UoMSkpIF1cbiAgICAgIH07XG4gICAgfTtcbiAgICBncmF0aWN1bGUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLm1pbm9yRXh0ZW50KCk7XG4gICAgICByZXR1cm4gZ3JhdGljdWxlLm1ham9yRXh0ZW50KF8pLm1pbm9yRXh0ZW50KF8pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1ham9yRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBbIFgwLCBZMCBdLCBbIFgxLCBZMSBdIF07XG4gICAgICBYMCA9ICtfWzBdWzBdLCBYMSA9ICtfWzFdWzBdO1xuICAgICAgWTAgPSArX1swXVsxXSwgWTEgPSArX1sxXVsxXTtcbiAgICAgIGlmIChYMCA+IFgxKSBfID0gWDAsIFgwID0gWDEsIFgxID0gXztcbiAgICAgIGlmIChZMCA+IFkxKSBfID0gWTAsIFkwID0gWTEsIFkxID0gXztcbiAgICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gICAgfTtcbiAgICBncmF0aWN1bGUubWlub3JFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIFsgeDAsIHkwIF0sIFsgeDEsIHkxIF0gXTtcbiAgICAgIHgwID0gK19bMF1bMF0sIHgxID0gK19bMV1bMF07XG4gICAgICB5MCA9ICtfWzBdWzFdLCB5MSA9ICtfWzFdWzFdO1xuICAgICAgaWYgKHgwID4geDEpIF8gPSB4MCwgeDAgPSB4MSwgeDEgPSBfO1xuICAgICAgaWYgKHkwID4geTEpIF8gPSB5MCwgeTAgPSB5MSwgeTEgPSBfO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5wcmVjaXNpb24ocHJlY2lzaW9uKTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5zdGVwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLm1pbm9yU3RlcCgpO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5tYWpvclN0ZXAoXykubWlub3JTdGVwKF8pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1ham9yU3RlcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgRFgsIERZIF07XG4gICAgICBEWCA9ICtfWzBdLCBEWSA9ICtfWzFdO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5taW5vclN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIGR4LCBkeSBdO1xuICAgICAgZHggPSArX1swXSwgZHkgPSArX1sxXTtcbiAgICAgIHJldHVybiBncmF0aWN1bGU7XG4gICAgfTtcbiAgICBncmF0aWN1bGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJlY2lzaW9uO1xuICAgICAgcHJlY2lzaW9uID0gK187XG4gICAgICB4ID0gZDNfZ2VvX2dyYXRpY3VsZVgoeTAsIHkxLCA5MCk7XG4gICAgICB5ID0gZDNfZ2VvX2dyYXRpY3VsZVkoeDAsIHgxLCBwcmVjaXNpb24pO1xuICAgICAgWCA9IGQzX2dlb19ncmF0aWN1bGVYKFkwLCBZMSwgOTApO1xuICAgICAgWSA9IGQzX2dlb19ncmF0aWN1bGVZKFgwLCBYMSwgcHJlY2lzaW9uKTtcbiAgICAgIHJldHVybiBncmF0aWN1bGU7XG4gICAgfTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLm1ham9yRXh0ZW50KFsgWyAtMTgwLCAtOTAgKyDOtSBdLCBbIDE4MCwgOTAgLSDOtSBdIF0pLm1pbm9yRXh0ZW50KFsgWyAtMTgwLCAtODAgLSDOtSBdLCBbIDE4MCwgODAgKyDOtSBdIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fZ3JhdGljdWxlWCh5MCwgeTEsIGR5KSB7XG4gICAgdmFyIHkgPSBkMy5yYW5nZSh5MCwgeTEgLSDOtSwgZHkpLmNvbmNhdCh5MSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB5Lm1hcChmdW5jdGlvbih5KSB7XG4gICAgICAgIHJldHVybiBbIHgsIHkgXTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2dyYXRpY3VsZVkoeDAsIHgxLCBkeCkge1xuICAgIHZhciB4ID0gZDMucmFuZ2UoeDAsIHgxIC0gzrUsIGR4KS5jb25jYXQoeDEpO1xuICAgIHJldHVybiBmdW5jdGlvbih5KSB7XG4gICAgICByZXR1cm4geC5tYXAoZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gWyB4LCB5IF07XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NvdXJjZShkKSB7XG4gICAgcmV0dXJuIGQuc291cmNlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RhcmdldChkKSB7XG4gICAgcmV0dXJuIGQudGFyZ2V0O1xuICB9XG4gIGQzLmdlby5ncmVhdEFyYyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSBkM19zb3VyY2UsIHNvdXJjZV8sIHRhcmdldCA9IGQzX3RhcmdldCwgdGFyZ2V0XztcbiAgICBmdW5jdGlvbiBncmVhdEFyYygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiTGluZVN0cmluZ1wiLFxuICAgICAgICBjb29yZGluYXRlczogWyBzb3VyY2VfIHx8IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0YXJnZXRfIHx8IHRhcmdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIF1cbiAgICAgIH07XG4gICAgfVxuICAgIGdyZWF0QXJjLmRpc3RhbmNlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDMuZ2VvLmRpc3RhbmNlKHNvdXJjZV8gfHwgc291cmNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRhcmdldF8gfHwgdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gICAgZ3JlYXRBcmMuc291cmNlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc291cmNlO1xuICAgICAgc291cmNlID0gXywgc291cmNlXyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBudWxsIDogXztcbiAgICAgIHJldHVybiBncmVhdEFyYztcbiAgICB9O1xuICAgIGdyZWF0QXJjLnRhcmdldCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgICAgIHRhcmdldCA9IF8sIHRhcmdldF8gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gbnVsbCA6IF87XG4gICAgICByZXR1cm4gZ3JlYXRBcmM7XG4gICAgfTtcbiAgICBncmVhdEFyYy5wcmVjaXNpb24gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gZ3JlYXRBcmMgOiAwO1xuICAgIH07XG4gICAgcmV0dXJuIGdyZWF0QXJjO1xuICB9O1xuICBkMy5nZW8uaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihzb3VyY2UsIHRhcmdldCkge1xuICAgIHJldHVybiBkM19nZW9faW50ZXJwb2xhdGUoc291cmNlWzBdICogZDNfcmFkaWFucywgc291cmNlWzFdICogZDNfcmFkaWFucywgdGFyZ2V0WzBdICogZDNfcmFkaWFucywgdGFyZ2V0WzFdICogZDNfcmFkaWFucyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19pbnRlcnBvbGF0ZSh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHZhciBjeTAgPSBNYXRoLmNvcyh5MCksIHN5MCA9IE1hdGguc2luKHkwKSwgY3kxID0gTWF0aC5jb3MoeTEpLCBzeTEgPSBNYXRoLnNpbih5MSksIGt4MCA9IGN5MCAqIE1hdGguY29zKHgwKSwga3kwID0gY3kwICogTWF0aC5zaW4oeDApLCBreDEgPSBjeTEgKiBNYXRoLmNvcyh4MSksIGt5MSA9IGN5MSAqIE1hdGguc2luKHgxKSwgZCA9IDIgKiBNYXRoLmFzaW4oTWF0aC5zcXJ0KGQzX2hhdmVyc2luKHkxIC0geTApICsgY3kwICogY3kxICogZDNfaGF2ZXJzaW4oeDEgLSB4MCkpKSwgayA9IDEgLyBNYXRoLnNpbihkKTtcbiAgICB2YXIgaW50ZXJwb2xhdGUgPSBkID8gZnVuY3Rpb24odCkge1xuICAgICAgdmFyIEIgPSBNYXRoLnNpbih0ICo9IGQpICogaywgQSA9IE1hdGguc2luKGQgLSB0KSAqIGssIHggPSBBICoga3gwICsgQiAqIGt4MSwgeSA9IEEgKiBreTAgKyBCICoga3kxLCB6ID0gQSAqIHN5MCArIEIgKiBzeTE7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHksIHgpICogZDNfZGVncmVlcywgTWF0aC5hdGFuMih6LCBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSkpICogZDNfZGVncmVlcyBdO1xuICAgIH0gOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBbIHgwICogZDNfZGVncmVlcywgeTAgKiBkM19kZWdyZWVzIF07XG4gICAgfTtcbiAgICBpbnRlcnBvbGF0ZS5kaXN0YW5jZSA9IGQ7XG4gICAgcmV0dXJuIGludGVycG9sYXRlO1xuICB9XG4gIGQzLmdlby5sZW5ndGggPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fbGVuZ3RoU3VtID0gMDtcbiAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgZDNfZ2VvX2xlbmd0aCk7XG4gICAgcmV0dXJuIGQzX2dlb19sZW5ndGhTdW07XG4gIH07XG4gIHZhciBkM19nZW9fbGVuZ3RoU3VtO1xuICB2YXIgZDNfZ2VvX2xlbmd0aCA9IHtcbiAgICBzcGhlcmU6IGQzX25vb3AsXG4gICAgcG9pbnQ6IGQzX25vb3AsXG4gICAgbGluZVN0YXJ0OiBkM19nZW9fbGVuZ3RoTGluZVN0YXJ0LFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBkM19ub29wLFxuICAgIHBvbHlnb25FbmQ6IGQzX25vb3BcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2xlbmd0aExpbmVTdGFydCgpIHtcbiAgICB2YXIgzrswLCBzaW7PhjAsIGNvc8+GMDtcbiAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuzAgPSDOuyAqIGQzX3JhZGlhbnMsIHNpbs+GMCA9IE1hdGguc2luKM+GICo9IGQzX3JhZGlhbnMpLCBjb3PPhjAgPSBNYXRoLmNvcyjPhik7XG4gICAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gbmV4dFBvaW50O1xuICAgIH07XG4gICAgZDNfZ2VvX2xlbmd0aC5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gZDNfZ2VvX2xlbmd0aC5saW5lRW5kID0gZDNfbm9vcDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIHZhciBzaW7PhiA9IE1hdGguc2luKM+GICo9IGQzX3JhZGlhbnMpLCBjb3PPhiA9IE1hdGguY29zKM+GKSwgdCA9IGFicygozrsgKj0gZDNfcmFkaWFucykgLSDOuzApLCBjb3POlM67ID0gTWF0aC5jb3ModCk7XG4gICAgICBkM19nZW9fbGVuZ3RoU3VtICs9IE1hdGguYXRhbjIoTWF0aC5zcXJ0KCh0ID0gY29zz4YgKiBNYXRoLnNpbih0KSkgKiB0ICsgKHQgPSBjb3PPhjAgKiBzaW7PhiAtIHNpbs+GMCAqIGNvc8+GICogY29zzpTOuykgKiB0KSwgc2luz4YwICogc2luz4YgKyBjb3PPhjAgKiBjb3PPhiAqIGNvc86UzrspO1xuICAgICAgzrswID0gzrssIHNpbs+GMCA9IHNpbs+GLCBjb3PPhjAgPSBjb3PPhjtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2F6aW11dGhhbChzY2FsZSwgYW5nbGUpIHtcbiAgICBmdW5jdGlvbiBhemltdXRoYWwozrssIM+GKSB7XG4gICAgICB2YXIgY29zzrsgPSBNYXRoLmNvcyjOuyksIGNvc8+GID0gTWF0aC5jb3Moz4YpLCBrID0gc2NhbGUoY29zzrsgKiBjb3PPhik7XG4gICAgICByZXR1cm4gWyBrICogY29zz4YgKiBNYXRoLnNpbijOuyksIGsgKiBNYXRoLnNpbijPhikgXTtcbiAgICB9XG4gICAgYXppbXV0aGFsLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciDPgSA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5KSwgYyA9IGFuZ2xlKM+BKSwgc2luYyA9IE1hdGguc2luKGMpLCBjb3NjID0gTWF0aC5jb3MoYyk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHggKiBzaW5jLCDPgSAqIGNvc2MpLCBNYXRoLmFzaW4oz4EgJiYgeSAqIHNpbmMgLyDPgSkgXTtcbiAgICB9O1xuICAgIHJldHVybiBhemltdXRoYWw7XG4gIH1cbiAgdmFyIGQzX2dlb19hemltdXRoYWxFcXVhbEFyZWEgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KDIgLyAoMSArIGNvc867Y29zz4YpKTtcbiAgfSwgZnVuY3Rpb24oz4EpIHtcbiAgICByZXR1cm4gMiAqIE1hdGguYXNpbijPgSAvIDIpO1xuICB9KTtcbiAgKGQzLmdlby5hemltdXRoYWxFcXVhbEFyZWEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2F6aW11dGhhbEVxdWFsQXJlYSk7XG4gIH0pLnJhdyA9IGQzX2dlb19hemltdXRoYWxFcXVhbEFyZWE7XG4gIHZhciBkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICB2YXIgYyA9IE1hdGguYWNvcyhjb3POu2Nvc8+GKTtcbiAgICByZXR1cm4gYyAmJiBjIC8gTWF0aC5zaW4oYyk7XG4gIH0sIGQzX2lkZW50aXR5KTtcbiAgKGQzLmdlby5hemltdXRoYWxFcXVpZGlzdGFudCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQpO1xuICB9KS5yYXcgPSBkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQ7XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pY0NvbmZvcm1hbCjPhjAsIM+GMSkge1xuICAgIHZhciBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCB0ID0gZnVuY3Rpb24oz4YpIHtcbiAgICAgIHJldHVybiBNYXRoLnRhbijPgCAvIDQgKyDPhiAvIDIpO1xuICAgIH0sIG4gPSDPhjAgPT09IM+GMSA/IE1hdGguc2luKM+GMCkgOiBNYXRoLmxvZyhjb3PPhjAgLyBNYXRoLmNvcyjPhjEpKSAvIE1hdGgubG9nKHQoz4YxKSAvIHQoz4YwKSksIEYgPSBjb3PPhjAgKiBNYXRoLnBvdyh0KM+GMCksIG4pIC8gbjtcbiAgICBpZiAoIW4pIHJldHVybiBkM19nZW9fbWVyY2F0b3I7XG4gICAgZnVuY3Rpb24gZm9yd2FyZCjOuywgz4YpIHtcbiAgICAgIGlmIChGID4gMCkge1xuICAgICAgICBpZiAoz4YgPCAtaGFsZs+AICsgzrUpIM+GID0gLWhhbGbPgCArIM61O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKM+GID4gaGFsZs+AIC0gzrUpIM+GID0gaGFsZs+AIC0gzrU7XG4gICAgICB9XG4gICAgICB2YXIgz4EgPSBGIC8gTWF0aC5wb3codCjPhiksIG4pO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbihuICogzrspLCBGIC0gz4EgKiBNYXRoLmNvcyhuICogzrspIF07XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BMF95ID0gRiAtIHksIM+BID0gZDNfc2duKG4pICogTWF0aC5zcXJ0KHggKiB4ICsgz4EwX3kgKiDPgTBfeSk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHgsIM+BMF95KSAvIG4sIDIgKiBNYXRoLmF0YW4oTWF0aC5wb3coRiAvIM+BLCAxIC8gbikpIC0gaGFsZs+AIF07XG4gICAgfTtcbiAgICByZXR1cm4gZm9yd2FyZDtcbiAgfVxuICAoZDMuZ2VvLmNvbmljQ29uZm9ybWFsID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19jb25pYyhkM19nZW9fY29uaWNDb25mb3JtYWwpO1xuICB9KS5yYXcgPSBkM19nZW9fY29uaWNDb25mb3JtYWw7XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pY0VxdWlkaXN0YW50KM+GMCwgz4YxKSB7XG4gICAgdmFyIGNvc8+GMCA9IE1hdGguY29zKM+GMCksIG4gPSDPhjAgPT09IM+GMSA/IE1hdGguc2luKM+GMCkgOiAoY29zz4YwIC0gTWF0aC5jb3Moz4YxKSkgLyAoz4YxIC0gz4YwKSwgRyA9IGNvc8+GMCAvIG4gKyDPhjA7XG4gICAgaWYgKGFicyhuKSA8IM61KSByZXR1cm4gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcjtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKM67LCDPhikge1xuICAgICAgdmFyIM+BID0gRyAtIM+GO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbihuICogzrspLCBHIC0gz4EgKiBNYXRoLmNvcyhuICogzrspIF07XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BMF95ID0gRyAtIHk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHgsIM+BMF95KSAvIG4sIEcgLSBkM19zZ24obikgKiBNYXRoLnNxcnQoeCAqIHggKyDPgTBfeSAqIM+BMF95KSBdO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH1cbiAgKGQzLmdlby5jb25pY0VxdWlkaXN0YW50ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19jb25pYyhkM19nZW9fY29uaWNFcXVpZGlzdGFudCk7XG4gIH0pLnJhdyA9IGQzX2dlb19jb25pY0VxdWlkaXN0YW50O1xuICB2YXIgZDNfZ2VvX2dub21vbmljID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgcmV0dXJuIDEgLyBjb3POu2Nvc8+GO1xuICB9LCBNYXRoLmF0YW4pO1xuICAoZDMuZ2VvLmdub21vbmljID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19nbm9tb25pYyk7XG4gIH0pLnJhdyA9IGQzX2dlb19nbm9tb25pYztcbiAgZnVuY3Rpb24gZDNfZ2VvX21lcmNhdG9yKM67LCDPhikge1xuICAgIHJldHVybiBbIM67LCBNYXRoLmxvZyhNYXRoLnRhbijPgCAvIDQgKyDPhiAvIDIpKSBdO1xuICB9XG4gIGQzX2dlb19tZXJjYXRvci5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsgeCwgMiAqIE1hdGguYXRhbihNYXRoLmV4cCh5KSkgLSBoYWxmz4AgXTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX21lcmNhdG9yUHJvamVjdGlvbihwcm9qZWN0KSB7XG4gICAgdmFyIG0gPSBkM19nZW9fcHJvamVjdGlvbihwcm9qZWN0KSwgc2NhbGUgPSBtLnNjYWxlLCB0cmFuc2xhdGUgPSBtLnRyYW5zbGF0ZSwgY2xpcEV4dGVudCA9IG0uY2xpcEV4dGVudCwgY2xpcEF1dG87XG4gICAgbS5zY2FsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSBzY2FsZS5hcHBseShtLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIHYgPT09IG0gPyBjbGlwQXV0byA/IG0uY2xpcEV4dGVudChudWxsKSA6IG0gOiB2O1xuICAgIH07XG4gICAgbS50cmFuc2xhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2ID0gdHJhbnNsYXRlLmFwcGx5KG0sIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdiA9PT0gbSA/IGNsaXBBdXRvID8gbS5jbGlwRXh0ZW50KG51bGwpIDogbSA6IHY7XG4gICAgfTtcbiAgICBtLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICB2YXIgdiA9IGNsaXBFeHRlbnQuYXBwbHkobSwgYXJndW1lbnRzKTtcbiAgICAgIGlmICh2ID09PSBtKSB7XG4gICAgICAgIGlmIChjbGlwQXV0byA9IF8gPT0gbnVsbCkge1xuICAgICAgICAgIHZhciBrID0gz4AgKiBzY2FsZSgpLCB0ID0gdHJhbnNsYXRlKCk7XG4gICAgICAgICAgY2xpcEV4dGVudChbIFsgdFswXSAtIGssIHRbMV0gLSBrIF0sIFsgdFswXSArIGssIHRbMV0gKyBrIF0gXSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY2xpcEF1dG8pIHtcbiAgICAgICAgdiA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdjtcbiAgICB9O1xuICAgIHJldHVybiBtLmNsaXBFeHRlbnQobnVsbCk7XG4gIH1cbiAgKGQzLmdlby5tZXJjYXRvciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uKGQzX2dlb19tZXJjYXRvcik7XG4gIH0pLnJhdyA9IGQzX2dlb19tZXJjYXRvcjtcbiAgdmFyIGQzX2dlb19vcnRob2dyYXBoaWMgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAxO1xuICB9LCBNYXRoLmFzaW4pO1xuICAoZDMuZ2VvLm9ydGhvZ3JhcGhpYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fb3J0aG9ncmFwaGljKTtcbiAgfSkucmF3ID0gZDNfZ2VvX29ydGhvZ3JhcGhpYztcbiAgdmFyIGQzX2dlb19zdGVyZW9ncmFwaGljID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgcmV0dXJuIDEgLyAoMSArIGNvc867Y29zz4YpO1xuICB9LCBmdW5jdGlvbijPgSkge1xuICAgIHJldHVybiAyICogTWF0aC5hdGFuKM+BKTtcbiAgfSk7XG4gIChkMy5nZW8uc3RlcmVvZ3JhcGhpYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fc3RlcmVvZ3JhcGhpYyk7XG4gIH0pLnJhdyA9IGQzX2dlb19zdGVyZW9ncmFwaGljO1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yKM67LCDPhikge1xuICAgIHJldHVybiBbIE1hdGgubG9nKE1hdGgudGFuKM+AIC8gNCArIM+GIC8gMikpLCAtzrsgXTtcbiAgfVxuICBkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4gWyAteSwgMiAqIE1hdGguYXRhbihNYXRoLmV4cCh4KSkgLSBoYWxmz4AgXTtcbiAgfTtcbiAgKGQzLmdlby50cmFuc3ZlcnNlTWVyY2F0b3IgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcHJvamVjdGlvbiA9IGQzX2dlb19tZXJjYXRvclByb2plY3Rpb24oZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvciksIGNlbnRlciA9IHByb2plY3Rpb24uY2VudGVyLCByb3RhdGUgPSBwcm9qZWN0aW9uLnJvdGF0ZTtcbiAgICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBfID8gY2VudGVyKFsgLV9bMV0sIF9bMF0gXSkgOiAoXyA9IGNlbnRlcigpLCBbIF9bMV0sIC1fWzBdIF0pO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gXyA/IHJvdGF0ZShbIF9bMF0sIF9bMV0sIF8ubGVuZ3RoID4gMiA/IF9bMl0gKyA5MCA6IDkwIF0pIDogKF8gPSByb3RhdGUoKSwgXG4gICAgICBbIF9bMF0sIF9bMV0sIF9bMl0gLSA5MCBdKTtcbiAgICB9O1xuICAgIHJldHVybiByb3RhdGUoWyAwLCAwLCA5MCBdKTtcbiAgfSkucmF3ID0gZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvcjtcbiAgZDMuZ2VvbSA9IHt9O1xuICBmdW5jdGlvbiBkM19nZW9tX3BvaW50WChkKSB7XG4gICAgcmV0dXJuIGRbMF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2ludFkoZCkge1xuICAgIHJldHVybiBkWzFdO1xuICB9XG4gIGQzLmdlb20uaHVsbCA9IGZ1bmN0aW9uKHZlcnRpY2VzKSB7XG4gICAgdmFyIHggPSBkM19nZW9tX3BvaW50WCwgeSA9IGQzX2dlb21fcG9pbnRZO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaHVsbCh2ZXJ0aWNlcyk7XG4gICAgZnVuY3Rpb24gaHVsbChkYXRhKSB7XG4gICAgICBpZiAoZGF0YS5sZW5ndGggPCAzKSByZXR1cm4gW107XG4gICAgICB2YXIgZnggPSBkM19mdW5jdG9yKHgpLCBmeSA9IGQzX2Z1bmN0b3IoeSksIGksIG4gPSBkYXRhLmxlbmd0aCwgcG9pbnRzID0gW10sIGZsaXBwZWRQb2ludHMgPSBbXTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcG9pbnRzLnB1c2goWyArZnguY2FsbCh0aGlzLCBkYXRhW2ldLCBpKSwgK2Z5LmNhbGwodGhpcywgZGF0YVtpXSwgaSksIGkgXSk7XG4gICAgICB9XG4gICAgICBwb2ludHMuc29ydChkM19nZW9tX2h1bGxPcmRlcik7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSBmbGlwcGVkUG9pbnRzLnB1c2goWyBwb2ludHNbaV1bMF0sIC1wb2ludHNbaV1bMV0gXSk7XG4gICAgICB2YXIgdXBwZXIgPSBkM19nZW9tX2h1bGxVcHBlcihwb2ludHMpLCBsb3dlciA9IGQzX2dlb21faHVsbFVwcGVyKGZsaXBwZWRQb2ludHMpO1xuICAgICAgdmFyIHNraXBMZWZ0ID0gbG93ZXJbMF0gPT09IHVwcGVyWzBdLCBza2lwUmlnaHQgPSBsb3dlcltsb3dlci5sZW5ndGggLSAxXSA9PT0gdXBwZXJbdXBwZXIubGVuZ3RoIC0gMV0sIHBvbHlnb24gPSBbXTtcbiAgICAgIGZvciAoaSA9IHVwcGVyLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSBwb2x5Z29uLnB1c2goZGF0YVtwb2ludHNbdXBwZXJbaV1dWzJdXSk7XG4gICAgICBmb3IgKGkgPSArc2tpcExlZnQ7IGkgPCBsb3dlci5sZW5ndGggLSBza2lwUmlnaHQ7ICsraSkgcG9seWdvbi5wdXNoKGRhdGFbcG9pbnRzW2xvd2VyW2ldXVsyXV0pO1xuICAgICAgcmV0dXJuIHBvbHlnb247XG4gICAgfVxuICAgIGh1bGwueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSBfLCBodWxsKSA6IHg7XG4gICAgfTtcbiAgICBodWxsLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gXywgaHVsbCkgOiB5O1xuICAgIH07XG4gICAgcmV0dXJuIGh1bGw7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21faHVsbFVwcGVyKHBvaW50cykge1xuICAgIHZhciBuID0gcG9pbnRzLmxlbmd0aCwgaHVsbCA9IFsgMCwgMSBdLCBocyA9IDI7XG4gICAgZm9yICh2YXIgaSA9IDI7IGkgPCBuOyBpKyspIHtcbiAgICAgIHdoaWxlIChocyA+IDEgJiYgZDNfY3Jvc3MyZChwb2ludHNbaHVsbFtocyAtIDJdXSwgcG9pbnRzW2h1bGxbaHMgLSAxXV0sIHBvaW50c1tpXSkgPD0gMCkgLS1ocztcbiAgICAgIGh1bGxbaHMrK10gPSBpO1xuICAgIH1cbiAgICByZXR1cm4gaHVsbC5zbGljZSgwLCBocyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9odWxsT3JkZXIoYSwgYikge1xuICAgIHJldHVybiBhWzBdIC0gYlswXSB8fCBhWzFdIC0gYlsxXTtcbiAgfVxuICBkMy5nZW9tLnBvbHlnb24gPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgIGQzX3N1YmNsYXNzKGNvb3JkaW5hdGVzLCBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUpO1xuICAgIHJldHVybiBjb29yZGluYXRlcztcbiAgfTtcbiAgdmFyIGQzX2dlb21fcG9seWdvblByb3RvdHlwZSA9IGQzLmdlb20ucG9seWdvbi5wcm90b3R5cGUgPSBbXTtcbiAgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gdGhpcy5sZW5ndGgsIGEsIGIgPSB0aGlzW24gLSAxXSwgYXJlYSA9IDA7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGEgPSBiO1xuICAgICAgYiA9IHRoaXNbaV07XG4gICAgICBhcmVhICs9IGFbMV0gKiBiWzBdIC0gYVswXSAqIGJbMV07XG4gICAgfVxuICAgIHJldHVybiBhcmVhICogLjU7XG4gIH07XG4gIGQzX2dlb21fcG9seWdvblByb3RvdHlwZS5jZW50cm9pZCA9IGZ1bmN0aW9uKGspIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gdGhpcy5sZW5ndGgsIHggPSAwLCB5ID0gMCwgYSwgYiA9IHRoaXNbbiAtIDFdLCBjO1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgayA9IC0xIC8gKDYgKiB0aGlzLmFyZWEoKSk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGEgPSBiO1xuICAgICAgYiA9IHRoaXNbaV07XG4gICAgICBjID0gYVswXSAqIGJbMV0gLSBiWzBdICogYVsxXTtcbiAgICAgIHggKz0gKGFbMF0gKyBiWzBdKSAqIGM7XG4gICAgICB5ICs9IChhWzFdICsgYlsxXSkgKiBjO1xuICAgIH1cbiAgICByZXR1cm4gWyB4ICogaywgeSAqIGsgXTtcbiAgfTtcbiAgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlLmNsaXAgPSBmdW5jdGlvbihzdWJqZWN0KSB7XG4gICAgdmFyIGlucHV0LCBjbG9zZWQgPSBkM19nZW9tX3BvbHlnb25DbG9zZWQoc3ViamVjdCksIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoIC0gZDNfZ2VvbV9wb2x5Z29uQ2xvc2VkKHRoaXMpLCBqLCBtLCBhID0gdGhpc1tuIC0gMV0sIGIsIGMsIGQ7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlucHV0ID0gc3ViamVjdC5zbGljZSgpO1xuICAgICAgc3ViamVjdC5sZW5ndGggPSAwO1xuICAgICAgYiA9IHRoaXNbaV07XG4gICAgICBjID0gaW5wdXRbKG0gPSBpbnB1dC5sZW5ndGggLSBjbG9zZWQpIC0gMV07XG4gICAgICBqID0gLTE7XG4gICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICBkID0gaW5wdXRbal07XG4gICAgICAgIGlmIChkM19nZW9tX3BvbHlnb25JbnNpZGUoZCwgYSwgYikpIHtcbiAgICAgICAgICBpZiAoIWQzX2dlb21fcG9seWdvbkluc2lkZShjLCBhLCBiKSkge1xuICAgICAgICAgICAgc3ViamVjdC5wdXNoKGQzX2dlb21fcG9seWdvbkludGVyc2VjdChjLCBkLCBhLCBiKSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHN1YmplY3QucHVzaChkKTtcbiAgICAgICAgfSBlbHNlIGlmIChkM19nZW9tX3BvbHlnb25JbnNpZGUoYywgYSwgYikpIHtcbiAgICAgICAgICBzdWJqZWN0LnB1c2goZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0KGMsIGQsIGEsIGIpKTtcbiAgICAgICAgfVxuICAgICAgICBjID0gZDtcbiAgICAgIH1cbiAgICAgIGlmIChjbG9zZWQpIHN1YmplY3QucHVzaChzdWJqZWN0WzBdKTtcbiAgICAgIGEgPSBiO1xuICAgIH1cbiAgICByZXR1cm4gc3ViamVjdDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKHAsIGEsIGIpIHtcbiAgICByZXR1cm4gKGJbMF0gLSBhWzBdKSAqIChwWzFdIC0gYVsxXSkgPCAoYlsxXSAtIGFbMV0pICogKHBbMF0gLSBhWzBdKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3BvbHlnb25JbnRlcnNlY3QoYywgZCwgYSwgYikge1xuICAgIHZhciB4MSA9IGNbMF0sIHgzID0gYVswXSwgeDIxID0gZFswXSAtIHgxLCB4NDMgPSBiWzBdIC0geDMsIHkxID0gY1sxXSwgeTMgPSBhWzFdLCB5MjEgPSBkWzFdIC0geTEsIHk0MyA9IGJbMV0gLSB5MywgdWEgPSAoeDQzICogKHkxIC0geTMpIC0geTQzICogKHgxIC0geDMpKSAvICh5NDMgKiB4MjEgLSB4NDMgKiB5MjEpO1xuICAgIHJldHVybiBbIHgxICsgdWEgKiB4MjEsIHkxICsgdWEgKiB5MjEgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3BvbHlnb25DbG9zZWQoY29vcmRpbmF0ZXMpIHtcbiAgICB2YXIgYSA9IGNvb3JkaW5hdGVzWzBdLCBiID0gY29vcmRpbmF0ZXNbY29vcmRpbmF0ZXMubGVuZ3RoIC0gMV07XG4gICAgcmV0dXJuICEoYVswXSAtIGJbMF0gfHwgYVsxXSAtIGJbMV0pO1xuICB9XG4gIHZhciBkM19nZW9tX3Zvcm9ub2lFZGdlcywgZDNfZ2VvbV92b3Jvbm9pQ2VsbHMsIGQzX2dlb21fdm9yb25vaUJlYWNoZXMsIGQzX2dlb21fdm9yb25vaUJlYWNoUG9vbCA9IFtdLCBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZSwgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcywgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbCA9IFtdO1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lCZWFjaCgpIHtcbiAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUodGhpcyk7XG4gICAgdGhpcy5lZGdlID0gdGhpcy5zaXRlID0gdGhpcy5jaXJjbGUgPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNyZWF0ZUJlYWNoKHNpdGUpIHtcbiAgICB2YXIgYmVhY2ggPSBkM19nZW9tX3Zvcm9ub2lCZWFjaFBvb2wucG9wKCkgfHwgbmV3IGQzX2dlb21fdm9yb25vaUJlYWNoKCk7XG4gICAgYmVhY2guc2l0ZSA9IHNpdGU7XG4gICAgcmV0dXJuIGJlYWNoO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoKGJlYWNoKSB7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGJlYWNoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLnJlbW92ZShiZWFjaCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sLnB1c2goYmVhY2gpO1xuICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZShiZWFjaCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVtb3ZlQmVhY2goYmVhY2gpIHtcbiAgICB2YXIgY2lyY2xlID0gYmVhY2guY2lyY2xlLCB4ID0gY2lyY2xlLngsIHkgPSBjaXJjbGUuY3ksIHZlcnRleCA9IHtcbiAgICAgIHg6IHgsXG4gICAgICB5OiB5XG4gICAgfSwgcHJldmlvdXMgPSBiZWFjaC5QLCBuZXh0ID0gYmVhY2guTiwgZGlzYXBwZWFyaW5nID0gWyBiZWFjaCBdO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoKGJlYWNoKTtcbiAgICB2YXIgbEFyYyA9IHByZXZpb3VzO1xuICAgIHdoaWxlIChsQXJjLmNpcmNsZSAmJiBhYnMoeCAtIGxBcmMuY2lyY2xlLngpIDwgzrUgJiYgYWJzKHkgLSBsQXJjLmNpcmNsZS5jeSkgPCDOtSkge1xuICAgICAgcHJldmlvdXMgPSBsQXJjLlA7XG4gICAgICBkaXNhcHBlYXJpbmcudW5zaGlmdChsQXJjKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoKGxBcmMpO1xuICAgICAgbEFyYyA9IHByZXZpb3VzO1xuICAgIH1cbiAgICBkaXNhcHBlYXJpbmcudW5zaGlmdChsQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUobEFyYyk7XG4gICAgdmFyIHJBcmMgPSBuZXh0O1xuICAgIHdoaWxlIChyQXJjLmNpcmNsZSAmJiBhYnMoeCAtIHJBcmMuY2lyY2xlLngpIDwgzrUgJiYgYWJzKHkgLSByQXJjLmNpcmNsZS5jeSkgPCDOtSkge1xuICAgICAgbmV4dCA9IHJBcmMuTjtcbiAgICAgIGRpc2FwcGVhcmluZy5wdXNoKHJBcmMpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2gockFyYyk7XG4gICAgICByQXJjID0gbmV4dDtcbiAgICB9XG4gICAgZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKHJBcmMpO1xuICAgIHZhciBuQXJjcyA9IGRpc2FwcGVhcmluZy5sZW5ndGgsIGlBcmM7XG4gICAgZm9yIChpQXJjID0gMTsgaUFyYyA8IG5BcmNzOyArK2lBcmMpIHtcbiAgICAgIHJBcmMgPSBkaXNhcHBlYXJpbmdbaUFyY107XG4gICAgICBsQXJjID0gZGlzYXBwZWFyaW5nW2lBcmMgLSAxXTtcbiAgICAgIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQockFyYy5lZGdlLCBsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgdmVydGV4KTtcbiAgICB9XG4gICAgbEFyYyA9IGRpc2FwcGVhcmluZ1swXTtcbiAgICByQXJjID0gZGlzYXBwZWFyaW5nW25BcmNzIC0gMV07XG4gICAgckFyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUobEFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKHJBcmMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUFkZEJlYWNoKHNpdGUpIHtcbiAgICB2YXIgeCA9IHNpdGUueCwgZGlyZWN0cml4ID0gc2l0ZS55LCBsQXJjLCByQXJjLCBkeGwsIGR4ciwgbm9kZSA9IGQzX2dlb21fdm9yb25vaUJlYWNoZXMuXztcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgZHhsID0gZDNfZ2VvbV92b3Jvbm9pTGVmdEJyZWFrUG9pbnQobm9kZSwgZGlyZWN0cml4KSAtIHg7XG4gICAgICBpZiAoZHhsID4gzrUpIG5vZGUgPSBub2RlLkw7IGVsc2Uge1xuICAgICAgICBkeHIgPSB4IC0gZDNfZ2VvbV92b3Jvbm9pUmlnaHRCcmVha1BvaW50KG5vZGUsIGRpcmVjdHJpeCk7XG4gICAgICAgIGlmIChkeHIgPiDOtSkge1xuICAgICAgICAgIGlmICghbm9kZS5SKSB7XG4gICAgICAgICAgICBsQXJjID0gbm9kZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBub2RlID0gbm9kZS5SO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChkeGwgPiAtzrUpIHtcbiAgICAgICAgICAgIGxBcmMgPSBub2RlLlA7XG4gICAgICAgICAgICByQXJjID0gbm9kZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGR4ciA+IC3OtSkge1xuICAgICAgICAgICAgbEFyYyA9IG5vZGU7XG4gICAgICAgICAgICByQXJjID0gbm9kZS5OO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsQXJjID0gckFyYyA9IG5vZGU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBuZXdBcmMgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaChzaXRlKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLmluc2VydChsQXJjLCBuZXdBcmMpO1xuICAgIGlmICghbEFyYyAmJiAhckFyYykgcmV0dXJuO1xuICAgIGlmIChsQXJjID09PSByQXJjKSB7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUobEFyYyk7XG4gICAgICByQXJjID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQmVhY2gobEFyYy5zaXRlKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMuaW5zZXJ0KG5ld0FyYywgckFyYyk7XG4gICAgICBuZXdBcmMuZWRnZSA9IHJBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobEFyYy5zaXRlLCBuZXdBcmMuc2l0ZSk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUobEFyYyk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUockFyYyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghckFyYykge1xuICAgICAgbmV3QXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxBcmMuc2l0ZSwgbmV3QXJjLnNpdGUpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUobEFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKHJBcmMpO1xuICAgIHZhciBsU2l0ZSA9IGxBcmMuc2l0ZSwgYXggPSBsU2l0ZS54LCBheSA9IGxTaXRlLnksIGJ4ID0gc2l0ZS54IC0gYXgsIGJ5ID0gc2l0ZS55IC0gYXksIHJTaXRlID0gckFyYy5zaXRlLCBjeCA9IHJTaXRlLnggLSBheCwgY3kgPSByU2l0ZS55IC0gYXksIGQgPSAyICogKGJ4ICogY3kgLSBieSAqIGN4KSwgaGIgPSBieCAqIGJ4ICsgYnkgKiBieSwgaGMgPSBjeCAqIGN4ICsgY3kgKiBjeSwgdmVydGV4ID0ge1xuICAgICAgeDogKGN5ICogaGIgLSBieSAqIGhjKSAvIGQgKyBheCxcbiAgICAgIHk6IChieCAqIGhjIC0gY3ggKiBoYikgLyBkICsgYXlcbiAgICB9O1xuICAgIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQockFyYy5lZGdlLCBsU2l0ZSwgclNpdGUsIHZlcnRleCk7XG4gICAgbmV3QXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxTaXRlLCBzaXRlLCBudWxsLCB2ZXJ0ZXgpO1xuICAgIHJBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2Uoc2l0ZSwgclNpdGUsIG51bGwsIHZlcnRleCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShyQXJjKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludChhcmMsIGRpcmVjdHJpeCkge1xuICAgIHZhciBzaXRlID0gYXJjLnNpdGUsIHJmb2N4ID0gc2l0ZS54LCByZm9jeSA9IHNpdGUueSwgcGJ5MiA9IHJmb2N5IC0gZGlyZWN0cml4O1xuICAgIGlmICghcGJ5MikgcmV0dXJuIHJmb2N4O1xuICAgIHZhciBsQXJjID0gYXJjLlA7XG4gICAgaWYgKCFsQXJjKSByZXR1cm4gLUluZmluaXR5O1xuICAgIHNpdGUgPSBsQXJjLnNpdGU7XG4gICAgdmFyIGxmb2N4ID0gc2l0ZS54LCBsZm9jeSA9IHNpdGUueSwgcGxieTIgPSBsZm9jeSAtIGRpcmVjdHJpeDtcbiAgICBpZiAoIXBsYnkyKSByZXR1cm4gbGZvY3g7XG4gICAgdmFyIGhsID0gbGZvY3ggLSByZm9jeCwgYWJ5MiA9IDEgLyBwYnkyIC0gMSAvIHBsYnkyLCBiID0gaGwgLyBwbGJ5MjtcbiAgICBpZiAoYWJ5MikgcmV0dXJuICgtYiArIE1hdGguc3FydChiICogYiAtIDIgKiBhYnkyICogKGhsICogaGwgLyAoLTIgKiBwbGJ5MikgLSBsZm9jeSArIHBsYnkyIC8gMiArIHJmb2N5IC0gcGJ5MiAvIDIpKSkgLyBhYnkyICsgcmZvY3g7XG4gICAgcmV0dXJuIChyZm9jeCArIGxmb2N4KSAvIDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmlnaHRCcmVha1BvaW50KGFyYywgZGlyZWN0cml4KSB7XG4gICAgdmFyIHJBcmMgPSBhcmMuTjtcbiAgICBpZiAockFyYykgcmV0dXJuIGQzX2dlb21fdm9yb25vaUxlZnRCcmVha1BvaW50KHJBcmMsIGRpcmVjdHJpeCk7XG4gICAgdmFyIHNpdGUgPSBhcmMuc2l0ZTtcbiAgICByZXR1cm4gc2l0ZS55ID09PSBkaXJlY3RyaXggPyBzaXRlLnggOiBJbmZpbml0eTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDZWxsKHNpdGUpIHtcbiAgICB0aGlzLnNpdGUgPSBzaXRlO1xuICAgIHRoaXMuZWRnZXMgPSBbXTtcbiAgfVxuICBkM19nZW9tX3Zvcm9ub2lDZWxsLnByb3RvdHlwZS5wcmVwYXJlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhhbGZFZGdlcyA9IHRoaXMuZWRnZXMsIGlIYWxmRWRnZSA9IGhhbGZFZGdlcy5sZW5ndGgsIGVkZ2U7XG4gICAgd2hpbGUgKGlIYWxmRWRnZS0tKSB7XG4gICAgICBlZGdlID0gaGFsZkVkZ2VzW2lIYWxmRWRnZV0uZWRnZTtcbiAgICAgIGlmICghZWRnZS5iIHx8ICFlZGdlLmEpIGhhbGZFZGdlcy5zcGxpY2UoaUhhbGZFZGdlLCAxKTtcbiAgICB9XG4gICAgaGFsZkVkZ2VzLnNvcnQoZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2VPcmRlcik7XG4gICAgcmV0dXJuIGhhbGZFZGdlcy5sZW5ndGg7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNsb3NlQ2VsbHMoZXh0ZW50KSB7XG4gICAgdmFyIHgwID0gZXh0ZW50WzBdWzBdLCB4MSA9IGV4dGVudFsxXVswXSwgeTAgPSBleHRlbnRbMF1bMV0sIHkxID0gZXh0ZW50WzFdWzFdLCB4MiwgeTIsIHgzLCB5MywgY2VsbHMgPSBkM19nZW9tX3Zvcm9ub2lDZWxscywgaUNlbGwgPSBjZWxscy5sZW5ndGgsIGNlbGwsIGlIYWxmRWRnZSwgaGFsZkVkZ2VzLCBuSGFsZkVkZ2VzLCBzdGFydCwgZW5kO1xuICAgIHdoaWxlIChpQ2VsbC0tKSB7XG4gICAgICBjZWxsID0gY2VsbHNbaUNlbGxdO1xuICAgICAgaWYgKCFjZWxsIHx8ICFjZWxsLnByZXBhcmUoKSkgY29udGludWU7XG4gICAgICBoYWxmRWRnZXMgPSBjZWxsLmVkZ2VzO1xuICAgICAgbkhhbGZFZGdlcyA9IGhhbGZFZGdlcy5sZW5ndGg7XG4gICAgICBpSGFsZkVkZ2UgPSAwO1xuICAgICAgd2hpbGUgKGlIYWxmRWRnZSA8IG5IYWxmRWRnZXMpIHtcbiAgICAgICAgZW5kID0gaGFsZkVkZ2VzW2lIYWxmRWRnZV0uZW5kKCksIHgzID0gZW5kLngsIHkzID0gZW5kLnk7XG4gICAgICAgIHN0YXJ0ID0gaGFsZkVkZ2VzWysraUhhbGZFZGdlICUgbkhhbGZFZGdlc10uc3RhcnQoKSwgeDIgPSBzdGFydC54LCB5MiA9IHN0YXJ0Lnk7XG4gICAgICAgIGlmIChhYnMoeDMgLSB4MikgPiDOtSB8fCBhYnMoeTMgLSB5MikgPiDOtSkge1xuICAgICAgICAgIGhhbGZFZGdlcy5zcGxpY2UoaUhhbGZFZGdlLCAwLCBuZXcgZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UoZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQm9yZGVyRWRnZShjZWxsLnNpdGUsIGVuZCwgYWJzKHgzIC0geDApIDwgzrUgJiYgeTEgLSB5MyA+IM61ID8ge1xuICAgICAgICAgICAgeDogeDAsXG4gICAgICAgICAgICB5OiBhYnMoeDIgLSB4MCkgPCDOtSA/IHkyIDogeTFcbiAgICAgICAgICB9IDogYWJzKHkzIC0geTEpIDwgzrUgJiYgeDEgLSB4MyA+IM61ID8ge1xuICAgICAgICAgICAgeDogYWJzKHkyIC0geTEpIDwgzrUgPyB4MiA6IHgxLFxuICAgICAgICAgICAgeTogeTFcbiAgICAgICAgICB9IDogYWJzKHgzIC0geDEpIDwgzrUgJiYgeTMgLSB5MCA+IM61ID8ge1xuICAgICAgICAgICAgeDogeDEsXG4gICAgICAgICAgICB5OiBhYnMoeDIgLSB4MSkgPCDOtSA/IHkyIDogeTBcbiAgICAgICAgICB9IDogYWJzKHkzIC0geTApIDwgzrUgJiYgeDMgLSB4MCA+IM61ID8ge1xuICAgICAgICAgICAgeDogYWJzKHkyIC0geTApIDwgzrUgPyB4MiA6IHgwLFxuICAgICAgICAgICAgeTogeTBcbiAgICAgICAgICB9IDogbnVsbCksIGNlbGwuc2l0ZSwgbnVsbCkpO1xuICAgICAgICAgICsrbkhhbGZFZGdlcztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyKGEsIGIpIHtcbiAgICByZXR1cm4gYi5hbmdsZSAtIGEuYW5nbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlKCkge1xuICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZSh0aGlzKTtcbiAgICB0aGlzLnggPSB0aGlzLnkgPSB0aGlzLmFyYyA9IHRoaXMuc2l0ZSA9IHRoaXMuY3kgPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShhcmMpIHtcbiAgICB2YXIgbEFyYyA9IGFyYy5QLCByQXJjID0gYXJjLk47XG4gICAgaWYgKCFsQXJjIHx8ICFyQXJjKSByZXR1cm47XG4gICAgdmFyIGxTaXRlID0gbEFyYy5zaXRlLCBjU2l0ZSA9IGFyYy5zaXRlLCByU2l0ZSA9IHJBcmMuc2l0ZTtcbiAgICBpZiAobFNpdGUgPT09IHJTaXRlKSByZXR1cm47XG4gICAgdmFyIGJ4ID0gY1NpdGUueCwgYnkgPSBjU2l0ZS55LCBheCA9IGxTaXRlLnggLSBieCwgYXkgPSBsU2l0ZS55IC0gYnksIGN4ID0gclNpdGUueCAtIGJ4LCBjeSA9IHJTaXRlLnkgLSBieTtcbiAgICB2YXIgZCA9IDIgKiAoYXggKiBjeSAtIGF5ICogY3gpO1xuICAgIGlmIChkID49IC3OtTIpIHJldHVybjtcbiAgICB2YXIgaGEgPSBheCAqIGF4ICsgYXkgKiBheSwgaGMgPSBjeCAqIGN4ICsgY3kgKiBjeSwgeCA9IChjeSAqIGhhIC0gYXkgKiBoYykgLyBkLCB5ID0gKGF4ICogaGMgLSBjeCAqIGhhKSAvIGQsIGN5ID0geSArIGJ5O1xuICAgIHZhciBjaXJjbGUgPSBkM19nZW9tX3Zvcm9ub2lDaXJjbGVQb29sLnBvcCgpIHx8IG5ldyBkM19nZW9tX3Zvcm9ub2lDaXJjbGUoKTtcbiAgICBjaXJjbGUuYXJjID0gYXJjO1xuICAgIGNpcmNsZS5zaXRlID0gY1NpdGU7XG4gICAgY2lyY2xlLnggPSB4ICsgYng7XG4gICAgY2lyY2xlLnkgPSBjeSArIE1hdGguc3FydCh4ICogeCArIHkgKiB5KTtcbiAgICBjaXJjbGUuY3kgPSBjeTtcbiAgICBhcmMuY2lyY2xlID0gY2lyY2xlO1xuICAgIHZhciBiZWZvcmUgPSBudWxsLCBub2RlID0gZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcy5fO1xuICAgIHdoaWxlIChub2RlKSB7XG4gICAgICBpZiAoY2lyY2xlLnkgPCBub2RlLnkgfHwgY2lyY2xlLnkgPT09IG5vZGUueSAmJiBjaXJjbGUueCA8PSBub2RlLngpIHtcbiAgICAgICAgaWYgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDsgZWxzZSB7XG4gICAgICAgICAgYmVmb3JlID0gbm9kZS5QO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAobm9kZS5SKSBub2RlID0gbm9kZS5SOyBlbHNlIHtcbiAgICAgICAgICBiZWZvcmUgPSBub2RlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGQzX2dlb21fdm9yb25vaUNpcmNsZXMuaW5zZXJ0KGJlZm9yZSwgY2lyY2xlKTtcbiAgICBpZiAoIWJlZm9yZSkgZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUgPSBjaXJjbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGFyYykge1xuICAgIHZhciBjaXJjbGUgPSBhcmMuY2lyY2xlO1xuICAgIGlmIChjaXJjbGUpIHtcbiAgICAgIGlmICghY2lyY2xlLlApIGQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlID0gY2lyY2xlLk47XG4gICAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzLnJlbW92ZShjaXJjbGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbC5wdXNoKGNpcmNsZSk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUoY2lyY2xlKTtcbiAgICAgIGFyYy5jaXJjbGUgPSBudWxsO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDbGlwRWRnZXMoZXh0ZW50KSB7XG4gICAgdmFyIGVkZ2VzID0gZDNfZ2VvbV92b3Jvbm9pRWRnZXMsIGNsaXAgPSBkM19nZW9tX2NsaXBMaW5lKGV4dGVudFswXVswXSwgZXh0ZW50WzBdWzFdLCBleHRlbnRbMV1bMF0sIGV4dGVudFsxXVsxXSksIGkgPSBlZGdlcy5sZW5ndGgsIGU7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgZSA9IGVkZ2VzW2ldO1xuICAgICAgaWYgKCFkM19nZW9tX3Zvcm9ub2lDb25uZWN0RWRnZShlLCBleHRlbnQpIHx8ICFjbGlwKGUpIHx8IGFicyhlLmEueCAtIGUuYi54KSA8IM61ICYmIGFicyhlLmEueSAtIGUuYi55KSA8IM61KSB7XG4gICAgICAgIGUuYSA9IGUuYiA9IG51bGw7XG4gICAgICAgIGVkZ2VzLnNwbGljZShpLCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ29ubmVjdEVkZ2UoZWRnZSwgZXh0ZW50KSB7XG4gICAgdmFyIHZiID0gZWRnZS5iO1xuICAgIGlmICh2YikgcmV0dXJuIHRydWU7XG4gICAgdmFyIHZhID0gZWRnZS5hLCB4MCA9IGV4dGVudFswXVswXSwgeDEgPSBleHRlbnRbMV1bMF0sIHkwID0gZXh0ZW50WzBdWzFdLCB5MSA9IGV4dGVudFsxXVsxXSwgbFNpdGUgPSBlZGdlLmwsIHJTaXRlID0gZWRnZS5yLCBseCA9IGxTaXRlLngsIGx5ID0gbFNpdGUueSwgcnggPSByU2l0ZS54LCByeSA9IHJTaXRlLnksIGZ4ID0gKGx4ICsgcngpIC8gMiwgZnkgPSAobHkgKyByeSkgLyAyLCBmbSwgZmI7XG4gICAgaWYgKHJ5ID09PSBseSkge1xuICAgICAgaWYgKGZ4IDwgeDAgfHwgZnggPj0geDEpIHJldHVybjtcbiAgICAgIGlmIChseCA+IHJ4KSB7XG4gICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgIHg6IGZ4LFxuICAgICAgICAgIHk6IHkwXG4gICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPj0geTEpIHJldHVybjtcbiAgICAgICAgdmIgPSB7XG4gICAgICAgICAgeDogZngsXG4gICAgICAgICAgeTogeTFcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgIHg6IGZ4LFxuICAgICAgICAgIHk6IHkxXG4gICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPCB5MCkgcmV0dXJuO1xuICAgICAgICB2YiA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmbSA9IChseCAtIHJ4KSAvIChyeSAtIGx5KTtcbiAgICAgIGZiID0gZnkgLSBmbSAqIGZ4O1xuICAgICAgaWYgKGZtIDwgLTEgfHwgZm0gPiAxKSB7XG4gICAgICAgIGlmIChseCA+IHJ4KSB7XG4gICAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgICB4OiAoeTAgLSBmYikgLyBmbSxcbiAgICAgICAgICAgIHk6IHkwXG4gICAgICAgICAgfTsgZWxzZSBpZiAodmEueSA+PSB5MSkgcmV0dXJuO1xuICAgICAgICAgIHZiID0ge1xuICAgICAgICAgICAgeDogKHkxIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MVxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgICB4OiAoeTEgLSBmYikgLyBmbSxcbiAgICAgICAgICAgIHk6IHkxXG4gICAgICAgICAgfTsgZWxzZSBpZiAodmEueSA8IHkwKSByZXR1cm47XG4gICAgICAgICAgdmIgPSB7XG4gICAgICAgICAgICB4OiAoeTAgLSBmYikgLyBmbSxcbiAgICAgICAgICAgIHk6IHkwXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGx5IDwgcnkpIHtcbiAgICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICAgIHg6IHgwLFxuICAgICAgICAgICAgeTogZm0gKiB4MCArIGZiXG4gICAgICAgICAgfTsgZWxzZSBpZiAodmEueCA+PSB4MSkgcmV0dXJuO1xuICAgICAgICAgIHZiID0ge1xuICAgICAgICAgICAgeDogeDEsXG4gICAgICAgICAgICB5OiBmbSAqIHgxICsgZmJcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogeDEsXG4gICAgICAgICAgICB5OiBmbSAqIHgxICsgZmJcbiAgICAgICAgICB9OyBlbHNlIGlmICh2YS54IDwgeDApIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6IHgwLFxuICAgICAgICAgICAgeTogZm0gKiB4MCArIGZiXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBlZGdlLmEgPSB2YTtcbiAgICBlZGdlLmIgPSB2YjtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lFZGdlKGxTaXRlLCByU2l0ZSkge1xuICAgIHRoaXMubCA9IGxTaXRlO1xuICAgIHRoaXMuciA9IHJTaXRlO1xuICAgIHRoaXMuYSA9IHRoaXMuYiA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsU2l0ZSwgclNpdGUsIHZhLCB2Yikge1xuICAgIHZhciBlZGdlID0gbmV3IGQzX2dlb21fdm9yb25vaUVkZ2UobFNpdGUsIHJTaXRlKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lFZGdlcy5wdXNoKGVkZ2UpO1xuICAgIGlmICh2YSkgZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChlZGdlLCBsU2l0ZSwgclNpdGUsIHZhKTtcbiAgICBpZiAodmIpIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQoZWRnZSwgclNpdGUsIGxTaXRlLCB2Yik7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQ2VsbHNbbFNpdGUuaV0uZWRnZXMucHVzaChuZXcgZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UoZWRnZSwgbFNpdGUsIHJTaXRlKSk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQ2VsbHNbclNpdGUuaV0uZWRnZXMucHVzaChuZXcgZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UoZWRnZSwgclNpdGUsIGxTaXRlKSk7XG4gICAgcmV0dXJuIGVkZ2U7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQm9yZGVyRWRnZShsU2l0ZSwgdmEsIHZiKSB7XG4gICAgdmFyIGVkZ2UgPSBuZXcgZDNfZ2VvbV92b3Jvbm9pRWRnZShsU2l0ZSwgbnVsbCk7XG4gICAgZWRnZS5hID0gdmE7XG4gICAgZWRnZS5iID0gdmI7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRWRnZXMucHVzaChlZGdlKTtcbiAgICByZXR1cm4gZWRnZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKGVkZ2UsIGxTaXRlLCByU2l0ZSwgdmVydGV4KSB7XG4gICAgaWYgKCFlZGdlLmEgJiYgIWVkZ2UuYikge1xuICAgICAgZWRnZS5hID0gdmVydGV4O1xuICAgICAgZWRnZS5sID0gbFNpdGU7XG4gICAgICBlZGdlLnIgPSByU2l0ZTtcbiAgICB9IGVsc2UgaWYgKGVkZ2UubCA9PT0gclNpdGUpIHtcbiAgICAgIGVkZ2UuYiA9IHZlcnRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgZWRnZS5hID0gdmVydGV4O1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZShlZGdlLCBsU2l0ZSwgclNpdGUpIHtcbiAgICB2YXIgdmEgPSBlZGdlLmEsIHZiID0gZWRnZS5iO1xuICAgIHRoaXMuZWRnZSA9IGVkZ2U7XG4gICAgdGhpcy5zaXRlID0gbFNpdGU7XG4gICAgdGhpcy5hbmdsZSA9IHJTaXRlID8gTWF0aC5hdGFuMihyU2l0ZS55IC0gbFNpdGUueSwgclNpdGUueCAtIGxTaXRlLngpIDogZWRnZS5sID09PSBsU2l0ZSA/IE1hdGguYXRhbjIodmIueCAtIHZhLngsIHZhLnkgLSB2Yi55KSA6IE1hdGguYXRhbjIodmEueCAtIHZiLngsIHZiLnkgLSB2YS55KTtcbiAgfVxuICBkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZS5wcm90b3R5cGUgPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZWRnZS5sID09PSB0aGlzLnNpdGUgPyB0aGlzLmVkZ2UuYSA6IHRoaXMuZWRnZS5iO1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVkZ2UubCA9PT0gdGhpcy5zaXRlID8gdGhpcy5lZGdlLmIgOiB0aGlzLmVkZ2UuYTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrVHJlZSgpIHtcbiAgICB0aGlzLl8gPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrTm9kZShub2RlKSB7XG4gICAgbm9kZS5VID0gbm9kZS5DID0gbm9kZS5MID0gbm9kZS5SID0gbm9kZS5QID0gbm9kZS5OID0gbnVsbDtcbiAgfVxuICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUucHJvdG90eXBlID0ge1xuICAgIGluc2VydDogZnVuY3Rpb24oYWZ0ZXIsIG5vZGUpIHtcbiAgICAgIHZhciBwYXJlbnQsIGdyYW5kcGEsIHVuY2xlO1xuICAgICAgaWYgKGFmdGVyKSB7XG4gICAgICAgIG5vZGUuUCA9IGFmdGVyO1xuICAgICAgICBub2RlLk4gPSBhZnRlci5OO1xuICAgICAgICBpZiAoYWZ0ZXIuTikgYWZ0ZXIuTi5QID0gbm9kZTtcbiAgICAgICAgYWZ0ZXIuTiA9IG5vZGU7XG4gICAgICAgIGlmIChhZnRlci5SKSB7XG4gICAgICAgICAgYWZ0ZXIgPSBhZnRlci5SO1xuICAgICAgICAgIHdoaWxlIChhZnRlci5MKSBhZnRlciA9IGFmdGVyLkw7XG4gICAgICAgICAgYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWZ0ZXIuUiA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50ID0gYWZ0ZXI7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuXykge1xuICAgICAgICBhZnRlciA9IGQzX2dlb21fdm9yb25vaVJlZEJsYWNrRmlyc3QodGhpcy5fKTtcbiAgICAgICAgbm9kZS5QID0gbnVsbDtcbiAgICAgICAgbm9kZS5OID0gYWZ0ZXI7XG4gICAgICAgIGFmdGVyLlAgPSBhZnRlci5MID0gbm9kZTtcbiAgICAgICAgcGFyZW50ID0gYWZ0ZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLlAgPSBub2RlLk4gPSBudWxsO1xuICAgICAgICB0aGlzLl8gPSBub2RlO1xuICAgICAgICBwYXJlbnQgPSBudWxsO1xuICAgICAgfVxuICAgICAgbm9kZS5MID0gbm9kZS5SID0gbnVsbDtcbiAgICAgIG5vZGUuVSA9IHBhcmVudDtcbiAgICAgIG5vZGUuQyA9IHRydWU7XG4gICAgICBhZnRlciA9IG5vZGU7XG4gICAgICB3aGlsZSAocGFyZW50ICYmIHBhcmVudC5DKSB7XG4gICAgICAgIGdyYW5kcGEgPSBwYXJlbnQuVTtcbiAgICAgICAgaWYgKHBhcmVudCA9PT0gZ3JhbmRwYS5MKSB7XG4gICAgICAgICAgdW5jbGUgPSBncmFuZHBhLlI7XG4gICAgICAgICAgaWYgKHVuY2xlICYmIHVuY2xlLkMpIHtcbiAgICAgICAgICAgIHBhcmVudC5DID0gdW5jbGUuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGFmdGVyID0gZ3JhbmRwYTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFmdGVyID09PSBwYXJlbnQuUikge1xuICAgICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgICAgYWZ0ZXIgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgIHBhcmVudCA9IGFmdGVyLlU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnQuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgZ3JhbmRwYSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHVuY2xlID0gZ3JhbmRwYS5MO1xuICAgICAgICAgIGlmICh1bmNsZSAmJiB1bmNsZS5DKSB7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHVuY2xlLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBhZnRlciA9IGdyYW5kcGE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LkwpIHtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgICBhZnRlciA9IHBhcmVudDtcbiAgICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcmVudC5DID0gZmFsc2U7XG4gICAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIGdyYW5kcGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgfVxuICAgICAgdGhpcy5fLkMgPSBmYWxzZTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUuTikgbm9kZS5OLlAgPSBub2RlLlA7XG4gICAgICBpZiAobm9kZS5QKSBub2RlLlAuTiA9IG5vZGUuTjtcbiAgICAgIG5vZGUuTiA9IG5vZGUuUCA9IG51bGw7XG4gICAgICB2YXIgcGFyZW50ID0gbm9kZS5VLCBzaWJsaW5nLCBsZWZ0ID0gbm9kZS5MLCByaWdodCA9IG5vZGUuUiwgbmV4dCwgcmVkO1xuICAgICAgaWYgKCFsZWZ0KSBuZXh0ID0gcmlnaHQ7IGVsc2UgaWYgKCFyaWdodCkgbmV4dCA9IGxlZnQ7IGVsc2UgbmV4dCA9IGQzX2dlb21fdm9yb25vaVJlZEJsYWNrRmlyc3QocmlnaHQpO1xuICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICBpZiAocGFyZW50LkwgPT09IG5vZGUpIHBhcmVudC5MID0gbmV4dDsgZWxzZSBwYXJlbnQuUiA9IG5leHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl8gPSBuZXh0O1xuICAgICAgfVxuICAgICAgaWYgKGxlZnQgJiYgcmlnaHQpIHtcbiAgICAgICAgcmVkID0gbmV4dC5DO1xuICAgICAgICBuZXh0LkMgPSBub2RlLkM7XG4gICAgICAgIG5leHQuTCA9IGxlZnQ7XG4gICAgICAgIGxlZnQuVSA9IG5leHQ7XG4gICAgICAgIGlmIChuZXh0ICE9PSByaWdodCkge1xuICAgICAgICAgIHBhcmVudCA9IG5leHQuVTtcbiAgICAgICAgICBuZXh0LlUgPSBub2RlLlU7XG4gICAgICAgICAgbm9kZSA9IG5leHQuUjtcbiAgICAgICAgICBwYXJlbnQuTCA9IG5vZGU7XG4gICAgICAgICAgbmV4dC5SID0gcmlnaHQ7XG4gICAgICAgICAgcmlnaHQuVSA9IG5leHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV4dC5VID0gcGFyZW50O1xuICAgICAgICAgIHBhcmVudCA9IG5leHQ7XG4gICAgICAgICAgbm9kZSA9IG5leHQuUjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVkID0gbm9kZS5DO1xuICAgICAgICBub2RlID0gbmV4dDtcbiAgICAgIH1cbiAgICAgIGlmIChub2RlKSBub2RlLlUgPSBwYXJlbnQ7XG4gICAgICBpZiAocmVkKSByZXR1cm47XG4gICAgICBpZiAobm9kZSAmJiBub2RlLkMpIHtcbiAgICAgICAgbm9kZS5DID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGRvIHtcbiAgICAgICAgaWYgKG5vZGUgPT09IHRoaXMuXykgYnJlYWs7XG4gICAgICAgIGlmIChub2RlID09PSBwYXJlbnQuTCkge1xuICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICBpZiAoc2libGluZy5DKSB7XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIHBhcmVudC5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2libGluZy5MICYmIHNpYmxpbmcuTC5DIHx8IHNpYmxpbmcuUiAmJiBzaWJsaW5nLlIuQykge1xuICAgICAgICAgICAgaWYgKCFzaWJsaW5nLlIgfHwgIXNpYmxpbmcuUi5DKSB7XG4gICAgICAgICAgICAgIHNpYmxpbmcuTC5DID0gZmFsc2U7XG4gICAgICAgICAgICAgIHNpYmxpbmcuQyA9IHRydWU7XG4gICAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgc2libGluZyk7XG4gICAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNpYmxpbmcuQyA9IHBhcmVudC5DO1xuICAgICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICBub2RlID0gdGhpcy5fO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgICBpZiAoc2libGluZy5DKSB7XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIHBhcmVudC5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNpYmxpbmcuTCAmJiBzaWJsaW5nLkwuQyB8fCBzaWJsaW5nLlIgJiYgc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgIGlmICghc2libGluZy5MIHx8ICFzaWJsaW5nLkwuQykge1xuICAgICAgICAgICAgICBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgc2libGluZyk7XG4gICAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNpYmxpbmcuQyA9IHBhcmVudC5DO1xuICAgICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLkwuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgbm9kZSA9IHRoaXMuXztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICBub2RlID0gcGFyZW50O1xuICAgICAgICBwYXJlbnQgPSBwYXJlbnQuVTtcbiAgICAgIH0gd2hpbGUgKCFub2RlLkMpO1xuICAgICAgaWYgKG5vZGUpIG5vZGUuQyA9IGZhbHNlO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRyZWUsIG5vZGUpIHtcbiAgICB2YXIgcCA9IG5vZGUsIHEgPSBub2RlLlIsIHBhcmVudCA9IHAuVTtcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LkwgPT09IHApIHBhcmVudC5MID0gcTsgZWxzZSBwYXJlbnQuUiA9IHE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyZWUuXyA9IHE7XG4gICAgfVxuICAgIHEuVSA9IHBhcmVudDtcbiAgICBwLlUgPSBxO1xuICAgIHAuUiA9IHEuTDtcbiAgICBpZiAocC5SKSBwLlIuVSA9IHA7XG4gICAgcS5MID0gcDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRyZWUsIG5vZGUpIHtcbiAgICB2YXIgcCA9IG5vZGUsIHEgPSBub2RlLkwsIHBhcmVudCA9IHAuVTtcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LkwgPT09IHApIHBhcmVudC5MID0gcTsgZWxzZSBwYXJlbnQuUiA9IHE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyZWUuXyA9IHE7XG4gICAgfVxuICAgIHEuVSA9IHBhcmVudDtcbiAgICBwLlUgPSBxO1xuICAgIHAuTCA9IHEuUjtcbiAgICBpZiAocC5MKSBwLkwuVSA9IHA7XG4gICAgcS5SID0gcDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0KG5vZGUpIHtcbiAgICB3aGlsZSAobm9kZS5MKSBub2RlID0gbm9kZS5MO1xuICAgIHJldHVybiBub2RlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaShzaXRlcywgYmJveCkge1xuICAgIHZhciBzaXRlID0gc2l0ZXMuc29ydChkM19nZW9tX3Zvcm9ub2lWZXJ0ZXhPcmRlcikucG9wKCksIHgwLCB5MCwgY2lyY2xlO1xuICAgIGQzX2dlb21fdm9yb25vaUVkZ2VzID0gW107XG4gICAgZDNfZ2VvbV92b3Jvbm9pQ2VsbHMgPSBuZXcgQXJyYXkoc2l0ZXMubGVuZ3RoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzID0gbmV3IGQzX2dlb21fdm9yb25vaVJlZEJsYWNrVHJlZSgpO1xuICAgIGQzX2dlb21fdm9yb25vaUNpcmNsZXMgPSBuZXcgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlKCk7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGNpcmNsZSA9IGQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlO1xuICAgICAgaWYgKHNpdGUgJiYgKCFjaXJjbGUgfHwgc2l0ZS55IDwgY2lyY2xlLnkgfHwgc2l0ZS55ID09PSBjaXJjbGUueSAmJiBzaXRlLnggPCBjaXJjbGUueCkpIHtcbiAgICAgICAgaWYgKHNpdGUueCAhPT0geDAgfHwgc2l0ZS55ICE9PSB5MCkge1xuICAgICAgICAgIGQzX2dlb21fdm9yb25vaUNlbGxzW3NpdGUuaV0gPSBuZXcgZDNfZ2VvbV92b3Jvbm9pQ2VsbChzaXRlKTtcbiAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lBZGRCZWFjaChzaXRlKTtcbiAgICAgICAgICB4MCA9IHNpdGUueCwgeTAgPSBzaXRlLnk7XG4gICAgICAgIH1cbiAgICAgICAgc2l0ZSA9IHNpdGVzLnBvcCgpO1xuICAgICAgfSBlbHNlIGlmIChjaXJjbGUpIHtcbiAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVtb3ZlQmVhY2goY2lyY2xlLmFyYyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGJib3gpIGQzX2dlb21fdm9yb25vaUNsaXBFZGdlcyhiYm94KSwgZDNfZ2VvbV92b3Jvbm9pQ2xvc2VDZWxscyhiYm94KTtcbiAgICB2YXIgZGlhZ3JhbSA9IHtcbiAgICAgIGNlbGxzOiBkM19nZW9tX3Zvcm9ub2lDZWxscyxcbiAgICAgIGVkZ2VzOiBkM19nZW9tX3Zvcm9ub2lFZGdlc1xuICAgIH07XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcyA9IGQzX2dlb21fdm9yb25vaUNpcmNsZXMgPSBkM19nZW9tX3Zvcm9ub2lFZGdlcyA9IGQzX2dlb21fdm9yb25vaUNlbGxzID0gbnVsbDtcbiAgICByZXR1cm4gZGlhZ3JhbTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lWZXJ0ZXhPcmRlcihhLCBiKSB7XG4gICAgcmV0dXJuIGIueSAtIGEueSB8fCBiLnggLSBhLng7XG4gIH1cbiAgZDMuZ2VvbS52b3Jvbm9pID0gZnVuY3Rpb24ocG9pbnRzKSB7XG4gICAgdmFyIHggPSBkM19nZW9tX3BvaW50WCwgeSA9IGQzX2dlb21fcG9pbnRZLCBmeCA9IHgsIGZ5ID0geSwgY2xpcEV4dGVudCA9IGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQ7XG4gICAgaWYgKHBvaW50cykgcmV0dXJuIHZvcm9ub2kocG9pbnRzKTtcbiAgICBmdW5jdGlvbiB2b3Jvbm9pKGRhdGEpIHtcbiAgICAgIHZhciBwb2x5Z29ucyA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCksIHgwID0gY2xpcEV4dGVudFswXVswXSwgeTAgPSBjbGlwRXh0ZW50WzBdWzFdLCB4MSA9IGNsaXBFeHRlbnRbMV1bMF0sIHkxID0gY2xpcEV4dGVudFsxXVsxXTtcbiAgICAgIGQzX2dlb21fdm9yb25vaShzaXRlcyhkYXRhKSwgY2xpcEV4dGVudCkuY2VsbHMuZm9yRWFjaChmdW5jdGlvbihjZWxsLCBpKSB7XG4gICAgICAgIHZhciBlZGdlcyA9IGNlbGwuZWRnZXMsIHNpdGUgPSBjZWxsLnNpdGUsIHBvbHlnb24gPSBwb2x5Z29uc1tpXSA9IGVkZ2VzLmxlbmd0aCA/IGVkZ2VzLm1hcChmdW5jdGlvbihlKSB7XG4gICAgICAgICAgdmFyIHMgPSBlLnN0YXJ0KCk7XG4gICAgICAgICAgcmV0dXJuIFsgcy54LCBzLnkgXTtcbiAgICAgICAgfSkgOiBzaXRlLnggPj0geDAgJiYgc2l0ZS54IDw9IHgxICYmIHNpdGUueSA+PSB5MCAmJiBzaXRlLnkgPD0geTEgPyBbIFsgeDAsIHkxIF0sIFsgeDEsIHkxIF0sIFsgeDEsIHkwIF0sIFsgeDAsIHkwIF0gXSA6IFtdO1xuICAgICAgICBwb2x5Z29uLnBvaW50ID0gZGF0YVtpXTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHBvbHlnb25zO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzaXRlcyhkYXRhKSB7XG4gICAgICByZXR1cm4gZGF0YS5tYXAoZnVuY3Rpb24oZCwgaSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHg6IE1hdGgucm91bmQoZngoZCwgaSkgLyDOtSkgKiDOtSxcbiAgICAgICAgICB5OiBNYXRoLnJvdW5kKGZ5KGQsIGkpIC8gzrUpICogzrUsXG4gICAgICAgICAgaTogaVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICAgIHZvcm9ub2kubGlua3MgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICByZXR1cm4gZDNfZ2VvbV92b3Jvbm9pKHNpdGVzKGRhdGEpKS5lZGdlcy5maWx0ZXIoZnVuY3Rpb24oZWRnZSkge1xuICAgICAgICByZXR1cm4gZWRnZS5sICYmIGVkZ2UucjtcbiAgICAgIH0pLm1hcChmdW5jdGlvbihlZGdlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc291cmNlOiBkYXRhW2VkZ2UubC5pXSxcbiAgICAgICAgICB0YXJnZXQ6IGRhdGFbZWRnZS5yLmldXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHZvcm9ub2kudHJpYW5nbGVzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIHRyaWFuZ2xlcyA9IFtdO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pKHNpdGVzKGRhdGEpKS5jZWxscy5mb3JFYWNoKGZ1bmN0aW9uKGNlbGwsIGkpIHtcbiAgICAgICAgdmFyIHNpdGUgPSBjZWxsLnNpdGUsIGVkZ2VzID0gY2VsbC5lZGdlcy5zb3J0KGQzX2dlb21fdm9yb25vaUhhbGZFZGdlT3JkZXIpLCBqID0gLTEsIG0gPSBlZGdlcy5sZW5ndGgsIGUwLCBzMCwgZTEgPSBlZGdlc1ttIC0gMV0uZWRnZSwgczEgPSBlMS5sID09PSBzaXRlID8gZTEuciA6IGUxLmw7XG4gICAgICAgIHdoaWxlICgrK2ogPCBtKSB7XG4gICAgICAgICAgZTAgPSBlMTtcbiAgICAgICAgICBzMCA9IHMxO1xuICAgICAgICAgIGUxID0gZWRnZXNbal0uZWRnZTtcbiAgICAgICAgICBzMSA9IGUxLmwgPT09IHNpdGUgPyBlMS5yIDogZTEubDtcbiAgICAgICAgICBpZiAoaSA8IHMwLmkgJiYgaSA8IHMxLmkgJiYgZDNfZ2VvbV92b3Jvbm9pVHJpYW5nbGVBcmVhKHNpdGUsIHMwLCBzMSkgPCAwKSB7XG4gICAgICAgICAgICB0cmlhbmdsZXMucHVzaChbIGRhdGFbaV0sIGRhdGFbczAuaV0sIGRhdGFbczEuaV0gXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0cmlhbmdsZXM7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmeCA9IGQzX2Z1bmN0b3IoeCA9IF8pLCB2b3Jvbm9pKSA6IHg7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmeSA9IGQzX2Z1bmN0b3IoeSA9IF8pLCB2b3Jvbm9pKSA6IHk7XG4gICAgfTtcbiAgICB2b3Jvbm9pLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwRXh0ZW50ID09PSBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50ID8gbnVsbCA6IGNsaXBFeHRlbnQ7XG4gICAgICBjbGlwRXh0ZW50ID0gXyA9PSBudWxsID8gZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCA6IF87XG4gICAgICByZXR1cm4gdm9yb25vaTtcbiAgICB9O1xuICAgIHZvcm9ub2kuc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNsaXBFeHRlbnQgPT09IGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQgPyBudWxsIDogY2xpcEV4dGVudCAmJiBjbGlwRXh0ZW50WzFdO1xuICAgICAgcmV0dXJuIHZvcm9ub2kuY2xpcEV4dGVudChfICYmIFsgWyAwLCAwIF0sIF8gXSk7XG4gICAgfTtcbiAgICByZXR1cm4gdm9yb25vaTtcbiAgfTtcbiAgdmFyIGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQgPSBbIFsgLTFlNiwgLTFlNiBdLCBbIDFlNiwgMWU2IF0gXTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pVHJpYW5nbGVBcmVhKGEsIGIsIGMpIHtcbiAgICByZXR1cm4gKGEueCAtIGMueCkgKiAoYi55IC0gYS55KSAtIChhLnggLSBiLngpICogKGMueSAtIGEueSk7XG4gIH1cbiAgZDMuZ2VvbS5kZWxhdW5heSA9IGZ1bmN0aW9uKHZlcnRpY2VzKSB7XG4gICAgcmV0dXJuIGQzLmdlb20udm9yb25vaSgpLnRyaWFuZ2xlcyh2ZXJ0aWNlcyk7XG4gIH07XG4gIGQzLmdlb20ucXVhZHRyZWUgPSBmdW5jdGlvbihwb2ludHMsIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgdmFyIHggPSBkM19nZW9tX3BvaW50WCwgeSA9IGQzX2dlb21fcG9pbnRZLCBjb21wYXQ7XG4gICAgaWYgKGNvbXBhdCA9IGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIHggPSBkM19nZW9tX3F1YWR0cmVlQ29tcGF0WDtcbiAgICAgIHkgPSBkM19nZW9tX3F1YWR0cmVlQ29tcGF0WTtcbiAgICAgIGlmIChjb21wYXQgPT09IDMpIHtcbiAgICAgICAgeTIgPSB5MTtcbiAgICAgICAgeDIgPSB4MTtcbiAgICAgICAgeTEgPSB4MSA9IDA7XG4gICAgICB9XG4gICAgICByZXR1cm4gcXVhZHRyZWUocG9pbnRzKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcXVhZHRyZWUoZGF0YSkge1xuICAgICAgdmFyIGQsIGZ4ID0gZDNfZnVuY3Rvcih4KSwgZnkgPSBkM19mdW5jdG9yKHkpLCB4cywgeXMsIGksIG4sIHgxXywgeTFfLCB4Ml8sIHkyXztcbiAgICAgIGlmICh4MSAhPSBudWxsKSB7XG4gICAgICAgIHgxXyA9IHgxLCB5MV8gPSB5MSwgeDJfID0geDIsIHkyXyA9IHkyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeDJfID0geTJfID0gLSh4MV8gPSB5MV8gPSBJbmZpbml0eSk7XG4gICAgICAgIHhzID0gW10sIHlzID0gW107XG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgaWYgKGNvbXBhdCkgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGQgPSBkYXRhW2ldO1xuICAgICAgICAgIGlmIChkLnggPCB4MV8pIHgxXyA9IGQueDtcbiAgICAgICAgICBpZiAoZC55IDwgeTFfKSB5MV8gPSBkLnk7XG4gICAgICAgICAgaWYgKGQueCA+IHgyXykgeDJfID0gZC54O1xuICAgICAgICAgIGlmIChkLnkgPiB5Ml8pIHkyXyA9IGQueTtcbiAgICAgICAgICB4cy5wdXNoKGQueCk7XG4gICAgICAgICAgeXMucHVzaChkLnkpO1xuICAgICAgICB9IGVsc2UgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIHZhciB4XyA9ICtmeChkID0gZGF0YVtpXSwgaSksIHlfID0gK2Z5KGQsIGkpO1xuICAgICAgICAgIGlmICh4XyA8IHgxXykgeDFfID0geF87XG4gICAgICAgICAgaWYgKHlfIDwgeTFfKSB5MV8gPSB5XztcbiAgICAgICAgICBpZiAoeF8gPiB4Ml8pIHgyXyA9IHhfO1xuICAgICAgICAgIGlmICh5XyA+IHkyXykgeTJfID0geV87XG4gICAgICAgICAgeHMucHVzaCh4Xyk7XG4gICAgICAgICAgeXMucHVzaCh5Xyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciBkeCA9IHgyXyAtIHgxXywgZHkgPSB5Ml8gLSB5MV87XG4gICAgICBpZiAoZHggPiBkeSkgeTJfID0geTFfICsgZHg7IGVsc2UgeDJfID0geDFfICsgZHk7XG4gICAgICBmdW5jdGlvbiBpbnNlcnQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICAgICAgaWYgKGlzTmFOKHgpIHx8IGlzTmFOKHkpKSByZXR1cm47XG4gICAgICAgIGlmIChuLmxlYWYpIHtcbiAgICAgICAgICB2YXIgbnggPSBuLngsIG55ID0gbi55O1xuICAgICAgICAgIGlmIChueCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAoYWJzKG54IC0geCkgKyBhYnMobnkgLSB5KSA8IC4wMSkge1xuICAgICAgICAgICAgICBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB2YXIgblBvaW50ID0gbi5wb2ludDtcbiAgICAgICAgICAgICAgbi54ID0gbi55ID0gbi5wb2ludCA9IG51bGw7XG4gICAgICAgICAgICAgIGluc2VydENoaWxkKG4sIG5Qb2ludCwgbngsIG55LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgICAgICAgIGluc2VydENoaWxkKG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbi54ID0geCwgbi55ID0geSwgbi5wb2ludCA9IGQ7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGluc2VydENoaWxkKG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gaW5zZXJ0Q2hpbGQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICAgICAgdmFyIHhtID0gKHgxICsgeDIpICogLjUsIHltID0gKHkxICsgeTIpICogLjUsIHJpZ2h0ID0geCA+PSB4bSwgYmVsb3cgPSB5ID49IHltLCBpID0gYmVsb3cgPDwgMSB8IHJpZ2h0O1xuICAgICAgICBuLmxlYWYgPSBmYWxzZTtcbiAgICAgICAgbiA9IG4ubm9kZXNbaV0gfHwgKG4ubm9kZXNbaV0gPSBkM19nZW9tX3F1YWR0cmVlTm9kZSgpKTtcbiAgICAgICAgaWYgKHJpZ2h0KSB4MSA9IHhtOyBlbHNlIHgyID0geG07XG4gICAgICAgIGlmIChiZWxvdykgeTEgPSB5bTsgZWxzZSB5MiA9IHltO1xuICAgICAgICBpbnNlcnQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgfVxuICAgICAgdmFyIHJvb3QgPSBkM19nZW9tX3F1YWR0cmVlTm9kZSgpO1xuICAgICAgcm9vdC5hZGQgPSBmdW5jdGlvbihkKSB7XG4gICAgICAgIGluc2VydChyb290LCBkLCArZngoZCwgKytpKSwgK2Z5KGQsIGkpLCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgfTtcbiAgICAgIHJvb3QudmlzaXQgPSBmdW5jdGlvbihmKSB7XG4gICAgICAgIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCByb290LCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgfTtcbiAgICAgIHJvb3QuZmluZCA9IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgICAgIHJldHVybiBkM19nZW9tX3F1YWR0cmVlRmluZChyb290LCBwb2ludFswXSwgcG9pbnRbMV0sIHgxXywgeTFfLCB4Ml8sIHkyXyk7XG4gICAgICB9O1xuICAgICAgaSA9IC0xO1xuICAgICAgaWYgKHgxID09IG51bGwpIHtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBpbnNlcnQocm9vdCwgZGF0YVtpXSwgeHNbaV0sIHlzW2ldLCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgICB9XG4gICAgICAgIC0taTtcbiAgICAgIH0gZWxzZSBkYXRhLmZvckVhY2gocm9vdC5hZGQpO1xuICAgICAgeHMgPSB5cyA9IGRhdGEgPSBkID0gbnVsbDtcbiAgICAgIHJldHVybiByb290O1xuICAgIH1cbiAgICBxdWFkdHJlZS54ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IF8sIHF1YWR0cmVlKSA6IHg7XG4gICAgfTtcbiAgICBxdWFkdHJlZS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IF8sIHF1YWR0cmVlKSA6IHk7XG4gICAgfTtcbiAgICBxdWFkdHJlZS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MSA9PSBudWxsID8gbnVsbCA6IFsgWyB4MSwgeTEgXSwgWyB4MiwgeTIgXSBdO1xuICAgICAgaWYgKF8gPT0gbnVsbCkgeDEgPSB5MSA9IHgyID0geTIgPSBudWxsOyBlbHNlIHgxID0gK19bMF1bMF0sIHkxID0gK19bMF1bMV0sIHgyID0gK19bMV1bMF0sIFxuICAgICAgeTIgPSArX1sxXVsxXTtcbiAgICAgIHJldHVybiBxdWFkdHJlZTtcbiAgICB9O1xuICAgIHF1YWR0cmVlLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MSA9PSBudWxsID8gbnVsbCA6IFsgeDIgLSB4MSwgeTIgLSB5MSBdO1xuICAgICAgaWYgKF8gPT0gbnVsbCkgeDEgPSB5MSA9IHgyID0geTIgPSBudWxsOyBlbHNlIHgxID0geTEgPSAwLCB4MiA9ICtfWzBdLCB5MiA9ICtfWzFdO1xuICAgICAgcmV0dXJuIHF1YWR0cmVlO1xuICAgIH07XG4gICAgcmV0dXJuIHF1YWR0cmVlO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlQ29tcGF0WChkKSB7XG4gICAgcmV0dXJuIGQueDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlQ29tcGF0WShkKSB7XG4gICAgcmV0dXJuIGQueTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlTm9kZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGVhZjogdHJ1ZSxcbiAgICAgIG5vZGVzOiBbXSxcbiAgICAgIHBvaW50OiBudWxsLFxuICAgICAgeDogbnVsbCxcbiAgICAgIHk6IG51bGxcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBub2RlLCB4MSwgeTEsIHgyLCB5Mikge1xuICAgIGlmICghZihub2RlLCB4MSwgeTEsIHgyLCB5MikpIHtcbiAgICAgIHZhciBzeCA9ICh4MSArIHgyKSAqIC41LCBzeSA9ICh5MSArIHkyKSAqIC41LCBjaGlsZHJlbiA9IG5vZGUubm9kZXM7XG4gICAgICBpZiAoY2hpbGRyZW5bMF0pIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBjaGlsZHJlblswXSwgeDEsIHkxLCBzeCwgc3kpO1xuICAgICAgaWYgKGNoaWxkcmVuWzFdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bMV0sIHN4LCB5MSwgeDIsIHN5KTtcbiAgICAgIGlmIChjaGlsZHJlblsyXSkgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIGNoaWxkcmVuWzJdLCB4MSwgc3ksIHN4LCB5Mik7XG4gICAgICBpZiAoY2hpbGRyZW5bM10pIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBjaGlsZHJlblszXSwgc3gsIHN5LCB4MiwgeTIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlRmluZChyb290LCB4LCB5LCB4MCwgeTAsIHgzLCB5Mykge1xuICAgIHZhciBtaW5EaXN0YW5jZTIgPSBJbmZpbml0eSwgY2xvc2VzdFBvaW50O1xuICAgIChmdW5jdGlvbiBmaW5kKG5vZGUsIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICBpZiAoeDEgPiB4MyB8fCB5MSA+IHkzIHx8IHgyIDwgeDAgfHwgeTIgPCB5MCkgcmV0dXJuO1xuICAgICAgaWYgKHBvaW50ID0gbm9kZS5wb2ludCkge1xuICAgICAgICB2YXIgcG9pbnQsIGR4ID0geCAtIG5vZGUueCwgZHkgPSB5IC0gbm9kZS55LCBkaXN0YW5jZTIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgICAgaWYgKGRpc3RhbmNlMiA8IG1pbkRpc3RhbmNlMikge1xuICAgICAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguc3FydChtaW5EaXN0YW5jZTIgPSBkaXN0YW5jZTIpO1xuICAgICAgICAgIHgwID0geCAtIGRpc3RhbmNlLCB5MCA9IHkgLSBkaXN0YW5jZTtcbiAgICAgICAgICB4MyA9IHggKyBkaXN0YW5jZSwgeTMgPSB5ICsgZGlzdGFuY2U7XG4gICAgICAgICAgY2xvc2VzdFBvaW50ID0gcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUubm9kZXMsIHhtID0gKHgxICsgeDIpICogLjUsIHltID0gKHkxICsgeTIpICogLjUsIHJpZ2h0ID0geCA+PSB4bSwgYmVsb3cgPSB5ID49IHltO1xuICAgICAgZm9yICh2YXIgaSA9IGJlbG93IDw8IDEgfCByaWdodCwgaiA9IGkgKyA0OyBpIDwgajsgKytpKSB7XG4gICAgICAgIGlmIChub2RlID0gY2hpbGRyZW5baSAmIDNdKSBzd2l0Y2ggKGkgJiAzKSB7XG4gICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgZmluZChub2RlLCB4MSwgeTEsIHhtLCB5bSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBmaW5kKG5vZGUsIHhtLCB5MSwgeDIsIHltKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIGZpbmQobm9kZSwgeDEsIHltLCB4bSwgeTIpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgZmluZChub2RlLCB4bSwgeW0sIHgyLCB5Mik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KShyb290LCB4MCwgeTAsIHgzLCB5Myk7XG4gICAgcmV0dXJuIGNsb3Nlc3RQb2ludDtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZVJnYiA9IGQzX2ludGVycG9sYXRlUmdiO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVJnYihhLCBiKSB7XG4gICAgYSA9IGQzLnJnYihhKTtcbiAgICBiID0gZDMucmdiKGIpO1xuICAgIHZhciBhciA9IGEuciwgYWcgPSBhLmcsIGFiID0gYS5iLCBiciA9IGIuciAtIGFyLCBiZyA9IGIuZyAtIGFnLCBiYiA9IGIuYiAtIGFiO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gXCIjXCIgKyBkM19yZ2JfaGV4KE1hdGgucm91bmQoYXIgKyBiciAqIHQpKSArIGQzX3JnYl9oZXgoTWF0aC5yb3VuZChhZyArIGJnICogdCkpICsgZDNfcmdiX2hleChNYXRoLnJvdW5kKGFiICsgYmIgKiB0KSk7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZU9iamVjdCA9IGQzX2ludGVycG9sYXRlT2JqZWN0O1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZU9iamVjdChhLCBiKSB7XG4gICAgdmFyIGkgPSB7fSwgYyA9IHt9LCBrO1xuICAgIGZvciAoayBpbiBhKSB7XG4gICAgICBpZiAoayBpbiBiKSB7XG4gICAgICAgIGlba10gPSBkM19pbnRlcnBvbGF0ZShhW2tdLCBiW2tdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNba10gPSBhW2tdO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGsgaW4gYikge1xuICAgICAgaWYgKCEoayBpbiBhKSkge1xuICAgICAgICBjW2tdID0gYltrXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIGZvciAoayBpbiBpKSBjW2tdID0gaVtrXSh0KTtcbiAgICAgIHJldHVybiBjO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVOdW1iZXIgPSBkM19pbnRlcnBvbGF0ZU51bWJlcjtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVOdW1iZXIoYSwgYikge1xuICAgIGEgPSArYSwgYiA9ICtiO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gYSAqICgxIC0gdCkgKyBiICogdDtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlU3RyaW5nID0gZDNfaW50ZXJwb2xhdGVTdHJpbmc7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlU3RyaW5nKGEsIGIpIHtcbiAgICB2YXIgYmkgPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJBLmxhc3RJbmRleCA9IGQzX2ludGVycG9sYXRlX251bWJlckIubGFzdEluZGV4ID0gMCwgYW0sIGJtLCBicywgaSA9IC0xLCBzID0gW10sIHEgPSBbXTtcbiAgICBhID0gYSArIFwiXCIsIGIgPSBiICsgXCJcIjtcbiAgICB3aGlsZSAoKGFtID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQS5leGVjKGEpKSAmJiAoYm0gPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJCLmV4ZWMoYikpKSB7XG4gICAgICBpZiAoKGJzID0gYm0uaW5kZXgpID4gYmkpIHtcbiAgICAgICAgYnMgPSBiLnNsaWNlKGJpLCBicyk7XG4gICAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyBlbHNlIHNbKytpXSA9IGJzO1xuICAgICAgfVxuICAgICAgaWYgKChhbSA9IGFtWzBdKSA9PT0gKGJtID0gYm1bMF0pKSB7XG4gICAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJtOyBlbHNlIHNbKytpXSA9IGJtO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc1srK2ldID0gbnVsbDtcbiAgICAgICAgcS5wdXNoKHtcbiAgICAgICAgICBpOiBpLFxuICAgICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKGFtLCBibSlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBiaSA9IGQzX2ludGVycG9sYXRlX251bWJlckIubGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoYmkgPCBiLmxlbmd0aCkge1xuICAgICAgYnMgPSBiLnNsaWNlKGJpKTtcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyBlbHNlIHNbKytpXSA9IGJzO1xuICAgIH1cbiAgICByZXR1cm4gcy5sZW5ndGggPCAyID8gcVswXSA/IChiID0gcVswXS54LCBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gYih0KSArIFwiXCI7XG4gICAgfSkgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBiO1xuICAgIH0gOiAoYiA9IHEubGVuZ3RoLCBmdW5jdGlvbih0KSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbzsgaSA8IGI7ICsraSkgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICB9KTtcbiAgfVxuICB2YXIgZDNfaW50ZXJwb2xhdGVfbnVtYmVyQSA9IC9bLStdPyg/OlxcZCtcXC4/XFxkKnxcXC4/XFxkKykoPzpbZUVdWy0rXT9cXGQrKT8vZywgZDNfaW50ZXJwb2xhdGVfbnVtYmVyQiA9IG5ldyBSZWdFeHAoZDNfaW50ZXJwb2xhdGVfbnVtYmVyQS5zb3VyY2UsIFwiZ1wiKTtcbiAgZDMuaW50ZXJwb2xhdGUgPSBkM19pbnRlcnBvbGF0ZTtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGUoYSwgYikge1xuICAgIHZhciBpID0gZDMuaW50ZXJwb2xhdG9ycy5sZW5ndGgsIGY7XG4gICAgd2hpbGUgKC0taSA+PSAwICYmICEoZiA9IGQzLmludGVycG9sYXRvcnNbaV0oYSwgYikpKSA7XG4gICAgcmV0dXJuIGY7XG4gIH1cbiAgZDMuaW50ZXJwb2xhdG9ycyA9IFsgZnVuY3Rpb24oYSwgYikge1xuICAgIHZhciB0ID0gdHlwZW9mIGI7XG4gICAgcmV0dXJuICh0ID09PSBcInN0cmluZ1wiID8gZDNfcmdiX25hbWVzLmhhcyhiLnRvTG93ZXJDYXNlKCkpIHx8IC9eKCN8cmdiXFwofGhzbFxcKCkvaS50ZXN0KGIpID8gZDNfaW50ZXJwb2xhdGVSZ2IgOiBkM19pbnRlcnBvbGF0ZVN0cmluZyA6IGIgaW5zdGFuY2VvZiBkM19jb2xvciA/IGQzX2ludGVycG9sYXRlUmdiIDogQXJyYXkuaXNBcnJheShiKSA/IGQzX2ludGVycG9sYXRlQXJyYXkgOiB0ID09PSBcIm9iamVjdFwiICYmIGlzTmFOKGIpID8gZDNfaW50ZXJwb2xhdGVPYmplY3QgOiBkM19pbnRlcnBvbGF0ZU51bWJlcikoYSwgYik7XG4gIH0gXTtcbiAgZDMuaW50ZXJwb2xhdGVBcnJheSA9IGQzX2ludGVycG9sYXRlQXJyYXk7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlQXJyYXkoYSwgYikge1xuICAgIHZhciB4ID0gW10sIGMgPSBbXSwgbmEgPSBhLmxlbmd0aCwgbmIgPSBiLmxlbmd0aCwgbjAgPSBNYXRoLm1pbihhLmxlbmd0aCwgYi5sZW5ndGgpLCBpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuMDsgKytpKSB4LnB1c2goZDNfaW50ZXJwb2xhdGUoYVtpXSwgYltpXSkpO1xuICAgIGZvciAoO2kgPCBuYTsgKytpKSBjW2ldID0gYVtpXTtcbiAgICBmb3IgKDtpIDwgbmI7ICsraSkgY1tpXSA9IGJbaV07XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuMDsgKytpKSBjW2ldID0geFtpXSh0KTtcbiAgICAgIHJldHVybiBjO1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX2Vhc2VfZGVmYXVsdCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19pZGVudGl0eTtcbiAgfTtcbiAgdmFyIGQzX2Vhc2UgPSBkMy5tYXAoe1xuICAgIGxpbmVhcjogZDNfZWFzZV9kZWZhdWx0LFxuICAgIHBvbHk6IGQzX2Vhc2VfcG9seSxcbiAgICBxdWFkOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX3F1YWQ7XG4gICAgfSxcbiAgICBjdWJpYzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9jdWJpYztcbiAgICB9LFxuICAgIHNpbjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9zaW47XG4gICAgfSxcbiAgICBleHA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfZXhwO1xuICAgIH0sXG4gICAgY2lyY2xlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX2NpcmNsZTtcbiAgICB9LFxuICAgIGVsYXN0aWM6IGQzX2Vhc2VfZWxhc3RpYyxcbiAgICBiYWNrOiBkM19lYXNlX2JhY2ssXG4gICAgYm91bmNlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX2JvdW5jZTtcbiAgICB9XG4gIH0pO1xuICB2YXIgZDNfZWFzZV9tb2RlID0gZDMubWFwKHtcbiAgICBcImluXCI6IGQzX2lkZW50aXR5LFxuICAgIG91dDogZDNfZWFzZV9yZXZlcnNlLFxuICAgIFwiaW4tb3V0XCI6IGQzX2Vhc2VfcmVmbGVjdCxcbiAgICBcIm91dC1pblwiOiBmdW5jdGlvbihmKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9yZWZsZWN0KGQzX2Vhc2VfcmV2ZXJzZShmKSk7XG4gICAgfVxuICB9KTtcbiAgZDMuZWFzZSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaSA9IG5hbWUuaW5kZXhPZihcIi1cIiksIHQgPSBpID49IDAgPyBuYW1lLnNsaWNlKDAsIGkpIDogbmFtZSwgbSA9IGkgPj0gMCA/IG5hbWUuc2xpY2UoaSArIDEpIDogXCJpblwiO1xuICAgIHQgPSBkM19lYXNlLmdldCh0KSB8fCBkM19lYXNlX2RlZmF1bHQ7XG4gICAgbSA9IGQzX2Vhc2VfbW9kZS5nZXQobSkgfHwgZDNfaWRlbnRpdHk7XG4gICAgcmV0dXJuIGQzX2Vhc2VfY2xhbXAobSh0LmFwcGx5KG51bGwsIGQzX2FycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19lYXNlX2NsYW1wKGYpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIHQgPD0gMCA/IDAgOiB0ID49IDEgPyAxIDogZih0KTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfcmV2ZXJzZShmKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiAxIC0gZigxIC0gdCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3JlZmxlY3QoZikge1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gLjUgKiAodCA8IC41ID8gZigyICogdCkgOiAyIC0gZigyIC0gMiAqIHQpKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfcXVhZCh0KSB7XG4gICAgcmV0dXJuIHQgKiB0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfY3ViaWModCkge1xuICAgIHJldHVybiB0ICogdCAqIHQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9jdWJpY0luT3V0KHQpIHtcbiAgICBpZiAodCA8PSAwKSByZXR1cm4gMDtcbiAgICBpZiAodCA+PSAxKSByZXR1cm4gMTtcbiAgICB2YXIgdDIgPSB0ICogdCwgdDMgPSB0MiAqIHQ7XG4gICAgcmV0dXJuIDQgKiAodCA8IC41ID8gdDMgOiAzICogKHQgLSB0MikgKyB0MyAtIC43NSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9wb2x5KGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIE1hdGgucG93KHQsIGUpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9zaW4odCkge1xuICAgIHJldHVybiAxIC0gTWF0aC5jb3ModCAqIGhhbGbPgCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9leHAodCkge1xuICAgIHJldHVybiBNYXRoLnBvdygyLCAxMCAqICh0IC0gMSkpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfY2lyY2xlKHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfZWxhc3RpYyhhLCBwKSB7XG4gICAgdmFyIHM7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBwID0gLjQ1O1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoKSBzID0gcCAvIM+EICogTWF0aC5hc2luKDEgLyBhKTsgZWxzZSBhID0gMSwgcyA9IHAgLyA0O1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gMSArIGEgKiBNYXRoLnBvdygyLCAtMTAgKiB0KSAqIE1hdGguc2luKCh0IC0gcykgKiDPhCAvIHApO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9iYWNrKHMpIHtcbiAgICBpZiAoIXMpIHMgPSAxLjcwMTU4O1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gdCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfYm91bmNlKHQpIHtcbiAgICByZXR1cm4gdCA8IDEgLyAyLjc1ID8gNy41NjI1ICogdCAqIHQgOiB0IDwgMiAvIDIuNzUgPyA3LjU2MjUgKiAodCAtPSAxLjUgLyAyLjc1KSAqIHQgKyAuNzUgOiB0IDwgMi41IC8gMi43NSA/IDcuNTYyNSAqICh0IC09IDIuMjUgLyAyLjc1KSAqIHQgKyAuOTM3NSA6IDcuNTYyNSAqICh0IC09IDIuNjI1IC8gMi43NSkgKiB0ICsgLjk4NDM3NTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZUhjbCA9IGQzX2ludGVycG9sYXRlSGNsO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZUhjbChhLCBiKSB7XG4gICAgYSA9IGQzLmhjbChhKTtcbiAgICBiID0gZDMuaGNsKGIpO1xuICAgIHZhciBhaCA9IGEuaCwgYWMgPSBhLmMsIGFsID0gYS5sLCBiaCA9IGIuaCAtIGFoLCBiYyA9IGIuYyAtIGFjLCBibCA9IGIubCAtIGFsO1xuICAgIGlmIChpc05hTihiYykpIGJjID0gMCwgYWMgPSBpc05hTihhYykgPyBiLmMgOiBhYztcbiAgICBpZiAoaXNOYU4oYmgpKSBiaCA9IDAsIGFoID0gaXNOYU4oYWgpID8gYi5oIDogYWg7IGVsc2UgaWYgKGJoID4gMTgwKSBiaCAtPSAzNjA7IGVsc2UgaWYgKGJoIDwgLTE4MCkgYmggKz0gMzYwO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gZDNfaGNsX2xhYihhaCArIGJoICogdCwgYWMgKyBiYyAqIHQsIGFsICsgYmwgKiB0KSArIFwiXCI7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZUhzbCA9IGQzX2ludGVycG9sYXRlSHNsO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZUhzbChhLCBiKSB7XG4gICAgYSA9IGQzLmhzbChhKTtcbiAgICBiID0gZDMuaHNsKGIpO1xuICAgIHZhciBhaCA9IGEuaCwgYXMgPSBhLnMsIGFsID0gYS5sLCBiaCA9IGIuaCAtIGFoLCBicyA9IGIucyAtIGFzLCBibCA9IGIubCAtIGFsO1xuICAgIGlmIChpc05hTihicykpIGJzID0gMCwgYXMgPSBpc05hTihhcykgPyBiLnMgOiBhcztcbiAgICBpZiAoaXNOYU4oYmgpKSBiaCA9IDAsIGFoID0gaXNOYU4oYWgpID8gYi5oIDogYWg7IGVsc2UgaWYgKGJoID4gMTgwKSBiaCAtPSAzNjA7IGVsc2UgaWYgKGJoIDwgLTE4MCkgYmggKz0gMzYwO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gZDNfaHNsX3JnYihhaCArIGJoICogdCwgYXMgKyBicyAqIHQsIGFsICsgYmwgKiB0KSArIFwiXCI7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZUxhYiA9IGQzX2ludGVycG9sYXRlTGFiO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZUxhYihhLCBiKSB7XG4gICAgYSA9IGQzLmxhYihhKTtcbiAgICBiID0gZDMubGFiKGIpO1xuICAgIHZhciBhbCA9IGEubCwgYWEgPSBhLmEsIGFiID0gYS5iLCBibCA9IGIubCAtIGFsLCBiYSA9IGIuYSAtIGFhLCBiYiA9IGIuYiAtIGFiO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gZDNfbGFiX3JnYihhbCArIGJsICogdCwgYWEgKyBiYSAqIHQsIGFiICsgYmIgKiB0KSArIFwiXCI7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZVJvdW5kID0gZDNfaW50ZXJwb2xhdGVSb3VuZDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVSb3VuZChhLCBiKSB7XG4gICAgYiAtPSBhO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gTWF0aC5yb3VuZChhICsgYiAqIHQpO1xuICAgIH07XG4gIH1cbiAgZDMudHJhbnNmb3JtID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIGcgPSBkM19kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoZDMubnMucHJlZml4LnN2ZywgXCJnXCIpO1xuICAgIHJldHVybiAoZDMudHJhbnNmb3JtID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICBpZiAoc3RyaW5nICE9IG51bGwpIHtcbiAgICAgICAgZy5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIiwgc3RyaW5nKTtcbiAgICAgICAgdmFyIHQgPSBnLnRyYW5zZm9ybS5iYXNlVmFsLmNvbnNvbGlkYXRlKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IGQzX3RyYW5zZm9ybSh0ID8gdC5tYXRyaXggOiBkM190cmFuc2Zvcm1JZGVudGl0eSk7XG4gICAgfSkoc3RyaW5nKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtKG0pIHtcbiAgICB2YXIgcjAgPSBbIG0uYSwgbS5iIF0sIHIxID0gWyBtLmMsIG0uZCBdLCBreCA9IGQzX3RyYW5zZm9ybU5vcm1hbGl6ZShyMCksIGt6ID0gZDNfdHJhbnNmb3JtRG90KHIwLCByMSksIGt5ID0gZDNfdHJhbnNmb3JtTm9ybWFsaXplKGQzX3RyYW5zZm9ybUNvbWJpbmUocjEsIHIwLCAta3opKSB8fCAwO1xuICAgIGlmIChyMFswXSAqIHIxWzFdIDwgcjFbMF0gKiByMFsxXSkge1xuICAgICAgcjBbMF0gKj0gLTE7XG4gICAgICByMFsxXSAqPSAtMTtcbiAgICAgIGt4ICo9IC0xO1xuICAgICAga3ogKj0gLTE7XG4gICAgfVxuICAgIHRoaXMucm90YXRlID0gKGt4ID8gTWF0aC5hdGFuMihyMFsxXSwgcjBbMF0pIDogTWF0aC5hdGFuMigtcjFbMF0sIHIxWzFdKSkgKiBkM19kZWdyZWVzO1xuICAgIHRoaXMudHJhbnNsYXRlID0gWyBtLmUsIG0uZiBdO1xuICAgIHRoaXMuc2NhbGUgPSBbIGt4LCBreSBdO1xuICAgIHRoaXMuc2tldyA9IGt5ID8gTWF0aC5hdGFuMihreiwga3kpICogZDNfZGVncmVlcyA6IDA7XG4gIH1cbiAgZDNfdHJhbnNmb3JtLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIHRoaXMudHJhbnNsYXRlICsgXCIpcm90YXRlKFwiICsgdGhpcy5yb3RhdGUgKyBcIilza2V3WChcIiArIHRoaXMuc2tldyArIFwiKXNjYWxlKFwiICsgdGhpcy5zY2FsZSArIFwiKVwiO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2Zvcm1Eb3QoYSwgYikge1xuICAgIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RyYW5zZm9ybU5vcm1hbGl6ZShhKSB7XG4gICAgdmFyIGsgPSBNYXRoLnNxcnQoZDNfdHJhbnNmb3JtRG90KGEsIGEpKTtcbiAgICBpZiAoaykge1xuICAgICAgYVswXSAvPSBrO1xuICAgICAgYVsxXSAvPSBrO1xuICAgIH1cbiAgICByZXR1cm4gaztcbiAgfVxuICBmdW5jdGlvbiBkM190cmFuc2Zvcm1Db21iaW5lKGEsIGIsIGspIHtcbiAgICBhWzBdICs9IGsgKiBiWzBdO1xuICAgIGFbMV0gKz0gayAqIGJbMV07XG4gICAgcmV0dXJuIGE7XG4gIH1cbiAgdmFyIGQzX3RyYW5zZm9ybUlkZW50aXR5ID0ge1xuICAgIGE6IDEsXG4gICAgYjogMCxcbiAgICBjOiAwLFxuICAgIGQ6IDEsXG4gICAgZTogMCxcbiAgICBmOiAwXG4gIH07XG4gIGQzLmludGVycG9sYXRlVHJhbnNmb3JtID0gZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm07XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpIHtcbiAgICByZXR1cm4gcy5sZW5ndGggPyBzLnBvcCgpICsgXCIsXCIgOiBcIlwiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlVHJhbnNsYXRlKHRhLCB0YiwgcywgcSkge1xuICAgIGlmICh0YVswXSAhPT0gdGJbMF0gfHwgdGFbMV0gIT09IHRiWzFdKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChcInRyYW5zbGF0ZShcIiwgbnVsbCwgXCIsXCIsIG51bGwsIFwiKVwiKTtcbiAgICAgIHEucHVzaCh7XG4gICAgICAgIGk6IGkgLSA0LFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcih0YVswXSwgdGJbMF0pXG4gICAgICB9LCB7XG4gICAgICAgIGk6IGkgLSAyLFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcih0YVsxXSwgdGJbMV0pXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHRiWzBdIHx8IHRiWzFdKSB7XG4gICAgICBzLnB1c2goXCJ0cmFuc2xhdGUoXCIgKyB0YiArIFwiKVwiKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVSb3RhdGUocmEsIHJiLCBzLCBxKSB7XG4gICAgaWYgKHJhICE9PSByYikge1xuICAgICAgaWYgKHJhIC0gcmIgPiAxODApIHJiICs9IDM2MDsgZWxzZSBpZiAocmIgLSByYSA+IDE4MCkgcmEgKz0gMzYwO1xuICAgICAgcS5wdXNoKHtcbiAgICAgICAgaTogcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJyb3RhdGUoXCIsIG51bGwsIFwiKVwiKSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHJhLCByYilcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocmIpIHtcbiAgICAgIHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwicm90YXRlKFwiICsgcmIgKyBcIilcIik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlU2tldyh3YSwgd2IsIHMsIHEpIHtcbiAgICBpZiAod2EgIT09IHdiKSB7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInNrZXdYKFwiLCBudWxsLCBcIilcIikgLSAyLFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcih3YSwgd2IpXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHdiKSB7XG4gICAgICBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInNrZXdYKFwiICsgd2IgKyBcIilcIik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlU2NhbGUoa2EsIGtiLCBzLCBxKSB7XG4gICAgaWYgKGthWzBdICE9PSBrYlswXSB8fCBrYVsxXSAhPT0ga2JbMV0pIHtcbiAgICAgIHZhciBpID0gcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJzY2FsZShcIiwgbnVsbCwgXCIsXCIsIG51bGwsIFwiKVwiKTtcbiAgICAgIHEucHVzaCh7XG4gICAgICAgIGk6IGkgLSA0LFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcihrYVswXSwga2JbMF0pXG4gICAgICB9LCB7XG4gICAgICAgIGk6IGkgLSAyLFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcihrYVsxXSwga2JbMV0pXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGtiWzBdICE9PSAxIHx8IGtiWzFdICE9PSAxKSB7XG4gICAgICBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInNjYWxlKFwiICsga2IgKyBcIilcIik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlVHJhbnNmb3JtKGEsIGIpIHtcbiAgICB2YXIgcyA9IFtdLCBxID0gW107XG4gICAgYSA9IGQzLnRyYW5zZm9ybShhKSwgYiA9IGQzLnRyYW5zZm9ybShiKTtcbiAgICBkM19pbnRlcnBvbGF0ZVRyYW5zbGF0ZShhLnRyYW5zbGF0ZSwgYi50cmFuc2xhdGUsIHMsIHEpO1xuICAgIGQzX2ludGVycG9sYXRlUm90YXRlKGEucm90YXRlLCBiLnJvdGF0ZSwgcywgcSk7XG4gICAgZDNfaW50ZXJwb2xhdGVTa2V3KGEuc2tldywgYi5za2V3LCBzLCBxKTtcbiAgICBkM19pbnRlcnBvbGF0ZVNjYWxlKGEuc2NhbGUsIGIuc2NhbGUsIHMsIHEpO1xuICAgIGEgPSBiID0gbnVsbDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IHEubGVuZ3RoLCBvO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHNbKG8gPSBxW2ldKS5pXSA9IG8ueCh0KTtcbiAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM191bmludGVycG9sYXRlTnVtYmVyKGEsIGIpIHtcbiAgICBiID0gKGIgLT0gYSA9ICthKSB8fCAxIC8gYjtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuICh4IC0gYSkgLyBiO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdW5pbnRlcnBvbGF0ZUNsYW1wKGEsIGIpIHtcbiAgICBiID0gKGIgLT0gYSA9ICthKSB8fCAxIC8gYjtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEsICh4IC0gYSkgLyBiKSk7XG4gICAgfTtcbiAgfVxuICBkMy5sYXlvdXQgPSB7fTtcbiAgZDMubGF5b3V0LmJ1bmRsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmdW5jdGlvbihsaW5rcykge1xuICAgICAgdmFyIHBhdGhzID0gW10sIGkgPSAtMSwgbiA9IGxpbmtzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBwYXRocy5wdXNoKGQzX2xheW91dF9idW5kbGVQYXRoKGxpbmtzW2ldKSk7XG4gICAgICByZXR1cm4gcGF0aHM7XG4gICAgfTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZVBhdGgobGluaykge1xuICAgIHZhciBzdGFydCA9IGxpbmsuc291cmNlLCBlbmQgPSBsaW5rLnRhcmdldCwgbGNhID0gZDNfbGF5b3V0X2J1bmRsZUxlYXN0Q29tbW9uQW5jZXN0b3Ioc3RhcnQsIGVuZCksIHBvaW50cyA9IFsgc3RhcnQgXTtcbiAgICB3aGlsZSAoc3RhcnQgIT09IGxjYSkge1xuICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnQ7XG4gICAgICBwb2ludHMucHVzaChzdGFydCk7XG4gICAgfVxuICAgIHZhciBrID0gcG9pbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoZW5kICE9PSBsY2EpIHtcbiAgICAgIHBvaW50cy5zcGxpY2UoaywgMCwgZW5kKTtcbiAgICAgIGVuZCA9IGVuZC5wYXJlbnQ7XG4gICAgfVxuICAgIHJldHVybiBwb2ludHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhub2RlKSB7XG4gICAgdmFyIGFuY2VzdG9ycyA9IFtdLCBwYXJlbnQgPSBub2RlLnBhcmVudDtcbiAgICB3aGlsZSAocGFyZW50ICE9IG51bGwpIHtcbiAgICAgIGFuY2VzdG9ycy5wdXNoKG5vZGUpO1xuICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gICAgfVxuICAgIGFuY2VzdG9ycy5wdXNoKG5vZGUpO1xuICAgIHJldHVybiBhbmNlc3RvcnM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZUxlYXN0Q29tbW9uQW5jZXN0b3IoYSwgYikge1xuICAgIGlmIChhID09PSBiKSByZXR1cm4gYTtcbiAgICB2YXIgYU5vZGVzID0gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhhKSwgYk5vZGVzID0gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhiKSwgYU5vZGUgPSBhTm9kZXMucG9wKCksIGJOb2RlID0gYk5vZGVzLnBvcCgpLCBzaGFyZWROb2RlID0gbnVsbDtcbiAgICB3aGlsZSAoYU5vZGUgPT09IGJOb2RlKSB7XG4gICAgICBzaGFyZWROb2RlID0gYU5vZGU7XG4gICAgICBhTm9kZSA9IGFOb2Rlcy5wb3AoKTtcbiAgICAgIGJOb2RlID0gYk5vZGVzLnBvcCgpO1xuICAgIH1cbiAgICByZXR1cm4gc2hhcmVkTm9kZTtcbiAgfVxuICBkMy5sYXlvdXQuY2hvcmQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgY2hvcmQgPSB7fSwgY2hvcmRzLCBncm91cHMsIG1hdHJpeCwgbiwgcGFkZGluZyA9IDAsIHNvcnRHcm91cHMsIHNvcnRTdWJncm91cHMsIHNvcnRDaG9yZHM7XG4gICAgZnVuY3Rpb24gcmVsYXlvdXQoKSB7XG4gICAgICB2YXIgc3ViZ3JvdXBzID0ge30sIGdyb3VwU3VtcyA9IFtdLCBncm91cEluZGV4ID0gZDMucmFuZ2UobiksIHN1Ymdyb3VwSW5kZXggPSBbXSwgaywgeCwgeDAsIGksIGo7XG4gICAgICBjaG9yZHMgPSBbXTtcbiAgICAgIGdyb3VwcyA9IFtdO1xuICAgICAgayA9IDAsIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIHggPSAwLCBqID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgICAgeCArPSBtYXRyaXhbaV1bal07XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBTdW1zLnB1c2goeCk7XG4gICAgICAgIHN1Ymdyb3VwSW5kZXgucHVzaChkMy5yYW5nZShuKSk7XG4gICAgICAgIGsgKz0geDtcbiAgICAgIH1cbiAgICAgIGlmIChzb3J0R3JvdXBzKSB7XG4gICAgICAgIGdyb3VwSW5kZXguc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgcmV0dXJuIHNvcnRHcm91cHMoZ3JvdXBTdW1zW2FdLCBncm91cFN1bXNbYl0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmIChzb3J0U3ViZ3JvdXBzKSB7XG4gICAgICAgIHN1Ymdyb3VwSW5kZXguZm9yRWFjaChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgICAgZC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBzb3J0U3ViZ3JvdXBzKG1hdHJpeFtpXVthXSwgbWF0cml4W2ldW2JdKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBrID0gKM+EIC0gcGFkZGluZyAqIG4pIC8gaztcbiAgICAgIHggPSAwLCBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICB4MCA9IHgsIGogPSAtMTtcbiAgICAgICAgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgICB2YXIgZGkgPSBncm91cEluZGV4W2ldLCBkaiA9IHN1Ymdyb3VwSW5kZXhbZGldW2pdLCB2ID0gbWF0cml4W2RpXVtkal0sIGEwID0geCwgYTEgPSB4ICs9IHYgKiBrO1xuICAgICAgICAgIHN1Ymdyb3Vwc1tkaSArIFwiLVwiICsgZGpdID0ge1xuICAgICAgICAgICAgaW5kZXg6IGRpLFxuICAgICAgICAgICAgc3ViaW5kZXg6IGRqLFxuICAgICAgICAgICAgc3RhcnRBbmdsZTogYTAsXG4gICAgICAgICAgICBlbmRBbmdsZTogYTEsXG4gICAgICAgICAgICB2YWx1ZTogdlxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBzW2RpXSA9IHtcbiAgICAgICAgICBpbmRleDogZGksXG4gICAgICAgICAgc3RhcnRBbmdsZTogeDAsXG4gICAgICAgICAgZW5kQW5nbGU6IHgsXG4gICAgICAgICAgdmFsdWU6IGdyb3VwU3Vtc1tkaV1cbiAgICAgICAgfTtcbiAgICAgICAgeCArPSBwYWRkaW5nO1xuICAgICAgfVxuICAgICAgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaiA9IGkgLSAxO1xuICAgICAgICB3aGlsZSAoKytqIDwgbikge1xuICAgICAgICAgIHZhciBzb3VyY2UgPSBzdWJncm91cHNbaSArIFwiLVwiICsgal0sIHRhcmdldCA9IHN1Ymdyb3Vwc1tqICsgXCItXCIgKyBpXTtcbiAgICAgICAgICBpZiAoc291cmNlLnZhbHVlIHx8IHRhcmdldC52YWx1ZSkge1xuICAgICAgICAgICAgY2hvcmRzLnB1c2goc291cmNlLnZhbHVlIDwgdGFyZ2V0LnZhbHVlID8ge1xuICAgICAgICAgICAgICBzb3VyY2U6IHRhcmdldCxcbiAgICAgICAgICAgICAgdGFyZ2V0OiBzb3VyY2VcbiAgICAgICAgICAgIH0gOiB7XG4gICAgICAgICAgICAgIHNvdXJjZTogc291cmNlLFxuICAgICAgICAgICAgICB0YXJnZXQ6IHRhcmdldFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc29ydENob3JkcykgcmVzb3J0KCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc29ydCgpIHtcbiAgICAgIGNob3Jkcy5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHNvcnRDaG9yZHMoKGEuc291cmNlLnZhbHVlICsgYS50YXJnZXQudmFsdWUpIC8gMiwgKGIuc291cmNlLnZhbHVlICsgYi50YXJnZXQudmFsdWUpIC8gMik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgY2hvcmQubWF0cml4ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbWF0cml4O1xuICAgICAgbiA9IChtYXRyaXggPSB4KSAmJiBtYXRyaXgubGVuZ3RoO1xuICAgICAgY2hvcmRzID0gZ3JvdXBzID0gbnVsbDtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnBhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRkaW5nO1xuICAgICAgcGFkZGluZyA9IHg7XG4gICAgICBjaG9yZHMgPSBncm91cHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc29ydEdyb3VwcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnRHcm91cHM7XG4gICAgICBzb3J0R3JvdXBzID0geDtcbiAgICAgIGNob3JkcyA9IGdyb3VwcyA9IG51bGw7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zb3J0U3ViZ3JvdXBzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydFN1Ymdyb3VwcztcbiAgICAgIHNvcnRTdWJncm91cHMgPSB4O1xuICAgICAgY2hvcmRzID0gbnVsbDtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvcnRDaG9yZHMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0Q2hvcmRzO1xuICAgICAgc29ydENob3JkcyA9IHg7XG4gICAgICBpZiAoY2hvcmRzKSByZXNvcnQoKTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLmNob3JkcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFjaG9yZHMpIHJlbGF5b3V0KCk7XG4gICAgICByZXR1cm4gY2hvcmRzO1xuICAgIH07XG4gICAgY2hvcmQuZ3JvdXBzID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWdyb3VwcykgcmVsYXlvdXQoKTtcbiAgICAgIHJldHVybiBncm91cHM7XG4gICAgfTtcbiAgICByZXR1cm4gY2hvcmQ7XG4gIH07XG4gIGQzLmxheW91dC5mb3JjZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBmb3JjZSA9IHt9LCBldmVudCA9IGQzLmRpc3BhdGNoKFwic3RhcnRcIiwgXCJ0aWNrXCIsIFwiZW5kXCIpLCB0aW1lciwgc2l6ZSA9IFsgMSwgMSBdLCBkcmFnLCBhbHBoYSwgZnJpY3Rpb24gPSAuOSwgbGlua0Rpc3RhbmNlID0gZDNfbGF5b3V0X2ZvcmNlTGlua0Rpc3RhbmNlLCBsaW5rU3RyZW5ndGggPSBkM19sYXlvdXRfZm9yY2VMaW5rU3RyZW5ndGgsIGNoYXJnZSA9IC0zMCwgY2hhcmdlRGlzdGFuY2UyID0gZDNfbGF5b3V0X2ZvcmNlQ2hhcmdlRGlzdGFuY2UyLCBncmF2aXR5ID0gLjEsIHRoZXRhMiA9IC42NCwgbm9kZXMgPSBbXSwgbGlua3MgPSBbXSwgZGlzdGFuY2VzLCBzdHJlbmd0aHMsIGNoYXJnZXM7XG4gICAgZnVuY3Rpb24gcmVwdWxzZShub2RlKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24ocXVhZCwgeDEsIF8sIHgyKSB7XG4gICAgICAgIGlmIChxdWFkLnBvaW50ICE9PSBub2RlKSB7XG4gICAgICAgICAgdmFyIGR4ID0gcXVhZC5jeCAtIG5vZGUueCwgZHkgPSBxdWFkLmN5IC0gbm9kZS55LCBkdyA9IHgyIC0geDEsIGRuID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgICAgaWYgKGR3ICogZHcgLyB0aGV0YTIgPCBkbikge1xuICAgICAgICAgICAgaWYgKGRuIDwgY2hhcmdlRGlzdGFuY2UyKSB7XG4gICAgICAgICAgICAgIHZhciBrID0gcXVhZC5jaGFyZ2UgLyBkbjtcbiAgICAgICAgICAgICAgbm9kZS5weCAtPSBkeCAqIGs7XG4gICAgICAgICAgICAgIG5vZGUucHkgLT0gZHkgKiBrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChxdWFkLnBvaW50ICYmIGRuICYmIGRuIDwgY2hhcmdlRGlzdGFuY2UyKSB7XG4gICAgICAgICAgICB2YXIgayA9IHF1YWQucG9pbnRDaGFyZ2UgLyBkbjtcbiAgICAgICAgICAgIG5vZGUucHggLT0gZHggKiBrO1xuICAgICAgICAgICAgbm9kZS5weSAtPSBkeSAqIGs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAhcXVhZC5jaGFyZ2U7XG4gICAgICB9O1xuICAgIH1cbiAgICBmb3JjZS50aWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKGFscGhhICo9IC45OSkgPCAuMDA1KSB7XG4gICAgICAgIHRpbWVyID0gbnVsbDtcbiAgICAgICAgZXZlbnQuZW5kKHtcbiAgICAgICAgICB0eXBlOiBcImVuZFwiLFxuICAgICAgICAgIGFscGhhOiBhbHBoYSA9IDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgdmFyIG4gPSBub2Rlcy5sZW5ndGgsIG0gPSBsaW5rcy5sZW5ndGgsIHEsIGksIG8sIHMsIHQsIGwsIGssIHgsIHk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSB7XG4gICAgICAgIG8gPSBsaW5rc1tpXTtcbiAgICAgICAgcyA9IG8uc291cmNlO1xuICAgICAgICB0ID0gby50YXJnZXQ7XG4gICAgICAgIHggPSB0LnggLSBzLng7XG4gICAgICAgIHkgPSB0LnkgLSBzLnk7XG4gICAgICAgIGlmIChsID0geCAqIHggKyB5ICogeSkge1xuICAgICAgICAgIGwgPSBhbHBoYSAqIHN0cmVuZ3Roc1tpXSAqICgobCA9IE1hdGguc3FydChsKSkgLSBkaXN0YW5jZXNbaV0pIC8gbDtcbiAgICAgICAgICB4ICo9IGw7XG4gICAgICAgICAgeSAqPSBsO1xuICAgICAgICAgIHQueCAtPSB4ICogKGsgPSBzLndlaWdodCArIHQud2VpZ2h0ID8gcy53ZWlnaHQgLyAocy53ZWlnaHQgKyB0LndlaWdodCkgOiAuNSk7XG4gICAgICAgICAgdC55IC09IHkgKiBrO1xuICAgICAgICAgIHMueCArPSB4ICogKGsgPSAxIC0gayk7XG4gICAgICAgICAgcy55ICs9IHkgKiBrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoayA9IGFscGhhICogZ3Jhdml0eSkge1xuICAgICAgICB4ID0gc2l6ZVswXSAvIDI7XG4gICAgICAgIHkgPSBzaXplWzFdIC8gMjtcbiAgICAgICAgaSA9IC0xO1xuICAgICAgICBpZiAoaykgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBvID0gbm9kZXNbaV07XG4gICAgICAgICAgby54ICs9ICh4IC0gby54KSAqIGs7XG4gICAgICAgICAgby55ICs9ICh5IC0gby55KSAqIGs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChjaGFyZ2UpIHtcbiAgICAgICAgZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZShxID0gZDMuZ2VvbS5xdWFkdHJlZShub2RlcyksIGFscGhhLCBjaGFyZ2VzKTtcbiAgICAgICAgaSA9IC0xO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIGlmICghKG8gPSBub2Rlc1tpXSkuZml4ZWQpIHtcbiAgICAgICAgICAgIHEudmlzaXQocmVwdWxzZShvKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBvID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChvLmZpeGVkKSB7XG4gICAgICAgICAgby54ID0gby5weDtcbiAgICAgICAgICBvLnkgPSBvLnB5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG8ueCAtPSAoby5weCAtIChvLnB4ID0gby54KSkgKiBmcmljdGlvbjtcbiAgICAgICAgICBvLnkgLT0gKG8ucHkgLSAoby5weSA9IG8ueSkpICogZnJpY3Rpb247XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGV2ZW50LnRpY2soe1xuICAgICAgICB0eXBlOiBcInRpY2tcIixcbiAgICAgICAgYWxwaGE6IGFscGhhXG4gICAgICB9KTtcbiAgICB9O1xuICAgIGZvcmNlLm5vZGVzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZXM7XG4gICAgICBub2RlcyA9IHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5saW5rcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxpbmtzO1xuICAgICAgbGlua3MgPSB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2Uuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0geDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmxpbmtEaXN0YW5jZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxpbmtEaXN0YW5jZTtcbiAgICAgIGxpbmtEaXN0YW5jZSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5kaXN0YW5jZSA9IGZvcmNlLmxpbmtEaXN0YW5jZTtcbiAgICBmb3JjZS5saW5rU3RyZW5ndGggPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsaW5rU3RyZW5ndGg7XG4gICAgICBsaW5rU3RyZW5ndGggPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6ICt4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuZnJpY3Rpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBmcmljdGlvbjtcbiAgICAgIGZyaWN0aW9uID0gK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5jaGFyZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjaGFyZ2U7XG4gICAgICBjaGFyZ2UgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6ICt4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuY2hhcmdlRGlzdGFuY2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBNYXRoLnNxcnQoY2hhcmdlRGlzdGFuY2UyKTtcbiAgICAgIGNoYXJnZURpc3RhbmNlMiA9IHggKiB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuZ3Jhdml0eSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXZpdHk7XG4gICAgICBncmF2aXR5ID0gK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS50aGV0YSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydCh0aGV0YTIpO1xuICAgICAgdGhldGEyID0geCAqIHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5hbHBoYSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGFscGhhO1xuICAgICAgeCA9ICt4O1xuICAgICAgaWYgKGFscGhhKSB7XG4gICAgICAgIGlmICh4ID4gMCkge1xuICAgICAgICAgIGFscGhhID0geDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aW1lci5jID0gbnVsbCwgdGltZXIudCA9IE5hTiwgdGltZXIgPSBudWxsO1xuICAgICAgICAgIGV2ZW50LmVuZCh7XG4gICAgICAgICAgICB0eXBlOiBcImVuZFwiLFxuICAgICAgICAgICAgYWxwaGE6IGFscGhhID0gMFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHggPiAwKSB7XG4gICAgICAgIGV2ZW50LnN0YXJ0KHtcbiAgICAgICAgICB0eXBlOiBcInN0YXJ0XCIsXG4gICAgICAgICAgYWxwaGE6IGFscGhhID0geFxuICAgICAgICB9KTtcbiAgICAgICAgdGltZXIgPSBkM190aW1lcihmb3JjZS50aWNrKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbSA9IGxpbmtzLmxlbmd0aCwgdyA9IHNpemVbMF0sIGggPSBzaXplWzFdLCBuZWlnaGJvcnMsIG87XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIChvID0gbm9kZXNbaV0pLmluZGV4ID0gaTtcbiAgICAgICAgby53ZWlnaHQgPSAwO1xuICAgICAgfVxuICAgICAgZm9yIChpID0gMDsgaSA8IG07ICsraSkge1xuICAgICAgICBvID0gbGlua3NbaV07XG4gICAgICAgIGlmICh0eXBlb2Ygby5zb3VyY2UgPT0gXCJudW1iZXJcIikgby5zb3VyY2UgPSBub2Rlc1tvLnNvdXJjZV07XG4gICAgICAgIGlmICh0eXBlb2Ygby50YXJnZXQgPT0gXCJudW1iZXJcIikgby50YXJnZXQgPSBub2Rlc1tvLnRhcmdldF07XG4gICAgICAgICsrby5zb3VyY2Uud2VpZ2h0O1xuICAgICAgICArK28udGFyZ2V0LndlaWdodDtcbiAgICAgIH1cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbyA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAoaXNOYU4oby54KSkgby54ID0gcG9zaXRpb24oXCJ4XCIsIHcpO1xuICAgICAgICBpZiAoaXNOYU4oby55KSkgby55ID0gcG9zaXRpb24oXCJ5XCIsIGgpO1xuICAgICAgICBpZiAoaXNOYU4oby5weCkpIG8ucHggPSBvLng7XG4gICAgICAgIGlmIChpc05hTihvLnB5KSkgby5weSA9IG8ueTtcbiAgICAgIH1cbiAgICAgIGRpc3RhbmNlcyA9IFtdO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rRGlzdGFuY2UgPT09IFwiZnVuY3Rpb25cIikgZm9yIChpID0gMDsgaSA8IG07ICsraSkgZGlzdGFuY2VzW2ldID0gK2xpbmtEaXN0YW5jZS5jYWxsKHRoaXMsIGxpbmtzW2ldLCBpKTsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBkaXN0YW5jZXNbaV0gPSBsaW5rRGlzdGFuY2U7XG4gICAgICBzdHJlbmd0aHMgPSBbXTtcbiAgICAgIGlmICh0eXBlb2YgbGlua1N0cmVuZ3RoID09PSBcImZ1bmN0aW9uXCIpIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHN0cmVuZ3Roc1tpXSA9ICtsaW5rU3RyZW5ndGguY2FsbCh0aGlzLCBsaW5rc1tpXSwgaSk7IGVsc2UgZm9yIChpID0gMDsgaSA8IG07ICsraSkgc3RyZW5ndGhzW2ldID0gbGlua1N0cmVuZ3RoO1xuICAgICAgY2hhcmdlcyA9IFtdO1xuICAgICAgaWYgKHR5cGVvZiBjaGFyZ2UgPT09IFwiZnVuY3Rpb25cIikgZm9yIChpID0gMDsgaSA8IG47ICsraSkgY2hhcmdlc1tpXSA9ICtjaGFyZ2UuY2FsbCh0aGlzLCBub2Rlc1tpXSwgaSk7IGVsc2UgZm9yIChpID0gMDsgaSA8IG47ICsraSkgY2hhcmdlc1tpXSA9IGNoYXJnZTtcbiAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uKGRpbWVuc2lvbiwgc2l6ZSkge1xuICAgICAgICBpZiAoIW5laWdoYm9ycykge1xuICAgICAgICAgIG5laWdoYm9ycyA9IG5ldyBBcnJheShuKTtcbiAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgbjsgKytqKSB7XG4gICAgICAgICAgICBuZWlnaGJvcnNbal0gPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICAgICAgdmFyIG8gPSBsaW5rc1tqXTtcbiAgICAgICAgICAgIG5laWdoYm9yc1tvLnNvdXJjZS5pbmRleF0ucHVzaChvLnRhcmdldCk7XG4gICAgICAgICAgICBuZWlnaGJvcnNbby50YXJnZXQuaW5kZXhdLnB1c2goby5zb3VyY2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgY2FuZGlkYXRlcyA9IG5laWdoYm9yc1tpXSwgaiA9IC0xLCBsID0gY2FuZGlkYXRlcy5sZW5ndGgsIHg7XG4gICAgICAgIHdoaWxlICgrK2ogPCBsKSBpZiAoIWlzTmFOKHggPSBjYW5kaWRhdGVzW2pdW2RpbWVuc2lvbl0pKSByZXR1cm4geDtcbiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiBzaXplO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZvcmNlLnJlc3VtZSgpO1xuICAgIH07XG4gICAgZm9yY2UucmVzdW1lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZm9yY2UuYWxwaGEoLjEpO1xuICAgIH07XG4gICAgZm9yY2Uuc3RvcCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGZvcmNlLmFscGhhKDApO1xuICAgIH07XG4gICAgZm9yY2UuZHJhZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFkcmFnKSBkcmFnID0gZDMuYmVoYXZpb3IuZHJhZygpLm9yaWdpbihkM19pZGVudGl0eSkub24oXCJkcmFnc3RhcnQuZm9yY2VcIiwgZDNfbGF5b3V0X2ZvcmNlRHJhZ3N0YXJ0KS5vbihcImRyYWcuZm9yY2VcIiwgZHJhZ21vdmUpLm9uKFwiZHJhZ2VuZC5mb3JjZVwiLCBkM19sYXlvdXRfZm9yY2VEcmFnZW5kKTtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRyYWc7XG4gICAgICB0aGlzLm9uKFwibW91c2VvdmVyLmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZU1vdXNlb3Zlcikub24oXCJtb3VzZW91dC5mb3JjZVwiLCBkM19sYXlvdXRfZm9yY2VNb3VzZW91dCkuY2FsbChkcmFnKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGRyYWdtb3ZlKGQpIHtcbiAgICAgIGQucHggPSBkMy5ldmVudC54LCBkLnB5ID0gZDMuZXZlbnQueTtcbiAgICAgIGZvcmNlLnJlc3VtZSgpO1xuICAgIH1cbiAgICByZXR1cm4gZDMucmViaW5kKGZvcmNlLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlRHJhZ3N0YXJ0KGQpIHtcbiAgICBkLmZpeGVkIHw9IDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlRHJhZ2VuZChkKSB7XG4gICAgZC5maXhlZCAmPSB+NjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VNb3VzZW92ZXIoZCkge1xuICAgIGQuZml4ZWQgfD0gNDtcbiAgICBkLnB4ID0gZC54LCBkLnB5ID0gZC55O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZU1vdXNlb3V0KGQpIHtcbiAgICBkLmZpeGVkICY9IH40O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZUFjY3VtdWxhdGUocXVhZCwgYWxwaGEsIGNoYXJnZXMpIHtcbiAgICB2YXIgY3ggPSAwLCBjeSA9IDA7XG4gICAgcXVhZC5jaGFyZ2UgPSAwO1xuICAgIGlmICghcXVhZC5sZWFmKSB7XG4gICAgICB2YXIgbm9kZXMgPSBxdWFkLm5vZGVzLCBuID0gbm9kZXMubGVuZ3RoLCBpID0gLTEsIGM7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBjID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChjID09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgICBkM19sYXlvdXRfZm9yY2VBY2N1bXVsYXRlKGMsIGFscGhhLCBjaGFyZ2VzKTtcbiAgICAgICAgcXVhZC5jaGFyZ2UgKz0gYy5jaGFyZ2U7XG4gICAgICAgIGN4ICs9IGMuY2hhcmdlICogYy5jeDtcbiAgICAgICAgY3kgKz0gYy5jaGFyZ2UgKiBjLmN5O1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocXVhZC5wb2ludCkge1xuICAgICAgaWYgKCFxdWFkLmxlYWYpIHtcbiAgICAgICAgcXVhZC5wb2ludC54ICs9IE1hdGgucmFuZG9tKCkgLSAuNTtcbiAgICAgICAgcXVhZC5wb2ludC55ICs9IE1hdGgucmFuZG9tKCkgLSAuNTtcbiAgICAgIH1cbiAgICAgIHZhciBrID0gYWxwaGEgKiBjaGFyZ2VzW3F1YWQucG9pbnQuaW5kZXhdO1xuICAgICAgcXVhZC5jaGFyZ2UgKz0gcXVhZC5wb2ludENoYXJnZSA9IGs7XG4gICAgICBjeCArPSBrICogcXVhZC5wb2ludC54O1xuICAgICAgY3kgKz0gayAqIHF1YWQucG9pbnQueTtcbiAgICB9XG4gICAgcXVhZC5jeCA9IGN4IC8gcXVhZC5jaGFyZ2U7XG4gICAgcXVhZC5jeSA9IGN5IC8gcXVhZC5jaGFyZ2U7XG4gIH1cbiAgdmFyIGQzX2xheW91dF9mb3JjZUxpbmtEaXN0YW5jZSA9IDIwLCBkM19sYXlvdXRfZm9yY2VMaW5rU3RyZW5ndGggPSAxLCBkM19sYXlvdXRfZm9yY2VDaGFyZ2VEaXN0YW5jZTIgPSBJbmZpbml0eTtcbiAgZDMubGF5b3V0LmhpZXJhcmNoeSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3J0ID0gZDNfbGF5b3V0X2hpZXJhcmNoeVNvcnQsIGNoaWxkcmVuID0gZDNfbGF5b3V0X2hpZXJhcmNoeUNoaWxkcmVuLCB2YWx1ZSA9IGQzX2xheW91dF9oaWVyYXJjaHlWYWx1ZTtcbiAgICBmdW5jdGlvbiBoaWVyYXJjaHkocm9vdCkge1xuICAgICAgdmFyIHN0YWNrID0gWyByb290IF0sIG5vZGVzID0gW10sIG5vZGU7XG4gICAgICByb290LmRlcHRoID0gMDtcbiAgICAgIHdoaWxlICgobm9kZSA9IHN0YWNrLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gICAgICAgIGlmICgoY2hpbGRzID0gY2hpbGRyZW4uY2FsbChoaWVyYXJjaHksIG5vZGUsIG5vZGUuZGVwdGgpKSAmJiAobiA9IGNoaWxkcy5sZW5ndGgpKSB7XG4gICAgICAgICAgdmFyIG4sIGNoaWxkcywgY2hpbGQ7XG4gICAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICAgICAgICBzdGFjay5wdXNoKGNoaWxkID0gY2hpbGRzW25dKTtcbiAgICAgICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICAgICAgICBjaGlsZC5kZXB0aCA9IG5vZGUuZGVwdGggKyAxO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodmFsdWUpIG5vZGUudmFsdWUgPSAwO1xuICAgICAgICAgIG5vZGUuY2hpbGRyZW4gPSBjaGlsZHM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHZhbHVlKSBub2RlLnZhbHVlID0gK3ZhbHVlLmNhbGwoaGllcmFyY2h5LCBub2RlLCBub2RlLmRlcHRoKSB8fCAwO1xuICAgICAgICAgIGRlbGV0ZSBub2RlLmNoaWxkcmVuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHZhciBjaGlsZHMsIHBhcmVudDtcbiAgICAgICAgaWYgKHNvcnQgJiYgKGNoaWxkcyA9IG5vZGUuY2hpbGRyZW4pKSBjaGlsZHMuc29ydChzb3J0KTtcbiAgICAgICAgaWYgKHZhbHVlICYmIChwYXJlbnQgPSBub2RlLnBhcmVudCkpIHBhcmVudC52YWx1ZSArPSBub2RlLnZhbHVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGhpZXJhcmNoeS5zb3J0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydDtcbiAgICAgIHNvcnQgPSB4O1xuICAgICAgcmV0dXJuIGhpZXJhcmNoeTtcbiAgICB9O1xuICAgIGhpZXJhcmNoeS5jaGlsZHJlbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNoaWxkcmVuO1xuICAgICAgY2hpbGRyZW4gPSB4O1xuICAgICAgcmV0dXJuIGhpZXJhcmNoeTtcbiAgICB9O1xuICAgIGhpZXJhcmNoeS52YWx1ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlO1xuICAgICAgdmFsdWUgPSB4O1xuICAgICAgcmV0dXJuIGhpZXJhcmNoeTtcbiAgICB9O1xuICAgIGhpZXJhcmNoeS5yZXZhbHVlID0gZnVuY3Rpb24ocm9vdCkge1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShyb290LCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW4pIG5vZGUudmFsdWUgPSAwO1xuICAgICAgICB9KTtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgIHZhciBwYXJlbnQ7XG4gICAgICAgICAgaWYgKCFub2RlLmNoaWxkcmVuKSBub2RlLnZhbHVlID0gK3ZhbHVlLmNhbGwoaGllcmFyY2h5LCBub2RlLCBub2RlLmRlcHRoKSB8fCAwO1xuICAgICAgICAgIGlmIChwYXJlbnQgPSBub2RlLnBhcmVudCkgcGFyZW50LnZhbHVlICs9IG5vZGUudmFsdWU7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvb3Q7XG4gICAgfTtcbiAgICByZXR1cm4gaGllcmFyY2h5O1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKG9iamVjdCwgaGllcmFyY2h5KSB7XG4gICAgZDMucmViaW5kKG9iamVjdCwgaGllcmFyY2h5LCBcInNvcnRcIiwgXCJjaGlsZHJlblwiLCBcInZhbHVlXCIpO1xuICAgIG9iamVjdC5ub2RlcyA9IG9iamVjdDtcbiAgICBvYmplY3QubGlua3MgPSBkM19sYXlvdXRfaGllcmFyY2h5TGlua3M7XG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUobm9kZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgbm9kZXMgPSBbIG5vZGUgXTtcbiAgICB3aGlsZSAoKG5vZGUgPSBub2Rlcy5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgY2FsbGJhY2sobm9kZSk7XG4gICAgICBpZiAoKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBuLCBjaGlsZHJlbjtcbiAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSBub2Rlcy5wdXNoKGNoaWxkcmVuW25dKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIobm9kZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgbm9kZXMgPSBbIG5vZGUgXSwgbm9kZXMyID0gW107XG4gICAgd2hpbGUgKChub2RlID0gbm9kZXMucG9wKCkpICE9IG51bGwpIHtcbiAgICAgIG5vZGVzMi5wdXNoKG5vZGUpO1xuICAgICAgaWYgKChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pICYmIChuID0gY2hpbGRyZW4ubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuLCBjaGlsZHJlbjtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pO1xuICAgICAgfVxuICAgIH1cbiAgICB3aGlsZSAoKG5vZGUgPSBub2RlczIucG9wKCkpICE9IG51bGwpIHtcbiAgICAgIGNhbGxiYWNrKG5vZGUpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5Q2hpbGRyZW4oZCkge1xuICAgIHJldHVybiBkLmNoaWxkcmVuO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlWYWx1ZShkKSB7XG4gICAgcmV0dXJuIGQudmFsdWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVNvcnQoYSwgYikge1xuICAgIHJldHVybiBiLnZhbHVlIC0gYS52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5TGlua3Mobm9kZXMpIHtcbiAgICByZXR1cm4gZDMubWVyZ2Uobm9kZXMubWFwKGZ1bmN0aW9uKHBhcmVudCkge1xuICAgICAgcmV0dXJuIChwYXJlbnQuY2hpbGRyZW4gfHwgW10pLm1hcChmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHNvdXJjZTogcGFyZW50LFxuICAgICAgICAgIHRhcmdldDogY2hpbGRcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0pKTtcbiAgfVxuICBkMy5sYXlvdXQucGFydGl0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKSwgc2l6ZSA9IFsgMSwgMSBdO1xuICAgIGZ1bmN0aW9uIHBvc2l0aW9uKG5vZGUsIHgsIGR4LCBkeSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIG5vZGUueCA9IHg7XG4gICAgICBub2RlLnkgPSBub2RlLmRlcHRoICogZHk7XG4gICAgICBub2RlLmR4ID0gZHg7XG4gICAgICBub2RlLmR5ID0gZHk7XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG4sIGMsIGQ7XG4gICAgICAgIGR4ID0gbm9kZS52YWx1ZSA/IGR4IC8gbm9kZS52YWx1ZSA6IDA7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgcG9zaXRpb24oYyA9IGNoaWxkcmVuW2ldLCB4LCBkID0gYy52YWx1ZSAqIGR4LCBkeSk7XG4gICAgICAgICAgeCArPSBkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRlcHRoKG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4sIGQgPSAwO1xuICAgICAgaWYgKGNoaWxkcmVuICYmIChuID0gY2hpbGRyZW4ubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgZCA9IE1hdGgubWF4KGQsIGRlcHRoKGNoaWxkcmVuW2ldKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gMSArIGQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBhcnRpdGlvbihkLCBpKSB7XG4gICAgICB2YXIgbm9kZXMgPSBoaWVyYXJjaHkuY2FsbCh0aGlzLCBkLCBpKTtcbiAgICAgIHBvc2l0aW9uKG5vZGVzWzBdLCAwLCBzaXplWzBdLCBzaXplWzFdIC8gZGVwdGgobm9kZXNbMF0pKTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgcGFydGl0aW9uLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IHg7XG4gICAgICByZXR1cm4gcGFydGl0aW9uO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQocGFydGl0aW9uLCBoaWVyYXJjaHkpO1xuICB9O1xuICBkMy5sYXlvdXQucGllID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlID0gTnVtYmVyLCBzb3J0ID0gZDNfbGF5b3V0X3BpZVNvcnRCeVZhbHVlLCBzdGFydEFuZ2xlID0gMCwgZW5kQW5nbGUgPSDPhCwgcGFkQW5nbGUgPSAwO1xuICAgIGZ1bmN0aW9uIHBpZShkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCB2YWx1ZXMgPSBkYXRhLm1hcChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgIHJldHVybiArdmFsdWUuY2FsbChwaWUsIGQsIGkpO1xuICAgICAgfSksIGEgPSArKHR5cGVvZiBzdGFydEFuZ2xlID09PSBcImZ1bmN0aW9uXCIgPyBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBzdGFydEFuZ2xlKSwgZGEgPSAodHlwZW9mIGVuZEFuZ2xlID09PSBcImZ1bmN0aW9uXCIgPyBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogZW5kQW5nbGUpIC0gYSwgcCA9IE1hdGgubWluKE1hdGguYWJzKGRhKSAvIG4sICsodHlwZW9mIHBhZEFuZ2xlID09PSBcImZ1bmN0aW9uXCIgPyBwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogcGFkQW5nbGUpKSwgcGEgPSBwICogKGRhIDwgMCA/IC0xIDogMSksIHN1bSA9IGQzLnN1bSh2YWx1ZXMpLCBrID0gc3VtID8gKGRhIC0gbiAqIHBhKSAvIHN1bSA6IDAsIGluZGV4ID0gZDMucmFuZ2UobiksIGFyY3MgPSBbXSwgdjtcbiAgICAgIGlmIChzb3J0ICE9IG51bGwpIGluZGV4LnNvcnQoc29ydCA9PT0gZDNfbGF5b3V0X3BpZVNvcnRCeVZhbHVlID8gZnVuY3Rpb24oaSwgaikge1xuICAgICAgICByZXR1cm4gdmFsdWVzW2pdIC0gdmFsdWVzW2ldO1xuICAgICAgfSA6IGZ1bmN0aW9uKGksIGopIHtcbiAgICAgICAgcmV0dXJuIHNvcnQoZGF0YVtpXSwgZGF0YVtqXSk7XG4gICAgICB9KTtcbiAgICAgIGluZGV4LmZvckVhY2goZnVuY3Rpb24oaSkge1xuICAgICAgICBhcmNzW2ldID0ge1xuICAgICAgICAgIGRhdGE6IGRhdGFbaV0sXG4gICAgICAgICAgdmFsdWU6IHYgPSB2YWx1ZXNbaV0sXG4gICAgICAgICAgc3RhcnRBbmdsZTogYSxcbiAgICAgICAgICBlbmRBbmdsZTogYSArPSB2ICogayArIHBhLFxuICAgICAgICAgIHBhZEFuZ2xlOiBwXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBhcmNzO1xuICAgIH1cbiAgICBwaWUudmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2YWx1ZTtcbiAgICAgIHZhbHVlID0gXztcbiAgICAgIHJldHVybiBwaWU7XG4gICAgfTtcbiAgICBwaWUuc29ydCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnQ7XG4gICAgICBzb3J0ID0gXztcbiAgICAgIHJldHVybiBwaWU7XG4gICAgfTtcbiAgICBwaWUuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0YXJ0QW5nbGU7XG4gICAgICBzdGFydEFuZ2xlID0gXztcbiAgICAgIHJldHVybiBwaWU7XG4gICAgfTtcbiAgICBwaWUuZW5kQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBlbmRBbmdsZTtcbiAgICAgIGVuZEFuZ2xlID0gXztcbiAgICAgIHJldHVybiBwaWU7XG4gICAgfTtcbiAgICBwaWUucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRBbmdsZTtcbiAgICAgIHBhZEFuZ2xlID0gXztcbiAgICAgIHJldHVybiBwaWU7XG4gICAgfTtcbiAgICByZXR1cm4gcGllO1xuICB9O1xuICB2YXIgZDNfbGF5b3V0X3BpZVNvcnRCeVZhbHVlID0ge307XG4gIGQzLmxheW91dC5zdGFjayA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZXMgPSBkM19pZGVudGl0eSwgb3JkZXIgPSBkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHQsIG9mZnNldCA9IGQzX2xheW91dF9zdGFja09mZnNldFplcm8sIG91dCA9IGQzX2xheW91dF9zdGFja091dCwgeCA9IGQzX2xheW91dF9zdGFja1gsIHkgPSBkM19sYXlvdXRfc3RhY2tZO1xuICAgIGZ1bmN0aW9uIHN0YWNrKGRhdGEsIGluZGV4KSB7XG4gICAgICBpZiAoIShuID0gZGF0YS5sZW5ndGgpKSByZXR1cm4gZGF0YTtcbiAgICAgIHZhciBzZXJpZXMgPSBkYXRhLm1hcChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXMuY2FsbChzdGFjaywgZCwgaSk7XG4gICAgICB9KTtcbiAgICAgIHZhciBwb2ludHMgPSBzZXJpZXMubWFwKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQubWFwKGZ1bmN0aW9uKHYsIGkpIHtcbiAgICAgICAgICByZXR1cm4gWyB4LmNhbGwoc3RhY2ssIHYsIGkpLCB5LmNhbGwoc3RhY2ssIHYsIGkpIF07XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICB2YXIgb3JkZXJzID0gb3JkZXIuY2FsbChzdGFjaywgcG9pbnRzLCBpbmRleCk7XG4gICAgICBzZXJpZXMgPSBkMy5wZXJtdXRlKHNlcmllcywgb3JkZXJzKTtcbiAgICAgIHBvaW50cyA9IGQzLnBlcm11dGUocG9pbnRzLCBvcmRlcnMpO1xuICAgICAgdmFyIG9mZnNldHMgPSBvZmZzZXQuY2FsbChzdGFjaywgcG9pbnRzLCBpbmRleCk7XG4gICAgICB2YXIgbSA9IHNlcmllc1swXS5sZW5ndGgsIG4sIGksIGosIG87XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIG91dC5jYWxsKHN0YWNrLCBzZXJpZXNbMF1bal0sIG8gPSBvZmZzZXRzW2pdLCBwb2ludHNbMF1bal1bMV0pO1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgb3V0LmNhbGwoc3RhY2ssIHNlcmllc1tpXVtqXSwgbyArPSBwb2ludHNbaSAtIDFdW2pdWzFdLCBwb2ludHNbaV1bal1bMV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgc3RhY2sudmFsdWVzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmFsdWVzO1xuICAgICAgdmFsdWVzID0geDtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLm9yZGVyID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JkZXI7XG4gICAgICBvcmRlciA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogZDNfbGF5b3V0X3N0YWNrT3JkZXJzLmdldCh4KSB8fCBkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHQ7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay5vZmZzZXQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvZmZzZXQ7XG4gICAgICBvZmZzZXQgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGQzX2xheW91dF9zdGFja09mZnNldHMuZ2V0KHgpIHx8IGQzX2xheW91dF9zdGFja09mZnNldFplcm87XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay54ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDtcbiAgICAgIHggPSB6O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sueSA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHk7XG4gICAgICB5ID0gejtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLm91dCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG91dDtcbiAgICAgIG91dCA9IHo7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gc3RhY2s7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1goZCkge1xuICAgIHJldHVybiBkLng7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrWShkKSB7XG4gICAgcmV0dXJuIGQueTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tPdXQoZCwgeTAsIHkpIHtcbiAgICBkLnkwID0geTA7XG4gICAgZC55ID0geTtcbiAgfVxuICB2YXIgZDNfbGF5b3V0X3N0YWNrT3JkZXJzID0gZDMubWFwKHtcbiAgICBcImluc2lkZS1vdXRcIjogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIG4gPSBkYXRhLmxlbmd0aCwgaSwgaiwgbWF4ID0gZGF0YS5tYXAoZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgpLCBzdW1zID0gZGF0YS5tYXAoZDNfbGF5b3V0X3N0YWNrUmVkdWNlU3VtKSwgaW5kZXggPSBkMy5yYW5nZShuKS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIG1heFthXSAtIG1heFtiXTtcbiAgICAgIH0pLCB0b3AgPSAwLCBib3R0b20gPSAwLCB0b3BzID0gW10sIGJvdHRvbXMgPSBbXTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgaiA9IGluZGV4W2ldO1xuICAgICAgICBpZiAodG9wIDwgYm90dG9tKSB7XG4gICAgICAgICAgdG9wICs9IHN1bXNbal07XG4gICAgICAgICAgdG9wcy5wdXNoKGopO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJvdHRvbSArPSBzdW1zW2pdO1xuICAgICAgICAgIGJvdHRvbXMucHVzaChqKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGJvdHRvbXMucmV2ZXJzZSgpLmNvbmNhdCh0b3BzKTtcbiAgICB9LFxuICAgIHJldmVyc2U6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHJldHVybiBkMy5yYW5nZShkYXRhLmxlbmd0aCkucmV2ZXJzZSgpO1xuICAgIH0sXG4gICAgXCJkZWZhdWx0XCI6IGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdFxuICB9KTtcbiAgdmFyIGQzX2xheW91dF9zdGFja09mZnNldHMgPSBkMy5tYXAoe1xuICAgIHNpbGhvdWV0dGU6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIG0gPSBkYXRhWzBdLmxlbmd0aCwgc3VtcyA9IFtdLCBtYXggPSAwLCBpLCBqLCBvLCB5MCA9IFtdO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICBmb3IgKGkgPSAwLCBvID0gMDsgaSA8IG47IGkrKykgbyArPSBkYXRhW2ldW2pdWzFdO1xuICAgICAgICBpZiAobyA+IG1heCkgbWF4ID0gbztcbiAgICAgICAgc3Vtcy5wdXNoKG8pO1xuICAgICAgfVxuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICB5MFtqXSA9IChtYXggLSBzdW1zW2pdKSAvIDI7XG4gICAgICB9XG4gICAgICByZXR1cm4geTA7XG4gICAgfSxcbiAgICB3aWdnbGU6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIHggPSBkYXRhWzBdLCBtID0geC5sZW5ndGgsIGksIGosIGssIHMxLCBzMiwgczMsIGR4LCBvLCBvMCwgeTAgPSBbXTtcbiAgICAgIHkwWzBdID0gbyA9IG8wID0gMDtcbiAgICAgIGZvciAoaiA9IDE7IGogPCBtOyArK2opIHtcbiAgICAgICAgZm9yIChpID0gMCwgczEgPSAwOyBpIDwgbjsgKytpKSBzMSArPSBkYXRhW2ldW2pdWzFdO1xuICAgICAgICBmb3IgKGkgPSAwLCBzMiA9IDAsIGR4ID0geFtqXVswXSAtIHhbaiAtIDFdWzBdOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgZm9yIChrID0gMCwgczMgPSAoZGF0YVtpXVtqXVsxXSAtIGRhdGFbaV1baiAtIDFdWzFdKSAvICgyICogZHgpOyBrIDwgaTsgKytrKSB7XG4gICAgICAgICAgICBzMyArPSAoZGF0YVtrXVtqXVsxXSAtIGRhdGFba11baiAtIDFdWzFdKSAvIGR4O1xuICAgICAgICAgIH1cbiAgICAgICAgICBzMiArPSBzMyAqIGRhdGFbaV1bal1bMV07XG4gICAgICAgIH1cbiAgICAgICAgeTBbal0gPSBvIC09IHMxID8gczIgLyBzMSAqIGR4IDogMDtcbiAgICAgICAgaWYgKG8gPCBvMCkgbzAgPSBvO1xuICAgICAgfVxuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgeTBbal0gLT0gbzA7XG4gICAgICByZXR1cm4geTA7XG4gICAgfSxcbiAgICBleHBhbmQ6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIG0gPSBkYXRhWzBdLmxlbmd0aCwgayA9IDEgLyBuLCBpLCBqLCBvLCB5MCA9IFtdO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICBmb3IgKGkgPSAwLCBvID0gMDsgaSA8IG47IGkrKykgbyArPSBkYXRhW2ldW2pdWzFdO1xuICAgICAgICBpZiAobykgZm9yIChpID0gMDsgaSA8IG47IGkrKykgZGF0YVtpXVtqXVsxXSAvPSBvOyBlbHNlIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIGRhdGFbaV1bal1bMV0gPSBrO1xuICAgICAgfVxuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgeTBbal0gPSAwO1xuICAgICAgcmV0dXJuIHkwO1xuICAgIH0sXG4gICAgemVybzogZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVyb1xuICB9KTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0KGRhdGEpIHtcbiAgICByZXR1cm4gZDMucmFuZ2UoZGF0YS5sZW5ndGgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja09mZnNldFplcm8oZGF0YSkge1xuICAgIHZhciBqID0gLTEsIG0gPSBkYXRhWzBdLmxlbmd0aCwgeTAgPSBbXTtcbiAgICB3aGlsZSAoKytqIDwgbSkgeTBbal0gPSAwO1xuICAgIHJldHVybiB5MDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tNYXhJbmRleChhcnJheSkge1xuICAgIHZhciBpID0gMSwgaiA9IDAsIHYgPSBhcnJheVswXVsxXSwgaywgbiA9IGFycmF5Lmxlbmd0aDtcbiAgICBmb3IgKDtpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKGsgPSBhcnJheVtpXVsxXSkgPiB2KSB7XG4gICAgICAgIGogPSBpO1xuICAgICAgICB2ID0gaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGo7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrUmVkdWNlU3VtKGQpIHtcbiAgICByZXR1cm4gZC5yZWR1Y2UoZDNfbGF5b3V0X3N0YWNrU3VtLCAwKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tTdW0ocCwgZCkge1xuICAgIHJldHVybiBwICsgZFsxXTtcbiAgfVxuICBkMy5sYXlvdXQuaGlzdG9ncmFtID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGZyZXF1ZW5jeSA9IHRydWUsIHZhbHVlciA9IE51bWJlciwgcmFuZ2VyID0gZDNfbGF5b3V0X2hpc3RvZ3JhbVJhbmdlLCBiaW5uZXIgPSBkM19sYXlvdXRfaGlzdG9ncmFtQmluU3R1cmdlcztcbiAgICBmdW5jdGlvbiBoaXN0b2dyYW0oZGF0YSwgaSkge1xuICAgICAgdmFyIGJpbnMgPSBbXSwgdmFsdWVzID0gZGF0YS5tYXAodmFsdWVyLCB0aGlzKSwgcmFuZ2UgPSByYW5nZXIuY2FsbCh0aGlzLCB2YWx1ZXMsIGkpLCB0aHJlc2hvbGRzID0gYmlubmVyLmNhbGwodGhpcywgcmFuZ2UsIHZhbHVlcywgaSksIGJpbiwgaSA9IC0xLCBuID0gdmFsdWVzLmxlbmd0aCwgbSA9IHRocmVzaG9sZHMubGVuZ3RoIC0gMSwgayA9IGZyZXF1ZW5jeSA/IDEgOiAxIC8gbiwgeDtcbiAgICAgIHdoaWxlICgrK2kgPCBtKSB7XG4gICAgICAgIGJpbiA9IGJpbnNbaV0gPSBbXTtcbiAgICAgICAgYmluLmR4ID0gdGhyZXNob2xkc1tpICsgMV0gLSAoYmluLnggPSB0aHJlc2hvbGRzW2ldKTtcbiAgICAgICAgYmluLnkgPSAwO1xuICAgICAgfVxuICAgICAgaWYgKG0gPiAwKSB7XG4gICAgICAgIGkgPSAtMTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICB4ID0gdmFsdWVzW2ldO1xuICAgICAgICAgIGlmICh4ID49IHJhbmdlWzBdICYmIHggPD0gcmFuZ2VbMV0pIHtcbiAgICAgICAgICAgIGJpbiA9IGJpbnNbZDMuYmlzZWN0KHRocmVzaG9sZHMsIHgsIDEsIG0pIC0gMV07XG4gICAgICAgICAgICBiaW4ueSArPSBrO1xuICAgICAgICAgICAgYmluLnB1c2goZGF0YVtpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gYmlucztcbiAgICB9XG4gICAgaGlzdG9ncmFtLnZhbHVlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmFsdWVyO1xuICAgICAgdmFsdWVyID0geDtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICBoaXN0b2dyYW0ucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZXI7XG4gICAgICByYW5nZXIgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgICB9O1xuICAgIGhpc3RvZ3JhbS5iaW5zID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYmlubmVyO1xuICAgICAgYmlubmVyID0gdHlwZW9mIHggPT09IFwibnVtYmVyXCIgPyBmdW5jdGlvbihyYW5nZSkge1xuICAgICAgICByZXR1cm4gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkKHJhbmdlLCB4KTtcbiAgICAgIH0gOiBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgICB9O1xuICAgIGhpc3RvZ3JhbS5mcmVxdWVuY3kgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBmcmVxdWVuY3k7XG4gICAgICBmcmVxdWVuY3kgPSAhIXg7XG4gICAgICByZXR1cm4gaGlzdG9ncmFtO1xuICAgIH07XG4gICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpblN0dXJnZXMocmFuZ2UsIHZhbHVlcykge1xuICAgIHJldHVybiBkM19sYXlvdXRfaGlzdG9ncmFtQmluRml4ZWQocmFuZ2UsIE1hdGguY2VpbChNYXRoLmxvZyh2YWx1ZXMubGVuZ3RoKSAvIE1hdGguTE4yICsgMSkpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaXN0b2dyYW1CaW5GaXhlZChyYW5nZSwgbikge1xuICAgIHZhciB4ID0gLTEsIGIgPSArcmFuZ2VbMF0sIG0gPSAocmFuZ2VbMV0gLSBiKSAvIG4sIGYgPSBbXTtcbiAgICB3aGlsZSAoKyt4IDw9IG4pIGZbeF0gPSBtICogeCArIGI7XG4gICAgcmV0dXJuIGY7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpc3RvZ3JhbVJhbmdlKHZhbHVlcykge1xuICAgIHJldHVybiBbIGQzLm1pbih2YWx1ZXMpLCBkMy5tYXgodmFsdWVzKSBdO1xuICB9XG4gIGQzLmxheW91dC5wYWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKS5zb3J0KGQzX2xheW91dF9wYWNrU29ydCksIHBhZGRpbmcgPSAwLCBzaXplID0gWyAxLCAxIF0sIHJhZGl1cztcbiAgICBmdW5jdGlvbiBwYWNrKGQsIGkpIHtcbiAgICAgIHZhciBub2RlcyA9IGhpZXJhcmNoeS5jYWxsKHRoaXMsIGQsIGkpLCByb290ID0gbm9kZXNbMF0sIHcgPSBzaXplWzBdLCBoID0gc2l6ZVsxXSwgciA9IHJhZGl1cyA9PSBudWxsID8gTWF0aC5zcXJ0IDogdHlwZW9mIHJhZGl1cyA9PT0gXCJmdW5jdGlvblwiID8gcmFkaXVzIDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByYWRpdXM7XG4gICAgICB9O1xuICAgICAgcm9vdC54ID0gcm9vdC55ID0gMDtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgZC5yID0gK3IoZC52YWx1ZSk7XG4gICAgICB9KTtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGQzX2xheW91dF9wYWNrU2libGluZ3MpO1xuICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgdmFyIGRyID0gcGFkZGluZyAqIChyYWRpdXMgPyAxIDogTWF0aC5tYXgoMiAqIHJvb3QuciAvIHcsIDIgKiByb290LnIgLyBoKSkgLyAyO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgZC5yICs9IGRyO1xuICAgICAgICB9KTtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZDNfbGF5b3V0X3BhY2tTaWJsaW5ncyk7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBkLnIgLT0gZHI7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZDNfbGF5b3V0X3BhY2tUcmFuc2Zvcm0ocm9vdCwgdyAvIDIsIGggLyAyLCByYWRpdXMgPyAxIDogMSAvIE1hdGgubWF4KDIgKiByb290LnIgLyB3LCAyICogcm9vdC5yIC8gaCkpO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBwYWNrLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IF87XG4gICAgICByZXR1cm4gcGFjaztcbiAgICB9O1xuICAgIHBhY2sucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFkaXVzO1xuICAgICAgcmFkaXVzID0gXyA9PSBudWxsIHx8IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogK187XG4gICAgICByZXR1cm4gcGFjaztcbiAgICB9O1xuICAgIHBhY2sucGFkZGluZyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZGRpbmc7XG4gICAgICBwYWRkaW5nID0gK187XG4gICAgICByZXR1cm4gcGFjaztcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKHBhY2ssIGhpZXJhcmNoeSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrU29ydChhLCBiKSB7XG4gICAgcmV0dXJuIGEudmFsdWUgLSBiLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrSW5zZXJ0KGEsIGIpIHtcbiAgICB2YXIgYyA9IGEuX3BhY2tfbmV4dDtcbiAgICBhLl9wYWNrX25leHQgPSBiO1xuICAgIGIuX3BhY2tfcHJldiA9IGE7XG4gICAgYi5fcGFja19uZXh0ID0gYztcbiAgICBjLl9wYWNrX3ByZXYgPSBiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrU3BsaWNlKGEsIGIpIHtcbiAgICBhLl9wYWNrX25leHQgPSBiO1xuICAgIGIuX3BhY2tfcHJldiA9IGE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzKGEsIGIpIHtcbiAgICB2YXIgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55LCBkciA9IGEuciArIGIucjtcbiAgICByZXR1cm4gLjk5OSAqIGRyICogZHIgPiBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1NpYmxpbmdzKG5vZGUpIHtcbiAgICBpZiAoIShub2RlcyA9IG5vZGUuY2hpbGRyZW4pIHx8ICEobiA9IG5vZGVzLmxlbmd0aCkpIHJldHVybjtcbiAgICB2YXIgbm9kZXMsIHhNaW4gPSBJbmZpbml0eSwgeE1heCA9IC1JbmZpbml0eSwgeU1pbiA9IEluZmluaXR5LCB5TWF4ID0gLUluZmluaXR5LCBhLCBiLCBjLCBpLCBqLCBrLCBuO1xuICAgIGZ1bmN0aW9uIGJvdW5kKG5vZGUpIHtcbiAgICAgIHhNaW4gPSBNYXRoLm1pbihub2RlLnggLSBub2RlLnIsIHhNaW4pO1xuICAgICAgeE1heCA9IE1hdGgubWF4KG5vZGUueCArIG5vZGUuciwgeE1heCk7XG4gICAgICB5TWluID0gTWF0aC5taW4obm9kZS55IC0gbm9kZS5yLCB5TWluKTtcbiAgICAgIHlNYXggPSBNYXRoLm1heChub2RlLnkgKyBub2RlLnIsIHlNYXgpO1xuICAgIH1cbiAgICBub2Rlcy5mb3JFYWNoKGQzX2xheW91dF9wYWNrTGluayk7XG4gICAgYSA9IG5vZGVzWzBdO1xuICAgIGEueCA9IC1hLnI7XG4gICAgYS55ID0gMDtcbiAgICBib3VuZChhKTtcbiAgICBpZiAobiA+IDEpIHtcbiAgICAgIGIgPSBub2Rlc1sxXTtcbiAgICAgIGIueCA9IGIucjtcbiAgICAgIGIueSA9IDA7XG4gICAgICBib3VuZChiKTtcbiAgICAgIGlmIChuID4gMikge1xuICAgICAgICBjID0gbm9kZXNbMl07XG4gICAgICAgIGQzX2xheW91dF9wYWNrUGxhY2UoYSwgYiwgYyk7XG4gICAgICAgIGJvdW5kKGMpO1xuICAgICAgICBkM19sYXlvdXRfcGFja0luc2VydChhLCBjKTtcbiAgICAgICAgYS5fcGFja19wcmV2ID0gYztcbiAgICAgICAgZDNfbGF5b3V0X3BhY2tJbnNlcnQoYywgYik7XG4gICAgICAgIGIgPSBhLl9wYWNrX25leHQ7XG4gICAgICAgIGZvciAoaSA9IDM7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICBkM19sYXlvdXRfcGFja1BsYWNlKGEsIGIsIGMgPSBub2Rlc1tpXSk7XG4gICAgICAgICAgdmFyIGlzZWN0ID0gMCwgczEgPSAxLCBzMiA9IDE7XG4gICAgICAgICAgZm9yIChqID0gYi5fcGFja19uZXh0OyBqICE9PSBiOyBqID0gai5fcGFja19uZXh0LCBzMSsrKSB7XG4gICAgICAgICAgICBpZiAoZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzKGosIGMpKSB7XG4gICAgICAgICAgICAgIGlzZWN0ID0gMTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpc2VjdCA9PSAxKSB7XG4gICAgICAgICAgICBmb3IgKGsgPSBhLl9wYWNrX3ByZXY7IGsgIT09IGouX3BhY2tfcHJldjsgayA9IGsuX3BhY2tfcHJldiwgczIrKykge1xuICAgICAgICAgICAgICBpZiAoZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzKGssIGMpKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGlzZWN0KSB7XG4gICAgICAgICAgICBpZiAoczEgPCBzMiB8fCBzMSA9PSBzMiAmJiBiLnIgPCBhLnIpIGQzX2xheW91dF9wYWNrU3BsaWNlKGEsIGIgPSBqKTsgZWxzZSBkM19sYXlvdXRfcGFja1NwbGljZShhID0gaywgYik7XG4gICAgICAgICAgICBpLS07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGQzX2xheW91dF9wYWNrSW5zZXJ0KGEsIGMpO1xuICAgICAgICAgICAgYiA9IGM7XG4gICAgICAgICAgICBib3VuZChjKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIGN4ID0gKHhNaW4gKyB4TWF4KSAvIDIsIGN5ID0gKHlNaW4gKyB5TWF4KSAvIDIsIGNyID0gMDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICBjID0gbm9kZXNbaV07XG4gICAgICBjLnggLT0gY3g7XG4gICAgICBjLnkgLT0gY3k7XG4gICAgICBjciA9IE1hdGgubWF4KGNyLCBjLnIgKyBNYXRoLnNxcnQoYy54ICogYy54ICsgYy55ICogYy55KSk7XG4gICAgfVxuICAgIG5vZGUuciA9IGNyO1xuICAgIG5vZGVzLmZvckVhY2goZDNfbGF5b3V0X3BhY2tVbmxpbmspO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrTGluayhub2RlKSB7XG4gICAgbm9kZS5fcGFja19uZXh0ID0gbm9kZS5fcGFja19wcmV2ID0gbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1VubGluayhub2RlKSB7XG4gICAgZGVsZXRlIG5vZGUuX3BhY2tfbmV4dDtcbiAgICBkZWxldGUgbm9kZS5fcGFja19wcmV2O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrVHJhbnNmb3JtKG5vZGUsIHgsIHksIGspIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIG5vZGUueCA9IHggKz0gayAqIG5vZGUueDtcbiAgICBub2RlLnkgPSB5ICs9IGsgKiBub2RlLnk7XG4gICAgbm9kZS5yICo9IGs7XG4gICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gY2hpbGRyZW4ubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2xheW91dF9wYWNrVHJhbnNmb3JtKGNoaWxkcmVuW2ldLCB4LCB5LCBrKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tQbGFjZShhLCBiLCBjKSB7XG4gICAgdmFyIGRiID0gYS5yICsgYy5yLCBkeCA9IGIueCAtIGEueCwgZHkgPSBiLnkgLSBhLnk7XG4gICAgaWYgKGRiICYmIChkeCB8fCBkeSkpIHtcbiAgICAgIHZhciBkYSA9IGIuciArIGMuciwgZGMgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgIGRhICo9IGRhO1xuICAgICAgZGIgKj0gZGI7XG4gICAgICB2YXIgeCA9IC41ICsgKGRiIC0gZGEpIC8gKDIgKiBkYyksIHkgPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgMiAqIGRhICogKGRiICsgZGMpIC0gKGRiIC09IGRjKSAqIGRiIC0gZGEgKiBkYSkpIC8gKDIgKiBkYyk7XG4gICAgICBjLnggPSBhLnggKyB4ICogZHggKyB5ICogZHk7XG4gICAgICBjLnkgPSBhLnkgKyB4ICogZHkgLSB5ICogZHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGMueCA9IGEueCArIGRiO1xuICAgICAgYy55ID0gYS55O1xuICAgIH1cbiAgfVxuICBkMy5sYXlvdXQudHJlZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChudWxsKS52YWx1ZShudWxsKSwgc2VwYXJhdGlvbiA9IGQzX2xheW91dF90cmVlU2VwYXJhdGlvbiwgc2l6ZSA9IFsgMSwgMSBdLCBub2RlU2l6ZSA9IG51bGw7XG4gICAgZnVuY3Rpb24gdHJlZShkLCBpKSB7XG4gICAgICB2YXIgbm9kZXMgPSBoaWVyYXJjaHkuY2FsbCh0aGlzLCBkLCBpKSwgcm9vdDAgPSBub2Rlc1swXSwgcm9vdDEgPSB3cmFwVHJlZShyb290MCk7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290MSwgZmlyc3RXYWxrKSwgcm9vdDEucGFyZW50Lm0gPSAtcm9vdDEuejtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShyb290MSwgc2Vjb25kV2Fsayk7XG4gICAgICBpZiAobm9kZVNpemUpIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShyb290MCwgc2l6ZU5vZGUpOyBlbHNlIHtcbiAgICAgICAgdmFyIGxlZnQgPSByb290MCwgcmlnaHQgPSByb290MCwgYm90dG9tID0gcm9vdDA7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShyb290MCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgIGlmIChub2RlLnggPCBsZWZ0LngpIGxlZnQgPSBub2RlO1xuICAgICAgICAgIGlmIChub2RlLnggPiByaWdodC54KSByaWdodCA9IG5vZGU7XG4gICAgICAgICAgaWYgKG5vZGUuZGVwdGggPiBib3R0b20uZGVwdGgpIGJvdHRvbSA9IG5vZGU7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgdHggPSBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIgLSBsZWZ0LngsIGt4ID0gc2l6ZVswXSAvIChyaWdodC54ICsgc2VwYXJhdGlvbihyaWdodCwgbGVmdCkgLyAyICsgdHgpLCBreSA9IHNpemVbMV0gLyAoYm90dG9tLmRlcHRoIHx8IDEpO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDAsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICBub2RlLnggPSAobm9kZS54ICsgdHgpICoga3g7XG4gICAgICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGt5O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgZnVuY3Rpb24gd3JhcFRyZWUocm9vdDApIHtcbiAgICAgIHZhciByb290MSA9IHtcbiAgICAgICAgQTogbnVsbCxcbiAgICAgICAgY2hpbGRyZW46IFsgcm9vdDAgXVxuICAgICAgfSwgcXVldWUgPSBbIHJvb3QxIF0sIG5vZGUxO1xuICAgICAgd2hpbGUgKChub2RlMSA9IHF1ZXVlLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICAgIGZvciAodmFyIGNoaWxkcmVuID0gbm9kZTEuY2hpbGRyZW4sIGNoaWxkLCBpID0gMCwgbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIHF1ZXVlLnB1c2goKGNoaWxkcmVuW2ldID0gY2hpbGQgPSB7XG4gICAgICAgICAgICBfOiBjaGlsZHJlbltpXSxcbiAgICAgICAgICAgIHBhcmVudDogbm9kZTEsXG4gICAgICAgICAgICBjaGlsZHJlbjogKGNoaWxkID0gY2hpbGRyZW5baV0uY2hpbGRyZW4pICYmIGNoaWxkLnNsaWNlKCkgfHwgW10sXG4gICAgICAgICAgICBBOiBudWxsLFxuICAgICAgICAgICAgYTogbnVsbCxcbiAgICAgICAgICAgIHo6IDAsXG4gICAgICAgICAgICBtOiAwLFxuICAgICAgICAgICAgYzogMCxcbiAgICAgICAgICAgIHM6IDAsXG4gICAgICAgICAgICB0OiBudWxsLFxuICAgICAgICAgICAgaTogaVxuICAgICAgICAgIH0pLmEgPSBjaGlsZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByb290MS5jaGlsZHJlblswXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZmlyc3RXYWxrKHYpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sIHNpYmxpbmdzID0gdi5wYXJlbnQuY2hpbGRyZW4sIHcgPSB2LmkgPyBzaWJsaW5nc1t2LmkgLSAxXSA6IG51bGw7XG4gICAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgIGQzX2xheW91dF90cmVlU2hpZnQodik7XG4gICAgICAgIHZhciBtaWRwb2ludCA9IChjaGlsZHJlblswXS56ICsgY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV0ueikgLyAyO1xuICAgICAgICBpZiAodykge1xuICAgICAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgICAgICAgIHYubSA9IHYueiAtIG1pZHBvaW50O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHYueiA9IG1pZHBvaW50O1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHcpIHtcbiAgICAgICAgdi56ID0gdy56ICsgc2VwYXJhdGlvbih2Ll8sIHcuXyk7XG4gICAgICB9XG4gICAgICB2LnBhcmVudC5BID0gYXBwb3J0aW9uKHYsIHcsIHYucGFyZW50LkEgfHwgc2libGluZ3NbMF0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZWNvbmRXYWxrKHYpIHtcbiAgICAgIHYuXy54ID0gdi56ICsgdi5wYXJlbnQubTtcbiAgICAgIHYubSArPSB2LnBhcmVudC5tO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhcHBvcnRpb24odiwgdywgYW5jZXN0b3IpIHtcbiAgICAgIGlmICh3KSB7XG4gICAgICAgIHZhciB2aXAgPSB2LCB2b3AgPSB2LCB2aW0gPSB3LCB2b20gPSB2aXAucGFyZW50LmNoaWxkcmVuWzBdLCBzaXAgPSB2aXAubSwgc29wID0gdm9wLm0sIHNpbSA9IHZpbS5tLCBzb20gPSB2b20ubSwgc2hpZnQ7XG4gICAgICAgIHdoaWxlICh2aW0gPSBkM19sYXlvdXRfdHJlZVJpZ2h0KHZpbSksIHZpcCA9IGQzX2xheW91dF90cmVlTGVmdCh2aXApLCB2aW0gJiYgdmlwKSB7XG4gICAgICAgICAgdm9tID0gZDNfbGF5b3V0X3RyZWVMZWZ0KHZvbSk7XG4gICAgICAgICAgdm9wID0gZDNfbGF5b3V0X3RyZWVSaWdodCh2b3ApO1xuICAgICAgICAgIHZvcC5hID0gdjtcbiAgICAgICAgICBzaGlmdCA9IHZpbS56ICsgc2ltIC0gdmlwLnogLSBzaXAgKyBzZXBhcmF0aW9uKHZpbS5fLCB2aXAuXyk7XG4gICAgICAgICAgaWYgKHNoaWZ0ID4gMCkge1xuICAgICAgICAgICAgZDNfbGF5b3V0X3RyZWVNb3ZlKGQzX2xheW91dF90cmVlQW5jZXN0b3IodmltLCB2LCBhbmNlc3RvciksIHYsIHNoaWZ0KTtcbiAgICAgICAgICAgIHNpcCArPSBzaGlmdDtcbiAgICAgICAgICAgIHNvcCArPSBzaGlmdDtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2ltICs9IHZpbS5tO1xuICAgICAgICAgIHNpcCArPSB2aXAubTtcbiAgICAgICAgICBzb20gKz0gdm9tLm07XG4gICAgICAgICAgc29wICs9IHZvcC5tO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2aW0gJiYgIWQzX2xheW91dF90cmVlUmlnaHQodm9wKSkge1xuICAgICAgICAgIHZvcC50ID0gdmltO1xuICAgICAgICAgIHZvcC5tICs9IHNpbSAtIHNvcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlwICYmICFkM19sYXlvdXRfdHJlZUxlZnQodm9tKSkge1xuICAgICAgICAgIHZvbS50ID0gdmlwO1xuICAgICAgICAgIHZvbS5tICs9IHNpcCAtIHNvbTtcbiAgICAgICAgICBhbmNlc3RvciA9IHY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhbmNlc3RvcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2l6ZU5vZGUobm9kZSkge1xuICAgICAgbm9kZS54ICo9IHNpemVbMF07XG4gICAgICBub2RlLnkgPSBub2RlLmRlcHRoICogc2l6ZVsxXTtcbiAgICB9XG4gICAgdHJlZS5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2VwYXJhdGlvbjtcbiAgICAgIHNlcGFyYXRpb24gPSB4O1xuICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfTtcbiAgICB0cmVlLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlU2l6ZSA/IG51bGwgOiBzaXplO1xuICAgICAgbm9kZVNpemUgPSAoc2l6ZSA9IHgpID09IG51bGwgPyBzaXplTm9kZSA6IG51bGw7XG4gICAgICByZXR1cm4gdHJlZTtcbiAgICB9O1xuICAgIHRyZWUubm9kZVNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlU2l6ZSA/IHNpemUgOiBudWxsO1xuICAgICAgbm9kZVNpemUgPSAoc2l6ZSA9IHgpID09IG51bGwgPyBudWxsIDogc2l6ZU5vZGU7XG4gICAgICByZXR1cm4gdHJlZTtcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKHRyZWUsIGhpZXJhcmNoeSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlU2VwYXJhdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGEucGFyZW50ID09IGIucGFyZW50ID8gMSA6IDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVMZWZ0KHYpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuO1xuICAgIHJldHVybiBjaGlsZHJlbi5sZW5ndGggPyBjaGlsZHJlblswXSA6IHYudDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZVJpZ2h0KHYpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuLCBuO1xuICAgIHJldHVybiAobiA9IGNoaWxkcmVuLmxlbmd0aCkgPyBjaGlsZHJlbltuIC0gMV0gOiB2LnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVNb3ZlKHdtLCB3cCwgc2hpZnQpIHtcbiAgICB2YXIgY2hhbmdlID0gc2hpZnQgLyAod3AuaSAtIHdtLmkpO1xuICAgIHdwLmMgLT0gY2hhbmdlO1xuICAgIHdwLnMgKz0gc2hpZnQ7XG4gICAgd20uYyArPSBjaGFuZ2U7XG4gICAgd3AueiArPSBzaGlmdDtcbiAgICB3cC5tICs9IHNoaWZ0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlU2hpZnQodikge1xuICAgIHZhciBzaGlmdCA9IDAsIGNoYW5nZSA9IDAsIGNoaWxkcmVuID0gdi5jaGlsZHJlbiwgaSA9IGNoaWxkcmVuLmxlbmd0aCwgdztcbiAgICB3aGlsZSAoLS1pID49IDApIHtcbiAgICAgIHcgPSBjaGlsZHJlbltpXTtcbiAgICAgIHcueiArPSBzaGlmdDtcbiAgICAgIHcubSArPSBzaGlmdDtcbiAgICAgIHNoaWZ0ICs9IHcucyArIChjaGFuZ2UgKz0gdy5jKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVBbmNlc3Rvcih2aW0sIHYsIGFuY2VzdG9yKSB7XG4gICAgcmV0dXJuIHZpbS5hLnBhcmVudCA9PT0gdi5wYXJlbnQgPyB2aW0uYSA6IGFuY2VzdG9yO1xuICB9XG4gIGQzLmxheW91dC5jbHVzdGVyID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKS5zb3J0KG51bGwpLnZhbHVlKG51bGwpLCBzZXBhcmF0aW9uID0gZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uLCBzaXplID0gWyAxLCAxIF0sIG5vZGVTaXplID0gZmFsc2U7XG4gICAgZnVuY3Rpb24gY2x1c3RlcihkLCBpKSB7XG4gICAgICB2YXIgbm9kZXMgPSBoaWVyYXJjaHkuY2FsbCh0aGlzLCBkLCBpKSwgcm9vdCA9IG5vZGVzWzBdLCBwcmV2aW91c05vZGUsIHggPSAwO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgbm9kZS54ID0gZDNfbGF5b3V0X2NsdXN0ZXJYKGNoaWxkcmVuKTtcbiAgICAgICAgICBub2RlLnkgPSBkM19sYXlvdXRfY2x1c3RlclkoY2hpbGRyZW4pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5vZGUueCA9IHByZXZpb3VzTm9kZSA/IHggKz0gc2VwYXJhdGlvbihub2RlLCBwcmV2aW91c05vZGUpIDogMDtcbiAgICAgICAgICBub2RlLnkgPSAwO1xuICAgICAgICAgIHByZXZpb3VzTm9kZSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdmFyIGxlZnQgPSBkM19sYXlvdXRfY2x1c3RlckxlZnQocm9vdCksIHJpZ2h0ID0gZDNfbGF5b3V0X2NsdXN0ZXJSaWdodChyb290KSwgeDAgPSBsZWZ0LnggLSBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsIHgxID0gcmlnaHQueCArIHNlcGFyYXRpb24ocmlnaHQsIGxlZnQpIC8gMjtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIG5vZGVTaXplID8gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54IC0gcm9vdC54KSAqIHNpemVbMF07XG4gICAgICAgIG5vZGUueSA9IChyb290LnkgLSBub2RlLnkpICogc2l6ZVsxXTtcbiAgICAgIH0gOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIG5vZGUueCA9IChub2RlLnggLSB4MCkgLyAoeDEgLSB4MCkgKiBzaXplWzBdO1xuICAgICAgICBub2RlLnkgPSAoMSAtIChyb290LnkgPyBub2RlLnkgLyByb290LnkgOiAxKSkgKiBzaXplWzFdO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGNsdXN0ZXIuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNlcGFyYXRpb247XG4gICAgICBzZXBhcmF0aW9uID0geDtcbiAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgIH07XG4gICAgY2x1c3Rlci5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBudWxsIDogc2l6ZTtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSA9PSBudWxsO1xuICAgICAgcmV0dXJuIGNsdXN0ZXI7XG4gICAgfTtcbiAgICBjbHVzdGVyLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBzaXplIDogbnVsbDtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSAhPSBudWxsO1xuICAgICAgcmV0dXJuIGNsdXN0ZXI7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChjbHVzdGVyLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlclkoY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gMSArIGQzLm1heChjaGlsZHJlbiwgZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgIHJldHVybiBjaGlsZC55O1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9jbHVzdGVyWChjaGlsZHJlbikge1xuICAgIHJldHVybiBjaGlsZHJlbi5yZWR1Y2UoZnVuY3Rpb24oeCwgY2hpbGQpIHtcbiAgICAgIHJldHVybiB4ICsgY2hpbGQueDtcbiAgICB9LCAwKSAvIGNoaWxkcmVuLmxlbmd0aDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlckxlZnQobm9kZSkge1xuICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgcmV0dXJuIGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA/IGQzX2xheW91dF9jbHVzdGVyTGVmdChjaGlsZHJlblswXSkgOiBub2RlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9jbHVzdGVyUmlnaHQobm9kZSkge1xuICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4sIG47XG4gICAgcmV0dXJuIGNoaWxkcmVuICYmIChuID0gY2hpbGRyZW4ubGVuZ3RoKSA/IGQzX2xheW91dF9jbHVzdGVyUmlnaHQoY2hpbGRyZW5bbiAtIDFdKSA6IG5vZGU7XG4gIH1cbiAgZDMubGF5b3V0LnRyZWVtYXAgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLCByb3VuZCA9IE1hdGgucm91bmQsIHNpemUgPSBbIDEsIDEgXSwgcGFkZGluZyA9IG51bGwsIHBhZCA9IGQzX2xheW91dF90cmVlbWFwUGFkTnVsbCwgc3RpY2t5ID0gZmFsc2UsIHN0aWNraWVzLCBtb2RlID0gXCJzcXVhcmlmeVwiLCByYXRpbyA9IC41ICogKDEgKyBNYXRoLnNxcnQoNSkpO1xuICAgIGZ1bmN0aW9uIHNjYWxlKGNoaWxkcmVuLCBrKSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gY2hpbGRyZW4ubGVuZ3RoLCBjaGlsZCwgYXJlYTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGFyZWEgPSAoY2hpbGQgPSBjaGlsZHJlbltpXSkudmFsdWUgKiAoayA8IDAgPyAwIDogayk7XG4gICAgICAgIGNoaWxkLmFyZWEgPSBpc05hTihhcmVhKSB8fCBhcmVhIDw9IDAgPyAwIDogYXJlYTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gc3F1YXJpZnkobm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHJlY3QgPSBwYWQobm9kZSksIHJvdyA9IFtdLCByZW1haW5pbmcgPSBjaGlsZHJlbi5zbGljZSgpLCBjaGlsZCwgYmVzdCA9IEluZmluaXR5LCBzY29yZSwgdSA9IG1vZGUgPT09IFwic2xpY2VcIiA/IHJlY3QuZHggOiBtb2RlID09PSBcImRpY2VcIiA/IHJlY3QuZHkgOiBtb2RlID09PSBcInNsaWNlLWRpY2VcIiA/IG5vZGUuZGVwdGggJiAxID8gcmVjdC5keSA6IHJlY3QuZHggOiBNYXRoLm1pbihyZWN0LmR4LCByZWN0LmR5KSwgbjtcbiAgICAgICAgc2NhbGUocmVtYWluaW5nLCByZWN0LmR4ICogcmVjdC5keSAvIG5vZGUudmFsdWUpO1xuICAgICAgICByb3cuYXJlYSA9IDA7XG4gICAgICAgIHdoaWxlICgobiA9IHJlbWFpbmluZy5sZW5ndGgpID4gMCkge1xuICAgICAgICAgIHJvdy5wdXNoKGNoaWxkID0gcmVtYWluaW5nW24gLSAxXSk7XG4gICAgICAgICAgcm93LmFyZWEgKz0gY2hpbGQuYXJlYTtcbiAgICAgICAgICBpZiAobW9kZSAhPT0gXCJzcXVhcmlmeVwiIHx8IChzY29yZSA9IHdvcnN0KHJvdywgdSkpIDw9IGJlc3QpIHtcbiAgICAgICAgICAgIHJlbWFpbmluZy5wb3AoKTtcbiAgICAgICAgICAgIGJlc3QgPSBzY29yZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcm93LmFyZWEgLT0gcm93LnBvcCgpLmFyZWE7XG4gICAgICAgICAgICBwb3NpdGlvbihyb3csIHUsIHJlY3QsIGZhbHNlKTtcbiAgICAgICAgICAgIHUgPSBNYXRoLm1pbihyZWN0LmR4LCByZWN0LmR5KTtcbiAgICAgICAgICAgIHJvdy5sZW5ndGggPSByb3cuYXJlYSA9IDA7XG4gICAgICAgICAgICBiZXN0ID0gSW5maW5pdHk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChyb3cubGVuZ3RoKSB7XG4gICAgICAgICAgcG9zaXRpb24ocm93LCB1LCByZWN0LCB0cnVlKTtcbiAgICAgICAgICByb3cubGVuZ3RoID0gcm93LmFyZWEgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goc3F1YXJpZnkpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzdGlja2lmeShub2RlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICB2YXIgcmVjdCA9IHBhZChub2RlKSwgcmVtYWluaW5nID0gY2hpbGRyZW4uc2xpY2UoKSwgY2hpbGQsIHJvdyA9IFtdO1xuICAgICAgICBzY2FsZShyZW1haW5pbmcsIHJlY3QuZHggKiByZWN0LmR5IC8gbm9kZS52YWx1ZSk7XG4gICAgICAgIHJvdy5hcmVhID0gMDtcbiAgICAgICAgd2hpbGUgKGNoaWxkID0gcmVtYWluaW5nLnBvcCgpKSB7XG4gICAgICAgICAgcm93LnB1c2goY2hpbGQpO1xuICAgICAgICAgIHJvdy5hcmVhICs9IGNoaWxkLmFyZWE7XG4gICAgICAgICAgaWYgKGNoaWxkLnogIT0gbnVsbCkge1xuICAgICAgICAgICAgcG9zaXRpb24ocm93LCBjaGlsZC56ID8gcmVjdC5keCA6IHJlY3QuZHksIHJlY3QsICFyZW1haW5pbmcubGVuZ3RoKTtcbiAgICAgICAgICAgIHJvdy5sZW5ndGggPSByb3cuYXJlYSA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goc3RpY2tpZnkpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB3b3JzdChyb3csIHUpIHtcbiAgICAgIHZhciBzID0gcm93LmFyZWEsIHIsIHJtYXggPSAwLCBybWluID0gSW5maW5pdHksIGkgPSAtMSwgbiA9IHJvdy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoIShyID0gcm93W2ldLmFyZWEpKSBjb250aW51ZTtcbiAgICAgICAgaWYgKHIgPCBybWluKSBybWluID0gcjtcbiAgICAgICAgaWYgKHIgPiBybWF4KSBybWF4ID0gcjtcbiAgICAgIH1cbiAgICAgIHMgKj0gcztcbiAgICAgIHUgKj0gdTtcbiAgICAgIHJldHVybiBzID8gTWF0aC5tYXgodSAqIHJtYXggKiByYXRpbyAvIHMsIHMgLyAodSAqIHJtaW4gKiByYXRpbykpIDogSW5maW5pdHk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvc2l0aW9uKHJvdywgdSwgcmVjdCwgZmx1c2gpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSByb3cubGVuZ3RoLCB4ID0gcmVjdC54LCB5ID0gcmVjdC55LCB2ID0gdSA/IHJvdW5kKHJvdy5hcmVhIC8gdSkgOiAwLCBvO1xuICAgICAgaWYgKHUgPT0gcmVjdC5keCkge1xuICAgICAgICBpZiAoZmx1c2ggfHwgdiA+IHJlY3QuZHkpIHYgPSByZWN0LmR5O1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIG8gPSByb3dbaV07XG4gICAgICAgICAgby54ID0geDtcbiAgICAgICAgICBvLnkgPSB5O1xuICAgICAgICAgIG8uZHkgPSB2O1xuICAgICAgICAgIHggKz0gby5keCA9IE1hdGgubWluKHJlY3QueCArIHJlY3QuZHggLSB4LCB2ID8gcm91bmQoby5hcmVhIC8gdikgOiAwKTtcbiAgICAgICAgfVxuICAgICAgICBvLnogPSB0cnVlO1xuICAgICAgICBvLmR4ICs9IHJlY3QueCArIHJlY3QuZHggLSB4O1xuICAgICAgICByZWN0LnkgKz0gdjtcbiAgICAgICAgcmVjdC5keSAtPSB2O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGZsdXNoIHx8IHYgPiByZWN0LmR4KSB2ID0gcmVjdC5keDtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBvID0gcm93W2ldO1xuICAgICAgICAgIG8ueCA9IHg7XG4gICAgICAgICAgby55ID0geTtcbiAgICAgICAgICBvLmR4ID0gdjtcbiAgICAgICAgICB5ICs9IG8uZHkgPSBNYXRoLm1pbihyZWN0LnkgKyByZWN0LmR5IC0geSwgdiA/IHJvdW5kKG8uYXJlYSAvIHYpIDogMCk7XG4gICAgICAgIH1cbiAgICAgICAgby56ID0gZmFsc2U7XG4gICAgICAgIG8uZHkgKz0gcmVjdC55ICsgcmVjdC5keSAtIHk7XG4gICAgICAgIHJlY3QueCArPSB2O1xuICAgICAgICByZWN0LmR4IC09IHY7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRyZWVtYXAoZCkge1xuICAgICAgdmFyIG5vZGVzID0gc3RpY2tpZXMgfHwgaGllcmFyY2h5KGQpLCByb290ID0gbm9kZXNbMF07XG4gICAgICByb290LnggPSByb290LnkgPSAwO1xuICAgICAgaWYgKHJvb3QudmFsdWUpIHJvb3QuZHggPSBzaXplWzBdLCByb290LmR5ID0gc2l6ZVsxXTsgZWxzZSByb290LmR4ID0gcm9vdC5keSA9IDA7XG4gICAgICBpZiAoc3RpY2tpZXMpIGhpZXJhcmNoeS5yZXZhbHVlKHJvb3QpO1xuICAgICAgc2NhbGUoWyByb290IF0sIHJvb3QuZHggKiByb290LmR5IC8gcm9vdC52YWx1ZSk7XG4gICAgICAoc3RpY2tpZXMgPyBzdGlja2lmeSA6IHNxdWFyaWZ5KShyb290KTtcbiAgICAgIGlmIChzdGlja3kpIHN0aWNraWVzID0gbm9kZXM7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIHRyZWVtYXAuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0geDtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkZGluZztcbiAgICAgIGZ1bmN0aW9uIHBhZEZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIHAgPSB4LmNhbGwodHJlZW1hcCwgbm9kZSwgbm9kZS5kZXB0aCk7XG4gICAgICAgIHJldHVybiBwID09IG51bGwgPyBkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwobm9kZSkgOiBkM19sYXlvdXRfdHJlZW1hcFBhZChub2RlLCB0eXBlb2YgcCA9PT0gXCJudW1iZXJcIiA/IFsgcCwgcCwgcCwgcCBdIDogcCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwYWRDb25zdGFudChub2RlKSB7XG4gICAgICAgIHJldHVybiBkM19sYXlvdXRfdHJlZW1hcFBhZChub2RlLCB4KTtcbiAgICAgIH1cbiAgICAgIHZhciB0eXBlO1xuICAgICAgcGFkID0gKHBhZGRpbmcgPSB4KSA9PSBudWxsID8gZDNfbGF5b3V0X3RyZWVtYXBQYWROdWxsIDogKHR5cGUgPSB0eXBlb2YgeCkgPT09IFwiZnVuY3Rpb25cIiA/IHBhZEZ1bmN0aW9uIDogdHlwZSA9PT0gXCJudW1iZXJcIiA/ICh4ID0gWyB4LCB4LCB4LCB4IF0sIFxuICAgICAgcGFkQ29uc3RhbnQpIDogcGFkQ29uc3RhbnQ7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAucm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByb3VuZCAhPSBOdW1iZXI7XG4gICAgICByb3VuZCA9IHggPyBNYXRoLnJvdW5kIDogTnVtYmVyO1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnN0aWNreSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0aWNreTtcbiAgICAgIHN0aWNreSA9IHg7XG4gICAgICBzdGlja2llcyA9IG51bGw7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAucmF0aW8gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYXRpbztcbiAgICAgIHJhdGlvID0geDtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5tb2RlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbW9kZTtcbiAgICAgIG1vZGUgPSB4ICsgXCJcIjtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQodHJlZW1hcCwgaGllcmFyY2h5KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVtYXBQYWROdWxsKG5vZGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogbm9kZS54LFxuICAgICAgeTogbm9kZS55LFxuICAgICAgZHg6IG5vZGUuZHgsXG4gICAgICBkeTogbm9kZS5keVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVtYXBQYWQobm9kZSwgcGFkZGluZykge1xuICAgIHZhciB4ID0gbm9kZS54ICsgcGFkZGluZ1szXSwgeSA9IG5vZGUueSArIHBhZGRpbmdbMF0sIGR4ID0gbm9kZS5keCAtIHBhZGRpbmdbMV0gLSBwYWRkaW5nWzNdLCBkeSA9IG5vZGUuZHkgLSBwYWRkaW5nWzBdIC0gcGFkZGluZ1syXTtcbiAgICBpZiAoZHggPCAwKSB7XG4gICAgICB4ICs9IGR4IC8gMjtcbiAgICAgIGR4ID0gMDtcbiAgICB9XG4gICAgaWYgKGR5IDwgMCkge1xuICAgICAgeSArPSBkeSAvIDI7XG4gICAgICBkeSA9IDA7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICB4OiB4LFxuICAgICAgeTogeSxcbiAgICAgIGR4OiBkeCxcbiAgICAgIGR5OiBkeVxuICAgIH07XG4gIH1cbiAgZDMucmFuZG9tID0ge1xuICAgIG5vcm1hbDogZnVuY3Rpb24owrUsIM+DKSB7XG4gICAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICBpZiAobiA8IDIpIM+DID0gMTtcbiAgICAgIGlmIChuIDwgMSkgwrUgPSAwO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgeCwgeSwgcjtcbiAgICAgICAgZG8ge1xuICAgICAgICAgIHggPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgICAgICAgeSA9IE1hdGgucmFuZG9tKCkgKiAyIC0gMTtcbiAgICAgICAgICByID0geCAqIHggKyB5ICogeTtcbiAgICAgICAgfSB3aGlsZSAoIXIgfHwgciA+IDEpO1xuICAgICAgICByZXR1cm4gwrUgKyDPgyAqIHggKiBNYXRoLnNxcnQoLTIgKiBNYXRoLmxvZyhyKSAvIHIpO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGxvZ05vcm1hbDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmFuZG9tID0gZDMucmFuZG9tLm5vcm1hbC5hcHBseShkMywgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZXhwKHJhbmRvbSgpKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBiYXRlczogZnVuY3Rpb24obSkge1xuICAgICAgdmFyIHJhbmRvbSA9IGQzLnJhbmRvbS5pcndpbkhhbGwobSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByYW5kb20oKSAvIG07XG4gICAgICB9O1xuICAgIH0sXG4gICAgaXJ3aW5IYWxsOiBmdW5jdGlvbihtKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHMgPSAwLCBqID0gMDsgaiA8IG07IGorKykgcyArPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICByZXR1cm4gcztcbiAgICAgIH07XG4gICAgfVxuICB9O1xuICBkMy5zY2FsZSA9IHt9O1xuICBmdW5jdGlvbiBkM19zY2FsZUV4dGVudChkb21haW4pIHtcbiAgICB2YXIgc3RhcnQgPSBkb21haW5bMF0sIHN0b3AgPSBkb21haW5bZG9tYWluLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiBzdGFydCA8IHN0b3AgPyBbIHN0YXJ0LCBzdG9wIF0gOiBbIHN0b3AsIHN0YXJ0IF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVSYW5nZShzY2FsZSkge1xuICAgIHJldHVybiBzY2FsZS5yYW5nZUV4dGVudCA/IHNjYWxlLnJhbmdlRXh0ZW50KCkgOiBkM19zY2FsZUV4dGVudChzY2FsZS5yYW5nZSgpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9iaWxpbmVhcihkb21haW4sIHJhbmdlLCB1bmludGVycG9sYXRlLCBpbnRlcnBvbGF0ZSkge1xuICAgIHZhciB1ID0gdW5pbnRlcnBvbGF0ZShkb21haW5bMF0sIGRvbWFpblsxXSksIGkgPSBpbnRlcnBvbGF0ZShyYW5nZVswXSwgcmFuZ2VbMV0pO1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gaSh1KHgpKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX25pY2UoZG9tYWluLCBuaWNlKSB7XG4gICAgdmFyIGkwID0gMCwgaTEgPSBkb21haW4ubGVuZ3RoIC0gMSwgeDAgPSBkb21haW5baTBdLCB4MSA9IGRvbWFpbltpMV0sIGR4O1xuICAgIGlmICh4MSA8IHgwKSB7XG4gICAgICBkeCA9IGkwLCBpMCA9IGkxLCBpMSA9IGR4O1xuICAgICAgZHggPSB4MCwgeDAgPSB4MSwgeDEgPSBkeDtcbiAgICB9XG4gICAgZG9tYWluW2kwXSA9IG5pY2UuZmxvb3IoeDApO1xuICAgIGRvbWFpbltpMV0gPSBuaWNlLmNlaWwoeDEpO1xuICAgIHJldHVybiBkb21haW47XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbmljZVN0ZXAoc3RlcCkge1xuICAgIHJldHVybiBzdGVwID8ge1xuICAgICAgZmxvb3I6IGZ1bmN0aW9uKHgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoeCAvIHN0ZXApICogc3RlcDtcbiAgICAgIH0sXG4gICAgICBjZWlsOiBmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBNYXRoLmNlaWwoeCAvIHN0ZXApICogc3RlcDtcbiAgICAgIH1cbiAgICB9IDogZDNfc2NhbGVfbmljZUlkZW50aXR5O1xuICB9XG4gIHZhciBkM19zY2FsZV9uaWNlSWRlbnRpdHkgPSB7XG4gICAgZmxvb3I6IGQzX2lkZW50aXR5LFxuICAgIGNlaWw6IGQzX2lkZW50aXR5XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3BvbHlsaW5lYXIoZG9tYWluLCByYW5nZSwgdW5pbnRlcnBvbGF0ZSwgaW50ZXJwb2xhdGUpIHtcbiAgICB2YXIgdSA9IFtdLCBpID0gW10sIGogPSAwLCBrID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoKSAtIDE7XG4gICAgaWYgKGRvbWFpbltrXSA8IGRvbWFpblswXSkge1xuICAgICAgZG9tYWluID0gZG9tYWluLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgICAgcmFuZ2UgPSByYW5nZS5zbGljZSgpLnJldmVyc2UoKTtcbiAgICB9XG4gICAgd2hpbGUgKCsraiA8PSBrKSB7XG4gICAgICB1LnB1c2godW5pbnRlcnBvbGF0ZShkb21haW5baiAtIDFdLCBkb21haW5bal0pKTtcbiAgICAgIGkucHVzaChpbnRlcnBvbGF0ZShyYW5nZVtqIC0gMV0sIHJhbmdlW2pdKSk7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICB2YXIgaiA9IGQzLmJpc2VjdChkb21haW4sIHgsIDEsIGspIC0gMTtcbiAgICAgIHJldHVybiBpW2pdKHVbal0oeCkpO1xuICAgIH07XG4gIH1cbiAgZDMuc2NhbGUubGluZWFyID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhcihbIDAsIDEgXSwgWyAwLCAxIF0sIGQzX2ludGVycG9sYXRlLCBmYWxzZSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhcihkb21haW4sIHJhbmdlLCBpbnRlcnBvbGF0ZSwgY2xhbXApIHtcbiAgICB2YXIgb3V0cHV0LCBpbnB1dDtcbiAgICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgICAgdmFyIGxpbmVhciA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCkgPiAyID8gZDNfc2NhbGVfcG9seWxpbmVhciA6IGQzX3NjYWxlX2JpbGluZWFyLCB1bmludGVycG9sYXRlID0gY2xhbXAgPyBkM191bmludGVycG9sYXRlQ2xhbXAgOiBkM191bmludGVycG9sYXRlTnVtYmVyO1xuICAgICAgb3V0cHV0ID0gbGluZWFyKGRvbWFpbiwgcmFuZ2UsIHVuaW50ZXJwb2xhdGUsIGludGVycG9sYXRlKTtcbiAgICAgIGlucHV0ID0gbGluZWFyKHJhbmdlLCBkb21haW4sIHVuaW50ZXJwb2xhdGUsIGQzX2ludGVycG9sYXRlKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIG91dHB1dCh4KTtcbiAgICB9XG4gICAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeSkge1xuICAgICAgcmV0dXJuIGlucHV0KHkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0geC5tYXAoTnVtYmVyKTtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlUm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gc2NhbGUucmFuZ2UoeCkuaW50ZXJwb2xhdGUoZDNfaW50ZXJwb2xhdGVSb3VuZCk7XG4gICAgfTtcbiAgICBzY2FsZS5jbGFtcCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNsYW1wO1xuICAgICAgY2xhbXAgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLmludGVycG9sYXRlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaW50ZXJwb2xhdGU7XG4gICAgICBpbnRlcnBvbGF0ZSA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihtKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja3MoZG9tYWluLCBtKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihtLCBmb3JtYXQpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrRm9ybWF0KGRvbWFpbiwgbSwgZm9ybWF0KTtcbiAgICB9O1xuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihtKSB7XG4gICAgICBkM19zY2FsZV9saW5lYXJOaWNlKGRvbWFpbiwgbSk7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhcihkb21haW4sIHJhbmdlLCBpbnRlcnBvbGF0ZSwgY2xhbXApO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJSZWJpbmQoc2NhbGUsIGxpbmVhcikge1xuICAgIHJldHVybiBkMy5yZWJpbmQoc2NhbGUsIGxpbmVhciwgXCJyYW5nZVwiLCBcInJhbmdlUm91bmRcIiwgXCJpbnRlcnBvbGF0ZVwiLCBcImNsYW1wXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhck5pY2UoZG9tYWluLCBtKSB7XG4gICAgZDNfc2NhbGVfbmljZShkb21haW4sIGQzX3NjYWxlX25pY2VTdGVwKGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pWzJdKSk7XG4gICAgZDNfc2NhbGVfbmljZShkb21haW4sIGQzX3NjYWxlX25pY2VTdGVwKGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pWzJdKSk7XG4gICAgcmV0dXJuIGRvbWFpbjtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKSB7XG4gICAgaWYgKG0gPT0gbnVsbCkgbSA9IDEwO1xuICAgIHZhciBleHRlbnQgPSBkM19zY2FsZUV4dGVudChkb21haW4pLCBzcGFuID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCBzdGVwID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3BhbiAvIG0pIC8gTWF0aC5MTjEwKSksIGVyciA9IG0gLyBzcGFuICogc3RlcDtcbiAgICBpZiAoZXJyIDw9IC4xNSkgc3RlcCAqPSAxMDsgZWxzZSBpZiAoZXJyIDw9IC4zNSkgc3RlcCAqPSA1OyBlbHNlIGlmIChlcnIgPD0gLjc1KSBzdGVwICo9IDI7XG4gICAgZXh0ZW50WzBdID0gTWF0aC5jZWlsKGV4dGVudFswXSAvIHN0ZXApICogc3RlcDtcbiAgICBleHRlbnRbMV0gPSBNYXRoLmZsb29yKGV4dGVudFsxXSAvIHN0ZXApICogc3RlcCArIHN0ZXAgKiAuNTtcbiAgICBleHRlbnRbMl0gPSBzdGVwO1xuICAgIHJldHVybiBleHRlbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyVGlja3MoZG9tYWluLCBtKSB7XG4gICAgcmV0dXJuIGQzLnJhbmdlLmFwcGx5KGQzLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCkge1xuICAgIHZhciByYW5nZSA9IGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pO1xuICAgIGlmIChmb3JtYXQpIHtcbiAgICAgIHZhciBtYXRjaCA9IGQzX2Zvcm1hdF9yZS5leGVjKGZvcm1hdCk7XG4gICAgICBtYXRjaC5zaGlmdCgpO1xuICAgICAgaWYgKG1hdGNoWzhdID09PSBcInNcIikge1xuICAgICAgICB2YXIgcHJlZml4ID0gZDMuZm9ybWF0UHJlZml4KE1hdGgubWF4KGFicyhyYW5nZVswXSksIGFicyhyYW5nZVsxXSkpKTtcbiAgICAgICAgaWYgKCFtYXRjaFs3XSkgbWF0Y2hbN10gPSBcIi5cIiArIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbihwcmVmaXguc2NhbGUocmFuZ2VbMl0pKTtcbiAgICAgICAgbWF0Y2hbOF0gPSBcImZcIjtcbiAgICAgICAgZm9ybWF0ID0gZDMuZm9ybWF0KG1hdGNoLmpvaW4oXCJcIikpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXQocHJlZml4LnNjYWxlKGQpKSArIHByZWZpeC5zeW1ib2w7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBpZiAoIW1hdGNoWzddKSBtYXRjaFs3XSA9IFwiLlwiICsgZDNfc2NhbGVfbGluZWFyRm9ybWF0UHJlY2lzaW9uKG1hdGNoWzhdLCByYW5nZSk7XG4gICAgICBmb3JtYXQgPSBtYXRjaC5qb2luKFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JtYXQgPSBcIiwuXCIgKyBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24ocmFuZ2VbMl0pICsgXCJmXCI7XG4gICAgfVxuICAgIHJldHVybiBkMy5mb3JtYXQoZm9ybWF0KTtcbiAgfVxuICB2YXIgZDNfc2NhbGVfbGluZWFyRm9ybWF0U2lnbmlmaWNhbnQgPSB7XG4gICAgczogMSxcbiAgICBnOiAxLFxuICAgIHA6IDEsXG4gICAgcjogMSxcbiAgICBlOiAxXG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbih2YWx1ZSkge1xuICAgIHJldHVybiAtTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMTAgKyAuMDEpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhckZvcm1hdFByZWNpc2lvbih0eXBlLCByYW5nZSkge1xuICAgIHZhciBwID0gZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKHJhbmdlWzJdKTtcbiAgICByZXR1cm4gdHlwZSBpbiBkM19zY2FsZV9saW5lYXJGb3JtYXRTaWduaWZpY2FudCA/IE1hdGguYWJzKHAgLSBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24oTWF0aC5tYXgoYWJzKHJhbmdlWzBdKSwgYWJzKHJhbmdlWzFdKSkpKSArICsodHlwZSAhPT0gXCJlXCIpIDogcCAtICh0eXBlID09PSBcIiVcIikgKiAyO1xuICB9XG4gIGQzLnNjYWxlLmxvZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9sb2coZDMuc2NhbGUubGluZWFyKCkuZG9tYWluKFsgMCwgMSBdKSwgMTAsIHRydWUsIFsgMSwgMTAgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xvZyhsaW5lYXIsIGJhc2UsIHBvc2l0aXZlLCBkb21haW4pIHtcbiAgICBmdW5jdGlvbiBsb2coeCkge1xuICAgICAgcmV0dXJuIChwb3NpdGl2ZSA/IE1hdGgubG9nKHggPCAwID8gMCA6IHgpIDogLU1hdGgubG9nKHggPiAwID8gMCA6IC14KSkgLyBNYXRoLmxvZyhiYXNlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG93KHgpIHtcbiAgICAgIHJldHVybiBwb3NpdGl2ZSA/IE1hdGgucG93KGJhc2UsIHgpIDogLU1hdGgucG93KGJhc2UsIC14KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIGxpbmVhcihsb2coeCkpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gcG93KGxpbmVhci5pbnZlcnQoeCkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgcG9zaXRpdmUgPSB4WzBdID49IDA7XG4gICAgICBsaW5lYXIuZG9tYWluKChkb21haW4gPSB4Lm1hcChOdW1iZXIpKS5tYXAobG9nKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5iYXNlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYmFzZTtcbiAgICAgIGJhc2UgPSArXztcbiAgICAgIGxpbmVhci5kb21haW4oZG9tYWluLm1hcChsb2cpKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBuaWNlZCA9IGQzX3NjYWxlX25pY2UoZG9tYWluLm1hcChsb2cpLCBwb3NpdGl2ZSA/IE1hdGggOiBkM19zY2FsZV9sb2dOaWNlTmVnYXRpdmUpO1xuICAgICAgbGluZWFyLmRvbWFpbihuaWNlZCk7XG4gICAgICBkb21haW4gPSBuaWNlZC5tYXAocG93KTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZXh0ZW50ID0gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSwgdGlja3MgPSBbXSwgdSA9IGV4dGVudFswXSwgdiA9IGV4dGVudFsxXSwgaSA9IE1hdGguZmxvb3IobG9nKHUpKSwgaiA9IE1hdGguY2VpbChsb2codikpLCBuID0gYmFzZSAlIDEgPyAyIDogYmFzZTtcbiAgICAgIGlmIChpc0Zpbml0ZShqIC0gaSkpIHtcbiAgICAgICAgaWYgKHBvc2l0aXZlKSB7XG4gICAgICAgICAgZm9yICg7aSA8IGo7IGkrKykgZm9yICh2YXIgayA9IDE7IGsgPCBuOyBrKyspIHRpY2tzLnB1c2gocG93KGkpICogayk7XG4gICAgICAgICAgdGlja3MucHVzaChwb3coaSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpY2tzLnB1c2gocG93KGkpKTtcbiAgICAgICAgICBmb3IgKDtpKysgPCBqOyApIGZvciAodmFyIGsgPSBuIC0gMTsgayA+IDA7IGstLSkgdGlja3MucHVzaChwb3coaSkgKiBrKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkgPSAwOyB0aWNrc1tpXSA8IHU7IGkrKykge31cbiAgICAgICAgZm9yIChqID0gdGlja3MubGVuZ3RoOyB0aWNrc1tqIC0gMV0gPiB2OyBqLS0pIHt9XG4gICAgICAgIHRpY2tzID0gdGlja3Muc2xpY2UoaSwgaik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGlja3M7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obiwgZm9ybWF0KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkM19zY2FsZV9sb2dGb3JtYXQ7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIGZvcm1hdCA9IGQzX3NjYWxlX2xvZ0Zvcm1hdDsgZWxzZSBpZiAodHlwZW9mIGZvcm1hdCAhPT0gXCJmdW5jdGlvblwiKSBmb3JtYXQgPSBkMy5mb3JtYXQoZm9ybWF0KTtcbiAgICAgIHZhciBrID0gTWF0aC5tYXgoMSwgYmFzZSAqIG4gLyBzY2FsZS50aWNrcygpLmxlbmd0aCk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZCkge1xuICAgICAgICB2YXIgaSA9IGQgLyBwb3coTWF0aC5yb3VuZChsb2coZCkpKTtcbiAgICAgICAgaWYgKGkgKiBiYXNlIDwgYmFzZSAtIC41KSBpICo9IGJhc2U7XG4gICAgICAgIHJldHVybiBpIDw9IGsgPyBmb3JtYXQoZCkgOiBcIlwiO1xuICAgICAgfTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9sb2cobGluZWFyLmNvcHkoKSwgYmFzZSwgcG9zaXRpdmUsIGRvbWFpbik7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpO1xuICB9XG4gIHZhciBkM19zY2FsZV9sb2dGb3JtYXQgPSBkMy5mb3JtYXQoXCIuMGVcIiksIGQzX3NjYWxlX2xvZ05pY2VOZWdhdGl2ZSA9IHtcbiAgICBmbG9vcjogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmNlaWwoLXgpO1xuICAgIH0sXG4gICAgY2VpbDogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmZsb29yKC14KTtcbiAgICB9XG4gIH07XG4gIGQzLnNjYWxlLnBvdyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9wb3coZDMuc2NhbGUubGluZWFyKCksIDEsIFsgMCwgMSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfcG93KGxpbmVhciwgZXhwb25lbnQsIGRvbWFpbikge1xuICAgIHZhciBwb3dwID0gZDNfc2NhbGVfcG93UG93KGV4cG9uZW50KSwgcG93YiA9IGQzX3NjYWxlX3Bvd1BvdygxIC8gZXhwb25lbnQpO1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBsaW5lYXIocG93cCh4KSk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBwb3diKGxpbmVhci5pbnZlcnQoeCkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgbGluZWFyLmRvbWFpbigoZG9tYWluID0geC5tYXAoTnVtYmVyKSkubWFwKHBvd3ApKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obSwgZm9ybWF0KSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCk7XG4gICAgfTtcbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIHNjYWxlLmRvbWFpbihkM19zY2FsZV9saW5lYXJOaWNlKGRvbWFpbiwgbSkpO1xuICAgIH07XG4gICAgc2NhbGUuZXhwb25lbnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBleHBvbmVudDtcbiAgICAgIHBvd3AgPSBkM19zY2FsZV9wb3dQb3coZXhwb25lbnQgPSB4KTtcbiAgICAgIHBvd2IgPSBkM19zY2FsZV9wb3dQb3coMSAvIGV4cG9uZW50KTtcbiAgICAgIGxpbmVhci5kb21haW4oZG9tYWluLm1hcChwb3dwKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfcG93KGxpbmVhci5jb3B5KCksIGV4cG9uZW50LCBkb21haW4pO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9wb3dQb3coZSkge1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geCA8IDAgPyAtTWF0aC5wb3coLXgsIGUpIDogTWF0aC5wb3coeCwgZSk7XG4gICAgfTtcbiAgfVxuICBkMy5zY2FsZS5zcXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLnBvdygpLmV4cG9uZW50KC41KTtcbiAgfTtcbiAgZDMuc2NhbGUub3JkaW5hbCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9vcmRpbmFsKFtdLCB7XG4gICAgICB0OiBcInJhbmdlXCIsXG4gICAgICBhOiBbIFtdIF1cbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfb3JkaW5hbChkb21haW4sIHJhbmdlcikge1xuICAgIHZhciBpbmRleCwgcmFuZ2UsIHJhbmdlQmFuZDtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gcmFuZ2VbKChpbmRleC5nZXQoeCkgfHwgKHJhbmdlci50ID09PSBcInJhbmdlXCIgPyBpbmRleC5zZXQoeCwgZG9tYWluLnB1c2goeCkpIDogTmFOKSkgLSAxKSAlIHJhbmdlLmxlbmd0aF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0ZXBzKHN0YXJ0LCBzdGVwKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoZG9tYWluLmxlbmd0aCkubWFwKGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgcmV0dXJuIHN0YXJ0ICsgc3RlcCAqIGk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0gW107XG4gICAgICBpbmRleCA9IG5ldyBkM19NYXAoKTtcbiAgICAgIHZhciBpID0gLTEsIG4gPSB4Lmxlbmd0aCwgeGk7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFpbmRleC5oYXMoeGkgPSB4W2ldKSkgaW5kZXguc2V0KHhpLCBkb21haW4ucHVzaCh4aSkpO1xuICAgICAgcmV0dXJuIHNjYWxlW3Jhbmdlci50XS5hcHBseShzY2FsZSwgcmFuZ2VyLmEpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJhbmdlQmFuZCA9IDA7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VQb2ludHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgdmFyIHN0YXJ0ID0geFswXSwgc3RvcCA9IHhbMV0sIHN0ZXAgPSBkb21haW4ubGVuZ3RoIDwgMiA/IChzdGFydCA9IChzdGFydCArIHN0b3ApIC8gMiwgXG4gICAgICAwKSA6IChzdG9wIC0gc3RhcnQpIC8gKGRvbWFpbi5sZW5ndGggLSAxICsgcGFkZGluZyk7XG4gICAgICByYW5nZSA9IHN0ZXBzKHN0YXJ0ICsgc3RlcCAqIHBhZGRpbmcgLyAyLCBzdGVwKTtcbiAgICAgIHJhbmdlQmFuZCA9IDA7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VQb2ludHNcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VSb3VuZFBvaW50cyA9IGZ1bmN0aW9uKHgsIHBhZGRpbmcpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcGFkZGluZyA9IDA7XG4gICAgICB2YXIgc3RhcnQgPSB4WzBdLCBzdG9wID0geFsxXSwgc3RlcCA9IGRvbWFpbi5sZW5ndGggPCAyID8gKHN0YXJ0ID0gc3RvcCA9IE1hdGgucm91bmQoKHN0YXJ0ICsgc3RvcCkgLyAyKSwgXG4gICAgICAwKSA6IChzdG9wIC0gc3RhcnQpIC8gKGRvbWFpbi5sZW5ndGggLSAxICsgcGFkZGluZykgfCAwO1xuICAgICAgcmFuZ2UgPSBzdGVwcyhzdGFydCArIE1hdGgucm91bmQoc3RlcCAqIHBhZGRpbmcgLyAyICsgKHN0b3AgLSBzdGFydCAtIChkb21haW4ubGVuZ3RoIC0gMSArIHBhZGRpbmcpICogc3RlcCkgLyAyKSwgc3RlcCk7XG4gICAgICByYW5nZUJhbmQgPSAwO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlUm91bmRQb2ludHNcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VCYW5kcyA9IGZ1bmN0aW9uKHgsIHBhZGRpbmcsIG91dGVyUGFkZGluZykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBwYWRkaW5nID0gMDtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgb3V0ZXJQYWRkaW5nID0gcGFkZGluZztcbiAgICAgIHZhciByZXZlcnNlID0geFsxXSA8IHhbMF0sIHN0YXJ0ID0geFtyZXZlcnNlIC0gMF0sIHN0b3AgPSB4WzEgLSByZXZlcnNlXSwgc3RlcCA9IChzdG9wIC0gc3RhcnQpIC8gKGRvbWFpbi5sZW5ndGggLSBwYWRkaW5nICsgMiAqIG91dGVyUGFkZGluZyk7XG4gICAgICByYW5nZSA9IHN0ZXBzKHN0YXJ0ICsgc3RlcCAqIG91dGVyUGFkZGluZywgc3RlcCk7XG4gICAgICBpZiAocmV2ZXJzZSkgcmFuZ2UucmV2ZXJzZSgpO1xuICAgICAgcmFuZ2VCYW5kID0gc3RlcCAqICgxIC0gcGFkZGluZyk7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VCYW5kc1wiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZVJvdW5kQmFuZHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nLCBvdXRlclBhZGRpbmcpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcGFkZGluZyA9IDA7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIG91dGVyUGFkZGluZyA9IHBhZGRpbmc7XG4gICAgICB2YXIgcmV2ZXJzZSA9IHhbMV0gPCB4WzBdLCBzdGFydCA9IHhbcmV2ZXJzZSAtIDBdLCBzdG9wID0geFsxIC0gcmV2ZXJzZV0sIHN0ZXAgPSBNYXRoLmZsb29yKChzdG9wIC0gc3RhcnQpIC8gKGRvbWFpbi5sZW5ndGggLSBwYWRkaW5nICsgMiAqIG91dGVyUGFkZGluZykpO1xuICAgICAgcmFuZ2UgPSBzdGVwcyhzdGFydCArIE1hdGgucm91bmQoKHN0b3AgLSBzdGFydCAtIChkb21haW4ubGVuZ3RoIC0gcGFkZGluZykgKiBzdGVwKSAvIDIpLCBzdGVwKTtcbiAgICAgIGlmIChyZXZlcnNlKSByYW5nZS5yZXZlcnNlKCk7XG4gICAgICByYW5nZUJhbmQgPSBNYXRoLnJvdW5kKHN0ZXAgKiAoMSAtIHBhZGRpbmcpKTtcbiAgICAgIHJhbmdlciA9IHtcbiAgICAgICAgdDogXCJyYW5nZVJvdW5kQmFuZHNcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VCYW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcmFuZ2VCYW5kO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VFeHRlbnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZUV4dGVudChyYW5nZXIuYVswXSk7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfb3JkaW5hbChkb21haW4sIHJhbmdlcik7XG4gICAgfTtcbiAgICByZXR1cm4gc2NhbGUuZG9tYWluKGRvbWFpbik7XG4gIH1cbiAgZDMuc2NhbGUuY2F0ZWdvcnkxMCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoZDNfY2F0ZWdvcnkxMCk7XG4gIH07XG4gIGQzLnNjYWxlLmNhdGVnb3J5MjAgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2NhbGUub3JkaW5hbCgpLnJhbmdlKGQzX2NhdGVnb3J5MjApO1xuICB9O1xuICBkMy5zY2FsZS5jYXRlZ29yeTIwYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoZDNfY2F0ZWdvcnkyMGIpO1xuICB9O1xuICBkMy5zY2FsZS5jYXRlZ29yeTIwYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoZDNfY2F0ZWdvcnkyMGMpO1xuICB9O1xuICB2YXIgZDNfY2F0ZWdvcnkxMCA9IFsgMjA2MjI2MCwgMTY3NDQyMDYsIDI5MjQ1ODgsIDE0MDM0NzI4LCA5NzI1ODg1LCA5MTk3MTMxLCAxNDkwNzMzMCwgODM1NTcxMSwgMTIzNjkxODYsIDE1NTYxNzUgXS5tYXAoZDNfcmdiU3RyaW5nKTtcbiAgdmFyIGQzX2NhdGVnb3J5MjAgPSBbIDIwNjIyNjAsIDExNDU0NDQwLCAxNjc0NDIwNiwgMTY3NTk2NzIsIDI5MjQ1ODgsIDEwMDE4Njk4LCAxNDAzNDcyOCwgMTY3NTA3NDIsIDk3MjU4ODUsIDEyOTU1ODYxLCA5MTk3MTMxLCAxMjg4NTE0MCwgMTQ5MDczMzAsIDE2MjM0MTk0LCA4MzU1NzExLCAxMzA5MjgwNywgMTIzNjkxODYsIDE0NDA4NTg5LCAxNTU2MTc1LCAxMDQxMDcyNSBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICB2YXIgZDNfY2F0ZWdvcnkyMGIgPSBbIDM3NTA3NzcsIDUzOTU2MTksIDcwNDA3MTksIDEwMjY0Mjg2LCA2NTE5MDk3LCA5MjE2NTk0LCAxMTkxNTExNSwgMTM1NTY2MzYsIDkyMDI5OTMsIDEyNDI2ODA5LCAxNTE4NjUxNCwgMTUxOTA5MzIsIDg2NjYxNjksIDExMzU2NDkwLCAxNDA0OTY0MywgMTUxNzczNzIsIDgwNzc2ODMsIDEwODM0MzI0LCAxMzUyODUwOSwgMTQ1ODk2NTQgXS5tYXAoZDNfcmdiU3RyaW5nKTtcbiAgdmFyIGQzX2NhdGVnb3J5MjBjID0gWyAzMjQ0NzMzLCA3MDU3MTEwLCAxMDQwNjYyNSwgMTMwMzI0MzEsIDE1MDk1MDUzLCAxNjYxNjc2NCwgMTY2MjUyNTksIDE2NjM0MDE4LCAzMjUzMDc2LCA3NjUyNDcwLCAxMDYwNzAwMywgMTMxMDE1MDQsIDc2OTUyODEsIDEwMzk0MzEyLCAxMjM2OTM3MiwgMTQzNDI4OTEsIDY1MTM1MDcsIDk4Njg5NTAsIDEyNDM0ODc3LCAxNDI3NzA4MSBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICBkMy5zY2FsZS5xdWFudGlsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9xdWFudGlsZShbXSwgW10pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9xdWFudGlsZShkb21haW4sIHJhbmdlKSB7XG4gICAgdmFyIHRocmVzaG9sZHM7XG4gICAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICAgIHZhciBrID0gMCwgcSA9IHJhbmdlLmxlbmd0aDtcbiAgICAgIHRocmVzaG9sZHMgPSBbXTtcbiAgICAgIHdoaWxlICgrK2sgPCBxKSB0aHJlc2hvbGRzW2sgLSAxXSA9IGQzLnF1YW50aWxlKGRvbWFpbiwgayAvIHEpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICBpZiAoIWlzTmFOKHggPSAreCkpIHJldHVybiByYW5nZVtkMy5iaXNlY3QodGhyZXNob2xkcywgeCldO1xuICAgIH1cbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSB4Lm1hcChkM19udW1iZXIpLmZpbHRlcihkM19udW1lcmljKS5zb3J0KGQzX2FzY2VuZGluZyk7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5xdWFudGlsZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aHJlc2hvbGRzO1xuICAgIH07XG4gICAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgICAgeSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgICByZXR1cm4geSA8IDAgPyBbIE5hTiwgTmFOIF0gOiBbIHkgPiAwID8gdGhyZXNob2xkc1t5IC0gMV0gOiBkb21haW5bMF0sIHkgPCB0aHJlc2hvbGRzLmxlbmd0aCA/IHRocmVzaG9sZHNbeV0gOiBkb21haW5bZG9tYWluLmxlbmd0aCAtIDFdIF07XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfcXVhbnRpbGUoZG9tYWluLCByYW5nZSk7XG4gICAgfTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9XG4gIGQzLnNjYWxlLnF1YW50aXplID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aXplKDAsIDEsIFsgMCwgMSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfcXVhbnRpemUoeDAsIHgxLCByYW5nZSkge1xuICAgIHZhciBreCwgaTtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gcmFuZ2VbTWF0aC5tYXgoMCwgTWF0aC5taW4oaSwgTWF0aC5mbG9vcihreCAqICh4IC0geDApKSkpXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICAgIGt4ID0gcmFuZ2UubGVuZ3RoIC8gKHgxIC0geDApO1xuICAgICAgaSA9IHJhbmdlLmxlbmd0aCAtIDE7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfVxuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgeDAsIHgxIF07XG4gICAgICB4MCA9ICt4WzBdO1xuICAgICAgeDEgPSAreFt4Lmxlbmd0aCAtIDFdO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgICAgeSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgICB5ID0geSA8IDAgPyBOYU4gOiB5IC8ga3ggKyB4MDtcbiAgICAgIHJldHVybiBbIHksIHkgKyAxIC8ga3ggXTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9xdWFudGl6ZSh4MCwgeDEsIHJhbmdlKTtcbiAgICB9O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH1cbiAgZDMuc2NhbGUudGhyZXNob2xkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX3RocmVzaG9sZChbIC41IF0sIFsgMCwgMSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfdGhyZXNob2xkKGRvbWFpbiwgcmFuZ2UpIHtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICBpZiAoeCA8PSB4KSByZXR1cm4gcmFuZ2VbZDMuYmlzZWN0KGRvbWFpbiwgeCldO1xuICAgIH1cbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSBfO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0gXztcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgICAgcmV0dXJuIFsgZG9tYWluW3kgLSAxXSwgZG9tYWluW3ldIF07XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfdGhyZXNob2xkKGRvbWFpbiwgcmFuZ2UpO1xuICAgIH07XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG4gIGQzLnNjYWxlLmlkZW50aXR5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX2lkZW50aXR5KFsgMCwgMSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfaWRlbnRpdHkoZG9tYWluKSB7XG4gICAgZnVuY3Rpb24gaWRlbnRpdHkoeCkge1xuICAgICAgcmV0dXJuICt4O1xuICAgIH1cbiAgICBpZGVudGl0eS5pbnZlcnQgPSBpZGVudGl0eTtcbiAgICBpZGVudGl0eS5kb21haW4gPSBpZGVudGl0eS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IHgubWFwKGlkZW50aXR5KTtcbiAgICAgIHJldHVybiBpZGVudGl0eTtcbiAgICB9O1xuICAgIGlkZW50aXR5LnRpY2tzID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSk7XG4gICAgfTtcbiAgICBpZGVudGl0eS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obSwgZm9ybWF0KSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCk7XG4gICAgfTtcbiAgICBpZGVudGl0eS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfaWRlbnRpdHkoZG9tYWluKTtcbiAgICB9O1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuICBkMy5zdmcgPSB7fTtcbiAgZnVuY3Rpb24gZDNfemVybygpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBkMy5zdmcuYXJjID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGlubmVyUmFkaXVzID0gZDNfc3ZnX2FyY0lubmVyUmFkaXVzLCBvdXRlclJhZGl1cyA9IGQzX3N2Z19hcmNPdXRlclJhZGl1cywgY29ybmVyUmFkaXVzID0gZDNfemVybywgcGFkUmFkaXVzID0gZDNfc3ZnX2FyY0F1dG8sIHN0YXJ0QW5nbGUgPSBkM19zdmdfYXJjU3RhcnRBbmdsZSwgZW5kQW5nbGUgPSBkM19zdmdfYXJjRW5kQW5nbGUsIHBhZEFuZ2xlID0gZDNfc3ZnX2FyY1BhZEFuZ2xlO1xuICAgIGZ1bmN0aW9uIGFyYygpIHtcbiAgICAgIHZhciByMCA9IE1hdGgubWF4KDAsICtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgcjEgPSBNYXRoLm1heCgwLCArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSksIGEwID0gc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gaGFsZs+ALCBhMSA9IGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmz4AsIGRhID0gTWF0aC5hYnMoYTEgLSBhMCksIGN3ID0gYTAgPiBhMSA/IDAgOiAxO1xuICAgICAgaWYgKHIxIDwgcjApIHJjID0gcjEsIHIxID0gcjAsIHIwID0gcmM7XG4gICAgICBpZiAoZGEgPj0gz4TOtSkgcmV0dXJuIGNpcmNsZVNlZ21lbnQocjEsIGN3KSArIChyMCA/IGNpcmNsZVNlZ21lbnQocjAsIDEgLSBjdykgOiBcIlwiKSArIFwiWlwiO1xuICAgICAgdmFyIHJjLCBjciwgcnAsIGFwLCBwMCA9IDAsIHAxID0gMCwgeDAsIHkwLCB4MSwgeTEsIHgyLCB5MiwgeDMsIHkzLCBwYXRoID0gW107XG4gICAgICBpZiAoYXAgPSAoK3BhZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMCkgLyAyKSB7XG4gICAgICAgIHJwID0gcGFkUmFkaXVzID09PSBkM19zdmdfYXJjQXV0byA/IE1hdGguc3FydChyMCAqIHIwICsgcjEgKiByMSkgOiArcGFkUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIGlmICghY3cpIHAxICo9IC0xO1xuICAgICAgICBpZiAocjEpIHAxID0gZDNfYXNpbihycCAvIHIxICogTWF0aC5zaW4oYXApKTtcbiAgICAgICAgaWYgKHIwKSBwMCA9IGQzX2FzaW4ocnAgLyByMCAqIE1hdGguc2luKGFwKSk7XG4gICAgICB9XG4gICAgICBpZiAocjEpIHtcbiAgICAgICAgeDAgPSByMSAqIE1hdGguY29zKGEwICsgcDEpO1xuICAgICAgICB5MCA9IHIxICogTWF0aC5zaW4oYTAgKyBwMSk7XG4gICAgICAgIHgxID0gcjEgKiBNYXRoLmNvcyhhMSAtIHAxKTtcbiAgICAgICAgeTEgPSByMSAqIE1hdGguc2luKGExIC0gcDEpO1xuICAgICAgICB2YXIgbDEgPSBNYXRoLmFicyhhMSAtIGEwIC0gMiAqIHAxKSA8PSDPgCA/IDAgOiAxO1xuICAgICAgICBpZiAocDEgJiYgZDNfc3ZnX2FyY1N3ZWVwKHgwLCB5MCwgeDEsIHkxKSA9PT0gY3cgXiBsMSkge1xuICAgICAgICAgIHZhciBoMSA9IChhMCArIGExKSAvIDI7XG4gICAgICAgICAgeDAgPSByMSAqIE1hdGguY29zKGgxKTtcbiAgICAgICAgICB5MCA9IHIxICogTWF0aC5zaW4oaDEpO1xuICAgICAgICAgIHgxID0geTEgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4MCA9IHkwID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChyMCkge1xuICAgICAgICB4MiA9IHIwICogTWF0aC5jb3MoYTEgLSBwMCk7XG4gICAgICAgIHkyID0gcjAgKiBNYXRoLnNpbihhMSAtIHAwKTtcbiAgICAgICAgeDMgPSByMCAqIE1hdGguY29zKGEwICsgcDApO1xuICAgICAgICB5MyA9IHIwICogTWF0aC5zaW4oYTAgKyBwMCk7XG4gICAgICAgIHZhciBsMCA9IE1hdGguYWJzKGEwIC0gYTEgKyAyICogcDApIDw9IM+AID8gMCA6IDE7XG4gICAgICAgIGlmIChwMCAmJiBkM19zdmdfYXJjU3dlZXAoeDIsIHkyLCB4MywgeTMpID09PSAxIC0gY3cgXiBsMCkge1xuICAgICAgICAgIHZhciBoMCA9IChhMCArIGExKSAvIDI7XG4gICAgICAgICAgeDIgPSByMCAqIE1hdGguY29zKGgwKTtcbiAgICAgICAgICB5MiA9IHIwICogTWF0aC5zaW4oaDApO1xuICAgICAgICAgIHgzID0geTMgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4MiA9IHkyID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChkYSA+IM61ICYmIChyYyA9IE1hdGgubWluKE1hdGguYWJzKHIxIC0gcjApIC8gMiwgK2Nvcm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSkgPiAuMDAxKSB7XG4gICAgICAgIGNyID0gcjAgPCByMSBeIGN3ID8gMCA6IDE7XG4gICAgICAgIHZhciByYzEgPSByYywgcmMwID0gcmM7XG4gICAgICAgIGlmIChkYSA8IM+AKSB7XG4gICAgICAgICAgdmFyIG9jID0geDMgPT0gbnVsbCA/IFsgeDIsIHkyIF0gOiB4MSA9PSBudWxsID8gWyB4MCwgeTAgXSA6IGQzX2dlb21fcG9seWdvbkludGVyc2VjdChbIHgwLCB5MCBdLCBbIHgzLCB5MyBdLCBbIHgxLCB5MSBdLCBbIHgyLCB5MiBdKSwgYXggPSB4MCAtIG9jWzBdLCBheSA9IHkwIC0gb2NbMV0sIGJ4ID0geDEgLSBvY1swXSwgYnkgPSB5MSAtIG9jWzFdLCBrYyA9IDEgLyBNYXRoLnNpbihNYXRoLmFjb3MoKGF4ICogYnggKyBheSAqIGJ5KSAvIChNYXRoLnNxcnQoYXggKiBheCArIGF5ICogYXkpICogTWF0aC5zcXJ0KGJ4ICogYnggKyBieSAqIGJ5KSkpIC8gMiksIGxjID0gTWF0aC5zcXJ0KG9jWzBdICogb2NbMF0gKyBvY1sxXSAqIG9jWzFdKTtcbiAgICAgICAgICByYzAgPSBNYXRoLm1pbihyYywgKHIwIC0gbGMpIC8gKGtjIC0gMSkpO1xuICAgICAgICAgIHJjMSA9IE1hdGgubWluKHJjLCAocjEgLSBsYykgLyAoa2MgKyAxKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHgxICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgdDMwID0gZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzKHgzID09IG51bGwgPyBbIHgyLCB5MiBdIDogWyB4MywgeTMgXSwgWyB4MCwgeTAgXSwgcjEsIHJjMSwgY3cpLCB0MTIgPSBkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMoWyB4MSwgeTEgXSwgWyB4MiwgeTIgXSwgcjEsIHJjMSwgY3cpO1xuICAgICAgICAgIGlmIChyYyA9PT0gcmMxKSB7XG4gICAgICAgICAgICBwYXRoLnB1c2goXCJNXCIsIHQzMFswXSwgXCJBXCIsIHJjMSwgXCIsXCIsIHJjMSwgXCIgMCAwLFwiLCBjciwgXCIgXCIsIHQzMFsxXSwgXCJBXCIsIHIxLCBcIixcIiwgcjEsIFwiIDAgXCIsIDEgLSBjdyBeIGQzX3N2Z19hcmNTd2VlcCh0MzBbMV1bMF0sIHQzMFsxXVsxXSwgdDEyWzFdWzBdLCB0MTJbMV1bMV0pLCBcIixcIiwgY3csIFwiIFwiLCB0MTJbMV0sIFwiQVwiLCByYzEsIFwiLFwiLCByYzEsIFwiIDAgMCxcIiwgY3IsIFwiIFwiLCB0MTJbMF0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXRoLnB1c2goXCJNXCIsIHQzMFswXSwgXCJBXCIsIHJjMSwgXCIsXCIsIHJjMSwgXCIgMCAxLFwiLCBjciwgXCIgXCIsIHQxMlswXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhdGgucHVzaChcIk1cIiwgeDAsIFwiLFwiLCB5MCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHgzICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgdDAzID0gZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzKFsgeDAsIHkwIF0sIFsgeDMsIHkzIF0sIHIwLCAtcmMwLCBjdyksIHQyMSA9IGQzX3N2Z19hcmNDb3JuZXJUYW5nZW50cyhbIHgyLCB5MiBdLCB4MSA9PSBudWxsID8gWyB4MCwgeTAgXSA6IFsgeDEsIHkxIF0sIHIwLCAtcmMwLCBjdyk7XG4gICAgICAgICAgaWYgKHJjID09PSByYzApIHtcbiAgICAgICAgICAgIHBhdGgucHVzaChcIkxcIiwgdDIxWzBdLCBcIkFcIiwgcmMwLCBcIixcIiwgcmMwLCBcIiAwIDAsXCIsIGNyLCBcIiBcIiwgdDIxWzFdLCBcIkFcIiwgcjAsIFwiLFwiLCByMCwgXCIgMCBcIiwgY3cgXiBkM19zdmdfYXJjU3dlZXAodDIxWzFdWzBdLCB0MjFbMV1bMV0sIHQwM1sxXVswXSwgdDAzWzFdWzFdKSwgXCIsXCIsIDEgLSBjdywgXCIgXCIsIHQwM1sxXSwgXCJBXCIsIHJjMCwgXCIsXCIsIHJjMCwgXCIgMCAwLFwiLCBjciwgXCIgXCIsIHQwM1swXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhdGgucHVzaChcIkxcIiwgdDIxWzBdLCBcIkFcIiwgcmMwLCBcIixcIiwgcmMwLCBcIiAwIDAsXCIsIGNyLCBcIiBcIiwgdDAzWzBdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGF0aC5wdXNoKFwiTFwiLCB4MiwgXCIsXCIsIHkyKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGF0aC5wdXNoKFwiTVwiLCB4MCwgXCIsXCIsIHkwKTtcbiAgICAgICAgaWYgKHgxICE9IG51bGwpIHBhdGgucHVzaChcIkFcIiwgcjEsIFwiLFwiLCByMSwgXCIgMCBcIiwgbDEsIFwiLFwiLCBjdywgXCIgXCIsIHgxLCBcIixcIiwgeTEpO1xuICAgICAgICBwYXRoLnB1c2goXCJMXCIsIHgyLCBcIixcIiwgeTIpO1xuICAgICAgICBpZiAoeDMgIT0gbnVsbCkgcGF0aC5wdXNoKFwiQVwiLCByMCwgXCIsXCIsIHIwLCBcIiAwIFwiLCBsMCwgXCIsXCIsIDEgLSBjdywgXCIgXCIsIHgzLCBcIixcIiwgeTMpO1xuICAgICAgfVxuICAgICAgcGF0aC5wdXNoKFwiWlwiKTtcbiAgICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNpcmNsZVNlZ21lbnQocjEsIGN3KSB7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIHIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsXCIgKyBjdyArIFwiIDAsXCIgKyAtcjEgKyBcIkFcIiArIHIxICsgXCIsXCIgKyByMSArIFwiIDAgMSxcIiArIGN3ICsgXCIgMCxcIiArIHIxO1xuICAgIH1cbiAgICBhcmMuaW5uZXJSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbm5lclJhZGl1cztcbiAgICAgIGlubmVyUmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMub3V0ZXJSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvdXRlclJhZGl1cztcbiAgICAgIG91dGVyUmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29ybmVyUmFkaXVzO1xuICAgICAgY29ybmVyUmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMucGFkUmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkUmFkaXVzO1xuICAgICAgcGFkUmFkaXVzID0gdiA9PSBkM19zdmdfYXJjQXV0byA/IGQzX3N2Z19hcmNBdXRvIDogZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0YXJ0QW5nbGU7XG4gICAgICBzdGFydEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuZW5kQW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBlbmRBbmdsZTtcbiAgICAgIGVuZEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMucGFkQW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRBbmdsZTtcbiAgICAgIHBhZEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuY2VudHJvaWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByID0gKCtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiwgYSA9ICgrc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK2VuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiAtIGhhbGbPgDtcbiAgICAgIHJldHVybiBbIE1hdGguY29zKGEpICogciwgTWF0aC5zaW4oYSkgKiByIF07XG4gICAgfTtcbiAgICByZXR1cm4gYXJjO1xuICB9O1xuICB2YXIgZDNfc3ZnX2FyY0F1dG8gPSBcImF1dG9cIjtcbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY0lubmVyUmFkaXVzKGQpIHtcbiAgICByZXR1cm4gZC5pbm5lclJhZGl1cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjT3V0ZXJSYWRpdXMoZCkge1xuICAgIHJldHVybiBkLm91dGVyUmFkaXVzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNTdGFydEFuZ2xlKGQpIHtcbiAgICByZXR1cm4gZC5zdGFydEFuZ2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNFbmRBbmdsZShkKSB7XG4gICAgcmV0dXJuIGQuZW5kQW5nbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY1BhZEFuZ2xlKGQpIHtcbiAgICByZXR1cm4gZCAmJiBkLnBhZEFuZ2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNTd2VlcCh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHJldHVybiAoeDAgLSB4MSkgKiB5MCAtICh5MCAtIHkxKSAqIHgwID4gMCA/IDAgOiAxO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNDb3JuZXJUYW5nZW50cyhwMCwgcDEsIHIxLCByYywgY3cpIHtcbiAgICB2YXIgeDAxID0gcDBbMF0gLSBwMVswXSwgeTAxID0gcDBbMV0gLSBwMVsxXSwgbG8gPSAoY3cgPyByYyA6IC1yYykgLyBNYXRoLnNxcnQoeDAxICogeDAxICsgeTAxICogeTAxKSwgb3ggPSBsbyAqIHkwMSwgb3kgPSAtbG8gKiB4MDEsIHgxID0gcDBbMF0gKyBveCwgeTEgPSBwMFsxXSArIG95LCB4MiA9IHAxWzBdICsgb3gsIHkyID0gcDFbMV0gKyBveSwgeDMgPSAoeDEgKyB4MikgLyAyLCB5MyA9ICh5MSArIHkyKSAvIDIsIGR4ID0geDIgLSB4MSwgZHkgPSB5MiAtIHkxLCBkMiA9IGR4ICogZHggKyBkeSAqIGR5LCByID0gcjEgLSByYywgRCA9IHgxICogeTIgLSB4MiAqIHkxLCBkID0gKGR5IDwgMCA/IC0xIDogMSkgKiBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgciAqIHIgKiBkMiAtIEQgKiBEKSksIGN4MCA9IChEICogZHkgLSBkeCAqIGQpIC8gZDIsIGN5MCA9ICgtRCAqIGR4IC0gZHkgKiBkKSAvIGQyLCBjeDEgPSAoRCAqIGR5ICsgZHggKiBkKSAvIGQyLCBjeTEgPSAoLUQgKiBkeCArIGR5ICogZCkgLyBkMiwgZHgwID0gY3gwIC0geDMsIGR5MCA9IGN5MCAtIHkzLCBkeDEgPSBjeDEgLSB4MywgZHkxID0gY3kxIC0geTM7XG4gICAgaWYgKGR4MCAqIGR4MCArIGR5MCAqIGR5MCA+IGR4MSAqIGR4MSArIGR5MSAqIGR5MSkgY3gwID0gY3gxLCBjeTAgPSBjeTE7XG4gICAgcmV0dXJuIFsgWyBjeDAgLSBveCwgY3kwIC0gb3kgXSwgWyBjeDAgKiByMSAvIHIsIGN5MCAqIHIxIC8gciBdIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmUocHJvamVjdGlvbikge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WSwgZGVmaW5lZCA9IGQzX3RydWUsIGludGVycG9sYXRlID0gZDNfc3ZnX2xpbmVMaW5lYXIsIGludGVycG9sYXRlS2V5ID0gaW50ZXJwb2xhdGUua2V5LCB0ZW5zaW9uID0gLjc7XG4gICAgZnVuY3Rpb24gbGluZShkYXRhKSB7XG4gICAgICB2YXIgc2VnbWVudHMgPSBbXSwgcG9pbnRzID0gW10sIGkgPSAtMSwgbiA9IGRhdGEubGVuZ3RoLCBkLCBmeCA9IGQzX2Z1bmN0b3IoeCksIGZ5ID0gZDNfZnVuY3Rvcih5KTtcbiAgICAgIGZ1bmN0aW9uIHNlZ21lbnQoKSB7XG4gICAgICAgIHNlZ21lbnRzLnB1c2goXCJNXCIsIGludGVycG9sYXRlKHByb2plY3Rpb24ocG9pbnRzKSwgdGVuc2lvbikpO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKGRlZmluZWQuY2FsbCh0aGlzLCBkID0gZGF0YVtpXSwgaSkpIHtcbiAgICAgICAgICBwb2ludHMucHVzaChbICtmeC5jYWxsKHRoaXMsIGQsIGkpLCArZnkuY2FsbCh0aGlzLCBkLCBpKSBdKTtcbiAgICAgICAgfSBlbHNlIGlmIChwb2ludHMubGVuZ3RoKSB7XG4gICAgICAgICAgc2VnbWVudCgpO1xuICAgICAgICAgIHBvaW50cyA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocG9pbnRzLmxlbmd0aCkgc2VnbWVudCgpO1xuICAgICAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA/IHNlZ21lbnRzLmpvaW4oXCJcIikgOiBudWxsO1xuICAgIH1cbiAgICBsaW5lLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4O1xuICAgICAgeCA9IF87XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIGxpbmUueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHk7XG4gICAgICB5ID0gXztcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS5kZWZpbmVkID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZGVmaW5lZDtcbiAgICAgIGRlZmluZWQgPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICBsaW5lLmludGVycG9sYXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaW50ZXJwb2xhdGVLZXk7XG4gICAgICBpZiAodHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIikgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZSA9IF87IGVsc2UgaW50ZXJwb2xhdGVLZXkgPSAoaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUludGVycG9sYXRvcnMuZ2V0KF8pIHx8IGQzX3N2Z19saW5lTGluZWFyKS5rZXk7XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIGxpbmUudGVuc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRlbnNpb247XG4gICAgICB0ZW5zaW9uID0gXztcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgcmV0dXJuIGxpbmU7XG4gIH1cbiAgZDMuc3ZnLmxpbmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc3ZnX2xpbmUoZDNfaWRlbnRpdHkpO1xuICB9O1xuICB2YXIgZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzID0gZDMubWFwKHtcbiAgICBsaW5lYXI6IGQzX3N2Z19saW5lTGluZWFyLFxuICAgIFwibGluZWFyLWNsb3NlZFwiOiBkM19zdmdfbGluZUxpbmVhckNsb3NlZCxcbiAgICBzdGVwOiBkM19zdmdfbGluZVN0ZXAsXG4gICAgXCJzdGVwLWJlZm9yZVwiOiBkM19zdmdfbGluZVN0ZXBCZWZvcmUsXG4gICAgXCJzdGVwLWFmdGVyXCI6IGQzX3N2Z19saW5lU3RlcEFmdGVyLFxuICAgIGJhc2lzOiBkM19zdmdfbGluZUJhc2lzLFxuICAgIFwiYmFzaXMtb3BlblwiOiBkM19zdmdfbGluZUJhc2lzT3BlbixcbiAgICBcImJhc2lzLWNsb3NlZFwiOiBkM19zdmdfbGluZUJhc2lzQ2xvc2VkLFxuICAgIGJ1bmRsZTogZDNfc3ZnX2xpbmVCdW5kbGUsXG4gICAgY2FyZGluYWw6IGQzX3N2Z19saW5lQ2FyZGluYWwsXG4gICAgXCJjYXJkaW5hbC1vcGVuXCI6IGQzX3N2Z19saW5lQ2FyZGluYWxPcGVuLFxuICAgIFwiY2FyZGluYWwtY2xvc2VkXCI6IGQzX3N2Z19saW5lQ2FyZGluYWxDbG9zZWQsXG4gICAgbW9ub3RvbmU6IGQzX3N2Z19saW5lTW9ub3RvbmVcbiAgfSk7XG4gIGQzX3N2Z19saW5lSW50ZXJwb2xhdG9ycy5mb3JFYWNoKGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICB2YWx1ZS5rZXkgPSBrZXk7XG4gICAgdmFsdWUuY2xvc2VkID0gLy1jbG9zZWQkLy50ZXN0KGtleSk7XG4gIH0pO1xuICBmdW5jdGlvbiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA+IDEgPyBwb2ludHMuam9pbihcIkxcIikgOiBwb2ludHMgKyBcIlpcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUxpbmVhckNsb3NlZChwb2ludHMpIHtcbiAgICByZXR1cm4gcG9pbnRzLmpvaW4oXCJMXCIpICsgXCJaXCI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVTdGVwKHBvaW50cykge1xuICAgIHZhciBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGgsIHAgPSBwb2ludHNbMF0sIHBhdGggPSBbIHBbMF0sIFwiLFwiLCBwWzFdIF07XG4gICAgd2hpbGUgKCsraSA8IG4pIHBhdGgucHVzaChcIkhcIiwgKHBbMF0gKyAocCA9IHBvaW50c1tpXSlbMF0pIC8gMiwgXCJWXCIsIHBbMV0pO1xuICAgIGlmIChuID4gMSkgcGF0aC5wdXNoKFwiSFwiLCBwWzBdKTtcbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lU3RlcEJlZm9yZShwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoLCBwID0gcG9pbnRzWzBdLCBwYXRoID0gWyBwWzBdLCBcIixcIiwgcFsxXSBdO1xuICAgIHdoaWxlICgrK2kgPCBuKSBwYXRoLnB1c2goXCJWXCIsIChwID0gcG9pbnRzW2ldKVsxXSwgXCJIXCIsIHBbMF0pO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIocG9pbnRzKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aCwgcCA9IHBvaW50c1swXSwgcGF0aCA9IFsgcFswXSwgXCIsXCIsIHBbMV0gXTtcbiAgICB3aGlsZSAoKytpIDwgbikgcGF0aC5wdXNoKFwiSFwiLCAocCA9IHBvaW50c1tpXSlbMF0sIFwiVlwiLCBwWzFdKTtcbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQ2FyZGluYWxPcGVuKHBvaW50cywgdGVuc2lvbikge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgNCA/IGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgOiBwb2ludHNbMV0gKyBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLnNsaWNlKDEsIC0xKSwgZDNfc3ZnX2xpbmVDYXJkaW5hbFRhbmdlbnRzKHBvaW50cywgdGVuc2lvbikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQ2FyZGluYWxDbG9zZWQocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPCAzID8gZDNfc3ZnX2xpbmVMaW5lYXJDbG9zZWQocG9pbnRzKSA6IHBvaW50c1swXSArIGQzX3N2Z19saW5lSGVybWl0ZSgocG9pbnRzLnB1c2gocG9pbnRzWzBdKSwgXG4gICAgcG9pbnRzKSwgZDNfc3ZnX2xpbmVDYXJkaW5hbFRhbmdlbnRzKFsgcG9pbnRzW3BvaW50cy5sZW5ndGggLSAyXSBdLmNvbmNhdChwb2ludHMsIFsgcG9pbnRzWzFdIF0pLCB0ZW5zaW9uKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbChwb2ludHMsIHRlbnNpb24pIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA8IDMgPyBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpIDogcG9pbnRzWzBdICsgZDNfc3ZnX2xpbmVIZXJtaXRlKHBvaW50cywgZDNfc3ZnX2xpbmVDYXJkaW5hbFRhbmdlbnRzKHBvaW50cywgdGVuc2lvbikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lSGVybWl0ZShwb2ludHMsIHRhbmdlbnRzKSB7XG4gICAgaWYgKHRhbmdlbnRzLmxlbmd0aCA8IDEgfHwgcG9pbnRzLmxlbmd0aCAhPSB0YW5nZW50cy5sZW5ndGggJiYgcG9pbnRzLmxlbmd0aCAhPSB0YW5nZW50cy5sZW5ndGggKyAyKSB7XG4gICAgICByZXR1cm4gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKTtcbiAgICB9XG4gICAgdmFyIHF1YWQgPSBwb2ludHMubGVuZ3RoICE9IHRhbmdlbnRzLmxlbmd0aCwgcGF0aCA9IFwiXCIsIHAwID0gcG9pbnRzWzBdLCBwID0gcG9pbnRzWzFdLCB0MCA9IHRhbmdlbnRzWzBdLCB0ID0gdDAsIHBpID0gMTtcbiAgICBpZiAocXVhZCkge1xuICAgICAgcGF0aCArPSBcIlFcIiArIChwWzBdIC0gdDBbMF0gKiAyIC8gMykgKyBcIixcIiArIChwWzFdIC0gdDBbMV0gKiAyIC8gMykgKyBcIixcIiArIHBbMF0gKyBcIixcIiArIHBbMV07XG4gICAgICBwMCA9IHBvaW50c1sxXTtcbiAgICAgIHBpID0gMjtcbiAgICB9XG4gICAgaWYgKHRhbmdlbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHQgPSB0YW5nZW50c1sxXTtcbiAgICAgIHAgPSBwb2ludHNbcGldO1xuICAgICAgcGkrKztcbiAgICAgIHBhdGggKz0gXCJDXCIgKyAocDBbMF0gKyB0MFswXSkgKyBcIixcIiArIChwMFsxXSArIHQwWzFdKSArIFwiLFwiICsgKHBbMF0gLSB0WzBdKSArIFwiLFwiICsgKHBbMV0gLSB0WzFdKSArIFwiLFwiICsgcFswXSArIFwiLFwiICsgcFsxXTtcbiAgICAgIGZvciAodmFyIGkgPSAyOyBpIDwgdGFuZ2VudHMubGVuZ3RoOyBpKyssIHBpKyspIHtcbiAgICAgICAgcCA9IHBvaW50c1twaV07XG4gICAgICAgIHQgPSB0YW5nZW50c1tpXTtcbiAgICAgICAgcGF0aCArPSBcIlNcIiArIChwWzBdIC0gdFswXSkgKyBcIixcIiArIChwWzFdIC0gdFsxXSkgKyBcIixcIiArIHBbMF0gKyBcIixcIiArIHBbMV07XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChxdWFkKSB7XG4gICAgICB2YXIgbHAgPSBwb2ludHNbcGldO1xuICAgICAgcGF0aCArPSBcIlFcIiArIChwWzBdICsgdFswXSAqIDIgLyAzKSArIFwiLFwiICsgKHBbMV0gKyB0WzFdICogMiAvIDMpICsgXCIsXCIgKyBscFswXSArIFwiLFwiICsgbHBbMV07XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQ2FyZGluYWxUYW5nZW50cyhwb2ludHMsIHRlbnNpb24pIHtcbiAgICB2YXIgdGFuZ2VudHMgPSBbXSwgYSA9ICgxIC0gdGVuc2lvbikgLyAyLCBwMCwgcDEgPSBwb2ludHNbMF0sIHAyID0gcG9pbnRzWzFdLCBpID0gMSwgbiA9IHBvaW50cy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHAwID0gcDE7XG4gICAgICBwMSA9IHAyO1xuICAgICAgcDIgPSBwb2ludHNbaV07XG4gICAgICB0YW5nZW50cy5wdXNoKFsgYSAqIChwMlswXSAtIHAwWzBdKSwgYSAqIChwMlsxXSAtIHAwWzFdKSBdKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhbmdlbnRzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQmFzaXMocG9pbnRzKSB7XG4gICAgaWYgKHBvaW50cy5sZW5ndGggPCAzKSByZXR1cm4gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKTtcbiAgICB2YXIgaSA9IDEsIG4gPSBwb2ludHMubGVuZ3RoLCBwaSA9IHBvaW50c1swXSwgeDAgPSBwaVswXSwgeTAgPSBwaVsxXSwgcHggPSBbIHgwLCB4MCwgeDAsIChwaSA9IHBvaW50c1sxXSlbMF0gXSwgcHkgPSBbIHkwLCB5MCwgeTAsIHBpWzFdIF0sIHBhdGggPSBbIHgwLCBcIixcIiwgeTAsIFwiTFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHkpIF07XG4gICAgcG9pbnRzLnB1c2gocG9pbnRzW24gLSAxXSk7XG4gICAgd2hpbGUgKCsraSA8PSBuKSB7XG4gICAgICBwaSA9IHBvaW50c1tpXTtcbiAgICAgIHB4LnNoaWZ0KCk7XG4gICAgICBweC5wdXNoKHBpWzBdKTtcbiAgICAgIHB5LnNoaWZ0KCk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICAgIGQzX3N2Z19saW5lQmFzaXNCZXppZXIocGF0aCwgcHgsIHB5KTtcbiAgICB9XG4gICAgcG9pbnRzLnBvcCgpO1xuICAgIHBhdGgucHVzaChcIkxcIiwgcGkpO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpc09wZW4ocG9pbnRzKSB7XG4gICAgaWYgKHBvaW50cy5sZW5ndGggPCA0KSByZXR1cm4gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKTtcbiAgICB2YXIgcGF0aCA9IFtdLCBpID0gLTEsIG4gPSBwb2ludHMubGVuZ3RoLCBwaSwgcHggPSBbIDAgXSwgcHkgPSBbIDAgXTtcbiAgICB3aGlsZSAoKytpIDwgMykge1xuICAgICAgcGkgPSBwb2ludHNbaV07XG4gICAgICBweC5wdXNoKHBpWzBdKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgIH1cbiAgICBwYXRoLnB1c2goZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweCkgKyBcIixcIiArIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHkpKTtcbiAgICAtLWk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHBpID0gcG9pbnRzW2ldO1xuICAgICAgcHguc2hpZnQoKTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkuc2hpZnQoKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgICAgZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCBweCwgcHkpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQmFzaXNDbG9zZWQocG9pbnRzKSB7XG4gICAgdmFyIHBhdGgsIGkgPSAtMSwgbiA9IHBvaW50cy5sZW5ndGgsIG0gPSBuICsgNCwgcGksIHB4ID0gW10sIHB5ID0gW107XG4gICAgd2hpbGUgKCsraSA8IDQpIHtcbiAgICAgIHBpID0gcG9pbnRzW2kgJSBuXTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgfVxuICAgIHBhdGggPSBbIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweSkgXTtcbiAgICAtLWk7XG4gICAgd2hpbGUgKCsraSA8IG0pIHtcbiAgICAgIHBpID0gcG9pbnRzW2kgJSBuXTtcbiAgICAgIHB4LnNoaWZ0KCk7XG4gICAgICBweC5wdXNoKHBpWzBdKTtcbiAgICAgIHB5LnNoaWZ0KCk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICAgIGQzX3N2Z19saW5lQmFzaXNCZXppZXIocGF0aCwgcHgsIHB5KTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUJ1bmRsZShwb2ludHMsIHRlbnNpb24pIHtcbiAgICB2YXIgbiA9IHBvaW50cy5sZW5ndGggLSAxO1xuICAgIGlmIChuKSB7XG4gICAgICB2YXIgeDAgPSBwb2ludHNbMF1bMF0sIHkwID0gcG9pbnRzWzBdWzFdLCBkeCA9IHBvaW50c1tuXVswXSAtIHgwLCBkeSA9IHBvaW50c1tuXVsxXSAtIHkwLCBpID0gLTEsIHAsIHQ7XG4gICAgICB3aGlsZSAoKytpIDw9IG4pIHtcbiAgICAgICAgcCA9IHBvaW50c1tpXTtcbiAgICAgICAgdCA9IGkgLyBuO1xuICAgICAgICBwWzBdID0gdGVuc2lvbiAqIHBbMF0gKyAoMSAtIHRlbnNpb24pICogKHgwICsgdCAqIGR4KTtcbiAgICAgICAgcFsxXSA9IHRlbnNpb24gKiBwWzFdICsgKDEgLSB0ZW5zaW9uKSAqICh5MCArIHQgKiBkeSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zdmdfbGluZUJhc2lzKHBvaW50cyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVEb3Q0KGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXSArIGFbMl0gKiBiWzJdICsgYVszXSAqIGJbM107XG4gIH1cbiAgdmFyIGQzX3N2Z19saW5lQmFzaXNCZXppZXIxID0gWyAwLCAyIC8gMywgMSAvIDMsIDAgXSwgZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIgPSBbIDAsIDEgLyAzLCAyIC8gMywgMCBdLCBkM19zdmdfbGluZUJhc2lzQmV6aWVyMyA9IFsgMCwgMSAvIDYsIDIgLyAzLCAxIC8gNiBdO1xuICBmdW5jdGlvbiBkM19zdmdfbGluZUJhc2lzQmV6aWVyKHBhdGgsIHgsIHkpIHtcbiAgICBwYXRoLnB1c2goXCJDXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMSwgeCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjEsIHkpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIyLCB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMiwgeSksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCB5KSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVTbG9wZShwMCwgcDEpIHtcbiAgICByZXR1cm4gKHAxWzFdIC0gcDBbMV0pIC8gKHAxWzBdIC0gcDBbMF0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lRmluaXRlRGlmZmVyZW5jZXMocG9pbnRzKSB7XG4gICAgdmFyIGkgPSAwLCBqID0gcG9pbnRzLmxlbmd0aCAtIDEsIG0gPSBbXSwgcDAgPSBwb2ludHNbMF0sIHAxID0gcG9pbnRzWzFdLCBkID0gbVswXSA9IGQzX3N2Z19saW5lU2xvcGUocDAsIHAxKTtcbiAgICB3aGlsZSAoKytpIDwgaikge1xuICAgICAgbVtpXSA9IChkICsgKGQgPSBkM19zdmdfbGluZVNsb3BlKHAwID0gcDEsIHAxID0gcG9pbnRzW2kgKyAxXSkpKSAvIDI7XG4gICAgfVxuICAgIG1baV0gPSBkO1xuICAgIHJldHVybiBtO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lTW9ub3RvbmVUYW5nZW50cyhwb2ludHMpIHtcbiAgICB2YXIgdGFuZ2VudHMgPSBbXSwgZCwgYSwgYiwgcywgbSA9IGQzX3N2Z19saW5lRmluaXRlRGlmZmVyZW5jZXMocG9pbnRzKSwgaSA9IC0xLCBqID0gcG9pbnRzLmxlbmd0aCAtIDE7XG4gICAgd2hpbGUgKCsraSA8IGopIHtcbiAgICAgIGQgPSBkM19zdmdfbGluZVNsb3BlKHBvaW50c1tpXSwgcG9pbnRzW2kgKyAxXSk7XG4gICAgICBpZiAoYWJzKGQpIDwgzrUpIHtcbiAgICAgICAgbVtpXSA9IG1baSArIDFdID0gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGEgPSBtW2ldIC8gZDtcbiAgICAgICAgYiA9IG1baSArIDFdIC8gZDtcbiAgICAgICAgcyA9IGEgKiBhICsgYiAqIGI7XG4gICAgICAgIGlmIChzID4gOSkge1xuICAgICAgICAgIHMgPSBkICogMyAvIE1hdGguc3FydChzKTtcbiAgICAgICAgICBtW2ldID0gcyAqIGE7XG4gICAgICAgICAgbVtpICsgMV0gPSBzICogYjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpID0gLTE7XG4gICAgd2hpbGUgKCsraSA8PSBqKSB7XG4gICAgICBzID0gKHBvaW50c1tNYXRoLm1pbihqLCBpICsgMSldWzBdIC0gcG9pbnRzW01hdGgubWF4KDAsIGkgLSAxKV1bMF0pIC8gKDYgKiAoMSArIG1baV0gKiBtW2ldKSk7XG4gICAgICB0YW5nZW50cy5wdXNoKFsgcyB8fCAwLCBtW2ldICogcyB8fCAwIF0pO1xuICAgIH1cbiAgICByZXR1cm4gdGFuZ2VudHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVNb25vdG9uZShwb2ludHMpIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA8IDMgPyBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpIDogcG9pbnRzWzBdICsgZDNfc3ZnX2xpbmVIZXJtaXRlKHBvaW50cywgZDNfc3ZnX2xpbmVNb25vdG9uZVRhbmdlbnRzKHBvaW50cykpO1xuICB9XG4gIGQzLnN2Zy5saW5lLnJhZGlhbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBsaW5lID0gZDNfc3ZnX2xpbmUoZDNfc3ZnX2xpbmVSYWRpYWwpO1xuICAgIGxpbmUucmFkaXVzID0gbGluZS54LCBkZWxldGUgbGluZS54O1xuICAgIGxpbmUuYW5nbGUgPSBsaW5lLnksIGRlbGV0ZSBsaW5lLnk7XG4gICAgcmV0dXJuIGxpbmU7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lUmFkaWFsKHBvaW50cykge1xuICAgIHZhciBwb2ludCwgaSA9IC0xLCBuID0gcG9pbnRzLmxlbmd0aCwgciwgYTtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgcG9pbnQgPSBwb2ludHNbaV07XG4gICAgICByID0gcG9pbnRbMF07XG4gICAgICBhID0gcG9pbnRbMV0gLSBoYWxmz4A7XG4gICAgICBwb2ludFswXSA9IHIgKiBNYXRoLmNvcyhhKTtcbiAgICAgIHBvaW50WzFdID0gciAqIE1hdGguc2luKGEpO1xuICAgIH1cbiAgICByZXR1cm4gcG9pbnRzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmVhKHByb2plY3Rpb24pIHtcbiAgICB2YXIgeDAgPSBkM19nZW9tX3BvaW50WCwgeDEgPSBkM19nZW9tX3BvaW50WCwgeTAgPSAwLCB5MSA9IGQzX2dlb21fcG9pbnRZLCBkZWZpbmVkID0gZDNfdHJ1ZSwgaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUxpbmVhciwgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZS5rZXksIGludGVycG9sYXRlUmV2ZXJzZSA9IGludGVycG9sYXRlLCBMID0gXCJMXCIsIHRlbnNpb24gPSAuNztcbiAgICBmdW5jdGlvbiBhcmVhKGRhdGEpIHtcbiAgICAgIHZhciBzZWdtZW50cyA9IFtdLCBwb2ludHMwID0gW10sIHBvaW50czEgPSBbXSwgaSA9IC0xLCBuID0gZGF0YS5sZW5ndGgsIGQsIGZ4MCA9IGQzX2Z1bmN0b3IoeDApLCBmeTAgPSBkM19mdW5jdG9yKHkwKSwgZngxID0geDAgPT09IHgxID8gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB4O1xuICAgICAgfSA6IGQzX2Z1bmN0b3IoeDEpLCBmeTEgPSB5MCA9PT0geTEgPyBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHk7XG4gICAgICB9IDogZDNfZnVuY3Rvcih5MSksIHgsIHk7XG4gICAgICBmdW5jdGlvbiBzZWdtZW50KCkge1xuICAgICAgICBzZWdtZW50cy5wdXNoKFwiTVwiLCBpbnRlcnBvbGF0ZShwcm9qZWN0aW9uKHBvaW50czEpLCB0ZW5zaW9uKSwgTCwgaW50ZXJwb2xhdGVSZXZlcnNlKHByb2plY3Rpb24ocG9pbnRzMC5yZXZlcnNlKCkpLCB0ZW5zaW9uKSwgXCJaXCIpO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKGRlZmluZWQuY2FsbCh0aGlzLCBkID0gZGF0YVtpXSwgaSkpIHtcbiAgICAgICAgICBwb2ludHMwLnB1c2goWyB4ID0gK2Z4MC5jYWxsKHRoaXMsIGQsIGkpLCB5ID0gK2Z5MC5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICAgIHBvaW50czEucHVzaChbICtmeDEuY2FsbCh0aGlzLCBkLCBpKSwgK2Z5MS5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBvaW50czAubGVuZ3RoKSB7XG4gICAgICAgICAgc2VnbWVudCgpO1xuICAgICAgICAgIHBvaW50czAgPSBbXTtcbiAgICAgICAgICBwb2ludHMxID0gW107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwb2ludHMwLmxlbmd0aCkgc2VnbWVudCgpO1xuICAgICAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA/IHNlZ21lbnRzLmpvaW4oXCJcIikgOiBudWxsO1xuICAgIH1cbiAgICBhcmVhLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MTtcbiAgICAgIHgwID0geDEgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLngwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDA7XG4gICAgICB4MCA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueDEgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MTtcbiAgICAgIHgxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MCA9IHkxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS55MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHkwO1xuICAgICAgeTAgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnkxID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MSA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRlZmluZWQ7XG4gICAgICBkZWZpbmVkID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGludGVycG9sYXRlS2V5O1xuICAgICAgaWYgKHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIpIGludGVycG9sYXRlS2V5ID0gaW50ZXJwb2xhdGUgPSBfOyBlbHNlIGludGVycG9sYXRlS2V5ID0gKGludGVycG9sYXRlID0gZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzLmdldChfKSB8fCBkM19zdmdfbGluZUxpbmVhcikua2V5O1xuICAgICAgaW50ZXJwb2xhdGVSZXZlcnNlID0gaW50ZXJwb2xhdGUucmV2ZXJzZSB8fCBpbnRlcnBvbGF0ZTtcbiAgICAgIEwgPSBpbnRlcnBvbGF0ZS5jbG9zZWQgPyBcIk1cIiA6IFwiTFwiO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnRlbnNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0ZW5zaW9uO1xuICAgICAgdGVuc2lvbiA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIHJldHVybiBhcmVhO1xuICB9XG4gIGQzX3N2Z19saW5lU3RlcEJlZm9yZS5yZXZlcnNlID0gZDNfc3ZnX2xpbmVTdGVwQWZ0ZXI7XG4gIGQzX3N2Z19saW5lU3RlcEFmdGVyLnJldmVyc2UgPSBkM19zdmdfbGluZVN0ZXBCZWZvcmU7XG4gIGQzLnN2Zy5hcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3N2Z19hcmVhKGQzX2lkZW50aXR5KTtcbiAgfTtcbiAgZDMuc3ZnLmFyZWEucmFkaWFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZWEgPSBkM19zdmdfYXJlYShkM19zdmdfbGluZVJhZGlhbCk7XG4gICAgYXJlYS5yYWRpdXMgPSBhcmVhLngsIGRlbGV0ZSBhcmVhLng7XG4gICAgYXJlYS5pbm5lclJhZGl1cyA9IGFyZWEueDAsIGRlbGV0ZSBhcmVhLngwO1xuICAgIGFyZWEub3V0ZXJSYWRpdXMgPSBhcmVhLngxLCBkZWxldGUgYXJlYS54MTtcbiAgICBhcmVhLmFuZ2xlID0gYXJlYS55LCBkZWxldGUgYXJlYS55O1xuICAgIGFyZWEuc3RhcnRBbmdsZSA9IGFyZWEueTAsIGRlbGV0ZSBhcmVhLnkwO1xuICAgIGFyZWEuZW5kQW5nbGUgPSBhcmVhLnkxLCBkZWxldGUgYXJlYS55MTtcbiAgICByZXR1cm4gYXJlYTtcbiAgfTtcbiAgZDMuc3ZnLmNob3JkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvdXJjZSA9IGQzX3NvdXJjZSwgdGFyZ2V0ID0gZDNfdGFyZ2V0LCByYWRpdXMgPSBkM19zdmdfY2hvcmRSYWRpdXMsIHN0YXJ0QW5nbGUgPSBkM19zdmdfYXJjU3RhcnRBbmdsZSwgZW5kQW5nbGUgPSBkM19zdmdfYXJjRW5kQW5nbGU7XG4gICAgZnVuY3Rpb24gY2hvcmQoZCwgaSkge1xuICAgICAgdmFyIHMgPSBzdWJncm91cCh0aGlzLCBzb3VyY2UsIGQsIGkpLCB0ID0gc3ViZ3JvdXAodGhpcywgdGFyZ2V0LCBkLCBpKTtcbiAgICAgIHJldHVybiBcIk1cIiArIHMucDAgKyBhcmMocy5yLCBzLnAxLCBzLmExIC0gcy5hMCkgKyAoZXF1YWxzKHMsIHQpID8gY3VydmUocy5yLCBzLnAxLCBzLnIsIHMucDApIDogY3VydmUocy5yLCBzLnAxLCB0LnIsIHQucDApICsgYXJjKHQuciwgdC5wMSwgdC5hMSAtIHQuYTApICsgY3VydmUodC5yLCB0LnAxLCBzLnIsIHMucDApKSArIFwiWlwiO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJncm91cChzZWxmLCBmLCBkLCBpKSB7XG4gICAgICB2YXIgc3ViZ3JvdXAgPSBmLmNhbGwoc2VsZiwgZCwgaSksIHIgPSByYWRpdXMuY2FsbChzZWxmLCBzdWJncm91cCwgaSksIGEwID0gc3RhcnRBbmdsZS5jYWxsKHNlbGYsIHN1Ymdyb3VwLCBpKSAtIGhhbGbPgCwgYTEgPSBlbmRBbmdsZS5jYWxsKHNlbGYsIHN1Ymdyb3VwLCBpKSAtIGhhbGbPgDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHI6IHIsXG4gICAgICAgIGEwOiBhMCxcbiAgICAgICAgYTE6IGExLFxuICAgICAgICBwMDogWyByICogTWF0aC5jb3MoYTApLCByICogTWF0aC5zaW4oYTApIF0sXG4gICAgICAgIHAxOiBbIHIgKiBNYXRoLmNvcyhhMSksIHIgKiBNYXRoLnNpbihhMSkgXVxuICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICAgIHJldHVybiBhLmEwID09IGIuYTAgJiYgYS5hMSA9PSBiLmExO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhcmMociwgcCwgYSkge1xuICAgICAgcmV0dXJuIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiIDAgXCIgKyArKGEgPiDPgCkgKyBcIiwxIFwiICsgcDtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3VydmUocjAsIHAwLCByMSwgcDEpIHtcbiAgICAgIHJldHVybiBcIlEgMCwwIFwiICsgcDE7XG4gICAgfVxuICAgIGNob3JkLnJhZGl1cyA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhZGl1cztcbiAgICAgIHJhZGl1cyA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zb3VyY2UgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3VyY2U7XG4gICAgICBzb3VyY2UgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQudGFyZ2V0ID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGFyZ2V0O1xuICAgICAgdGFyZ2V0ID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGFydEFuZ2xlO1xuICAgICAgc3RhcnRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5lbmRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGVuZEFuZ2xlO1xuICAgICAgZW5kQW5nbGUgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgcmV0dXJuIGNob3JkO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfY2hvcmRSYWRpdXMoZCkge1xuICAgIHJldHVybiBkLnJhZGl1cztcbiAgfVxuICBkMy5zdmcuZGlhZ29uYWwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc291cmNlID0gZDNfc291cmNlLCB0YXJnZXQgPSBkM190YXJnZXQsIHByb2plY3Rpb24gPSBkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uO1xuICAgIGZ1bmN0aW9uIGRpYWdvbmFsKGQsIGkpIHtcbiAgICAgIHZhciBwMCA9IHNvdXJjZS5jYWxsKHRoaXMsIGQsIGkpLCBwMyA9IHRhcmdldC5jYWxsKHRoaXMsIGQsIGkpLCBtID0gKHAwLnkgKyBwMy55KSAvIDIsIHAgPSBbIHAwLCB7XG4gICAgICAgIHg6IHAwLngsXG4gICAgICAgIHk6IG1cbiAgICAgIH0sIHtcbiAgICAgICAgeDogcDMueCxcbiAgICAgICAgeTogbVxuICAgICAgfSwgcDMgXTtcbiAgICAgIHAgPSBwLm1hcChwcm9qZWN0aW9uKTtcbiAgICAgIHJldHVybiBcIk1cIiArIHBbMF0gKyBcIkNcIiArIHBbMV0gKyBcIiBcIiArIHBbMl0gKyBcIiBcIiArIHBbM107XG4gICAgfVxuICAgIGRpYWdvbmFsLnNvdXJjZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvdXJjZTtcbiAgICAgIHNvdXJjZSA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gZGlhZ29uYWw7XG4gICAgfTtcbiAgICBkaWFnb25hbC50YXJnZXQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gICAgICB0YXJnZXQgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIGRpYWdvbmFsO1xuICAgIH07XG4gICAgZGlhZ29uYWwucHJvamVjdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByb2plY3Rpb247XG4gICAgICBwcm9qZWN0aW9uID0geDtcbiAgICAgIHJldHVybiBkaWFnb25hbDtcbiAgICB9O1xuICAgIHJldHVybiBkaWFnb25hbDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2RpYWdvbmFsUHJvamVjdGlvbihkKSB7XG4gICAgcmV0dXJuIFsgZC54LCBkLnkgXTtcbiAgfVxuICBkMy5zdmcuZGlhZ29uYWwucmFkaWFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRpYWdvbmFsID0gZDMuc3ZnLmRpYWdvbmFsKCksIHByb2plY3Rpb24gPSBkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uLCBwcm9qZWN0aW9uXyA9IGRpYWdvbmFsLnByb2plY3Rpb247XG4gICAgZGlhZ29uYWwucHJvamVjdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gcHJvamVjdGlvbl8oZDNfc3ZnX2RpYWdvbmFsUmFkaWFsUHJvamVjdGlvbihwcm9qZWN0aW9uID0geCkpIDogcHJvamVjdGlvbjtcbiAgICB9O1xuICAgIHJldHVybiBkaWFnb25hbDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2RpYWdvbmFsUmFkaWFsUHJvamVjdGlvbihwcm9qZWN0aW9uKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGQgPSBwcm9qZWN0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHIgPSBkWzBdLCBhID0gZFsxXSAtIGhhbGbPgDtcbiAgICAgIHJldHVybiBbIHIgKiBNYXRoLmNvcyhhKSwgciAqIE1hdGguc2luKGEpIF07XG4gICAgfTtcbiAgfVxuICBkMy5zdmcuc3ltYm9sID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHR5cGUgPSBkM19zdmdfc3ltYm9sVHlwZSwgc2l6ZSA9IGQzX3N2Z19zeW1ib2xTaXplO1xuICAgIGZ1bmN0aW9uIHN5bWJvbChkLCBpKSB7XG4gICAgICByZXR1cm4gKGQzX3N2Z19zeW1ib2xzLmdldCh0eXBlLmNhbGwodGhpcywgZCwgaSkpIHx8IGQzX3N2Z19zeW1ib2xDaXJjbGUpKHNpemUuY2FsbCh0aGlzLCBkLCBpKSk7XG4gICAgfVxuICAgIHN5bWJvbC50eXBlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdHlwZTtcbiAgICAgIHR5cGUgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIHN5bWJvbDtcbiAgICB9O1xuICAgIHN5bWJvbC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIHN5bWJvbDtcbiAgICB9O1xuICAgIHJldHVybiBzeW1ib2w7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19zeW1ib2xTaXplKCkge1xuICAgIHJldHVybiA2NDtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfc3ltYm9sVHlwZSgpIHtcbiAgICByZXR1cm4gXCJjaXJjbGVcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfc3ltYm9sQ2lyY2xlKHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gz4ApO1xuICAgIHJldHVybiBcIk0wLFwiICsgciArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiIDAgMSwxIDAsXCIgKyAtciArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiIDAgMSwxIDAsXCIgKyByICsgXCJaXCI7XG4gIH1cbiAgdmFyIGQzX3N2Z19zeW1ib2xzID0gZDMubWFwKHtcbiAgICBjaXJjbGU6IGQzX3N2Z19zeW1ib2xDaXJjbGUsXG4gICAgY3Jvc3M6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyA1KSAvIDI7XG4gICAgICByZXR1cm4gXCJNXCIgKyAtMyAqIHIgKyBcIixcIiArIC1yICsgXCJIXCIgKyAtciArIFwiVlwiICsgLTMgKiByICsgXCJIXCIgKyByICsgXCJWXCIgKyAtciArIFwiSFwiICsgMyAqIHIgKyBcIlZcIiArIHIgKyBcIkhcIiArIHIgKyBcIlZcIiArIDMgKiByICsgXCJIXCIgKyAtciArIFwiVlwiICsgciArIFwiSFwiICsgLTMgKiByICsgXCJaXCI7XG4gICAgfSxcbiAgICBkaWFtb25kOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgcnkgPSBNYXRoLnNxcnQoc2l6ZSAvICgyICogZDNfc3ZnX3N5bWJvbFRhbjMwKSksIHJ4ID0gcnkgKiBkM19zdmdfc3ltYm9sVGFuMzA7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIC1yeSArIFwiTFwiICsgcnggKyBcIiwwXCIgKyBcIiAwLFwiICsgcnkgKyBcIiBcIiArIC1yeCArIFwiLDBcIiArIFwiWlwiO1xuICAgIH0sXG4gICAgc3F1YXJlOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgciA9IE1hdGguc3FydChzaXplKSAvIDI7XG4gICAgICByZXR1cm4gXCJNXCIgKyAtciArIFwiLFwiICsgLXIgKyBcIkxcIiArIHIgKyBcIixcIiArIC1yICsgXCIgXCIgKyByICsgXCIsXCIgKyByICsgXCIgXCIgKyAtciArIFwiLFwiICsgciArIFwiWlwiO1xuICAgIH0sXG4gICAgXCJ0cmlhbmdsZS1kb3duXCI6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByeCA9IE1hdGguc3FydChzaXplIC8gZDNfc3ZnX3N5bWJvbFNxcnQzKSwgcnkgPSByeCAqIGQzX3N2Z19zeW1ib2xTcXJ0MyAvIDI7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIHJ5ICsgXCJMXCIgKyByeCArIFwiLFwiICsgLXJ5ICsgXCIgXCIgKyAtcnggKyBcIixcIiArIC1yeSArIFwiWlwiO1xuICAgIH0sXG4gICAgXCJ0cmlhbmdsZS11cFwiOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgcnggPSBNYXRoLnNxcnQoc2l6ZSAvIGQzX3N2Z19zeW1ib2xTcXJ0MyksIHJ5ID0gcnggKiBkM19zdmdfc3ltYm9sU3FydDMgLyAyO1xuICAgICAgcmV0dXJuIFwiTTAsXCIgKyAtcnkgKyBcIkxcIiArIHJ4ICsgXCIsXCIgKyByeSArIFwiIFwiICsgLXJ4ICsgXCIsXCIgKyByeSArIFwiWlwiO1xuICAgIH1cbiAgfSk7XG4gIGQzLnN2Zy5zeW1ib2xUeXBlcyA9IGQzX3N2Z19zeW1ib2xzLmtleXMoKTtcbiAgdmFyIGQzX3N2Z19zeW1ib2xTcXJ0MyA9IE1hdGguc3FydCgzKSwgZDNfc3ZnX3N5bWJvbFRhbjMwID0gTWF0aC50YW4oMzAgKiBkM19yYWRpYW5zKTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnRyYW5zaXRpb24gPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGlkID0gZDNfdHJhbnNpdGlvbkluaGVyaXRJZCB8fCArK2QzX3RyYW5zaXRpb25JZCwgbnMgPSBkM190cmFuc2l0aW9uTmFtZXNwYWNlKG5hbWUpLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIG5vZGUsIHRyYW5zaXRpb24gPSBkM190cmFuc2l0aW9uSW5oZXJpdCB8fCB7XG4gICAgICB0aW1lOiBEYXRlLm5vdygpLFxuICAgICAgZWFzZTogZDNfZWFzZV9jdWJpY0luT3V0LFxuICAgICAgZGVsYXk6IDAsXG4gICAgICBkdXJhdGlvbjogMjUwXG4gICAgfTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkgZDNfdHJhbnNpdGlvbk5vZGUobm9kZSwgaSwgbnMsIGlkLCB0cmFuc2l0aW9uKTtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCBucywgaWQpO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaW50ZXJydXB0ID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiB0aGlzLmVhY2gobmFtZSA9PSBudWxsID8gZDNfc2VsZWN0aW9uX2ludGVycnVwdCA6IGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHROUyhkM190cmFuc2l0aW9uTmFtZXNwYWNlKG5hbWUpKSk7XG4gIH07XG4gIHZhciBkM19zZWxlY3Rpb25faW50ZXJydXB0ID0gZDNfc2VsZWN0aW9uX2ludGVycnVwdE5TKGQzX3RyYW5zaXRpb25OYW1lc3BhY2UoKSk7XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHROUyhucykge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBsb2NrLCBhY3RpdmVJZCwgYWN0aXZlO1xuICAgICAgaWYgKChsb2NrID0gdGhpc1tuc10pICYmIChhY3RpdmUgPSBsb2NrW2FjdGl2ZUlkID0gbG9jay5hY3RpdmVdKSkge1xuICAgICAgICBhY3RpdmUudGltZXIuYyA9IG51bGw7XG4gICAgICAgIGFjdGl2ZS50aW1lci50ID0gTmFOO1xuICAgICAgICBpZiAoLS1sb2NrLmNvdW50KSBkZWxldGUgbG9ja1thY3RpdmVJZF07IGVsc2UgZGVsZXRlIHRoaXNbbnNdO1xuICAgICAgICBsb2NrLmFjdGl2ZSArPSAuNTtcbiAgICAgICAgYWN0aXZlLmV2ZW50ICYmIGFjdGl2ZS5ldmVudC5pbnRlcnJ1cHQuY2FsbCh0aGlzLCB0aGlzLl9fZGF0YV9fLCBhY3RpdmUuaW5kZXgpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbihncm91cHMsIG5zLCBpZCkge1xuICAgIGQzX3N1YmNsYXNzKGdyb3VwcywgZDNfdHJhbnNpdGlvblByb3RvdHlwZSk7XG4gICAgZ3JvdXBzLm5hbWVzcGFjZSA9IG5zO1xuICAgIGdyb3Vwcy5pZCA9IGlkO1xuICAgIHJldHVybiBncm91cHM7XG4gIH1cbiAgdmFyIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUgPSBbXSwgZDNfdHJhbnNpdGlvbklkID0gMCwgZDNfdHJhbnNpdGlvbkluaGVyaXRJZCwgZDNfdHJhbnNpdGlvbkluaGVyaXQ7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuY2FsbCA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5jYWxsO1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmVtcHR5ID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmVtcHR5O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLm5vZGUgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUubm9kZTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5zaXplID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNpemU7XG4gIGQzLnRyYW5zaXRpb24gPSBmdW5jdGlvbihzZWxlY3Rpb24sIG5hbWUpIHtcbiAgICByZXR1cm4gc2VsZWN0aW9uICYmIHNlbGVjdGlvbi50cmFuc2l0aW9uID8gZDNfdHJhbnNpdGlvbkluaGVyaXRJZCA/IHNlbGVjdGlvbi50cmFuc2l0aW9uKG5hbWUpIDogc2VsZWN0aW9uIDogZDMuc2VsZWN0aW9uKCkudHJhbnNpdGlvbihzZWxlY3Rpb24pO1xuICB9O1xuICBkMy50cmFuc2l0aW9uLnByb3RvdHlwZSA9IGQzX3RyYW5zaXRpb25Qcm90b3R5cGU7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGUsIG5vZGU7XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSkge1xuICAgICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgICAgZDNfdHJhbnNpdGlvbk5vZGUoc3Vibm9kZSwgaSwgbnMsIGlkLCBub2RlW25zXVtpZF0pO1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2goc3Vibm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIG5zLCBpZCk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2VsZWN0QWxsID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGVzLCBub2RlLCBzdWJub2RlLCB0cmFuc2l0aW9uO1xuICAgIHNlbGVjdG9yID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICB0cmFuc2l0aW9uID0gbm9kZVtuc11baWRdO1xuICAgICAgICAgIHN1Ym5vZGVzID0gc2VsZWN0b3IuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKTtcbiAgICAgICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgICAgICBmb3IgKHZhciBrID0gLTEsIG8gPSBzdWJub2Rlcy5sZW5ndGg7ICsrayA8IG87ICkge1xuICAgICAgICAgICAgaWYgKHN1Ym5vZGUgPSBzdWJub2Rlc1trXSkgZDNfdHJhbnNpdGlvbk5vZGUoc3Vibm9kZSwgaywgbnMsIGlkLCB0cmFuc2l0aW9uKTtcbiAgICAgICAgICAgIHN1Ymdyb3VwLnB1c2goc3Vibm9kZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgbnMsIGlkKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbihmaWx0ZXIpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBncm91cCwgbm9kZTtcbiAgICBpZiAodHlwZW9mIGZpbHRlciAhPT0gXCJmdW5jdGlvblwiKSBmaWx0ZXIgPSBkM19zZWxlY3Rpb25fZmlsdGVyKGZpbHRlcik7XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBmaWx0ZXIuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLm5hbWVzcGFjZSwgdGhpcy5pZCk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUudHdlZW4gPSBmdW5jdGlvbihuYW1lLCB0d2Vlbikge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gdGhpcy5ub2RlKClbbnNdW2lkXS50d2Vlbi5nZXQobmFtZSk7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIHR3ZWVuID09IG51bGwgPyBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0udHdlZW4ucmVtb3ZlKG5hbWUpO1xuICAgIH0gOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0udHdlZW4uc2V0KG5hbWUsIHR3ZWVuKTtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbl90d2Vlbihncm91cHMsIG5hbWUsIHZhbHVlLCB0d2Vlbikge1xuICAgIHZhciBpZCA9IGdyb3Vwcy5pZCwgbnMgPSBncm91cHMubmFtZXNwYWNlO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaChncm91cHMsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgbm9kZVtuc11baWRdLnR3ZWVuLnNldChuYW1lLCB0d2Vlbih2YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSk7XG4gICAgfSA6ICh2YWx1ZSA9IHR3ZWVuKHZhbHVlKSwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLnR3ZWVuLnNldChuYW1lLCB2YWx1ZSk7XG4gICAgfSkpO1xuICB9XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuYXR0ciA9IGZ1bmN0aW9uKG5hbWVOUywgdmFsdWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIGZvciAodmFsdWUgaW4gbmFtZU5TKSB0aGlzLmF0dHIodmFsdWUsIG5hbWVOU1t2YWx1ZV0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHZhciBpbnRlcnBvbGF0ZSA9IG5hbWVOUyA9PSBcInRyYW5zZm9ybVwiID8gZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBkM19pbnRlcnBvbGF0ZSwgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZU5TKTtcbiAgICBmdW5jdGlvbiBhdHRyTnVsbCgpIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyTnVsbE5TKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0clR3ZWVuKGIpIHtcbiAgICAgIHJldHVybiBiID09IG51bGwgPyBhdHRyTnVsbCA6IChiICs9IFwiXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYSA9IHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpLCBpO1xuICAgICAgICByZXR1cm4gYSAhPT0gYiAmJiAoaSA9IGludGVycG9sYXRlKGEsIGIpLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgaSh0KSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJUd2Vlbk5TKGIpIHtcbiAgICAgIHJldHVybiBiID09IG51bGwgPyBhdHRyTnVsbE5TIDogKGIgKz0gXCJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKSwgaTtcbiAgICAgICAgcmV0dXJuIGEgIT09IGIgJiYgKGkgPSBpbnRlcnBvbGF0ZShhLCBiKSwgZnVuY3Rpb24odCkge1xuICAgICAgICAgIHRoaXMuc2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCwgaSh0KSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uX3R3ZWVuKHRoaXMsIFwiYXR0ci5cIiArIG5hbWVOUywgdmFsdWUsIG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2Vlbik7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuYXR0clR3ZWVuID0gZnVuY3Rpb24obmFtZU5TLCB0d2Vlbikge1xuICAgIHZhciBuYW1lID0gZDMubnMucXVhbGlmeShuYW1lTlMpO1xuICAgIGZ1bmN0aW9uIGF0dHJUd2VlbihkLCBpKSB7XG4gICAgICB2YXIgZiA9IHR3ZWVuLmNhbGwodGhpcywgZCwgaSwgdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSkpO1xuICAgICAgcmV0dXJuIGYgJiYgZnVuY3Rpb24odCkge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCBmKHQpKTtcbiAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJUd2Vlbk5TKGQsIGkpIHtcbiAgICAgIHZhciBmID0gdHdlZW4uY2FsbCh0aGlzLCBkLCBpLCB0aGlzLmdldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpKTtcbiAgICAgIHJldHVybiBmICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCBmKHQpKTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnR3ZWVuKFwiYXR0ci5cIiArIG5hbWVOUywgbmFtZS5sb2NhbCA/IGF0dHJUd2Vlbk5TIDogYXR0clR3ZWVuKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5zdHlsZSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobiA8IDMpIHtcbiAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAobiA8IDIpIHZhbHVlID0gXCJcIjtcbiAgICAgICAgZm9yIChwcmlvcml0eSBpbiBuYW1lKSB0aGlzLnN0eWxlKHByaW9yaXR5LCBuYW1lW3ByaW9yaXR5XSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIHByaW9yaXR5ID0gXCJcIjtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVOdWxsKCkge1xuICAgICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVTdHJpbmcoYikge1xuICAgICAgcmV0dXJuIGIgPT0gbnVsbCA/IHN0eWxlTnVsbCA6IChiICs9IFwiXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYSA9IGQzX3dpbmRvdyh0aGlzKS5nZXRDb21wdXRlZFN0eWxlKHRoaXMsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSksIGk7XG4gICAgICAgIHJldHVybiBhICE9PSBiICYmIChpID0gZDNfaW50ZXJwb2xhdGUoYSwgYiksIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIGkodCksIHByaW9yaXR5KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb25fdHdlZW4odGhpcywgXCJzdHlsZS5cIiArIG5hbWUsIHZhbHVlLCBzdHlsZVN0cmluZyk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc3R5bGVUd2VlbiA9IGZ1bmN0aW9uKG5hbWUsIHR3ZWVuLCBwcmlvcml0eSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgcHJpb3JpdHkgPSBcIlwiO1xuICAgIGZ1bmN0aW9uIHN0eWxlVHdlZW4oZCwgaSkge1xuICAgICAgdmFyIGYgPSB0d2Vlbi5jYWxsKHRoaXMsIGQsIGksIGQzX3dpbmRvdyh0aGlzKS5nZXRDb21wdXRlZFN0eWxlKHRoaXMsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSkpO1xuICAgICAgcmV0dXJuIGYgJiYgZnVuY3Rpb24odCkge1xuICAgICAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIGYodCksIHByaW9yaXR5KTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnR3ZWVuKFwic3R5bGUuXCIgKyBuYW1lLCBzdHlsZVR3ZWVuKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbl90d2Vlbih0aGlzLCBcInRleHRcIiwgdmFsdWUsIGQzX3RyYW5zaXRpb25fdGV4dCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zaXRpb25fdGV4dChiKSB7XG4gICAgaWYgKGIgPT0gbnVsbCkgYiA9IFwiXCI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy50ZXh0Q29udGVudCA9IGI7XG4gICAgfTtcbiAgfVxuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIHJldHVybiB0aGlzLmVhY2goXCJlbmQudHJhbnNpdGlvblwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBwO1xuICAgICAgaWYgKHRoaXNbbnNdLmNvdW50IDwgMiAmJiAocCA9IHRoaXMucGFyZW50Tm9kZSkpIHAucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgfSk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZWFzZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiB0aGlzLm5vZGUoKVtuc11baWRdLmVhc2U7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB2YWx1ZSA9IGQzLmVhc2UuYXBwbHkoZDMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS5lYXNlID0gdmFsdWU7XG4gICAgfSk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZGVsYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAxKSByZXR1cm4gdGhpcy5ub2RlKClbbnNdW2lkXS5kZWxheTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBub2RlW25zXVtpZF0uZGVsYXkgPSArdmFsdWUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKTtcbiAgICB9IDogKHZhbHVlID0gK3ZhbHVlLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0uZGVsYXkgPSB2YWx1ZTtcbiAgICB9KSk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZHVyYXRpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAxKSByZXR1cm4gdGhpcy5ub2RlKClbbnNdW2lkXS5kdXJhdGlvbjtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBub2RlW25zXVtpZF0uZHVyYXRpb24gPSBNYXRoLm1heCgxLCB2YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKTtcbiAgICB9IDogKHZhbHVlID0gTWF0aC5tYXgoMSwgdmFsdWUpLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0uZHVyYXRpb24gPSB2YWx1ZTtcbiAgICB9KSk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZWFjaCA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIHZhciBpbmhlcml0ID0gZDNfdHJhbnNpdGlvbkluaGVyaXQsIGluaGVyaXRJZCA9IGQzX3RyYW5zaXRpb25Jbmhlcml0SWQ7XG4gICAgICB0cnkge1xuICAgICAgICBkM190cmFuc2l0aW9uSW5oZXJpdElkID0gaWQ7XG4gICAgICAgIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUsIGksIGopIHtcbiAgICAgICAgICBkM190cmFuc2l0aW9uSW5oZXJpdCA9IG5vZGVbbnNdW2lkXTtcbiAgICAgICAgICB0eXBlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaik7XG4gICAgICAgIH0pO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDNfdHJhbnNpdGlvbkluaGVyaXQgPSBpbmhlcml0O1xuICAgICAgICBkM190cmFuc2l0aW9uSW5oZXJpdElkID0gaW5oZXJpdElkO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHZhciB0cmFuc2l0aW9uID0gbm9kZVtuc11baWRdO1xuICAgICAgICAodHJhbnNpdGlvbi5ldmVudCB8fCAodHJhbnNpdGlvbi5ldmVudCA9IGQzLmRpc3BhdGNoKFwic3RhcnRcIiwgXCJlbmRcIiwgXCJpbnRlcnJ1cHRcIikpKS5vbih0eXBlLCBsaXN0ZW5lcik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpZDAgPSB0aGlzLmlkLCBpZDEgPSArK2QzX3RyYW5zaXRpb25JZCwgbnMgPSB0aGlzLm5hbWVzcGFjZSwgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBncm91cCwgbm9kZSwgdHJhbnNpdGlvbjtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IHRoaXMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHRyYW5zaXRpb24gPSBub2RlW25zXVtpZDBdO1xuICAgICAgICAgIGQzX3RyYW5zaXRpb25Ob2RlKG5vZGUsIGksIG5zLCBpZDEsIHtcbiAgICAgICAgICAgIHRpbWU6IHRyYW5zaXRpb24udGltZSxcbiAgICAgICAgICAgIGVhc2U6IHRyYW5zaXRpb24uZWFzZSxcbiAgICAgICAgICAgIGRlbGF5OiB0cmFuc2l0aW9uLmRlbGF5ICsgdHJhbnNpdGlvbi5kdXJhdGlvbixcbiAgICAgICAgICAgIGR1cmF0aW9uOiB0cmFuc2l0aW9uLmR1cmF0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCBucywgaWQxKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbk5hbWVzcGFjZShuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUgPT0gbnVsbCA/IFwiX190cmFuc2l0aW9uX19cIiA6IFwiX190cmFuc2l0aW9uX1wiICsgbmFtZSArIFwiX19cIjtcbiAgfVxuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uTm9kZShub2RlLCBpLCBucywgaWQsIGluaGVyaXQpIHtcbiAgICB2YXIgbG9jayA9IG5vZGVbbnNdIHx8IChub2RlW25zXSA9IHtcbiAgICAgIGFjdGl2ZTogMCxcbiAgICAgIGNvdW50OiAwXG4gICAgfSksIHRyYW5zaXRpb24gPSBsb2NrW2lkXSwgdGltZSwgdGltZXIsIGR1cmF0aW9uLCBlYXNlLCB0d2VlbnM7XG4gICAgZnVuY3Rpb24gc2NoZWR1bGUoZWxhcHNlZCkge1xuICAgICAgdmFyIGRlbGF5ID0gdHJhbnNpdGlvbi5kZWxheTtcbiAgICAgIHRpbWVyLnQgPSBkZWxheSArIHRpbWU7XG4gICAgICBpZiAoZGVsYXkgPD0gZWxhcHNlZCkgcmV0dXJuIHN0YXJ0KGVsYXBzZWQgLSBkZWxheSk7XG4gICAgICB0aW1lci5jID0gc3RhcnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpIHtcbiAgICAgIHZhciBhY3RpdmVJZCA9IGxvY2suYWN0aXZlLCBhY3RpdmUgPSBsb2NrW2FjdGl2ZUlkXTtcbiAgICAgIGlmIChhY3RpdmUpIHtcbiAgICAgICAgYWN0aXZlLnRpbWVyLmMgPSBudWxsO1xuICAgICAgICBhY3RpdmUudGltZXIudCA9IE5hTjtcbiAgICAgICAgLS1sb2NrLmNvdW50O1xuICAgICAgICBkZWxldGUgbG9ja1thY3RpdmVJZF07XG4gICAgICAgIGFjdGl2ZS5ldmVudCAmJiBhY3RpdmUuZXZlbnQuaW50ZXJydXB0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgYWN0aXZlLmluZGV4KTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGNhbmNlbElkIGluIGxvY2spIHtcbiAgICAgICAgaWYgKCtjYW5jZWxJZCA8IGlkKSB7XG4gICAgICAgICAgdmFyIGNhbmNlbCA9IGxvY2tbY2FuY2VsSWRdO1xuICAgICAgICAgIGNhbmNlbC50aW1lci5jID0gbnVsbDtcbiAgICAgICAgICBjYW5jZWwudGltZXIudCA9IE5hTjtcbiAgICAgICAgICAtLWxvY2suY291bnQ7XG4gICAgICAgICAgZGVsZXRlIGxvY2tbY2FuY2VsSWRdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aW1lci5jID0gdGljaztcbiAgICAgIGQzX3RpbWVyKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGltZXIuYyAmJiB0aWNrKGVsYXBzZWQgfHwgMSkpIHtcbiAgICAgICAgICB0aW1lci5jID0gbnVsbDtcbiAgICAgICAgICB0aW1lci50ID0gTmFOO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfSwgMCwgdGltZSk7XG4gICAgICBsb2NrLmFjdGl2ZSA9IGlkO1xuICAgICAgdHJhbnNpdGlvbi5ldmVudCAmJiB0cmFuc2l0aW9uLmV2ZW50LnN0YXJ0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSk7XG4gICAgICB0d2VlbnMgPSBbXTtcbiAgICAgIHRyYW5zaXRpb24udHdlZW4uZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9IHZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSkpIHtcbiAgICAgICAgICB0d2VlbnMucHVzaCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgZWFzZSA9IHRyYW5zaXRpb24uZWFzZTtcbiAgICAgIGR1cmF0aW9uID0gdHJhbnNpdGlvbi5kdXJhdGlvbjtcbiAgICB9XG4gICAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgICB2YXIgdCA9IGVsYXBzZWQgLyBkdXJhdGlvbiwgZSA9IGVhc2UodCksIG4gPSB0d2VlbnMubGVuZ3RoO1xuICAgICAgd2hpbGUgKG4gPiAwKSB7XG4gICAgICAgIHR3ZWVuc1stLW5dLmNhbGwobm9kZSwgZSk7XG4gICAgICB9XG4gICAgICBpZiAodCA+PSAxKSB7XG4gICAgICAgIHRyYW5zaXRpb24uZXZlbnQgJiYgdHJhbnNpdGlvbi5ldmVudC5lbmQuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpKTtcbiAgICAgICAgaWYgKC0tbG9jay5jb3VudCkgZGVsZXRlIGxvY2tbaWRdOyBlbHNlIGRlbGV0ZSBub2RlW25zXTtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICghdHJhbnNpdGlvbikge1xuICAgICAgdGltZSA9IGluaGVyaXQudGltZTtcbiAgICAgIHRpbWVyID0gZDNfdGltZXIoc2NoZWR1bGUsIDAsIHRpbWUpO1xuICAgICAgdHJhbnNpdGlvbiA9IGxvY2tbaWRdID0ge1xuICAgICAgICB0d2VlbjogbmV3IGQzX01hcCgpLFxuICAgICAgICB0aW1lOiB0aW1lLFxuICAgICAgICB0aW1lcjogdGltZXIsXG4gICAgICAgIGRlbGF5OiBpbmhlcml0LmRlbGF5LFxuICAgICAgICBkdXJhdGlvbjogaW5oZXJpdC5kdXJhdGlvbixcbiAgICAgICAgZWFzZTogaW5oZXJpdC5lYXNlLFxuICAgICAgICBpbmRleDogaVxuICAgICAgfTtcbiAgICAgIGluaGVyaXQgPSBudWxsO1xuICAgICAgKytsb2NrLmNvdW50O1xuICAgIH1cbiAgfVxuICBkMy5zdmcuYXhpcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2FsZSA9IGQzLnNjYWxlLmxpbmVhcigpLCBvcmllbnQgPSBkM19zdmdfYXhpc0RlZmF1bHRPcmllbnQsIGlubmVyVGlja1NpemUgPSA2LCBvdXRlclRpY2tTaXplID0gNiwgdGlja1BhZGRpbmcgPSAzLCB0aWNrQXJndW1lbnRzXyA9IFsgMTAgXSwgdGlja1ZhbHVlcyA9IG51bGwsIHRpY2tGb3JtYXRfO1xuICAgIGZ1bmN0aW9uIGF4aXMoZykge1xuICAgICAgZy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZyA9IGQzLnNlbGVjdCh0aGlzKTtcbiAgICAgICAgdmFyIHNjYWxlMCA9IHRoaXMuX19jaGFydF9fIHx8IHNjYWxlLCBzY2FsZTEgPSB0aGlzLl9fY2hhcnRfXyA9IHNjYWxlLmNvcHkoKTtcbiAgICAgICAgdmFyIHRpY2tzID0gdGlja1ZhbHVlcyA9PSBudWxsID8gc2NhbGUxLnRpY2tzID8gc2NhbGUxLnRpY2tzLmFwcGx5KHNjYWxlMSwgdGlja0FyZ3VtZW50c18pIDogc2NhbGUxLmRvbWFpbigpIDogdGlja1ZhbHVlcywgdGlja0Zvcm1hdCA9IHRpY2tGb3JtYXRfID09IG51bGwgPyBzY2FsZTEudGlja0Zvcm1hdCA/IHNjYWxlMS50aWNrRm9ybWF0LmFwcGx5KHNjYWxlMSwgdGlja0FyZ3VtZW50c18pIDogZDNfaWRlbnRpdHkgOiB0aWNrRm9ybWF0XywgdGljayA9IGcuc2VsZWN0QWxsKFwiLnRpY2tcIikuZGF0YSh0aWNrcywgc2NhbGUxKSwgdGlja0VudGVyID0gdGljay5lbnRlcigpLmluc2VydChcImdcIiwgXCIuZG9tYWluXCIpLmF0dHIoXCJjbGFzc1wiLCBcInRpY2tcIikuc3R5bGUoXCJvcGFjaXR5XCIsIM61KSwgdGlja0V4aXQgPSBkMy50cmFuc2l0aW9uKHRpY2suZXhpdCgpKS5zdHlsZShcIm9wYWNpdHlcIiwgzrUpLnJlbW92ZSgpLCB0aWNrVXBkYXRlID0gZDMudHJhbnNpdGlvbih0aWNrLm9yZGVyKCkpLnN0eWxlKFwib3BhY2l0eVwiLCAxKSwgdGlja1NwYWNpbmcgPSBNYXRoLm1heChpbm5lclRpY2tTaXplLCAwKSArIHRpY2tQYWRkaW5nLCB0aWNrVHJhbnNmb3JtO1xuICAgICAgICB2YXIgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHNjYWxlMSksIHBhdGggPSBnLnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbIDAgXSksIHBhdGhVcGRhdGUgPSAocGF0aC5lbnRlcigpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImNsYXNzXCIsIFwiZG9tYWluXCIpLCBcbiAgICAgICAgZDMudHJhbnNpdGlvbihwYXRoKSk7XG4gICAgICAgIHRpY2tFbnRlci5hcHBlbmQoXCJsaW5lXCIpO1xuICAgICAgICB0aWNrRW50ZXIuYXBwZW5kKFwidGV4dFwiKTtcbiAgICAgICAgdmFyIGxpbmVFbnRlciA9IHRpY2tFbnRlci5zZWxlY3QoXCJsaW5lXCIpLCBsaW5lVXBkYXRlID0gdGlja1VwZGF0ZS5zZWxlY3QoXCJsaW5lXCIpLCB0ZXh0ID0gdGljay5zZWxlY3QoXCJ0ZXh0XCIpLnRleHQodGlja0Zvcm1hdCksIHRleHRFbnRlciA9IHRpY2tFbnRlci5zZWxlY3QoXCJ0ZXh0XCIpLCB0ZXh0VXBkYXRlID0gdGlja1VwZGF0ZS5zZWxlY3QoXCJ0ZXh0XCIpLCBzaWduID0gb3JpZW50ID09PSBcInRvcFwiIHx8IG9yaWVudCA9PT0gXCJsZWZ0XCIgPyAtMSA6IDEsIHgxLCB4MiwgeTEsIHkyO1xuICAgICAgICBpZiAob3JpZW50ID09PSBcImJvdHRvbVwiIHx8IG9yaWVudCA9PT0gXCJ0b3BcIikge1xuICAgICAgICAgIHRpY2tUcmFuc2Zvcm0gPSBkM19zdmdfYXhpc1gsIHgxID0gXCJ4XCIsIHkxID0gXCJ5XCIsIHgyID0gXCJ4MlwiLCB5MiA9IFwieTJcIjtcbiAgICAgICAgICB0ZXh0LmF0dHIoXCJkeVwiLCBzaWduIDwgMCA/IFwiMGVtXCIgOiBcIi43MWVtXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIik7XG4gICAgICAgICAgcGF0aFVwZGF0ZS5hdHRyKFwiZFwiLCBcIk1cIiArIHJhbmdlWzBdICsgXCIsXCIgKyBzaWduICogb3V0ZXJUaWNrU2l6ZSArIFwiVjBIXCIgKyByYW5nZVsxXSArIFwiVlwiICsgc2lnbiAqIG91dGVyVGlja1NpemUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpY2tUcmFuc2Zvcm0gPSBkM19zdmdfYXhpc1ksIHgxID0gXCJ5XCIsIHkxID0gXCJ4XCIsIHgyID0gXCJ5MlwiLCB5MiA9IFwieDJcIjtcbiAgICAgICAgICB0ZXh0LmF0dHIoXCJkeVwiLCBcIi4zMmVtXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgc2lnbiA8IDAgPyBcImVuZFwiIDogXCJzdGFydFwiKTtcbiAgICAgICAgICBwYXRoVXBkYXRlLmF0dHIoXCJkXCIsIFwiTVwiICsgc2lnbiAqIG91dGVyVGlja1NpemUgKyBcIixcIiArIHJhbmdlWzBdICsgXCJIMFZcIiArIHJhbmdlWzFdICsgXCJIXCIgKyBzaWduICogb3V0ZXJUaWNrU2l6ZSk7XG4gICAgICAgIH1cbiAgICAgICAgbGluZUVudGVyLmF0dHIoeTIsIHNpZ24gKiBpbm5lclRpY2tTaXplKTtcbiAgICAgICAgdGV4dEVudGVyLmF0dHIoeTEsIHNpZ24gKiB0aWNrU3BhY2luZyk7XG4gICAgICAgIGxpbmVVcGRhdGUuYXR0cih4MiwgMCkuYXR0cih5Miwgc2lnbiAqIGlubmVyVGlja1NpemUpO1xuICAgICAgICB0ZXh0VXBkYXRlLmF0dHIoeDEsIDApLmF0dHIoeTEsIHNpZ24gKiB0aWNrU3BhY2luZyk7XG4gICAgICAgIGlmIChzY2FsZTEucmFuZ2VCYW5kKSB7XG4gICAgICAgICAgdmFyIHggPSBzY2FsZTEsIGR4ID0geC5yYW5nZUJhbmQoKSAvIDI7XG4gICAgICAgICAgc2NhbGUwID0gc2NhbGUxID0gZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgcmV0dXJuIHgoZCkgKyBkeDtcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKHNjYWxlMC5yYW5nZUJhbmQpIHtcbiAgICAgICAgICBzY2FsZTAgPSBzY2FsZTE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGlja0V4aXQuY2FsbCh0aWNrVHJhbnNmb3JtLCBzY2FsZTEsIHNjYWxlMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGlja0VudGVyLmNhbGwodGlja1RyYW5zZm9ybSwgc2NhbGUwLCBzY2FsZTEpO1xuICAgICAgICB0aWNrVXBkYXRlLmNhbGwodGlja1RyYW5zZm9ybSwgc2NhbGUxLCBzY2FsZTEpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGF4aXMuc2NhbGUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzY2FsZTtcbiAgICAgIHNjYWxlID0geDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy5vcmllbnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvcmllbnQ7XG4gICAgICBvcmllbnQgPSB4IGluIGQzX3N2Z19heGlzT3JpZW50cyA/IHggKyBcIlwiIDogZDNfc3ZnX2F4aXNEZWZhdWx0T3JpZW50O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tzID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrQXJndW1lbnRzXztcbiAgICAgIHRpY2tBcmd1bWVudHNfID0gZDNfYXJyYXkoYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrVmFsdWVzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja1ZhbHVlcztcbiAgICAgIHRpY2tWYWx1ZXMgPSB4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tGb3JtYXQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrRm9ybWF0XztcbiAgICAgIHRpY2tGb3JtYXRfID0geDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgIGlmICghbikgcmV0dXJuIGlubmVyVGlja1NpemU7XG4gICAgICBpbm5lclRpY2tTaXplID0gK3g7XG4gICAgICBvdXRlclRpY2tTaXplID0gK2FyZ3VtZW50c1tuIC0gMV07XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMuaW5uZXJUaWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGlubmVyVGlja1NpemU7XG4gICAgICBpbm5lclRpY2tTaXplID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMub3V0ZXJUaWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG91dGVyVGlja1NpemU7XG4gICAgICBvdXRlclRpY2tTaXplID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1BhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrUGFkZGluZztcbiAgICAgIHRpY2tQYWRkaW5nID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1N1YmRpdmlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggJiYgYXhpcztcbiAgICB9O1xuICAgIHJldHVybiBheGlzO1xuICB9O1xuICB2YXIgZDNfc3ZnX2F4aXNEZWZhdWx0T3JpZW50ID0gXCJib3R0b21cIiwgZDNfc3ZnX2F4aXNPcmllbnRzID0ge1xuICAgIHRvcDogMSxcbiAgICByaWdodDogMSxcbiAgICBib3R0b206IDEsXG4gICAgbGVmdDogMVxuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfYXhpc1goc2VsZWN0aW9uLCB4MCwgeDEpIHtcbiAgICBzZWxlY3Rpb24uYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7XG4gICAgICB2YXIgdjAgPSB4MChkKTtcbiAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIChpc0Zpbml0ZSh2MCkgPyB2MCA6IHgxKGQpKSArIFwiLDApXCI7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2F4aXNZKHNlbGVjdGlvbiwgeTAsIHkxKSB7XG4gICAgc2VsZWN0aW9uLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIHYwID0geTAoZCk7XG4gICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoMCxcIiArIChpc0Zpbml0ZSh2MCkgPyB2MCA6IHkxKGQpKSArIFwiKVwiO1xuICAgIH0pO1xuICB9XG4gIGQzLnN2Zy5icnVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBldmVudCA9IGQzX2V2ZW50RGlzcGF0Y2goYnJ1c2gsIFwiYnJ1c2hzdGFydFwiLCBcImJydXNoXCIsIFwiYnJ1c2hlbmRcIiksIHggPSBudWxsLCB5ID0gbnVsbCwgeEV4dGVudCA9IFsgMCwgMCBdLCB5RXh0ZW50ID0gWyAwLCAwIF0sIHhFeHRlbnREb21haW4sIHlFeHRlbnREb21haW4sIHhDbGFtcCA9IHRydWUsIHlDbGFtcCA9IHRydWUsIHJlc2l6ZXMgPSBkM19zdmdfYnJ1c2hSZXNpemVzWzBdO1xuICAgIGZ1bmN0aW9uIGJydXNoKGcpIHtcbiAgICAgIGcuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGcgPSBkMy5zZWxlY3QodGhpcykuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKS5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInJnYmEoMCwwLDAsMClcIikub24oXCJtb3VzZWRvd24uYnJ1c2hcIiwgYnJ1c2hzdGFydCkub24oXCJ0b3VjaHN0YXJ0LmJydXNoXCIsIGJydXNoc3RhcnQpO1xuICAgICAgICB2YXIgYmFja2dyb3VuZCA9IGcuc2VsZWN0QWxsKFwiLmJhY2tncm91bmRcIikuZGF0YShbIDAgXSk7XG4gICAgICAgIGJhY2tncm91bmQuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLCBcImJhY2tncm91bmRcIikuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsIFwiaGlkZGVuXCIpLnN0eWxlKFwiY3Vyc29yXCIsIFwiY3Jvc3NoYWlyXCIpO1xuICAgICAgICBnLnNlbGVjdEFsbChcIi5leHRlbnRcIikuZGF0YShbIDAgXSkuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLCBcImV4dGVudFwiKS5zdHlsZShcImN1cnNvclwiLCBcIm1vdmVcIik7XG4gICAgICAgIHZhciByZXNpemUgPSBnLnNlbGVjdEFsbChcIi5yZXNpemVcIikuZGF0YShyZXNpemVzLCBkM19pZGVudGl0eSk7XG4gICAgICAgIHJlc2l6ZS5leGl0KCkucmVtb3ZlKCk7XG4gICAgICAgIHJlc2l6ZS5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gXCJyZXNpemUgXCIgKyBkO1xuICAgICAgICB9KS5zdHlsZShcImN1cnNvclwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIGQzX3N2Z19icnVzaEN1cnNvcltkXTtcbiAgICAgICAgfSkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwieFwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIC9bZXddJC8udGVzdChkKSA/IC0zIDogbnVsbDtcbiAgICAgICAgfSkuYXR0cihcInlcIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiAvXltuc10vLnRlc3QoZCkgPyAtMyA6IG51bGw7XG4gICAgICAgIH0pLmF0dHIoXCJ3aWR0aFwiLCA2KS5hdHRyKFwiaGVpZ2h0XCIsIDYpLnN0eWxlKFwidmlzaWJpbGl0eVwiLCBcImhpZGRlblwiKTtcbiAgICAgICAgcmVzaXplLnN0eWxlKFwiZGlzcGxheVwiLCBicnVzaC5lbXB0eSgpID8gXCJub25lXCIgOiBudWxsKTtcbiAgICAgICAgdmFyIGdVcGRhdGUgPSBkMy50cmFuc2l0aW9uKGcpLCBiYWNrZ3JvdW5kVXBkYXRlID0gZDMudHJhbnNpdGlvbihiYWNrZ3JvdW5kKSwgcmFuZ2U7XG4gICAgICAgIGlmICh4KSB7XG4gICAgICAgICAgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHgpO1xuICAgICAgICAgIGJhY2tncm91bmRVcGRhdGUuYXR0cihcInhcIiwgcmFuZ2VbMF0pLmF0dHIoXCJ3aWR0aFwiLCByYW5nZVsxXSAtIHJhbmdlWzBdKTtcbiAgICAgICAgICByZWRyYXdYKGdVcGRhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh5KSB7XG4gICAgICAgICAgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHkpO1xuICAgICAgICAgIGJhY2tncm91bmRVcGRhdGUuYXR0cihcInlcIiwgcmFuZ2VbMF0pLmF0dHIoXCJoZWlnaHRcIiwgcmFuZ2VbMV0gLSByYW5nZVswXSk7XG4gICAgICAgICAgcmVkcmF3WShnVXBkYXRlKTtcbiAgICAgICAgfVxuICAgICAgICByZWRyYXcoZ1VwZGF0ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgYnJ1c2guZXZlbnQgPSBmdW5jdGlvbihnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBldmVudF8gPSBldmVudC5vZih0aGlzLCBhcmd1bWVudHMpLCBleHRlbnQxID0ge1xuICAgICAgICAgIHg6IHhFeHRlbnQsXG4gICAgICAgICAgeTogeUV4dGVudCxcbiAgICAgICAgICBpOiB4RXh0ZW50RG9tYWluLFxuICAgICAgICAgIGo6IHlFeHRlbnREb21haW5cbiAgICAgICAgfSwgZXh0ZW50MCA9IHRoaXMuX19jaGFydF9fIHx8IGV4dGVudDE7XG4gICAgICAgIHRoaXMuX19jaGFydF9fID0gZXh0ZW50MTtcbiAgICAgICAgaWYgKGQzX3RyYW5zaXRpb25Jbmhlcml0SWQpIHtcbiAgICAgICAgICBkMy5zZWxlY3QodGhpcykudHJhbnNpdGlvbigpLmVhY2goXCJzdGFydC5icnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHhFeHRlbnREb21haW4gPSBleHRlbnQwLmk7XG4gICAgICAgICAgICB5RXh0ZW50RG9tYWluID0gZXh0ZW50MC5qO1xuICAgICAgICAgICAgeEV4dGVudCA9IGV4dGVudDAueDtcbiAgICAgICAgICAgIHlFeHRlbnQgPSBleHRlbnQwLnk7XG4gICAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgICB0eXBlOiBcImJydXNoc3RhcnRcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSkudHdlZW4oXCJicnVzaDpicnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciB4aSA9IGQzX2ludGVycG9sYXRlQXJyYXkoeEV4dGVudCwgZXh0ZW50MS54KSwgeWkgPSBkM19pbnRlcnBvbGF0ZUFycmF5KHlFeHRlbnQsIGV4dGVudDEueSk7XG4gICAgICAgICAgICB4RXh0ZW50RG9tYWluID0geUV4dGVudERvbWFpbiA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICB4RXh0ZW50ID0gZXh0ZW50MS54ID0geGkodCk7XG4gICAgICAgICAgICAgIHlFeHRlbnQgPSBleHRlbnQxLnkgPSB5aSh0KTtcbiAgICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJydXNoXCIsXG4gICAgICAgICAgICAgICAgbW9kZTogXCJyZXNpemVcIlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSkuZWFjaChcImVuZC5icnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHhFeHRlbnREb21haW4gPSBleHRlbnQxLmk7XG4gICAgICAgICAgICB5RXh0ZW50RG9tYWluID0gZXh0ZW50MS5qO1xuICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgICBtb2RlOiBcInJlc2l6ZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hlbmRcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hzdGFydFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hcIixcbiAgICAgICAgICAgIG1vZGU6IFwicmVzaXplXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaGVuZFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gICAgZnVuY3Rpb24gcmVkcmF3KGcpIHtcbiAgICAgIGcuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgeEV4dGVudFsrL2UkLy50ZXN0KGQpXSArIFwiLFwiICsgeUV4dGVudFsrL15zLy50ZXN0KGQpXSArIFwiKVwiO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlZHJhd1goZykge1xuICAgICAgZy5zZWxlY3QoXCIuZXh0ZW50XCIpLmF0dHIoXCJ4XCIsIHhFeHRlbnRbMF0pO1xuICAgICAgZy5zZWxlY3RBbGwoXCIuZXh0ZW50LC5uPnJlY3QsLnM+cmVjdFwiKS5hdHRyKFwid2lkdGhcIiwgeEV4dGVudFsxXSAtIHhFeHRlbnRbMF0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXdZKGcpIHtcbiAgICAgIGcuc2VsZWN0KFwiLmV4dGVudFwiKS5hdHRyKFwieVwiLCB5RXh0ZW50WzBdKTtcbiAgICAgIGcuc2VsZWN0QWxsKFwiLmV4dGVudCwuZT5yZWN0LC53PnJlY3RcIikuYXR0cihcImhlaWdodFwiLCB5RXh0ZW50WzFdIC0geUV4dGVudFswXSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJydXNoc3RhcnQoKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gdGhpcywgZXZlbnRUYXJnZXQgPSBkMy5zZWxlY3QoZDMuZXZlbnQudGFyZ2V0KSwgZXZlbnRfID0gZXZlbnQub2YodGFyZ2V0LCBhcmd1bWVudHMpLCBnID0gZDMuc2VsZWN0KHRhcmdldCksIHJlc2l6aW5nID0gZXZlbnRUYXJnZXQuZGF0dW0oKSwgcmVzaXppbmdYID0gIS9eKG58cykkLy50ZXN0KHJlc2l6aW5nKSAmJiB4LCByZXNpemluZ1kgPSAhL14oZXx3KSQvLnRlc3QocmVzaXppbmcpICYmIHksIGRyYWdnaW5nID0gZXZlbnRUYXJnZXQuY2xhc3NlZChcImV4dGVudFwiKSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3ModGFyZ2V0KSwgY2VudGVyLCBvcmlnaW4gPSBkMy5tb3VzZSh0YXJnZXQpLCBvZmZzZXQ7XG4gICAgICB2YXIgdyA9IGQzLnNlbGVjdChkM193aW5kb3codGFyZ2V0KSkub24oXCJrZXlkb3duLmJydXNoXCIsIGtleWRvd24pLm9uKFwia2V5dXAuYnJ1c2hcIiwga2V5dXApO1xuICAgICAgaWYgKGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzKSB7XG4gICAgICAgIHcub24oXCJ0b3VjaG1vdmUuYnJ1c2hcIiwgYnJ1c2htb3ZlKS5vbihcInRvdWNoZW5kLmJydXNoXCIsIGJydXNoZW5kKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHcub24oXCJtb3VzZW1vdmUuYnJ1c2hcIiwgYnJ1c2htb3ZlKS5vbihcIm1vdXNldXAuYnJ1c2hcIiwgYnJ1c2hlbmQpO1xuICAgICAgfVxuICAgICAgZy5pbnRlcnJ1cHQoKS5zZWxlY3RBbGwoXCIqXCIpLmludGVycnVwdCgpO1xuICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgIG9yaWdpblswXSA9IHhFeHRlbnRbMF0gLSBvcmlnaW5bMF07XG4gICAgICAgIG9yaWdpblsxXSA9IHlFeHRlbnRbMF0gLSBvcmlnaW5bMV07XG4gICAgICB9IGVsc2UgaWYgKHJlc2l6aW5nKSB7XG4gICAgICAgIHZhciBleCA9ICsvdyQvLnRlc3QocmVzaXppbmcpLCBleSA9ICsvXm4vLnRlc3QocmVzaXppbmcpO1xuICAgICAgICBvZmZzZXQgPSBbIHhFeHRlbnRbMSAtIGV4XSAtIG9yaWdpblswXSwgeUV4dGVudFsxIC0gZXldIC0gb3JpZ2luWzFdIF07XG4gICAgICAgIG9yaWdpblswXSA9IHhFeHRlbnRbZXhdO1xuICAgICAgICBvcmlnaW5bMV0gPSB5RXh0ZW50W2V5XTtcbiAgICAgIH0gZWxzZSBpZiAoZDMuZXZlbnQuYWx0S2V5KSBjZW50ZXIgPSBvcmlnaW4uc2xpY2UoKTtcbiAgICAgIGcuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcIm5vbmVcIikuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5zdHlsZShcImRpc3BsYXlcIiwgbnVsbCk7XG4gICAgICBkMy5zZWxlY3QoXCJib2R5XCIpLnN0eWxlKFwiY3Vyc29yXCIsIGV2ZW50VGFyZ2V0LnN0eWxlKFwiY3Vyc29yXCIpKTtcbiAgICAgIGV2ZW50Xyh7XG4gICAgICAgIHR5cGU6IFwiYnJ1c2hzdGFydFwiXG4gICAgICB9KTtcbiAgICAgIGJydXNobW92ZSgpO1xuICAgICAgZnVuY3Rpb24ga2V5ZG93bigpIHtcbiAgICAgICAgaWYgKGQzLmV2ZW50LmtleUNvZGUgPT0gMzIpIHtcbiAgICAgICAgICBpZiAoIWRyYWdnaW5nKSB7XG4gICAgICAgICAgICBjZW50ZXIgPSBudWxsO1xuICAgICAgICAgICAgb3JpZ2luWzBdIC09IHhFeHRlbnRbMV07XG4gICAgICAgICAgICBvcmlnaW5bMV0gLT0geUV4dGVudFsxXTtcbiAgICAgICAgICAgIGRyYWdnaW5nID0gMjtcbiAgICAgICAgICB9XG4gICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBrZXl1cCgpIHtcbiAgICAgICAgaWYgKGQzLmV2ZW50LmtleUNvZGUgPT0gMzIgJiYgZHJhZ2dpbmcgPT0gMikge1xuICAgICAgICAgIG9yaWdpblswXSArPSB4RXh0ZW50WzFdO1xuICAgICAgICAgIG9yaWdpblsxXSArPSB5RXh0ZW50WzFdO1xuICAgICAgICAgIGRyYWdnaW5nID0gMDtcbiAgICAgICAgICBkM19ldmVudFByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJydXNobW92ZSgpIHtcbiAgICAgICAgdmFyIHBvaW50ID0gZDMubW91c2UodGFyZ2V0KSwgbW92ZWQgPSBmYWxzZTtcbiAgICAgICAgaWYgKG9mZnNldCkge1xuICAgICAgICAgIHBvaW50WzBdICs9IG9mZnNldFswXTtcbiAgICAgICAgICBwb2ludFsxXSArPSBvZmZzZXRbMV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICAgIGlmIChkMy5ldmVudC5hbHRLZXkpIHtcbiAgICAgICAgICAgIGlmICghY2VudGVyKSBjZW50ZXIgPSBbICh4RXh0ZW50WzBdICsgeEV4dGVudFsxXSkgLyAyLCAoeUV4dGVudFswXSArIHlFeHRlbnRbMV0pIC8gMiBdO1xuICAgICAgICAgICAgb3JpZ2luWzBdID0geEV4dGVudFsrKHBvaW50WzBdIDwgY2VudGVyWzBdKV07XG4gICAgICAgICAgICBvcmlnaW5bMV0gPSB5RXh0ZW50WysocG9pbnRbMV0gPCBjZW50ZXJbMV0pXTtcbiAgICAgICAgICB9IGVsc2UgY2VudGVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzaXppbmdYICYmIG1vdmUxKHBvaW50LCB4LCAwKSkge1xuICAgICAgICAgIHJlZHJhd1goZyk7XG4gICAgICAgICAgbW92ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXNpemluZ1kgJiYgbW92ZTEocG9pbnQsIHksIDEpKSB7XG4gICAgICAgICAgcmVkcmF3WShnKTtcbiAgICAgICAgICBtb3ZlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vdmVkKSB7XG4gICAgICAgICAgcmVkcmF3KGcpO1xuICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICB0eXBlOiBcImJydXNoXCIsXG4gICAgICAgICAgICBtb2RlOiBkcmFnZ2luZyA/IFwibW92ZVwiIDogXCJyZXNpemVcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBtb3ZlMShwb2ludCwgc2NhbGUsIGkpIHtcbiAgICAgICAgdmFyIHJhbmdlID0gZDNfc2NhbGVSYW5nZShzY2FsZSksIHIwID0gcmFuZ2VbMF0sIHIxID0gcmFuZ2VbMV0sIHBvc2l0aW9uID0gb3JpZ2luW2ldLCBleHRlbnQgPSBpID8geUV4dGVudCA6IHhFeHRlbnQsIHNpemUgPSBleHRlbnRbMV0gLSBleHRlbnRbMF0sIG1pbiwgbWF4O1xuICAgICAgICBpZiAoZHJhZ2dpbmcpIHtcbiAgICAgICAgICByMCAtPSBwb3NpdGlvbjtcbiAgICAgICAgICByMSAtPSBzaXplICsgcG9zaXRpb247XG4gICAgICAgIH1cbiAgICAgICAgbWluID0gKGkgPyB5Q2xhbXAgOiB4Q2xhbXApID8gTWF0aC5tYXgocjAsIE1hdGgubWluKHIxLCBwb2ludFtpXSkpIDogcG9pbnRbaV07XG4gICAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICAgIG1heCA9IChtaW4gKz0gcG9zaXRpb24pICsgc2l6ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoY2VudGVyKSBwb3NpdGlvbiA9IE1hdGgubWF4KHIwLCBNYXRoLm1pbihyMSwgMiAqIGNlbnRlcltpXSAtIG1pbikpO1xuICAgICAgICAgIGlmIChwb3NpdGlvbiA8IG1pbikge1xuICAgICAgICAgICAgbWF4ID0gbWluO1xuICAgICAgICAgICAgbWluID0gcG9zaXRpb247XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1heCA9IHBvc2l0aW9uO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZXh0ZW50WzBdICE9IG1pbiB8fCBleHRlbnRbMV0gIT0gbWF4KSB7XG4gICAgICAgICAgaWYgKGkpIHlFeHRlbnREb21haW4gPSBudWxsOyBlbHNlIHhFeHRlbnREb21haW4gPSBudWxsO1xuICAgICAgICAgIGV4dGVudFswXSA9IG1pbjtcbiAgICAgICAgICBleHRlbnRbMV0gPSBtYXg7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJydXNoZW5kKCkge1xuICAgICAgICBicnVzaG1vdmUoKTtcbiAgICAgICAgZy5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwiYWxsXCIpLnNlbGVjdEFsbChcIi5yZXNpemVcIikuc3R5bGUoXCJkaXNwbGF5XCIsIGJydXNoLmVtcHR5KCkgPyBcIm5vbmVcIiA6IG51bGwpO1xuICAgICAgICBkMy5zZWxlY3QoXCJib2R5XCIpLnN0eWxlKFwiY3Vyc29yXCIsIG51bGwpO1xuICAgICAgICB3Lm9uKFwibW91c2Vtb3ZlLmJydXNoXCIsIG51bGwpLm9uKFwibW91c2V1cC5icnVzaFwiLCBudWxsKS5vbihcInRvdWNobW92ZS5icnVzaFwiLCBudWxsKS5vbihcInRvdWNoZW5kLmJydXNoXCIsIG51bGwpLm9uKFwia2V5ZG93bi5icnVzaFwiLCBudWxsKS5vbihcImtleXVwLmJydXNoXCIsIG51bGwpO1xuICAgICAgICBkcmFnUmVzdG9yZSgpO1xuICAgICAgICBldmVudF8oe1xuICAgICAgICAgIHR5cGU6IFwiYnJ1c2hlbmRcIlxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgYnJ1c2gueCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHg7XG4gICAgICB4ID0gejtcbiAgICAgIHJlc2l6ZXMgPSBkM19zdmdfYnJ1c2hSZXNpemVzWyF4IDw8IDEgfCAheV07XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC55ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTtcbiAgICAgIHkgPSB6O1xuICAgICAgcmVzaXplcyA9IGQzX3N2Z19icnVzaFJlc2l6ZXNbIXggPDwgMSB8ICF5XTtcbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLmNsYW1wID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geCAmJiB5ID8gWyB4Q2xhbXAsIHlDbGFtcCBdIDogeCA/IHhDbGFtcCA6IHkgPyB5Q2xhbXAgOiBudWxsO1xuICAgICAgaWYgKHggJiYgeSkgeENsYW1wID0gISF6WzBdLCB5Q2xhbXAgPSAhIXpbMV07IGVsc2UgaWYgKHgpIHhDbGFtcCA9ICEhejsgZWxzZSBpZiAoeSkgeUNsYW1wID0gISF6O1xuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guZXh0ZW50ID0gZnVuY3Rpb24oeikge1xuICAgICAgdmFyIHgwLCB4MSwgeTAsIHkxLCB0O1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgIGlmICh4KSB7XG4gICAgICAgICAgaWYgKHhFeHRlbnREb21haW4pIHtcbiAgICAgICAgICAgIHgwID0geEV4dGVudERvbWFpblswXSwgeDEgPSB4RXh0ZW50RG9tYWluWzFdO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB4MCA9IHhFeHRlbnRbMF0sIHgxID0geEV4dGVudFsxXTtcbiAgICAgICAgICAgIGlmICh4LmludmVydCkgeDAgPSB4LmludmVydCh4MCksIHgxID0geC5pbnZlcnQoeDEpO1xuICAgICAgICAgICAgaWYgKHgxIDwgeDApIHQgPSB4MCwgeDAgPSB4MSwgeDEgPSB0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoeSkge1xuICAgICAgICAgIGlmICh5RXh0ZW50RG9tYWluKSB7XG4gICAgICAgICAgICB5MCA9IHlFeHRlbnREb21haW5bMF0sIHkxID0geUV4dGVudERvbWFpblsxXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgeTAgPSB5RXh0ZW50WzBdLCB5MSA9IHlFeHRlbnRbMV07XG4gICAgICAgICAgICBpZiAoeS5pbnZlcnQpIHkwID0geS5pbnZlcnQoeTApLCB5MSA9IHkuaW52ZXJ0KHkxKTtcbiAgICAgICAgICAgIGlmICh5MSA8IHkwKSB0ID0geTAsIHkwID0geTEsIHkxID0gdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHggJiYgeSA/IFsgWyB4MCwgeTAgXSwgWyB4MSwgeTEgXSBdIDogeCA/IFsgeDAsIHgxIF0gOiB5ICYmIFsgeTAsIHkxIF07XG4gICAgICB9XG4gICAgICBpZiAoeCkge1xuICAgICAgICB4MCA9IHpbMF0sIHgxID0gelsxXTtcbiAgICAgICAgaWYgKHkpIHgwID0geDBbMF0sIHgxID0geDFbMF07XG4gICAgICAgIHhFeHRlbnREb21haW4gPSBbIHgwLCB4MSBdO1xuICAgICAgICBpZiAoeC5pbnZlcnQpIHgwID0geCh4MCksIHgxID0geCh4MSk7XG4gICAgICAgIGlmICh4MSA8IHgwKSB0ID0geDAsIHgwID0geDEsIHgxID0gdDtcbiAgICAgICAgaWYgKHgwICE9IHhFeHRlbnRbMF0gfHwgeDEgIT0geEV4dGVudFsxXSkgeEV4dGVudCA9IFsgeDAsIHgxIF07XG4gICAgICB9XG4gICAgICBpZiAoeSkge1xuICAgICAgICB5MCA9IHpbMF0sIHkxID0gelsxXTtcbiAgICAgICAgaWYgKHgpIHkwID0geTBbMV0sIHkxID0geTFbMV07XG4gICAgICAgIHlFeHRlbnREb21haW4gPSBbIHkwLCB5MSBdO1xuICAgICAgICBpZiAoeS5pbnZlcnQpIHkwID0geSh5MCksIHkxID0geSh5MSk7XG4gICAgICAgIGlmICh5MSA8IHkwKSB0ID0geTAsIHkwID0geTEsIHkxID0gdDtcbiAgICAgICAgaWYgKHkwICE9IHlFeHRlbnRbMF0gfHwgeTEgIT0geUV4dGVudFsxXSkgeUV4dGVudCA9IFsgeTAsIHkxIF07XG4gICAgICB9XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFicnVzaC5lbXB0eSgpKSB7XG4gICAgICAgIHhFeHRlbnQgPSBbIDAsIDAgXSwgeUV4dGVudCA9IFsgMCwgMCBdO1xuICAgICAgICB4RXh0ZW50RG9tYWluID0geUV4dGVudERvbWFpbiA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC5lbXB0eSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICEheCAmJiB4RXh0ZW50WzBdID09IHhFeHRlbnRbMV0gfHwgISF5ICYmIHlFeHRlbnRbMF0gPT0geUV4dGVudFsxXTtcbiAgICB9O1xuICAgIHJldHVybiBkMy5yZWJpbmQoYnJ1c2gsIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICB2YXIgZDNfc3ZnX2JydXNoQ3Vyc29yID0ge1xuICAgIG46IFwibnMtcmVzaXplXCIsXG4gICAgZTogXCJldy1yZXNpemVcIixcbiAgICBzOiBcIm5zLXJlc2l6ZVwiLFxuICAgIHc6IFwiZXctcmVzaXplXCIsXG4gICAgbnc6IFwibndzZS1yZXNpemVcIixcbiAgICBuZTogXCJuZXN3LXJlc2l6ZVwiLFxuICAgIHNlOiBcIm53c2UtcmVzaXplXCIsXG4gICAgc3c6IFwibmVzdy1yZXNpemVcIlxuICB9O1xuICB2YXIgZDNfc3ZnX2JydXNoUmVzaXplcyA9IFsgWyBcIm5cIiwgXCJlXCIsIFwic1wiLCBcIndcIiwgXCJud1wiLCBcIm5lXCIsIFwic2VcIiwgXCJzd1wiIF0sIFsgXCJlXCIsIFwid1wiIF0sIFsgXCJuXCIsIFwic1wiIF0sIFtdIF07XG4gIHZhciBkM190aW1lX2Zvcm1hdCA9IGQzX3RpbWUuZm9ybWF0ID0gZDNfbG9jYWxlX2VuVVMudGltZUZvcm1hdDtcbiAgdmFyIGQzX3RpbWVfZm9ybWF0VXRjID0gZDNfdGltZV9mb3JtYXQudXRjO1xuICB2YXIgZDNfdGltZV9mb3JtYXRJc28gPSBkM190aW1lX2Zvcm1hdFV0YyhcIiVZLSVtLSVkVCVIOiVNOiVTLiVMWlwiKTtcbiAgZDNfdGltZV9mb3JtYXQuaXNvID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgJiYgK25ldyBEYXRlKFwiMjAwMC0wMS0wMVQwMDowMDowMC4wMDBaXCIpID8gZDNfdGltZV9mb3JtYXRJc29OYXRpdmUgOiBkM190aW1lX2Zvcm1hdElzbztcbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRJc29OYXRpdmUoZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLnRvSVNPU3RyaW5nKCk7XG4gIH1cbiAgZDNfdGltZV9mb3JtYXRJc29OYXRpdmUucGFyc2UgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHN0cmluZyk7XG4gICAgcmV0dXJuIGlzTmFOKGRhdGUpID8gbnVsbCA6IGRhdGU7XG4gIH07XG4gIGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlLnRvU3RyaW5nID0gZDNfdGltZV9mb3JtYXRJc28udG9TdHJpbmc7XG4gIGQzX3RpbWUuc2Vjb25kID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBkM19kYXRlKE1hdGguZmxvb3IoZGF0ZSAvIDFlMykgKiAxZTMpO1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyBNYXRoLmZsb29yKG9mZnNldCkgKiAxZTMpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0U2Vjb25kcygpO1xuICB9KTtcbiAgZDNfdGltZS5zZWNvbmRzID0gZDNfdGltZS5zZWNvbmQucmFuZ2U7XG4gIGQzX3RpbWUuc2Vjb25kcy51dGMgPSBkM190aW1lLnNlY29uZC51dGMucmFuZ2U7XG4gIGQzX3RpbWUubWludXRlID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBkM19kYXRlKE1hdGguZmxvb3IoZGF0ZSAvIDZlNCkgKiA2ZTQpO1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyBNYXRoLmZsb29yKG9mZnNldCkgKiA2ZTQpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0TWludXRlcygpO1xuICB9KTtcbiAgZDNfdGltZS5taW51dGVzID0gZDNfdGltZS5taW51dGUucmFuZ2U7XG4gIGQzX3RpbWUubWludXRlcy51dGMgPSBkM190aW1lLm1pbnV0ZS51dGMucmFuZ2U7XG4gIGQzX3RpbWUuaG91ciA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciB0aW1lem9uZSA9IGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAvIDYwO1xuICAgIHJldHVybiBuZXcgZDNfZGF0ZSgoTWF0aC5mbG9vcihkYXRlIC8gMzZlNSAtIHRpbWV6b25lKSArIHRpbWV6b25lKSAqIDM2ZTUpO1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgKyBNYXRoLmZsb29yKG9mZnNldCkgKiAzNmU1KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldEhvdXJzKCk7XG4gIH0pO1xuICBkM190aW1lLmhvdXJzID0gZDNfdGltZS5ob3VyLnJhbmdlO1xuICBkM190aW1lLmhvdXJzLnV0YyA9IGQzX3RpbWUuaG91ci51dGMucmFuZ2U7XG4gIGQzX3RpbWUubW9udGggPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlID0gZDNfdGltZS5kYXkoZGF0ZSk7XG4gICAgZGF0ZS5zZXREYXRlKDEpO1xuICAgIHJldHVybiBkYXRlO1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldE1vbnRoKGRhdGUuZ2V0TW9udGgoKSArIG9mZnNldCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xuICB9KTtcbiAgZDNfdGltZS5tb250aHMgPSBkM190aW1lLm1vbnRoLnJhbmdlO1xuICBkM190aW1lLm1vbnRocy51dGMgPSBkM190aW1lLm1vbnRoLnV0Yy5yYW5nZTtcbiAgZnVuY3Rpb24gZDNfdGltZV9zY2FsZShsaW5lYXIsIG1ldGhvZHMsIGZvcm1hdCkge1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBsaW5lYXIoeCk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3NjYWxlRGF0ZShsaW5lYXIuaW52ZXJ0KHgpKTtcbiAgICB9O1xuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxpbmVhci5kb21haW4oKS5tYXAoZDNfdGltZV9zY2FsZURhdGUpO1xuICAgICAgbGluZWFyLmRvbWFpbih4KTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHRpY2tNZXRob2QoZXh0ZW50LCBjb3VudCkge1xuICAgICAgdmFyIHNwYW4gPSBleHRlbnRbMV0gLSBleHRlbnRbMF0sIHRhcmdldCA9IHNwYW4gLyBjb3VudCwgaSA9IGQzLmJpc2VjdChkM190aW1lX3NjYWxlU3RlcHMsIHRhcmdldCk7XG4gICAgICByZXR1cm4gaSA9PSBkM190aW1lX3NjYWxlU3RlcHMubGVuZ3RoID8gWyBtZXRob2RzLnllYXIsIGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShleHRlbnQubWFwKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQgLyAzMTUzNmU2O1xuICAgICAgfSksIGNvdW50KVsyXSBdIDogIWkgPyBbIGQzX3RpbWVfc2NhbGVNaWxsaXNlY29uZHMsIGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShleHRlbnQsIGNvdW50KVsyXSBdIDogbWV0aG9kc1t0YXJnZXQgLyBkM190aW1lX3NjYWxlU3RlcHNbaSAtIDFdIDwgZDNfdGltZV9zY2FsZVN0ZXBzW2ldIC8gdGFyZ2V0ID8gaSAtIDEgOiBpXTtcbiAgICB9XG4gICAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKGludGVydmFsLCBza2lwKSB7XG4gICAgICB2YXIgZG9tYWluID0gc2NhbGUuZG9tYWluKCksIGV4dGVudCA9IGQzX3NjYWxlRXh0ZW50KGRvbWFpbiksIG1ldGhvZCA9IGludGVydmFsID09IG51bGwgPyB0aWNrTWV0aG9kKGV4dGVudCwgMTApIDogdHlwZW9mIGludGVydmFsID09PSBcIm51bWJlclwiICYmIHRpY2tNZXRob2QoZXh0ZW50LCBpbnRlcnZhbCk7XG4gICAgICBpZiAobWV0aG9kKSBpbnRlcnZhbCA9IG1ldGhvZFswXSwgc2tpcCA9IG1ldGhvZFsxXTtcbiAgICAgIGZ1bmN0aW9uIHNraXBwZWQoZGF0ZSkge1xuICAgICAgICByZXR1cm4gIWlzTmFOKGRhdGUpICYmICFpbnRlcnZhbC5yYW5nZShkYXRlLCBkM190aW1lX3NjYWxlRGF0ZSgrZGF0ZSArIDEpLCBza2lwKS5sZW5ndGg7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2NhbGUuZG9tYWluKGQzX3NjYWxlX25pY2UoZG9tYWluLCBza2lwID4gMSA/IHtcbiAgICAgICAgZmxvb3I6IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgICAgICB3aGlsZSAoc2tpcHBlZChkYXRlID0gaW50ZXJ2YWwuZmxvb3IoZGF0ZSkpKSBkYXRlID0gZDNfdGltZV9zY2FsZURhdGUoZGF0ZSAtIDEpO1xuICAgICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgICB9LFxuICAgICAgICBjZWlsOiBmdW5jdGlvbihkYXRlKSB7XG4gICAgICAgICAgd2hpbGUgKHNraXBwZWQoZGF0ZSA9IGludGVydmFsLmNlaWwoZGF0ZSkpKSBkYXRlID0gZDNfdGltZV9zY2FsZURhdGUoK2RhdGUgKyAxKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgfVxuICAgICAgfSA6IGludGVydmFsKSk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKGludGVydmFsLCBza2lwKSB7XG4gICAgICB2YXIgZXh0ZW50ID0gZDNfc2NhbGVFeHRlbnQoc2NhbGUuZG9tYWluKCkpLCBtZXRob2QgPSBpbnRlcnZhbCA9PSBudWxsID8gdGlja01ldGhvZChleHRlbnQsIDEwKSA6IHR5cGVvZiBpbnRlcnZhbCA9PT0gXCJudW1iZXJcIiA/IHRpY2tNZXRob2QoZXh0ZW50LCBpbnRlcnZhbCkgOiAhaW50ZXJ2YWwucmFuZ2UgJiYgWyB7XG4gICAgICAgIHJhbmdlOiBpbnRlcnZhbFxuICAgICAgfSwgc2tpcCBdO1xuICAgICAgaWYgKG1ldGhvZCkgaW50ZXJ2YWwgPSBtZXRob2RbMF0sIHNraXAgPSBtZXRob2RbMV07XG4gICAgICByZXR1cm4gaW50ZXJ2YWwucmFuZ2UoZXh0ZW50WzBdLCBkM190aW1lX3NjYWxlRGF0ZSgrZXh0ZW50WzFdICsgMSksIHNraXAgPCAxID8gMSA6IHNraXApO1xuICAgIH07XG4gICAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3NjYWxlKGxpbmVhci5jb3B5KCksIG1ldGhvZHMsIGZvcm1hdCk7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfc2NhbGVEYXRlKHQpIHtcbiAgICByZXR1cm4gbmV3IERhdGUodCk7XG4gIH1cbiAgdmFyIGQzX3RpbWVfc2NhbGVTdGVwcyA9IFsgMWUzLCA1ZTMsIDE1ZTMsIDNlNCwgNmU0LCAzZTUsIDllNSwgMThlNSwgMzZlNSwgMTA4ZTUsIDIxNmU1LCA0MzJlNSwgODY0ZTUsIDE3MjhlNSwgNjA0OGU1LCAyNTkyZTYsIDc3NzZlNiwgMzE1MzZlNiBdO1xuICB2YXIgZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcyA9IFsgWyBkM190aW1lLnNlY29uZCwgMSBdLCBbIGQzX3RpbWUuc2Vjb25kLCA1IF0sIFsgZDNfdGltZS5zZWNvbmQsIDE1IF0sIFsgZDNfdGltZS5zZWNvbmQsIDMwIF0sIFsgZDNfdGltZS5taW51dGUsIDEgXSwgWyBkM190aW1lLm1pbnV0ZSwgNSBdLCBbIGQzX3RpbWUubWludXRlLCAxNSBdLCBbIGQzX3RpbWUubWludXRlLCAzMCBdLCBbIGQzX3RpbWUuaG91ciwgMSBdLCBbIGQzX3RpbWUuaG91ciwgMyBdLCBbIGQzX3RpbWUuaG91ciwgNiBdLCBbIGQzX3RpbWUuaG91ciwgMTIgXSwgWyBkM190aW1lLmRheSwgMSBdLCBbIGQzX3RpbWUuZGF5LCAyIF0sIFsgZDNfdGltZS53ZWVrLCAxIF0sIFsgZDNfdGltZS5tb250aCwgMSBdLCBbIGQzX3RpbWUubW9udGgsIDMgXSwgWyBkM190aW1lLnllYXIsIDEgXSBdO1xuICB2YXIgZDNfdGltZV9zY2FsZUxvY2FsRm9ybWF0ID0gZDNfdGltZV9mb3JtYXQubXVsdGkoWyBbIFwiLiVMXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRNaWxsaXNlY29uZHMoKTtcbiAgfSBdLCBbIFwiOiVTXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRTZWNvbmRzKCk7XG4gIH0gXSwgWyBcIiVJOiVNXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRNaW51dGVzKCk7XG4gIH0gXSwgWyBcIiVJICVwXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRIb3VycygpO1xuICB9IF0sIFsgXCIlYSAlZFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0RGF5KCkgJiYgZC5nZXREYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJWIgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldERhdGUoKSAhPSAxO1xuICB9IF0sIFsgXCIlQlwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0TW9udGgoKTtcbiAgfSBdLCBbIFwiJVlcIiwgZDNfdHJ1ZSBdIF0pO1xuICB2YXIgZDNfdGltZV9zY2FsZU1pbGxpc2Vjb25kcyA9IHtcbiAgICByYW5nZTogZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgICAgIHJldHVybiBkMy5yYW5nZShNYXRoLmNlaWwoc3RhcnQgLyBzdGVwKSAqIHN0ZXAsICtzdG9wLCBzdGVwKS5tYXAoZDNfdGltZV9zY2FsZURhdGUpO1xuICAgIH0sXG4gICAgZmxvb3I6IGQzX2lkZW50aXR5LFxuICAgIGNlaWw6IGQzX2lkZW50aXR5XG4gIH07XG4gIGQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMueWVhciA9IGQzX3RpbWUueWVhcjtcbiAgZDNfdGltZS5zY2FsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM190aW1lX3NjYWxlKGQzLnNjYWxlLmxpbmVhcigpLCBkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzLCBkM190aW1lX3NjYWxlTG9jYWxGb3JtYXQpO1xuICB9O1xuICB2YXIgZDNfdGltZV9zY2FsZVV0Y01ldGhvZHMgPSBkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzLm1hcChmdW5jdGlvbihtKSB7XG4gICAgcmV0dXJuIFsgbVswXS51dGMsIG1bMV0gXTtcbiAgfSk7XG4gIHZhciBkM190aW1lX3NjYWxlVXRjRm9ybWF0ID0gZDNfdGltZV9mb3JtYXRVdGMubXVsdGkoWyBbIFwiLiVMXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgfSBdLCBbIFwiOiVTXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENTZWNvbmRzKCk7XG4gIH0gXSwgWyBcIiVJOiVNXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENNaW51dGVzKCk7XG4gIH0gXSwgWyBcIiVJICVwXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENIb3VycygpO1xuICB9IF0sIFsgXCIlYSAlZFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDRGF5KCkgJiYgZC5nZXRVVENEYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJWIgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ0RhdGUoKSAhPSAxO1xuICB9IF0sIFsgXCIlQlwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDTW9udGgoKTtcbiAgfSBdLCBbIFwiJVlcIiwgZDNfdHJ1ZSBdIF0pO1xuICBkM190aW1lX3NjYWxlVXRjTWV0aG9kcy55ZWFyID0gZDNfdGltZS55ZWFyLnV0YztcbiAgZDNfdGltZS5zY2FsZS51dGMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfdGltZV9zY2FsZShkMy5zY2FsZS5saW5lYXIoKSwgZDNfdGltZV9zY2FsZVV0Y01ldGhvZHMsIGQzX3RpbWVfc2NhbGVVdGNGb3JtYXQpO1xuICB9O1xuICBkMy50ZXh0ID0gZDNfeGhyVHlwZShmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIHJlcXVlc3QucmVzcG9uc2VUZXh0O1xuICB9KTtcbiAgZDMuanNvbiA9IGZ1bmN0aW9uKHVybCwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZDNfeGhyKHVybCwgXCJhcHBsaWNhdGlvbi9qc29uXCIsIGQzX2pzb24sIGNhbGxiYWNrKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfanNvbihyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuICB9XG4gIGQzLmh0bWwgPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGQzX3hocih1cmwsIFwidGV4dC9odG1sXCIsIGQzX2h0bWwsIGNhbGxiYWNrKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfaHRtbChyZXF1ZXN0KSB7XG4gICAgdmFyIHJhbmdlID0gZDNfZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcbiAgICByYW5nZS5zZWxlY3ROb2RlKGQzX2RvY3VtZW50LmJvZHkpO1xuICAgIHJldHVybiByYW5nZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuICB9XG4gIGQzLnhtbCA9IGQzX3hoclR5cGUoZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgIHJldHVybiByZXF1ZXN0LnJlc3BvbnNlWE1MO1xuICB9KTtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB0aGlzLmQzID0gZDMsIGRlZmluZShkMyk7IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZDM7IGVsc2UgdGhpcy5kMyA9IGQzO1xufSgpOyIsInZhciB2MSA9IHJlcXVpcmUoJy4vdjEnKTtcbnZhciB2NCA9IHJlcXVpcmUoJy4vdjQnKTtcblxudmFyIHV1aWQgPSB2NDtcbnV1aWQudjEgPSB2MTtcbnV1aWQudjQgPSB2NDtcblxubW9kdWxlLmV4cG9ydHMgPSB1dWlkO1xuIiwidmFyIHJuZyA9IHJlcXVpcmUoJy4vbGliL3JuZycpO1xudmFyIGJ5dGVzVG9VdWlkID0gcmVxdWlyZSgnLi9saWIvYnl0ZXNUb1V1aWQnKTtcblxuLy8gKipgdjEoKWAgLSBHZW5lcmF0ZSB0aW1lLWJhc2VkIFVVSUQqKlxuLy9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9MaW9zSy9VVUlELmpzXG4vLyBhbmQgaHR0cDovL2RvY3MucHl0aG9uLm9yZy9saWJyYXJ5L3V1aWQuaHRtbFxuXG52YXIgX25vZGVJZDtcbnZhciBfY2xvY2tzZXE7XG5cbi8vIFByZXZpb3VzIHV1aWQgY3JlYXRpb24gdGltZVxudmFyIF9sYXN0TVNlY3MgPSAwO1xudmFyIF9sYXN0TlNlY3MgPSAwO1xuXG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2Jyb29mYS9ub2RlLXV1aWQgZm9yIEFQSSBkZXRhaWxzXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgW107XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBub2RlID0gb3B0aW9ucy5ub2RlIHx8IF9ub2RlSWQ7XG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7XG5cbiAgLy8gbm9kZSBhbmQgY2xvY2tzZXEgbmVlZCB0byBiZSBpbml0aWFsaXplZCB0byByYW5kb20gdmFsdWVzIGlmIHRoZXkncmUgbm90XG4gIC8vIHNwZWNpZmllZC4gIFdlIGRvIHRoaXMgbGF6aWx5IHRvIG1pbmltaXplIGlzc3VlcyByZWxhdGVkIHRvIGluc3VmZmljaWVudFxuICAvLyBzeXN0ZW0gZW50cm9weS4gIFNlZSAjMTg5XG4gIGlmIChub2RlID09IG51bGwgfHwgY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgIHZhciBzZWVkQnl0ZXMgPSBybmcoKTtcbiAgICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC41LCBjcmVhdGUgYW5kIDQ4LWJpdCBub2RlIGlkLCAoNDcgcmFuZG9tIGJpdHMgKyBtdWx0aWNhc3QgYml0ID0gMSlcbiAgICAgIG5vZGUgPSBfbm9kZUlkID0gW1xuICAgICAgICBzZWVkQnl0ZXNbMF0gfCAweDAxLFxuICAgICAgICBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XVxuICAgICAgXTtcbiAgICB9XG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9XG5cbiAgLy8gVVVJRCB0aW1lc3RhbXBzIGFyZSAxMDAgbmFuby1zZWNvbmQgdW5pdHMgc2luY2UgdGhlIEdyZWdvcmlhbiBlcG9jaCxcbiAgLy8gKDE1ODItMTAtMTUgMDA6MDApLiAgSlNOdW1iZXJzIGFyZW4ndCBwcmVjaXNlIGVub3VnaCBmb3IgdGhpcywgc29cbiAgLy8gdGltZSBpcyBoYW5kbGVkIGludGVybmFsbHkgYXMgJ21zZWNzJyAoaW50ZWdlciBtaWxsaXNlY29uZHMpIGFuZCAnbnNlY3MnXG4gIC8vICgxMDAtbmFub3NlY29uZHMgb2Zmc2V0IGZyb20gbXNlY3MpIHNpbmNlIHVuaXggZXBvY2gsIDE5NzAtMDEtMDEgMDA6MDAuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG4gIHZhciBuc2VjcyA9IG9wdGlvbnMubnNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNlY3MgOiBfbGFzdE5TZWNzICsgMTtcblxuICAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG4gIHZhciBkdCA9IChtc2VjcyAtIF9sYXN0TVNlY3MpICsgKG5zZWNzIC0gX2xhc3ROU2VjcykvMTAwMDA7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9XG5cbiAgLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfVxuXG4gIC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1dWlkLnYxKCk6IENhblxcJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjJyk7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7XG5cbiAgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwO1xuXG4gIC8vIGB0aW1lX2xvd2BcbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjtcblxuICAvLyBgdGltZV9taWRgXG4gIHZhciB0bWggPSAobXNlY3MgLyAweDEwMDAwMDAwMCAqIDEwMDAwKSAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjtcblxuICAvLyBgdGltZV9oaWdoX2FuZF92ZXJzaW9uYFxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmO1xuXG4gIC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7XG5cbiAgLy8gYGNsb2NrX3NlcV9sb3dgXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjtcblxuICAvLyBgbm9kZWBcbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmID8gYnVmIDogYnl0ZXNUb1V1aWQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjE7XG4iLCJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PT0gJ2JpbmFyeScgPyBuZXcgQXJyYXkoMTYpIDogbnVsbDtcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gIHJuZHNbOF0gPSAocm5kc1s4XSAmIDB4M2YpIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHY0O1xuIiwidmFyIGNsb25lID0gKGZ1bmN0aW9uKCkge1xuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfaW5zdGFuY2VvZihvYmosIHR5cGUpIHtcbiAgcmV0dXJuIHR5cGUgIT0gbnVsbCAmJiBvYmogaW5zdGFuY2VvZiB0eXBlO1xufVxuXG52YXIgbmF0aXZlTWFwO1xudHJ5IHtcbiAgbmF0aXZlTWFwID0gTWFwO1xufSBjYXRjaChfKSB7XG4gIC8vIG1heWJlIGEgcmVmZXJlbmNlIGVycm9yIGJlY2F1c2Ugbm8gYE1hcGAuIEdpdmUgaXQgYSBkdW1teSB2YWx1ZSB0aGF0IG5vXG4gIC8vIHZhbHVlIHdpbGwgZXZlciBiZSBhbiBpbnN0YW5jZW9mLlxuICBuYXRpdmVNYXAgPSBmdW5jdGlvbigpIHt9O1xufVxuXG52YXIgbmF0aXZlU2V0O1xudHJ5IHtcbiAgbmF0aXZlU2V0ID0gU2V0O1xufSBjYXRjaChfKSB7XG4gIG5hdGl2ZVNldCA9IGZ1bmN0aW9uKCkge307XG59XG5cbnZhciBuYXRpdmVQcm9taXNlO1xudHJ5IHtcbiAgbmF0aXZlUHJvbWlzZSA9IFByb21pc2U7XG59IGNhdGNoKF8pIHtcbiAgbmF0aXZlUHJvbWlzZSA9IGZ1bmN0aW9uKCkge307XG59XG5cbi8qKlxuICogQ2xvbmVzIChjb3BpZXMpIGFuIE9iamVjdCB1c2luZyBkZWVwIGNvcHlpbmcuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBzdXBwb3J0cyBjaXJjdWxhciByZWZlcmVuY2VzIGJ5IGRlZmF1bHQsIGJ1dCBpZiB5b3UgYXJlIGNlcnRhaW5cbiAqIHRoZXJlIGFyZSBubyBjaXJjdWxhciByZWZlcmVuY2VzIGluIHlvdXIgb2JqZWN0LCB5b3UgY2FuIHNhdmUgc29tZSBDUFUgdGltZVxuICogYnkgY2FsbGluZyBjbG9uZShvYmosIGZhbHNlKS5cbiAqXG4gKiBDYXV0aW9uOiBpZiBgY2lyY3VsYXJgIGlzIGZhbHNlIGFuZCBgcGFyZW50YCBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzLFxuICogeW91ciBwcm9ncmFtIG1heSBlbnRlciBhbiBpbmZpbml0ZSBsb29wIGFuZCBjcmFzaC5cbiAqXG4gKiBAcGFyYW0gYHBhcmVudGAgLSB0aGUgb2JqZWN0IHRvIGJlIGNsb25lZFxuICogQHBhcmFtIGBjaXJjdWxhcmAgLSBzZXQgdG8gdHJ1ZSBpZiB0aGUgb2JqZWN0IHRvIGJlIGNsb25lZCBtYXkgY29udGFpblxuICogICAgY2lyY3VsYXIgcmVmZXJlbmNlcy4gKG9wdGlvbmFsIC0gdHJ1ZSBieSBkZWZhdWx0KVxuICogQHBhcmFtIGBkZXB0aGAgLSBzZXQgdG8gYSBudW1iZXIgaWYgdGhlIG9iamVjdCBpcyBvbmx5IHRvIGJlIGNsb25lZCB0b1xuICogICAgYSBwYXJ0aWN1bGFyIGRlcHRoLiAob3B0aW9uYWwgLSBkZWZhdWx0cyB0byBJbmZpbml0eSlcbiAqIEBwYXJhbSBgcHJvdG90eXBlYCAtIHNldHMgdGhlIHByb3RvdHlwZSB0byBiZSB1c2VkIHdoZW4gY2xvbmluZyBhbiBvYmplY3QuXG4gKiAgICAob3B0aW9uYWwgLSBkZWZhdWx0cyB0byBwYXJlbnQgcHJvdG90eXBlKS5cbiAqIEBwYXJhbSBgaW5jbHVkZU5vbkVudW1lcmFibGVgIC0gc2V0IHRvIHRydWUgaWYgdGhlIG5vbi1lbnVtZXJhYmxlIHByb3BlcnRpZXNcbiAqICAgIHNob3VsZCBiZSBjbG9uZWQgYXMgd2VsbC4gTm9uLWVudW1lcmFibGUgcHJvcGVydGllcyBvbiB0aGUgcHJvdG90eXBlXG4gKiAgICBjaGFpbiB3aWxsIGJlIGlnbm9yZWQuIChvcHRpb25hbCAtIGZhbHNlIGJ5IGRlZmF1bHQpXG4qL1xuZnVuY3Rpb24gY2xvbmUocGFyZW50LCBjaXJjdWxhciwgZGVwdGgsIHByb3RvdHlwZSwgaW5jbHVkZU5vbkVudW1lcmFibGUpIHtcbiAgaWYgKHR5cGVvZiBjaXJjdWxhciA9PT0gJ29iamVjdCcpIHtcbiAgICBkZXB0aCA9IGNpcmN1bGFyLmRlcHRoO1xuICAgIHByb3RvdHlwZSA9IGNpcmN1bGFyLnByb3RvdHlwZTtcbiAgICBpbmNsdWRlTm9uRW51bWVyYWJsZSA9IGNpcmN1bGFyLmluY2x1ZGVOb25FbnVtZXJhYmxlO1xuICAgIGNpcmN1bGFyID0gY2lyY3VsYXIuY2lyY3VsYXI7XG4gIH1cbiAgLy8gbWFpbnRhaW4gdHdvIGFycmF5cyBmb3IgY2lyY3VsYXIgcmVmZXJlbmNlcywgd2hlcmUgY29ycmVzcG9uZGluZyBwYXJlbnRzXG4gIC8vIGFuZCBjaGlsZHJlbiBoYXZlIHRoZSBzYW1lIGluZGV4XG4gIHZhciBhbGxQYXJlbnRzID0gW107XG4gIHZhciBhbGxDaGlsZHJlbiA9IFtdO1xuXG4gIHZhciB1c2VCdWZmZXIgPSB0eXBlb2YgQnVmZmVyICE9ICd1bmRlZmluZWQnO1xuXG4gIGlmICh0eXBlb2YgY2lyY3VsYXIgPT0gJ3VuZGVmaW5lZCcpXG4gICAgY2lyY3VsYXIgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZGVwdGggPT0gJ3VuZGVmaW5lZCcpXG4gICAgZGVwdGggPSBJbmZpbml0eTtcblxuICAvLyByZWN1cnNlIHRoaXMgZnVuY3Rpb24gc28gd2UgZG9uJ3QgcmVzZXQgYWxsUGFyZW50cyBhbmQgYWxsQ2hpbGRyZW5cbiAgZnVuY3Rpb24gX2Nsb25lKHBhcmVudCwgZGVwdGgpIHtcbiAgICAvLyBjbG9uaW5nIG51bGwgYWx3YXlzIHJldHVybnMgbnVsbFxuICAgIGlmIChwYXJlbnQgPT09IG51bGwpXG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIGlmIChkZXB0aCA9PT0gMClcbiAgICAgIHJldHVybiBwYXJlbnQ7XG5cbiAgICB2YXIgY2hpbGQ7XG4gICAgdmFyIHByb3RvO1xuICAgIGlmICh0eXBlb2YgcGFyZW50ICE9ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gcGFyZW50O1xuICAgIH1cblxuICAgIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIG5hdGl2ZU1hcCkpIHtcbiAgICAgIGNoaWxkID0gbmV3IG5hdGl2ZU1hcCgpO1xuICAgIH0gZWxzZSBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBuYXRpdmVTZXQpKSB7XG4gICAgICBjaGlsZCA9IG5ldyBuYXRpdmVTZXQoKTtcbiAgICB9IGVsc2UgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgbmF0aXZlUHJvbWlzZSkpIHtcbiAgICAgIGNoaWxkID0gbmV3IG5hdGl2ZVByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBwYXJlbnQudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJlc29sdmUoX2Nsb25lKHZhbHVlLCBkZXB0aCAtIDEpKTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KF9jbG9uZShlcnIsIGRlcHRoIC0gMSkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoY2xvbmUuX19pc0FycmF5KHBhcmVudCkpIHtcbiAgICAgIGNoaWxkID0gW107XG4gICAgfSBlbHNlIGlmIChjbG9uZS5fX2lzUmVnRXhwKHBhcmVudCkpIHtcbiAgICAgIGNoaWxkID0gbmV3IFJlZ0V4cChwYXJlbnQuc291cmNlLCBfX2dldFJlZ0V4cEZsYWdzKHBhcmVudCkpO1xuICAgICAgaWYgKHBhcmVudC5sYXN0SW5kZXgpIGNoaWxkLmxhc3RJbmRleCA9IHBhcmVudC5sYXN0SW5kZXg7XG4gICAgfSBlbHNlIGlmIChjbG9uZS5fX2lzRGF0ZShwYXJlbnQpKSB7XG4gICAgICBjaGlsZCA9IG5ldyBEYXRlKHBhcmVudC5nZXRUaW1lKCkpO1xuICAgIH0gZWxzZSBpZiAodXNlQnVmZmVyICYmIEJ1ZmZlci5pc0J1ZmZlcihwYXJlbnQpKSB7XG4gICAgICBpZiAoQnVmZmVyLmFsbG9jVW5zYWZlKSB7XG4gICAgICAgIC8vIE5vZGUuanMgPj0gNC41LjBcbiAgICAgICAgY2hpbGQgPSBCdWZmZXIuYWxsb2NVbnNhZmUocGFyZW50Lmxlbmd0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBPbGRlciBOb2RlLmpzIHZlcnNpb25zXG4gICAgICAgIGNoaWxkID0gbmV3IEJ1ZmZlcihwYXJlbnQubGVuZ3RoKTtcbiAgICAgIH1cbiAgICAgIHBhcmVudC5jb3B5KGNoaWxkKTtcbiAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9IGVsc2UgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgRXJyb3IpKSB7XG4gICAgICBjaGlsZCA9IE9iamVjdC5jcmVhdGUocGFyZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHR5cGVvZiBwcm90b3R5cGUgPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocGFyZW50KTtcbiAgICAgICAgY2hpbGQgPSBPYmplY3QuY3JlYXRlKHByb3RvKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBjaGlsZCA9IE9iamVjdC5jcmVhdGUocHJvdG90eXBlKTtcbiAgICAgICAgcHJvdG8gPSBwcm90b3R5cGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNpcmN1bGFyKSB7XG4gICAgICB2YXIgaW5kZXggPSBhbGxQYXJlbnRzLmluZGV4T2YocGFyZW50KTtcblxuICAgICAgaWYgKGluZGV4ICE9IC0xKSB7XG4gICAgICAgIHJldHVybiBhbGxDaGlsZHJlbltpbmRleF07XG4gICAgICB9XG4gICAgICBhbGxQYXJlbnRzLnB1c2gocGFyZW50KTtcbiAgICAgIGFsbENoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgIH1cblxuICAgIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIG5hdGl2ZU1hcCkpIHtcbiAgICAgIHBhcmVudC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgdmFyIGtleUNoaWxkID0gX2Nsb25lKGtleSwgZGVwdGggLSAxKTtcbiAgICAgICAgdmFyIHZhbHVlQ2hpbGQgPSBfY2xvbmUodmFsdWUsIGRlcHRoIC0gMSk7XG4gICAgICAgIGNoaWxkLnNldChrZXlDaGlsZCwgdmFsdWVDaGlsZCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgbmF0aXZlU2V0KSkge1xuICAgICAgcGFyZW50LmZvckVhY2goZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgdmFyIGVudHJ5Q2hpbGQgPSBfY2xvbmUodmFsdWUsIGRlcHRoIC0gMSk7XG4gICAgICAgIGNoaWxkLmFkZChlbnRyeUNoaWxkKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgaW4gcGFyZW50KSB7XG4gICAgICB2YXIgYXR0cnM7XG4gICAgICBpZiAocHJvdG8pIHtcbiAgICAgICAgYXR0cnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHByb3RvLCBpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGF0dHJzICYmIGF0dHJzLnNldCA9PSBudWxsKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgY2hpbGRbaV0gPSBfY2xvbmUocGFyZW50W2ldLCBkZXB0aCAtIDEpO1xuICAgIH1cblxuICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocGFyZW50KTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBEb24ndCBuZWVkIHRvIHdvcnJ5IGFib3V0IGNsb25pbmcgYSBzeW1ib2wgYmVjYXVzZSBpdCBpcyBhIHByaW1pdGl2ZSxcbiAgICAgICAgLy8gbGlrZSBhIG51bWJlciBvciBzdHJpbmcuXG4gICAgICAgIHZhciBzeW1ib2wgPSBzeW1ib2xzW2ldO1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocGFyZW50LCBzeW1ib2wpO1xuICAgICAgICBpZiAoZGVzY3JpcHRvciAmJiAhZGVzY3JpcHRvci5lbnVtZXJhYmxlICYmICFpbmNsdWRlTm9uRW51bWVyYWJsZSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkW3N5bWJvbF0gPSBfY2xvbmUocGFyZW50W3N5bWJvbF0sIGRlcHRoIC0gMSk7XG4gICAgICAgIGlmICghZGVzY3JpcHRvci5lbnVtZXJhYmxlKSB7XG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNoaWxkLCBzeW1ib2wsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaW5jbHVkZU5vbkVudW1lcmFibGUpIHtcbiAgICAgIHZhciBhbGxQcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocGFyZW50KTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsUHJvcGVydHlOYW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcHJvcGVydHlOYW1lID0gYWxsUHJvcGVydHlOYW1lc1tpXTtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHBhcmVudCwgcHJvcGVydHlOYW1lKTtcbiAgICAgICAgaWYgKGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci5lbnVtZXJhYmxlKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY2hpbGRbcHJvcGVydHlOYW1lXSA9IF9jbG9uZShwYXJlbnRbcHJvcGVydHlOYW1lXSwgZGVwdGggLSAxKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNoaWxkLCBwcm9wZXJ0eU5hbWUsIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY2hpbGQ7XG4gIH1cblxuICByZXR1cm4gX2Nsb25lKHBhcmVudCwgZGVwdGgpO1xufVxuXG4vKipcbiAqIFNpbXBsZSBmbGF0IGNsb25lIHVzaW5nIHByb3RvdHlwZSwgYWNjZXB0cyBvbmx5IG9iamVjdHMsIHVzZWZ1bGwgZm9yIHByb3BlcnR5XG4gKiBvdmVycmlkZSBvbiBGTEFUIGNvbmZpZ3VyYXRpb24gb2JqZWN0IChubyBuZXN0ZWQgcHJvcHMpLlxuICpcbiAqIFVTRSBXSVRIIENBVVRJT04hIFRoaXMgbWF5IG5vdCBiZWhhdmUgYXMgeW91IHdpc2ggaWYgeW91IGRvIG5vdCBrbm93IGhvdyB0aGlzXG4gKiB3b3Jrcy5cbiAqL1xuY2xvbmUuY2xvbmVQcm90b3R5cGUgPSBmdW5jdGlvbiBjbG9uZVByb3RvdHlwZShwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCA9PT0gbnVsbClcbiAgICByZXR1cm4gbnVsbDtcblxuICB2YXIgYyA9IGZ1bmN0aW9uICgpIHt9O1xuICBjLnByb3RvdHlwZSA9IHBhcmVudDtcbiAgcmV0dXJuIG5ldyBjKCk7XG59O1xuXG4vLyBwcml2YXRlIHV0aWxpdHkgZnVuY3Rpb25zXG5cbmZ1bmN0aW9uIF9fb2JqVG9TdHIobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuY2xvbmUuX19vYmpUb1N0ciA9IF9fb2JqVG9TdHI7XG5cbmZ1bmN0aW9uIF9faXNEYXRlKG8pIHtcbiAgcmV0dXJuIHR5cGVvZiBvID09PSAnb2JqZWN0JyAmJiBfX29ialRvU3RyKG8pID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5jbG9uZS5fX2lzRGF0ZSA9IF9faXNEYXRlO1xuXG5mdW5jdGlvbiBfX2lzQXJyYXkobykge1xuICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnICYmIF9fb2JqVG9TdHIobykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5jbG9uZS5fX2lzQXJyYXkgPSBfX2lzQXJyYXk7XG5cbmZ1bmN0aW9uIF9faXNSZWdFeHAobykge1xuICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnICYmIF9fb2JqVG9TdHIobykgPT09ICdbb2JqZWN0IFJlZ0V4cF0nO1xufVxuY2xvbmUuX19pc1JlZ0V4cCA9IF9faXNSZWdFeHA7XG5cbmZ1bmN0aW9uIF9fZ2V0UmVnRXhwRmxhZ3MocmUpIHtcbiAgdmFyIGZsYWdzID0gJyc7XG4gIGlmIChyZS5nbG9iYWwpIGZsYWdzICs9ICdnJztcbiAgaWYgKHJlLmlnbm9yZUNhc2UpIGZsYWdzICs9ICdpJztcbiAgaWYgKHJlLm11bHRpbGluZSkgZmxhZ3MgKz0gJ20nO1xuICByZXR1cm4gZmxhZ3M7XG59XG5jbG9uZS5fX2dldFJlZ0V4cEZsYWdzID0gX19nZXRSZWdFeHBGbGFncztcblxucmV0dXJuIGNsb25lO1xufSkoKTtcblxuaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gY2xvbmU7XG59XG4iLCIvKiFcbiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxmZXJvc3NAZmVyb3NzLm9yZz4gPGh0dHA6Ly9mZXJvc3Mub3JnPlxuICogQGxpY2Vuc2UgIE1JVFxuICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xuXG4ndXNlIHN0cmljdCdcblxudmFyIGJhc2U2NCA9IHJlcXVpcmUoJ2Jhc2U2NC1qcycpXG52YXIgaWVlZTc1NCA9IHJlcXVpcmUoJ2llZWU3NTQnKVxudmFyIGlzQXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuZXhwb3J0cy5CdWZmZXIgPSBCdWZmZXJcbmV4cG9ydHMuU2xvd0J1ZmZlciA9IFNsb3dCdWZmZXJcbmV4cG9ydHMuSU5TUEVDVF9NQVhfQllURVMgPSA1MFxuXG4vKipcbiAqIElmIGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGA6XG4gKiAgID09PSB0cnVlICAgIFVzZSBVaW50OEFycmF5IGltcGxlbWVudGF0aW9uIChmYXN0ZXN0KVxuICogICA9PT0gZmFsc2UgICBVc2UgT2JqZWN0IGltcGxlbWVudGF0aW9uIChtb3N0IGNvbXBhdGlibGUsIGV2ZW4gSUU2KVxuICpcbiAqIEJyb3dzZXJzIHRoYXQgc3VwcG9ydCB0eXBlZCBhcnJheXMgYXJlIElFIDEwKywgRmlyZWZveCA0KywgQ2hyb21lIDcrLCBTYWZhcmkgNS4xKyxcbiAqIE9wZXJhIDExLjYrLCBpT1MgNC4yKy5cbiAqXG4gKiBEdWUgdG8gdmFyaW91cyBicm93c2VyIGJ1Z3MsIHNvbWV0aW1lcyB0aGUgT2JqZWN0IGltcGxlbWVudGF0aW9uIHdpbGwgYmUgdXNlZCBldmVuXG4gKiB3aGVuIHRoZSBicm93c2VyIHN1cHBvcnRzIHR5cGVkIGFycmF5cy5cbiAqXG4gKiBOb3RlOlxuICpcbiAqICAgLSBGaXJlZm94IDQtMjkgbGFja3Mgc3VwcG9ydCBmb3IgYWRkaW5nIG5ldyBwcm9wZXJ0aWVzIHRvIGBVaW50OEFycmF5YCBpbnN0YW5jZXMsXG4gKiAgICAgU2VlOiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02OTU0MzguXG4gKlxuICogICAtIENocm9tZSA5LTEwIGlzIG1pc3NpbmcgdGhlIGBUeXBlZEFycmF5LnByb3RvdHlwZS5zdWJhcnJheWAgZnVuY3Rpb24uXG4gKlxuICogICAtIElFMTAgaGFzIGEgYnJva2VuIGBUeXBlZEFycmF5LnByb3RvdHlwZS5zdWJhcnJheWAgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhcnJheXMgb2ZcbiAqICAgICBpbmNvcnJlY3QgbGVuZ3RoIGluIHNvbWUgc2l0dWF0aW9ucy5cblxuICogV2UgZGV0ZWN0IHRoZXNlIGJ1Z2d5IGJyb3dzZXJzIGFuZCBzZXQgYEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUYCB0byBgZmFsc2VgIHNvIHRoZXlcbiAqIGdldCB0aGUgT2JqZWN0IGltcGxlbWVudGF0aW9uLCB3aGljaCBpcyBzbG93ZXIgYnV0IGJlaGF2ZXMgY29ycmVjdGx5LlxuICovXG5CdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCA9IGdsb2JhbC5UWVBFRF9BUlJBWV9TVVBQT1JUICE9PSB1bmRlZmluZWRcbiAgPyBnbG9iYWwuVFlQRURfQVJSQVlfU1VQUE9SVFxuICA6IHR5cGVkQXJyYXlTdXBwb3J0KClcblxuLypcbiAqIEV4cG9ydCBrTWF4TGVuZ3RoIGFmdGVyIHR5cGVkIGFycmF5IHN1cHBvcnQgaXMgZGV0ZXJtaW5lZC5cbiAqL1xuZXhwb3J0cy5rTWF4TGVuZ3RoID0ga01heExlbmd0aCgpXG5cbmZ1bmN0aW9uIHR5cGVkQXJyYXlTdXBwb3J0ICgpIHtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQ4QXJyYXkoMSlcbiAgICBhcnIuX19wcm90b19fID0ge19fcHJvdG9fXzogVWludDhBcnJheS5wcm90b3R5cGUsIGZvbzogZnVuY3Rpb24gKCkgeyByZXR1cm4gNDIgfX1cbiAgICByZXR1cm4gYXJyLmZvbygpID09PSA0MiAmJiAvLyB0eXBlZCBhcnJheSBpbnN0YW5jZXMgY2FuIGJlIGF1Z21lbnRlZFxuICAgICAgICB0eXBlb2YgYXJyLnN1YmFycmF5ID09PSAnZnVuY3Rpb24nICYmIC8vIGNocm9tZSA5LTEwIGxhY2sgYHN1YmFycmF5YFxuICAgICAgICBhcnIuc3ViYXJyYXkoMSwgMSkuYnl0ZUxlbmd0aCA9PT0gMCAvLyBpZTEwIGhhcyBicm9rZW4gYHN1YmFycmF5YFxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuZnVuY3Rpb24ga01heExlbmd0aCAoKSB7XG4gIHJldHVybiBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVFxuICAgID8gMHg3ZmZmZmZmZlxuICAgIDogMHgzZmZmZmZmZlxufVxuXG5mdW5jdGlvbiBjcmVhdGVCdWZmZXIgKHRoYXQsIGxlbmd0aCkge1xuICBpZiAoa01heExlbmd0aCgpIDwgbGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgdHlwZWQgYXJyYXkgbGVuZ3RoJylcbiAgfVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICAvLyBSZXR1cm4gYW4gYXVnbWVudGVkIGBVaW50OEFycmF5YCBpbnN0YW5jZSwgZm9yIGJlc3QgcGVyZm9ybWFuY2VcbiAgICB0aGF0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKVxuICAgIHRoYXQuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICB9IGVsc2Uge1xuICAgIC8vIEZhbGxiYWNrOiBSZXR1cm4gYW4gb2JqZWN0IGluc3RhbmNlIG9mIHRoZSBCdWZmZXIgY2xhc3NcbiAgICBpZiAodGhhdCA9PT0gbnVsbCkge1xuICAgICAgdGhhdCA9IG5ldyBCdWZmZXIobGVuZ3RoKVxuICAgIH1cbiAgICB0aGF0Lmxlbmd0aCA9IGxlbmd0aFxuICB9XG5cbiAgcmV0dXJuIHRoYXRcbn1cblxuLyoqXG4gKiBUaGUgQnVmZmVyIGNvbnN0cnVjdG9yIHJldHVybnMgaW5zdGFuY2VzIG9mIGBVaW50OEFycmF5YCB0aGF0IGhhdmUgdGhlaXJcbiAqIHByb3RvdHlwZSBjaGFuZ2VkIHRvIGBCdWZmZXIucHJvdG90eXBlYC4gRnVydGhlcm1vcmUsIGBCdWZmZXJgIGlzIGEgc3ViY2xhc3Mgb2ZcbiAqIGBVaW50OEFycmF5YCwgc28gdGhlIHJldHVybmVkIGluc3RhbmNlcyB3aWxsIGhhdmUgYWxsIHRoZSBub2RlIGBCdWZmZXJgIG1ldGhvZHNcbiAqIGFuZCB0aGUgYFVpbnQ4QXJyYXlgIG1ldGhvZHMuIFNxdWFyZSBicmFja2V0IG5vdGF0aW9uIHdvcmtzIGFzIGV4cGVjdGVkIC0tIGl0XG4gKiByZXR1cm5zIGEgc2luZ2xlIG9jdGV0LlxuICpcbiAqIFRoZSBgVWludDhBcnJheWAgcHJvdG90eXBlIHJlbWFpbnMgdW5tb2RpZmllZC5cbiAqL1xuXG5mdW5jdGlvbiBCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgJiYgISh0aGlzIGluc3RhbmNlb2YgQnVmZmVyKSkge1xuICAgIHJldHVybiBuZXcgQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgLy8gQ29tbW9uIGNhc2UuXG4gIGlmICh0eXBlb2YgYXJnID09PSAnbnVtYmVyJykge1xuICAgIGlmICh0eXBlb2YgZW5jb2RpbmdPck9mZnNldCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0lmIGVuY29kaW5nIGlzIHNwZWNpZmllZCB0aGVuIHRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJ1xuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gYWxsb2NVbnNhZmUodGhpcywgYXJnKVxuICB9XG4gIHJldHVybiBmcm9tKHRoaXMsIGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucG9vbFNpemUgPSA4MTkyIC8vIG5vdCB1c2VkIGJ5IHRoaXMgaW1wbGVtZW50YXRpb25cblxuLy8gVE9ETzogTGVnYWN5LCBub3QgbmVlZGVkIGFueW1vcmUuIFJlbW92ZSBpbiBuZXh0IG1ham9yIHZlcnNpb24uXG5CdWZmZXIuX2F1Z21lbnQgPSBmdW5jdGlvbiAoYXJyKSB7XG4gIGFyci5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gZnJvbSAodGhhdCwgdmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlcicpXG4gIH1cblxuICBpZiAodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih0aGF0LCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZnJvbVN0cmluZyh0aGF0LCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldClcbiAgfVxuXG4gIHJldHVybiBmcm9tT2JqZWN0KHRoYXQsIHZhbHVlKVxufVxuXG4vKipcbiAqIEZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIEJ1ZmZlcihhcmcsIGVuY29kaW5nKSBidXQgdGhyb3dzIGEgVHlwZUVycm9yXG4gKiBpZiB2YWx1ZSBpcyBhIG51bWJlci5cbiAqIEJ1ZmZlci5mcm9tKHN0clssIGVuY29kaW5nXSlcbiAqIEJ1ZmZlci5mcm9tKGFycmF5KVxuICogQnVmZmVyLmZyb20oYnVmZmVyKVxuICogQnVmZmVyLmZyb20oYXJyYXlCdWZmZXJbLCBieXRlT2Zmc2V0WywgbGVuZ3RoXV0pXG4gKiovXG5CdWZmZXIuZnJvbSA9IGZ1bmN0aW9uICh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBmcm9tKG51bGwsIHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cbmlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICBCdWZmZXIucHJvdG90eXBlLl9fcHJvdG9fXyA9IFVpbnQ4QXJyYXkucHJvdG90eXBlXG4gIEJ1ZmZlci5fX3Byb3RvX18gPSBVaW50OEFycmF5XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wuc3BlY2llcyAmJlxuICAgICAgQnVmZmVyW1N5bWJvbC5zcGVjaWVzXSA9PT0gQnVmZmVyKSB7XG4gICAgLy8gRml4IHN1YmFycmF5KCkgaW4gRVMyMDE2LiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL3B1bGwvOTdcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLCBTeW1ib2wuc3BlY2llcywge1xuICAgICAgdmFsdWU6IG51bGwsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KVxuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFNpemUgKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9IGVsc2UgaWYgKHNpemUgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG5lZ2F0aXZlJylcbiAgfVxufVxuXG5mdW5jdGlvbiBhbGxvYyAodGhhdCwgc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgYXNzZXJ0U2l6ZShzaXplKVxuICBpZiAoc2l6ZSA8PSAwKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKVxuICB9XG4gIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHtcbiAgICAvLyBPbmx5IHBheSBhdHRlbnRpb24gdG8gZW5jb2RpbmcgaWYgaXQncyBhIHN0cmluZy4gVGhpc1xuICAgIC8vIHByZXZlbnRzIGFjY2lkZW50YWxseSBzZW5kaW5nIGluIGEgbnVtYmVyIHRoYXQgd291bGRcbiAgICAvLyBiZSBpbnRlcnByZXR0ZWQgYXMgYSBzdGFydCBvZmZzZXQuXG4gICAgcmV0dXJuIHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZydcbiAgICAgID8gY3JlYXRlQnVmZmVyKHRoYXQsIHNpemUpLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgICA6IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKS5maWxsKGZpbGwpXG4gIH1cbiAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqIGFsbG9jKHNpemVbLCBmaWxsWywgZW5jb2RpbmddXSlcbiAqKi9cbkJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xuICByZXR1cm4gYWxsb2MobnVsbCwgc2l6ZSwgZmlsbCwgZW5jb2RpbmcpXG59XG5cbmZ1bmN0aW9uIGFsbG9jVW5zYWZlICh0aGF0LCBzaXplKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgdGhhdCA9IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplIDwgMCA/IDAgOiBjaGVja2VkKHNpemUpIHwgMClcbiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7XG4gICAgICB0aGF0W2ldID0gMFxuICAgIH1cbiAgfVxuICByZXR1cm4gdGhhdFxufVxuXG4vKipcbiAqIEVxdWl2YWxlbnQgdG8gQnVmZmVyKG51bSksIGJ5IGRlZmF1bHQgY3JlYXRlcyBhIG5vbi16ZXJvLWZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKiAqL1xuQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgcmV0dXJuIGFsbG9jVW5zYWZlKG51bGwsIHNpemUpXG59XG4vKipcbiAqIEVxdWl2YWxlbnQgdG8gU2xvd0J1ZmZlcihudW0pLCBieSBkZWZhdWx0IGNyZWF0ZXMgYSBub24temVyby1maWxsZWQgQnVmZmVyIGluc3RhbmNlLlxuICovXG5CdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgcmV0dXJuIGFsbG9jVW5zYWZlKG51bGwsIHNpemUpXG59XG5cbmZ1bmN0aW9uIGZyb21TdHJpbmcgKHRoYXQsIHN0cmluZywgZW5jb2RpbmcpIHtcbiAgaWYgKHR5cGVvZiBlbmNvZGluZyAhPT0gJ3N0cmluZycgfHwgZW5jb2RpbmcgPT09ICcnKSB7XG4gICAgZW5jb2RpbmcgPSAndXRmOCdcbiAgfVxuXG4gIGlmICghQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJlbmNvZGluZ1wiIG11c3QgYmUgYSB2YWxpZCBzdHJpbmcgZW5jb2RpbmcnKVxuICB9XG5cbiAgdmFyIGxlbmd0aCA9IGJ5dGVMZW5ndGgoc3RyaW5nLCBlbmNvZGluZykgfCAwXG4gIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgbGVuZ3RoKVxuXG4gIHZhciBhY3R1YWwgPSB0aGF0LndyaXRlKHN0cmluZywgZW5jb2RpbmcpXG5cbiAgaWYgKGFjdHVhbCAhPT0gbGVuZ3RoKSB7XG4gICAgLy8gV3JpdGluZyBhIGhleCBzdHJpbmcsIGZvciBleGFtcGxlLCB0aGF0IGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVycyB3aWxsXG4gICAgLy8gY2F1c2UgZXZlcnl0aGluZyBhZnRlciB0aGUgZmlyc3QgaW52YWxpZCBjaGFyYWN0ZXIgdG8gYmUgaWdub3JlZC4gKGUuZy5cbiAgICAvLyAnYWJ4eGNkJyB3aWxsIGJlIHRyZWF0ZWQgYXMgJ2FiJylcbiAgICB0aGF0ID0gdGhhdC5zbGljZSgwLCBhY3R1YWwpXG4gIH1cblxuICByZXR1cm4gdGhhdFxufVxuXG5mdW5jdGlvbiBmcm9tQXJyYXlMaWtlICh0aGF0LCBhcnJheSkge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoIDwgMCA/IDAgOiBjaGVja2VkKGFycmF5Lmxlbmd0aCkgfCAwXG4gIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgbGVuZ3RoKVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhhdFtpXSA9IGFycmF5W2ldICYgMjU1XG4gIH1cbiAgcmV0dXJuIHRoYXRcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5QnVmZmVyICh0aGF0LCBhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gIGFycmF5LmJ5dGVMZW5ndGggLy8gdGhpcyB0aHJvd3MgaWYgYGFycmF5YCBpcyBub3QgYSB2YWxpZCBBcnJheUJ1ZmZlclxuXG4gIGlmIChieXRlT2Zmc2V0IDwgMCB8fCBhcnJheS5ieXRlTGVuZ3RoIDwgYnl0ZU9mZnNldCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcXCdvZmZzZXRcXCcgaXMgb3V0IG9mIGJvdW5kcycpXG4gIH1cblxuICBpZiAoYXJyYXkuYnl0ZUxlbmd0aCA8IGJ5dGVPZmZzZXQgKyAobGVuZ3RoIHx8IDApKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1xcJ2xlbmd0aFxcJyBpcyBvdXQgb2YgYm91bmRzJylcbiAgfVxuXG4gIGlmIChieXRlT2Zmc2V0ID09PSB1bmRlZmluZWQgJiYgbGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICBhcnJheSA9IG5ldyBVaW50OEFycmF5KGFycmF5KVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldClcbiAgfSBlbHNlIHtcbiAgICBhcnJheSA9IG5ldyBVaW50OEFycmF5KGFycmF5LCBieXRlT2Zmc2V0LCBsZW5ndGgpXG4gIH1cblxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICAvLyBSZXR1cm4gYW4gYXVnbWVudGVkIGBVaW50OEFycmF5YCBpbnN0YW5jZSwgZm9yIGJlc3QgcGVyZm9ybWFuY2VcbiAgICB0aGF0ID0gYXJyYXlcbiAgICB0aGF0Ll9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgfSBlbHNlIHtcbiAgICAvLyBGYWxsYmFjazogUmV0dXJuIGFuIG9iamVjdCBpbnN0YW5jZSBvZiB0aGUgQnVmZmVyIGNsYXNzXG4gICAgdGhhdCA9IGZyb21BcnJheUxpa2UodGhhdCwgYXJyYXkpXG4gIH1cbiAgcmV0dXJuIHRoYXRcbn1cblxuZnVuY3Rpb24gZnJvbU9iamVjdCAodGhhdCwgb2JqKSB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIob2JqKSkge1xuICAgIHZhciBsZW4gPSBjaGVja2VkKG9iai5sZW5ndGgpIHwgMFxuICAgIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgbGVuKVxuXG4gICAgaWYgKHRoYXQubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdGhhdFxuICAgIH1cblxuICAgIG9iai5jb3B5KHRoYXQsIDAsIDAsIGxlbilcbiAgICByZXR1cm4gdGhhdFxuICB9XG5cbiAgaWYgKG9iaikge1xuICAgIGlmICgodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICBvYmouYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHx8ICdsZW5ndGgnIGluIG9iaikge1xuICAgICAgaWYgKHR5cGVvZiBvYmoubGVuZ3RoICE9PSAnbnVtYmVyJyB8fCBpc25hbihvYmoubGVuZ3RoKSkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQnVmZmVyKHRoYXQsIDApXG4gICAgICB9XG4gICAgICByZXR1cm4gZnJvbUFycmF5TGlrZSh0aGF0LCBvYmopXG4gICAgfVxuXG4gICAgaWYgKG9iai50eXBlID09PSAnQnVmZmVyJyAmJiBpc0FycmF5KG9iai5kYXRhKSkge1xuICAgICAgcmV0dXJuIGZyb21BcnJheUxpa2UodGhhdCwgb2JqLmRhdGEpXG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbmV3IFR5cGVFcnJvcignRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIGFycmF5LWxpa2Ugb2JqZWN0LicpXG59XG5cbmZ1bmN0aW9uIGNoZWNrZWQgKGxlbmd0aCkge1xuICAvLyBOb3RlOiBjYW5ub3QgdXNlIGBsZW5ndGggPCBrTWF4TGVuZ3RoKClgIGhlcmUgYmVjYXVzZSB0aGF0IGZhaWxzIHdoZW5cbiAgLy8gbGVuZ3RoIGlzIE5hTiAod2hpY2ggaXMgb3RoZXJ3aXNlIGNvZXJjZWQgdG8gemVyby4pXG4gIGlmIChsZW5ndGggPj0ga01heExlbmd0aCgpKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0F0dGVtcHQgdG8gYWxsb2NhdGUgQnVmZmVyIGxhcmdlciB0aGFuIG1heGltdW0gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgJ3NpemU6IDB4JyArIGtNYXhMZW5ndGgoKS50b1N0cmluZygxNikgKyAnIGJ5dGVzJylcbiAgfVxuICByZXR1cm4gbGVuZ3RoIHwgMFxufVxuXG5mdW5jdGlvbiBTbG93QnVmZmVyIChsZW5ndGgpIHtcbiAgaWYgKCtsZW5ndGggIT0gbGVuZ3RoKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZXFlcWVxXG4gICAgbGVuZ3RoID0gMFxuICB9XG4gIHJldHVybiBCdWZmZXIuYWxsb2MoK2xlbmd0aClcbn1cblxuQnVmZmVyLmlzQnVmZmVyID0gZnVuY3Rpb24gaXNCdWZmZXIgKGIpIHtcbiAgcmV0dXJuICEhKGIgIT0gbnVsbCAmJiBiLl9pc0J1ZmZlcilcbn1cblxuQnVmZmVyLmNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlIChhLCBiKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGEpIHx8ICFCdWZmZXIuaXNCdWZmZXIoYikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgbXVzdCBiZSBCdWZmZXJzJylcbiAgfVxuXG4gIGlmIChhID09PSBiKSByZXR1cm4gMFxuXG4gIHZhciB4ID0gYS5sZW5ndGhcbiAgdmFyIHkgPSBiLmxlbmd0aFxuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBNYXRoLm1pbih4LCB5KTsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgIHggPSBhW2ldXG4gICAgICB5ID0gYltpXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoeCA8IHkpIHJldHVybiAtMVxuICBpZiAoeSA8IHgpIHJldHVybiAxXG4gIHJldHVybiAwXG59XG5cbkJ1ZmZlci5pc0VuY29kaW5nID0gZnVuY3Rpb24gaXNFbmNvZGluZyAoZW5jb2RpbmcpIHtcbiAgc3dpdGNoIChTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBjYXNlICdoZXgnOlxuICAgIGNhc2UgJ3V0ZjgnOlxuICAgIGNhc2UgJ3V0Zi04JzpcbiAgICBjYXNlICdhc2NpaSc6XG4gICAgY2FzZSAnbGF0aW4xJzpcbiAgICBjYXNlICdiaW5hcnknOlxuICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgY2FzZSAndWNzMic6XG4gICAgY2FzZSAndWNzLTInOlxuICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgIHJldHVybiB0cnVlXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbkJ1ZmZlci5jb25jYXQgPSBmdW5jdGlvbiBjb25jYXQgKGxpc3QsIGxlbmd0aCkge1xuICBpZiAoIWlzQXJyYXkobGlzdCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKVxuICB9XG5cbiAgaWYgKGxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKVxuICB9XG5cbiAgdmFyIGlcbiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbGVuZ3RoID0gMFxuICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgICBsZW5ndGggKz0gbGlzdFtpXS5sZW5ndGhcbiAgICB9XG4gIH1cblxuICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aClcbiAgdmFyIHBvcyA9IDBcbiAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgYnVmID0gbGlzdFtpXVxuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpXG4gICAgfVxuICAgIGJ1Zi5jb3B5KGJ1ZmZlciwgcG9zKVxuICAgIHBvcyArPSBidWYubGVuZ3RoXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlclxufVxuXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmcubGVuZ3RoXG4gIH1cbiAgaWYgKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgKEFycmF5QnVmZmVyLmlzVmlldyhzdHJpbmcpIHx8IHN0cmluZyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSkge1xuICAgIHJldHVybiBzdHJpbmcuYnl0ZUxlbmd0aFxuICB9XG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuICAgIHN0cmluZyA9ICcnICsgc3RyaW5nXG4gIH1cblxuICB2YXIgbGVuID0gc3RyaW5nLmxlbmd0aFxuICBpZiAobGVuID09PSAwKSByZXR1cm4gMFxuXG4gIC8vIFVzZSBhIGZvciBsb29wIHRvIGF2b2lkIHJlY3Vyc2lvblxuICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZVxuICBmb3IgKDs7KSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgY2FzZSAnbGF0aW4xJzpcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIHJldHVybiBsZW5cbiAgICAgIGNhc2UgJ3V0ZjgnOlxuICAgICAgY2FzZSAndXRmLTgnOlxuICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgIHJldHVybiB1dGY4VG9CeXRlcyhzdHJpbmcpLmxlbmd0aFxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIGxlbiAqIDJcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBsZW4gPj4+IDFcbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRUb0J5dGVzKHN0cmluZykubGVuZ3RoXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHJldHVybiB1dGY4VG9CeXRlcyhzdHJpbmcpLmxlbmd0aCAvLyBhc3N1bWUgdXRmOFxuICAgICAgICBlbmNvZGluZyA9ICgnJyArIGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuQnVmZmVyLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5cbmZ1bmN0aW9uIHNsb3dUb1N0cmluZyAoZW5jb2RpbmcsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxvd2VyZWRDYXNlID0gZmFsc2VcblxuICAvLyBObyBuZWVkIHRvIHZlcmlmeSB0aGF0IFwidGhpcy5sZW5ndGggPD0gTUFYX1VJTlQzMlwiIHNpbmNlIGl0J3MgYSByZWFkLW9ubHlcbiAgLy8gcHJvcGVydHkgb2YgYSB0eXBlZCBhcnJheS5cblxuICAvLyBUaGlzIGJlaGF2ZXMgbmVpdGhlciBsaWtlIFN0cmluZyBub3IgVWludDhBcnJheSBpbiB0aGF0IHdlIHNldCBzdGFydC9lbmRcbiAgLy8gdG8gdGhlaXIgdXBwZXIvbG93ZXIgYm91bmRzIGlmIHRoZSB2YWx1ZSBwYXNzZWQgaXMgb3V0IG9mIHJhbmdlLlxuICAvLyB1bmRlZmluZWQgaXMgaGFuZGxlZCBzcGVjaWFsbHkgYXMgcGVyIEVDTUEtMjYyIDZ0aCBFZGl0aW9uLFxuICAvLyBTZWN0aW9uIDEzLjMuMy43IFJ1bnRpbWUgU2VtYW50aWNzOiBLZXllZEJpbmRpbmdJbml0aWFsaXphdGlvbi5cbiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQgfHwgc3RhcnQgPCAwKSB7XG4gICAgc3RhcnQgPSAwXG4gIH1cbiAgLy8gUmV0dXJuIGVhcmx5IGlmIHN0YXJ0ID4gdGhpcy5sZW5ndGguIERvbmUgaGVyZSB0byBwcmV2ZW50IHBvdGVudGlhbCB1aW50MzJcbiAgLy8gY29lcmNpb24gZmFpbCBiZWxvdy5cbiAgaWYgKHN0YXJ0ID4gdGhpcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmIChlbmQgPT09IHVuZGVmaW5lZCB8fCBlbmQgPiB0aGlzLmxlbmd0aCkge1xuICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gIH1cblxuICBpZiAoZW5kIDw9IDApIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIC8vIEZvcmNlIGNvZXJzaW9uIHRvIHVpbnQzMi4gVGhpcyB3aWxsIGFsc28gY29lcmNlIGZhbHNleS9OYU4gdmFsdWVzIHRvIDAuXG4gIGVuZCA+Pj49IDBcbiAgc3RhcnQgPj4+PSAwXG5cbiAgaWYgKGVuZCA8PSBzdGFydCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSAndXRmOCdcblxuICB3aGlsZSAodHJ1ZSkge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2hleCc6XG4gICAgICAgIHJldHVybiBoZXhTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuIHV0ZjhTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdhc2NpaSc6XG4gICAgICAgIHJldHVybiBhc2NpaVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgICBjYXNlICdiaW5hcnknOlxuICAgICAgICByZXR1cm4gbGF0aW4xU2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgICAgcmV0dXJuIGJhc2U2NFNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiB1dGYxNmxlU2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gICAgICAgIGVuY29kaW5nID0gKGVuY29kaW5nICsgJycpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgbG93ZXJlZENhc2UgPSB0cnVlXG4gICAgfVxuICB9XG59XG5cbi8vIFRoZSBwcm9wZXJ0eSBpcyB1c2VkIGJ5IGBCdWZmZXIuaXNCdWZmZXJgIGFuZCBgaXMtYnVmZmVyYCAoaW4gU2FmYXJpIDUtNykgdG8gZGV0ZWN0XG4vLyBCdWZmZXIgaW5zdGFuY2VzLlxuQnVmZmVyLnByb3RvdHlwZS5faXNCdWZmZXIgPSB0cnVlXG5cbmZ1bmN0aW9uIHN3YXAgKGIsIG4sIG0pIHtcbiAgdmFyIGkgPSBiW25dXG4gIGJbbl0gPSBiW21dXG4gIGJbbV0gPSBpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc3dhcDE2ID0gZnVuY3Rpb24gc3dhcDE2ICgpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSAyICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzJylcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSAyKSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgMSlcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAzMiA9IGZ1bmN0aW9uIHN3YXAzMiAoKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuICUgNCAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMzItYml0cycpXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHN3YXAodGhpcywgaSwgaSArIDMpXG4gICAgc3dhcCh0aGlzLCBpICsgMSwgaSArIDIpXG4gIH1cbiAgcmV0dXJuIHRoaXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zd2FwNjQgPSBmdW5jdGlvbiBzd2FwNjQgKCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbiAlIDggIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDY0LWJpdHMnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDgpIHtcbiAgICBzd2FwKHRoaXMsIGksIGkgKyA3KVxuICAgIHN3YXAodGhpcywgaSArIDEsIGkgKyA2KVxuICAgIHN3YXAodGhpcywgaSArIDIsIGkgKyA1KVxuICAgIHN3YXAodGhpcywgaSArIDMsIGkgKyA0KVxuICB9XG4gIHJldHVybiB0aGlzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyAoKSB7XG4gIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aCB8IDBcbiAgaWYgKGxlbmd0aCA9PT0gMCkgcmV0dXJuICcnXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gdXRmOFNsaWNlKHRoaXMsIDAsIGxlbmd0aClcbiAgcmV0dXJuIHNsb3dUb1N0cmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24gZXF1YWxzIChiKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyJylcbiAgaWYgKHRoaXMgPT09IGIpIHJldHVybiB0cnVlXG4gIHJldHVybiBCdWZmZXIuY29tcGFyZSh0aGlzLCBiKSA9PT0gMFxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0ICgpIHtcbiAgdmFyIHN0ciA9ICcnXG4gIHZhciBtYXggPSBleHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTXG4gIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICBzdHIgPSB0aGlzLnRvU3RyaW5nKCdoZXgnLCAwLCBtYXgpLm1hdGNoKC8uezJ9L2cpLmpvaW4oJyAnKVxuICAgIGlmICh0aGlzLmxlbmd0aCA+IG1heCkgc3RyICs9ICcgLi4uICdcbiAgfVxuICByZXR1cm4gJzxCdWZmZXIgJyArIHN0ciArICc+J1xufVxuXG5CdWZmZXIucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlICh0YXJnZXQsIHN0YXJ0LCBlbmQsIHRoaXNTdGFydCwgdGhpc0VuZCkge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG4gIH1cblxuICBpZiAoc3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIGlmIChlbmQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuZCA9IHRhcmdldCA/IHRhcmdldC5sZW5ndGggOiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc1N0YXJ0ID0gMFxuICB9XG4gIGlmICh0aGlzRW5kID09PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzRW5kID0gdGhpcy5sZW5ndGhcbiAgfVxuXG4gIGlmIChzdGFydCA8IDAgfHwgZW5kID4gdGFyZ2V0Lmxlbmd0aCB8fCB0aGlzU3RhcnQgPCAwIHx8IHRoaXNFbmQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdvdXQgb2YgcmFuZ2UgaW5kZXgnKVxuICB9XG5cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kICYmIHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kKSB7XG4gICAgcmV0dXJuIC0xXG4gIH1cbiAgaWYgKHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAxXG4gIH1cblxuICBzdGFydCA+Pj49IDBcbiAgZW5kID4+Pj0gMFxuICB0aGlzU3RhcnQgPj4+PSAwXG4gIHRoaXNFbmQgPj4+PSAwXG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCkgcmV0dXJuIDBcblxuICB2YXIgeCA9IHRoaXNFbmQgLSB0aGlzU3RhcnRcbiAgdmFyIHkgPSBlbmQgLSBzdGFydFxuICB2YXIgbGVuID0gTWF0aC5taW4oeCwgeSlcblxuICB2YXIgdGhpc0NvcHkgPSB0aGlzLnNsaWNlKHRoaXNTdGFydCwgdGhpc0VuZClcbiAgdmFyIHRhcmdldENvcHkgPSB0YXJnZXQuc2xpY2Uoc3RhcnQsIGVuZClcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKHRoaXNDb3B5W2ldICE9PSB0YXJnZXRDb3B5W2ldKSB7XG4gICAgICB4ID0gdGhpc0NvcHlbaV1cbiAgICAgIHkgPSB0YXJnZXRDb3B5W2ldXG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmICh4IDwgeSkgcmV0dXJuIC0xXG4gIGlmICh5IDwgeCkgcmV0dXJuIDFcbiAgcmV0dXJuIDBcbn1cblxuLy8gRmluZHMgZWl0aGVyIHRoZSBmaXJzdCBpbmRleCBvZiBgdmFsYCBpbiBgYnVmZmVyYCBhdCBvZmZzZXQgPj0gYGJ5dGVPZmZzZXRgLFxuLy8gT1IgdGhlIGxhc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0IDw9IGBieXRlT2Zmc2V0YC5cbi8vXG4vLyBBcmd1bWVudHM6XG4vLyAtIGJ1ZmZlciAtIGEgQnVmZmVyIHRvIHNlYXJjaFxuLy8gLSB2YWwgLSBhIHN0cmluZywgQnVmZmVyLCBvciBudW1iZXJcbi8vIC0gYnl0ZU9mZnNldCAtIGFuIGluZGV4IGludG8gYGJ1ZmZlcmA7IHdpbGwgYmUgY2xhbXBlZCB0byBhbiBpbnQzMlxuLy8gLSBlbmNvZGluZyAtIGFuIG9wdGlvbmFsIGVuY29kaW5nLCByZWxldmFudCBpcyB2YWwgaXMgYSBzdHJpbmdcbi8vIC0gZGlyIC0gdHJ1ZSBmb3IgaW5kZXhPZiwgZmFsc2UgZm9yIGxhc3RJbmRleE9mXG5mdW5jdGlvbiBiaWRpcmVjdGlvbmFsSW5kZXhPZiAoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgLy8gRW1wdHkgYnVmZmVyIG1lYW5zIG5vIG1hdGNoXG4gIGlmIChidWZmZXIubGVuZ3RoID09PSAwKSByZXR1cm4gLTFcblxuICAvLyBOb3JtYWxpemUgYnl0ZU9mZnNldFxuICBpZiAodHlwZW9mIGJ5dGVPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBieXRlT2Zmc2V0XG4gICAgYnl0ZU9mZnNldCA9IDBcbiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0ID4gMHg3ZmZmZmZmZikge1xuICAgIGJ5dGVPZmZzZXQgPSAweDdmZmZmZmZmXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA8IC0weDgwMDAwMDAwKSB7XG4gICAgYnl0ZU9mZnNldCA9IC0weDgwMDAwMDAwXG4gIH1cbiAgYnl0ZU9mZnNldCA9ICtieXRlT2Zmc2V0ICAvLyBDb2VyY2UgdG8gTnVtYmVyLlxuICBpZiAoaXNOYU4oYnl0ZU9mZnNldCkpIHtcbiAgICAvLyBieXRlT2Zmc2V0OiBpdCBpdCdzIHVuZGVmaW5lZCwgbnVsbCwgTmFOLCBcImZvb1wiLCBldGMsIHNlYXJjaCB3aG9sZSBidWZmZXJcbiAgICBieXRlT2Zmc2V0ID0gZGlyID8gMCA6IChidWZmZXIubGVuZ3RoIC0gMSlcbiAgfVxuXG4gIC8vIE5vcm1hbGl6ZSBieXRlT2Zmc2V0OiBuZWdhdGl2ZSBvZmZzZXRzIHN0YXJ0IGZyb20gdGhlIGVuZCBvZiB0aGUgYnVmZmVyXG4gIGlmIChieXRlT2Zmc2V0IDwgMCkgYnl0ZU9mZnNldCA9IGJ1ZmZlci5sZW5ndGggKyBieXRlT2Zmc2V0XG4gIGlmIChieXRlT2Zmc2V0ID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICBpZiAoZGlyKSByZXR1cm4gLTFcbiAgICBlbHNlIGJ5dGVPZmZzZXQgPSBidWZmZXIubGVuZ3RoIC0gMVxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAwKSB7XG4gICAgaWYgKGRpcikgYnl0ZU9mZnNldCA9IDBcbiAgICBlbHNlIHJldHVybiAtMVxuICB9XG5cbiAgLy8gTm9ybWFsaXplIHZhbFxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICB2YWwgPSBCdWZmZXIuZnJvbSh2YWwsIGVuY29kaW5nKVxuICB9XG5cbiAgLy8gRmluYWxseSwgc2VhcmNoIGVpdGhlciBpbmRleE9mIChpZiBkaXIgaXMgdHJ1ZSkgb3IgbGFzdEluZGV4T2ZcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih2YWwpKSB7XG4gICAgLy8gU3BlY2lhbCBjYXNlOiBsb29raW5nIGZvciBlbXB0eSBzdHJpbmcvYnVmZmVyIGFsd2F5cyBmYWlsc1xuICAgIGlmICh2YWwubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gLTFcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5SW5kZXhPZihidWZmZXIsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgIHZhbCA9IHZhbCAmIDB4RkYgLy8gU2VhcmNoIGZvciBhIGJ5dGUgdmFsdWUgWzAtMjU1XVxuICAgIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCAmJlxuICAgICAgICB0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgaWYgKGRpcikge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLCBbIHZhbCBdLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKVxuICB9XG5cbiAgdGhyb3cgbmV3IFR5cGVFcnJvcigndmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyJylcbn1cblxuZnVuY3Rpb24gYXJyYXlJbmRleE9mIChhcnIsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcikge1xuICB2YXIgaW5kZXhTaXplID0gMVxuICB2YXIgYXJyTGVuZ3RoID0gYXJyLmxlbmd0aFxuICB2YXIgdmFsTGVuZ3RoID0gdmFsLmxlbmd0aFxuXG4gIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZW5jb2RpbmcgPSBTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKClcbiAgICBpZiAoZW5jb2RpbmcgPT09ICd1Y3MyJyB8fCBlbmNvZGluZyA9PT0gJ3Vjcy0yJyB8fFxuICAgICAgICBlbmNvZGluZyA9PT0gJ3V0ZjE2bGUnIHx8IGVuY29kaW5nID09PSAndXRmLTE2bGUnKSB7XG4gICAgICBpZiAoYXJyLmxlbmd0aCA8IDIgfHwgdmFsLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgcmV0dXJuIC0xXG4gICAgICB9XG4gICAgICBpbmRleFNpemUgPSAyXG4gICAgICBhcnJMZW5ndGggLz0gMlxuICAgICAgdmFsTGVuZ3RoIC89IDJcbiAgICAgIGJ5dGVPZmZzZXQgLz0gMlxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlYWQgKGJ1ZiwgaSkge1xuICAgIGlmIChpbmRleFNpemUgPT09IDEpIHtcbiAgICAgIHJldHVybiBidWZbaV1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGJ1Zi5yZWFkVUludDE2QkUoaSAqIGluZGV4U2l6ZSlcbiAgICB9XG4gIH1cblxuICB2YXIgaVxuICBpZiAoZGlyKSB7XG4gICAgdmFyIGZvdW5kSW5kZXggPSAtMVxuICAgIGZvciAoaSA9IGJ5dGVPZmZzZXQ7IGkgPCBhcnJMZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHJlYWQoYXJyLCBpKSA9PT0gcmVhZCh2YWwsIGZvdW5kSW5kZXggPT09IC0xID8gMCA6IGkgLSBmb3VuZEluZGV4KSkge1xuICAgICAgICBpZiAoZm91bmRJbmRleCA9PT0gLTEpIGZvdW5kSW5kZXggPSBpXG4gICAgICAgIGlmIChpIC0gZm91bmRJbmRleCArIDEgPT09IHZhbExlbmd0aCkgcmV0dXJuIGZvdW5kSW5kZXggKiBpbmRleFNpemVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChmb3VuZEluZGV4ICE9PSAtMSkgaSAtPSBpIC0gZm91bmRJbmRleFxuICAgICAgICBmb3VuZEluZGV4ID0gLTFcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGJ5dGVPZmZzZXQgKyB2YWxMZW5ndGggPiBhcnJMZW5ndGgpIGJ5dGVPZmZzZXQgPSBhcnJMZW5ndGggLSB2YWxMZW5ndGhcbiAgICBmb3IgKGkgPSBieXRlT2Zmc2V0OyBpID49IDA7IGktLSkge1xuICAgICAgdmFyIGZvdW5kID0gdHJ1ZVxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWxMZW5ndGg7IGorKykge1xuICAgICAgICBpZiAocmVhZChhcnIsIGkgKyBqKSAhPT0gcmVhZCh2YWwsIGopKSB7XG4gICAgICAgICAgZm91bmQgPSBmYWxzZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChmb3VuZCkgcmV0dXJuIGlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTFcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5pbmNsdWRlcyA9IGZ1bmN0aW9uIGluY2x1ZGVzICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiB0aGlzLmluZGV4T2YodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykgIT09IC0xXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5kZXhPZiA9IGZ1bmN0aW9uIGluZGV4T2YgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIHRydWUpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUubGFzdEluZGV4T2YgPSBmdW5jdGlvbiBsYXN0SW5kZXhPZiAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gYmlkaXJlY3Rpb25hbEluZGV4T2YodGhpcywgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZmFsc2UpXG59XG5cbmZ1bmN0aW9uIGhleFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgb2Zmc2V0ID0gTnVtYmVyKG9mZnNldCkgfHwgMFxuICB2YXIgcmVtYWluaW5nID0gYnVmLmxlbmd0aCAtIG9mZnNldFxuICBpZiAoIWxlbmd0aCkge1xuICAgIGxlbmd0aCA9IHJlbWFpbmluZ1xuICB9IGVsc2Uge1xuICAgIGxlbmd0aCA9IE51bWJlcihsZW5ndGgpXG4gICAgaWYgKGxlbmd0aCA+IHJlbWFpbmluZykge1xuICAgICAgbGVuZ3RoID0gcmVtYWluaW5nXG4gICAgfVxuICB9XG5cbiAgLy8gbXVzdCBiZSBhbiBldmVuIG51bWJlciBvZiBkaWdpdHNcbiAgdmFyIHN0ckxlbiA9IHN0cmluZy5sZW5ndGhcbiAgaWYgKHN0ckxlbiAlIDIgIT09IDApIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgaGV4IHN0cmluZycpXG5cbiAgaWYgKGxlbmd0aCA+IHN0ckxlbiAvIDIpIHtcbiAgICBsZW5ndGggPSBzdHJMZW4gLyAyXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBwYXJzZWQgPSBwYXJzZUludChzdHJpbmcuc3Vic3RyKGkgKiAyLCAyKSwgMTYpXG4gICAgaWYgKGlzTmFOKHBhcnNlZCkpIHJldHVybiBpXG4gICAgYnVmW29mZnNldCArIGldID0gcGFyc2VkXG4gIH1cbiAgcmV0dXJuIGlcbn1cblxuZnVuY3Rpb24gdXRmOFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIodXRmOFRvQnl0ZXMoc3RyaW5nLCBidWYubGVuZ3RoIC0gb2Zmc2V0KSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gYXNjaWlXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKGFzY2lpVG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiBsYXRpbjFXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBhc2NpaVdyaXRlKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gYmFzZTY0V3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcihiYXNlNjRUb0J5dGVzKHN0cmluZyksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIHVjczJXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKHV0ZjE2bGVUb0J5dGVzKHN0cmluZywgYnVmLmxlbmd0aCAtIG9mZnNldCksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiB3cml0ZSAoc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCwgZW5jb2RpbmcpIHtcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZylcbiAgaWYgKG9mZnNldCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZW5jb2RpbmcgPSAndXRmOCdcbiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICAgIG9mZnNldCA9IDBcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgZW5jb2RpbmcpXG4gIH0gZWxzZSBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9mZnNldCA9PT0gJ3N0cmluZycpIHtcbiAgICBlbmNvZGluZyA9IG9mZnNldFxuICAgIGxlbmd0aCA9IHRoaXMubGVuZ3RoXG4gICAgb2Zmc2V0ID0gMFxuICAvLyBCdWZmZXIjd3JpdGUoc3RyaW5nLCBvZmZzZXRbLCBsZW5ndGhdWywgZW5jb2RpbmddKVxuICB9IGVsc2UgaWYgKGlzRmluaXRlKG9mZnNldCkpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gICAgaWYgKGlzRmluaXRlKGxlbmd0aCkpIHtcbiAgICAgIGxlbmd0aCA9IGxlbmd0aCB8IDBcbiAgICAgIGlmIChlbmNvZGluZyA9PT0gdW5kZWZpbmVkKSBlbmNvZGluZyA9ICd1dGY4J1xuICAgIH0gZWxzZSB7XG4gICAgICBlbmNvZGluZyA9IGxlbmd0aFxuICAgICAgbGVuZ3RoID0gdW5kZWZpbmVkXG4gICAgfVxuICAvLyBsZWdhY3kgd3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0LCBsZW5ndGgpIC0gcmVtb3ZlIGluIHYwLjEzXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0J1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkJ1xuICAgIClcbiAgfVxuXG4gIHZhciByZW1haW5pbmcgPSB0aGlzLmxlbmd0aCAtIG9mZnNldFxuICBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQgfHwgbGVuZ3RoID4gcmVtYWluaW5nKSBsZW5ndGggPSByZW1haW5pbmdcblxuICBpZiAoKHN0cmluZy5sZW5ndGggPiAwICYmIChsZW5ndGggPCAwIHx8IG9mZnNldCA8IDApKSB8fCBvZmZzZXQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kcycpXG4gIH1cblxuICBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9ICd1dGY4J1xuXG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG4gIGZvciAoOzspIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIC8vIFdhcm5pbmc6IG1heExlbmd0aCBub3QgdGFrZW4gaW50byBhY2NvdW50IGluIGJhc2U2NFdyaXRlXG4gICAgICAgIHJldHVybiBiYXNlNjRXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdWNzMldyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9ICgnJyArIGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTiAoKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0J1ZmZlcicsXG4gICAgZGF0YTogQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5fYXJyIHx8IHRoaXMsIDApXG4gIH1cbn1cblxuZnVuY3Rpb24gYmFzZTY0U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBpZiAoc3RhcnQgPT09IDAgJiYgZW5kID09PSBidWYubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1ZilcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21CeXRlQXJyYXkoYnVmLnNsaWNlKHN0YXJ0LCBlbmQpKVxuICB9XG59XG5cbmZ1bmN0aW9uIHV0ZjhTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcbiAgdmFyIHJlcyA9IFtdXG5cbiAgdmFyIGkgPSBzdGFydFxuICB3aGlsZSAoaSA8IGVuZCkge1xuICAgIHZhciBmaXJzdEJ5dGUgPSBidWZbaV1cbiAgICB2YXIgY29kZVBvaW50ID0gbnVsbFxuICAgIHZhciBieXRlc1BlclNlcXVlbmNlID0gKGZpcnN0Qnl0ZSA+IDB4RUYpID8gNFxuICAgICAgOiAoZmlyc3RCeXRlID4gMHhERikgPyAzXG4gICAgICA6IChmaXJzdEJ5dGUgPiAweEJGKSA/IDJcbiAgICAgIDogMVxuXG4gICAgaWYgKGkgKyBieXRlc1BlclNlcXVlbmNlIDw9IGVuZCkge1xuICAgICAgdmFyIHNlY29uZEJ5dGUsIHRoaXJkQnl0ZSwgZm91cnRoQnl0ZSwgdGVtcENvZGVQb2ludFxuXG4gICAgICBzd2l0Y2ggKGJ5dGVzUGVyU2VxdWVuY2UpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIGlmIChmaXJzdEJ5dGUgPCAweDgwKSB7XG4gICAgICAgICAgICBjb2RlUG9pbnQgPSBmaXJzdEJ5dGVcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHgxRikgPDwgMHg2IHwgKHNlY29uZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweEYpIDw8IDB4QyB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKHRoaXJkQnl0ZSAmIDB4M0YpXG4gICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4N0ZGICYmICh0ZW1wQ29kZVBvaW50IDwgMHhEODAwIHx8IHRlbXBDb2RlUG9pbnQgPiAweERGRkYpKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGZvdXJ0aEJ5dGUgPSBidWZbaSArIDNdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4QzApID09PSAweDgwICYmIChmb3VydGhCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweDEyIHwgKHNlY29uZEJ5dGUgJiAweDNGKSA8PCAweEMgfCAodGhpcmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKGZvdXJ0aEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweEZGRkYgJiYgdGVtcENvZGVQb2ludCA8IDB4MTEwMDAwKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNvZGVQb2ludCA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgZGlkIG5vdCBnZW5lcmF0ZSBhIHZhbGlkIGNvZGVQb2ludCBzbyBpbnNlcnQgYVxuICAgICAgLy8gcmVwbGFjZW1lbnQgY2hhciAoVStGRkZEKSBhbmQgYWR2YW5jZSBvbmx5IDEgYnl0ZVxuICAgICAgY29kZVBvaW50ID0gMHhGRkZEXG4gICAgICBieXRlc1BlclNlcXVlbmNlID0gMVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50ID4gMHhGRkZGKSB7XG4gICAgICAvLyBlbmNvZGUgdG8gdXRmMTYgKHN1cnJvZ2F0ZSBwYWlyIGRhbmNlKVxuICAgICAgY29kZVBvaW50IC09IDB4MTAwMDBcbiAgICAgIHJlcy5wdXNoKGNvZGVQb2ludCA+Pj4gMTAgJiAweDNGRiB8IDB4RDgwMClcbiAgICAgIGNvZGVQb2ludCA9IDB4REMwMCB8IGNvZGVQb2ludCAmIDB4M0ZGXG4gICAgfVxuXG4gICAgcmVzLnB1c2goY29kZVBvaW50KVxuICAgIGkgKz0gYnl0ZXNQZXJTZXF1ZW5jZVxuICB9XG5cbiAgcmV0dXJuIGRlY29kZUNvZGVQb2ludHNBcnJheShyZXMpXG59XG5cbi8vIEJhc2VkIG9uIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzIyNzQ3MjcyLzY4MDc0MiwgdGhlIGJyb3dzZXIgd2l0aFxuLy8gdGhlIGxvd2VzdCBsaW1pdCBpcyBDaHJvbWUsIHdpdGggMHgxMDAwMCBhcmdzLlxuLy8gV2UgZ28gMSBtYWduaXR1ZGUgbGVzcywgZm9yIHNhZmV0eVxudmFyIE1BWF9BUkdVTUVOVFNfTEVOR1RIID0gMHgxMDAwXG5cbmZ1bmN0aW9uIGRlY29kZUNvZGVQb2ludHNBcnJheSAoY29kZVBvaW50cykge1xuICB2YXIgbGVuID0gY29kZVBvaW50cy5sZW5ndGhcbiAgaWYgKGxlbiA8PSBNQVhfQVJHVU1FTlRTX0xFTkdUSCkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZywgY29kZVBvaW50cykgLy8gYXZvaWQgZXh0cmEgc2xpY2UoKVxuICB9XG5cbiAgLy8gRGVjb2RlIGluIGNodW5rcyB0byBhdm9pZCBcImNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiLlxuICB2YXIgcmVzID0gJydcbiAgdmFyIGkgPSAwXG4gIHdoaWxlIChpIDwgbGVuKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoXG4gICAgICBTdHJpbmcsXG4gICAgICBjb2RlUG9pbnRzLnNsaWNlKGksIGkgKz0gTUFYX0FSR1VNRU5UU19MRU5HVEgpXG4gICAgKVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gYXNjaWlTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIHZhciByZXQgPSAnJ1xuICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpXG5cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICByZXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0gJiAweDdGKVxuICB9XG4gIHJldHVybiByZXRcbn1cblxuZnVuY3Rpb24gbGF0aW4xU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldKVxuICB9XG4gIHJldHVybiByZXRcbn1cblxuZnVuY3Rpb24gaGV4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgbGVuID0gYnVmLmxlbmd0aFxuXG4gIGlmICghc3RhcnQgfHwgc3RhcnQgPCAwKSBzdGFydCA9IDBcbiAgaWYgKCFlbmQgfHwgZW5kIDwgMCB8fCBlbmQgPiBsZW4pIGVuZCA9IGxlblxuXG4gIHZhciBvdXQgPSAnJ1xuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIG91dCArPSB0b0hleChidWZbaV0pXG4gIH1cbiAgcmV0dXJuIG91dFxufVxuXG5mdW5jdGlvbiB1dGYxNmxlU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgYnl0ZXMgPSBidWYuc2xpY2Uoc3RhcnQsIGVuZClcbiAgdmFyIHJlcyA9ICcnXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICByZXMgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSArIGJ5dGVzW2kgKyAxXSAqIDI1NilcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc2xpY2UgPSBmdW5jdGlvbiBzbGljZSAoc3RhcnQsIGVuZCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgc3RhcnQgPSB+fnN0YXJ0XG4gIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogfn5lbmRcblxuICBpZiAoc3RhcnQgPCAwKSB7XG4gICAgc3RhcnQgKz0gbGVuXG4gICAgaWYgKHN0YXJ0IDwgMCkgc3RhcnQgPSAwXG4gIH0gZWxzZSBpZiAoc3RhcnQgPiBsZW4pIHtcbiAgICBzdGFydCA9IGxlblxuICB9XG5cbiAgaWYgKGVuZCA8IDApIHtcbiAgICBlbmQgKz0gbGVuXG4gICAgaWYgKGVuZCA8IDApIGVuZCA9IDBcbiAgfSBlbHNlIGlmIChlbmQgPiBsZW4pIHtcbiAgICBlbmQgPSBsZW5cbiAgfVxuXG4gIGlmIChlbmQgPCBzdGFydCkgZW5kID0gc3RhcnRcblxuICB2YXIgbmV3QnVmXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIG5ld0J1ZiA9IHRoaXMuc3ViYXJyYXkoc3RhcnQsIGVuZClcbiAgICBuZXdCdWYuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICB9IGVsc2Uge1xuICAgIHZhciBzbGljZUxlbiA9IGVuZCAtIHN0YXJ0XG4gICAgbmV3QnVmID0gbmV3IEJ1ZmZlcihzbGljZUxlbiwgdW5kZWZpbmVkKVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpY2VMZW47ICsraSkge1xuICAgICAgbmV3QnVmW2ldID0gdGhpc1tpICsgc3RhcnRdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0J1ZlxufVxuXG4vKlxuICogTmVlZCB0byBtYWtlIHN1cmUgdGhhdCBidWZmZXIgaXNuJ3QgdHJ5aW5nIHRvIHdyaXRlIG91dCBvZiBib3VuZHMuXG4gKi9cbmZ1bmN0aW9uIGNoZWNrT2Zmc2V0IChvZmZzZXQsIGV4dCwgbGVuZ3RoKSB7XG4gIGlmICgob2Zmc2V0ICUgMSkgIT09IDAgfHwgb2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ29mZnNldCBpcyBub3QgdWludCcpXG4gIGlmIChvZmZzZXQgKyBleHQgPiBsZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoJylcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludExFID0gZnVuY3Rpb24gcmVhZFVJbnRMRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIGJ5dGVMZW5ndGgsIHRoaXMubGVuZ3RoKVxuXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldF1cbiAgdmFyIG11bCA9IDFcbiAgdmFyIGkgPSAwXG4gIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgaV0gKiBtdWxcbiAgfVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludEJFID0gZnVuY3Rpb24gcmVhZFVJbnRCRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcbiAgfVxuXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF1cbiAgdmFyIG11bCA9IDFcbiAgd2hpbGUgKGJ5dGVMZW5ndGggPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1ieXRlTGVuZ3RoXSAqIG11bFxuICB9XG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OCA9IGZ1bmN0aW9uIHJlYWRVSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDEsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gdGhpc1tvZmZzZXRdXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkxFID0gZnVuY3Rpb24gcmVhZFVJbnQxNkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiB0aGlzW29mZnNldF0gfCAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSA8PCA4KSB8IHRoaXNbb2Zmc2V0ICsgMV1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyTEUgPSBmdW5jdGlvbiByZWFkVUludDMyTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcblxuICByZXR1cm4gKCh0aGlzW29mZnNldF0pIHxcbiAgICAgICh0aGlzW29mZnNldCArIDFdIDw8IDgpIHxcbiAgICAgICh0aGlzW29mZnNldCArIDJdIDw8IDE2KSkgK1xuICAgICAgKHRoaXNbb2Zmc2V0ICsgM10gKiAweDEwMDAwMDApXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkJFID0gZnVuY3Rpb24gcmVhZFVJbnQzMkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0gKiAweDEwMDAwMDApICtcbiAgICAoKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8XG4gICAgdGhpc1tvZmZzZXQgKyAzXSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50TEUgPSBmdW5jdGlvbiByZWFkSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsXG4gIH1cbiAgbXVsICo9IDB4ODBcblxuICBpZiAodmFsID49IG11bCkgdmFsIC09IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50QkUgPSBmdW5jdGlvbiByZWFkSW50QkUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICB2YXIgaSA9IGJ5dGVMZW5ndGhcbiAgdmFyIG11bCA9IDFcbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0ICsgLS1pXVxuICB3aGlsZSAoaSA+IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyAtLWldICogbXVsXG4gIH1cbiAgbXVsICo9IDB4ODBcblxuICBpZiAodmFsID49IG11bCkgdmFsIC09IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50OCA9IGZ1bmN0aW9uIHJlYWRJbnQ4IChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMSwgdGhpcy5sZW5ndGgpXG4gIGlmICghKHRoaXNbb2Zmc2V0XSAmIDB4ODApKSByZXR1cm4gKHRoaXNbb2Zmc2V0XSlcbiAgcmV0dXJuICgoMHhmZiAtIHRoaXNbb2Zmc2V0XSArIDEpICogLTEpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDE2TEUgPSBmdW5jdGlvbiByZWFkSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOClcbiAgcmV0dXJuICh2YWwgJiAweDgwMDApID8gdmFsIHwgMHhGRkZGMDAwMCA6IHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkJFID0gZnVuY3Rpb24gcmVhZEludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0ICsgMV0gfCAodGhpc1tvZmZzZXRdIDw8IDgpXG4gIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJMRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0pIHxcbiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAzXSA8PCAyNClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRJbnQzMkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgMjQpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCAxNikgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDgpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAzXSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRSA9IGZ1bmN0aW9uIHJlYWRGbG9hdExFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCB0cnVlLCAyMywgNClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRCRSA9IGZ1bmN0aW9uIHJlYWRGbG9hdEJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUxFID0gZnVuY3Rpb24gcmVhZERvdWJsZUxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCB0cnVlLCA1MiwgOClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlQkUgPSBmdW5jdGlvbiByZWFkRG91YmxlQkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA4LCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLCBvZmZzZXQsIGZhbHNlLCA1MiwgOClcbn1cblxuZnVuY3Rpb24gY2hlY2tJbnQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgZXh0LCBtYXgsIG1pbikge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJ1ZmZlclwiIGFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIgaW5zdGFuY2UnKVxuICBpZiAodmFsdWUgPiBtYXggfHwgdmFsdWUgPCBtaW4pIHRocm93IG5ldyBSYW5nZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgaXMgb3V0IG9mIGJvdW5kcycpXG4gIGlmIChvZmZzZXQgKyBleHQgPiBidWYubGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW5kZXggb3V0IG9mIHJhbmdlJylcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRMRSA9IGZ1bmN0aW9uIHdyaXRlVUludExFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgdmFyIG1heEJ5dGVzID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpIC0gMVxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG1heEJ5dGVzLCAwKVxuICB9XG5cbiAgdmFyIG11bCA9IDFcbiAgdmFyIGkgPSAwXG4gIHRoaXNbb2Zmc2V0XSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAodmFsdWUgLyBtdWwpICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnRCRSA9IGZ1bmN0aW9uIHdyaXRlVUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoIHwgMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgdmFyIG1heEJ5dGVzID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpIC0gMVxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG1heEJ5dGVzLCAwKVxuICB9XG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoIC0gMVxuICB2YXIgbXVsID0gMVxuICB0aGlzW29mZnNldCArIGldID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgtLWkgPj0gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAodmFsdWUgLyBtdWwpICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQ4ID0gZnVuY3Rpb24gd3JpdGVVSW50OCAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweGZmLCAwKVxuICBpZiAoIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB2YWx1ZSA9IE1hdGguZmxvb3IodmFsdWUpXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAxXG59XG5cbmZ1bmN0aW9uIG9iamVjdFdyaXRlVUludDE2IChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbikge1xuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmZmZiArIHZhbHVlICsgMVxuICBmb3IgKHZhciBpID0gMCwgaiA9IE1hdGgubWluKGJ1Zi5sZW5ndGggLSBvZmZzZXQsIDIpOyBpIDwgajsgKytpKSB7XG4gICAgYnVmW29mZnNldCArIGldID0gKHZhbHVlICYgKDB4ZmYgPDwgKDggKiAobGl0dGxlRW5kaWFuID8gaSA6IDEgLSBpKSkpKSA+Pj5cbiAgICAgIChsaXR0bGVFbmRpYW4gPyBpIDogMSAtIGkpICogOFxuICB9XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZMRSA9IGZ1bmN0aW9uIHdyaXRlVUludDE2TEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHhmZmZmLCAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MTYodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2QkUgPSBmdW5jdGlvbiB3cml0ZVVJbnQxNkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4ZmZmZiwgMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgJiAweGZmKVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDE2KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlKVxuICB9XG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbmZ1bmN0aW9uIG9iamVjdFdyaXRlVUludDMyIChidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbikge1xuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmZmZmZmZmYgKyB2YWx1ZSArIDFcbiAgZm9yICh2YXIgaSA9IDAsIGogPSBNYXRoLm1pbihidWYubGVuZ3RoIC0gb2Zmc2V0LCA0KTsgaSA8IGo7ICsraSkge1xuICAgIGJ1ZltvZmZzZXQgKyBpXSA9ICh2YWx1ZSA+Pj4gKGxpdHRsZUVuZGlhbiA/IGkgOiAzIC0gaSkgKiA4KSAmIDB4ZmZcbiAgfVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4ZmZmZmZmZmYsIDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgPj4+IDI0KVxuICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQzMih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlKVxuICB9XG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDMyQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHhmZmZmZmZmZiwgMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiAyNClcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiAxNilcbiAgICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgJiAweGZmKVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDMyKHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlKVxuICB9XG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRMRSA9IGZ1bmN0aW9uIHdyaXRlSW50TEUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBsaW1pdCA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoIC0gMSlcblxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIGxpbWl0IC0gMSwgLWxpbWl0KVxuICB9XG5cbiAgdmFyIGkgPSAwXG4gIHZhciBtdWwgPSAxXG4gIHZhciBzdWIgPSAwXG4gIHRoaXNbb2Zmc2V0XSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIGlmICh2YWx1ZSA8IDAgJiYgc3ViID09PSAwICYmIHRoaXNbb2Zmc2V0ICsgaSAtIDFdICE9PSAwKSB7XG4gICAgICBzdWIgPSAxXG4gICAgfVxuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAoKHZhbHVlIC8gbXVsKSA+PiAwKSAtIHN1YiAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRCRSA9IGZ1bmN0aW9uIHdyaXRlSW50QkUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBsaW1pdCA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoIC0gMSlcblxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIGxpbWl0IC0gMSwgLWxpbWl0KVxuICB9XG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoIC0gMVxuICB2YXIgbXVsID0gMVxuICB2YXIgc3ViID0gMFxuICB0aGlzW29mZnNldCArIGldID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgtLWkgPj0gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIGlmICh2YWx1ZSA8IDAgJiYgc3ViID09PSAwICYmIHRoaXNbb2Zmc2V0ICsgaSArIDFdICE9PSAwKSB7XG4gICAgICBzdWIgPSAxXG4gICAgfVxuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAoKHZhbHVlIC8gbXVsKSA+PiAwKSAtIHN1YiAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQ4ID0gZnVuY3Rpb24gd3JpdGVJbnQ4ICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDEsIDB4N2YsIC0weDgwKVxuICBpZiAoIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB2YWx1ZSA9IE1hdGguZmxvb3IodmFsdWUpXG4gIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZiArIHZhbHVlICsgMVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZMRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweDdmZmYsIC0weDgwMDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOClcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlKVxuICB9XG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkJFID0gZnVuY3Rpb24gd3JpdGVJbnQxNkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4N2ZmZiwgLTB4ODAwMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgJiAweGZmKVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDE2KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlKVxuICB9XG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkxFID0gZnVuY3Rpb24gd3JpdGVJbnQzMkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4N2ZmZmZmZmYsIC0weDgwMDAwMDAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gICAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gICAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSA+Pj4gMjQpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MzJCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmZmZmZmICsgdmFsdWUgKyAxXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gMjQpXG4gICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gICAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQzMih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5mdW5jdGlvbiBjaGVja0lFRUU3NTQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgZXh0LCBtYXgsIG1pbikge1xuICBpZiAob2Zmc2V0ICsgZXh0ID4gYnVmLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG4gIGlmIChvZmZzZXQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW5kZXggb3V0IG9mIHJhbmdlJylcbn1cblxuZnVuY3Rpb24gd3JpdGVGbG9hdCAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjaGVja0lFRUU3NTQoYnVmLCB2YWx1ZSwgb2Zmc2V0LCA0LCAzLjQwMjgyMzQ2NjM4NTI4ODZlKzM4LCAtMy40MDI4MjM0NjYzODUyODg2ZSszOClcbiAgfVxuICBpZWVlNzU0LndyaXRlKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCAyMywgNClcbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0TEUgPSBmdW5jdGlvbiB3cml0ZUZsb2F0TEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZUZsb2F0KHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUsIG5vQXNzZXJ0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRCRSA9IGZ1bmN0aW9uIHdyaXRlRmxvYXRCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRmxvYXQodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UsIG5vQXNzZXJ0KVxufVxuXG5mdW5jdGlvbiB3cml0ZURvdWJsZSAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICBjaGVja0lFRUU3NTQoYnVmLCB2YWx1ZSwgb2Zmc2V0LCA4LCAxLjc5NzY5MzEzNDg2MjMxNTdFKzMwOCwgLTEuNzk3NjkzMTM0ODYyMzE1N0UrMzA4KVxuICB9XG4gIGllZWU3NTQud3JpdGUoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIDUyLCA4KVxuICByZXR1cm4gb2Zmc2V0ICsgOFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlTEUgPSBmdW5jdGlvbiB3cml0ZURvdWJsZUxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVEb3VibGUodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSwgbm9Bc3NlcnQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVCRSA9IGZ1bmN0aW9uIHdyaXRlRG91YmxlQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZURvdWJsZSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSwgbm9Bc3NlcnQpXG59XG5cbi8vIGNvcHkodGFyZ2V0QnVmZmVyLCB0YXJnZXRTdGFydD0wLCBzb3VyY2VTdGFydD0wLCBzb3VyY2VFbmQ9YnVmZmVyLmxlbmd0aClcbkJ1ZmZlci5wcm90b3R5cGUuY29weSA9IGZ1bmN0aW9uIGNvcHkgKHRhcmdldCwgdGFyZ2V0U3RhcnQsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKCFzdGFydCkgc3RhcnQgPSAwXG4gIGlmICghZW5kICYmIGVuZCAhPT0gMCkgZW5kID0gdGhpcy5sZW5ndGhcbiAgaWYgKHRhcmdldFN0YXJ0ID49IHRhcmdldC5sZW5ndGgpIHRhcmdldFN0YXJ0ID0gdGFyZ2V0Lmxlbmd0aFxuICBpZiAoIXRhcmdldFN0YXJ0KSB0YXJnZXRTdGFydCA9IDBcbiAgaWYgKGVuZCA+IDAgJiYgZW5kIDwgc3RhcnQpIGVuZCA9IHN0YXJ0XG5cbiAgLy8gQ29weSAwIGJ5dGVzOyB3ZSdyZSBkb25lXG4gIGlmIChlbmQgPT09IHN0YXJ0KSByZXR1cm4gMFxuICBpZiAodGFyZ2V0Lmxlbmd0aCA9PT0gMCB8fCB0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBGYXRhbCBlcnJvciBjb25kaXRpb25zXG4gIGlmICh0YXJnZXRTdGFydCA8IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcigndGFyZ2V0U3RhcnQgb3V0IG9mIGJvdW5kcycpXG4gIH1cbiAgaWYgKHN0YXJ0IDwgMCB8fCBzdGFydCA+PSB0aGlzLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3NvdXJjZVN0YXJ0IG91dCBvZiBib3VuZHMnKVxuICBpZiAoZW5kIDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3NvdXJjZUVuZCBvdXQgb2YgYm91bmRzJylcblxuICAvLyBBcmUgd2Ugb29iP1xuICBpZiAoZW5kID4gdGhpcy5sZW5ndGgpIGVuZCA9IHRoaXMubGVuZ3RoXG4gIGlmICh0YXJnZXQubGVuZ3RoIC0gdGFyZ2V0U3RhcnQgPCBlbmQgLSBzdGFydCkge1xuICAgIGVuZCA9IHRhcmdldC5sZW5ndGggLSB0YXJnZXRTdGFydCArIHN0YXJ0XG4gIH1cblxuICB2YXIgbGVuID0gZW5kIC0gc3RhcnRcbiAgdmFyIGlcblxuICBpZiAodGhpcyA9PT0gdGFyZ2V0ICYmIHN0YXJ0IDwgdGFyZ2V0U3RhcnQgJiYgdGFyZ2V0U3RhcnQgPCBlbmQpIHtcbiAgICAvLyBkZXNjZW5kaW5nIGNvcHkgZnJvbSBlbmRcbiAgICBmb3IgKGkgPSBsZW4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgdGFyZ2V0W2kgKyB0YXJnZXRTdGFydF0gPSB0aGlzW2kgKyBzdGFydF1cbiAgICB9XG4gIH0gZWxzZSBpZiAobGVuIDwgMTAwMCB8fCAhQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICAvLyBhc2NlbmRpbmcgY29weSBmcm9tIHN0YXJ0XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICB0YXJnZXRbaSArIHRhcmdldFN0YXJ0XSA9IHRoaXNbaSArIHN0YXJ0XVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbChcbiAgICAgIHRhcmdldCxcbiAgICAgIHRoaXMuc3ViYXJyYXkoc3RhcnQsIHN0YXJ0ICsgbGVuKSxcbiAgICAgIHRhcmdldFN0YXJ0XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIGxlblxufVxuXG4vLyBVc2FnZTpcbi8vICAgIGJ1ZmZlci5maWxsKG51bWJlclssIG9mZnNldFssIGVuZF1dKVxuLy8gICAgYnVmZmVyLmZpbGwoYnVmZmVyWywgb2Zmc2V0WywgZW5kXV0pXG4vLyAgICBidWZmZXIuZmlsbChzdHJpbmdbLCBvZmZzZXRbLCBlbmRdXVssIGVuY29kaW5nXSlcbkJ1ZmZlci5wcm90b3R5cGUuZmlsbCA9IGZ1bmN0aW9uIGZpbGwgKHZhbCwgc3RhcnQsIGVuZCwgZW5jb2RpbmcpIHtcbiAgLy8gSGFuZGxlIHN0cmluZyBjYXNlczpcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKHR5cGVvZiBzdGFydCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gc3RhcnRcbiAgICAgIHN0YXJ0ID0gMFxuICAgICAgZW5kID0gdGhpcy5sZW5ndGhcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbmQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IGVuZFxuICAgICAgZW5kID0gdGhpcy5sZW5ndGhcbiAgICB9XG4gICAgaWYgKHZhbC5sZW5ndGggPT09IDEpIHtcbiAgICAgIHZhciBjb2RlID0gdmFsLmNoYXJDb2RlQXQoMClcbiAgICAgIGlmIChjb2RlIDwgMjU2KSB7XG4gICAgICAgIHZhbCA9IGNvZGVcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGVuY29kaW5nICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZycpXG4gICAgfVxuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnICYmICFCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICB2YWwgPSB2YWwgJiAyNTVcbiAgfVxuXG4gIC8vIEludmFsaWQgcmFuZ2VzIGFyZSBub3Qgc2V0IHRvIGEgZGVmYXVsdCwgc28gY2FuIHJhbmdlIGNoZWNrIGVhcmx5LlxuICBpZiAoc3RhcnQgPCAwIHx8IHRoaXMubGVuZ3RoIDwgc3RhcnQgfHwgdGhpcy5sZW5ndGggPCBlbmQpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignT3V0IG9mIHJhbmdlIGluZGV4JylcbiAgfVxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgc3RhcnQgPSBzdGFydCA+Pj4gMFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IHRoaXMubGVuZ3RoIDogZW5kID4+PiAwXG5cbiAgaWYgKCF2YWwpIHZhbCA9IDBcblxuICB2YXIgaVxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICBmb3IgKGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgICB0aGlzW2ldID0gdmFsXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhciBieXRlcyA9IEJ1ZmZlci5pc0J1ZmZlcih2YWwpXG4gICAgICA/IHZhbFxuICAgICAgOiB1dGY4VG9CeXRlcyhuZXcgQnVmZmVyKHZhbCwgZW5jb2RpbmcpLnRvU3RyaW5nKCkpXG4gICAgdmFyIGxlbiA9IGJ5dGVzLmxlbmd0aFxuICAgIGZvciAoaSA9IDA7IGkgPCBlbmQgLSBzdGFydDsgKytpKSB7XG4gICAgICB0aGlzW2kgKyBzdGFydF0gPSBieXRlc1tpICUgbGVuXVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzXG59XG5cbi8vIEhFTFBFUiBGVU5DVElPTlNcbi8vID09PT09PT09PT09PT09PT1cblxudmFyIElOVkFMSURfQkFTRTY0X1JFID0gL1teK1xcLzAtOUEtWmEtei1fXS9nXG5cbmZ1bmN0aW9uIGJhc2U2NGNsZWFuIChzdHIpIHtcbiAgLy8gTm9kZSBzdHJpcHMgb3V0IGludmFsaWQgY2hhcmFjdGVycyBsaWtlIFxcbiBhbmQgXFx0IGZyb20gdGhlIHN0cmluZywgYmFzZTY0LWpzIGRvZXMgbm90XG4gIHN0ciA9IHN0cmluZ3RyaW0oc3RyKS5yZXBsYWNlKElOVkFMSURfQkFTRTY0X1JFLCAnJylcbiAgLy8gTm9kZSBjb252ZXJ0cyBzdHJpbmdzIHdpdGggbGVuZ3RoIDwgMiB0byAnJ1xuICBpZiAoc3RyLmxlbmd0aCA8IDIpIHJldHVybiAnJ1xuICAvLyBOb2RlIGFsbG93cyBmb3Igbm9uLXBhZGRlZCBiYXNlNjQgc3RyaW5ncyAobWlzc2luZyB0cmFpbGluZyA9PT0pLCBiYXNlNjQtanMgZG9lcyBub3RcbiAgd2hpbGUgKHN0ci5sZW5ndGggJSA0ICE9PSAwKSB7XG4gICAgc3RyID0gc3RyICsgJz0nXG4gIH1cbiAgcmV0dXJuIHN0clxufVxuXG5mdW5jdGlvbiBzdHJpbmd0cmltIChzdHIpIHtcbiAgaWYgKHN0ci50cmltKSByZXR1cm4gc3RyLnRyaW0oKVxuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKVxufVxuXG5mdW5jdGlvbiB0b0hleCAobikge1xuICBpZiAobiA8IDE2KSByZXR1cm4gJzAnICsgbi50b1N0cmluZygxNilcbiAgcmV0dXJuIG4udG9TdHJpbmcoMTYpXG59XG5cbmZ1bmN0aW9uIHV0ZjhUb0J5dGVzIChzdHJpbmcsIHVuaXRzKSB7XG4gIHVuaXRzID0gdW5pdHMgfHwgSW5maW5pdHlcbiAgdmFyIGNvZGVQb2ludFxuICB2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aFxuICB2YXIgbGVhZFN1cnJvZ2F0ZSA9IG51bGxcbiAgdmFyIGJ5dGVzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgY29kZVBvaW50ID0gc3RyaW5nLmNoYXJDb2RlQXQoaSlcblxuICAgIC8vIGlzIHN1cnJvZ2F0ZSBjb21wb25lbnRcbiAgICBpZiAoY29kZVBvaW50ID4gMHhEN0ZGICYmIGNvZGVQb2ludCA8IDB4RTAwMCkge1xuICAgICAgLy8gbGFzdCBjaGFyIHdhcyBhIGxlYWRcbiAgICAgIGlmICghbGVhZFN1cnJvZ2F0ZSkge1xuICAgICAgICAvLyBubyBsZWFkIHlldFxuICAgICAgICBpZiAoY29kZVBvaW50ID4gMHhEQkZGKSB7XG4gICAgICAgICAgLy8gdW5leHBlY3RlZCB0cmFpbFxuICAgICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSBpZiAoaSArIDEgPT09IGxlbmd0aCkge1xuICAgICAgICAgIC8vIHVucGFpcmVkIGxlYWRcbiAgICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdmFsaWQgbGVhZFxuICAgICAgICBsZWFkU3Vycm9nYXRlID0gY29kZVBvaW50XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gMiBsZWFkcyBpbiBhIHJvd1xuICAgICAgaWYgKGNvZGVQb2ludCA8IDB4REMwMCkge1xuICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IGNvZGVQb2ludFxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyB2YWxpZCBzdXJyb2dhdGUgcGFpclxuICAgICAgY29kZVBvaW50ID0gKGxlYWRTdXJyb2dhdGUgLSAweEQ4MDAgPDwgMTAgfCBjb2RlUG9pbnQgLSAweERDMDApICsgMHgxMDAwMFxuICAgIH0gZWxzZSBpZiAobGVhZFN1cnJvZ2F0ZSkge1xuICAgICAgLy8gdmFsaWQgYm1wIGNoYXIsIGJ1dCBsYXN0IGNoYXIgd2FzIGEgbGVhZFxuICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgfVxuXG4gICAgbGVhZFN1cnJvZ2F0ZSA9IG51bGxcblxuICAgIC8vIGVuY29kZSB1dGY4XG4gICAgaWYgKGNvZGVQb2ludCA8IDB4ODApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMSkgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChjb2RlUG9pbnQpXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDgwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2IHwgMHhDMCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTAwMDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMykgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4QyB8IDB4RTAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4MTEwMDAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDQpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDEyIHwgMHhGMCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4QyAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2ICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb2RlIHBvaW50JylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnl0ZXNcbn1cblxuZnVuY3Rpb24gYXNjaWlUb0J5dGVzIChzdHIpIHtcbiAgdmFyIGJ5dGVBcnJheSA9IFtdXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgLy8gTm9kZSdzIGNvZGUgc2VlbXMgdG8gYmUgZG9pbmcgdGhpcyBhbmQgbm90ICYgMHg3Ri4uXG4gICAgYnl0ZUFycmF5LnB1c2goc3RyLmNoYXJDb2RlQXQoaSkgJiAweEZGKVxuICB9XG4gIHJldHVybiBieXRlQXJyYXlcbn1cblxuZnVuY3Rpb24gdXRmMTZsZVRvQnl0ZXMgKHN0ciwgdW5pdHMpIHtcbiAgdmFyIGMsIGhpLCBsb1xuICB2YXIgYnl0ZUFycmF5ID0gW11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoKHVuaXRzIC09IDIpIDwgMCkgYnJlYWtcblxuICAgIGMgPSBzdHIuY2hhckNvZGVBdChpKVxuICAgIGhpID0gYyA+PiA4XG4gICAgbG8gPSBjICUgMjU2XG4gICAgYnl0ZUFycmF5LnB1c2gobG8pXG4gICAgYnl0ZUFycmF5LnB1c2goaGkpXG4gIH1cblxuICByZXR1cm4gYnl0ZUFycmF5XG59XG5cbmZ1bmN0aW9uIGJhc2U2NFRvQnl0ZXMgKHN0cikge1xuICByZXR1cm4gYmFzZTY0LnRvQnl0ZUFycmF5KGJhc2U2NGNsZWFuKHN0cikpXG59XG5cbmZ1bmN0aW9uIGJsaXRCdWZmZXIgKHNyYywgZHN0LCBvZmZzZXQsIGxlbmd0aCkge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgaWYgKChpICsgb2Zmc2V0ID49IGRzdC5sZW5ndGgpIHx8IChpID49IHNyYy5sZW5ndGgpKSBicmVha1xuICAgIGRzdFtpICsgb2Zmc2V0XSA9IHNyY1tpXVxuICB9XG4gIHJldHVybiBpXG59XG5cbmZ1bmN0aW9uIGlzbmFuICh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gdmFsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2VsZi1jb21wYXJlXG59XG4iLCIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKFxuICAgICAgdWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKVxuICAgICkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiIsImV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwidmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi9saWIva2V5cy5qcycpO1xudmFyIGlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9saWIvaXNfYXJndW1lbnRzLmpzJyk7XG5cbnZhciBkZWVwRXF1YWwgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKSB7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIERhdGUgJiYgZXhwZWN0ZWQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMuIE90aGVyIHBhaXJzIHRoYXQgZG8gbm90IGJvdGggcGFzcyB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgPT0uXG4gIH0gZWxzZSBpZiAoIWFjdHVhbCB8fCAhZXhwZWN0ZWQgfHwgdHlwZW9mIGFjdHVhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0cy5zdHJpY3QgPyBhY3R1YWwgPT09IGV4cGVjdGVkIDogYWN0dWFsID09IGV4cGVjdGVkO1xuXG4gIC8vIDcuNC4gRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKHgpIHtcbiAgaWYgKCF4IHx8IHR5cGVvZiB4ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgeC5sZW5ndGggIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgeC5jb3B5ICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB4LnNsaWNlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh4Lmxlbmd0aCA+IDAgJiYgdHlwZW9mIHhbMF0gIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiLCBvcHRzKSB7XG4gIHZhciBpLCBrZXk7XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS5cbiAgaWYgKGEucHJvdG90eXBlICE9PSBiLnByb3RvdHlwZSkgcmV0dXJuIGZhbHNlO1xuICAvL35+fkkndmUgbWFuYWdlZCB0byBicmVhayBPYmplY3Qua2V5cyB0aHJvdWdoIHNjcmV3eSBhcmd1bWVudHMgcGFzc2luZy5cbiAgLy8gICBDb252ZXJ0aW5nIHRvIGFycmF5IHNvbHZlcyB0aGUgcHJvYmxlbS5cbiAgaWYgKGlzQXJndW1lbnRzKGEpKSB7XG4gICAgaWYgKCFpc0FyZ3VtZW50cyhiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBkZWVwRXF1YWwoYSwgYiwgb3B0cyk7XG4gIH1cbiAgaWYgKGlzQnVmZmVyKGEpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSxcbiAgICAgICAga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7Ly9oYXBwZW5zIHdoZW4gb25lIGlzIGEgc3RyaW5nIGxpdGVyYWwgYW5kIHRoZSBvdGhlciBpc24ndFxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIG9wdHMpKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBhID09PSB0eXBlb2YgYjtcbn1cbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBPYmplY3Qua2V5cyA9PT0gJ2Z1bmN0aW9uJ1xuICA/IE9iamVjdC5rZXlzIDogc2hpbTtcblxuZXhwb3J0cy5zaGltID0gc2hpbTtcbmZ1bmN0aW9uIHNoaW0gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSBrZXlzLnB1c2goa2V5KTtcbiAgcmV0dXJuIGtleXM7XG59XG4iLCJ2YXIgc3VwcG9ydHNBcmd1bWVudHNDbGFzcyA9IChmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50cylcbn0pKCkgPT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHN1cHBvcnRzQXJndW1lbnRzQ2xhc3MgPyBzdXBwb3J0ZWQgOiB1bnN1cHBvcnRlZDtcblxuZXhwb3J0cy5zdXBwb3J0ZWQgPSBzdXBwb3J0ZWQ7XG5mdW5jdGlvbiBzdXBwb3J0ZWQob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqZWN0KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcbn07XG5cbmV4cG9ydHMudW5zdXBwb3J0ZWQgPSB1bnN1cHBvcnRlZDtcbmZ1bmN0aW9uIHVuc3VwcG9ydGVkKG9iamVjdCl7XG4gIHJldHVybiBvYmplY3QgJiZcbiAgICB0eXBlb2Ygb2JqZWN0ID09ICdvYmplY3QnICYmXG4gICAgdHlwZW9mIG9iamVjdC5sZW5ndGggPT0gJ251bWJlcicgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCAnY2FsbGVlJykgJiZcbiAgICAhT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCwgJ2NhbGxlZScpIHx8XG4gICAgZmFsc2U7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX0NTU1RyYW5zaXRpb25Hcm91cCA9IHJlcXVpcmUoJy4vQ1NTVHJhbnNpdGlvbkdyb3VwJyk7XG5cbnZhciBfQ1NTVHJhbnNpdGlvbkdyb3VwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NTU1RyYW5zaXRpb25Hcm91cCk7XG5cbnZhciBfVHJhbnNpdGlvbkdyb3VwID0gcmVxdWlyZSgnLi9UcmFuc2l0aW9uR3JvdXAnKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVHJhbnNpdGlvbkdyb3VwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFRyYW5zaXRpb25Hcm91cDogX1RyYW5zaXRpb25Hcm91cDIuZGVmYXVsdCxcbiAgQ1NTVHJhbnNpdGlvbkdyb3VwOiBfQ1NTVHJhbnNpdGlvbkdyb3VwMi5kZWZhdWx0XG59OyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAgPSByZXF1aXJlKCcuL1RyYW5zaXRpb25Hcm91cCcpO1xuXG52YXIgX1RyYW5zaXRpb25Hcm91cDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9UcmFuc2l0aW9uR3JvdXApO1xuXG52YXIgX0NTU1RyYW5zaXRpb25Hcm91cENoaWxkID0gcmVxdWlyZSgnLi9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCcpO1xuXG52YXIgX0NTU1RyYW5zaXRpb25Hcm91cENoaWxkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NTU1RyYW5zaXRpb25Hcm91cENoaWxkKTtcblxudmFyIF9Qcm9wVHlwZXMgPSByZXF1aXJlKCcuL3V0aWxzL1Byb3BUeXBlcycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIHRyYW5zaXRpb25OYW1lOiBfUHJvcFR5cGVzLm5hbWVTaGFwZS5pc1JlcXVpcmVkLFxuXG4gIHRyYW5zaXRpb25BcHBlYXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgdHJhbnNpdGlvbkVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHRyYW5zaXRpb25MZWF2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICB0cmFuc2l0aW9uQXBwZWFyVGltZW91dDogKDAsIF9Qcm9wVHlwZXMudHJhbnNpdGlvblRpbWVvdXQpKCdBcHBlYXInKSxcbiAgdHJhbnNpdGlvbkVudGVyVGltZW91dDogKDAsIF9Qcm9wVHlwZXMudHJhbnNpdGlvblRpbWVvdXQpKCdFbnRlcicpLFxuICB0cmFuc2l0aW9uTGVhdmVUaW1lb3V0OiAoMCwgX1Byb3BUeXBlcy50cmFuc2l0aW9uVGltZW91dCkoJ0xlYXZlJylcbn07XG5cbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHRyYW5zaXRpb25BcHBlYXI6IGZhbHNlLFxuICB0cmFuc2l0aW9uRW50ZXI6IHRydWUsXG4gIHRyYW5zaXRpb25MZWF2ZTogdHJ1ZVxufTtcblxudmFyIENTU1RyYW5zaXRpb25Hcm91cCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhDU1NUcmFuc2l0aW9uR3JvdXAsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENTU1RyYW5zaXRpb25Hcm91cCgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENTU1RyYW5zaXRpb25Hcm91cCk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuX3dyYXBDaGlsZCA9IGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDIuZGVmYXVsdCwge1xuICAgICAgICBuYW1lOiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uTmFtZSxcbiAgICAgICAgYXBwZWFyOiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uQXBwZWFyLFxuICAgICAgICBlbnRlcjogX3RoaXMucHJvcHMudHJhbnNpdGlvbkVudGVyLFxuICAgICAgICBsZWF2ZTogX3RoaXMucHJvcHMudHJhbnNpdGlvbkxlYXZlLFxuICAgICAgICBhcHBlYXJUaW1lb3V0OiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uQXBwZWFyVGltZW91dCxcbiAgICAgICAgZW50ZXJUaW1lb3V0OiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uRW50ZXJUaW1lb3V0LFxuICAgICAgICBsZWF2ZVRpbWVvdXQ6IF90aGlzLnByb3BzLnRyYW5zaXRpb25MZWF2ZVRpbWVvdXRcbiAgICAgIH0sIGNoaWxkKTtcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIC8vIFdlIG5lZWQgdG8gcHJvdmlkZSB0aGlzIGNoaWxkRmFjdG9yeSBzbyB0aGF0XG4gIC8vIFJlYWN0Q1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQgY2FuIHJlY2VpdmUgdXBkYXRlcyB0byBuYW1lLCBlbnRlciwgYW5kXG4gIC8vIGxlYXZlIHdoaWxlIGl0IGlzIGxlYXZpbmcuXG5cblxuICBDU1NUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1RyYW5zaXRpb25Hcm91cDIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHsgY2hpbGRGYWN0b3J5OiB0aGlzLl93cmFwQ2hpbGQgfSkpO1xuICB9O1xuXG4gIHJldHVybiBDU1NUcmFuc2l0aW9uR3JvdXA7XG59KF9yZWFjdDIuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5DU1NUcmFuc2l0aW9uR3JvdXAuZGlzcGxheU5hbWUgPSAnQ1NTVHJhbnNpdGlvbkdyb3VwJztcblxuXG5DU1NUcmFuc2l0aW9uR3JvdXAucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gcHJvcFR5cGVzIDoge307XG5DU1NUcmFuc2l0aW9uR3JvdXAuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBDU1NUcmFuc2l0aW9uR3JvdXA7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY2hhaW4oKXtcbiAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgdmFyIGFyZ3MgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKVxuICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV1cblxuICBhcmdzID0gYXJncy5maWx0ZXIoZnVuY3Rpb24oZm4peyByZXR1cm4gZm4gIT0gbnVsbCB9KVxuXG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHVuZGVmaW5lZFxuICBpZiAoYXJncy5sZW5ndGggPT09IDEpIHJldHVybiBhcmdzWzBdXG5cbiAgcmV0dXJuIGFyZ3MucmVkdWNlKGZ1bmN0aW9uKGN1cnJlbnQsIG5leHQpe1xuICAgIHJldHVybiBmdW5jdGlvbiBjaGFpbmVkRnVuY3Rpb24oKSB7XG4gICAgICBjdXJyZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBuZXh0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSlcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5nZXRDaGlsZE1hcHBpbmcgPSBnZXRDaGlsZE1hcHBpbmc7XG5leHBvcnRzLm1lcmdlQ2hpbGRNYXBwaW5ncyA9IG1lcmdlQ2hpbGRNYXBwaW5ncztcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbi8qKlxuICogR2l2ZW4gYHRoaXMucHJvcHMuY2hpbGRyZW5gLCByZXR1cm4gYW4gb2JqZWN0IG1hcHBpbmcga2V5IHRvIGNoaWxkLlxuICpcbiAqIEBwYXJhbSB7Kn0gY2hpbGRyZW4gYHRoaXMucHJvcHMuY2hpbGRyZW5gXG4gKiBAcmV0dXJuIHtvYmplY3R9IE1hcHBpbmcgb2Yga2V5IHRvIGNoaWxkXG4gKi9cbmZ1bmN0aW9uIGdldENoaWxkTWFwcGluZyhjaGlsZHJlbikge1xuICBpZiAoIWNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xuICB9XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgX3JlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmV0dXJuIGNoaWxkO1xuICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJlc3VsdFtjaGlsZC5rZXldID0gY2hpbGQ7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFdoZW4geW91J3JlIGFkZGluZyBvciByZW1vdmluZyBjaGlsZHJlbiBzb21lIG1heSBiZSBhZGRlZCBvciByZW1vdmVkIGluIHRoZVxuICogc2FtZSByZW5kZXIgcGFzcy4gV2Ugd2FudCB0byBzaG93ICpib3RoKiBzaW5jZSB3ZSB3YW50IHRvIHNpbXVsdGFuZW91c2x5XG4gKiBhbmltYXRlIGVsZW1lbnRzIGluIGFuZCBvdXQuIFRoaXMgZnVuY3Rpb24gdGFrZXMgYSBwcmV2aW91cyBzZXQgb2Yga2V5c1xuICogYW5kIGEgbmV3IHNldCBvZiBrZXlzIGFuZCBtZXJnZXMgdGhlbSB3aXRoIGl0cyBiZXN0IGd1ZXNzIG9mIHRoZSBjb3JyZWN0XG4gKiBvcmRlcmluZy4gSW4gdGhlIGZ1dHVyZSB3ZSBtYXkgZXhwb3NlIHNvbWUgb2YgdGhlIHV0aWxpdGllcyBpblxuICogUmVhY3RNdWx0aUNoaWxkIHRvIG1ha2UgdGhpcyBlYXN5LCBidXQgZm9yIG5vdyBSZWFjdCBpdHNlbGYgZG9lcyBub3RcbiAqIGRpcmVjdGx5IGhhdmUgdGhpcyBjb25jZXB0IG9mIHRoZSB1bmlvbiBvZiBwcmV2Q2hpbGRyZW4gYW5kIG5leHRDaGlsZHJlblxuICogc28gd2UgaW1wbGVtZW50IGl0IGhlcmUuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHByZXYgcHJldiBjaGlsZHJlbiBhcyByZXR1cm5lZCBmcm9tXG4gKiBgUmVhY3RUcmFuc2l0aW9uQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZygpYC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0IG5leHQgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcmV0dXJuIHtvYmplY3R9IGEga2V5IHNldCB0aGF0IGNvbnRhaW5zIGFsbCBrZXlzIGluIGBwcmV2YCBhbmQgYWxsIGtleXNcbiAqIGluIGBuZXh0YCBpbiBhIHJlYXNvbmFibGUgb3JkZXIuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlQ2hpbGRNYXBwaW5ncyhwcmV2LCBuZXh0KSB7XG4gIHByZXYgPSBwcmV2IHx8IHt9O1xuICBuZXh0ID0gbmV4dCB8fCB7fTtcblxuICBmdW5jdGlvbiBnZXRWYWx1ZUZvcktleShrZXkpIHtcbiAgICBpZiAobmV4dC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICByZXR1cm4gbmV4dFtrZXldO1xuICAgIH1cblxuICAgIHJldHVybiBwcmV2W2tleV07XG4gIH1cblxuICAvLyBGb3IgZWFjaCBrZXkgb2YgYG5leHRgLCB0aGUgbGlzdCBvZiBrZXlzIHRvIGluc2VydCBiZWZvcmUgdGhhdCBrZXkgaW5cbiAgLy8gdGhlIGNvbWJpbmVkIGxpc3RcbiAgdmFyIG5leHRLZXlzUGVuZGluZyA9IHt9O1xuXG4gIHZhciBwZW5kaW5nS2V5cyA9IFtdO1xuICBmb3IgKHZhciBwcmV2S2V5IGluIHByZXYpIHtcbiAgICBpZiAobmV4dC5oYXNPd25Qcm9wZXJ0eShwcmV2S2V5KSkge1xuICAgICAgaWYgKHBlbmRpbmdLZXlzLmxlbmd0aCkge1xuICAgICAgICBuZXh0S2V5c1BlbmRpbmdbcHJldktleV0gPSBwZW5kaW5nS2V5cztcbiAgICAgICAgcGVuZGluZ0tleXMgPSBbXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGVuZGluZ0tleXMucHVzaChwcmV2S2V5KTtcbiAgICB9XG4gIH1cblxuICB2YXIgaSA9IHZvaWQgMDtcbiAgdmFyIGNoaWxkTWFwcGluZyA9IHt9O1xuICBmb3IgKHZhciBuZXh0S2V5IGluIG5leHQpIHtcbiAgICBpZiAobmV4dEtleXNQZW5kaW5nLmhhc093blByb3BlcnR5KG5leHRLZXkpKSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbmV4dEtleXNQZW5kaW5nW25leHRLZXldLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwZW5kaW5nTmV4dEtleSA9IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXTtcbiAgICAgICAgY2hpbGRNYXBwaW5nW25leHRLZXlzUGVuZGluZ1tuZXh0S2V5XVtpXV0gPSBnZXRWYWx1ZUZvcktleShwZW5kaW5nTmV4dEtleSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNoaWxkTWFwcGluZ1tuZXh0S2V5XSA9IGdldFZhbHVlRm9yS2V5KG5leHRLZXkpO1xuICB9XG5cbiAgLy8gRmluYWxseSwgYWRkIHRoZSBrZXlzIHdoaWNoIGRpZG4ndCBhcHBlYXIgYmVmb3JlIGFueSBrZXkgaW4gYG5leHRgXG4gIGZvciAoaSA9IDA7IGkgPCBwZW5kaW5nS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGNoaWxkTWFwcGluZ1twZW5kaW5nS2V5c1tpXV0gPSBnZXRWYWx1ZUZvcktleShwZW5kaW5nS2V5c1tpXSk7XG4gIH1cblxuICByZXR1cm4gY2hpbGRNYXBwaW5nO1xufSIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9hZGRDbGFzcyA9IHJlcXVpcmUoJ2RvbS1oZWxwZXJzL2NsYXNzL2FkZENsYXNzJyk7XG5cbnZhciBfYWRkQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYWRkQ2xhc3MpO1xuXG52YXIgX3JlbW92ZUNsYXNzID0gcmVxdWlyZSgnZG9tLWhlbHBlcnMvY2xhc3MvcmVtb3ZlQ2xhc3MnKTtcblxudmFyIF9yZW1vdmVDbGFzczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZW1vdmVDbGFzcyk7XG5cbnZhciBfcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gcmVxdWlyZSgnZG9tLWhlbHBlcnMvdXRpbC9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUnKTtcblxudmFyIF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVxdWVzdEFuaW1hdGlvbkZyYW1lKTtcblxudmFyIF9wcm9wZXJ0aWVzID0gcmVxdWlyZSgnZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9wcm9wZXJ0aWVzJyk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfcmVhY3REb20gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcblxudmFyIF9Qcm9wVHlwZXMgPSByZXF1aXJlKCcuL3V0aWxzL1Byb3BUeXBlcycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBldmVudHMgPSBbXTtcbmlmIChfcHJvcGVydGllcy50cmFuc2l0aW9uRW5kKSBldmVudHMucHVzaChfcHJvcGVydGllcy50cmFuc2l0aW9uRW5kKTtcbmlmIChfcHJvcGVydGllcy5hbmltYXRpb25FbmQpIGV2ZW50cy5wdXNoKF9wcm9wZXJ0aWVzLmFuaW1hdGlvbkVuZCk7XG5cbmZ1bmN0aW9uIGFkZEVuZExpc3RlbmVyKG5vZGUsIGxpc3RlbmVyKSB7XG4gIGlmIChldmVudHMubGVuZ3RoKSB7XG4gICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZSwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzZXRUaW1lb3V0KGxpc3RlbmVyLCAwKTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFldmVudHMubGVuZ3RoKSByZXR1cm47XG4gICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZSwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICB9KTtcbiAgfTtcbn1cblxudmFyIHByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IF9wcm9wVHlwZXMyLmRlZmF1bHQubm9kZSxcbiAgbmFtZTogX1Byb3BUeXBlcy5uYW1lU2hhcGUuaXNSZXF1aXJlZCxcblxuICAvLyBPbmNlIHdlIHJlcXVpcmUgdGltZW91dHMgdG8gYmUgc3BlY2lmaWVkLCB3ZSBjYW4gcmVtb3ZlIHRoZVxuICAvLyBib29sZWFuIGZsYWdzIChhcHBlYXIgZXRjLikgYW5kIGp1c3QgYWNjZXB0IGEgbnVtYmVyXG4gIC8vIG9yIGEgYm9vbCBmb3IgdGhlIHRpbWVvdXQgZmxhZ3MgKGFwcGVhclRpbWVvdXQgZXRjLilcbiAgYXBwZWFyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIGVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIGxlYXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIGFwcGVhclRpbWVvdXQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBlbnRlclRpbWVvdXQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBsZWF2ZVRpbWVvdXQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXG59O1xuXG52YXIgQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENTU1RyYW5zaXRpb25Hcm91cENoaWxkKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmNvbXBvbmVudFdpbGxBcHBlYXIgPSBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgaWYgKF90aGlzLnByb3BzLmFwcGVhcikge1xuICAgICAgICBfdGhpcy50cmFuc2l0aW9uKCdhcHBlYXInLCBkb25lLCBfdGhpcy5wcm9wcy5hcHBlYXJUaW1lb3V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH1cbiAgICB9LCBfdGhpcy5jb21wb25lbnRXaWxsRW50ZXIgPSBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgaWYgKF90aGlzLnByb3BzLmVudGVyKSB7XG4gICAgICAgIF90aGlzLnRyYW5zaXRpb24oJ2VudGVyJywgZG9uZSwgX3RoaXMucHJvcHMuZW50ZXJUaW1lb3V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH1cbiAgICB9LCBfdGhpcy5jb21wb25lbnRXaWxsTGVhdmUgPSBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgaWYgKF90aGlzLnByb3BzLmxlYXZlKSB7XG4gICAgICAgIF90aGlzLnRyYW5zaXRpb24oJ2xlYXZlJywgZG9uZSwgX3RoaXMucHJvcHMubGVhdmVUaW1lb3V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH1cbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdGhpcy5jbGFzc05hbWVBbmROb2RlUXVldWUgPSBbXTtcbiAgICB0aGlzLnRyYW5zaXRpb25UaW1lb3V0cyA9IFtdO1xuICB9O1xuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMudW5tb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLnRpbWVvdXQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpO1xuICAgIH1cbiAgICB0aGlzLnRyYW5zaXRpb25UaW1lb3V0cy5mb3JFYWNoKGZ1bmN0aW9uICh0aW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNsYXNzTmFtZUFuZE5vZGVRdWV1ZS5sZW5ndGggPSAwO1xuICB9O1xuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS50cmFuc2l0aW9uID0gZnVuY3Rpb24gdHJhbnNpdGlvbihhbmltYXRpb25UeXBlLCBmaW5pc2hDYWxsYmFjaywgdGltZW91dCkge1xuICAgIHZhciBub2RlID0gKDAsIF9yZWFjdERvbS5maW5kRE9NTm9kZSkodGhpcyk7XG5cbiAgICBpZiAoIW5vZGUpIHtcbiAgICAgIGlmIChmaW5pc2hDYWxsYmFjaykge1xuICAgICAgICBmaW5pc2hDYWxsYmFjaygpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBjbGFzc05hbWUgPSB0aGlzLnByb3BzLm5hbWVbYW5pbWF0aW9uVHlwZV0gfHwgdGhpcy5wcm9wcy5uYW1lICsgJy0nICsgYW5pbWF0aW9uVHlwZTtcbiAgICB2YXIgYWN0aXZlQ2xhc3NOYW1lID0gdGhpcy5wcm9wcy5uYW1lW2FuaW1hdGlvblR5cGUgKyAnQWN0aXZlJ10gfHwgY2xhc3NOYW1lICsgJy1hY3RpdmUnO1xuICAgIHZhciB0aW1lciA9IG51bGw7XG4gICAgdmFyIHJlbW92ZUxpc3RlbmVycyA9IHZvaWQgMDtcblxuICAgICgwLCBfYWRkQ2xhc3MyLmRlZmF1bHQpKG5vZGUsIGNsYXNzTmFtZSk7XG5cbiAgICAvLyBOZWVkIHRvIGRvIHRoaXMgdG8gYWN0dWFsbHkgdHJpZ2dlciBhIHRyYW5zaXRpb24uXG4gICAgdGhpcy5xdWV1ZUNsYXNzQW5kTm9kZShhY3RpdmVDbGFzc05hbWUsIG5vZGUpO1xuXG4gICAgLy8gQ2xlYW4tdXAgdGhlIGFuaW1hdGlvbiBhZnRlciB0aGUgc3BlY2lmaWVkIGRlbGF5XG4gICAgdmFyIGZpbmlzaCA9IGZ1bmN0aW9uIGZpbmlzaChlKSB7XG4gICAgICBpZiAoZSAmJiBlLnRhcmdldCAhPT0gbm9kZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICBpZiAocmVtb3ZlTGlzdGVuZXJzKSByZW1vdmVMaXN0ZW5lcnMoKTtcblxuICAgICAgKDAsIF9yZW1vdmVDbGFzczIuZGVmYXVsdCkobm9kZSwgY2xhc3NOYW1lKTtcbiAgICAgICgwLCBfcmVtb3ZlQ2xhc3MyLmRlZmF1bHQpKG5vZGUsIGFjdGl2ZUNsYXNzTmFtZSk7XG5cbiAgICAgIGlmIChyZW1vdmVMaXN0ZW5lcnMpIHJlbW92ZUxpc3RlbmVycygpO1xuXG4gICAgICAvLyBVc3VhbGx5IHRoaXMgb3B0aW9uYWwgY2FsbGJhY2sgaXMgdXNlZCBmb3IgaW5mb3JtaW5nIGFuIG93bmVyIG9mXG4gICAgICAvLyBhIGxlYXZlIGFuaW1hdGlvbiBhbmQgdGVsbGluZyBpdCB0byByZW1vdmUgdGhlIGNoaWxkLlxuICAgICAgaWYgKGZpbmlzaENhbGxiYWNrKSB7XG4gICAgICAgIGZpbmlzaENhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmICh0aW1lb3V0KSB7XG4gICAgICB0aW1lciA9IHNldFRpbWVvdXQoZmluaXNoLCB0aW1lb3V0KTtcbiAgICAgIHRoaXMudHJhbnNpdGlvblRpbWVvdXRzLnB1c2godGltZXIpO1xuICAgIH0gZWxzZSBpZiAoX3Byb3BlcnRpZXMudHJhbnNpdGlvbkVuZCkge1xuICAgICAgcmVtb3ZlTGlzdGVuZXJzID0gYWRkRW5kTGlzdGVuZXIobm9kZSwgZmluaXNoKTtcbiAgICB9XG4gIH07XG5cbiAgQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQucHJvdG90eXBlLnF1ZXVlQ2xhc3NBbmROb2RlID0gZnVuY3Rpb24gcXVldWVDbGFzc0FuZE5vZGUoY2xhc3NOYW1lLCBub2RlKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB0aGlzLmNsYXNzTmFtZUFuZE5vZGVRdWV1ZS5wdXNoKHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgbm9kZTogbm9kZVxuICAgIH0pO1xuXG4gICAgaWYgKCF0aGlzLnJhZkhhbmRsZSkge1xuICAgICAgdGhpcy5yYWZIYW5kbGUgPSAoMCwgX3JlcXVlc3RBbmltYXRpb25GcmFtZTIuZGVmYXVsdCkoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMyLmZsdXNoQ2xhc3NOYW1lQW5kTm9kZVF1ZXVlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQucHJvdG90eXBlLmZsdXNoQ2xhc3NOYW1lQW5kTm9kZVF1ZXVlID0gZnVuY3Rpb24gZmx1c2hDbGFzc05hbWVBbmROb2RlUXVldWUoKSB7XG4gICAgaWYgKCF0aGlzLnVubW91bnRlZCkge1xuICAgICAgdGhpcy5jbGFzc05hbWVBbmROb2RlUXVldWUuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIC8vIFRoaXMgaXMgZm9yIHRvIGZvcmNlIGEgcmVwYWludCxcbiAgICAgICAgLy8gd2hpY2ggaXMgbmVjZXNzYXJ5IGluIG9yZGVyIHRvIHRyYW5zaXRpb24gc3R5bGVzIHdoZW4gYWRkaW5nIGEgY2xhc3MgbmFtZS5cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLWV4cHJlc3Npb25zICovXG4gICAgICAgIG9iai5ub2RlLnNjcm9sbFRvcDtcbiAgICAgICAgLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtZXhwcmVzc2lvbnMgKi9cbiAgICAgICAgKDAsIF9hZGRDbGFzczIuZGVmYXVsdCkob2JqLm5vZGUsIG9iai5jbGFzc05hbWUpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuY2xhc3NOYW1lQW5kTm9kZVF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgdGhpcy5yYWZIYW5kbGUgPSBudWxsO1xuICB9O1xuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHRoaXMucHJvcHMpO1xuICAgIGRlbGV0ZSBwcm9wcy5uYW1lO1xuICAgIGRlbGV0ZSBwcm9wcy5hcHBlYXI7XG4gICAgZGVsZXRlIHByb3BzLmVudGVyO1xuICAgIGRlbGV0ZSBwcm9wcy5sZWF2ZTtcbiAgICBkZWxldGUgcHJvcHMuYXBwZWFyVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMuZW50ZXJUaW1lb3V0O1xuICAgIGRlbGV0ZSBwcm9wcy5sZWF2ZVRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLmNoaWxkcmVuO1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY2xvbmVFbGVtZW50KF9yZWFjdDIuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pLCBwcm9wcyk7XG4gIH07XG5cbiAgcmV0dXJuIENTU1RyYW5zaXRpb25Hcm91cENoaWxkO1xufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcblxuQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQuZGlzcGxheU5hbWUgPSAnQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQnO1xuXG5cbkNTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHByb3BUeXBlcyA6IHt9O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFkZENsYXNzO1xuXG52YXIgX2hhc0NsYXNzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9oYXNDbGFzc1wiKSk7XG5cbmZ1bmN0aW9uIGFkZENsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO2Vsc2UgaWYgKCEoMCwgX2hhc0NsYXNzLmRlZmF1bHQpKGVsZW1lbnQsIGNsYXNzTmFtZSkpIGlmICh0eXBlb2YgZWxlbWVudC5jbGFzc05hbWUgPT09ICdzdHJpbmcnKSBlbGVtZW50LmNsYXNzTmFtZSA9IGVsZW1lbnQuY2xhc3NOYW1lICsgJyAnICsgY2xhc3NOYW1lO2Vsc2UgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgKGVsZW1lbnQuY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgJycpICsgJyAnICsgY2xhc3NOYW1lKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGhhc0NsYXNzO1xuXG5mdW5jdGlvbiBoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSByZXR1cm4gISFjbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtlbHNlIHJldHVybiAoXCIgXCIgKyAoZWxlbWVudC5jbGFzc05hbWUuYmFzZVZhbCB8fCBlbGVtZW50LmNsYXNzTmFtZSkgKyBcIiBcIikuaW5kZXhPZihcIiBcIiArIGNsYXNzTmFtZSArIFwiIFwiKSAhPT0gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiByZXBsYWNlQ2xhc3NOYW1lKG9yaWdDbGFzcywgY2xhc3NUb1JlbW92ZSkge1xuICByZXR1cm4gb3JpZ0NsYXNzLnJlcGxhY2UobmV3IFJlZ0V4cCgnKF58XFxcXHMpJyArIGNsYXNzVG9SZW1vdmUgKyAnKD86XFxcXHN8JCknLCAnZycpLCAnJDEnKS5yZXBsYWNlKC9cXHMrL2csICcgJykucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO2Vsc2UgaWYgKHR5cGVvZiBlbGVtZW50LmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIGVsZW1lbnQuY2xhc3NOYW1lID0gcmVwbGFjZUNsYXNzTmFtZShlbGVtZW50LmNsYXNzTmFtZSwgY2xhc3NOYW1lKTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIHJlcGxhY2VDbGFzc05hbWUoZWxlbWVudC5jbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc05hbWUuYmFzZVZhbCB8fCAnJywgY2xhc3NOYW1lKSk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9pbkRPTSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaW5ET01cIikpO1xuXG52YXIgdmVuZG9ycyA9IFsnJywgJ3dlYmtpdCcsICdtb3onLCAnbycsICdtcyddO1xudmFyIGNhbmNlbCA9ICdjbGVhclRpbWVvdXQnO1xudmFyIHJhZiA9IGZhbGxiYWNrO1xudmFyIGNvbXBhdFJhZjtcblxudmFyIGdldEtleSA9IGZ1bmN0aW9uIGdldEtleSh2ZW5kb3IsIGspIHtcbiAgcmV0dXJuIHZlbmRvciArICghdmVuZG9yID8gayA6IGtbMF0udG9VcHBlckNhc2UoKSArIGsuc3Vic3RyKDEpKSArICdBbmltYXRpb25GcmFtZSc7XG59O1xuXG5pZiAoX2luRE9NLmRlZmF1bHQpIHtcbiAgdmVuZG9ycy5zb21lKGZ1bmN0aW9uICh2ZW5kb3IpIHtcbiAgICB2YXIgcmFmS2V5ID0gZ2V0S2V5KHZlbmRvciwgJ3JlcXVlc3QnKTtcblxuICAgIGlmIChyYWZLZXkgaW4gd2luZG93KSB7XG4gICAgICBjYW5jZWwgPSBnZXRLZXkodmVuZG9yLCAnY2FuY2VsJyk7XG4gICAgICByZXR1cm4gcmFmID0gZnVuY3Rpb24gcmFmKGNiKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3dbcmFmS2V5XShjYik7XG4gICAgICB9O1xuICAgIH1cbiAgfSk7XG59XG4vKiBodHRwczovL2dpdGh1Yi5jb20vY29tcG9uZW50L3JhZiAqL1xuXG5cbnZhciBwcmV2ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbmZ1bmN0aW9uIGZhbGxiYWNrKGZuKSB7XG4gIHZhciBjdXJyID0gbmV3IERhdGUoKS5nZXRUaW1lKCksXG4gICAgICBtcyA9IE1hdGgubWF4KDAsIDE2IC0gKGN1cnIgLSBwcmV2KSksXG4gICAgICByZXEgPSBzZXRUaW1lb3V0KGZuLCBtcyk7XG4gIHByZXYgPSBjdXJyO1xuICByZXR1cm4gcmVxO1xufVxuXG5jb21wYXRSYWYgPSBmdW5jdGlvbiBjb21wYXRSYWYoY2IpIHtcbiAgcmV0dXJuIHJhZihjYik7XG59O1xuXG5jb21wYXRSYWYuY2FuY2VsID0gZnVuY3Rpb24gKGlkKSB7XG4gIHdpbmRvd1tjYW5jZWxdICYmIHR5cGVvZiB3aW5kb3dbY2FuY2VsXSA9PT0gJ2Z1bmN0aW9uJyAmJiB3aW5kb3dbY2FuY2VsXShpZCk7XG59O1xuXG52YXIgX2RlZmF1bHQgPSBjb21wYXRSYWY7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5hbmltYXRpb25FbmQgPSBleHBvcnRzLmFuaW1hdGlvbkRlbGF5ID0gZXhwb3J0cy5hbmltYXRpb25UaW1pbmcgPSBleHBvcnRzLmFuaW1hdGlvbkR1cmF0aW9uID0gZXhwb3J0cy5hbmltYXRpb25OYW1lID0gZXhwb3J0cy50cmFuc2l0aW9uRW5kID0gZXhwb3J0cy50cmFuc2l0aW9uRHVyYXRpb24gPSBleHBvcnRzLnRyYW5zaXRpb25EZWxheSA9IGV4cG9ydHMudHJhbnNpdGlvblRpbWluZyA9IGV4cG9ydHMudHJhbnNpdGlvblByb3BlcnR5ID0gZXhwb3J0cy50cmFuc2Zvcm0gPSB2b2lkIDA7XG5cbnZhciBfaW5ET00gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlsL2luRE9NXCIpKTtcblxudmFyIHRyYW5zZm9ybSA9ICd0cmFuc2Zvcm0nO1xuZXhwb3J0cy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG52YXIgcHJlZml4LCB0cmFuc2l0aW9uRW5kLCBhbmltYXRpb25FbmQ7XG5leHBvcnRzLmFuaW1hdGlvbkVuZCA9IGFuaW1hdGlvbkVuZDtcbmV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IHRyYW5zaXRpb25FbmQ7XG52YXIgdHJhbnNpdGlvblByb3BlcnR5LCB0cmFuc2l0aW9uRHVyYXRpb24sIHRyYW5zaXRpb25UaW1pbmcsIHRyYW5zaXRpb25EZWxheTtcbmV4cG9ydHMudHJhbnNpdGlvbkRlbGF5ID0gdHJhbnNpdGlvbkRlbGF5O1xuZXhwb3J0cy50cmFuc2l0aW9uVGltaW5nID0gdHJhbnNpdGlvblRpbWluZztcbmV4cG9ydHMudHJhbnNpdGlvbkR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uO1xuZXhwb3J0cy50cmFuc2l0aW9uUHJvcGVydHkgPSB0cmFuc2l0aW9uUHJvcGVydHk7XG52YXIgYW5pbWF0aW9uTmFtZSwgYW5pbWF0aW9uRHVyYXRpb24sIGFuaW1hdGlvblRpbWluZywgYW5pbWF0aW9uRGVsYXk7XG5leHBvcnRzLmFuaW1hdGlvbkRlbGF5ID0gYW5pbWF0aW9uRGVsYXk7XG5leHBvcnRzLmFuaW1hdGlvblRpbWluZyA9IGFuaW1hdGlvblRpbWluZztcbmV4cG9ydHMuYW5pbWF0aW9uRHVyYXRpb24gPSBhbmltYXRpb25EdXJhdGlvbjtcbmV4cG9ydHMuYW5pbWF0aW9uTmFtZSA9IGFuaW1hdGlvbk5hbWU7XG5cbmlmIChfaW5ET00uZGVmYXVsdCkge1xuICB2YXIgX2dldFRyYW5zaXRpb25Qcm9wZXJ0ID0gZ2V0VHJhbnNpdGlvblByb3BlcnRpZXMoKTtcblxuICBwcmVmaXggPSBfZ2V0VHJhbnNpdGlvblByb3BlcnQucHJlZml4O1xuICBleHBvcnRzLnRyYW5zaXRpb25FbmQgPSB0cmFuc2l0aW9uRW5kID0gX2dldFRyYW5zaXRpb25Qcm9wZXJ0LnRyYW5zaXRpb25FbmQ7XG4gIGV4cG9ydHMuYW5pbWF0aW9uRW5kID0gYW5pbWF0aW9uRW5kID0gX2dldFRyYW5zaXRpb25Qcm9wZXJ0LmFuaW1hdGlvbkVuZDtcbiAgZXhwb3J0cy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm0gPSBwcmVmaXggKyBcIi1cIiArIHRyYW5zZm9ybTtcbiAgZXhwb3J0cy50cmFuc2l0aW9uUHJvcGVydHkgPSB0cmFuc2l0aW9uUHJvcGVydHkgPSBwcmVmaXggKyBcIi10cmFuc2l0aW9uLXByb3BlcnR5XCI7XG4gIGV4cG9ydHMudHJhbnNpdGlvbkR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uID0gcHJlZml4ICsgXCItdHJhbnNpdGlvbi1kdXJhdGlvblwiO1xuICBleHBvcnRzLnRyYW5zaXRpb25EZWxheSA9IHRyYW5zaXRpb25EZWxheSA9IHByZWZpeCArIFwiLXRyYW5zaXRpb24tZGVsYXlcIjtcbiAgZXhwb3J0cy50cmFuc2l0aW9uVGltaW5nID0gdHJhbnNpdGlvblRpbWluZyA9IHByZWZpeCArIFwiLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uXCI7XG4gIGV4cG9ydHMuYW5pbWF0aW9uTmFtZSA9IGFuaW1hdGlvbk5hbWUgPSBwcmVmaXggKyBcIi1hbmltYXRpb24tbmFtZVwiO1xuICBleHBvcnRzLmFuaW1hdGlvbkR1cmF0aW9uID0gYW5pbWF0aW9uRHVyYXRpb24gPSBwcmVmaXggKyBcIi1hbmltYXRpb24tZHVyYXRpb25cIjtcbiAgZXhwb3J0cy5hbmltYXRpb25UaW1pbmcgPSBhbmltYXRpb25UaW1pbmcgPSBwcmVmaXggKyBcIi1hbmltYXRpb24tZGVsYXlcIjtcbiAgZXhwb3J0cy5hbmltYXRpb25EZWxheSA9IGFuaW1hdGlvbkRlbGF5ID0gcHJlZml4ICsgXCItYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvblwiO1xufVxuXG52YXIgX2RlZmF1bHQgPSB7XG4gIHRyYW5zZm9ybTogdHJhbnNmb3JtLFxuICBlbmQ6IHRyYW5zaXRpb25FbmQsXG4gIHByb3BlcnR5OiB0cmFuc2l0aW9uUHJvcGVydHksXG4gIHRpbWluZzogdHJhbnNpdGlvblRpbWluZyxcbiAgZGVsYXk6IHRyYW5zaXRpb25EZWxheSxcbiAgZHVyYXRpb246IHRyYW5zaXRpb25EdXJhdGlvblxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuXG5mdW5jdGlvbiBnZXRUcmFuc2l0aW9uUHJvcGVydGllcygpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jykuc3R5bGU7XG4gIHZhciB2ZW5kb3JNYXAgPSB7XG4gICAgTzogZnVuY3Rpb24gTyhlKSB7XG4gICAgICByZXR1cm4gXCJvXCIgKyBlLnRvTG93ZXJDYXNlKCk7XG4gICAgfSxcbiAgICBNb3o6IGZ1bmN0aW9uIE1veihlKSB7XG4gICAgICByZXR1cm4gZS50b0xvd2VyQ2FzZSgpO1xuICAgIH0sXG4gICAgV2Via2l0OiBmdW5jdGlvbiBXZWJraXQoZSkge1xuICAgICAgcmV0dXJuIFwid2Via2l0XCIgKyBlO1xuICAgIH0sXG4gICAgbXM6IGZ1bmN0aW9uIG1zKGUpIHtcbiAgICAgIHJldHVybiBcIk1TXCIgKyBlO1xuICAgIH1cbiAgfTtcbiAgdmFyIHZlbmRvcnMgPSBPYmplY3Qua2V5cyh2ZW5kb3JNYXApO1xuICB2YXIgdHJhbnNpdGlvbkVuZCwgYW5pbWF0aW9uRW5kO1xuICB2YXIgcHJlZml4ID0gJyc7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZW5kb3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHZlbmRvciA9IHZlbmRvcnNbaV07XG5cbiAgICBpZiAodmVuZG9yICsgXCJUcmFuc2l0aW9uUHJvcGVydHlcIiBpbiBzdHlsZSkge1xuICAgICAgcHJlZml4ID0gXCItXCIgKyB2ZW5kb3IudG9Mb3dlckNhc2UoKTtcbiAgICAgIHRyYW5zaXRpb25FbmQgPSB2ZW5kb3JNYXBbdmVuZG9yXSgnVHJhbnNpdGlvbkVuZCcpO1xuICAgICAgYW5pbWF0aW9uRW5kID0gdmVuZG9yTWFwW3ZlbmRvcl0oJ0FuaW1hdGlvbkVuZCcpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgaWYgKCF0cmFuc2l0aW9uRW5kICYmICd0cmFuc2l0aW9uUHJvcGVydHknIGluIHN0eWxlKSB0cmFuc2l0aW9uRW5kID0gJ3RyYW5zaXRpb25lbmQnO1xuICBpZiAoIWFuaW1hdGlvbkVuZCAmJiAnYW5pbWF0aW9uTmFtZScgaW4gc3R5bGUpIGFuaW1hdGlvbkVuZCA9ICdhbmltYXRpb25lbmQnO1xuICBzdHlsZSA9IG51bGw7XG4gIHJldHVybiB7XG4gICAgYW5pbWF0aW9uRW5kOiBhbmltYXRpb25FbmQsXG4gICAgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCxcbiAgICBwcmVmaXg6IHByZWZpeFxuICB9O1xufSIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjcuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuY29uc3QgSW5wdXRTdHlsZWQgPSBzdHlsZWQuaW5wdXRgXG4gIHdpZHRoOiAxMCU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGRpc3BsYXk6IGlubGluZTtcbmA7XG5cblxuY2xhc3MgUGVyY2VudENvbG9ySW5wdXQgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBncmVlbjogMC4wMDUsXG4gICAgICBsaWdodEdyZWVuOiAwLjAwMSxcbiAgICAgIHllbGxvdzogMC4wNSxcbiAgICAgIG9yYW5nZTogMC4wMSxcbiAgICB9XG4gICAgdGhpcy5jbG9uZVRyZWUgPSB0aGlzLmNsb25lVHJlZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMudXBkYXRlVHJlZSA9IHRoaXMudXBkYXRlVHJlZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuY2hhbmdlVGVtcFBlcmNlbnRhZ2VzID0gdGhpcy5jaGFuZ2VUZW1wUGVyY2VudGFnZXMuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGFkZENvbG9yKHRyZWVEYXRhQXJyLCBncmVlbiwgbGlnaHRHcmVlbiwgeWVsbG93LCBvcmFuZ2UpIHtcbiAgICBsZXQgdG90YWxUaW1lID0gdHJlZURhdGFBcnJbMF0ucmVuZGVyVGltZTtcbiAgICBsZXQgd29ya1RvQmVEb25lID0gW3RyZWVEYXRhQXJyWzBdXTtcbiAgICB3aGlsZSAod29ya1RvQmVEb25lLmxlbmd0aCA+IDApIHtcbiAgICAgIGxldCBwZXJjZW50VGltZSA9IHdvcmtUb0JlRG9uZVswXS5pbmRpdmlkdWFsVGltZSAvIHRvdGFsVGltZTtcbiAgICAgIGlmIChwZXJjZW50VGltZSA8IGdyZWVuKSB7XG4gICAgICAgIHdvcmtUb0JlRG9uZVswXS5ub2RlU3ZnU2hhcGUgPSB7IHNoYXBlOiAnZWxsaXBzZScsIHNoYXBlUHJvcHM6IHsgcng6IDIwLCByeTogMjAsIGZpbGw6ICcjODBiNzRjJyB9IH07XG4gICAgICB9IGVsc2UgaWYgKHBlcmNlbnRUaW1lIDwgbGlnaHRHcmVlbikge1xuICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2ExYzk0ZicgfSB9O1xuICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IHllbGxvdykge1xuICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2U2Y2MzOCcgfSB9O1xuICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IG9yYW5nZSkge1xuICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2Y2OWQyNycgfSB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNlNzRlMmMnIH0gfTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgd29ya1RvQmVEb25lWzBdLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHdvcmtUb0JlRG9uZS5wdXNoKHdvcmtUb0JlRG9uZVswXS5jaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgICB3b3JrVG9CZURvbmUuc2hpZnQoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyZWVEYXRhQXJyO1xuICB9XG5cbiAgLy9kZWVwIGNsb25lIG9mIHRyZWUgZGF0YVxuICBjbG9uZVRyZWUodHJlZURhdGFBcnIpIHtcbiAgICBsZXQgbmV3VHJlZSA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJlZURhdGFBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBuZXdOb2RlID0ge307XG4gICAgICBmb3IgKGxldCBrIGluIHRyZWVEYXRhQXJyW2ldKSB7XG4gICAgICAgIGlmICh0cmVlRGF0YUFycltpXS5oYXNPd25Qcm9wZXJ0eShrKSkge1xuICAgICAgICAgIGlmIChrID09PSAnY2hpbGRyZW4nKSB7XG4gICAgICAgICAgICBuZXdOb2RlW2tdID0gdGhpcy5jbG9uZVRyZWUodHJlZURhdGFBcnJbaV1ba10pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXdOb2RlW2tdID0gdHJlZURhdGFBcnJbaV1ba11cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1RyZWUucHVzaChuZXdOb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1RyZWVcbiAgfVxuXG4gIC8vdGFrZXMgY2xvbmUgb2YgdHJlZSBkYXRlIGluIHN0YXRlIG9mIEFwcCwgdXBkYXRlcyBjb2xvciBiYXNlZCBvbiB1c2VyIGlucHV0IGFuZCB1cGRhdGVzIHRyZWVcbiAgdXBkYXRlVHJlZSgpIHtcbiAgICBsZXQgY2xvbmUgPSB0aGlzLmNsb25lVHJlZSh0aGlzLnByb3BzLnRyZWVEYXRhKTtcbiAgICB0aGlzLmFkZENvbG9yKGNsb25lLCB0aGlzLnN0YXRlLmdyZWVuLCB0aGlzLnN0YXRlLmxpZ2h0R3JlZW4sIHRoaXMuc3RhdGUueWVsbG93LCB0aGlzLnN0YXRlLm9yYW5nZSlcbiAgICB0aGlzLnByb3BzLnVwZGF0ZVRyZWVTdGF0ZShjbG9uZSk7XG5cbiAgfVxuXG4gIGNoYW5nZVRlbXBQZXJjZW50YWdlcyhlKSB7XG4gICAgbGV0IHRlbXAgPSB7fTtcbiAgICB0ZW1wW2UudGFyZ2V0LmlkXSA9IGUudGFyZ2V0LnZhbHVlIC8gMTAwO1xuICAgIHRoaXMuc2V0U3RhdGUodGVtcCk7XG4gICAgY29uc29sZS5sb2codGhpcy5zdGF0ZSk7XG4gIH1cblxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGZvcm0gc3R5bGU9e3sgYm9yZGVyQm90dG9tOiAnMC41cHggc29saWQgI2FiYWJhYicsIGJveFNoYWRvdzogJzAgNHB4IDJweCAtMnB4ICNhYmFiYWInLCBwYWRkaW5nQm90dG9tOiAnNXB4JyB9fT5cbiAgICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogJzk4JScsIGRpc3BsYXk6ICdpbmxpbmUnLCBqdXN0aWZ5Q29udGVudDogJ2xlZnQnIH19PlxuICAgICAgICAgIDxwPk5vZGUgY29sb3JzIGFyZSBkZXRlcm1pbmVkIGJ5IGxvd2VzdCBpbnB1dCBwZXJjZW50YWdlIGFib3ZlIGluZGl2aWR1YWwgcmVuZGVyIHRpbWUgZGl2aWRlZCBieSB0b3RhbCByZW5kZXIgdGltZSBvZiBhcHAuIE5vZGVzIGFyZSBiZSByZWQgb3RoZXJ3aXNlLjwvcD5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1hcm91bmQnLCBwYWRkaW5nOiAnNXB4J319PlxuICAgICAgICAgICAgPHNwYW4+PGlucHV0IHR5cGU9XCJudW1iZXJcIiBzdGVwPVwiMC4xXCIgc3R5bGU9e3sgd2lkdGg6ICc0NXB4JywgcGFkZGluZzogJzNweCcgfX0gdmFsdWU9e3RoaXMuc3RhdGUuZ3JlZW4gKiAxMDB9IHBsYWNlaG9sZGVyPVwicGVyY2VudEZvckdyZWVuXCIgaWQ9J2dyZWVuJyBvbkNoYW5nZT17dGhpcy5jaGFuZ2VUZW1wUGVyY2VudGFnZXN9IC8+JTxici8+PGxhYmVsPkdyZWVuPC9sYWJlbD48L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj48aW5wdXQgdHlwZT1cIm51bWJlclwiIHN0ZXA9XCIwLjFcIiBzdHlsZT17eyB3aWR0aDogJzQ1cHgnLCBwYWRkaW5nOiAnM3B4JyB9fSB2YWx1ZT17dGhpcy5zdGF0ZS5saWdodEdyZWVuICogMTAwfSBwbGFjZWhvbGRlcj1cInBlcmNlbnRGb3JMaWdodEdyZWVuXCIgaWQ9J2xpZ2h0R3JlZW4nIG9uQ2hhbmdlPXt0aGlzLmNoYW5nZVRlbXBQZXJjZW50YWdlc30gLz4lPGJyLz48bGFiZWw+TGlnaHQgR3JlZW48L2xhYmVsPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPjxpbnB1dCB0eXBlPVwibnVtYmVyXCIgc3RlcD1cIjAuMVwiIHN0eWxlPXt7IHdpZHRoOiAnNDVweCcsIHBhZGRpbmc6ICczcHgnIH19IHZhbHVlPXt0aGlzLnN0YXRlLnllbGxvdyAqIDEwMH0gcGxhY2Vob2xkZXI9XCJwZXJjZW50Rm9yWWVsbG93XCIgaWQ9J3llbGxvdycgb25DaGFuZ2U9e3RoaXMuY2hhbmdlVGVtcFBlcmNlbnRhZ2VzfSAvPiU8YnIvPjxsYWJlbD5ZZWxsb3c8L2xhYmVsPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPjxpbnB1dCB0eXBlPVwibnVtYmVyXCIgc3RlcD1cIjAuMVwiIHN0eWxlPXt7IHdpZHRoOiAnNDVweCcsIHBhZGRpbmc6ICczcHgnIH19IHZhbHVlPXt0aGlzLnN0YXRlLm9yYW5nZSAqIDEwMH0gcGxhY2Vob2xkZXI9XCJwZXJjZW50Rm9yT3JhbmdlXCIgaWQ9J29yYW5nZScgb25DaGFuZ2U9e3RoaXMuY2hhbmdlVGVtcFBlcmNlbnRhZ2VzfSAvPiU8YnIvPjxsYWJlbD5PcmFuZ2U8L2xhYmVsPjwvc3Bhbj5cbiAgICAgICAgICAgIDxpbnB1dCBzdHlsZT17e2hlaWdodDogJzQwcHgnLCB3aWR0aDogJzYwcHgnfX0gdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMudXBkYXRlVHJlZX0gdmFsdWU9XCJTdWJtaXRcIj48L2lucHV0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGVyY2VudENvbG9ySW5wdXQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRyZWUgZnJvbSAncmVhY3QtZDMtdHJlZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBQZXJjZW50Q29sb3JJbnB1dCBmcm9tICcuL1BlcmNlbnRDb2xvcklucHV0JztcblxuXG5jb25zdCBPcmllbnRhdGlvbkJ1dHRvblN0eWxlZCA9IHN0eWxlZC5kaXZgXG4tbW96LWJveC1zaGFkb3c6IDNweCA0cHggMHB4IDBweCAjM2RjMjFiO1xuLXdlYmtpdC1ib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcbmJveC1zaGFkb3c6IDNweCA0cHggMHB4IDBweCAjM2RjMjFiO1xuYmFja2dyb3VuZC1jb2xvcjojNDRjNzY3O1xuLW1vei1ib3JkZXItcmFkaXVzOjQycHg7XG4td2Via2l0LWJvcmRlci1yYWRpdXM6NDJweDtcbmJvcmRlci1yYWRpdXM6NDJweDtcbmJvcmRlcjoxcHggc29saWQgIzE4YWIyOTtcbmRpc3BsYXk6IGZsZXg7XG5qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmN1cnNvcjpwb2ludGVyO1xuY29sb3I6I2ZmZmZmZjtcbmZvbnQtZmFtaWx5OiBUcmVidWNoZXQgTVM7XG5mb250LXNpemU6IDExcHg7XG5mb250LXdlaWdodDpib2xkO1xucGFkZGluZzogM3B4IDhweDtcbnRleHQtZGVjb3JhdGlvbjpub25lO1xudGV4dC1zaGFkb3c6MnB4IDFweCAzcHggIzJmNjYyNztcbnRleHQtYWxpZ246IGNlbnRlcjtcbndpZHRoOiAyMCU7XG5tYXJnaW46IDhweDtcblxuJjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZThlNDE7XG59XG5cbiY6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNlOGU0MTtcbiAgYm94LXNoYWRvdzogMCA1cHggIzY2NjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDRweCk7XG59XG5gO1xuXG5cbmNvbnN0IHN2Z1NxdWFyZSA9IHtcbiAgc2hhcGU6ICdyZWN0JyxcbiAgc2hhcGVQcm9wczoge1xuICAgIHdpZHRoOiAyMCxcbiAgICBoZWlnaHQ6IDIwLFxuICAgIHg6IC0xMCxcbiAgICB5OiAtMTAsXG4gICAgZmlsbDogJ2JsdWUnXG4gIH1cbn1cblxuY29uc3Qgc3ZnRWxsaXBzZSA9IHtcbiAgc2hhcGU6ICdlbGxpcHNlJyxcbiAgc2hhcGVQcm9wczoge1xuICAgIHJ4OiAyMCxcbiAgICByeTogMjBcbiAgfVxufVxuXG5cbmNsYXNzIFRyZWVDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLm1vdXNlT3ZlciA9IHRoaXMubW91c2VPdmVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxuICAgIH07XG5cbiAgICB0aGlzLmNoYW5nZU9yaWVudGF0aW9uID0gdGhpcy5jaGFuZ2VPcmllbnRhdGlvbi5iaW5kKHRoaXMpO1xuICB9XG5cbiAgbW91c2VPdmVyKGUpIHtcbiAgICBjb25zdCBzdGF0cyA9IHtcbiAgICAgIG5hbWU6IGUubmFtZSwgdGltZTogZS5yZW5kZXJUaW1lLCBpbmRpdmlkdWFsVGltZTogZS5pbmRpdmlkdWFsVGltZSwgbWVtb2l6ZWRQcm9wczogZS5tZW1vaXplZFByb3BzLCBtZW1vaXplZFN0YXRlOiBlLm1lbW9pemVkU3RhdGUsXG4gICAgfTtcbiAgICBjb25zdCB7IGdyYWJOb2RlU3RhdHMgfSA9IHRoaXMucHJvcHM7XG4gICAgZ3JhYk5vZGVTdGF0cyhzdGF0cyk7XG4gIH1cblxuICBjaGFuZ2VPcmllbnRhdGlvbigpIHtcbiAgICBjb25zdCB7IG9yaWVudGF0aW9uIH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmIChvcmllbnRhdGlvbiA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBvcmllbnRhdGlvbjogJ3ZlcnRpY2FsJyB9KTtcbiAgICB9XG4gIH1cblxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IG9yaWVudGF0aW9uLCBzaGFwZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7IHRyZWVEYXRhIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGlkPVwidHJlZVdyYXBwZXJcIiBzdHlsZT17eyB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICc2MGVtJywgZmxvYXQ6ICdyaWdodCcsIGJvcmRlcjogJzAuNXB4IHNvbGlkICNhYmFiYWInLCBtYXJnaW46ICcxMHB4JywgYm94U2hhZG93OiAnMS41cHggMS41cHggMS41cHggMS41cHggI2FiYWJhYicgfX0+XG4gICAgICAgICAgPFBlcmNlbnRDb2xvcklucHV0IHVwZGF0ZVRyZWVTdGF0ZT17dGhpcy5wcm9wcy51cGRhdGVUcmVlU3RhdGV9IHRyZWVEYXRhPXt0aGlzLnByb3BzLnRyZWVEYXRhfSAvPlxuICAgICAgICAgIDxPcmllbnRhdGlvbkJ1dHRvblN0eWxlZFxuICAgICAgICAgICAgaWQ9eydidXR0b24yJ31cbiAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY2hhbmdlT3JpZW50YXRpb259XG4gICAgICAgICAgICBjb3VudGVyPSdPcmllbnRhdGlvbic+XG4gICAgICAgICAgICBDaGFuZ2UgT3JpZW50YXRpb25cbiAgICAgICAgICA8L09yaWVudGF0aW9uQnV0dG9uU3R5bGVkPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6ICc5OCUnLCBoZWlnaHQ6ICc0NWVtJyB9fT5cblxuICAgICAgICAgICAgPFRyZWVcbiAgICAgICAgICAgICAgdHJhbnNsYXRlPXt7IHg6IDEwMCwgeTogMTAwIH19XG4gICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtvcmllbnRhdGlvbn1cbiAgICAgICAgICAgICAgb25Nb3VzZU92ZXI9e3RoaXMubW91c2VPdmVyfVxuICAgICAgICAgICAgICBub2RlU3ZnU2hhcGU9e3NoYXBlfVxuICAgICAgICAgICAgICBzZXBhcmF0aW9uPXt7IHNpYmxpbmdzOiAuNiwgbm9uU2libGluZ3M6IC42IH19XG4gICAgICAgICAgICAgIGRhdGE9e3RyZWVEYXRhfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgKTtcbiAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IFRyZWVDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuY29uc3QgQnV0dG9uU3R5bGVkID0gc3R5bGVkLmJ1dHRvbmBcbiAgLW1vei1ib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcblx0LXdlYmtpdC1ib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcblx0Ym94LXNoYWRvdzogM3B4IDRweCAwcHggMHB4ICMzZGMyMWI7XG5cdGJhY2tncm91bmQtY29sb3I6IzQ0Yzc2Nztcblx0LW1vei1ib3JkZXItcmFkaXVzOjQycHg7XG5cdC13ZWJraXQtYm9yZGVyLXJhZGl1czo0MnB4O1xuXHRib3JkZXItcmFkaXVzOjQycHg7XG5cdGJvcmRlcjoxcHggc29saWQgIzE4YWIyOTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdGN1cnNvcjpwb2ludGVyO1xuXHRjb2xvcjojZmZmZmZmO1xuXHRmb250LWZhbWlseTogVHJlYnVjaGV0IE1TO1xuXHRmb250LXNpemU6IDI0cHg7XG5cdGZvbnQtd2VpZ2h0OmJvbGQ7XG4gIHBhZGRpbmc6IDE1cHggMjVweDtcblx0dGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gIHRleHQtc2hhZG93OjJweCAxcHggM3B4ICMyZjY2Mjc7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IGF1dG87XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNlOGU0MTtcbiAgfVxuXG4gICY6YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO1xuICAgIGJveC1zaGFkb3c6IDAgNXB4ICM2NjY7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDRweCk7XG4gIH1cblxuICBgO1xuXG5jbGFzcyBCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJ1dHRvblN0eWxlZCBpZD17dGhpcy5wcm9wcy5pZH0gb25DbGljaz17dGhpcy5wcm9wcy5jbGlja2VkfSA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNvdW50ZXJ9XG4gICAgICA8L0J1dHRvblN0eWxlZD5cbiAgICApXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmNvbnN0IFN0YXRzU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgY29sb3I6ICM1OTU5NTk7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDJweCAjYTNhM2EzO1xuICBmb250LXNpemU6IDhweDtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCI7XG4gIG1hcmdpbjogMWVtO1xuICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xuICB3aWR0aDogNDUlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZsb2F0OiBsZWZ0O1xuYDtcblxuXG5jbGFzcyBTdGF0cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgIHN1cGVyKHByb3BzKTtcbiAgIH1cblxuXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFN0YXRzU3R5bGVkPlxuICAgICAgICAgICAgICA8aDE+Q29tcG9uZW50IE5hbWU6PGJyLz57dGhpcy5wcm9wcy5zdGF0cy5uYW1lfTwvaDE+XG4gICAgICAgICAgICAgIDxoMT5Ub3RhbCBSZW5kZXIgVGltZTo8YnIvPnt0aGlzLnByb3BzLnN0YXRzLnRvdGFsVGltZX08L2gxPlxuICAgICAgICAgICAgICA8aDE+SW5kaXZpZHVhbCBSZW5kZXIgVGltZTo8YnIvPnt0aGlzLnByb3BzLnN0YXRzLmluZGl2aWR1YWxUaW1lfTwvaDE+XG4gICAgICAgICAgPC9TdGF0c1N0eWxlZD5cbiAgICAgIClcblxuICAgIH1cbiAgfVxuXG4gIGV4cG9ydCB7IFN0YXRzU3R5bGVkLCBTdGF0cyB9O1xuXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IFJlYWN0SnNvbiBmcm9tICdyZWFjdC1qc29uLXZpZXcnO1xuaW1wb3J0IFRyZWVDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnRzL1RyZWVDb21wb25lbnQuanN4JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9jb21wb25lbnRzL0J1dHRvbic7XG5pbXBvcnQgeyBTdGF0cywgU3RhdHNTdHlsZWQgfSBmcm9tICcuL2NvbXBvbmVudHMvU3RhdHMnO1xuaW1wb3J0IGltYWdlIGZyb20gJy4vYXNzZXRzL1JlYWN0UXVhbnR1bUxvZ28ucG5nJztcblxuY29uc3QgV3JhcHBlclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5jb25zdCBDb250ZW50U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG5gO1xuXG5jb25zdCBTdGF0c1BhbmVsU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBib3JkZXI6IDAuNXB4IHNvbGlkICNhYmFiYWI7XG4gIG1hcmdpbjogMTBweDtcbiAgYm94LXNoYWRvdzogMS41cHggMS41cHggMS41cHggMS41cHggI2FiYWJhYjtcbiAgd2lkdGg6IDM1ZW07XG4gIGhlaWdodDogNjBlbTtcbmA7XG5cbmNvbnN0IFN0YXRzV2luZG93U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDIwZW07XG4gIHdpZHRoOiA5NSU7XG4gIG92ZXJmbG93OiBhdXRvO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4ICNhM2EzYTM7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCI7XG4gIG1hcmdpbjogMWVtO1xuICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xuICBmbG9hdDogbGVmdDtcbmA7XG5cblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgLy8gb3JpZW50YXRpb246ICd2ZXJ0aWNhbCcsXG4gICAgICBub2RlaW5mbzogNSxcbiAgICAgIHN0YXJ0UXVhbnR1bTogZmFsc2UsXG4gICAgICB0cmVlRGF0YToge1xuICAgICAgICBuYW1lOiAnUExFQVNFIFJFRlJFU0ggUEFHRScsXG4gICAgICAgIG5vZGVTdmdTaGFwZTogeyBzaGFwZVByb3BzOiB7IGZpbGw6ICd3aGl0ZScgfSB9LFxuICAgICAgfSxcbiAgICAgIGdyZWVuOiAwLjAwNSxcbiAgICAgIGxpZ2h0R3JlZW46IDAuMDEsXG4gICAgICB5ZWxsb3c6IDAuMDUsXG4gICAgICBvcmFuZ2U6IDAuMSxcbiAgICB9O1xuXG4gICAgdGhpcy51cGRhdGVUcmVlU3RhdGUgPSB0aGlzLnVwZGF0ZVRyZWVTdGF0ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZ3JhYk5vZGVTdGF0cyA9IHRoaXMuZ3JhYk5vZGVTdGF0cy5iaW5kKHRoaXMpO1xuICAgIC8vIHRoaXMuY2hhbmdlT3JpZW50YXRpb24gPSB0aGlzLmNoYW5nZU9yaWVudGF0aW9uLmJpbmQodGhpcyk7XG4gICAgdGhpcy5jbGlja2VkID0gdGhpcy5jbGlja2VkLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGFydFF1YW50dW0gPSB0aGlzLnN0YXJ0UXVhbnR1bS5iaW5kKHRoaXMpO1xuICAgIGNocm9tZS5kZXZ0b29scy5wYW5lbHMuY3JlYXRlKCdSZWFjdCBRdWFudHVtJywgbnVsbCwgJ2RldnRvb2xzLmh0bWwnKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHBvcnQgPSBjaHJvbWUucnVudGltZS5jb25uZWN0KG51bGwsIHsgbmFtZTogJ2RldlRvb2xzJyB9KTtcbiAgICBjb25zdCB7IHRhYklkIH0gPSBjaHJvbWUuZGV2dG9vbHMuaW5zcGVjdGVkV2luZG93O1xuICAgIGxldCB0aW1lb3V0O1xuXG4gICAgZnVuY3Rpb24gcG9zdChtZXNzYWdlKSB7XG4gICAgICBjb25zdCBuZXdNZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgIG5ld01lc3NhZ2UudGFiSWQgPSB0YWJJZDtcbiAgICAgIHBvcnQucG9zdE1lc3NhZ2UobWVzc2FnZSk7XG4gICAgfVxuICAgIHBvc3QoeyBtZXNzYWdlOiAnaW5pdGlhbGl6ZScgfSk7XG4gICAgcG9ydC5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKG1lc3NhZ2UpID0+IHtcbiAgICAgIC8vIGZ1bmN0aW9uIHN1YnRyYWN0cyBjaGlsZHJlbiByZW5kZXIgdGltZSBmcm9tIGl0cyBvd24gcmVuZGVyIHRpbWUgdG8gZ2V0IGluZGl2aWR1YWwgcmVuZGVyIHRpbWVcbiAgICAgIGZ1bmN0aW9uIGFkZEluZGl2aWR1YWxUaW1lKHRyZWVEYXRhQXJyKSB7XG4gICAgICAgIGNvbnN0IHRyZWVEYXRhQXJyQ29weSA9IHRyZWVEYXRhQXJyO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyZWVEYXRhQXJyQ29weS5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIGlmICh0cmVlRGF0YUFyckNvcHlbaV0ubWVtb2l6ZWRQcm9wcykge1xuICAgICAgICAgICAgdHJlZURhdGFBcnJDb3B5W2ldLm1lbW9pemVkUHJvcHMgPSBKU09OLnBhcnNlKHRyZWVEYXRhQXJyQ29weVtpXS5tZW1vaXplZFByb3BzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHRyZWVEYXRhQXJyQ29weVtpXS5yZW5kZXJUaW1lID09PSAwKSB7XG4gICAgICAgICAgICB0cmVlRGF0YUFyckNvcHlbaV0uaW5kaXZpZHVhbFRpbWUgPSAwO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgc3VtQ2hpbGRyZW5UaW1lID0gMDtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdHJlZURhdGFBcnJDb3B5W2ldLmNoaWxkcmVuLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnROb2RlID0gdHJlZURhdGFBcnJDb3B5W2ldLmNoaWxkcmVuW2pdO1xuICAgICAgICAgICAgICBpZiAoY3VycmVudE5vZGUucmVuZGVyVGltZSA9PT0gMCAmJiBjdXJyZW50Tm9kZS5jaGlsZHJlbiA+IDApIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGN1cnJlbnROb2RlLmNoaWxkcmVuLmxlbmd0aDsgayArPSAxKSB7XG4gICAgICAgICAgICAgICAgICBzdW1DaGlsZHJlblRpbWUgKz0gY3VycmVudE5vZGUuY2hpbGRyZW5ba10ucmVuZGVyVGltZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3VtQ2hpbGRyZW5UaW1lICs9IHRyZWVEYXRhQXJyQ29weVtpXS5jaGlsZHJlbltqXS5yZW5kZXJUaW1lO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmVlRGF0YUFyckNvcHlbaV0uaW5kaXZpZHVhbFRpbWUgPSB0cmVlRGF0YUFyckNvcHlbaV0ucmVuZGVyVGltZSAtIHN1bUNoaWxkcmVuVGltZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmVlRGF0YUFyckNvcHkubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICBpZiAodHJlZURhdGFBcnJDb3B5W2ldLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGFkZEluZGl2aWR1YWxUaW1lKHRyZWVEYXRhQXJyQ29weVtpXS5jaGlsZHJlbik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGFkZHMgY29sb3IgYmFzZWQgb24gcmVuZGVyIHRpbWUgb2Ygbm9kZSByZWxhdGl2ZSB0byB0b3RhbCByZW5kZXIgdGltZSBvZiBhcHBcbiAgICAgIGZ1bmN0aW9uIGFkZENvbG9yKHRyZWVEYXRhQXJyLCBncmVlbiwgbGlnaHRHcmVlbiwgeWVsbG93LCBvcmFuZ2UpIHtcbiAgICAgICAgY29uc3QgdG90YWxUaW1lID0gdHJlZURhdGFBcnJbMF0ucmVuZGVyVGltZTtcbiAgICAgICAgY29uc3Qgd29ya1RvQmVEb25lID0gW3RyZWVEYXRhQXJyWzBdXTtcbiAgICAgICAgd2hpbGUgKHdvcmtUb0JlRG9uZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgY29uc3QgcGVyY2VudFRpbWUgPSB3b3JrVG9CZURvbmVbMF0uaW5kaXZpZHVhbFRpbWUgLyB0b3RhbFRpbWU7XG4gICAgICAgICAgaWYgKHBlcmNlbnRUaW1lIDwgZ3JlZW4pIHtcbiAgICAgICAgICAgIHdvcmtUb0JlRG9uZVswXS5ub2RlU3ZnU2hhcGUgPSB7IHNoYXBlOiAnZWxsaXBzZScsIHNoYXBlUHJvcHM6IHsgcng6IDIwLCByeTogMjAsIGZpbGw6ICcjODBiNzRjJyB9IH07XG4gICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IGxpZ2h0R3JlZW4pIHtcbiAgICAgICAgICAgIHdvcmtUb0JlRG9uZVswXS5ub2RlU3ZnU2hhcGUgPSB7IHNoYXBlOiAnZWxsaXBzZScsIHNoYXBlUHJvcHM6IHsgcng6IDIwLCByeTogMjAsIGZpbGw6ICcjYTFjOTRmJyB9IH07XG4gICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IHllbGxvdykge1xuICAgICAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNlNmNjMzgnIH0gfTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHBlcmNlbnRUaW1lIDwgb3JhbmdlKSB7XG4gICAgICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2Y2OWQyNycgfSB9O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2U3NGUyYycgfSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdvcmtUb0JlRG9uZVswXS5jaGlsZHJlbi5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgd29ya1RvQmVEb25lLnB1c2god29ya1RvQmVEb25lWzBdLmNoaWxkcmVuW2ldKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgd29ya1RvQmVEb25lLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyZWVEYXRhQXJyO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB7XG4gICAgICAgIGdyZWVuLCBsaWdodEdyZWVuLCB5ZWxsb3csIG9yYW5nZSxcbiAgICAgIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICBsZXQgdGVtcFRyZWVEYXRhID0gSlNPTi5wYXJzZShtZXNzYWdlLm1lc3NhZ2UpO1xuICAgICAgLy9jb25zb2xlLmxvZygndGVtcFRyZWVEYXRhJywgdGVtcFRyZWVEYXRhKTtcbiAgICAgIHRlbXBUcmVlRGF0YSA9IHRlbXBUcmVlRGF0YVswXS5jaGlsZHJlbjtcbiAgICAgIGFkZEluZGl2aWR1YWxUaW1lKHRlbXBUcmVlRGF0YSk7XG4gICAgICBhZGRDb2xvcih0ZW1wVHJlZURhdGEsIGdyZWVuLCBsaWdodEdyZWVuLCB5ZWxsb3csIG9yYW5nZSk7XG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0ZW1wVHJlZURhdGEnLCB0ZW1wVHJlZURhdGEpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdHJlZURhdGE6IHRlbXBUcmVlRGF0YSB9KTtcbiAgICAgIH0sIDc1MCk7XG4gICAgfSk7XG4gIH1cblxuICBzdGFydFF1YW50dW0oKSB7XG4gICAgY29uc3QgeyB0YWJJZCB9ID0gY2hyb21lLmRldnRvb2xzLmluc3BlY3RlZFdpbmRvdztcbiAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICBuYW1lOiAnc3RhcnRRdWFudHVtJyxcbiAgICAgIHRhcmdldDogJ2NvbnRlbnQnLFxuICAgICAgdGFiSWQsXG4gICAgfSk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHN0YXJ0UXVhbnR1bTogdHJ1ZSxcbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZVRyZWVTdGF0ZSh0cmVlRGF0YUFycikge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0cmVlRGF0YTogdHJlZURhdGFBcnIgfSk7XG4gIH1cblxuICBncmFiTm9kZVN0YXRzKHN0YXRzKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBub2RlaW5mbzoge1xuICAgICAgICB0b3RhbFRpbWU6IHN0YXRzLnRpbWUsIGluZGl2aWR1YWxUaW1lOiBzdGF0cy5pbmRpdmlkdWFsVGltZSwgbmFtZTogc3RhdHMubmFtZSwgbWVtb2l6ZWRQcm9wczogc3RhdHMubWVtb2l6ZWRQcm9wcywgbWVtb2l6ZWRTdGF0ZTogc3RhdHMubWVtb2l6ZWRTdGF0ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBjbGlja2VkKGUpIHtcbiAgICBjb25zdCBjb3VudGVySSA9IGAke2UudGFyZ2V0LmlkfWNvdW50ZXJgO1xuICAgIGNvbnN0IHsgY291bnRlcklkIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGNvdW50ZXIgPSBjb3VudGVySWQgKyAxO1xuICAgIGNvbnN0IHVwZGF0ZUNvdW50ZXIgPSB7fTtcblxuICAgIHVwZGF0ZUNvdW50ZXJbY291bnRlckldID0gY291bnRlcjtcbiAgICB0aGlzLnNldFN0YXRlKHVwZGF0ZUNvdW50ZXIpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIG5vZGVpbmZvLCB0cmVlRGF0YSwgZ3JlZW4sIGxpZ2h0R3JlZW4sIHllbGxvdywgb3JhbmdlLCBvcmllbnRhdGlvbiwgc3RhcnRRdWFudHVtLFxuICAgIH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8V3JhcHBlclN0eWxlZD5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aW1nIHNyYz17aW1hZ2V9IGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vUmVhY3RRdWFudHVtL1JlYWN0UXVhbnR1bVwiIGFsdD1cIlwiIC8+XG5cbiAgICAgICAgICB7XG4gICAgICAgICAgICAoc3RhcnRRdWFudHVtID09PSBmYWxzZSlcbiAgICAgICAgICAgICAgPyAoXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgd2lkdGg6ICcxMDAlJywgYWxpZ25Db250ZW50OiAnY2VudGVyJywgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGlkPVwic3RhcnRRdWFudHVtXCJcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tlZD17dGhpcy5zdGFydFF1YW50dW19XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ZXI9XCJTdGFydCBRdWFudHVtXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgOiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICA8Q29udGVudFN0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgPFN0YXRzUGFuZWxTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFN0YXRzIHN0YXRzPXtub2RlaW5mb30gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8U3RhdHNTdHlsZWQgc3R5bGU9e3sgbWFyZ2luVG9wOiAnLTEwcHgnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkN1cnJlbnQgU3RhdGU6PC9oMT5cbiAgICAgICAgICAgICAgICAgICAgICA8L1N0YXRzU3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICAgIDxTdGF0c1dpbmRvd1N0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSZWFjdEpzb24gc3JjPXtub2RlaW5mby5tZW1vaXplZFN0YXRlfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvU3RhdHNXaW5kb3dTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFN0YXRzU3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgxPlByb3BzOjwvaDE+XG4gICAgICAgICAgICAgICAgICAgICAgPC9TdGF0c1N0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgICA8U3RhdHNXaW5kb3dTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RKc29uIHNyYz17bm9kZWluZm8ubWVtb2l6ZWRQcm9wc30gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L1N0YXRzV2luZG93U3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICA8L1N0YXRzUGFuZWxTdHlsZWQ+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogJzQ1JScsIGhlaWdodDogJzYwZW0nIH19PlxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8UGVyY2VudENvbG9ySW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyZWVEYXRhPXt0cmVlRGF0YX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnRGb3JHcmVlbj17Z3JlZW59XG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50Rm9yTGlnaHRHcmVlbj17bGlnaHRHcmVlbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnRGb3JZZWxsb3c9e3llbGxvd31cbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnRGb3JPcmFuZ2U9e29yYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRyZWVTdGF0ZT17dGhpcy51cGRhdGVUcmVlU3RhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgLz4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgPFRyZWVDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRyZWVTdGF0ZT17dGhpcy51cGRhdGVUcmVlU3RhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17b3JpZW50YXRpb259XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmVlRGF0YT17dHJlZURhdGF9XG4gICAgICAgICAgICAgICAgICAgICAgICBncmFiTm9kZVN0YXRzPXt0aGlzLmdyYWJOb2RlU3RhdHN9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L0NvbnRlbnRTdHlsZWQ+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICB9XG5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L1dyYXBwZXJTdHlsZWQ+XG5cbiAgICApO1xuICB9XG59XG5cblxucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==