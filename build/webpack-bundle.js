!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=52)}([function(e,t,n){"use strict";e.exports=n(21)},function(e,t,n){"use strict";(function(e){var r=n(7),o=n.n(r),a=n(17),i=n.n(a),u=n(0),l=n.n(u),s=n(18),c=n(4),f=n(8),p=(n(2),n(3),n(20)),d=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},v=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},w=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},x=function(e){return"object"===(void 0===e?"undefined":h(e))&&e.constructor===Object},_=Object.freeze([]),E=Object.freeze({});function k(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function C(e){return e&&"string"==typeof e.styledComponentId}var O=void 0!==e&&e.env.SC_ATTR||"data-styled",M="undefined"!=typeof window&&"HTMLElement"in window,T="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1;var j=function(e){function t(n){y(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];var i=w(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#"+n+" for more information. "+(o?"Additional arguments: "+o.join(", "):"")));return w(i)}return g(t,e),t}(Error),P=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,A=function(e){var t=""+(e||""),n=[];return t.replace(P,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,a=e.matchIndex,i=n[r+1];return{componentId:o,cssFromDOM:i?t.slice(a,i.matchIndex):t.slice(a)}})},N=/^\s*\/\/.*$/gm,R=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),D=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),I=[],L=function(e){if(-2===e){var t=I;return I=[],t}},z=i()(function(e){I.push(e)}),F=void 0,U=void 0,B=void 0,q=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(U)&&n.slice(t-U.length,t)!==U?"."+F:e};D.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(U)>0&&(n[0]=n[0].replace(B,q))},z,L]),R.use([z,L]);function V(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(N,""),a=t&&n?n+" "+t+" { "+o+" }":o;return F=r,U=t,B=new RegExp("\\"+U+"\\b","g"),D(n||!t?"":t,a)}var W=function(){return n.nc},H=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},$=function(e,t){e[t]=Object.create(null)},Y=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},K=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},G=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new j(10)},J=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},Q=function(e){return"\n/* sc-component-id: "+e+" */\n"},X=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},Z=function(e,t){return function(n){var r=W();return"<style "+[r&&'nonce="'+r+'"',O+'="'+K(t)+'"','data-styled-version="4.1.3"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},ee=function(e,t){return function(){var n,r=((n={})[O]=K(t),n["data-styled-version"]="4.1.3",n),o=W();return o&&(r.nonce=o),l.a.createElement("style",m({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},te=function(e){return function(){return Object.keys(e)}},ne=function(e){return document.createTextNode(Q(e))},re=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,a=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},i=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=Q(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=m({},e[n]);return t}(r),n=Object.create(null);for(var a in o)n[a]=[o[a][0]];return e(t,n)},css:i,getIds:te(o),hasNameForId:Y(r),insertMarker:a,insertRules:function(e,t,n){a(e)[0]+=t.join(" "),H(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",$(r,e))},sealed:!1,styleTag:null,toElement:ee(i,r),toHTML:Z(i,r)}},oe=function(e,t,n,r,o){if(M&&!n){var a=function(e,t,n){var r=document.createElement("style");r.setAttribute(O,""),r.setAttribute("data-styled-version","4.1.3");var o=W();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new j(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return T?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,a=!1,i=function(t){var o=r[t];return void 0!==o?o:(r[t]=ne(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},u=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new j(5)},css:u,getIds:te(r),hasNameForId:Y(n),insertMarker:i,insertRules:function(e,r,u){for(var l=i(e),s=[],c=r.length,f=0;f<c;f+=1){var p=r[f],d=o;if(d&&-1!==p.indexOf("@import"))s.push(p);else{d=!1;var h=f===c-1?"":" ";l.appendData(""+p+h)}}H(n,e,u),o&&s.length>0&&(a=!0,t().insertRules(e+"-import",s))},removeRules:function(i){var u=r[i];if(void 0!==u){var l=ne(i);e.replaceChild(l,u),r[i]=l,$(n,i),o&&a&&t().removeRules(i+"-import")}},sealed:!1,styleTag:e,toElement:ee(u,n),toHTML:Z(u,n)}}(a,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],a=void 0!==t,i=!1,u=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),$(n,e),r[e])},l=function(){var t=G(e).cssRules,n="";for(var a in r){n+=Q(a);for(var i=r[a],u=X(o,i),l=u-o[i];l<u;l+=1){var s=t[l];void 0!==s&&(n+=s.cssText)}}return n};return{clone:function(){throw new j(5)},css:l,getIds:te(r),hasNameForId:Y(n),insertMarker:u,insertRules:function(r,l,s){for(var c=u(r),f=G(e),p=X(o,c),d=0,h=[],y=l.length,v=0;v<y;v+=1){var m=l[v],g=a;g&&-1!==m.indexOf("@import")?h.push(m):J(f,m,p+d)&&(g=!1,d+=1)}a&&h.length>0&&(i=!0,t().insertRules(r+"-import",h)),o[c]+=d,H(n,r,s)},removeRules:function(u){var l=r[u];if(void 0!==l){var s=o[l];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(G(e),X(o,l)-1,s),o[l]=0,$(n,u),a&&i&&t().removeRules(u+"-import")}},sealed:!1,styleTag:e,toElement:ee(l,n),toHTML:Z(l,n)}}(a,o)}return re()},ae=/\s+/,ie=void 0;ie=M?T?40:1e3:-1;var ue=0,le=void 0,se=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:M?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];y(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},ue+=1,this.id=ue,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!M||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+O+'][data-styled-version="4.1.3"]'),o=r.length;if(!o)return this;for(var a=0;a<o;a+=1){var i=r[a];n||(n=!!i.getAttribute("data-styled-streamed"));for(var u,l=(i.getAttribute(O)||"").trim().split(ae),s=l.length,c=0;c<s;c+=1)u=l[c],this.rehydratedNames[u]=!0;t.push.apply(t,A(i.textContent)),e.push(i)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var a=n[r],i=a.componentId,u=a.cssFromDOM,l=R("",u);e.insertRules(i,l)}for(var s=0,c=t.length;s<c;s+=1){var f=t[s];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ie-f),this.tags.push(p);for(var d=0;d<f;d+=1)this.tagMap[t[d].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];le=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=m({},this.rehydratedNames),t.deferred=m({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ie,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var a=this.getTagForId(e);if(void 0!==this.deferred[e]){var i=this.deferred[e].concat(t);a.insertRules(e,i,n),this.deferred[e]=void 0}else a.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(u.cloneElement)(t.toElement(),{key:r})})},v(e,null,[{key:"master",get:function(){return le||(le=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),ce=function(){function e(t,n){var r=this;y(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new j(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),fe=/([A-Z])/g,pe=/^ms-/;var de=function(e){return null==e||!1===e||""===e},he=function e(t,n){var r=Object.keys(t).filter(function(e){return!de(t[e])}).map(function(n){return x(t[n])?e(t[n],n):n.replace(fe,"-$1").toLowerCase().replace(pe,"-ms-")+": "+(r=n,null==(o=t[n])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in s.a?String(o).trim():o+"px")+";";var r,o}).join(" ");return n?n+" {\n  "+r+"\n}":r};function ye(e,t,n){if(Array.isArray(e)){for(var r,o=[],a=0,i=e.length;a<i;a+=1)null!==(r=ye(e[a],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}if(de(e))return null;if(C(e))return"."+e.styledComponentId;if(k(e)){if(t){var u=!1;try{Object(c.isElement)(new e(t))&&(u=!0)}catch(e){}if(u)throw new j(13,S(e));return ye(e(t),t,n)}return e}return e instanceof ce?n?(e.inject(n),e.getName()):e:x(e)?he(e):e.toString()}function ve(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return k(e)||x(e)?ye(d(_,[e].concat(n))):ye(d(e,n))}function me(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var ge=52,be=function(e){return String.fromCharCode(e+(e>25?39:97))};function we(e){var t="",n=void 0;for(n=e;n>ge;n=Math.floor(n/ge))t=be(n%ge)+t;return be(n%ge)+t}function xe(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!xe(r,t))return!1;if(k(r)&&!C(r))return!1}return!t.some(function(e){return k(e)||function(e){for(var t in e)if(k(e[t]))return!0;return!1}(e)})}var _e,Ee=!1,ke=function(e){return we(me(e))},Se=function(){function e(t,n,r){y(this,e),this.rules=t,this.isStatic=!Ee&&xe(t,n),this.componentId=r,se.master.hasId(r)||se.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(M&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var a=ye(this.rules,e,t),i=ke(this.componentId+a.join(""));return t.hasNameForId(r,i)||t.inject(this.componentId,V(a,"."+i,void 0,r),i),this.lastClassName=i,i},e.generateName=function(e){return ke(e)},e}(),Ce=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Oe=/[[\].#*$><+~=|^:(),"'`-]+/g,Me=/(^-|-$)/g;function Te(e){return e.replace(Oe,"-").replace(Me,"")}function je(e){return"string"==typeof e&&!0}var Pe={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Ae={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Ne=((_e={})[c.ForwardRef]={$$typeof:!0,render:!0},_e),Re=Object.defineProperty,De=Object.getOwnPropertyNames,Ie=Object.getOwnPropertySymbols,Le=void 0===Ie?function(){return[]}:Ie,ze=Object.getOwnPropertyDescriptor,Fe=Object.getPrototypeOf,Ue=Object.prototype,Be=Array.prototype;function qe(e,t,n){if("string"!=typeof t){var r=Fe(t);r&&r!==Ue&&qe(e,r,n);for(var o=Be.concat(De(t),Le(t)),a=Ne[e.$$typeof]||Pe,i=Ne[t.$$typeof]||Pe,u=o.length,l=void 0,s=void 0;u--;)if(s=o[u],!(Ae[s]||n&&n[s]||i&&i[s]||a&&a[s])&&(l=ze(t,s)))try{Re(e,s,l)}catch(e){}return e}return e}var Ve=Object(u.createContext)(),We=Ve.Consumer,He=(function(e){function t(n){y(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}g(t,e),t.prototype.render=function(){return this.props.children?l.a.createElement(Ve.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return l.a.createElement(Ve.Provider,{value:t},l.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(k(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":h(e)))throw new j(8);return m({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(u.Component),function(){function e(){y(this,e),this.masterSheet=se.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new j(2);return l.a.createElement(Ye,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new j(3)}}(),Object(u.createContext)()),$e=He.Consumer,Ye=function(e){function t(n){y(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return g(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new se(t);throw new j(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return l.a.createElement(He.Provider,{value:this.getContext(n,r)},t)},t}(u.Component),Ke=(new Set,{});var Ge=function(e){function t(){y(this,t);var n=w(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return g(t,e),t.prototype.render=function(){return l.a.createElement($e,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:se.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():l.a.createElement(We,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),a=t.styledComponentId,i=t.target,l=void 0;l=n.isStatic?this.generateAndInjectStyles(E,this.props):void 0!==e?this.generateAndInjectStyles(Ce(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||E,this.props);var s=this.props.as||this.attrs.as||i,c=je(s),f={},d=m({},this.attrs,this.props),h=void 0;for(h in d)"forwardedComponent"!==h&&"as"!==h&&("forwardedRef"===h?f.ref=d[h]:c&&!Object(p.a)(h)||(f[h]=d[h]));return this.props.style&&this.attrs.style&&(f.style=m({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(o,this.props.className,a,this.attrs.className,l).filter(Boolean).join(" "),Object(u.createElement)(s,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=m({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,a=!1,i=void 0,u=void 0;for(u in k(n)&&(n=n(o),a=!0),n)i=n[u],a||!k(i)||(t=i)&&t.prototype&&t.prototype.isReactComponent||C(i)||(i=i(o)),r.attrs[u]=i,o[u]=i}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(E,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(u.Component);function Je(e,t,n){var r=C(e),o=!je(e),a=t.displayName,i=void 0===a?function(e){return je(e)?"styled."+e:"Styled("+S(e)+")"}(e):a,u=t.componentId,s=void 0===u?function(e,t,n){var r="string"!=typeof t?"sc":Te(t),o=(Ke[r]||0)+1;Ke[r]=o;var a=r+"-"+e.generateName(r+o);return n?n+"-"+a:a}(Se,t.displayName,t.parentComponentId):u,c=t.ParentComponent,f=void 0===c?Ge:c,p=t.attrs,d=void 0===p?_:p,h=t.displayName&&t.componentId?Te(t.displayName)+"-"+t.componentId:t.componentId||s,y=r&&e.attrs?Array.prototype.concat(e.attrs,d).filter(Boolean):d,v=new Se(r?e.componentStyle.rules.concat(n):n,y,h),g=l.a.forwardRef(function(e,t){return l.a.createElement(f,m({},e,{forwardedComponent:g,forwardedRef:t}))});return g.attrs=y,g.componentStyle=v,g.displayName=i,g.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):_,g.styledComponentId=h,g.target=r?e.target:e,g.withComponent=function(e){var r=t.componentId,o=b(t,["componentId"]),a=r&&r+"-"+(je(e)?e:Te(S(e)));return Je(e,m({},o,{attrs:y,componentId:a,ParentComponent:f}),n)},g.toString=function(){return"."+g.styledComponentId},o&&qe(g,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),g}var Qe=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;if(!Object(c.isValidElementType)(n))throw new j(1,String(n));var o=function(){return t(n,r,ve.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,m({},r,o))},o.attrs=function(o){return e(t,n,m({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Je,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Qe[e]=Qe(e)});!function(){function e(t,n){y(this,e),this.rules=t,this.componentId=n,this.isStatic=xe(t,_),se.master.hasId(n)||se.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=V(ye(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();M&&(window.scCGSHMRCache={});t.a=Qe}).call(this,n(50))},function(e,t,n){e.exports=n(25)()},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(22)},function(e,t,n){"use strict";e.exports=n(51)},function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){var r;"undefined"!=typeof self&&self,e.exports=(r=n(0),function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=60)}([function(e,t){e.exports=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e,t,n){return e||console.error("theme has not been set"),s(e)(t,n)};var o=n(64),a=n(65),i=function(e){return e&&e.__esModule?e:{default:e}}(a),u=n(66),l=function(e){var t=function(e){return{backgroundColor:e.base00,ellipsisColor:e.base09,braceColor:e.base07,expandedIcon:e.base0D,collapsedIcon:e.base0E,keyColor:e.base07,arrayKeyColor:e.base0C,objectSize:e.base04,copyToClipboard:e.base0F,copyToClipboardCheck:e.base0D,objectBorder:e.base02,dataTypes:{boolean:e.base0E,date:e.base0D,float:e.base0B,function:e.base0D,integer:e.base0F,string:e.base09,nan:e.base08,null:e.base0A,undefined:e.base05,regexp:e.base0A,background:e.base02},editVariable:{editIcon:e.base0E,cancelIcon:e.base09,removeIcon:e.base09,addIcon:e.base0E,checkIcon:e.base0E,background:e.base01,color:e.base0A,border:e.base07},addKeyModal:{background:e.base05,border:e.base04,color:e.base0A,labelColor:e.base01},validationFailure:{background:e.base09,iconColor:e.base01,fontColor:e.base01}}}(e);return{"app-container":{fontFamily:i.default.globalFontFamily,cursor:i.default.globalCursor,backgroundColor:t.backgroundColor,position:"relative"},ellipsis:{display:"inline-block",color:t.ellipsisColor,fontSize:i.default.ellipsisFontSize,lineHeight:i.default.ellipsisLineHeight,cursor:i.default.ellipsisCursor},"brace-row":{display:"inline-block",cursor:"pointer"},brace:{display:"inline-block",cursor:i.default.braceCursor,fontWeight:i.default.braceFontWeight,color:t.braceColor},"expanded-icon":{color:t.expandedIcon},"collapsed-icon":{color:t.collapsedIcon},colon:{display:"inline-block",margin:i.default.keyMargin,color:t.keyColor,verticalAlign:"top"},objectKeyVal:function(e,n){return{style:r({paddingTop:i.default.keyValPaddingTop,paddingRight:i.default.keyValPaddingRight,paddingBottom:i.default.keyValPaddingBottom,borderLeft:i.default.keyValBorderLeft+" "+t.objectBorder,":hover":{paddingLeft:n.paddingLeft-1+"px",borderLeft:i.default.keyValBorderHover+" "+t.objectBorder}},n)}},"object-key-val-no-border":{padding:i.default.keyValPadding},"pushed-content":{marginLeft:i.default.pushedContentMarginLeft},variableValue:function(e,t){return{style:r({display:"inline-block",paddingRight:i.default.variableValuePaddingRight,position:"relative"},t)}},"object-name":{display:"inline-block",color:t.keyColor,letterSpacing:i.default.keyLetterSpacing,fontStyle:i.default.keyFontStyle,verticalAlign:i.default.keyVerticalAlign,opacity:i.default.keyOpacity,":hover":{opacity:i.default.keyOpacityHover}},"array-key":{display:"inline-block",color:t.arrayKeyColor,letterSpacing:i.default.keyLetterSpacing,fontStyle:i.default.keyFontStyle,verticalAlign:i.default.keyVerticalAlign,opacity:i.default.keyOpacity,":hover":{opacity:i.default.keyOpacityHover}},"object-size":{color:t.objectSize,borderRadius:i.default.objectSizeBorderRadius,fontStyle:i.default.objectSizeFontStyle,margin:i.default.objectSizeMargin,cursor:"default"},"data-type-label":{fontSize:i.default.dataTypeFontSize,marginRight:i.default.dataTypeMarginRight,opacity:i.default.datatypeOpacity},boolean:{display:"inline-block",color:t.dataTypes.boolean},date:{display:"inline-block",color:t.dataTypes.date},"date-value":{marginLeft:i.default.dateValueMarginLeft},float:{display:"inline-block",color:t.dataTypes.float},function:{display:"inline-block",color:t.dataTypes.function,cursor:"pointer",whiteSpace:"pre-line"},"function-value":{fontStyle:"italic"},integer:{display:"inline-block",color:t.dataTypes.integer},string:{display:"inline-block",color:t.dataTypes.string},nan:{display:"inline-block",color:t.dataTypes.nan,fontSize:i.default.nanFontSize,fontWeight:i.default.nanFontWeight,backgroundColor:t.dataTypes.background,padding:i.default.nanPadding,borderRadius:i.default.nanBorderRadius},null:{display:"inline-block",color:t.dataTypes.null,fontSize:i.default.nullFontSize,fontWeight:i.default.nullFontWeight,backgroundColor:t.dataTypes.background,padding:i.default.nullPadding,borderRadius:i.default.nullBorderRadius},undefined:{display:"inline-block",color:t.dataTypes.undefined,fontSize:i.default.undefinedFontSize,padding:i.default.undefinedPadding,borderRadius:i.default.undefinedBorderRadius,backgroundColor:t.dataTypes.background},regexp:{display:"inline-block",color:t.dataTypes.regexp},"copy-to-clipboard":{cursor:i.default.clipboardCursor},"copy-icon":{color:t.copyToClipboard,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight,verticalAlign:"top"},"copy-icon-copied":{color:t.copyToClipboardCheck,marginLeft:i.default.clipboardCheckMarginLeft},"array-group-meta-data":{display:"inline-block",padding:i.default.arrayGroupMetaPadding},"object-meta-data":{display:"inline-block",padding:i.default.metaDataPadding},"icon-container":{display:"inline-block",width:i.default.iconContainerWidth},tooltip:{padding:i.default.tooltipPadding},removeVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.removeIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},addVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.addIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},editVarIcon:{verticalAlign:"top",display:"inline-block",color:t.editVariable.editIcon,cursor:i.default.iconCursor,fontSize:i.default.iconFontSize,marginRight:i.default.iconMarginRight},"edit-icon-container":{display:"inline-block",verticalAlign:"top"},"check-icon":{display:"inline-block",cursor:i.default.iconCursor,color:t.editVariable.checkIcon,fontSize:i.default.iconFontSize,paddingRight:i.default.iconPaddingRight},"cancel-icon":{display:"inline-block",cursor:i.default.iconCursor,color:t.editVariable.cancelIcon,fontSize:i.default.iconFontSize,paddingRight:i.default.iconPaddingRight},"edit-input":{display:"inline-block",minHeight:i.default.editInputHeight,minWidth:i.default.editInputMinWidth,borderRadius:i.default.editInputBorderRadius,backgroundColor:t.editVariable.background,color:t.editVariable.color,padding:i.default.editInputPadding,marginRight:i.default.editInputMarginRight,fontFamily:i.default.editInputFontFamily},"detected-row":{paddingTop:i.default.detectedRowPaddingTop},"key-modal-request":{position:i.default.addKeyCoverPosition,top:i.default.addKeyCoverPositionPx,left:i.default.addKeyCoverPositionPx,right:i.default.addKeyCoverPositionPx,bottom:i.default.addKeyCoverPositionPx,backgroundColor:i.default.addKeyCoverBackground},"key-modal":{width:i.default.addKeyModalWidth,backgroundColor:t.addKeyModal.background,marginLeft:i.default.addKeyModalMargin,marginRight:i.default.addKeyModalMargin,padding:i.default.addKeyModalPadding,borderRadius:i.default.addKeyModalRadius,marginTop:"15px",position:"relative"},"key-modal-label":{color:t.addKeyModal.labelColor,marginLeft:"2px",marginBottom:"5px",fontSize:"11px"},"key-modal-input-container":{overflow:"hidden"},"key-modal-input":{width:"100%",padding:"3px 6px",fontFamily:"monospace",color:t.addKeyModal.color,border:"none",boxSizing:"border-box",borderRadius:"2px"},"key-modal-cancel":{backgroundColor:t.editVariable.removeIcon,position:"absolute",top:"0px",right:"0px",borderRadius:"0px 3px 0px 3px",cursor:"pointer"},"key-modal-cancel-icon":{color:t.addKeyModal.labelColor,fontSize:i.default.iconFontSize,transform:"rotate(45deg)"},"key-modal-submit":{color:t.editVariable.addIcon,fontSize:i.default.iconFontSize,position:"absolute",right:"2px",top:"3px",cursor:"pointer"},"function-ellipsis":{display:"inline-block",color:t.ellipsisColor,fontSize:i.default.ellipsisFontSize,lineHeight:i.default.ellipsisLineHeight,cursor:i.default.ellipsisCursor},"validation-failure":{float:"right",padding:"3px 6px",borderRadius:"2px",cursor:"pointer",color:t.validationFailure.fontColor,backgroundColor:t.validationFailure.background},"validation-failure-label":{marginRight:"6px"},"validation-failure-clear":{position:"relative",verticalAlign:"top",cursor:"pointer",color:t.validationFailure.iconColor,fontSize:i.default.iconFontSize,transform:"rotate(45deg)"}}},s=function(e){var t=o.rjv_default;return!1!==e&&"none"!==e||(t=o.rjv_grey),(0,u.createStyling)(l,{defaultBase16:t})(e)}},function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(32)("wks"),o=n(23),a=n(5).Symbol,i="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=i&&a[e]||(i?a:o)("Symbol."+e))}).store=r},function(e,t,n){"use strict";function r(e){var t=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}(e);return"number"===t&&(t=isNaN(e)?"nan":(0|e)!=e?"float":"integer"),t}Object.defineProperty(t,"__esModule",{value:!0}),t.toType=r,t.isTheme=function(e){var t=["base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F"];if("object"===r(e)){for(var n=0;n<t.length;n++)if(!(t[n]in e))return!1;return!0}return!1}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=(e.rjvId,e.type_name),n=e.displayDataTypes,r=e.theme;return n?u.default.createElement("span",o({className:"data-type-label"},(0,s.default)(r,"data-type-label")),t):null}}]),t}(u.default.PureComponent);t.default=c},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(9),o=n(22);e.exports=n(10)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(16),o=n(44),a=n(29),i=Object.defineProperty;t.f=n(10)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),o)try{return i(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){e.exports=!n(11)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(49),o=n(28);e.exports=function(e){return r(o(e))}},function(e,t,n){"use strict";function r(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(161),u=n(14),l=function(e){return e&&e.__esModule?e:{default:e}}(u),s=n(4),c=function(e){function t(){var e,n,i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,l=Array(u),c=0;c<u;c++)l[c]=arguments[c];return n=i=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),i.objects={},i.set=function(e,t,n,r){void 0===i.objects[e]&&(i.objects[e]={}),void 0===i.objects[e][t]&&(i.objects[e][t]={}),i.objects[e][t][n]=r},i.get=function(e,t,n,r){return void 0===i.objects[e]||void 0===i.objects[e][t]||null==i.objects[e][t][n]?r:i.objects[e][t][n]},i.handleAction=function(e){var t=e.rjvId,n=e.data;switch(e.name){case"RESET":i.emit("reset-"+t);break;case"VARIABLE_UPDATED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-edited"})),i.emit("variable-update-"+t);break;case"VARIABLE_REMOVED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-removed"})),i.emit("variable-update-"+t);break;case"VARIABLE_ADDED":e.data.updated_src=i.updateSrc(t,n),i.set(t,"action","variable-update",a({},n,{type:"variable-added"})),i.emit("variable-update-"+t);break;case"ADD_VARIABLE_KEY_REQUEST":i.set(t,"action","new-key-request",n),i.emit("add-key-request-"+t)}},i.updateSrc=function(e,t){var n=t.name,o=t.namespace,a=t.new_value,u=(t.existing_value,t.variable_removed);o.shift();var l=i.get(e,"global","src"),c=i.deepCopy(l,[].concat(r(o))),f=c,p=!0,d=!1,h=void 0;try{for(var y,v=o[Symbol.iterator]();!(p=(y=v.next()).done);p=!0)f=f[y.value]}catch(e){d=!0,h=e}finally{try{!p&&v.return&&v.return()}finally{if(d)throw h}}return u?"array"==(0,s.toType)(f)?f.splice(n,1):delete f[n]:null!==n?f[n]=a:c=a,i.set(e,"global","src",c),c},i.deepCopy=function(e,t){var n=(0,s.toType)(e),o=void 0,u=t.shift();return"array"==n?o=[].concat(r(e)):"object"==n&&(o=a({},e)),void 0!==u&&(o[u]=i.deepCopy(e[u],t)),o},o(i,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(i.EventEmitter),f=new c;l.default.register(f.handleAction.bind(f)),t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(162),o=new r.Dispatcher;t.default=o},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function u(e){return e||(e={}),{style:l({verticalAlign:"middle"},e,{color:e.color?e.color:p,height:"1em",width:"1em"})}}Object.defineProperty(t,"__esModule",{value:!0}),t.CheckCircle=t.Edit=t.Add=t.AddCircle=t.RemoveCircle=t.Clippy=t.ArrowDown=t.ArrowRight=t.SquarePlus=t.SquareMinus=t.CirclePlus=t.CircleMinus=void 0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(0),f=function(e){return e&&e.__esModule?e:{default:e}}(c),p="#000000";t.CircleMinus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 24 24",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("path",{d:"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7"})))}}]),t}(f.default.PureComponent),t.CirclePlus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 24 24",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("path",{d:"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z"})))}}]),t}(f.default.PureComponent),t.SquareMinus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]),o=u(t).style;return f.default.createElement("span",n,f.default.createElement("svg",{fill:o.color,width:o.height,height:o.width,style:o,viewBox:"0 0 1792 1792"},f.default.createElement("path",{d:"M1344 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"})))}}]),t}(f.default.PureComponent),t.SquarePlus=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]),o=u(t).style;return f.default.createElement("span",n,f.default.createElement("svg",{fill:o.color,width:o.height,height:o.width,style:o,viewBox:"0 0 1792 1792"},f.default.createElement("path",{d:"M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"})))}}]),t}(f.default.PureComponent),t.ArrowRight=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",{style:l({},u(t).style,{paddingLeft:"2px",verticalAlign:"top"}),viewBox:"0 0 15 15",fill:"currentColor"},f.default.createElement("path",{d:"M0 14l6-6-6-6z"})))}}]),t}(f.default.PureComponent),t.ArrowDown=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",{style:l({},u(t).style,{paddingLeft:"2px",verticalAlign:"top"}),viewBox:"0 0 15 15",fill:"currentColor"},f.default.createElement("path",{d:"M0 5l6 6 6-6z"})))}}]),t}(f.default.PureComponent),t.Clippy=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m30 35h-25v-22.5h25v7.5h2.5v-12.5c0-1.4-1.1-2.5-2.5-2.5h-7.5c0-2.8-2.2-5-5-5s-5 2.2-5 5h-7.5c-1.4 0-2.5 1.1-2.5 2.5v27.5c0 1.4 1.1 2.5 2.5 2.5h25c1.4 0 2.5-1.1 2.5-2.5v-5h-2.5v5z m-20-27.5h2.5s2.5-1.1 2.5-2.5 1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5 1.3 2.5 2.5 2.5h2.5s2.5 1.1 2.5 2.5h-20c0-1.5 1.1-2.5 2.5-2.5z m-2.5 20h5v-2.5h-5v2.5z m17.5-5v-5l-10 7.5 10 7.5v-5h12.5v-5h-12.5z m-17.5 10h7.5v-2.5h-7.5v2.5z m12.5-17.5h-12.5v2.5h12.5v-2.5z m-7.5 5h-5v2.5h5v-2.5z"}))))}}]),t}(f.default.PureComponent),t.RemoveCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m28.6 25q0-0.5-0.4-1l-4-4 4-4q0.4-0.5 0.4-1 0-0.6-0.4-1.1l-2-2q-0.4-0.4-1-0.4-0.6 0-1 0.4l-4.1 4.1-4-4.1q-0.4-0.4-1-0.4-0.6 0-1 0.4l-2 2q-0.5 0.5-0.5 1.1 0 0.5 0.5 1l4 4-4 4q-0.5 0.5-0.5 1 0 0.7 0.5 1.1l2 2q0.4 0.4 1 0.4 0.6 0 1-0.4l4-4.1 4.1 4.1q0.4 0.4 1 0.4 0.6 0 1-0.4l2-2q0.4-0.4 0.4-1z m8.7-5q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent),t.AddCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m30.1 21.4v-2.8q0-0.6-0.4-1t-1-0.5h-5.7v-5.7q0-0.6-0.4-1t-1-0.4h-2.9q-0.6 0-1 0.4t-0.4 1v5.7h-5.7q-0.6 0-1 0.5t-0.5 1v2.8q0 0.6 0.5 1t1 0.5h5.7v5.7q0 0.5 0.4 1t1 0.4h2.9q0.6 0 1-0.4t0.4-1v-5.7h5.7q0.6 0 1-0.5t0.4-1z m7.2-1.4q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent),t.Add=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z"}))))}}]),t}(f.default.PureComponent),t.Edit=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m19.8 26.4l2.6-2.6-3.4-3.4-2.6 2.6v1.3h2.2v2.1h1.2z m9.8-16q-0.3-0.4-0.7 0l-7.8 7.8q-0.4 0.4 0 0.7t0.7 0l7.8-7.8q0.4-0.4 0-0.7z m1.8 13.2v4.3q0 2.6-1.9 4.5t-4.5 1.9h-18.6q-2.6 0-4.5-1.9t-1.9-4.5v-18.6q0-2.7 1.9-4.6t4.5-1.8h18.6q1.4 0 2.6 0.5 0.3 0.2 0.4 0.5 0.1 0.4-0.2 0.7l-1.1 1.1q-0.3 0.3-0.7 0.1-0.5-0.1-1-0.1h-18.6q-1.4 0-2.5 1.1t-1 2.5v18.6q0 1.4 1 2.5t2.5 1h18.6q1.5 0 2.5-1t1.1-2.5v-2.9q0-0.2 0.2-0.4l1.4-1.5q0.3-0.3 0.8-0.1t0.4 0.6z m-2.1-16.5l6.4 6.5-15 15h-6.4v-6.5z m9.9 3l-2.1 2-6.4-6.4 2.1-2q0.6-0.7 1.5-0.7t1.5 0.7l3.4 3.4q0.6 0.6 0.6 1.5t-0.6 1.5z"}))))}}]),t}(f.default.PureComponent),t.CheckCircle=function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.style,n=r(e,["style"]);return f.default.createElement("span",n,f.default.createElement("svg",l({},u(t),{viewBox:"0 0 40 40",fill:"currentColor",preserveAspectRatio:"xMidYMid meet"}),f.default.createElement("g",null,f.default.createElement("path",{d:"m31.7 16.4q0-0.6-0.4-1l-2.1-2.1q-0.4-0.4-1-0.4t-1 0.4l-9.1 9.1-5-5q-0.5-0.4-1-0.4t-1 0.4l-2.1 2q-0.4 0.4-0.4 1 0 0.6 0.4 1l8.1 8.1q0.4 0.4 1 0.4 0.6 0 1-0.4l12.2-12.1q0.4-0.4 0.4-1z m5.6 3.6q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z"}))))}}]),t}(f.default.PureComponent)},function(e,t,n){var r=n(17);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){e.exports={}},function(e,t,n){var r=n(48),o=n(33);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){e.exports=!0},function(e,t,n){var r=n(5),o=n(2),a=n(71),i=n(8),u=n(7),l=function(e,t,n){var s,c,f,p=e&l.F,d=e&l.G,h=e&l.S,y=e&l.P,v=e&l.B,m=e&l.W,g=d?o:o[t]||(o[t]={}),b=g.prototype,w=d?r:h?r[t]:(r[t]||{}).prototype;for(s in d&&(n=t),n)(c=!p&&w&&void 0!==w[s])&&u(g,s)||(f=c?w[s]:n[s],g[s]=d&&"function"!=typeof w[s]?n[s]:v&&c?a(f,r):m&&w[s]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):y&&"function"==typeof f?a(Function.call,f):f,y&&((g.virtual||(g.virtual={}))[s]=f,e&l.R&&b&&!b[s]&&i(b,s,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(41),c=n(4),f=n(42),p=n(171),d=r(p),h=n(56),y=r(h),v=n(57),m=r(v),g=n(58),b=r(g),w=n(13),x=r(w),_=n(59),E=n(1),k=r(E),S=function(e){function t(e){o(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));C.call(n);var r=t.getState(e);return n.state=a({},r,{prevProps:{}}),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"getBraceStart",value:function(e,t){var n=this,r=this.props,o=r.src,i=r.theme,u=r.iconStyle;if("array_group"===r.parent_type)return l.default.createElement("span",null,l.default.createElement("span",(0,k.default)(i,"brace"),"array"===e?"[":"{"),t?this.getObjectMetaData(o):null);var s=t?_.ExpandedIcon:_.CollapsedIcon;return l.default.createElement("span",null,l.default.createElement("span",a({onClick:function(e){n.toggleCollapsed()}},(0,k.default)(i,"brace-row")),l.default.createElement("div",a({className:"icon-container"},(0,k.default)(i,"icon-container")),l.default.createElement(s,{theme:i,iconStyle:u})),l.default.createElement(b.default,this.props),l.default.createElement("span",(0,k.default)(i,"brace"),"array"===e?"[":"{")),t?this.getObjectMetaData(o):null)}},{key:"render",value:function(){var e=this.props,t=e.depth,n=e.src,r=(e.namespace,e.name,e.type,e.parent_type),o=e.theme,i=e.jsvRoot,u=e.iconStyle,s=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["depth","src","namespace","name","type","parent_type","theme","jsvRoot","iconStyle"]),c=this.state,f=c.object_type,p=c.expanded,d={};return i||"array_group"===r?"array_group"===r&&(d.borderLeft=0,d.display="inline"):d.paddingLeft=5*this.props.indentWidth,l.default.createElement("div",a({className:"object-key-val"},(0,k.default)(o,i?"jsv-root":"objectKeyVal",d)),this.getBraceStart(f,p),p?this.getObjectContent(t,n,a({theme:o,iconStyle:u},s)):this.getEllipsis(),l.default.createElement("span",{className:"brace-row"},l.default.createElement("span",{style:a({},(0,k.default)(o,"brace").style,{paddingLeft:p?"3px":"0px"})},"array"===f?"]":"}"),p?null:this.getObjectMetaData(n)))}}],[{key:"getDerivedStateFromProps",value:function(e,n){var r=n.prevProps;if(e.src!==r.src||e.collapsed!==r.collapsed||e.name!==r.name||e.namespace!==r.namespace||e.rjvId!==r.rjvId){var o=t.getState(e);return a({},o,{prevProps:e})}return null}}]),t}(l.default.PureComponent);S.getState=function(e){var t=Object.keys(e.src).length,n=(!1===e.collapsed||!0!==e.collapsed&&e.collapsed>e.depth)&&(!e.shouldCollapse||!1===e.shouldCollapse({name:e.name,src:e.src,type:(0,c.toType)(e.src),namespace:e.namespace}))&&0!==t;return{expanded:x.default.get(e.rjvId,e.namespace,"expanded",n),object_type:"array"===e.type?"array":"object",parent_type:"array"===e.type?"array":"object",size:t}};var C=function(){var e=this;this.toggleCollapsed=function(){e.setState({expanded:!e.state.expanded},function(){x.default.set(e.props.rjvId,e.props.namespace,"expanded",e.state.expanded)})},this.getObjectContent=function(t,n,r){return l.default.createElement("div",{className:"pushed-content object-container"},l.default.createElement("div",a({className:"object-content"},(0,k.default)(e.props.theme,"pushed-content")),e.renderObjectContents(n,r)))},this.getEllipsis=function(){return 0===e.state.size?null:l.default.createElement("div",a({},(0,k.default)(e.props.theme,"ellipsis"),{className:"node-ellipsis",onClick:e.toggleCollapsed}),"...")},this.getObjectMetaData=function(t){var n=e.props,r=(n.rjvId,n.theme,e.state.size);return l.default.createElement(y.default,a({size:r},e.props))},this.renderObjectContents=function(t,n){var r=e.props,o=r.depth,i=r.parent_type,u=r.index_offset,s=r.groupArraysAfterLength,c=r.namespace,p=e.state.object_type,h=(n.theme,[]),y=void 0,v=Object.keys(t||{});return e.props.sortKeys&&(v=v.sort()),v.forEach(function(r){if(y=new O(r,t[r]),"array_group"===i&&u&&(y.name=parseInt(y.name)+u),t.hasOwnProperty(r))if("object"===y.type)h.push(l.default.createElement(f.JsonObject,a({key:y.name,depth:o+1,name:y.name,src:y.value,namespace:c.concat(y.name),parent_type:p},n)));else if("array"===y.type){var v=f.JsonObject;s&&y.value.length>s&&(v=m.default),h.push(l.default.createElement(v,a({key:y.name,depth:o+1,name:y.name,src:y.value,namespace:c.concat(y.name),type:"array",parent_type:p},n)))}else h.push(l.default.createElement(d.default,a({key:y.name+"_"+c,variable:y,singleIndent:5,namespace:c,type:e.props.type},n)))}),h}},O=function e(t,n){o(this,e),this.name=t,this.value=n,this.type=(0,c.toType)(n)};(0,s.polyfill)(S),t.default=S},function(e,t,n){"use strict";var r=n(70)(!0);n(43)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(17);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(32)("keys"),o=n(23);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var r=n(2),o=n(5),a=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(20)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(9).f,o=n(7),a=n(3)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,a)&&r(e,a,{configurable:!0,value:t})}},function(e,t,n){var r=n(28);e.exports=function(e){return Object(r(e))}},function(e,t,n){n(80);for(var r=n(5),o=n(8),a=n(18),i=n(3)("toStringTag"),u="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),l=0;l<u.length;l++){var s=u[l],c=r[s],f=c&&c.prototype;f&&!f[i]&&o(f,i,s),a[s]=a.Array}},function(e,t,n){t.f=n(3)},function(e,t,n){var r=n(5),o=n(2),a=n(20),i=n(37),u=n(9).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=a?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||u(t,e,{value:i.f(e)})}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t){e.exports=function(e,t,n){return Math.min(Math.max(e,t),n)}},function(e,t,n){"use strict";function r(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=e&&this.setState(e)}function o(e){this.setState(function(t){var n=this.constructor.getDerivedStateFromProps(e,t);return null!=n?n:null}.bind(this))}function a(e,t){try{var n=this.props,r=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function i(e){var t=e.prototype;if(!t||!t.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof e.getDerivedStateFromProps&&"function"!=typeof t.getSnapshotBeforeUpdate)return e;var n=null,i=null,u=null;if("function"==typeof t.componentWillMount?n="componentWillMount":"function"==typeof t.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof t.componentWillReceiveProps?i="componentWillReceiveProps":"function"==typeof t.UNSAFE_componentWillReceiveProps&&(i="UNSAFE_componentWillReceiveProps"),"function"==typeof t.componentWillUpdate?u="componentWillUpdate":"function"==typeof t.UNSAFE_componentWillUpdate&&(u="UNSAFE_componentWillUpdate"),null!==n||null!==i||null!==u){var l=e.displayName||e.name,s="function"==typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+l+" uses "+s+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==i?"\n  "+i:"")+(null!==u?"\n  "+u:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof e.getDerivedStateFromProps&&(t.componentWillMount=r,t.componentWillReceiveProps=o),"function"==typeof t.getSnapshotBeforeUpdate){if("function"!=typeof t.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=a;var c=t.componentDidUpdate;t.componentDidUpdate=function(e,t,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;c.call(this,e,t,r)}}return e}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"polyfill",function(){return i}),r.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,a.__suppressDeprecationWarning=!0},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(63);Object.defineProperty(t,"JsonBoolean",{enumerable:!0,get:function(){return r(o).default}});var a=n(158);Object.defineProperty(t,"JsonDate",{enumerable:!0,get:function(){return r(a).default}});var i=n(159);Object.defineProperty(t,"JsonFloat",{enumerable:!0,get:function(){return r(i).default}});var u=n(160);Object.defineProperty(t,"JsonFunction",{enumerable:!0,get:function(){return r(u).default}});var l=n(165);Object.defineProperty(t,"JsonNan",{enumerable:!0,get:function(){return r(l).default}});var s=n(166);Object.defineProperty(t,"JsonNull",{enumerable:!0,get:function(){return r(s).default}});var c=n(167);Object.defineProperty(t,"JsonInteger",{enumerable:!0,get:function(){return r(c).default}});var f=n(25);Object.defineProperty(t,"JsonObject",{enumerable:!0,get:function(){return r(f).default}});var p=n(168);Object.defineProperty(t,"JsonRegexp",{enumerable:!0,get:function(){return r(p).default}});var d=n(169);Object.defineProperty(t,"JsonString",{enumerable:!0,get:function(){return r(d).default}});var h=n(170);Object.defineProperty(t,"JsonUndefined",{enumerable:!0,get:function(){return r(h).default}})},function(e,t,n){"use strict";var r=n(20),o=n(21),a=n(46),i=n(8),u=n(18),l=n(73),s=n(34),c=n(79),f=n(3)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,t,n,h,y,v,m){l(n,t,h);var g,b,w,x=function(e){if(!p&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},_=t+" Iterator",E="values"==y,k=!1,S=e.prototype,C=S[f]||S["@@iterator"]||y&&S[y],O=C||x(y),M=y?E?x("entries"):O:void 0,T="Array"==t&&S.entries||C;if(T&&(w=c(T.call(new e)))!==Object.prototype&&w.next&&(s(w,_,!0),r||"function"==typeof w[f]||i(w,f,d)),E&&C&&"values"!==C.name&&(k=!0,O=function(){return C.call(this)}),r&&!m||!p&&!k&&S[f]||i(S,f,O),u[t]=O,u[_]=d,y)if(g={values:E?O:x("values"),keys:v?O:x("keys"),entries:M},m)for(b in g)b in S||a(S,b,g[b]);else o(o.P+o.F*(p||k),t,g);return g}},function(e,t,n){e.exports=!n(10)&&!n(11)(function(){return 7!=Object.defineProperty(n(45)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(17),o=n(5).document,a=r(o)&&r(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},function(e,t,n){e.exports=n(8)},function(e,t,n){var r=n(16),o=n(74),a=n(33),i=n(31)("IE_PROTO"),u=function(){},l=function(){var e,t=n(45)("iframe"),r=a.length;for(t.style.display="none",n(78).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[a[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[i]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(7),o=n(12),a=n(75)(!1),i=n(31)("IE_PROTO");e.exports=function(e,t){var n,u=o(e),l=0,s=[];for(n in u)n!=i&&r(u,n)&&s.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~a(s,n)||s.push(n));return s}},function(e,t,n){var r=n(30);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(48),o=n(33).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){var r=n(30),o=n(3)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:a?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n=/-?\d+(\.\d+)?%?/g;e.exports=function(e){return e.match(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.default=function(e){var t=(0,r.toType)(e),n=void 0;switch(t){case"undefined":n="undefined";break;case"nan":n="NaN";break;case"string":n=e;break;case"date":case"function":case"regexp":n=e.toString();break;default:try{n=JSON.stringify(e,null,"  ")}catch(e){n=""}}return n}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(4),s=n(54),c=(r(s),n(15)),f=n(1),p=r(f),d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.copiedTimer=null,n.handleCopy=function(){var e=document.createElement("textarea"),t=n.props,r=t.clickCallback,o=t.src,a=t.namespace;e.innerHTML=JSON.stringify(n.clipboardValue(o),null,"  "),document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),n.copiedTimer=setTimeout(function(){n.setState({copied:!1})},5500),n.setState({copied:!0},function(){"function"==typeof r&&r({src:o,namespace:a,name:a[a.length-1]})})},n.getClippyIcon=function(){var e=n.props.theme;return n.state.copied?u.default.createElement("span",null,u.default.createElement(c.Clippy,o({className:"copy-icon"},(0,p.default)(e,"copy-icon"))),u.default.createElement("span",(0,p.default)(e,"copy-icon-copied"),"✔")):u.default.createElement(c.Clippy,o({className:"copy-icon"},(0,p.default)(e,"copy-icon")))},n.clipboardValue=function(e){switch((0,l.toType)(e)){case"function":case"regexp":return e.toString();default:return e}},n.state={copied:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentWillUnmount",value:function(){this.copiedTimer&&(clearTimeout(this.copiedTimer),this.copiedTimer=null)}},{key:"render",value:function(){var e=this.props,t=(e.src,e.theme),n=e.hidden,r=(0,p.default)(t,"copy-to-clipboard").style,a="inline";return n&&(a="none"),u.default.createElement("span",{className:"copy-to-clipboard-container"},u.default.createElement("span",{style:o({},r,{display:a}),onClick:this.handleCopy},this.getClippyIcon()))}}]),t}(u.default.PureComponent);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=n(0),l=r(u),s=n(14),c=r(s),f=n(55),p=r(f),d=n(4),h=n(15),y=n(1),v=r(y),m=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var u=arguments.length,s=Array(u),f=0;f<u;f++)s[f]=arguments[f];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(s))),r.getObjectSize=function(){var e=r.props,t=e.size,n=e.theme;if(e.displayObjectSize)return l.default.createElement("span",i({className:"object-size"},(0,v.default)(n,"object-size")),t," item",1===t?"":"s")},r.getAddAttribute=function(){var e=r.props,t=e.theme,n=e.namespace,a=e.name,u=e.src,s=e.rjvId,f=e.depth;return l.default.createElement("span",{className:"click-to-add",style:{verticalAlign:"top"}},l.default.createElement(h.AddCircle,i({className:"click-to-add-icon"},(0,v.default)(t,"addVarIcon"),{onClick:function(){var e={name:f>0?a:null,namespace:n.splice(0,n.length-1),existing_value:u,variable_removed:!1,key_name:null};"object"===(0,d.toType)(u)?c.default.dispatch({name:"ADD_VARIABLE_KEY_REQUEST",rjvId:s,data:e}):c.default.dispatch({name:"VARIABLE_ADDED",rjvId:s,data:i({},e,{new_value:[].concat(o(u),[null])})})}})))},r.getRemoveObject=function(){var e=r.props,t=e.theme,n=(e.hover,e.namespace),o=e.name,a=e.src,u=e.rjvId;if(1!==n.length)return l.default.createElement("span",{className:"click-to-remove"},l.default.createElement(h.RemoveCircle,i({className:"click-to-remove-icon"},(0,v.default)(t,"removeVarIcon"),{onClick:function(){c.default.dispatch({name:"VARIABLE_REMOVED",rjvId:u,data:{name:o,namespace:n.splice(0,n.length-1),existing_value:a,variable_removed:!0}})}})))},r.render=function(){var e=r.props,t=e.theme,n=e.onDelete,o=e.onAdd,a=e.enableClipboard,u=e.src,s=e.namespace;return l.default.createElement("div",i({},(0,v.default)(t,"object-meta-data"),{className:"object-meta-data",onClick:function(e){e.stopPropagation()}}),r.getObjectSize(),a?l.default.createElement(p.default,i({clickCallback:a},{src:u,theme:t,namespace:s})):null,!1!==o?r.getAddAttribute():null,!1!==n?r.getRemoveObject():null)},a(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(l.default.PureComponent);t.default=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=n(56),f=r(c),p=n(58),d=r(p),h=n(25),y=r(h),v=n(59),m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggleCollapsed=function(e){var t=[];for(var r in n.state.expanded)t.push(n.state.expanded[r]);t[e]=!t[e],n.setState({expanded:t})},n.state={expanded:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"getExpandedIcon",value:function(e){var t=this.props,n=t.theme,r=t.iconStyle;return this.state.expanded[e]?u.default.createElement(v.ExpandedIcon,{theme:n,iconStyle:r}):u.default.createElement(v.CollapsedIcon,{theme:n,iconStyle:r})}},{key:"render",value:function(){var e=this,t=this.props,n=t.src,r=t.groupArraysAfterLength,a=(t.depth,t.name),i=t.theme,l=t.jsvRoot,c=t.namespace,p=(t.parent_type,function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["src","groupArraysAfterLength","depth","name","theme","jsvRoot","namespace","parent_type"])),h=0,v=5*this.props.indentWidth;l||(h=5*this.props.indentWidth);var m=r,g=Math.ceil(n.length/m);return u.default.createElement("div",o({className:"object-key-val"},(0,s.default)(i,l?"jsv-root":"objectKeyVal",{paddingLeft:h})),u.default.createElement(d.default,this.props),u.default.createElement("span",null,u.default.createElement(f.default,o({size:n.length},this.props))),[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(Array(g))).map(function(t,r){return u.default.createElement("div",o({key:r,className:"object-key-val array-group"},(0,s.default)(i,"objectKeyVal",{marginLeft:6,paddingLeft:v})),u.default.createElement("span",(0,s.default)(i,"brace-row"),u.default.createElement("div",o({className:"icon-container"},(0,s.default)(i,"icon-container"),{onClick:function(t){e.toggleCollapsed(r)}}),e.getExpandedIcon(r)),e.state.expanded[r]?u.default.createElement(y.default,o({key:a+r,depth:0,name:!1,collapsed:!1,groupArraysAfterLength:m,index_offset:r*m,src:n.slice(r*m,r*m+m),namespace:c,type:"array",parent_type:"array_group",theme:i},p)):u.default.createElement("span",o({},(0,s.default)(i,"brace"),{onClick:function(t){e.toggleCollapsed(r)},className:"array-group-brace"}),"[",u.default.createElement("div",o({},(0,s.default)(i,"array-group-meta-data"),{className:"array-group-meta-data"}),u.default.createElement("span",o({className:"object-size"},(0,s.default)(i,"object-size")),r*m," - ",r*m+m>n.length?n.length:r*m+m)),"]")))}))}}]),t}(u.default.PureComponent);t.default=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e){var t=e.parent_type,n=e.namespace,r=e.theme,a=e.jsvRoot,u=e.name,s=e.name?e.name:"";return!a||!1!==u&&null!==u?"array"==t?i.default.createElement("span",o({},(0,l.default)(r,"array-key"),{key:n}),i.default.createElement("span",{className:"array-key"},s),i.default.createElement("span",(0,l.default)(r,"colon"),":")):i.default.createElement("span",o({},(0,l.default)(r,"object-name"),{key:n}),i.default.createElement("span",{className:"object-key"},i.default.createElement("span",{style:{verticalAlign:"top"}},'"'),i.default.createElement("span",null,s),i.default.createElement("span",{style:{verticalAlign:"top"}},'"')),i.default.createElement("span",(0,l.default)(r,"colon"),":")):i.default.createElement("span",null)};var a=n(0),i=r(a),u=n(1),l=r(u)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.ExpandedIcon=function(e){var t=e.theme;switch(e.iconStyle){case"triangle":return i.default.createElement(s.ArrowDown,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}));case"square":return i.default.createElement(s.SquareMinus,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}));default:return i.default.createElement(s.CircleMinus,o({},(0,l.default)(t,"expanded-icon"),{className:"expanded-icon"}))}},t.CollapsedIcon=function(e){var t=e.theme;switch(e.iconStyle){case"triangle":return i.default.createElement(s.ArrowRight,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}));case"square":return i.default.createElement(s.SquarePlus,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}));default:return i.default.createElement(s.CirclePlus,o({},(0,l.default)(t,"collapsed-icon"),{className:"collapsed-icon"}))}};var a=n(0),i=r(a),u=n(1),l=r(u),s=n(15)},function(e,t,n){e.exports=n(61)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(41),s=n(62),c=r(s),f=n(177),p=r(f),d=n(179),h=r(d),y=n(4),v=n(13),m=r(v),g=n(1),b=r(g);n(180);var w=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.rjvId=Date.now().toString(),n.getListeners=function(){return{reset:n.resetState,"variable-update":n.updateSrc,"add-key-request":n.addKeyRequest}},n.updateSrc=function(){var e=m.default.get(n.rjvId,"action","variable-update"),t=e.name,r=e.namespace,o=e.new_value,a=e.existing_value,i=(e.variable_removed,e.updated_src),u=e.type,l=n.props,s=l.onEdit,c=l.onDelete,f=l.onAdd,p=n.state.src,d=void 0,h={existing_src:p,new_value:o,updated_src:i,name:t,namespace:r,existing_value:a};switch(u){case"variable-added":d=f(h);break;case"variable-edited":d=s(h);break;case"variable-removed":d=c(h)}!1!==d?(m.default.set(n.rjvId,"global","src",i),n.setState({src:i})):n.setState({validationFailure:!0})},n.addKeyRequest=function(){n.setState({addKeyRequest:!0})},n.resetState=function(){n.setState({validationFailure:!1,addKeyRequest:!1})},n.state={addKeyRequest:!1,editKeyRequest:!1,validationFailure:!1,src:t.defaultProps.src,name:t.defaultProps.name,theme:t.defaultProps.theme,validationMessage:t.defaultProps.validationMessage,prevSrc:t.defaultProps.src,prevName:t.defaultProps.name,prevTheme:t.defaultProps.theme},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){m.default.set(this.rjvId,"global","src",this.state.src);var e=this.getListeners();for(var t in e)m.default.on(t+"-"+this.rjvId,e[t]);this.setState({addKeyRequest:!1,editKeyRequest:!1})}},{key:"componentDidUpdate",value:function(e,t){!1!==t.addKeyRequest&&this.setState({addKeyRequest:!1}),!1!==t.editKeyRequest&&this.setState({editKeyRequest:!1}),e.src!==this.state.src&&m.default.set(this.rjvId,"global","src",this.state.src)}},{key:"componentWillUnmount",value:function(){var e=this.getListeners();for(var t in e)m.default.removeListener(t+"-"+this.rjvId,e[t])}},{key:"render",value:function(){var e=this.state,t=e.validationFailure,n=e.validationMessage,r=e.addKeyRequest,a=e.theme,i=e.src,l=e.name,s=this.props,f=s.style,d=s.defaultValue;return u.default.createElement("div",{className:"react-json-view",style:o({},(0,b.default)(a,"app-container").style,f)},u.default.createElement(h.default,{message:n,active:t,theme:a,rjvId:this.rjvId}),u.default.createElement(c.default,o({},this.props,{src:i,name:l,theme:a,type:(0,y.toType)(i),rjvId:this.rjvId})),u.default.createElement(p.default,{active:r,theme:a,rjvId:this.rjvId,defaultValue:d}))}}],[{key:"getDerivedStateFromProps",value:function(e,n){if(e.src!==n.prevSrc||e.name!==n.prevName||e.theme!==n.prevTheme){var r={src:e.src,name:e.name,theme:e.theme,validationMessage:e.validationMessage,prevSrc:e.src,prevName:e.name,prevTheme:e.theme};return t.validateState(r)}return null}}]),t}(u.default.PureComponent);w.defaultProps={src:{},name:"root",theme:"rjv-default",collapsed:!1,collapseStringsAfterLength:!1,shouldCollapse:!1,sortKeys:!1,groupArraysAfterLength:100,indentWidth:4,enableClipboard:!0,displayObjectSize:!0,displayDataTypes:!0,onEdit:!1,onDelete:!1,onAdd:!1,onSelect:!1,iconStyle:"triangle",style:{},validationMessage:"Validation Error",defaultValue:null},w.validateState=function(e){var t={};return"object"!==(0,y.toType)(e.theme)||(0,y.isTheme)(e.theme)||(console.error("react-json-view error:","theme prop must be a theme name or valid base-16 theme object.",'defaulting to "rjv-default" theme'),t.theme="rjv-default"),"object"!==(0,y.toType)(e.src)&&"array"!==(0,y.toType)(e.src)&&(console.error("react-json-view error:","src property must be a valid json object"),t.name="ERROR",t.src={message:"src property must be a valid json object"}),o({},e,t)},(0,l.polyfill)(w),t.default=w},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(0),u=r(i),l=n(25),s=r(l),c=n(57),f=r(c),p=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,l=Array(i),c=0;c<i;c++)l[c]=arguments[c];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),r.render=function(){var e=r,t=e.props,n=[t.name],o=s.default;return t.groupArraysAfterLength&&t.src.length>t.groupArraysAfterLength&&(o=f.default),u.default.createElement("div",{className:"pretty-json-container object-container"},u.default.createElement("div",{className:"object-content"},u.default.createElement(o,a({namespace:n,depth:0,jsvRoot:!0},t))))},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"boolean"),u.default.createElement(s.default,o({type_name:"bool"},e)),e.value?"true":"false")}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rjv_default={scheme:"rjv-default",author:"mac gainor",base00:"rgba(0, 0, 0, 0)",base01:"rgb(245, 245, 245)",base02:"rgb(235, 235, 235)",base03:"#93a1a1",base04:"rgba(0, 0, 0, 0.3)",base05:"#586e75",base06:"#073642",base07:"#002b36",base08:"#d33682",base09:"#cb4b16",base0A:"#dc322f",base0B:"#859900",base0C:"#6c71c4",base0D:"#586e75",base0E:"#2aa198",base0F:"#268bd2"},t.rjv_grey={scheme:"rjv-grey",author:"mac gainor",base00:"rgba(1, 1, 1, 0)",base01:"rgba(1, 1, 1, 0.1)",base02:"rgba(0, 0, 0, 0.2)",base03:"rgba(1, 1, 1, 0.3)",base04:"rgba(0, 0, 0, 0.4)",base05:"rgba(1, 1, 1, 0.5)",base06:"rgba(1, 1, 1, 0.6)",base07:"rgba(1, 1, 1, 0.7)",base08:"rgba(1, 1, 1, 0.8)",base09:"rgba(1, 1, 1, 0.8)",base0A:"rgba(1, 1, 1, 0.8)",base0B:"rgba(1, 1, 1, 0.8)",base0C:"rgba(1, 1, 1, 0.8)",base0D:"rgba(1, 1, 1, 0.8)",base0E:"rgba(1, 1, 1, 0.8)",base0F:"rgba(1, 1, 1, 0.8)"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={white:"#fff",black:"#000",transparent:"rgba(1, 1, 1, 0)",globalFontFamily:"monospace",globalCursor:"default",indentBlockWidth:"5px",braceFontWeight:"bold",braceCursor:"pointer",ellipsisFontSize:"18px",ellipsisLineHeight:"10px",ellipsisCursor:"pointer",keyMargin:"0px 5px",keyLetterSpacing:"0.5px",keyFontStyle:"none",keyBorderRadius:"3px",keyColonWeight:"bold",keyVerticalAlign:"top",keyOpacity:"0.85",keyOpacityHover:"1",keyValPaddingTop:"3px",keyValPaddingBottom:"3px",keyValPaddingRight:"5px",keyValBorderLeft:"1px solid",keyValBorderHover:"2px solid",keyValPaddingHover:"3px 5px 3px 4px",pushedContentMarginLeft:"6px",variableValuePaddingRight:"6px",nullFontSize:"11px",nullFontWeight:"bold",nullPadding:"1px 2px",nullBorderRadius:"3px",nanFontSize:"11px",nanFontWeight:"bold",nanPadding:"1px 2px",nanBorderRadius:"3px",undefinedFontSize:"11px",undefinedFontWeight:"bold",undefinedPadding:"1px 2px",undefinedBorderRadius:"3px",dataTypeFontSize:"11px",dataTypeMarginRight:"4px",datatypeOpacity:"0.8",objectSizeBorderRadius:"3px",objectSizeFontStyle:"italic",objectSizeMargin:"0px 6px 0px 0px",clipboardCursor:"pointer",clipboardCheckMarginLeft:"-12px",metaDataPadding:"0px 0px 0px 10px",arrayGroupMetaPadding:"0px 0px 0px 4px",iconContainerWidth:"17px",tooltipPadding:"4px",editInputHeight:"25px",editInputMinWidth:"130px",editInputBorderRadius:"2px",editInputPadding:"5px",editInputMarginRight:"4px",editInputFontFamily:"monospace",iconCursor:"pointer",iconFontSize:"15px",iconPaddingRight:"1px",dateValueMarginLeft:"2px",iconMarginRight:"3px",detectedRowPaddingTop:"3px",addKeyCoverBackground:"rgba(255, 255, 255, 0.3)",addKeyCoverPosition:"absolute",addKeyCoverPositionPx:"0px",addKeyModalWidth:"200px",addKeyModalMargin:"auto",addKeyModalPadding:"10px",addKeyModalRadius:"3px"}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.getBase16Theme=t.createStyling=t.invertTheme=void 0;var o=n(67),a=r(o),i=n(94),u=r(i),l=n(99),s=r(l),c=n(107),f=r(c),p=n(111),d=r(p),h=n(112),y=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(h),v=n(150),m=r(v),g=n(151),b=r(g),w=n(156),x=r(w),_=n(157),E=y.default,k=(0,f.default)(E),S=function(e){return e<.25?1:e<.5?.9-e:1.1-e},C=(0,x.default)(b.default,_.rgb2yuv,function(e){var t=(0,s.default)(e,3),n=t[0],r=t[1],o=t[2];return[S(n),r,o]},_.yuv2rgb,m.default),O=function(e){return function(t){return{className:[t.className,e.className].filter(Boolean).join(" "),style:(0,u.default)({},t.style||{},e.style||{})}}},M=function(e,t){var n=(0,f.default)(t);for(var r in e)-1===n.indexOf(r)&&n.push(r);return n.reduce(function(n,r){return n[r]=function(e,t){if(void 0===e)return t;if(void 0===t)return e;var n=void 0===e?"undefined":(0,a.default)(e),r=void 0===t?"undefined":(0,a.default)(t);switch(n){case"string":switch(r){case"string":return[t,e].filter(Boolean).join(" ");case"object":return O({className:e,style:t});case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return O({className:e})(t.apply(void 0,[n].concat(o)))}}case"object":switch(r){case"string":return O({className:t,style:e});case"object":return(0,u.default)({},t,e);case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return O({style:e})(t.apply(void 0,[n].concat(o)))}}case"function":switch(r){case"string":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[O(n)({className:t})].concat(o))};case"object":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[O(n)({style:t})].concat(o))};case"function":return function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];return e.apply(void 0,[t.apply(void 0,[n].concat(o))].concat(o))}}}}(e[r],t[r]),n},{})},T=function(e,t){for(var n=arguments.length,r=Array(n>2?n-2:0),o=2;o<n;o++)r[o-2]=arguments[o];if(null===t)return e;Array.isArray(t)||(t=[t]);var i=t.map(function(t){return e[t]}).filter(Boolean),l=i.reduce(function(e,t){return"string"==typeof t?e.className=[e.className,t].filter(Boolean).join(" "):"object"===(void 0===t?"undefined":(0,a.default)(t))?e.style=(0,u.default)({},e.style,t):"function"==typeof t&&(e=(0,u.default)({},e,t.apply(void 0,[e].concat(r)))),e},{className:"",style:{}});return l.className||delete l.className,0===(0,f.default)(l.style).length&&delete l.style,l},j=t.invertTheme=function(e){return(0,f.default)(e).reduce(function(t,n){return t[n]=/^base/.test(n)?C(e[n]):"scheme"===n?e[n]+":inverted":e[n],t},{})},P=(t.createStyling=(0,d.default)(function(e){for(var t=arguments.length,n=Array(t>3?t-3:0),r=3;r<t;r++)n[r-3]=arguments[r];var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=o.defaultBase16,l=void 0===i?E:i,s=o.base16Themes,c=void 0===s?null:s,p=P(a,c);p&&(a=(0,u.default)({},p,a));var h=k.reduce(function(e,t){return e[t]=a[t]||l[t],e},{}),y=(0,f.default)(a).reduce(function(e,t){return-1===k.indexOf(t)?(e[t]=a[t],e):e},{}),v=e(h),m=M(y,v);return(0,d.default)(T,2).apply(void 0,[m].concat(n))},3),t.getBase16Theme=function(e,t){if(e&&e.extend&&(e=e.extend),"string"==typeof e){var n=e.split(":"),r=(0,s.default)(n,2),o=r[0],a=r[1];e=(t||{})[o]||y[o],"inverted"===a&&(e=j(e))}return e&&e.hasOwnProperty("base00")?e:void 0})},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(68),a=r(o),i=n(83),u=r(i),l="function"==typeof u.default&&"symbol"==typeof a.default?function(e){return typeof e}:function(e){return e&&"function"==typeof u.default&&e.constructor===u.default&&e!==u.default.prototype?"symbol":typeof e};t.default="function"==typeof u.default&&"symbol"===l(a.default)?function(e){return void 0===e?"undefined":l(e)}:function(e){return e&&"function"==typeof u.default&&e.constructor===u.default&&e!==u.default.prototype?"symbol":void 0===e?"undefined":l(e)}},function(e,t,n){e.exports={default:n(69),__esModule:!0}},function(e,t,n){n(26),n(36),e.exports=n(37).f("iterator")},function(e,t,n){var r=n(27),o=n(28);e.exports=function(e){return function(t,n){var a,i,u=String(o(t)),l=r(n),s=u.length;return l<0||l>=s?e?"":void 0:(a=u.charCodeAt(l))<55296||a>56319||l+1===s||(i=u.charCodeAt(l+1))<56320||i>57343?e?u.charAt(l):a:e?u.slice(l,l+2):i-56320+(a-55296<<10)+65536}}},function(e,t,n){var r=n(72);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){"use strict";var r=n(47),o=n(22),a=n(34),i={};n(8)(i,n(3)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(i,{next:o(1,n)}),a(e,t+" Iterator")}},function(e,t,n){var r=n(9),o=n(16),a=n(19);e.exports=n(10)?Object.defineProperties:function(e,t){o(e);for(var n,i=a(t),u=i.length,l=0;u>l;)r.f(e,n=i[l++],t[n]);return e}},function(e,t,n){var r=n(12),o=n(76),a=n(77);e.exports=function(e){return function(t,n,i){var u,l=r(t),s=o(l.length),c=a(i,s);if(e&&n!=n){for(;s>c;)if((u=l[c++])!=u)return!0}else for(;s>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}}},function(e,t,n){var r=n(27),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){var r=n(27),o=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):a(e,t)}},function(e,t,n){var r=n(5).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(7),o=n(35),a=n(31)("IE_PROTO"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},function(e,t,n){"use strict";var r=n(81),o=n(82),a=n(18),i=n(12);e.exports=n(43)(Array,"Array",function(e,t){this._t=i(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){e.exports={default:n(84),__esModule:!0}},function(e,t,n){n(85),n(91),n(92),n(93),e.exports=n(2).Symbol},function(e,t,n){"use strict";var r=n(5),o=n(7),a=n(10),i=n(21),u=n(46),l=n(86).KEY,s=n(11),c=n(32),f=n(34),p=n(23),d=n(3),h=n(37),y=n(38),v=n(87),m=n(88),g=n(16),b=n(17),w=n(12),x=n(29),_=n(22),E=n(47),k=n(89),S=n(90),C=n(9),O=n(19),M=S.f,T=C.f,j=k.f,P=r.Symbol,A=r.JSON,N=A&&A.stringify,R=d("_hidden"),D=d("toPrimitive"),I={}.propertyIsEnumerable,L=c("symbol-registry"),z=c("symbols"),F=c("op-symbols"),U=Object.prototype,B="function"==typeof P,q=r.QObject,V=!q||!q.prototype||!q.prototype.findChild,W=a&&s(function(){return 7!=E(T({},"a",{get:function(){return T(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=M(U,t);r&&delete U[t],T(e,t,n),r&&e!==U&&T(U,t,r)}:T,H=function(e){var t=z[e]=E(P.prototype);return t._k=e,t},$=B&&"symbol"==typeof P.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof P},Y=function(e,t,n){return e===U&&Y(F,t,n),g(e),t=x(t,!0),g(n),o(z,t)?(n.enumerable?(o(e,R)&&e[R][t]&&(e[R][t]=!1),n=E(n,{enumerable:_(0,!1)})):(o(e,R)||T(e,R,_(1,{})),e[R][t]=!0),W(e,t,n)):T(e,t,n)},K=function(e,t){g(e);for(var n,r=v(t=w(t)),o=0,a=r.length;a>o;)Y(e,n=r[o++],t[n]);return e},G=function(e){var t=I.call(this,e=x(e,!0));return!(this===U&&o(z,e)&&!o(F,e))&&(!(t||!o(this,e)||!o(z,e)||o(this,R)&&this[R][e])||t)},J=function(e,t){if(e=w(e),t=x(t,!0),e!==U||!o(z,t)||o(F,t)){var n=M(e,t);return!n||!o(z,t)||o(e,R)&&e[R][t]||(n.enumerable=!0),n}},Q=function(e){for(var t,n=j(w(e)),r=[],a=0;n.length>a;)o(z,t=n[a++])||t==R||t==l||r.push(t);return r},X=function(e){for(var t,n=e===U,r=j(n?F:w(e)),a=[],i=0;r.length>i;)!o(z,t=r[i++])||n&&!o(U,t)||a.push(z[t]);return a};B||(u((P=function(){if(this instanceof P)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===U&&t.call(F,n),o(this,R)&&o(this[R],e)&&(this[R][e]=!1),W(this,e,_(1,n))};return a&&V&&W(U,e,{configurable:!0,set:t}),H(e)}).prototype,"toString",function(){return this._k}),S.f=J,C.f=Y,n(50).f=k.f=Q,n(24).f=G,n(39).f=X,a&&!n(20)&&u(U,"propertyIsEnumerable",G,!0),h.f=function(e){return H(d(e))}),i(i.G+i.W+i.F*!B,{Symbol:P});for(var Z="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Z.length>ee;)d(Z[ee++]);for(var te=O(d.store),ne=0;te.length>ne;)y(te[ne++]);i(i.S+i.F*!B,"Symbol",{for:function(e){return o(L,e+="")?L[e]:L[e]=P(e)},keyFor:function(e){if(!$(e))throw TypeError(e+" is not a symbol!");for(var t in L)if(L[t]===e)return t},useSetter:function(){V=!0},useSimple:function(){V=!1}}),i(i.S+i.F*!B,"Object",{create:function(e,t){return void 0===t?E(e):K(E(e),t)},defineProperty:Y,defineProperties:K,getOwnPropertyDescriptor:J,getOwnPropertyNames:Q,getOwnPropertySymbols:X}),A&&i(i.S+i.F*(!B||s(function(){var e=P();return"[null]"!=N([e])||"{}"!=N({a:e})||"{}"!=N(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!$(e))return m(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!$(t))return t}),r[1]=t,N.apply(A,r)}}),P.prototype[D]||n(8)(P.prototype,D,P.prototype.valueOf),f(P,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){var r=n(23)("meta"),o=n(17),a=n(7),i=n(9).f,u=0,l=Object.isExtensible||function(){return!0},s=!n(11)(function(){return l(Object.preventExtensions({}))}),c=function(e){i(e,r,{value:{i:"O"+ ++u,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,r)){if(!l(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!a(e,r)){if(!l(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return s&&f.NEED&&l(e)&&!a(e,r)&&c(e),e}}},function(e,t,n){var r=n(19),o=n(39),a=n(24);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var i,u=n(e),l=a.f,s=0;u.length>s;)l.call(e,i=u[s++])&&t.push(i);return t}},function(e,t,n){var r=n(30);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(12),o=n(50).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(r(e))}},function(e,t,n){var r=n(24),o=n(22),a=n(12),i=n(29),u=n(7),l=n(44),s=Object.getOwnPropertyDescriptor;t.f=n(10)?s:function(e,t){if(e=a(e),t=i(t,!0),l)try{return s(e,t)}catch(e){}if(u(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t){},function(e,t,n){n(38)("asyncIterator")},function(e,t,n){n(38)("observable")},function(e,t,n){"use strict";t.__esModule=!0;var r=n(95),o=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}},function(e,t,n){e.exports={default:n(96),__esModule:!0}},function(e,t,n){n(97),e.exports=n(2).Object.assign},function(e,t,n){var r=n(21);r(r.S+r.F,"Object",{assign:n(98)})},function(e,t,n){"use strict";var r=n(19),o=n(39),a=n(24),i=n(35),u=n(49),l=Object.assign;e.exports=!l||n(11)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=r})?function(e,t){for(var n=i(e),l=arguments.length,s=1,c=o.f,f=a.f;l>s;)for(var p,d=u(arguments[s++]),h=c?r(d).concat(c(d)):r(d),y=h.length,v=0;y>v;)f.call(d,p=h[v++])&&(n[p]=d[p]);return n}:l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var o=n(100),a=r(o),i=n(103),u=r(i);t.default=function(e,t){if(Array.isArray(e))return e;if((0,a.default)(Object(e)))return function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=(0,u.default)(e);!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t,n){e.exports={default:n(101),__esModule:!0}},function(e,t,n){n(36),n(26),e.exports=n(102)},function(e,t,n){var r=n(51),o=n(3)("iterator"),a=n(18);e.exports=n(2).isIterable=function(e){var t=Object(e);return void 0!==t[o]||"@@iterator"in t||a.hasOwnProperty(r(t))}},function(e,t,n){e.exports={default:n(104),__esModule:!0}},function(e,t,n){n(36),n(26),e.exports=n(105)},function(e,t,n){var r=n(16),o=n(106);e.exports=n(2).getIterator=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return r(t.call(e))}},function(e,t,n){var r=n(51),o=n(3)("iterator"),a=n(18);e.exports=n(2).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||a[r(e)]}},function(e,t,n){e.exports={default:n(108),__esModule:!0}},function(e,t,n){n(109),e.exports=n(2).Object.keys},function(e,t,n){var r=n(35),o=n(19);n(110)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){var r=n(21),o=n(2),a=n(11);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],i={};i[e]=t(n),r(r.S+r.F*a(function(){n(1)}),"Object",i)}},function(e,t,n){(function(t){function n(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function r(e,t){return!(!e||!e.length)&&function(e,t,n){if(t!=t)return function(e,t,n,r){for(var o=e.length,a=n+(r?1:-1);r?a--:++a<o;)if(t(e[a],a,e))return a;return-1}(e,o,n);for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}(e,t,0)>-1}function o(e){return e!=e}function a(e,t){for(var n=-1,r=e.length,o=0,a=[];++n<r;){var i=e[n];i!==t&&i!==C||(e[n]=C,a[o++]=n)}return a}function i(e){return!(!x(e)||function(e){return!!ie&&ie in e}(e))&&(function(e){var t=x(e)?se.call(e):"";return t==B||t==q}(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?ce:J).test(function(e){if(null!=e){try{return ue.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function u(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=function(e){return x(e)?fe(e):{}}(e.prototype),r=e.apply(n,t);return x(r)?r:n}}function l(e,t,r){var o=u(e);return function i(){for(var u=arguments.length,l=Array(u),c=u,p=d(i);c--;)l[c]=arguments[c];var h=u<3&&l[0]!==p&&l[u-1]!==p?[]:a(l,p);return(u-=h.length)<r?f(e,t,s,i.placeholder,void 0,l,h,void 0,void 0,r-u):n(this&&this!==ne&&this instanceof i?o:e,this,l)}}function s(e,t,n,r,o,i,l,c,p,h){var y=t&R,v=t&O,m=t&M,b=t&(j|P),w=t&D,x=m?void 0:u(e);return function _(){for(var E=arguments.length,k=Array(E),S=E;S--;)k[S]=arguments[S];if(b)var C=d(_),O=function(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&r++;return r}(k,C);if(r&&(k=function(e,t,n,r){for(var o=-1,a=e.length,i=n.length,u=-1,l=t.length,s=pe(a-i,0),c=Array(l+s),f=!r;++u<l;)c[u]=t[u];for(;++o<i;)(f||o<a)&&(c[n[o]]=e[o]);for(;s--;)c[u++]=e[o++];return c}(k,r,o,b)),i&&(k=function(e,t,n,r){for(var o=-1,a=e.length,i=-1,u=n.length,l=-1,s=t.length,c=pe(a-u,0),f=Array(c+s),p=!r;++o<c;)f[o]=e[o];for(var d=o;++l<s;)f[d+l]=t[l];for(;++i<u;)(p||o<a)&&(f[d+n[i]]=e[o++]);return f}(k,i,l,b)),E-=O,b&&E<h){var M=a(k,C);return f(e,t,s,_.placeholder,n,k,M,c,p,h-E)}var T=v?n:this,j=m?T[e]:e;return E=k.length,c?k=g(k,c):w&&E>1&&k.reverse(),y&&p<E&&(k.length=p),this&&this!==ne&&this instanceof _&&(j=x||u(j)),j.apply(T,k)}}function c(e,t,r,o){var a=t&O,i=u(e);return function t(){for(var u=-1,l=arguments.length,s=-1,c=o.length,f=Array(c+l),p=this&&this!==ne&&this instanceof t?i:e;++s<c;)f[s]=o[s];for(;l--;)f[s++]=arguments[++u];return n(p,a?r:this,f)}}function f(e,t,n,r,o,a,i,u,l,s){var c=t&j,f=c?i:void 0,p=c?void 0:i,d=c?a:void 0,h=c?void 0:a;t|=c?A:N,(t&=~(c?N:A))&T||(t&=~(O|M));var y=n(e,t,o,d,f,h,p,u,l,s);return y.placeholder=r,ye(y,e,t)}function p(e,t,n,r,o,a,i,f){var p=t&M;if(!p&&"function"!=typeof e)throw new TypeError(S);var d=r?r.length:0;if(d||(t&=~(A|N),r=o=void 0),i=void 0===i?i:pe(E(i),0),f=void 0===f?f:E(f),d-=o?o.length:0,t&N){var h=r,y=o;r=o=void 0}var v=[e,t,n,r,o,h,y,a,i,f];if(e=v[0],t=v[1],n=v[2],r=v[3],o=v[4],!(f=v[9]=null==v[9]?p?0:e.length:pe(v[9]-d,0))&&t&(j|P)&&(t&=~(j|P)),t&&t!=O)m=t==j||t==P?l(e,t,f):t!=A&&t!=(O|A)||o.length?s.apply(void 0,v):c(e,t,n,r);else var m=function(e,t,n){var r=t&O,o=u(e);return function t(){return(this&&this!==ne&&this instanceof t?o:e).apply(r?n:this,arguments)}}(e,t,n);return ye(m,e,t)}function d(e){return e.placeholder}function h(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return i(n)?n:void 0}function y(e){var t=e.match($);return t?t[1].split(Y):[]}function v(e,t){var n=t.length,r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(H,"{\n/* [wrapped with "+t+"] */\n")}function m(e,t){return!!(t=null==t?L:t)&&("number"==typeof e||X.test(e))&&e>-1&&e%1==0&&e<t}function g(e,t){for(var n=e.length,r=de(t.length,n),o=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}(e);r--;){var a=t[r];e[r]=m(a,n)?o[a]:void 0}return e}function b(e,t){return function(e,t){for(var n=-1,r=e?e.length:0;++n<r&&!1!==t(e[n],n,e););}(U,function(n){var o="_."+n[0];t&n[1]&&!r(e,o)&&e.push(o)}),e.sort()}function w(e,t,n){var r=p(e,j,void 0,void 0,void 0,void 0,void 0,t=n?void 0:t);return r.placeholder=w.placeholder,r}function x(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function _(e){return e?(e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&se.call(e)==V}(e))return F;if(x(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=x(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(W,"");var n=G.test(e);return n||Q.test(e)?Z(e.slice(2),n?2:8):K.test(e)?F:+e}(e))===I||e===-I?(e<0?-1:1)*z:e==e?e:0:0===e?e:0}function E(e){var t=_(e),n=t%1;return t==t?n?t-n:t:0}function k(e){return function(){return e}}var S="Expected a function",C="__lodash_placeholder__",O=1,M=2,T=4,j=8,P=16,A=32,N=64,R=128,D=512,I=1/0,L=9007199254740991,z=1.7976931348623157e308,F=NaN,U=[["ary",R],["bind",O],["bindKey",M],["curry",j],["curryRight",P],["flip",D],["partial",A],["partialRight",N],["rearg",256]],B="[object Function]",q="[object GeneratorFunction]",V="[object Symbol]",W=/^\s+|\s+$/g,H=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,$=/\{\n\/\* \[wrapped with (.+)\] \*/,Y=/,? & /,K=/^[-+]0x[0-9a-f]+$/i,G=/^0b[01]+$/i,J=/^\[object .+?Constructor\]$/,Q=/^0o[0-7]+$/i,X=/^(?:0|[1-9]\d*)$/,Z=parseInt,ee="object"==typeof t&&t&&t.Object===Object&&t,te="object"==typeof self&&self&&self.Object===Object&&self,ne=ee||te||Function("return this")(),re=Function.prototype,oe=Object.prototype,ae=ne["__core-js_shared__"],ie=function(){var e=/[^.]+$/.exec(ae&&ae.keys&&ae.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),ue=re.toString,le=oe.hasOwnProperty,se=oe.toString,ce=RegExp("^"+ue.call(le).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),fe=Object.create,pe=Math.max,de=Math.min,he=function(){var e=h(Object,"defineProperty"),t=h.name;return t&&t.length>2?e:void 0}(),ye=he?function(e,t,n){var r=t+"";return he(e,"toString",{configurable:!0,enumerable:!1,value:k(v(r,b(y(r),n)))})}:function(e){return e};w.placeholder={},e.exports=w}).call(t,n(52))},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e.default:e}t.__esModule=!0;var o=n(113);t.threezerotwofour=r(o);var a=n(114);t.apathy=r(a);var i=n(115);t.ashes=r(i);var u=n(116);t.atelierDune=r(u);var l=n(117);t.atelierForest=r(l);var s=n(118);t.atelierHeath=r(s);var c=n(119);t.atelierLakeside=r(c);var f=n(120);t.atelierSeaside=r(f);var p=n(121);t.bespin=r(p);var d=n(122);t.brewer=r(d);var h=n(123);t.bright=r(h);var y=n(124);t.chalk=r(y);var v=n(125);t.codeschool=r(v);var m=n(126);t.colors=r(m);var g=n(127);t.default=r(g);var b=n(128);t.eighties=r(b);var w=n(129);t.embers=r(w);var x=n(130);t.flat=r(x);var _=n(131);t.google=r(_);var E=n(132);t.grayscale=r(E);var k=n(133);t.greenscreen=r(k);var S=n(134);t.harmonic=r(S);var C=n(135);t.hopscotch=r(C);var O=n(136);t.isotope=r(O);var M=n(137);t.marrakesh=r(M);var T=n(138);t.mocha=r(T);var j=n(139);t.monokai=r(j);var P=n(140);t.ocean=r(P);var A=n(141);t.paraiso=r(A);var N=n(142);t.pop=r(N);var R=n(143);t.railscasts=r(R);var D=n(144);t.shapeshifter=r(D);var I=n(145);t.solarized=r(I);var L=n(146);t.summerfruit=r(L);var z=n(147);t.tomorrow=r(z);var F=n(148);t.tube=r(F);var U=n(149);t.twilight=r(U)},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"threezerotwofour",author:"jan t. sott (http://github.com/idleberg)",base00:"#090300",base01:"#3a3432",base02:"#4a4543",base03:"#5c5855",base04:"#807d7c",base05:"#a5a2a2",base06:"#d6d5d4",base07:"#f7f7f7",base08:"#db2d20",base09:"#e8bbd0",base0A:"#fded02",base0B:"#01a252",base0C:"#b5e4f4",base0D:"#01a0e4",base0E:"#a16a94",base0F:"#cdab53"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"apathy",author:"jannik siebert (https://github.com/janniks)",base00:"#031A16",base01:"#0B342D",base02:"#184E45",base03:"#2B685E",base04:"#5F9C92",base05:"#81B5AC",base06:"#A7CEC8",base07:"#D2E7E4",base08:"#3E9688",base09:"#3E7996",base0A:"#3E4C96",base0B:"#883E96",base0C:"#963E4C",base0D:"#96883E",base0E:"#4C963E",base0F:"#3E965B"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"ashes",author:"jannik siebert (https://github.com/janniks)",base00:"#1C2023",base01:"#393F45",base02:"#565E65",base03:"#747C84",base04:"#ADB3BA",base05:"#C7CCD1",base06:"#DFE2E5",base07:"#F3F4F5",base08:"#C7AE95",base09:"#C7C795",base0A:"#AEC795",base0B:"#95C7AE",base0C:"#95AEC7",base0D:"#AE95C7",base0E:"#C795AE",base0F:"#C79595"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier dune",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)",base00:"#20201d",base01:"#292824",base02:"#6e6b5e",base03:"#7d7a68",base04:"#999580",base05:"#a6a28c",base06:"#e8e4cf",base07:"#fefbec",base08:"#d73737",base09:"#b65611",base0A:"#cfb017",base0B:"#60ac39",base0C:"#1fad83",base0D:"#6684e1",base0E:"#b854d4",base0F:"#d43552"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier forest",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)",base00:"#1b1918",base01:"#2c2421",base02:"#68615e",base03:"#766e6b",base04:"#9c9491",base05:"#a8a19f",base06:"#e6e2e0",base07:"#f1efee",base08:"#f22c40",base09:"#df5320",base0A:"#d5911a",base0B:"#5ab738",base0C:"#00ad9c",base0D:"#407ee7",base0E:"#6666ea",base0F:"#c33ff3"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier heath",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)",base00:"#1b181b",base01:"#292329",base02:"#695d69",base03:"#776977",base04:"#9e8f9e",base05:"#ab9bab",base06:"#d8cad8",base07:"#f7f3f7",base08:"#ca402b",base09:"#a65926",base0A:"#bb8a35",base0B:"#379a37",base0C:"#159393",base0D:"#516aec",base0E:"#7b59c0",base0F:"#cc33cc"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier lakeside",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)",base00:"#161b1d",base01:"#1f292e",base02:"#516d7b",base03:"#5a7b8c",base04:"#7195a8",base05:"#7ea2b4",base06:"#c1e4f6",base07:"#ebf8ff",base08:"#d22d72",base09:"#935c25",base0A:"#8a8a0f",base0B:"#568c3b",base0C:"#2d8f6f",base0D:"#257fad",base0E:"#5d5db1",base0F:"#b72dd2"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"atelier seaside",author:"bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)",base00:"#131513",base01:"#242924",base02:"#5e6e5e",base03:"#687d68",base04:"#809980",base05:"#8ca68c",base06:"#cfe8cf",base07:"#f0fff0",base08:"#e6193c",base09:"#87711d",base0A:"#c3c322",base0B:"#29a329",base0C:"#1999b3",base0D:"#3d62f5",base0E:"#ad2bee",base0F:"#e619c3"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"bespin",author:"jan t. sott",base00:"#28211c",base01:"#36312e",base02:"#5e5d5c",base03:"#666666",base04:"#797977",base05:"#8a8986",base06:"#9d9b97",base07:"#baae9e",base08:"#cf6a4c",base09:"#cf7d34",base0A:"#f9ee98",base0B:"#54be0d",base0C:"#afc4db",base0D:"#5ea6ea",base0E:"#9b859d",base0F:"#937121"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"brewer",author:"timothée poisot (http://github.com/tpoisot)",base00:"#0c0d0e",base01:"#2e2f30",base02:"#515253",base03:"#737475",base04:"#959697",base05:"#b7b8b9",base06:"#dadbdc",base07:"#fcfdfe",base08:"#e31a1c",base09:"#e6550d",base0A:"#dca060",base0B:"#31a354",base0C:"#80b1d3",base0D:"#3182bd",base0E:"#756bb1",base0F:"#b15928"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"bright",author:"chris kempson (http://chriskempson.com)",base00:"#000000",base01:"#303030",base02:"#505050",base03:"#b0b0b0",base04:"#d0d0d0",base05:"#e0e0e0",base06:"#f5f5f5",base07:"#ffffff",base08:"#fb0120",base09:"#fc6d24",base0A:"#fda331",base0B:"#a1c659",base0C:"#76c7b7",base0D:"#6fb3d2",base0E:"#d381c3",base0F:"#be643c"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"chalk",author:"chris kempson (http://chriskempson.com)",base00:"#151515",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#b0b0b0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#f5f5f5",base08:"#fb9fb1",base09:"#eda987",base0A:"#ddb26f",base0B:"#acc267",base0C:"#12cfc0",base0D:"#6fc2ef",base0E:"#e1a3ee",base0F:"#deaf8f"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"codeschool",author:"brettof86",base00:"#232c31",base01:"#1c3657",base02:"#2a343a",base03:"#3f4944",base04:"#84898c",base05:"#9ea7a6",base06:"#a7cfa3",base07:"#b5d8f6",base08:"#2a5491",base09:"#43820d",base0A:"#a03b1e",base0B:"#237986",base0C:"#b02f30",base0D:"#484d79",base0E:"#c59820",base0F:"#c98344"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"colors",author:"mrmrs (http://clrs.cc)",base00:"#111111",base01:"#333333",base02:"#555555",base03:"#777777",base04:"#999999",base05:"#bbbbbb",base06:"#dddddd",base07:"#ffffff",base08:"#ff4136",base09:"#ff851b",base0A:"#ffdc00",base0B:"#2ecc40",base0C:"#7fdbff",base0D:"#0074d9",base0E:"#b10dc9",base0F:"#85144b"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"default",author:"chris kempson (http://chriskempson.com)",base00:"#181818",base01:"#282828",base02:"#383838",base03:"#585858",base04:"#b8b8b8",base05:"#d8d8d8",base06:"#e8e8e8",base07:"#f8f8f8",base08:"#ab4642",base09:"#dc9656",base0A:"#f7ca88",base0B:"#a1b56c",base0C:"#86c1b9",base0D:"#7cafc2",base0E:"#ba8baf",base0F:"#a16946"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"eighties",author:"chris kempson (http://chriskempson.com)",base00:"#2d2d2d",base01:"#393939",base02:"#515151",base03:"#747369",base04:"#a09f93",base05:"#d3d0c8",base06:"#e8e6df",base07:"#f2f0ec",base08:"#f2777a",base09:"#f99157",base0A:"#ffcc66",base0B:"#99cc99",base0C:"#66cccc",base0D:"#6699cc",base0E:"#cc99cc",base0F:"#d27b53"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"embers",author:"jannik siebert (https://github.com/janniks)",base00:"#16130F",base01:"#2C2620",base02:"#433B32",base03:"#5A5047",base04:"#8A8075",base05:"#A39A90",base06:"#BEB6AE",base07:"#DBD6D1",base08:"#826D57",base09:"#828257",base0A:"#6D8257",base0B:"#57826D",base0C:"#576D82",base0D:"#6D5782",base0E:"#82576D",base0F:"#825757"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"flat",author:"chris kempson (http://chriskempson.com)",base00:"#2C3E50",base01:"#34495E",base02:"#7F8C8D",base03:"#95A5A6",base04:"#BDC3C7",base05:"#e0e0e0",base06:"#f5f5f5",base07:"#ECF0F1",base08:"#E74C3C",base09:"#E67E22",base0A:"#F1C40F",base0B:"#2ECC71",base0C:"#1ABC9C",base0D:"#3498DB",base0E:"#9B59B6",base0F:"#be643c"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"google",author:"seth wright (http://sethawright.com)",base00:"#1d1f21",base01:"#282a2e",base02:"#373b41",base03:"#969896",base04:"#b4b7b4",base05:"#c5c8c6",base06:"#e0e0e0",base07:"#ffffff",base08:"#CC342B",base09:"#F96A38",base0A:"#FBA922",base0B:"#198844",base0C:"#3971ED",base0D:"#3971ED",base0E:"#A36AC7",base0F:"#3971ED"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"grayscale",author:"alexandre gavioli (https://github.com/alexx2/)",base00:"#101010",base01:"#252525",base02:"#464646",base03:"#525252",base04:"#ababab",base05:"#b9b9b9",base06:"#e3e3e3",base07:"#f7f7f7",base08:"#7c7c7c",base09:"#999999",base0A:"#a0a0a0",base0B:"#8e8e8e",base0C:"#868686",base0D:"#686868",base0E:"#747474",base0F:"#5e5e5e"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"green screen",author:"chris kempson (http://chriskempson.com)",base00:"#001100",base01:"#003300",base02:"#005500",base03:"#007700",base04:"#009900",base05:"#00bb00",base06:"#00dd00",base07:"#00ff00",base08:"#007700",base09:"#009900",base0A:"#007700",base0B:"#00bb00",base0C:"#005500",base0D:"#009900",base0E:"#00bb00",base0F:"#005500"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"harmonic16",author:"jannik siebert (https://github.com/janniks)",base00:"#0b1c2c",base01:"#223b54",base02:"#405c79",base03:"#627e99",base04:"#aabcce",base05:"#cbd6e2",base06:"#e5ebf1",base07:"#f7f9fb",base08:"#bf8b56",base09:"#bfbf56",base0A:"#8bbf56",base0B:"#56bf8b",base0C:"#568bbf",base0D:"#8b56bf",base0E:"#bf568b",base0F:"#bf5656"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"hopscotch",author:"jan t. sott",base00:"#322931",base01:"#433b42",base02:"#5c545b",base03:"#797379",base04:"#989498",base05:"#b9b5b8",base06:"#d5d3d5",base07:"#ffffff",base08:"#dd464c",base09:"#fd8b19",base0A:"#fdcc59",base0B:"#8fc13e",base0C:"#149b93",base0D:"#1290bf",base0E:"#c85e7c",base0F:"#b33508"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"isotope",author:"jan t. sott",base00:"#000000",base01:"#404040",base02:"#606060",base03:"#808080",base04:"#c0c0c0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#ffffff",base08:"#ff0000",base09:"#ff9900",base0A:"#ff0099",base0B:"#33ff00",base0C:"#00ffff",base0D:"#0066ff",base0E:"#cc00ff",base0F:"#3300ff"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"marrakesh",author:"alexandre gavioli (http://github.com/alexx2/)",base00:"#201602",base01:"#302e00",base02:"#5f5b17",base03:"#6c6823",base04:"#86813b",base05:"#948e48",base06:"#ccc37a",base07:"#faf0a5",base08:"#c35359",base09:"#b36144",base0A:"#a88339",base0B:"#18974e",base0C:"#75a738",base0D:"#477ca1",base0E:"#8868b3",base0F:"#b3588e"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"mocha",author:"chris kempson (http://chriskempson.com)",base00:"#3B3228",base01:"#534636",base02:"#645240",base03:"#7e705a",base04:"#b8afad",base05:"#d0c8c6",base06:"#e9e1dd",base07:"#f5eeeb",base08:"#cb6077",base09:"#d28b71",base0A:"#f4bc87",base0B:"#beb55b",base0C:"#7bbda4",base0D:"#8ab3b5",base0E:"#a89bb9",base0F:"#bb9584"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"monokai",author:"wimer hazenberg (http://www.monokai.nl)",base00:"#272822",base01:"#383830",base02:"#49483e",base03:"#75715e",base04:"#a59f85",base05:"#f8f8f2",base06:"#f5f4f1",base07:"#f9f8f5",base08:"#f92672",base09:"#fd971f",base0A:"#f4bf75",base0B:"#a6e22e",base0C:"#a1efe4",base0D:"#66d9ef",base0E:"#ae81ff",base0F:"#cc6633"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"ocean",author:"chris kempson (http://chriskempson.com)",base00:"#2b303b",base01:"#343d46",base02:"#4f5b66",base03:"#65737e",base04:"#a7adba",base05:"#c0c5ce",base06:"#dfe1e8",base07:"#eff1f5",base08:"#bf616a",base09:"#d08770",base0A:"#ebcb8b",base0B:"#a3be8c",base0C:"#96b5b4",base0D:"#8fa1b3",base0E:"#b48ead",base0F:"#ab7967"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"paraiso",author:"jan t. sott",base00:"#2f1e2e",base01:"#41323f",base02:"#4f424c",base03:"#776e71",base04:"#8d8687",base05:"#a39e9b",base06:"#b9b6b0",base07:"#e7e9db",base08:"#ef6155",base09:"#f99b15",base0A:"#fec418",base0B:"#48b685",base0C:"#5bc4bf",base0D:"#06b6ef",base0E:"#815ba4",base0F:"#e96ba8"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"pop",author:"chris kempson (http://chriskempson.com)",base00:"#000000",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#b0b0b0",base05:"#d0d0d0",base06:"#e0e0e0",base07:"#ffffff",base08:"#eb008a",base09:"#f29333",base0A:"#f8ca12",base0B:"#37b349",base0C:"#00aabb",base0D:"#0e5a94",base0E:"#b31e8d",base0F:"#7a2d00"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"railscasts",author:"ryan bates (http://railscasts.com)",base00:"#2b2b2b",base01:"#272935",base02:"#3a4055",base03:"#5a647e",base04:"#d4cfc9",base05:"#e6e1dc",base06:"#f4f1ed",base07:"#f9f7f3",base08:"#da4939",base09:"#cc7833",base0A:"#ffc66d",base0B:"#a5c261",base0C:"#519f50",base0D:"#6d9cbe",base0E:"#b6b3eb",base0F:"#bc9458"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"shapeshifter",author:"tyler benziger (http://tybenz.com)",base00:"#000000",base01:"#040404",base02:"#102015",base03:"#343434",base04:"#555555",base05:"#ababab",base06:"#e0e0e0",base07:"#f9f9f9",base08:"#e92f2f",base09:"#e09448",base0A:"#dddd13",base0B:"#0ed839",base0C:"#23edda",base0D:"#3b48e3",base0E:"#f996e2",base0F:"#69542d"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"solarized",author:"ethan schoonover (http://ethanschoonover.com/solarized)",base00:"#002b36",base01:"#073642",base02:"#586e75",base03:"#657b83",base04:"#839496",base05:"#93a1a1",base06:"#eee8d5",base07:"#fdf6e3",base08:"#dc322f",base09:"#cb4b16",base0A:"#b58900",base0B:"#859900",base0C:"#2aa198",base0D:"#268bd2",base0E:"#6c71c4",base0F:"#d33682"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"summerfruit",author:"christopher corley (http://cscorley.github.io/)",base00:"#151515",base01:"#202020",base02:"#303030",base03:"#505050",base04:"#B0B0B0",base05:"#D0D0D0",base06:"#E0E0E0",base07:"#FFFFFF",base08:"#FF0086",base09:"#FD8900",base0A:"#ABA800",base0B:"#00C918",base0C:"#1faaaa",base0D:"#3777E6",base0E:"#AD00A1",base0F:"#cc6633"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"tomorrow",author:"chris kempson (http://chriskempson.com)",base00:"#1d1f21",base01:"#282a2e",base02:"#373b41",base03:"#969896",base04:"#b4b7b4",base05:"#c5c8c6",base06:"#e0e0e0",base07:"#ffffff",base08:"#cc6666",base09:"#de935f",base0A:"#f0c674",base0B:"#b5bd68",base0C:"#8abeb7",base0D:"#81a2be",base0E:"#b294bb",base0F:"#a3685a"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"london tube",author:"jan t. sott",base00:"#231f20",base01:"#1c3f95",base02:"#5a5758",base03:"#737171",base04:"#959ca1",base05:"#d9d8d8",base06:"#e7e7e8",base07:"#ffffff",base08:"#ee2e24",base09:"#f386a1",base0A:"#ffd204",base0B:"#00853e",base0C:"#85cebc",base0D:"#009ddc",base0E:"#98005d",base0F:"#b06110"},e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default={scheme:"twilight",author:"david hart (http://hart-dev.com)",base00:"#1e1e1e",base01:"#323537",base02:"#464b50",base03:"#5f5a60",base04:"#838184",base05:"#a7a7a7",base06:"#c3c3c3",base07:"#ffffff",base08:"#cf6a4c",base09:"#cda869",base0A:"#f9ee98",base0B:"#8f9d6a",base0C:"#afc4db",base0D:"#7587a6",base0E:"#9b859d",base0F:"#9b703f"},e.exports=t.default},function(e,t,n){function r(e){var t=Math.round(o(e,0,255)),n=t.toString(16);return 1==n.length?"0"+n:n}var o=n(40);e.exports=function(e){var t=4===e.length?r(255*e[3]):"";return"#"+r(e[0])+r(e[1])+r(e[2])+t}},function(e,t,n){function r(e){for(var t in l)if(0===e.indexOf(t))return l[t](e)}var o=n(152),a=n(153),i=n(154),u=n(155),l={"#":a,hsl:function(e){var t=o(e),n=u(t);return 4===t.length&&n.push(t[3]),n},rgb:i};r.rgb=i,r.hsl=o,r.hex=a,e.exports=r},function(e,t,n){function r(e,t){switch(e=parseFloat(e),t){case 0:return a(e,0,360);case 1:case 2:return a(e,0,100);case 3:return a(e,0,1)}}var o=n(53),a=n(40);e.exports=function(e){return o(e).map(r)}},function(e,t){e.exports=function(e){4!==e.length&&5!==e.length||(e=function(e){for(var t="#",n=1;n<e.length;n++){var r=e.charAt(n);t+=r+r}return t}(e));var t=[parseInt(e.substring(1,3),16),parseInt(e.substring(3,5),16),parseInt(e.substring(5,7),16)];if(9===e.length){var n=parseFloat((parseInt(e.substring(7,9),16)/255).toFixed(2));t.push(n)}return t}},function(e,t,n){function r(e,t){return t<3?-1!=e.indexOf("%")?Math.round(255*a(parseInt(e,10),0,100)/100):a(parseInt(e,10),0,255):a(parseFloat(e),0,1)}var o=n(53),a=n(40);e.exports=function(e){return o(e).map(r)}},function(e,t){e.exports=function(e){var t,n,r,o,a,i=e[0]/360,u=e[1]/100,l=e[2]/100;if(0==u)return[a=255*l,a,a];t=2*l-(n=l<.5?l*(1+u):l+u-l*u),o=[0,0,0];for(var s=0;s<3;s++)(r=i+1/3*-(s-1))<0&&r++,r>1&&r--,a=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[s]=255*a;return o}},function(e,t,n){(function(t){function n(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}function r(e){return g(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?d.call(e):"";return t==i||t==u}(e)}(e)}(e)&&p.call(e,"callee")&&(!y.call(e,"callee")||d.call(e)==a)}(e)||!!(v&&e&&e[v])}var o=9007199254740991,a="[object Arguments]",i="[object Function]",u="[object GeneratorFunction]",l="object"==typeof t&&t&&t.Object===Object&&t,s="object"==typeof self&&self&&self.Object===Object&&self,c=l||s||Function("return this")(),f=Object.prototype,p=f.hasOwnProperty,d=f.toString,h=c.Symbol,y=f.propertyIsEnumerable,v=h?h.isConcatSpreadable:void 0,m=Math.max,g=Array.isArray,b=function(e,t){return t=m(void 0===t?e.length-1:t,0),function(){for(var n=arguments,r=-1,o=m(n.length-t,0),a=Array(o);++r<o;)a[r]=n[t+r];r=-1;for(var i=Array(t+1);++r<t;)i[r]=n[r];return i[t]=a,function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}(e,this,i)}}(function(e){for(var t=(e=function e(t,o,a,i,u){var l=-1,s=t.length;for(a||(a=r),u||(u=[]);++l<s;){var c=t[l];o>0&&a(c)?o>1?e(c,o-1,a,i,u):n(u,c):i||(u[u.length]=c)}return u}(e,1)).length,o=t;o--;)if("function"!=typeof e[o])throw new TypeError("Expected a function");return function(){for(var n=0,r=t?e[n].apply(this,arguments):arguments[0];++n<t;)r=e[n].call(this,r);return r}});e.exports=b}).call(t,n(52))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.yuv2rgb=function(e){var t,n,r,o=e[0],a=e[1],i=e[2];return t=1*o+0*a+1.13983*i,n=1*o+-.39465*a+-.5806*i,r=1*o+2.02311*a+0*i,t=Math.min(Math.max(0,t),1),n=Math.min(Math.max(0,n),1),r=Math.min(Math.max(0,r),1),[255*t,255*n,255*r]},t.rgb2yuv=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[.299*t+.587*n+.114*r,-.14713*t+-.28886*n+.436*r,.615*t+-.51499*n+-.10001*r]}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"date"),u.default.createElement(s.default,o({type_name:"date"},e)),u.default.createElement("span",o({className:"date-value"},(0,f.default)(e.theme,"date-value")),e.value.toLocaleTimeString("en-us",{weekday:"short",year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})))}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"float"),u.default.createElement(s.default,o({type_name:"float"},e)),this.props.value)}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=n(13),d=r(p),h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return y.call(n),n.state={collapsed:d.default.get(e.rjvId,e.namespace,"collapsed",!0)},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=this.state.collapsed;return u.default.createElement("div",(0,f.default)(e.theme,"function"),u.default.createElement(s.default,o({type_name:"function"},e)),u.default.createElement("span",o({},(0,f.default)(e.theme,"function-value"),{className:"rjv-function-container",onClick:this.toggleCollapsed}),this.getFunctionDisplay(t)))}}]),t}(u.default.PureComponent),y=function(){var e=this;this.toggleCollapsed=function(){e.setState({collapsed:!e.state.collapsed},function(){d.default.set(e.props.rjvId,e.props.namespace,"collapsed",e.state.collapsed)})},this.getFunctionDisplay=function(t){var n=e.props;return t?u.default.createElement("span",null,e.props.value.toString().slice(9,-1).replace(/\{[\s\S]+/,""),u.default.createElement("span",{className:"function-collapsed",style:{fontWeight:"bold"}},u.default.createElement("span",null,"{"),u.default.createElement("span",(0,f.default)(n.theme,"ellipsis"),"..."),u.default.createElement("span",null,"}"))):e.props.value.toString().slice(9,-1)}};t.default=h},function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"==typeof e}function o(e){return"object"==typeof e&&null!==e}function a(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!function(e){return"number"==typeof e}(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,i,u,l,s;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}if(a(n=this._events[e]))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:u=Array.prototype.slice.call(arguments,1),n.apply(this,u)}else if(o(n))for(u=Array.prototype.slice.call(arguments,1),s=n.slice(),i=s.length,l=0;l<i;l++)s[l].apply(this,u);return!0},n.prototype.addListener=function(e,t){var i;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(i=a(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&i>0&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){function n(){this.removeListener(e,n),o||(o=!0,t.apply(this,arguments))}if(!r(t))throw TypeError("listener must be a function");var o=!1;return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,t){var n,a,i,u;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,a=-1,n===t||r(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(n)){for(u=i;u-- >0;)if(n[u]===t||n[u].listener&&n[u].listener===t){a=u;break}if(a<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(a,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(r(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){e.exports.Dispatcher=n(163)},function(e,t,n){"use strict";t.__esModule=!0;var r=n(164),o=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this._callbacks={},this._isDispatching=!1,this._isHandled={},this._isPending={},this._lastID=1}return e.prototype.register=function(e){var t="ID_"+this._lastID++;return this._callbacks[t]=e,t},e.prototype.unregister=function(e){this._callbacks[e]||r(!1),delete this._callbacks[e]},e.prototype.waitFor=function(e){this._isDispatching||r(!1);for(var t=0;t<e.length;t++){var n=e[t];this._isPending[n]?this._isHandled[n]||r(!1):(this._callbacks[n]||r(!1),this._invokeCallback(n))}},e.prototype.dispatch=function(e){this._isDispatching&&r(!1),this._startDispatching(e);try{for(var t in this._callbacks)this._isPending[t]||this._invokeCallback(t)}finally{this._stopDispatching()}},e.prototype.isDispatching=function(){return this._isDispatching},e.prototype._invokeCallback=function(e){this._isPending[e]=!0,this._callbacks[e](this._pendingPayload),this._isHandled[e]=!0},e.prototype._startDispatching=function(e){for(var t in this._callbacks)this._isPending[t]=!1,this._isHandled[t]=!1;this._pendingPayload=e,this._isDispatching=!0},e.prototype._stopDispatching=function(){delete this._pendingPayload,this._isDispatching=!1},e}();e.exports=o},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,u,l){if(r(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,a,i,u,l],f=0;(s=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"nan"),"NaN")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"null"),"NULL")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"integer"),u.default.createElement(s.default,o({type_name:"int"},e)),this.props.value)}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(1),f=r(c),p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",(0,f.default)(e.theme,"regexp"),u.default.createElement(s.default,o({type_name:"regexp"},e)),this.props.value.toString())}}]),t}(u.default.PureComponent);t.default=p},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(6),s=r(l),c=n(4),f=n(1),p=r(f),d=n(13),h=r(d),y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggleCollapsed=function(){n.setState({collapsed:!n.state.collapsed},function(){h.default.set(n.props.rjvId,n.props.namespace,"collapsed",n.state.collapsed)})},n.state={collapsed:h.default.get(e.rjvId,e.namespace,"collapsed",!0)},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=(this.state.collapsed,this.props),t=e.collapseStringsAfterLength,n=e.theme,r=e.value,a="integer"===(0,c.toType)(t),i={style:{cursor:"default"}};return a&&r.length>t&&(i.style.cursor="pointer",this.state.collapsed&&(r=u.default.createElement("span",null,r.substring(0,t),u.default.createElement("span",(0,p.default)(n,"ellipsis")," ...")))),u.default.createElement("div",(0,p.default)(n,"string"),u.default.createElement(s.default,o({type_name:"string"},e)),u.default.createElement("span",o({className:"string-value"},i,{onClick:this.toggleCollapsed}),'"',r,'"'))}}]),t}(u.default.PureComponent);t.default=y},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(1),l=r(u),s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){return i.default.createElement("div",(0,l.default)(this.props.theme,"undefined"),"undefined")}}]),t}(i.default.PureComponent);t.default=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(172),s=r(l),c=(n(4),n(14)),f=r(c),p=n(176),d=r(p),h=n(54),y=r(h),v=n(55),m=r(v),g=n(42),b=n(15),w=n(1),x=r(w),_=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return E.call(n),n.state={editMode:!1,editValue:"",renameKey:!1,parsedInput:{type:!1,value:null}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.variable,r=(t.src,t.singleIndent),a=t.type,i=t.theme,l=t.namespace,s=t.indentWidth,c=t.enableClipboard,f=t.onEdit,p=t.onDelete,d=t.onSelect,h=(t.rjvId,this.state.editMode);return u.default.createElement("div",o({},(0,x.default)(i,"objectKeyVal",{paddingLeft:s*r}),{className:"variable-row",key:n.name}),"array"==a?u.default.createElement("span",o({},(0,x.default)(i,"array-key"),{key:n.name+"_"+l}),n.name,u.default.createElement("div",(0,x.default)(i,"colon"),":")):u.default.createElement("span",null,u.default.createElement("span",o({},(0,x.default)(i,"object-name"),{className:"object-key",key:n.name+"_"+l}),u.default.createElement("span",{style:{verticalAlign:"top"}},'"'),u.default.createElement("span",{style:{display:"inline-block"}},n.name),u.default.createElement("span",{style:{verticalAlign:"top"}},'"')),u.default.createElement("span",(0,x.default)(i,"colon"),":")),u.default.createElement("div",o({className:"variable-value",onClick:!1===d&&!1===f?null:function(t){var r=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(l));(t.ctrlKey||t.metaKey)&&!1!==f?e.prepopInput(n):!1!==d&&(r.shift(),d(o({},n,{namespace:r})))}},(0,x.default)(i,"variableValue",{cursor:!1===d?"default":"pointer"})),this.getValue(n,h)),c?u.default.createElement(m.default,o({hidden:h,src:n.value,clickCallback:c},{theme:i,namespace:l})):null,!1!==f&&0==h?this.getEditIcon():null,!1!==p&&0==h?this.getRemoveIcon():null)}}]),t}(u.default.PureComponent),E=function(){var e=this;this.getEditIcon=function(){var t=e.props,n=t.variable,r=t.theme;return u.default.createElement("div",{className:"click-to-edit",style:{verticalAlign:"top"}},u.default.createElement(b.Edit,o({className:"click-to-edit-icon"},(0,x.default)(r,"editVarIcon"),{onClick:function(){e.prepopInput(n)}})))},this.prepopInput=function(t){if(!1!==e.props.onEdit){var n=(0,y.default)(t.value),r=(0,d.default)(n);e.setState({editMode:!0,editValue:n,parsedInput:{type:r.type,value:r.value}})}},this.getRemoveIcon=function(){var t=e.props,n=t.variable,r=t.namespace,a=t.theme,i=t.rjvId;return u.default.createElement("div",{className:"click-to-remove",style:{verticalAlign:"top"}},u.default.createElement(b.RemoveCircle,o({className:"click-to-remove-icon"},(0,x.default)(a,"removeVarIcon"),{onClick:function(){f.default.dispatch({name:"VARIABLE_REMOVED",rjvId:i,data:{name:n.name,namespace:r,existing_value:n.value,variable_removed:!0}})}})))},this.getValue=function(t,n){var r=!n&&t.type,a=e.props;switch(r){case!1:return e.getEditInput();case"string":return u.default.createElement(g.JsonString,o({value:t.value},a));case"integer":return u.default.createElement(g.JsonInteger,o({value:t.value},a));case"float":return u.default.createElement(g.JsonFloat,o({value:t.value},a));case"boolean":return u.default.createElement(g.JsonBoolean,o({value:t.value},a));case"function":return u.default.createElement(g.JsonFunction,o({value:t.value},a));case"null":return u.default.createElement(g.JsonNull,a);case"nan":return u.default.createElement(g.JsonNan,a);case"undefined":return u.default.createElement(g.JsonUndefined,a);case"date":return u.default.createElement(g.JsonDate,o({value:t.value},a));case"regexp":return u.default.createElement(g.JsonRegexp,o({value:t.value},a));default:return u.default.createElement("div",{className:"object-value"},JSON.stringify(t.value))}},this.getEditInput=function(){var t=e.props.theme,n=e.state.editValue;return u.default.createElement("div",null,u.default.createElement(s.default,o({type:"text",inputRef:function(e){return e&&e.focus()},value:n,className:"variable-editor",onChange:function(t){var n=t.target.value,r=(0,d.default)(n);e.setState({editValue:n,parsedInput:{type:r.type,value:r.value}})},onKeyDown:function(t){switch(t.key){case"Escape":e.setState({editMode:!1,editValue:""});break;case"Enter":(t.ctrlKey||t.metaKey)&&e.submitEdit(!0)}t.stopPropagation()},placeholder:"update this value"},(0,x.default)(t,"edit-input"))),u.default.createElement("div",(0,x.default)(t,"edit-icon-container"),u.default.createElement(b.RemoveCircle,o({className:"edit-cancel"},(0,x.default)(t,"cancel-icon"),{onClick:function(){e.setState({editMode:!1,editValue:""})}})),u.default.createElement(b.CheckCircle,o({className:"edit-check string-value"},(0,x.default)(t,"check-icon"),{onClick:function(){e.submitEdit()}})),u.default.createElement("div",null,e.showDetected())))},this.submitEdit=function(t){var n=e.props,r=n.variable,o=n.namespace,a=n.rjvId,i=e.state,u=i.editValue,l=i.parsedInput,s=u;t&&l.type&&(s=l.value),e.setState({editMode:!1}),f.default.dispatch({name:"VARIABLE_UPDATED",rjvId:a,data:{name:r.name,namespace:o,existing_value:r.value,new_value:s,variable_removed:!1}})},this.showDetected=function(){var t=e.props,n=t.theme,r=(t.variable,t.namespace,t.rjvId,e.state.parsedInput),a=(r.type,r.value,e.getDetectedInput());if(a)return u.default.createElement("div",null,u.default.createElement("div",(0,x.default)(n,"detected-row"),a,u.default.createElement(b.CheckCircle,{className:"edit-check detected",style:o({verticalAlign:"top",paddingLeft:"3px"},(0,x.default)(n,"check-icon").style),onClick:function(){e.submitEdit(!0)}})))},this.getDetectedInput=function(){var t=e.state.parsedInput,n=t.type,r=t.value,a=e.props,i=a.theme;if(!1!==n)switch(n.toLowerCase()){case"object":return u.default.createElement("span",null,u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"{"),u.default.createElement("span",{style:o({},(0,x.default)(i,"ellipsis").style,{cursor:"default"})},"..."),u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"}"));case"array":return u.default.createElement("span",null,u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"["),u.default.createElement("span",{style:o({},(0,x.default)(i,"ellipsis").style,{cursor:"default"})},"..."),u.default.createElement("span",{style:o({},(0,x.default)(i,"brace").style,{cursor:"default"})},"]"));case"string":return u.default.createElement(g.JsonString,o({value:r},a));case"integer":return u.default.createElement(g.JsonInteger,o({value:r},a));case"float":return u.default.createElement(g.JsonFloat,o({value:r},a));case"boolean":return u.default.createElement(g.JsonBoolean,o({value:r},a));case"function":return u.default.createElement(g.JsonFunction,o({value:r},a));case"null":return u.default.createElement(g.JsonNull,a);case"nan":return u.default.createElement(g.JsonNan,a);case"undefined":return u.default.createElement(g.JsonUndefined,a);case"date":return u.default.createElement(g.JsonDate,o({value:new Date(r)},a))}}};t.default=_},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t,n,r,o){void 0===n&&(n=!1),void 0===r&&(r=null),void 0===o&&(o=null),null===y.parentNode&&document.body.appendChild(y);var i=a(e,t,n);if(null===i)return null;var u=i.paddingSize,l=i.borderSize,s=i.boxSizing,c=i.sizingStyle;Object.keys(c).forEach(function(e){y.style[e]=c[e]}),v(y),y.value=e.value||e.placeholder||"x";var f=-1/0,p=1/0,d=y.scrollHeight;"border-box"===s?d+=l:"content-box"===s&&(d-=u),y.value="x";var h=y.scrollHeight-u;return null===r&&null===o||(null!==r&&(f=h*r,"border-box"===s&&(f=f+u+l),d=Math.max(f,d)),null!==o&&(p=h*o,"border-box"===s&&(p=p+u+l),d=Math.min(p,d))),{height:d,minHeight:f,maxHeight:p,rowCount:Math.floor(d/h)}}function a(e,t,n){if(void 0===n&&(n=!1),n&&h[t])return h[t];var r=window.getComputedStyle(e);if(null===r)return null;var o=d.reduce(function(e,t){return e[t]=r.getPropertyValue(t),e},{}),a=o["box-sizing"];if(""===a)return null;f&&"border-box"===a&&(o.width=parseFloat(o.width)+parseFloat(r["border-right-width"])+parseFloat(r["border-left-width"])+parseFloat(r["padding-right"])+parseFloat(r["padding-left"])+"px");var i=parseFloat(o["padding-bottom"])+parseFloat(o["padding-top"]),u=parseFloat(o["border-bottom-width"])+parseFloat(o["border-top-width"]),l={sizingStyle:o,paddingSize:i,borderSize:u,boxSizing:a};return n&&(h[t]=l),l}Object.defineProperty(t,"__esModule",{value:!0});var i=n(0),u=n.n(i),l=n(173),s=n.n(l),c=(Object.setPrototypeOf,"object"==typeof Reflect&&Reflect.construct,"undefined"!=typeof window&&"undefined"!=typeof document),f=!!c&&!!document.documentElement.currentStyle,p={"min-height":"0","max-height":"none",height:"0",visibility:"hidden",overflow:"hidden",position:"absolute","z-index":"-1000",top:"0",right:"0"},d=["letter-spacing","line-height","font-family","font-weight","font-size","font-style","tab-size","text-rendering","text-transform","width","text-indent","padding-top","padding-right","padding-bottom","padding-left","border-top-width","border-right-width","border-bottom-width","border-left-width","box-sizing"],h={},y=c&&document.createElement("textarea"),v=function(e){Object.keys(p).forEach(function(t){e.style.setProperty(t,p[t],"important")})};c&&v(y);var m=function(e){return void 0===e&&(e=0),function(){return++e}}(),g=function(){},b=c&&window.requestAnimationFrame?[window.requestAnimationFrame,window.cancelAnimationFrame]:[setTimeout,clearTimeout],w=b[0],x=b[1],_=function(e){function t(t){var n;return(n=e.call(this,t)||this)._resizeLock=!1,n._onRootDOMNode=function(e){n._rootDOMNode=e,n.props.inputRef(e)},n._onChange=function(e){n._controlled||n._resizeComponent(),n.props.onChange(e)},n._resizeComponent=function(e){if(void 0===e&&(e=g),void 0!==n._rootDOMNode){var t=o(n._rootDOMNode,n._uid,n.props.useCacheForDOMMeasurements,n.props.minRows,n.props.maxRows);if(null!==t){var r=t.height,a=t.minHeight,i=t.maxHeight,u=t.rowCount;n.rowCount=u,n.state.height===r&&n.state.minHeight===a&&n.state.maxHeight===i?e():n.setState({height:r,minHeight:a,maxHeight:i},e)}else e()}else e()},n.state={height:t.style&&t.style.height||0,minHeight:-1/0,maxHeight:1/0},n._uid=m(),n._controlled="string"==typeof t.value,n}!function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}(t,e);var n=t.prototype;return n.render=function(){var e=this.props,t=(e.inputRef,e.maxRows,e.minRows,e.onHeightChange,e.useCacheForDOMMeasurements,function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,["inputRef","maxRows","minRows","onHeightChange","useCacheForDOMMeasurements"]));return t.style=r({},t.style,{height:this.state.height}),Math.max(t.style.maxHeight||1/0,this.state.maxHeight)<this.state.height&&(t.style.overflow="hidden"),u.a.createElement("textarea",r({},t,{onChange:this._onChange,ref:this._onRootDOMNode}))},n.componentDidMount=function(){var e=this;this._resizeComponent(),this._resizeListener=function(){e._resizeLock||(e._resizeLock=!0,e._resizeComponent(function(){return e._resizeLock=!1}))},window.addEventListener("resize",this._resizeListener)},n.componentDidUpdate=function(e,t){var n=this;e!==this.props&&(this._clearNextFrame(),this._onNextFrameActionId=w(function(){return n._resizeComponent()})),this.state.height!==t.height&&this.props.onHeightChange(this.state.height,this)},n.componentWillUnmount=function(){var e;this._clearNextFrame(),window.removeEventListener("resize",this._resizeListener),e=this._uid,delete h[e]},n._clearNextFrame=function(){x(this._onNextFrameActionId)},t}(u.a.Component);_.propTypes={inputRef:s.a.func,maxRows:s.a.number,minRows:s.a.number,onChange:s.a.func,onHeightChange:s.a.func,useCacheForDOMMeasurements:s.a.bool,value:s.a.string},_.defaultProps={inputRef:g,onChange:g,onHeightChange:g,useCacheForDOMMeasurements:!1},t.default=_},function(e,t,n){e.exports=n(174)()},function(e,t,n){"use strict";function r(){}var o=n(175);e.exports=function(){function e(e,t,n,r,a,i){if(i!==o){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function r(e,t){return{type:e,value:t}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){e=e.trim();try{if("["===(e=JSON.stringify(JSON.parse(e)))[0])return r("array",JSON.parse(e));if("{"===e[0])return r("object",JSON.parse(e));if(e.match(/\-?\d+\.\d+/)&&e.match(/\-?\d+\.\d+/)[0]===e)return r("float",parseFloat(e));if(e.match(/\-?\d+/)&&e.match(/\-?\d+/)[0]===e)return r("integer",parseInt(e))}catch(e){}switch(e=e.toLowerCase()){case"undefined":return r("undefined",void 0);case"nan":return r("nan",NaN);case"null":return r("null",null);case"true":return r("boolean",!0);case"false":return r("boolean",!1);default:if(e=Date.parse(e))return r("date",new Date(e))}return r(!1,null)}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(14),c=r(s),f=n(13),p=r(f),d=n(178),h=r(d),y=n(1),v=(r(y),function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,u=Array(i),l=0;l<i;l++)u[l]=arguments[l];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.isValid=function(e){var t=r.props.rjvId,n=p.default.get(t,"action","new-key-request");return""!=e&&-1===Object.keys(n.existing_value).indexOf(e)},r.submit=function(e){var t=r.props.rjvId,n=p.default.get(t,"action","new-key-request");n.new_value=a({},n.existing_value),n.new_value[e]=r.props.defaultValue,c.default.dispatch({name:"VARIABLE_ADDED",rjvId:t,data:n})},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.active,n=e.theme,r=e.rjvId;return t?l.default.createElement(h.default,{rjvId:r,theme:n,isValid:this.isValid,submit:this.submit}):null}}]),t}(l.default.PureComponent));t.default=v},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(14),s=r(l),c=n(15),f=n(1),p=r(f),d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.closeModal=function(){s.default.dispatch({rjvId:n.props.rjvId,name:"RESET"})},n.submit=function(){n.props.submit(n.state.input)},n.state={input:e.input?e.input:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.theme,r=t.rjvId,a=t.isValid,i=this.state.input,l=a(i);return u.default.createElement("div",o({className:"key-modal-request"},(0,p.default)(n,"key-modal-request"),{onClick:this.closeModal}),u.default.createElement("div",o({},(0,p.default)(n,"key-modal"),{onClick:function(e){e.stopPropagation()}}),u.default.createElement("div",(0,p.default)(n,"key-modal-label"),"Key Name:"),u.default.createElement("div",{style:{position:"relative"}},u.default.createElement("input",o({},(0,p.default)(n,"key-modal-input"),{className:"key-modal-input",ref:function(e){return e&&e.focus()},spellCheck:!1,value:i,placeholder:"...",onChange:function(t){e.setState({input:t.target.value})},onKeyPress:function(t){l&&"Enter"===t.key?e.submit():"Escape"===t.key&&e.closeModal()}})),l?u.default.createElement(c.CheckCircle,o({},(0,p.default)(n,"key-modal-submit"),{className:"key-modal-submit",onClick:function(t){return e.submit()}})):null),u.default.createElement("span",(0,p.default)(n,"key-modal-cancel"),u.default.createElement(c.Add,o({},(0,p.default)(n,"key-modal-cancel-icon"),{className:"key-modal-cancel",onClick:function(){s.default.dispatch({rjvId:r,name:"RESET"})}})))))}}]),t}(u.default.PureComponent);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(14),s=r(l),c=n(13),f=(r(c),n(15)),p=n(1),d=r(p),h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=e.message,n=e.active,r=e.theme,a=e.rjvId;return n?u.default.createElement("div",o({className:"validation-failure"},(0,d.default)(r,"validation-failure"),{onClick:function(){s.default.dispatch({rjvId:a,name:"RESET"})}}),u.default.createElement("span",(0,d.default)(r,"validation-failure-label"),t),u.default.createElement(f.Add,(0,d.default)(r,"validation-failure-clear"))):null}}]),t}(u.default.PureComponent);t.default=h},function(e,t,n){var r=n(181);"string"==typeof r&&(r=[[e.i,r,""]]);var o={transform:void 0};n(183)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(182)(!1)).push([e.i,".react-json-view .copy-to-clipboard-container{vertical-align:top;display:none}.react-json-view .click-to-add,.react-json-view .click-to-edit,.react-json-view .click-to-remove{display:none}.react-json-view .object-content .variable-row:hover .click-to-edit,.react-json-view .object-content .variable-row:hover .click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-add,.react-json-view .object-key-val:hover>span>.object-meta-data>.click-to-remove,.react-json-view .object-key-val:hover>span>.object-meta-data>.copy-to-clipboard-container,.react-json-view .variable-row:hover .copy-to-clipboard-container{display:inline-block}",""])},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([o]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=p[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(c(r.parts[a],t))}else{for(var i=[],a=0;a<r.parts.length;a++)i.push(c(r.parts[a],t));p[r.id]={id:r.id,refs:1,parts:i}}}}function o(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],u=a[1],l=a[2],s=a[3],c={css:u,media:l,sourceMap:s};r[i]?r[i].parts.push(c):n.push(r[i]={id:i,parts:[c]})}return n}function a(e,t){var n=h(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=m[m.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),m.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=m.indexOf(e);t>=0&&m.splice(t,1)}function u(e){var t=document.createElement("style");return e.attrs.type="text/css",s(t,e.attrs),a(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",s(t,e.attrs),a(e,t),t}function s(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var s=v++;n=y||(y=u(t)),r=f.bind(null,n,s,!1),o=f.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=g(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(i),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){i(n),n.href&&URL.revokeObjectURL(n.href)}):(n=u(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){i(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function f(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=b(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}var p={},d=function(e){var t;return function(){return void 0===t&&(t=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),t}}(),h=function(e){var t={};return function(e){return void 0===t[e]&&(t[e]=function(e){return document.querySelector(e)}.call(this,e)),t[e]}}(),y=null,v=0,m=[],g=n(184);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=d()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=o(e,t);return r(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var u=n[i],l=p[u.id];l.refs--,a.push(l)}e&&r(o(e,t),t);for(var i=0;i<a.length;i++){var l=a[i];if(0===l.refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete p[l.id]}}}};var b=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}}]))},function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,a=/zoo|gra/,i=/([,: ])(transform)/g,u=/,+\s*(?![^(]*[)])/g,l=/ +\s*(?![^(]*[)])/g,s=/ *[\0] */g,c=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,h=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,v=/:(read-only)/g,m=/\s+(?=[{\];=:>])/g,g=/([[}=:>])\s+/g,b=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,x=/([^\(])(:+) */g,_=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,k=/([\s\S]*?);/g,S=/-self|flex-/g,C=/[^]*?(:[rp][el]a[\w-]+)[^]*/,O=/stretch|:\s*\w+\-(?:conte|avail)/,M=/([^-])(image-set\()/,T="-webkit-",j="-moz-",P="-ms-",A=59,N=125,R=123,D=40,I=41,L=91,z=93,F=10,U=13,B=9,q=64,V=32,W=38,H=45,$=95,Y=42,K=44,G=58,J=39,Q=34,X=47,Z=62,ee=43,te=126,ne=0,re=12,oe=11,ae=107,ie=109,ue=115,le=112,se=111,ce=105,fe=99,pe=100,de=112,he=1,ye=1,ve=0,me=1,ge=1,be=1,we=0,xe=0,_e=0,Ee=[],ke=[],Se=0,Ce=null,Oe=-2,Me=-1,Te=0,je=1,Pe=2,Ae=3,Ne=0,Re=1,De="",Ie="",Le="";function ze(e,t,o,a,i){for(var u,l,c=0,f=0,p=0,d=0,m=0,g=0,b=0,w=0,_=0,k=0,S=0,C=0,O=0,M=0,$=0,we=0,ke=0,Ce=0,Oe=0,Me=o.length,Ue=Me-1,$e="",Ye="",Ke="",Ge="",Je="",Qe="";$<Me;){if(b=o.charCodeAt($),$===Ue&&f+d+p+c!==0&&(0!==f&&(b=f===X?F:X),d=p=c=0,Me++,Ue++),f+d+p+c===0){if($===Ue&&(we>0&&(Ye=Ye.replace(r,"")),Ye.trim().length>0)){switch(b){case V:case B:case A:case U:case F:break;default:Ye+=o.charAt($)}b=A}if(1===ke)switch(b){case R:case N:case A:case Q:case J:case D:case I:case K:ke=0;case B:case U:case F:case V:break;default:for(ke=0,Oe=$,m=b,$--,b=A;Oe<Me;)switch(o.charCodeAt(Oe++)){case F:case U:case A:++$,b=m,Oe=Me;break;case G:we>0&&(++$,b=m);case R:Oe=Me}}switch(b){case R:for(m=(Ye=Ye.trim()).charCodeAt(0),S=1,Oe=++$;$<Me;){switch(b=o.charCodeAt($)){case R:S++;break;case N:S--;break;case X:switch(g=o.charCodeAt($+1)){case Y:case X:$=He(g,$,Ue,o)}break;case L:b++;case D:b++;case Q:case J:for(;$++<Ue&&o.charCodeAt($)!==b;);}if(0===S)break;$++}switch(Ke=o.substring(Oe,$),m===ne&&(m=(Ye=Ye.replace(n,"").trim()).charCodeAt(0)),m){case q:switch(we>0&&(Ye=Ye.replace(r,"")),g=Ye.charCodeAt(1)){case pe:case ie:case ue:case H:u=t;break;default:u=Ee}if(Oe=(Ke=ze(t,u,Ke,g,i+1)).length,_e>0&&0===Oe&&(Oe=Ye.length),Se>0&&(u=Fe(Ee,Ye,Ce),l=We(Ae,Ke,u,t,ye,he,Oe,g,i,a),Ye=u.join(""),void 0!==l&&0===(Oe=(Ke=l.trim()).length)&&(g=0,Ke="")),Oe>0)switch(g){case ue:Ye=Ye.replace(E,Ve);case pe:case ie:case H:Ke=Ye+"{"+Ke+"}";break;case ae:Ke=(Ye=Ye.replace(h,"$1 $2"+(Re>0?De:"")))+"{"+Ke+"}",Ke=1===ge||2===ge&&qe("@"+Ke,3)?"@"+T+Ke+"@"+Ke:"@"+Ke;break;default:Ke=Ye+Ke,a===de&&(Ge+=Ke,Ke="")}else Ke="";break;default:Ke=ze(t,Fe(t,Ye,Ce),Ke,a,i+1)}Je+=Ke,C=0,ke=0,M=0,we=0,Ce=0,O=0,Ye="",Ke="",b=o.charCodeAt(++$);break;case N:case A:if((Oe=(Ye=(we>0?Ye.replace(r,""):Ye).trim()).length)>1)switch(0===M&&((m=Ye.charCodeAt(0))===H||m>96&&m<123)&&(Oe=(Ye=Ye.replace(" ",":")).length),Se>0&&void 0!==(l=We(je,Ye,t,e,ye,he,Ge.length,a,i,a))&&0===(Oe=(Ye=l.trim()).length)&&(Ye="\0\0"),m=Ye.charCodeAt(0),g=Ye.charCodeAt(1),m){case ne:break;case q:if(g===ce||g===fe){Qe+=Ye+o.charAt($);break}default:if(Ye.charCodeAt(Oe-1)===G)break;Ge+=Be(Ye,m,g,Ye.charCodeAt(2))}C=0,ke=0,M=0,we=0,Ce=0,Ye="",b=o.charCodeAt(++$)}}switch(b){case U:case F:if(f+d+p+c+xe===0)switch(k){case I:case J:case Q:case q:case te:case Z:case Y:case ee:case X:case H:case G:case K:case A:case R:case N:break;default:M>0&&(ke=1)}f===X?f=0:me+C===0&&a!==ae&&Ye.length>0&&(we=1,Ye+="\0"),Se*Ne>0&&We(Te,Ye,t,e,ye,he,Ge.length,a,i,a),he=1,ye++;break;case A:case N:if(f+d+p+c===0){he++;break}default:switch(he++,$e=o.charAt($),b){case B:case V:if(d+c+f===0)switch(w){case K:case G:case B:case V:$e="";break;default:b!==V&&($e=" ")}break;case ne:$e="\\0";break;case re:$e="\\f";break;case oe:$e="\\v";break;case W:d+f+c===0&&me>0&&(Ce=1,we=1,$e="\f"+$e);break;case 108:if(d+f+c+ve===0&&M>0)switch($-M){case 2:w===le&&o.charCodeAt($-3)===G&&(ve=w);case 8:_===se&&(ve=_)}break;case G:d+f+c===0&&(M=$);break;case K:f+p+d+c===0&&(we=1,$e+="\r");break;case Q:case J:0===f&&(d=d===b?0:0===d?b:d);break;case L:d+f+p===0&&c++;break;case z:d+f+p===0&&c--;break;case I:d+f+c===0&&p--;break;case D:if(d+f+c===0){if(0===C)switch(2*w+3*_){case 533:break;default:S=0,C=1}p++}break;case q:f+p+d+c+M+O===0&&(O=1);break;case Y:case X:if(d+c+p>0)break;switch(f){case 0:switch(2*b+3*o.charCodeAt($+1)){case 235:f=X;break;case 220:Oe=$,f=Y}break;case Y:b===X&&w===Y&&Oe+2!==$&&(33===o.charCodeAt(Oe+2)&&(Ge+=o.substring(Oe,$+1)),$e="",f=0)}}if(0===f){if(me+d+c+O===0&&a!==ae&&b!==A)switch(b){case K:case te:case Z:case ee:case I:case D:if(0===C){switch(w){case B:case V:case F:case U:$e+="\0";break;default:$e="\0"+$e+(b===K?"":"\0")}we=1}else switch(b){case D:M+7===$&&108===w&&(M=0),C=++S;break;case I:0==(C=--S)&&(we=1,$e+="\0")}break;case B:case V:switch(w){case ne:case R:case N:case A:case K:case re:case B:case V:case F:case U:break;default:0===C&&(we=1,$e+="\0")}}Ye+=$e,b!==V&&b!==B&&(k=b)}}_=w,w=b,$++}if(Oe=Ge.length,_e>0&&0===Oe&&0===Je.length&&0===t[0].length==0&&(a!==ie||1===t.length&&(me>0?Ie:Le)===t[0])&&(Oe=t.join(",").length+2),Oe>0){if(u=0===me&&a!==ae?function(e){for(var t,n,o=0,a=e.length,i=Array(a);o<a;++o){for(var u=e[o].split(s),l="",c=0,f=0,p=0,d=0,h=u.length;c<h;++c)if(!(0===(f=(n=u[c]).length)&&h>1)){if(p=l.charCodeAt(l.length-1),d=n.charCodeAt(0),t="",0!==c)switch(p){case Y:case te:case Z:case ee:case V:case D:break;default:t=" "}switch(d){case W:n=t+Ie;case te:case Z:case ee:case V:case I:case D:break;case L:n=t+n+Ie;break;case G:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(be>0){n=t+n.substring(8,f-1);break}default:(c<1||u[c-1].length<1)&&(n=t+Ie+n)}break;case K:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(x,"$1"+Ie+"$2"):t+n+Ie}l+=n}i[o]=l.replace(r,"").trim()}return i}(t):t,Se>0&&void 0!==(l=We(Pe,Ge,u,e,ye,he,Oe,a,i,a))&&0===(Ge=l).length)return Qe+Ge+Je;if(Ge=u.join(",")+"{"+Ge+"}",ge*ve!=0){switch(2!==ge||qe(Ge,2)||(ve=0),ve){case se:Ge=Ge.replace(v,":"+j+"$1")+Ge;break;case le:Ge=Ge.replace(y,"::"+T+"input-$1")+Ge.replace(y,"::"+j+"$1")+Ge.replace(y,":"+P+"input-$1")+Ge}ve=0}}return Qe+Ge+Je}function Fe(e,t,n){var r=t.trim().split(c),o=r,a=r.length,i=e.length;switch(i){case 0:case 1:for(var u=0,l=0===i?"":e[0]+" ";u<a;++u)o[u]=Ue(l,o[u],n,i).trim();break;default:u=0;var s=0;for(o=[];u<a;++u)for(var f=0;f<i;++f)o[s++]=Ue(e[f]+" ",r[u],n,i).trim()}return o}function Ue(e,t,n,r){var o=t,a=o.charCodeAt(0);switch(a<33&&(a=(o=o.trim()).charCodeAt(0)),a){case W:switch(me+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(f,"$1"+e.trim())}break;case G:switch(o.charCodeAt(1)){case 103:if(be>0&&me>0)return o.replace(p,"$1").replace(f,"$1"+Le);break;default:return e.trim()+o.replace(f,"$1"+e.trim())}default:if(n*me>0&&o.indexOf("\f")>0)return o.replace(f,(e.charCodeAt(0)===G?"":"$1")+e.trim())}return e+o}function Be(e,t,n,r){var s,c=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Re){case 0:break;case H:if(110!==e.charCodeAt(10))break;default:for(var a=o.split((o="",u)),i=0,n=0,t=a.length;i<t;n=0,++i){for(var s=a[i],c=s.split(l);s=c[n];){var f=s.charCodeAt(0);if(1===Re&&(f>q&&f<90||f>96&&f<123||f===$||f===H&&s.charCodeAt(1)!==H))switch(isNaN(parseFloat(s))+(-1!==s.indexOf("("))){case 1:switch(s){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:s+=De}}c[n++]=s}o+=(0===i?"":",")+c.join(" ")}}return o=r+o+";",1===ge||2===ge&&qe(o,1)?T+o+o:o}(f);if(0===ge||2===ge&&!qe(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?T+f+f:f;case 951:return 116===f.charCodeAt(3)?T+f+f:f;case 963:return 110===f.charCodeAt(5)?T+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return T+f+f;case 978:return T+f+j+f+f;case 1019:case 983:return T+f+j+f+P+f+f;case 883:return f.charCodeAt(8)===H?T+f+f:f.indexOf("image-set(",11)>0?f.replace(M,"$1"+T+"$2")+f:f;case 932:if(f.charCodeAt(4)===H)switch(f.charCodeAt(5)){case 103:return T+"box-"+f.replace("-grow","")+T+f+P+f.replace("grow","positive")+f;case 115:return T+f+P+f.replace("shrink","negative")+f;case 98:return T+f+P+f.replace("basis","preferred-size")+f}return T+f+P+f+f;case 964:return T+f+P+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return s=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),T+"box-pack"+s+T+f+P+"flex-pack"+s+f;case 1005:return a.test(f)?f.replace(o,":"+T)+f.replace(o,":"+j)+f:f;case 1e3:switch(c=(s=f.substring(13).trim()).indexOf("-")+1,s.charCodeAt(0)+s.charCodeAt(c)){case 226:s=f.replace(_,"tb");break;case 232:s=f.replace(_,"tb-rl");break;case 220:s=f.replace(_,"lr");break;default:return f}return T+f+P+s+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(c=(f=e).length-10,p=(s=(33===f.charCodeAt(c)?f.substring(0,c):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|s.charCodeAt(7))){case 203:if(s.charCodeAt(8)<111)break;case 115:f=f.replace(s,T+s)+";"+f;break;case 207:case 102:f=f.replace(s,T+(p>102?"inline-":"")+"box")+";"+f.replace(s,T+s)+";"+f.replace(s,P+s+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===H)switch(f.charCodeAt(6)){case 105:return s=f.replace("-items",""),T+f+T+"box-"+s+P+"flex-"+s+f;case 115:return T+f+P+"flex-item-"+f.replace(S,"")+f;default:return T+f+P+"flex-line-pack"+f.replace("align-content","").replace(S,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==H||122===f.charCodeAt(4))break;case 931:case 953:if(!0===O.test(e))return 115===(s=e.substring(e.indexOf(":")+1)).charCodeAt(0)?Be(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(s,T+s)+f.replace(s,j+s.replace("fill-",""))+f;break;case 962:if(f=T+f+(102===f.charCodeAt(5)?P+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(i,"$1"+T+"$2")+f}return f}function qe(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Ce(2!==t?r:r.replace(C,"$1"),o,t)}function Ve(e,t){var n=Be(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(k," or ($1)").substring(4):"("+t+")"}function We(e,t,n,r,o,a,i,u,l,s){for(var c,f=0,p=t;f<Se;++f)switch(c=ke[f].call(Ye,e,p,n,r,o,a,i,u,l,s)){case void 0:case!1:case!0:case null:break;default:p=c}if(p!==t)return p}function He(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case X:if(e===Y&&r.charCodeAt(o-1)===Y&&t+2!==o)return o+1;break;case F:if(e===X)return o+1}return o}function $e(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Re=0|n;break;case"global":be=0|n;break;case"cascade":me=0|n;break;case"compress":we=0|n;break;case"semicolon":xe=0|n;break;case"preserve":_e=0|n;break;case"prefix":Ce=null,n?"function"!=typeof n?ge=1:(ge=2,Ce=n):ge=0}}return $e}function Ye(t,n){if(void 0!==this&&this.constructor===Ye)return e(t);var o=t,a=o.charCodeAt(0);a<33&&(a=(o=o.trim()).charCodeAt(0)),Re>0&&(De=o.replace(d,a===L?"":"-")),a=1,1===me?Le=o:Ie=o;var i,u=[Le];Se>0&&void 0!==(i=We(Me,n,u,u,ye,he,0,0,0,0))&&"string"==typeof i&&(n=i);var l=ze(Ee,u,n,0,0);return Se>0&&void 0!==(i=We(Oe,l,u,u,ye,he,l.length,0,0,0))&&"string"!=typeof(l=i)&&(a=0),De="",Le="",Ie="",ve=0,ye=1,he=1,we*a==0?l:l.replace(r,"").replace(m,"").replace(g,"$1").replace(b,"$1").replace(w," ")}return Ye.use=function e(t){switch(t){case void 0:case null:Se=ke.length=0;break;default:if("function"==typeof t)ke[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Ne=0|!!t}return e},Ye.set=$e,void 0!==t&&$e(t),Ye}(null)},function(e,t,n){"use strict";var r=function(e,t){return e===t};t.a=function(e,t){var n;void 0===t&&(t=r);var o,a=[],i=!1,u=function(e,n){return t(e,a[n])};return function(){for(var t=arguments.length,r=new Array(t),l=0;l<t;l++)r[l]=arguments[l];return i&&n===this&&r.length===a.length&&r.every(u)?o:(o=e.apply(this,r),i=!0,n=this,a=r,o)}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var s in n=Object(arguments[l]))o.call(n,s)&&(u[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(u[i[c]]=n[i[c]])}}return u}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(n){var r=new Uint8Array(16);e.exports=function(){return n(r),r}}else{var o=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),o[t]=e>>>((3&t)<<3)&255;return o}}},function(e,t){for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);e.exports=function(e,t){var r=t||0,o=n;return[o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]]].join("")}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=l(n(41)),a=l(n(0)),i=l(n(2)),u=(l(n(42)),n(43));function l(e){return e&&e.__esModule?e:{default:e}}i.default.any,i.default.func,i.default.node;var s=function(e){function t(n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,n,o));return a.performAppear=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillAppear?t.componentWillAppear(a._handleDoneAppearing.bind(a,e,t)):a._handleDoneAppearing(e,t)},a._handleDoneAppearing=function(e,t){t.componentDidAppear&&t.componentDidAppear(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)||a.performLeave(e,t)},a.performEnter=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillEnter?t.componentWillEnter(a._handleDoneEntering.bind(a,e,t)):a._handleDoneEntering(e,t)},a._handleDoneEntering=function(e,t){t.componentDidEnter&&t.componentDidEnter(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)||a.performLeave(e,t)},a.performLeave=function(e,t){a.currentlyTransitioningKeys[e]=!0,t.componentWillLeave?t.componentWillLeave(a._handleDoneLeaving.bind(a,e,t)):a._handleDoneLeaving(e,t)},a._handleDoneLeaving=function(e,t){t.componentDidLeave&&t.componentDidLeave(),delete a.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(a.props.children);n&&n.hasOwnProperty(e)?a.keysToEnter.push(e):a.setState(function(t){var n=r({},t.children);return delete n[e],{children:n}})},a.childRefs=Object.create(null),a.state={children:(0,u.getChildMapping)(n.children)},a}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},t.prototype.componentDidMount=function(){var e=this.state.children;for(var t in e)e[t]&&this.performAppear(t,this.childRefs[t])},t.prototype.componentWillReceiveProps=function(e){var t=(0,u.getChildMapping)(e.children),n=this.state.children;for(var r in this.setState({children:(0,u.mergeChildMappings)(n,t)}),t){var o=n&&n.hasOwnProperty(r);!t[r]||o||this.currentlyTransitioningKeys[r]||this.keysToEnter.push(r)}for(var a in n){var i=t&&t.hasOwnProperty(a);!n[a]||i||this.currentlyTransitioningKeys[a]||this.keysToLeave.push(a)}},t.prototype.componentDidUpdate=function(){var e=this,t=this.keysToEnter;this.keysToEnter=[],t.forEach(function(t){return e.performEnter(t,e.childRefs[t])});var n=this.keysToLeave;this.keysToLeave=[],n.forEach(function(t){return e.performLeave(t,e.childRefs[t])})},t.prototype.render=function(){var e=this,t=[],n=function(n){var r=e.state.children[n];if(r){var i="string"!=typeof r.ref,u=e.props.childFactory(r),l=function(t){e.childRefs[n]=t};u===r&&i&&(l=(0,o.default)(r.ref,l)),t.push(a.default.cloneElement(u,{key:n,ref:l}))}};for(var i in this.state.children)n(i);var u=r({},this.props);return delete u.transitionLeave,delete u.transitionName,delete u.transitionAppear,delete u.transitionEnter,delete u.childFactory,delete u.transitionLeaveTimeout,delete u.transitionEnterTimeout,delete u.transitionAppearTimeout,delete u.component,a.default.createElement(this.props.component,u,t)},t}(a.default.Component);s.displayName="TransitionGroup",s.propTypes={},s.defaultProps={component:"span",childFactory:function(e){return e}},t.default=s,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=r,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.nameShape=void 0,t.transitionTimeout=function(e){var t="transition"+e+"Timeout",n="transition"+e;return function(e){if(e[n]){if(null==e[t])return new Error(t+" wasn't supplied to CSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!=typeof e[t])return new Error(t+" must be a number (in milliseconds)")}return null}};o(n(0));var r=o(n(2));function o(e){return e&&e.__esModule?e:{default:e}}t.nameShape=r.default.oneOfType([r.default.string,r.default.shape({enter:r.default.string,leave:r.default.string,active:r.default.string}),r.default.shape({enter:r.default.string,enterActive:r.default.string,leave:r.default.string,leaveActive:r.default.string,appear:r.default.string,appearActive:r.default.string})])},function(e,t,n){var r,o,a,i,u,l,s;e.exports=(r=n(0),o=n(2),a=n(27),i=n(28),u=n(31),l=n(36),s=n(39),function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=6)}([function(e,t){e.exports=r},function(e,t){e.exports=o},function(e,t){e.exports=a},function(e,t){e.exports=i},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([o]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=d[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(f(r.parts[a],t))}else{for(var i=[],a=0;a<r.parts.length;a++)i.push(f(r.parts[a],t));d[r.id]={id:r.id,refs:1,parts:i}}}}function o(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],u=a[1],l=a[2],s=a[3],c={css:u,media:l,sourceMap:s};r[i]?r[i].parts.push(c):n.push(r[i]={id:i,parts:[c]})}return n}function a(e,t){var n=y(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=g[g.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),g.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=y(e.insertAt.before,n);n.insertBefore(t,o)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=g.indexOf(e);t>=0&&g.splice(t,1)}function u(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var n=c();n&&(e.attrs.nonce=n)}return s(t,e.attrs),a(e,t),t}function l(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",s(t,e.attrs),a(e,t),t}function s(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(){return n.nc}function f(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var s=m++;n=v||(v=u(t)),r=p.bind(null,n,s,!1),o=p.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=b(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(i),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){i(n),n.href&&URL.revokeObjectURL(n.href)}):(n=u(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){i(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function p(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}var d={},h=function(e){var t;return function(){return void 0===t&&(t=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),t}}(),y=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),v=null,m=0,g=[],b=n(17);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=h()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=o(e,t);return r(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var u=n[i],l=d[u.id];l.refs--,a.push(l)}e&&r(o(e,t),t);for(var i=0;i<a.length;i++){var l=a[i];if(0===l.refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete d[l.id]}}}};var w=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.treeUtil=t.Tree=void 0;var r=n(7),o=function(e){return e&&e.__esModule?e:{default:e}}(r),a=n(23),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(a);t.Tree=o.default,t.treeUtil=i,t.default=o.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2),p=n(8),d=r(p),h=n(9),y=r(h),v=n(3),m=r(v),g=n(10),b=r(g),w=n(12),x=r(w),_=n(18),E=r(_);n(21);var k=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={data:r.assignInternalProperties((0,d.default)(r.props.data)),rd3tSvgClassName:"_"+m.default.v4(),rd3tGClassName:"_"+m.default.v4()},r.internalState={initialRender:!0,targetNode:null,isTransitioning:!1,d3:{scale:r.props.zoom,translate:r.props.translate}},r.handleNodeToggle=function(e,t){var n=(0,d.default)(r.state.data),o=r.findNodesById(e,n,[]),a=o[0];t.persist(),r.props.collapsible&&!r.state.isTransitioning?(a._collapsed?(r.expandNode(a),r.props.shouldCollapseNeighborNodes&&r.collapseNeighborNodes(a,n)):r.collapseNode(a),r.setState({data:n,isTransitioning:!0},function(){return r.handleOnClickCb(a,t)}),setTimeout(function(){return r.setState({isTransitioning:!1})},r.props.transitionDuration+10),r.internalState.targetNode=a):r.handleOnClickCb(a,t)},r.handleOnClickCb=function(e,t){var n=r.props.onClick;n&&"function"==typeof n&&n((0,d.default)(e),t)},r.handleOnMouseOverCb=function(e,t){var n=r.props.onMouseOver;if(n&&"function"==typeof n){var o=(0,d.default)(r.state.data),a=r.findNodesById(e,o,[]),i=a[0];t.persist(),n((0,d.default)(i),t)}},r.handleOnMouseOutCb=function(e,t){var n=r.props.onMouseOut;if(n&&"function"==typeof n){var o=(0,d.default)(r.state.data),a=r.findNodesById(e,o,[]),i=a[0];t.persist(),n((0,d.default)(i),t)}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentWillMount",value:function(){this.internalState.d3=this.calculateD3Geometry(this.props)}},{key:"componentDidMount",value:function(){this.bindZoomListener(this.props),this.internalState.initialRender=!1}},{key:"componentDidUpdate",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.bindZoomListener(this.props),"function"==typeof this.props.onUpdate&&(this.props.onUpdate({node:this.internalState.targetNode?(0,d.default)(this.internalState.targetNode):null,zoom:this.internalState.d3.scale,translate:this.internalState.d3.translate}),this.internalState.targetNode=null)}},{key:"componentWillReceiveProps",value:function(e){this.props.data!==e.data&&this.setState({data:this.assignInternalProperties((0,d.default)(e.data))}),this.internalState.d3=this.calculateD3Geometry(e),(0,y.default)(this.props.translate,e.translate)&&(0,y.default)(this.props.scaleExtent,e.scaleExtent)&&this.props.zoom===e.zoom||this.bindZoomListener(e)}},{key:"setInitialTreeDepth",value:function(e,t){e.forEach(function(e){e._collapsed=e.depth>=t})}},{key:"bindZoomListener",value:function(e){var t=this,n=e.zoomable,r=e.scaleExtent,o=e.translate,a=e.zoom,i=e.onUpdate,u=this.state,l=u.rd3tSvgClassName,s=u.rd3tGClassName,c=(0,f.select)("."+l),p=(0,f.select)("."+s);n&&c.call(f.behavior.zoom().scaleExtent([r.min,r.max]).on("zoom",function(){p.attr("transform","translate("+f.event.translate+") scale("+f.event.scale+")"),"function"==typeof i&&(i({node:null,zoom:f.event.scale,translate:{x:f.event.translate[0],y:f.event.translate[1]}}),t.internalState.d3.scale=f.event.scale,t.internalState.d3.translate={x:f.event.translate[0],y:f.event.translate[1]})}).scale(a).translate([o.x,o.y]))}},{key:"assignInternalProperties",value:function(e){var t=this;return(Array.isArray(e)?e:[e]).map(function(e){return e.id=m.default.v4(),void 0===e._collapsed&&(e._collapsed=!1),e.children&&e.children.length>0&&(e.children=t.assignInternalProperties(e.children),e._children=e.children),e})}},{key:"findNodesById",value:function(e,t,n){var r=this;return n.length>0?n:(n=n.concat(t.filter(function(t){return t.id===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesById(e,t._children,n))}),n)}},{key:"findNodesAtDepth",value:function(e,t,n){var r=this;return n=n.concat(t.filter(function(t){return t.depth===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesAtDepth(e,t._children,n))}),n}},{key:"collapseNode",value:function(e){var t=this;e._collapsed=!0,e._children&&e._children.length>0&&e._children.forEach(function(e){t.collapseNode(e)})}},{key:"expandNode",value:function(e){e._collapsed=!1}},{key:"collapseNeighborNodes",value:function(e,t){var n=this;this.findNodesAtDepth(e.depth,t,[]).filter(function(t){return t.id!==e.id}).forEach(function(e){return n.collapseNode(e)})}},{key:"generateTree",value:function(){var e=this.props,t=e.initialDepth,n=e.useCollapseData,r=e.depthFactor,o=e.separation,a=e.nodeSize,i=e.orientation,u=f.layout.tree().nodeSize("horizontal"===i?[a.y,a.x]:[a.x,a.y]).separation(function(e,t){return e.parent.id===t.parent.id?o.siblings:o.nonSiblings}).children(function(e){return e._collapsed?null:e._children}),l=this.state.data[0],s=u.nodes(l);return!1===n&&void 0!==t&&this.internalState.initialRender&&(this.setInitialTreeDepth(s,t),s=u.nodes(l)),r&&s.forEach(function(e){e.y=e.depth*r}),{nodes:s,links:u.links(s)}}},{key:"calculateD3Geometry",value:function(e){var t=void 0;return t=e.zoom>e.scaleExtent.max?e.scaleExtent.max:e.zoom<e.scaleExtent.min?e.scaleExtent.min:e.zoom,{translate:e.translate,scale:t}}},{key:"render",value:function(){var e=this,t=this.generateTree(),n=t.nodes,r=t.links,o=this.state,i=o.rd3tSvgClassName,u=o.rd3tGClassName,s=this.props,c=s.nodeSvgShape,f=s.nodeLabelComponent,p=s.orientation,d=s.pathFunc,h=s.transitionDuration,y=s.zoomable,v=s.textLayout,g=s.nodeSize,w=s.depthFactor,_=s.initialDepth,k=s.separation,S=s.circleRadius,C=s.allowForeignObjects,O=s.styles,M=this.internalState.d3,T=M.translate,j=M.scale,P=a({},g,k,{depthFactor:w,initialDepth:_});return l.default.createElement("div",{className:"rd3t-tree-container "+(y?"rd3t-grabbable":void 0)},l.default.createElement("svg",{className:i,width:"100%",height:"100%"},l.default.createElement(b.default,{transitionDuration:h,component:"g",className:u,transform:"translate("+T.x+","+T.y+") scale("+j+")"},r.map(function(e){return l.default.createElement(E.default,{key:m.default.v4(),orientation:p,pathFunc:d,linkData:e,transitionDuration:h,styles:O.links})}),n.map(function(t){return l.default.createElement(x.default,{key:t.id,nodeSvgShape:a({},c,t.nodeSvgShape),nodeLabelComponent:f,nodeSize:g,orientation:p,transitionDuration:h,nodeData:t,name:t.name,attributes:t.attributes,onClick:e.handleNodeToggle,onMouseOver:e.handleOnMouseOverCb,onMouseOut:e.handleOnMouseOutCb,textLayout:v,circleRadius:S,subscriptions:P,allowForeignObjects:C,styles:O.nodes})}))))}}]),t}(l.default.Component);t.default=k,k.defaultProps={nodeSvgShape:{shape:"circle",shapeProps:{r:10}},nodeLabelComponent:null,onClick:void 0,onMouseOver:void 0,onMouseOut:void 0,onUpdate:void 0,orientation:"horizontal",translate:{x:0,y:0},pathFunc:"diagonal",transitionDuration:500,depthFactor:void 0,collapsible:!0,useCollapseData:!1,initialDepth:void 0,zoomable:!0,zoom:1,scaleExtent:{min:.1,max:1},nodeSize:{x:140,y:140},separation:{siblings:1,nonSiblings:2},textLayout:{textAnchor:"start",x:10,y:-10,transform:void 0},allowForeignObjects:!1,shouldCollapseNeighborNodes:!1,circleRadius:void 0,styles:{}},k.propTypes={data:c.default.oneOfType([c.default.array,c.default.object]).isRequired,nodeSvgShape:c.default.shape({shape:c.default.string,shapeProps:c.default.object}),nodeLabelComponent:c.default.object,onClick:c.default.func,onMouseOver:c.default.func,onMouseOut:c.default.func,onUpdate:c.default.func,orientation:c.default.oneOf(["horizontal","vertical"]),translate:c.default.shape({x:c.default.number,y:c.default.number}),pathFunc:c.default.oneOfType([c.default.oneOf(["diagonal","elbow","straight"]),c.default.func]),transitionDuration:c.default.number,depthFactor:c.default.number,collapsible:c.default.bool,useCollapseData:c.default.bool,initialDepth:c.default.number,zoomable:c.default.bool,zoom:c.default.number,scaleExtent:c.default.shape({min:c.default.number,max:c.default.number}),nodeSize:c.default.shape({x:c.default.number,y:c.default.number}),separation:c.default.shape({siblings:c.default.number,nonSiblings:c.default.number}),textLayout:c.default.object,allowForeignObjects:c.default.bool,shouldCollapseNeighborNodes:c.default.bool,circleRadius:c.default.number,styles:c.default.shape({nodes:c.default.object,links:c.default.object})},e.exports=t.default},function(e,t){e.exports=u},function(e,t){e.exports=l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=n(11),f=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={enableTransitions:r.props.transitionDuration>0},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentWillReceiveProps",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.setState({enableTransitions:e.transitionDuration>0})}},{key:"render",value:function(){return this.state.enableTransitions?u.default.createElement(c.TransitionGroup,{component:this.props.component,className:this.props.className,transform:this.props.transform},this.props.children):u.default.createElement("g",{className:this.props.className,transform:this.props.transform},this.props.children)}}]),t}(u.default.Component);t.default=f,f.defaultProps={component:"g"},f.propTypes={transitionDuration:s.default.number.isRequired,component:s.default.string,className:s.default.string.isRequired,transform:s.default.string.isRequired,children:s.default.array.isRequired},e.exports=t.default},function(e,t){e.exports=s},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2),p=n(13),d=r(p),h=n(14),y=r(h);n(15);var v=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,u=Array(i),s=0;s<i;s++)u[s]=arguments[s];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.state={transform:r.setTransform(r.props.nodeData,r.props.orientation,!0),initialStyle:{opacity:0}},r.shouldNodeTransform=function(e,t){return t.subscriptions!==e.subscriptions||t.nodeData.x!==e.nodeData.x||t.nodeData.y!==e.nodeData.y||t.orientation!==e.orientation},r.renderNodeElement=function(e){var t=r.props,n=t.circleRadius,o=t.nodeSvgShape;return n?l.default.createElement("circle",{r:n,style:e.circle}):"none"===o.shape?null:l.default.createElement(o.shape,a({},e.circle,o.shapeProps))},r.handleClick=function(e){r.props.onClick(r.props.nodeData.id,e)},r.handleOnMouseOver=function(e){r.props.onMouseOver(r.props.nodeData.id,e)},r.handleOnMouseOut=function(e){r.props.onMouseOut(r.props.nodeData.id,e)},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){var e=this.props,t=e.nodeData,n=e.orientation,r=e.transitionDuration,o=this.setTransform(t,n);this.applyTransform(o,r)}},{key:"componentWillUpdate",value:function(e){var t=this.setTransform(e.nodeData,e.orientation);this.applyTransform(t,e.transitionDuration)}},{key:"shouldComponentUpdate",value:function(e){return this.shouldNodeTransform(this.props,e)}},{key:"setTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.x,o=e.y,a=e.parent;if(n){var i=a?a.x:0,u=a?a.y:0;return"horizontal"===t?"translate("+u+","+i+")":"translate("+i+","+u+")"}return"horizontal"===t?"translate("+o+","+r+")":"translate("+r+","+o+")"}},{key:"applyTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){};0===t?((0,f.select)(this.node).attr("transform",e).style("opacity",n),r()):(0,f.select)(this.node).transition().duration(t).attr("transform",e).style("opacity",n).each("end",r)}},{key:"componentWillLeave",value:function(e){var t=this.props,n=t.nodeData,r=t.orientation,o=t.transitionDuration,a=this.setTransform(n,r,!0);this.applyTransform(a,o,0,e)}},{key:"render",value:function(){var e=this,t=this.props,n=t.nodeData,r=t.nodeSize,o=t.nodeLabelComponent,i=t.allowForeignObjects,u=t.styles,s=n._children?a({},u.node):a({},u.leafNode);return l.default.createElement("g",{id:n.id,ref:function(t){e.node=t},style:this.state.initialStyle,className:n._children?"nodeBase":"leafNodeBase",transform:this.state.transform,onClick:this.handleClick,onMouseOver:this.handleOnMouseOver,onMouseOut:this.handleOnMouseOut},this.renderNodeElement(s),i&&o?l.default.createElement(y.default,a({nodeData:n,nodeSize:r},o)):l.default.createElement(d.default,a({},this.props,{nodeStyle:s})))}}]),t}(l.default.Component);t.default=v,v.defaultProps={nodeLabelComponent:null,attributes:void 0,circleRadius:void 0,styles:{node:{circle:{},name:{},attributes:{}},leafNode:{circle:{},name:{},attributes:{}}}},v.propTypes={nodeData:c.default.object.isRequired,nodeSvgShape:c.default.object.isRequired,nodeLabelComponent:c.default.object,nodeSize:c.default.object.isRequired,orientation:c.default.oneOf(["horizontal","vertical"]).isRequired,transitionDuration:c.default.number.isRequired,onClick:c.default.func.isRequired,onMouseOver:c.default.func.isRequired,onMouseOut:c.default.func.isRequired,name:c.default.string.isRequired,attributes:c.default.object,textLayout:c.default.object.isRequired,subscriptions:c.default.object.isRequired,allowForeignObjects:c.default.bool.isRequired,circleRadius:c.default.number,styles:c.default.object},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=r(a),u=n(3),l=r(u),s=n(1),c=r(s),f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){var e=this.props,t=e.name,n=e.nodeStyle,r=e.textLayout,o=e.attributes;return i.default.createElement("g",null,i.default.createElement("text",{className:"nodeNameBase",style:n.name,textAnchor:r.textAnchor,x:r.x,y:r.y,transform:r.transform,dy:".35em"},t),i.default.createElement("text",{className:"nodeAttributesBase",y:r.y+10,textAnchor:r.textAnchor,transform:r.transform,style:n.attributes},o&&Object.keys(o).map(function(e){return i.default.createElement("tspan",{x:r.x,dy:"1.2em",key:l.default.v4()},e,": ",o[e])})))}}]),t}(i.default.PureComponent);t.default=f,f.defaultProps={attributes:void 0},f.propTypes={name:c.default.string.isRequired,attributes:c.default.object,textLayout:c.default.object.isRequired,nodeStyle:c.default.object.isRequired},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.BASE_MARGIN=void 0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),u=r(i),l=n(1),s=r(l),c=t.BASE_MARGIN=24,f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=e.nodeData,n=e.nodeSize,r=e.render,a=e.foreignObjectWrapper;return u.default.createElement("foreignObject",o({width:n.x-c,height:n.y-c},a),u.default.cloneElement(r,{nodeData:t}))}}]),t}(u.default.PureComponent);t.default=f,f.defaultProps={foreignObjectWrapper:{}},f.propTypes={render:s.default.oneOfType([s.default.element,s.default.node]).isRequired,nodeData:s.default.object.isRequired,nodeSize:s.default.shape({x:s.default.number,y:s.default.number}).isRequired,foreignObjectWrapper:s.default.object}},function(e,t,n){var r=n(16);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".nodeBase {\n  cursor: pointer;\n  fill: #777;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.leafNodeBase {\n  cursor: pointer;\n  fill: transparent;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.nodeNameBase {\n  fill: #000;\n  stroke: #000;\n  stroke-width: 1;\n}\n\n.nodeAttributesBase {\n  fill: #777;\n  stroke: #777;\n  stroke-width: 1;\n  font-size: smaller;\n}\n",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),s=n(1),c=r(s),f=n(2);n(19);var p=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),u=0;u<a;u++)i[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={initialStyle:{opacity:0}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){this.applyOpacity(1,this.props.transitionDuration)}},{key:"componentWillLeave",value:function(e){this.applyOpacity(0,this.props.transitionDuration,e)}},{key:"applyOpacity",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};0===t?((0,f.select)(this.link).style("opacity",e),n()):(0,f.select)(this.link).transition().duration(t).style("opacity",e).each("end",n)}},{key:"drawDiagonalPath",value:function(e,t){return f.svg.diagonal().projection(function(e){return"horizontal"===t?[e.y,e.x]:[e.x,e.y]})(e)}},{key:"drawStraightPath",value:function(e,t){var n=f.svg.line().interpolate("basis").x(function(e){return e.x}).y(function(e){return e.y}),r=[{x:e.source.x,y:e.source.y},{x:e.target.x,y:e.target.y}];return"horizontal"===t&&(r=[{x:e.source.y,y:e.source.x},{x:e.target.y,y:e.target.x}]),n(r)}},{key:"drawElbowPath",value:function(e,t){return"horizontal"===t?"M"+e.source.y+","+e.source.x+"V"+e.target.x+"H"+e.target.y:"M"+e.source.x+","+e.source.y+"V"+e.target.y+"H"+e.target.x}},{key:"drawPath",value:function(){var e=this.props,t=e.linkData,n=e.orientation,r=e.pathFunc;return"function"==typeof r?r(t,n):"elbow"===r?this.drawElbowPath(t,n):"straight"===r?this.drawStraightPath(t,n):this.drawDiagonalPath(t,n)}},{key:"render",value:function(){var e=this,t=this.props.styles;return l.default.createElement("path",{ref:function(t){e.link=t},style:a({},this.state.initialStyle,t),className:"linkBase",d:this.drawPath()})}}]),t}(l.default.PureComponent);t.default=p,p.defaultProps={styles:{}},p.propTypes={linkData:c.default.object.isRequired,orientation:c.default.oneOf(["horizontal","vertical"]).isRequired,pathFunc:c.default.oneOfType([c.default.oneOf(["diagonal","elbow","straight"]),c.default.func]).isRequired,transitionDuration:c.default.number.isRequired,styles:c.default.object},e.exports=t.default},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".linkBase {\n  fill: none;\n  stroke: #000;\n}",""])},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".rd3t-tree-container {\n  width: 100%;\n  height: 100%;\n}\n\n.rd3t-grabbable {\n  cursor: move; /* fallback if grab cursor is unsupported */\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.rd3t-grabbable:active {\n    cursor: grabbing;\n    cursor: -moz-grabbing;\n    cursor: -webkit-grabbing;\n}\n",""])},function(e,t,n){"use strict";function r(e,t){var n={},r=function(e){return n[e]||(n[e]={name:e}),n[e]},o=function(e,t){return n[e]||(n[e]={name:e,attributes:t}),n[e]};return e.forEach(function(e){if(t){var n={};t.forEach(function(t){n[t]=e[t]}),e.attributes=n}e.source=r(e.parent),e.target=o(e.child,e.attributes);var a=e.source,u=e.target;a.id=i.default.v4(),u.id=i.default.v4(),u.parent=a.name||null,a._collapsed=u._collapsed=!1,a._children?a._children.push(u):a._children=[u]}),[e.filter(function(e){return!e.source.parent})[0].source]}Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),a=n(3),i=function(e){return e&&e.__esModule?e:{default:e}}(a);t.default={parseCSV:function(e,t){return new Promise(function(n,a){try{(0,o.csv)(e,function(e){return n(r(e,t))})}catch(e){a(e)}})},parseJSON:function(e){return new Promise(function(t,n){try{(0,o.json)(e,function(e){return t([e])})}catch(e){n(e)}})},parseFlatJSON:function(e,t){return new Promise(function(n,a){try{(0,o.json)(e,function(e){return n(r(e,t))})}catch(e){a(e)}})},generateHierarchy:function(e){return r(e)}},e.exports=t.default}]))},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,a,i,u,l,s,c,f){switch(n){case 1:if(0===c&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,n){e.exports=n.p+"6386c959784638a6d2f1dbc9c5b9c2b5.png"},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=o},function(e,t,n){"use strict";
/** @license React v16.8.0-alpha.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(9),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,y=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,m="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,i,u],s=0;(e=Error(t.replace(/%s/g,function(){return l[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function _(){}function E(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=x.prototype;var k=E.prototype=new _;k.constructor=E,r(k,x.prototype),k.isPureReactComponent=!0;var S={current:null},C={current:null},O=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r=void 0,o={},i=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(i=""+t.key),t)O.call(t,r)&&!M.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:a,type:e,key:i,ref:u,props:o,_owner:C.current}}function j(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var P=/\/+/g,A=[];function N(e,t,n,r){if(A.length){var o=A.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case a:case i:l=!0}}if(l)return r(o,t,""===n?"."+I(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+I(u=t[s],s);l+=e(u,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=m&&t[m]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(u=t.next()).done;)l+=e(u=u.value,c=n+I(u,s++),r,o);else"object"===u&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(j(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(P,"$&/")+"/"),D(e,z,t=N(t,a,r,o)),R(t)}function U(){var e=S.current;return null===e&&g("298"),e}var B={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,L,t=N(null,null,t,n)),R(t)},count:function(e){return D(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return j(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:y,type:e,compare:void 0===t?null:t}},Fragment:u,StrictMode:l,Suspense:h,createElement:T,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,i=r({},e.props),u=e.key,l=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,s=C.current),void 0!==t.key&&(u=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)O.call(t,o)&&!M.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:a,type:e.type,key:u,ref:l,props:i,_owner:s}},createFactory:function(e){var t=T.bind(null,e);return t.type=e,t},isValidElement:j,version:"16.8.0-alpha.1",unstable_ConcurrentMode:p,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:C,assign:r}};B.ConcurrentMode=p,B.Profiler=s,B.unstable_ConcurrentMode=void 0,B.unstable_Profiler=void 0,B.useCallback=function(e,t){return U().useCallback(e,t)},B.useContext=function(e,t){return U().useContext(e,t)},B.useEffect=function(e,t){return U().useEffect(e,t)},B.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},B.useDebugValue=function(){},B.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},B.useMemo=function(e,t){return U().useMemo(e,t)},B.useReducer=function(e,t,n){return U().useReducer(e,t,n)},B.useRef=function(e){return U().useRef(e)},B.useState=function(e){return U().useState(e)};var q={default:B},V=q&&B||q;e.exports=V.default||V},function(e,t,n){"use strict";
/** @license React v16.8.0-alpha.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(9),a=n(23);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,i,u],s=0;(e=Error(t.replace(/%s/g,function(){return l[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var u=!1,l=null,s=!1,c=null,f={onError:function(e){u=!0,l=e}};function p(e,t,n,r,o,a,i,s,c){u=!1,l=null,function(e,t,n,r,o,a,i,u,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function y(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||i("96",e),!m[n])for(var r in t.extractEvents||i("97",e),m[n]=t,n=t.eventTypes){var o=void 0,a=n[r],u=t,l=r;g.hasOwnProperty(l)&&i("99",l),g[l]=a;var s=a.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&v(s[o],u,l);o=!0}else a.registrationName?(v(a.registrationName,u,l),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){b[e]&&i("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var m=[],g={},b={},w={},x=null,_=null,E=null;function k(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,a,f,d,h){if(p.apply(this,arguments),u){if(u){var y=l;u=!1,l=null}else i("198"),y=void 0;s||(s=!0,c=y)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function M(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)k(e,t[r],n[r]);else t&&k(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var T={injectEventPluginOrder:function(e){d&&i("101"),d=Array.prototype.slice.call(e),y()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&i("102",t),h[t]=r,n=!0)}n&&y()}};function j(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function P(e){if(null!==e&&(O=S(O,e)),e=O,O=null,e&&(C(e,M),O&&i("95"),s))throw e=c,s=!1,c=null,e}var A=Math.random().toString(36).slice(2),N="__reactInternalInstance$"+A,R="__reactEventHandlers$"+A;function D(e){if(e[N])return e[N];for(;!e[N];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[N]).tag||6===e.tag?e:null}function I(e){return!(e=e[N])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function z(e){return e[R]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function U(e,t,n){(t=j(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)U(n[t],"captured",e);for(t=0;t<n.length;t++)U(n[t],"bubbled",e)}}function q(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=j(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&q(e._targetInst,null,e)}function W(e){C(e,B)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function $(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:$("Animation","AnimationEnd"),animationiteration:$("Animation","AnimationIteration"),animationstart:$("Animation","AnimationStart"),transitionend:$("Transition","TransitionEnd")},K={},G={};function J(e){if(K[e])return K[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in G)return K[e]=n[t];return e}H&&(G=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var Q=J("animationend"),X=J("animationiteration"),Z=J("animationstart"),ee=J("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function ue(){return!1}function le(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:ue,this.isPropagationStopped=ue,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var pe=le.extend({data:null}),de=le.extend({data:null}),he=[9,13,27,32],ye=H&&"CompositionEvent"in window,ve=null;H&&"documentMode"in document&&(ve=document.documentMode);var me=H&&"TextEvent"in window&&!ve,ge=H&&(!ye||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function _e(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ke=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(ye)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else ke?_e(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(ke||o!==we.compositionStart?o===we.compositionEnd&&ke&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,ke=!0)),o=pe.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ee(n))&&(o.data=a),W(o),a=o):a=null,(e=me?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(ke)return"compositionend"===e||!ye&&_e(e,t)?(e=ae(),oe=re=ne=null,ke=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,W(t)):t=null,null===a?t:null===t?a:[a,t]}},Ce=null,Oe=null,Me=null;function Te(e){if(e=_(e)){"function"!=typeof Ce&&i("280");var t=x(e.stateNode);Ce(e.stateNode,e.type,t)}}function je(e){Oe?Me?Me.push(e):Me=[e]:Oe=e}function Pe(){if(Oe){var e=Oe,t=Me;if(Me=Oe=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Ae(e,t){return e(t)}function Ne(e,t,n){return e(t,n)}function Re(){}var De=!1;function Ie(e,t){if(De)return e(t);De=!0;try{return Ae(e,t)}finally{De=!1,(null!==Oe||null!==Me)&&(Re(),Pe())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ue(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function qe(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var We=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,He=/^(.*)[\\\/]/,$e="function"==typeof Symbol&&Symbol.for,Ye=$e?Symbol.for("react.element"):60103,Ke=$e?Symbol.for("react.portal"):60106,Ge=$e?Symbol.for("react.fragment"):60107,Je=$e?Symbol.for("react.strict_mode"):60108,Qe=$e?Symbol.for("react.profiler"):60114,Xe=$e?Symbol.for("react.provider"):60109,Ze=$e?Symbol.for("react.context"):60110,et=$e?Symbol.for("react.concurrent_mode"):60111,tt=$e?Symbol.for("react.forward_ref"):60112,nt=$e?Symbol.for("react.suspense"):60113,rt=$e?Symbol.for("react.memo"):60115,ot=$e?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ge:return"Fragment";case Ke:return"Portal";case Qe:return"Profiler";case Je:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Xe:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case ot:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=ut(e.type);n=null,r&&(n=ut(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var yt=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function mt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(pt,e)||!ct.call(ft,e)&&(st.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&mt(e,"checked",t,!1)}function _t(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?kt(e,t.type,n):t.hasOwnProperty("defaultValue")&&kt(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function kt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(yt,vt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),ht.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ct(e,t,n){return(e=le.getPooled(St.change,e,t,n)).type="change",je(n),W(e),e}var Ot=null,Mt=null;function Tt(e){P(e)}function jt(e){if(Ve(L(e)))return e}function Pt(e,t){if("change"===e)return t}var At=!1;function Nt(){Ot&&(Ot.detachEvent("onpropertychange",Rt),Mt=Ot=null)}function Rt(e){"value"===e.propertyName&&jt(Mt)&&Ie(Tt,e=Ct(Mt,e,Fe(e)))}function Dt(e,t,n){"focus"===e?(Nt(),Mt=n,(Ot=t).attachEvent("onpropertychange",Rt)):"blur"===e&&Nt()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return jt(Mt)}function Lt(e,t){if("click"===e)return jt(t)}function zt(e,t){if("input"===e||"change"===e)return jt(t)}H&&(At=Ue("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:St,_isInputEventSupported:At,extractEvents:function(e,t,n,r){var o=t?L(t):window,a=void 0,i=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?a=Pt:ze(o)?At?a=zt:(a=It,i=Dt):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Lt),a&&(a=a(e,t)))return Ct(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&kt(o,"number",o.value)}},Ut=le.extend({view:null,detail:null}),Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Bt[e])&&!!t[e]}function Vt(){return qt}var Wt=0,Ht=0,$t=!1,Yt=!1,Kt=Ut.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Wt;return Wt=e.screenX,$t?"mousemove"===e.type?e.screenX-t:0:($t=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Gt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qt={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,u=void 0,l=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(i=Kt,u=Jt.mouseLeave,l=Jt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Gt,u=Jt.pointerLeave,l=Jt.pointerEnter,s="pointer");var c=null==a?o:L(a);if(o=null==t?o:L(t),(e=i.getPooled(u,a,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=i.getPooled(l,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,a&&r)e:{for(o=r,s=0,i=t=a;i;i=F(i))s++;for(i=0,l=o;l;l=F(l))i++;for(;0<s-i;)t=F(t),s--;for(;0<i-s;)o=F(o),i--;for(;s--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(s=a.alternate)||s!==o);)t.push(a),a=F(a);for(a=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)a.push(r),r=F(r);for(r=0;r<t.length;r++)q(t[r],"bubbled",e);for(r=a.length;0<r--;)q(a[r],"captured",n);return[e,n]}};function Xt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Xt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Xt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var u=o.child;u;){if(u===n)return nn(o),e;if(u===r)return nn(o),t;u=u.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{u=!1;for(var l=o.child;l;){if(l===n){u=!0,n=o,r=a;break}if(l===r){u=!0,r=o,n=a;break}l=l.sibling}if(!u){for(l=a.child;l;){if(l===n){u=!0,n=a,r=o;break}if(l===r){u=!0,r=a,n=o;break}l=l.sibling}u||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=Ut.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ut.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Kt.extend({dataTransfer:null}),dn=Ut.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[Q,"animationEnd"],[X,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],mn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},mn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:mn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case Q:case X:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Ut;break;case"wheel":e=yn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=le}return W(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,_n=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,u=0;u<m.length;u++){var l=m[u];l&&(l=l.extractEvents(r,t,a,o))&&(i=S(i,l))}P(i)}}var kn=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?On:Mn).bind(null,e);t.addEventListener(e,n,!1)}function Cn(e,t){if(!t)return null;var n=(xn(e)?On:Mn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Ne(Mn,e,t)}function Mn(e,t){if(kn){var n=Fe(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),_n.length){var r=_n.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>_n.length&&_n.push(e)}}}var Tn={},jn=0,Pn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Pn)||(e[Pn]=jn++,Tn[e[Pn]]={}),Tn[e[Pn]]}function Nn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function In(){for(var e=window,t=Nn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Nn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var zn=H&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Un=null,Bn=null,qn=null,Vn=!1;function Wn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Un||Un!==Nn(n)?null:("selectionStart"in(n=Un)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},qn&&en(qn,n)?null:(qn=n,(e=le.getPooled(Fn.select,Bn,e,t)).type="select",e.target=Un,W(e),e))}var Hn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=An(a),o=w.onSelect;for(var i=0;i<o.length;i++){var u=o[i];if(!a.hasOwnProperty(u)||!a[u]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?L(t):window,e){case"focus":(ze(a)||"true"===a.contentEditable)&&(Un=a,Bn=t,qn=null);break;case"blur":qn=Bn=Un=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Wn(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return Wn(n,r)}return null}};function $n(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Gn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Jn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Qn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}T.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=z,_=I,E=L,T.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Qt,ChangeEventPlugin:Ft,SelectEventPlugin:Hn,BeforeInputEventPlugin:Se});var Xn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Zn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Xn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function lr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Cn("scroll",e);break;case"focus":case"blur":Cn("focus",e),Cn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Ue(o)&&Cn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function dr(){}var hr=null,yr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function mr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gr="function"==typeof setTimeout?setTimeout:void 0,br="function"==typeof clearTimeout?clearTimeout:void 0;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var _r=[],Er=-1;function kr(e){0>Er||(e.current=_r[Er],_r[Er]=null,Er--)}function Sr(e,t){_r[++Er]=e.current,e.current=t}var Cr={},Or={current:Cr},Mr={current:!1},Tr=Cr;function jr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Pr(e){return null!=(e=e.childContextTypes)}function Ar(e){kr(Mr),kr(Or)}function Nr(e){kr(Mr),kr(Or)}function Rr(e,t,n){Or.current!==Cr&&i("168"),Sr(Or,t),Sr(Mr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",ut(t)||"Unknown",a);return o({},n,r)}function Ir(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Cr,Tr=Or.current,Sr(Or,t),Sr(Mr,Mr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Dr(e,t,Tr),r.__reactInternalMemoizedMergedChildContext=t,kr(Mr),kr(Or),Sr(Or,t)):kr(Mr),Sr(Mr,n)}var zr=null,Fr=null;function Ur(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qr(e,t,n,r){return new Br(e,t,n,r)}function Vr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wr(e,t){var n=e.alternate;return null===n?((n=qr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Hr(e,t,n,r,o,a){var u=2;if(r=e,"function"==typeof e)Vr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Ge:return $r(n.children,o,a,t);case et:return Yr(n,3|o,a,t);case Je:return Yr(n,2|o,a,t);case Qe:return(e=qr(12,n,t,4|o)).elementType=Qe,e.type=Qe,e.expirationTime=a,e;case nt:return(e=qr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Xe:u=10;break e;case Ze:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case ot:u=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=qr(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function $r(e,t,n,r){return(e=qr(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=qr(8,e,r,t),t=0==(1&t)?Je:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Kr(e,t,n){return(e=qr(6,e,null,t)).expirationTime=n,e}function Gr(e,t,n){return(t=qr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Jr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Zr(t,e)}function Qr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Zr(t,e)}function Xr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Zr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function ao(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function io(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):uo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function uo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function lo(e,t,n,r,a,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case 2:eo=!0}return r}function so(e,t,n,r,o){eo=!1;for(var a=(t=uo(e,t)).baseState,i=null,u=0,l=t.firstUpdate,s=a;null!==l;){var c=l.expirationTime;c<o?(null===i&&(i=l,a=s),u<c&&(u=c)):(s=lo(e,0,l,s,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(c=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===c&&(c=l,null===i&&(a=s)),u<f&&(u=f)):(s=lo(e,0,l,s,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,e.expirationTime=u,e.memoizedState=s}function co(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function po(e,t){return{value:e,source:t,stack:lt(t)}}var ho={current:null},yo=null,vo=null,mo=null;function go(e,t){var n=e.type._context;Sr(ho,n._currentValue),n._currentValue=t}function bo(e){var t=ho.current;kr(ho),e.type._context._currentValue=t}function wo(e){yo=e,mo=vo=null,e.firstContextDependency=null}function xo(e,t){return mo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(mo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===vo?(null===yo&&i("293"),yo.firstContextDependency=vo=t):vo=vo.next=t),e._currentValue}function _o(e,t){for(var n=0;n<e.length;n++)if(!Xt(e[n],t[n]))return!1;return!0}var Eo=0,ko=null,So=null,Co=null,Oo=null,Mo=null,To=0,jo=null,Po=!1,Ao=!1,No=null,Ro=0;function Do(){return null===ko&&i("298"),ko}function Io(e,t,n,r){for(;Ao;)Ao=!1,Ro+=1,jo=Mo=Co=null,n=e(t,r);return No=null,Ro=0,(e=ko).memoizedState=Oo,e.expirationTime=To,e.updateQueue=jo,e=null!==Co&&null!==Co.next,Eo=0,Mo=Oo=Co=So=ko=null,To=0,jo=null,e&&i("300"),n}function Lo(){Eo=0,Mo=Oo=Co=So=ko=null,To=0,jo=null,Ao=!1,No=null,Ro=0}function zo(e){return{memoizedState:e.memoizedState,baseState:e.baseState,queue:e.queue,baseUpdate:e.baseUpdate,next:null}}function Fo(){if(null===Mo)null===Oo?(Po=!1,Oo=Mo=null===(Co=So)?{memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null}:zo(Co)):(Po=!0,Co=So,Mo=Oo);else if(null===Mo.next){if(Po=!1,null===Co)var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};else e=null===(Co=Co.next)?{memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null}:zo(Co);Mo=Mo.next=e}else Po=!0,Mo=Mo.next,Co=null!==Co?Co.next:null;return Mo}function Uo(e,t){return"function"==typeof t?t(e):t}function Bo(e,t,n){ko=Do();var r=(Mo=Fo()).queue;if(null!==r){if(Po){if(t=r.dispatch,null!==No){var o=No.get(r);if(void 0!==o){No.delete(r),n=Mo.memoizedState;do{n=e(n,o.action),o=o.next}while(null!==o);return Mo.memoizedState=n,Mo.baseUpdate===r.last&&(Mo.baseState=n),[n,t]}}return[Mo.memoizedState,t]}t=r.last;var a=Mo.baseUpdate;if(null!==a?(null!==t&&(t.next=null),t=a.next):t=null!==t?t.next:null,null!==t){n=Mo.baseState;var u=o=null,l=t,s=!1;do{var c=l.expirationTime;c<Eo?(s||(s=!0,u=a,o=n),c>To&&(To=c)):n=e(n,l.action),a=l,l=l.next}while(null!==l&&l!==t);s||(u=a,o=n),Mo.memoizedState=n,Mo.baseUpdate=u,Mo.baseState=o}return[Mo.memoizedState,r.dispatch]}return e===Uo?"function"==typeof t&&(t=t()):null!=n&&(t=e(t,n)),Mo.memoizedState=Mo.baseState=t,e=(r=Mo.queue={last:null,dispatch:null}).dispatch=function(e,t,n){25>Ro||i("301");var r=e.alternate;if(e===ko||null!==r&&r===ko)if(Ao=!0,e={expirationTime:Eo,action:n,next:null},null===No&&(No=new Map),void 0===(r=No.get(t)))No.set(t,e);else{for(t=r;null!==t.next;)t=t.next;t.next=e}else{r=ki(r=Xi(),e),n={expirationTime:r,action:n,next:null},bi();var o=t.last;if(null===o)n.next=n;else{var a=o.next;null!==a&&(n.next=a),o.next=n}t.last=n,Oi(e,r)}}.bind(null,ko,r),[Mo.memoizedState,e]}function qo(e,t,n,r){return e={tag:e,create:t,destroy:n,inputs:r,next:null},null===jo?(jo={lastEffect:null}).lastEffect=e.next=e:null===(t=jo.lastEffect)?jo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,jo.lastEffect=e),e}function Vo(e,t){Wo(4,36,e,t)}function Wo(e,t,n,r){ko=Do(),Mo=Fo(),r=null!=r?r:[n];var o=null;if(null!==Co){var a=Co.memoizedState;if(o=a.destroy,_o(r,a.inputs))return void qo(0,n,o,r)}ko.effectTag|=e,Mo.memoizedState=qo(t,n,o,r)}var Ho={},$o={current:Ho},Yo={current:Ho},Ko={current:Ho};function Go(e){return e===Ho&&i("174"),e}function Jo(e,t){Sr(Ko,t),Sr(Yo,e),Sr($o,Ho);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}kr($o),Sr($o,t)}function Qo(e){kr($o),kr(Yo),kr(Ko)}function Xo(e){Go(Ko.current);var t=Go($o.current),n=er(t,e.type);t!==n&&(Sr(Yo,e),Sr($o,n))}function Zo(e){Yo.current===e&&(kr($o),kr(Yo))}function ea(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ta=We.ReactCurrentDispatcher,na=(new r.Component).refs;function ra(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var oa={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Xi(),o=ro(r=ki(r,e));o.payload=t,null!=n&&(o.callback=n),bi(),ao(e,o),Oi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Xi(),o=ro(r=ki(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),bi(),ao(e,o),Oi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Xi(),r=ro(n=ki(n,e));r.tag=2,null!=t&&(r.callback=t),bi(),ao(e,r),Oi(e,n)}};function aa(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function ia(e,t,n){var r=!1,o=Cr,a=t.contextType;return"object"==typeof a&&null!==a?a=ta.current.readContext(a):(o=Pr(t)?Tr:Or.current,a=(r=null!=(r=t.contextTypes))?jr(e,o):Cr),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=oa,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ua(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&oa.enqueueReplaceState(t,t.state,null)}function la(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=na;var a=t.contextType;"object"==typeof a&&null!==a?o.context=ta.current.readContext(a):(a=Pr(t)?Tr:Or.current,o.context=jr(e,a)),null!==(a=e.updateQueue)&&(so(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(ra(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&oa.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(so(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var sa=Array.isArray;function ca(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("289"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===na&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function fa(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function pa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Wr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ca(e,t,n),r.return=e,r):((r=Hr(n.type,n.key,n.props,null,e.mode,r)).ref=ca(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=$r(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Kr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=Hr(t.type,t.key,t.props,null,e.mode,n)).ref=ca(e,null,t),n.return=e,n;case Ke:return(t=Gr(t,e.mode,n)).return=e,t}if(sa(t)||it(t))return(t=$r(t,e.mode,n,null)).return=e,t;fa(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Ge?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case Ke:return n.key===o?c(e,t,n,r):null}if(sa(n)||it(n))return null!==o?null:f(e,t,n,r,null);fa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case Ke:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(sa(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);fa(t,r)}return null}function y(o,i,u,l){for(var s=null,c=null,f=i,y=i=0,v=null;null!==f&&y<u.length;y++){f.index>y?(v=f,f=null):v=f.sibling;var m=d(o,f,u[y],l);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,y),null===c?s=m:c.sibling=m,c=m,f=v}if(y===u.length)return n(o,f),s;if(null===f){for(;y<u.length;y++)(f=p(o,u[y],l))&&(i=a(f,i,y),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);y<u.length;y++)(v=h(f,o,y,u[y],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?y:v.key),i=a(v,i,y),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,u,l,s){var c=it(l);"function"!=typeof c&&i("150"),null==(l=c.call(l))&&i("151");for(var f=c=null,y=u,v=u=0,m=null,g=l.next();null!==y&&!g.done;v++,g=l.next()){y.index>v?(m=y,y=null):m=y.sibling;var b=d(o,y,g.value,s);if(null===b){y||(y=m);break}e&&y&&null===b.alternate&&t(o,y),u=a(b,u,v),null===f?c=b:f.sibling=b,f=b,y=m}if(g.done)return n(o,y),c;if(null===y){for(;!g.done;v++,g=l.next())null!==(g=p(o,g.value,s))&&(u=a(g,u,v),null===f?c=g:f.sibling=g,f=g);return c}for(y=r(o,y);!g.done;v++,g=l.next())null!==(g=h(y,o,v,g.value,s))&&(e&&null!==g.alternate&&y.delete(null===g.key?v:g.key),u=a(g,u,v),null===f?c=g:f.sibling=g,f=g);return e&&y.forEach(function(e){return t(o,e)}),c}return function(e,r,a,l){var s="object"==typeof a&&null!==a&&a.type===Ge&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case Ye:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?a.type===Ge:s.elementType===a.type){n(e,s.sibling),(r=o(s,a.type===Ge?a.props.children:a.props)).ref=ca(e,s,a),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Ge?((r=$r(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=Hr(a.type,a.key,a.props,null,e.mode,l)).ref=ca(e,r,a),l.return=e,e=l)}return u(e);case Ke:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Gr(a,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Kr(a,e.mode,l)).return=e,e=r),u(e);if(sa(a))return y(e,r,a,l);if(it(a))return v(e,r,a,l);if(c&&fa(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:i("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var da=pa(!0),ha=pa(!1),ya=null,va=null,ma=!1;function ga(e,t){var n=qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ba(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function wa(e){if(ma){var t=va;if(t){var n=t;if(!ba(e,t)){if(!(t=wr(n))||!ba(e,t))return e.effectTag|=2,ma=!1,void(ya=e);ga(ya,n)}ya=e,va=xr(t)}else e.effectTag|=2,ma=!1,ya=e}}function xa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;ya=e}function _a(e){if(e!==ya)return!1;if(!ma)return xa(e),ma=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!mr(t,e.memoizedProps))for(t=va;t;)ga(e,t),t=wr(t);return xa(e),va=ya?wr(e.stateNode):null,!0}function Ea(){va=ya=null,ma=!1}var ka=We.ReactCurrentOwner;function Sa(e,t,n,r){t.child=null===e?ha(t,null,n,r):da(t,e.child,n,r)}function Ca(e,t,n,r,o){n=n.render;var a=t.ref;wo(t),Eo=o,ko=t,So=null!==e?e.memoizedState:null;var i=n(r,a);return i=Io(n,r,i,a),t.effectTag|=1,Sa(e,t,i,o),t.child}function Oa(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Vr(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Hr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ma(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Da(e,t,a):(t.effectTag|=1,(e=Wr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ma(e,t,n,r,o,a){return null!==e&&o<a&&en(e.memoizedProps,r)&&e.ref===t.ref?Da(e,t,a):ja(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ja(e,t,n,r,o){var a=Pr(n)?Tr:Or.current;a=jr(t,a),wo(t),Eo=o,ko=t,So=null!==e?e.memoizedState:null;var i=n(r,a);return i=Io(n,r,i,a),t.effectTag|=1,Sa(e,t,i,o),t.child}function Pa(e,t,n,r,o){if(Pr(n)){var a=!0;Ir(t)}else a=!1;if(wo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),ia(t,n,r),la(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,u=t.memoizedProps;i.props=u;var l=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=ta.current.readContext(s):s=jr(t,s=Pr(n)?Tr:Or.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==r||l!==s)&&ua(t,i,r,s),eo=!1;var p=t.memoizedState;l=i.state=p;var d=t.updateQueue;null!==d&&(so(t,d,r,i,o),l=t.memoizedState),u!==r||p!==l||Mr.current||eo?("function"==typeof c&&(ra(t,n,c,r),l=t.memoizedState),(u=eo||aa(t,n,u,r,p,l,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=s,r=u):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,u=t.memoizedProps,i.props=t.type===t.elementType?u:ea(t.type,u),l=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=ta.current.readContext(s):s=jr(t,s=Pr(n)?Tr:Or.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==r||l!==s)&&ua(t,i,r,s),eo=!1,l=t.memoizedState,p=i.state=l,null!==(d=t.updateQueue)&&(so(t,d,r,i,o),p=t.memoizedState),u!==r||l!==p||Mr.current||eo?("function"==typeof c&&(ra(t,n,c,r),p=t.memoizedState),(c=eo||aa(t,n,u,r,l,p,s))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,p,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),i.props=r,i.state=p,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Aa(e,t,n,r,a,o)}function Aa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Lr(t,n,!1),Da(e,t,a);r=t.stateNode,ka.current=t;var u=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=da(t,e.child,null,a),t.child=da(t,null,u,a)):Sa(e,t,u,a),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Rr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Rr(0,t.context,!1),Jo(e,t.containerInfo)}function Ra(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var u=o.fallback;e=$r(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=$r(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=ha(t,null,o.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,i?(n=o.fallback,o=Wr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Wr(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=da(t,r.child,o.children,n)):(u=e.child,i?(i=o.fallback,(o=$r(null,r,0,null)).child=u,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=$r(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=da(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Da(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Wr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Mr.current&&r<n){switch(t.tag){case 3:Na(t),Ea();break;case 5:Xo(t);break;case 1:Pr(t.type)&&Ir(t);break;case 4:Jo(t,t.stateNode.containerInfo);break;case 10:go(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ra(e,t,n):null!==(t=Da(e,t,n))?t.sibling:null}return Da(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=jr(t,Or.current);wo(t),Eo=n,ko=t,So=null;var a=r(e,o);if(t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){t.tag=1,Lo(),Pr(r)?(o=!0,Ir(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&ra(t,r,u,e),a.updater=oa,t.stateNode=a,a._reactInternalFiber=t,la(t,r,e,n),t=Aa(null,t,r,!0,o,n)}else t.tag=0,Sa(null,t,a=Io(r,e,a,o),n),t=t.child;return t;case 16:switch(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),o=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(a),t.type=e,a=t.tag=function(e){if("function"==typeof e)return Vr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),o=ea(e,o),u=void 0,a){case 0:u=ja(null,t,e,o,n);break;case 1:u=Pa(null,t,e,o,n);break;case 11:u=Ca(null,t,e,o,n);break;case 14:u=Oa(null,t,e,ea(e.type,o),r,n);break;default:i("306",e,"")}return u;case 0:return r=t.type,a=t.pendingProps,ja(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 1:return r=t.type,a=t.pendingProps,Pa(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),a=null!==(a=t.memoizedState)?a.element:null,so(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===a?(Ea(),t=Da(e,t,n)):(a=t.stateNode,(a=(null===e||null===e.child)&&a.hydrate)&&(va=xr(t.stateNode.containerInfo),ya=t,a=ma=!0),a?(t.effectTag|=2,t.child=ha(t,null,r,n)):(Sa(e,t,r,n),Ea()),t=t.child),t;case 5:return Xo(t),null===e&&wa(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,u=a.children,mr(r,a)?u=null:null!==o&&mr(r,o)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&a.hidden?(t.expirationTime=1,t=null):(Sa(e,t,u,n),t=t.child),t;case 6:return null===e&&wa(t),null;case 13:return Ra(e,t,n);case 4:return Jo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=da(t,null,r,n):Sa(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ca(e,t,r,a=t.elementType===r?a:ea(r,a),n);case 7:return Sa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Sa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,u=t.memoizedProps,go(t,o=a.value),null!==u){var l=u.value;if(0===(o=Xt(l,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(u.children===a.children&&!Mr.current){t=Da(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){if(null!==(l=u.firstContextDependency))do{if(l.context===r&&0!=(l.observedBits&o)){if(1===u.tag){var s=ro(n);s.tag=2,ao(u,s)}u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n);for(var c=u.return;null!==c;){if(s=c.alternate,c.childExpirationTime<n)c.childExpirationTime=n,null!==s&&s.childExpirationTime<n&&(s.childExpirationTime=n);else{if(!(null!==s&&s.childExpirationTime<n))break;s.childExpirationTime=n}c=c.return}}s=u.child,l=l.next}while(null!==l);else s=10===u.tag&&u.type===t.type?null:u.child;if(null!==s)s.return=u;else for(s=u;null!==s;){if(s===t){s=null;break}if(null!==(u=s.sibling)){u.return=s.return,s=u;break}s=s.return}u=s}}Sa(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,wo(t),r=r(a=xo(a,o.unstable_observedBits)),t.effectTag|=1,Sa(e,t,r,n),t.child;case 14:return o=ea(a=t.type,t.pendingProps),Oa(e,t,a,o=ea(a.type,o),r,n);case 15:return Ma(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:ea(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Pr(r)?(e=!0,Ir(t)):e=!1,wo(t),ia(t,r,a),la(t,r,a,n),Aa(null,t,r,!0,e,n);default:i("156")}}function La(e){e.effectTag|=4}var za=void 0,Fa=void 0,Ua=void 0,Ba=void 0;za=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fa=function(){},Ua=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var u=t.stateNode;switch(Go($o.current),e=null,n){case"input":i=bt(u,i),r=bt(u,r),e=[];break;case"option":i=$n(u,i),r=$n(u,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(u,i),r=Kn(u,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(u.onclick=dr)}cr(n,r),u=n=void 0;var l=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var s=i[n];for(u in s)s.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(u in s)!s.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in c)c.hasOwnProperty(u)&&s[u]!==c[u]&&(l||(l={}),l[u]=c[u])}else l||(e||(e=[]),e.push(n,l)),l=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=c&&pr(a,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}l&&(e=e||[]).push("style",l),a=e,(t.updateQueue=a)&&La(t)}},Ba=function(e,t,n,r){n!==r&&La(t)};var qa="function"==typeof WeakSet?WeakSet:Set;function Va(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function Wa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ei(e,t)}else t.current=null}function Ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=null,null!==o&&o()}0!=(r.tag&t)&&("function"!=typeof(o=(o=r.create)())&&(o=null),r.destroy=o),r=r.next}while(r!==n)}}function $a(e){switch("function"==typeof Fr&&Fr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Ei(o,e)}}n=n.next}while(n!==t)}break;case 1:if(Wa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ei(e,t)}break;case 5:Wa(e);break;case 4:Ga(e)}}function Ya(e){return 5===e.tag||3===e.tag||4===e.tag}function Ka(e){e:{for(var t=e.return;null!==t;){if(Ya(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Ya(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,u=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(u,l):a.insertBefore(u,l)}else t.insertBefore(o.stateNode,n);else r?(u=t,l=o.stateNode,8===u.nodeType?(a=u.parentNode).insertBefore(l,u):(a=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==a.onclick||(a.onclick=dr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,u=a;;)if($a(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===a)break;for(;null===u.sibling;){if(null===u.return||u.return===a)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}o?(a=r,u=t.stateNode,8===a.nodeType?a.parentNode.removeChild(u):a.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):$a(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ja(e,t){switch(t.tag){case 0:case 11:case 14:case 15:Ha(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],u=t[a+1];"style"===i?lr(e,u):"dangerouslySetInnerHTML"===i?rr(e,u):"children"===i?or(e,u):mt(e,i,u,r)}switch(n){case"input":_t(e,o);break;case"textarea":Jn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Xi())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new qa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=ki(t=Xi(),e),null!==(e=Ci(e,t))&&(Jr(e,t),0!==(t=e.expirationTime)&&Zi(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var Qa="function"==typeof WeakMap?WeakMap:Map;function Xa(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){lu(r),Va(e,t)},n}function Za(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===mi?mi=new Set([this]):mi.add(this));var n=t.value,o=t.stack;Va(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function ei(e){switch(e.tag){case 1:Pr(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Qo(),Nr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return Zo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Qo(),null;case 10:return bo(e),null;default:return null}}var ti={readContext:xo,useCallback:function(e,t){ko=Do(),t=null!=t?t:[e];var n=(Mo=Fo()).memoizedState;return null!==n&&_o(t,n[1])?n[0]:(Mo.memoizedState=[e,t],e)},useContext:function(e,t){return Do(),xo(e,t)},useEffect:function(e,t){Wo(516,192,e,t)},useImperativeHandle:function(e,t,n){Vo(function(){if("function"==typeof e){var n=t();return e(n),function(){return e(null)}}if(null!=e)return n=t(),e.current=n,function(){e.current=null}},n=null!=n?n.concat([e]):[e,t])},useDebugValue:function(){Do()},useLayoutEffect:Vo,useMemo:function(e,t){ko=Do(),t=null!=t?t:[e];var n=(Mo=Fo()).memoizedState;return null!==n&&_o(t,n[1])?n[0]:(e=e(),Mo.memoizedState=[e,t],e)},useReducer:Bo,useRef:function(e){return ko=Do(),null===(Mo=Fo()).memoizedState?(e={current:e},Mo.memoizedState=e):e=Mo.memoizedState,e},useState:function(e){return Bo(Uo,e)}},ni=We.ReactCurrentDispatcher,ri=We.ReactCurrentOwner,oi=1073741822,ai=0,ii=!1,ui=null,li=null,si=0,ci=-1,fi=!1,pi=null,di=!1,hi=null,yi=null,vi=null,mi=null;function gi(){if(null!==ui)for(var e=ui.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:Qo(),Nr();break;case 5:Zo(t);break;case 4:Qo();break;case 10:bo(t)}e=e.return}li=null,si=0,ci=-1,fi=!1,ui=null}function bi(){null!==vi&&(a.unstable_cancelCallback(yi),vi())}function wi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){ui=e;e:{var a=t,u=si,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Pr(t.type)&&Ar();break;case 3:Qo(),Nr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==a&&null!==a.child||(_a(t),t.effectTag&=-3),Fa(t);break;case 5:Zo(t);var s=Go(Ko.current);if(u=t.type,null!==a&&null!=t.stateNode)Ua(a,t,u,l,s),a.ref!==t.ref&&(t.effectTag|=128);else if(l){var c=Go($o.current);if(_a(t)){a=(l=t).stateNode;var f=l.type,p=l.memoizedProps,d=s;switch(a[N]=l,a[R]=p,u=void 0,s=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":wt(a,p),Sn("invalid",a),pr(d,"onChange");break;case"select":a._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",a),pr(d,"onChange");break;case"textarea":Gn(a,p),Sn("invalid",a),pr(d,"onChange")}for(u in cr(s,p),f=null,p)p.hasOwnProperty(u)&&(c=p[u],"children"===u?"string"==typeof c?a.textContent!==c&&(f=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(f=["children",""+c]):b.hasOwnProperty(u)&&null!=c&&pr(d,u));switch(s){case"input":qe(a),Et(a,p,!0);break;case"textarea":qe(a),Qn(a);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(a.onclick=dr)}u=f,l.updateQueue=u,(l=null!==u)&&La(t)}else{p=t,a=u,d=l,f=9===s.nodeType?s:s.ownerDocument,c===Xn.html&&(c=Zn(a)),c===Xn.html?"script"===a?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof d.is?f=f.createElement(a,{is:d.is}):(f=f.createElement(a),"select"===a&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(c,a),(a=f)[N]=p,a[R]=l,za(a,t,!1,!1),d=a;var h=s,y=fr(f=u,p=l);switch(f){case"iframe":case"object":Sn("load",d),s=p;break;case"video":case"audio":for(s=0;s<te.length;s++)Sn(te[s],d);s=p;break;case"source":Sn("error",d),s=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),s=p;break;case"form":Sn("reset",d),Sn("submit",d),s=p;break;case"details":Sn("toggle",d),s=p;break;case"input":wt(d,p),s=bt(d,p),Sn("invalid",d),pr(h,"onChange");break;case"option":s=$n(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},s=o({},p,{value:void 0}),Sn("invalid",d),pr(h,"onChange");break;case"textarea":Gn(d,p),s=Kn(d,p),Sn("invalid",d),pr(h,"onChange");break;default:s=p}cr(f,s),c=void 0;var v=f,m=d,g=s;for(c in g)if(g.hasOwnProperty(c)){var w=g[c];"style"===c?lr(m,w):"dangerouslySetInnerHTML"===c?null!=(w=w?w.__html:void 0)&&rr(m,w):"children"===c?"string"==typeof w?("textarea"!==v||""!==w)&&or(m,w):"number"==typeof w&&or(m,""+w):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(b.hasOwnProperty(c)?null!=w&&pr(h,c):null!=w&&mt(m,c,w,y))}switch(f){case"input":qe(d),Et(d,p,!1);break;case"textarea":qe(d),Qn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(s=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(s,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(s,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof s.onClick&&(d.onclick=dr)}(l=vr(u,l))&&La(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?Ba(a,t,a.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&i("166")),a=Go(Ko.current),Go($o.current),_a(t)?(u=(l=t).stateNode,a=l.memoizedProps,u[N]=l,(l=u.nodeValue!==a)&&La(t)):(u=t,(l=(9===a.nodeType?a:a.ownerDocument).createTextNode(l))[N]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,ui=t;break e}l=null!==l,u=null!==a&&null!==a.memoizedState,null!==a&&!l&&u&&(null!==(a=a.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=a,a.nextEffect=s):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(l!==u||0==(1&t.effectTag)&&l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Qo(),Fa(t);break;case 10:bo(t);break;case 9:case 14:break;case 17:Pr(t.type)&&Ar();break;default:i("156")}ui=null}if(t=e,1===si||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(a=u.expirationTime)>l&&(l=a),(s=u.childExpirationTime)>l&&(l=s),u=u.sibling;t.childExpirationTime=l}if(null!==ui)return ui;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=ei(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function xi(e){var t=Ia(e.alternate,e,si);return e.memoizedProps=e.pendingProps,null===t&&(t=wi(e)),ri.current=null,t}function _i(e,t){ii&&i("243"),bi(),ii=!0,ni.current=ti;var n=e.nextExpirationTimeToWorkOn;n===si&&e===li&&null!==ui||(gi(),si=n,ui=Wr((li=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==ui&&!nu();)ui=xi(ui);else for(;null!==ui;)ui=xi(ui)}catch(t){if(mo=vo=yo=null,Lo(),null===ui)r=!0,lu(t);else{null===ui&&i("271");var o=ui,a=o.return;if(null!==a){e:{var u=e,l=a,s=o,c=t;if(a=si,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var f=c;c=l;var p=-1,d=-1;do{if(13===c.tag){var h=c.alternate;if(null!==h&&null!==(h=h.memoizedState)){d=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=c.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}c=c.return}while(null!==c);c=l;do{if((h=13===c.tag)&&(h=void 0!==c.memoizedProps.fallback&&null===c.memoizedState),h){if(null===(l=c.updateQueue)?((l=new Set).add(f),c.updateQueue=l):l.add(f),0==(1&c.mode)){c.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((a=ro(1073741823)).tag=2,ao(s,a))),s.expirationTime=1073741823;break e}null===(s=u.pingCache)?(s=u.pingCache=new Qa,l=new Set,s.set(f,l)):void 0===(l=s.get(f))&&(l=new Set,s.set(f,l)),l.has(a)||(l.add(a),s=Si.bind(null,u,f,a),f.then(s,s)),-1===p?u=1073741823:(-1===d&&(d=10*(1073741822-Xr(u,a))-5e3),u=d+p),0<=u&&ci<u&&(ci=u),c.effectTag|=2048,c.expirationTime=a;break e}c=c.return}while(null!==c);c=Error((ut(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(s))}fi=!0,c=po(c,s),u=l;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=a,io(u,a=Xa(u,c,a));break e;case 1:if(f=c,p=u.type,d=u.stateNode,0==(64&u.effectTag)&&("function"==typeof p.getDerivedStateFromError||null!==d&&"function"==typeof d.componentDidCatch&&(null===mi||!mi.has(d)))){u.effectTag|=2048,u.expirationTime=a,io(u,a=Za(u,f,a));break e}}u=u.return}while(null!==u)}ui=wi(o);continue}r=!0,lu(t)}}break}if(ii=!1,mo=vo=yo=ni.current=null,Lo(),r)li=null,e.finishedWork=null;else if(null!==ui)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&i("281"),li=null,fi){if(o=e.latestPendingTime,a=e.latestSuspendedTime,u=e.latestPingedTime,0!==o&&o<n||0!==a&&a<n||0!==u&&u<n)return Qr(e,n),void Qi(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Qi(e,r,n,t,-1)}t&&-1!==ci?(Qr(e,n),(t=10*(1073741822-Xr(e,n)))<ci&&(ci=t),t=10*(1073741822-Xi()),t=ci-t,Qi(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Ei(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===mi||!mi.has(r)))return ao(n,e=Za(n,e=po(t,e),1073741823)),void Oi(n,1073741823);break;case 3:return ao(n,e=Xa(n,e=po(t,e),1073741823)),void Oi(n,1073741823)}n=n.return}3===e.tag&&(ao(e,n=Xa(e,n=po(t,e),1073741823)),Oi(e,1073741823))}function ki(e,t){return 0!==ai?e=ai:ii?e=di?1073741823:si:1&t.mode?(e=Bi?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==li&&e===si&&--e):e=1073741823,Bi&&(0===Ii||e<Ii)&&(Ii=e),e}function Si(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==li&&si===n?li=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Zr(n,e),0!==(n=e.expirationTime)&&Zi(e,n)))}function Ci(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Oi(e,t){null!==(e=Ci(e,t))&&(!ii&&0!==si&&t>si&&gi(),Jr(e,t),ii&&!di&&li===e||Zi(e,e.expirationTime),Yi>$i&&(Yi=0,i("185")))}function Mi(e,t,n,r,o){var a=ai;ai=1073741823;try{return e(t,n,r,o)}finally{ai=a}}var Ti=null,ji=null,Pi=0,Ai=void 0,Ni=!1,Ri=null,Di=0,Ii=0,Li=!1,zi=null,Fi=!1,Ui=!1,Bi=!1,qi=null,Vi=a.unstable_now(),Wi=1073741822-(Vi/10|0),Hi=Wi,$i=50,Yi=0,Ki=null;function Gi(){Wi=1073741822-((a.unstable_now()-Vi)/10|0)}function Ji(e,t){if(0!==Pi){if(t<Pi)return;null!==Ai&&a.unstable_cancelCallback(Ai)}Pi=t,e=a.unstable_now()-Vi,Ai=a.unstable_scheduleCallback(ru,{timeout:10*(1073741822-t)-e})}function Qi(e,t,n,r,o){e.expirationTime=r,0!==o||nu()?0<o&&(e.timeoutHandle=gr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Gi(),Hi=Wi,au(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Xi(){return Ni?Hi:(eu(),0!==Di&&1!==Di||(Gi(),Hi=Wi),Hi)}function Zi(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ji?(Ti=ji=e,e.nextScheduledRoot=e):(ji=ji.nextScheduledRoot=e).nextScheduledRoot=Ti):t>e.expirationTime&&(e.expirationTime=t),Ni||(Fi?Ui&&(Ri=e,Di=1073741823,iu(e,1073741823,!1)):1073741823===t?ou(1073741823,!1):Ji(e,t))}function eu(){var e=0,t=null;if(null!==ji)for(var n=ji,r=Ti;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===ji)&&i("244"),r===r.nextScheduledRoot){Ti=ji=r.nextScheduledRoot=null;break}if(r===Ti)Ti=o=r.nextScheduledRoot,ji.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ji){(ji=n).nextScheduledRoot=Ti,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===ji)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}Ri=t,Di=e}var tu=!1;function nu(){return!!tu||!!a.unstable_shouldYield()&&(tu=!0)}function ru(){try{if(!nu()&&null!==Ti){Gi();var e=Ti;do{var t=e.expirationTime;0!==t&&Wi<=t&&(e.nextExpirationTimeToWorkOn=Wi),e=e.nextScheduledRoot}while(e!==Ti)}ou(0,!0)}finally{tu=!1}}function ou(e,t){if(eu(),t)for(Gi(),Hi=Wi;null!==Ri&&0!==Di&&e<=Di&&!(tu&&Wi>Di);)iu(Ri,Di,Wi>Di),eu(),Gi(),Hi=Wi;else for(;null!==Ri&&0!==Di&&e<=Di;)iu(Ri,Di,!1),eu();if(t&&(Pi=0,Ai=null),0!==Di&&Ji(Ri,Di),Yi=0,Ki=null,null!==qi)for(e=qi,qi=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Li||(Li=!0,zi=e)}}if(Li)throw e=zi,zi=null,Li=!1,e}function au(e,t){Ni&&i("253"),Ri=e,Di=t,iu(e,t,!1),ou(1073741823,!1)}function iu(e,t,n){if(Ni&&i("245"),Ni=!0,n){var r=e.finishedWork;null!==r?uu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),_i(e,n),null!==(r=e.finishedWork)&&(nu()?e.finishedWork=r:uu(e,r,t)))}else null!==(r=e.finishedWork)?uu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),_i(e,n),null!==(r=e.finishedWork)&&uu(e,r,t));Ni=!1}function uu(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===qi?qi=[r]:qi.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===Ki?Yi++:(Ki=e,Yi=0),di=ii=!0,e.current===t&&i("177"),0===(n=e.pendingCommitExpirationTime)&&i("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Jr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Jr(e,r)):r>o&&Jr(e,r)),Zr(0,e),ri.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,hr=kn,Ln(o=In())){if("selectionStart"in o)var u={start:o.selectionStart,end:o.selectionEnd};else e:{var l=(u=(u=o.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(l&&0!==l.rangeCount){u=l.anchorNode;var s=l.anchorOffset,c=l.focusNode;l=l.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,p=-1,d=-1,h=0,y=0,v=o,m=null;t:for(;;){for(var g;v!==u||0!==s&&3!==v.nodeType||(p=f+s),v!==c||0!==l&&3!==v.nodeType||(d=f+l),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)m=v,v=g;for(;;){if(v===o)break t;if(m===u&&++h===s&&(p=f),m===c&&++y===l&&(d=f),null!==(g=v.nextSibling))break;m=(v=m).parentNode}v=g}u=-1===p||-1===d?null:{start:p,end:d}}else u=null}u=u||{start:0,end:0}}else u=null;for(yr={focusedElem:o,selectionRange:u},kn=!1,pi=r;null!==pi;){o=!1,u=void 0;try{for(;null!==pi;){if(256&pi.effectTag)e:{var b=pi.alternate;switch((s=pi).tag){case 0:case 11:case 15:Ha(2,0,s);break e;case 1:if(256&s.effectTag&&null!==b){var w=b.memoizedProps,x=b.memoizedState,_=s.stateNode,E=_.getSnapshotBeforeUpdate(s.elementType===s.type?w:ea(s.type,w),x);_.__reactInternalSnapshotBeforeUpdate=E}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}pi=pi.nextEffect}}catch(e){o=!0,u=e}o&&(null===pi&&i("178"),Ei(pi,u),null!==pi&&(pi=pi.nextEffect))}for(pi=r;null!==pi;){b=!1,w=void 0;try{for(;null!==pi;){var k=pi.effectTag;if(16&k&&or(pi.stateNode,""),128&k){var S=pi.alternate;if(null!==S){var C=S.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(14&k){case 2:Ka(pi),pi.effectTag&=-3;break;case 6:Ka(pi),pi.effectTag&=-3,Ja(pi.alternate,pi);break;case 4:Ja(pi.alternate,pi);break;case 8:Ga(x=pi),x.return=null,x.child=null,x.memoizedState=null,x.updateQueue=null;var O=x.alternate;null!==O&&(O.return=null,O.child=null,O.memoizedState=null,O.updateQueue=null)}pi=pi.nextEffect}}catch(e){b=!0,w=e}b&&(null===pi&&i("178"),Ei(pi,w),null!==pi&&(pi=pi.nextEffect))}if(C=yr,S=In(),k=C.focusedElem,b=C.selectionRange,S!==k&&k&&k.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(k.ownerDocument.documentElement,k)){null!==b&&Ln(k)&&(S=b.start,void 0===(C=b.end)&&(C=S),"selectionStart"in k?(k.selectionStart=S,k.selectionEnd=Math.min(C,k.value.length)):(C=(S=k.ownerDocument||document)&&S.defaultView||window).getSelection&&(C=C.getSelection(),w=k.textContent.length,O=Math.min(b.start,w),b=void 0===b.end?O:Math.min(b.end,w),!C.extend&&O>b&&(w=b,b=O,O=w),w=Dn(k,O),x=Dn(k,b),w&&x&&(1!==C.rangeCount||C.anchorNode!==w.node||C.anchorOffset!==w.offset||C.focusNode!==x.node||C.focusOffset!==x.offset)&&((S=S.createRange()).setStart(w.node,w.offset),C.removeAllRanges(),O>b?(C.addRange(S),C.extend(x.node,x.offset)):(S.setEnd(x.node,x.offset),C.addRange(S))))),S=[];for(C=k;C=C.parentNode;)1===C.nodeType&&S.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof k.focus&&k.focus(),k=0;k<S.length;k++)(C=S[k]).element.scrollLeft=C.left,C.element.scrollTop=C.top}for(yr=null,kn=!!hr,hr=null,e.current=t,pi=r;null!==pi;){k=!1,S=void 0;try{for(C=e,O=n;null!==pi;){var M=pi.effectTag;if(36&M){var T=pi.alternate;switch(w=O,(b=pi).tag){case 0:case 11:case 15:Ha(16,32,b);break;case 1:var j=b.stateNode;if(4&b.effectTag)if(null===T)j.componentDidMount();else{var P=b.elementType===b.type?T.memoizedProps:ea(b.type,T.memoizedProps);j.componentDidUpdate(P,T.memoizedState,j.__reactInternalSnapshotBeforeUpdate)}var A=b.updateQueue;null!==A&&co(0,A,j);break;case 3:var N=b.updateQueue;if(null!==N){if(x=null,null!==b.child)switch(b.child.tag){case 5:x=b.child.stateNode;break;case 1:x=b.child.stateNode}co(0,N,x)}break;case 5:var R=b.stateNode;null===T&&4&b.effectTag&&vr(b.type,b.memoizedProps)&&R.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}if(128&M){var D=pi.ref;if(null!==D){var I=pi.stateNode;switch(pi.tag){case 5:var L=I;break;default:L=I}"function"==typeof D?D(L):D.current=L}}512&M&&(hi=C),pi=pi.nextEffect}}catch(e){k=!0,S=e}k&&(null===pi&&i("178"),Ei(pi,S),null!==pi&&(pi=pi.nextEffect))}null!==r&&null!==hi&&(M=function(e,t){vi=yi=hi=null;var n=Ni;Ni=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;Ha(128,0,a),Ha(0,64,a)}catch(e){r=!0,o=e}r&&Ei(t,o)}t=t.nextEffect}while(null!==t);Ni=n,0!==(n=e.expirationTime)&&Zi(e,n)}.bind(null,e,r),yi=a.unstable_scheduleCallback(M),vi=M),ii=di=!1,"function"==typeof zr&&zr(t.stateNode),M=t.expirationTime,0===(t=(t=t.childExpirationTime)>M?t:M)&&(mi=null),e.expirationTime=t,e.finishedWork=null}function lu(e){null===Ri&&i("246"),Ri.expirationTime=0,Li||(Li=!0,zi=e)}function su(e,t){var n=Fi;Fi=!0;try{return e(t)}finally{(Fi=n)||Ni||ou(1073741823,!1)}}function cu(e,t){if(Fi&&!Ui){Ui=!0;try{return e(t)}finally{Ui=!1}}return e(t)}function fu(e,t,n){if(Bi)return e(t,n);Fi||Ni||0===Ii||(ou(Ii,!1),Ii=0);var r=Bi,o=Fi;Fi=Bi=!0;try{return e(t,n)}finally{Bi=r,(Fi=o)||Ni||ou(1073741823,!1)}}function pu(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Pr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);i("171"),u=void 0}if(1===n.tag){var l=n.type;if(Pr(l)){n=Dr(n,l,u);break e}}n=u}else n=Cr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),bi(),ao(a,o),Oi(a,r),r}function du(e,t,n,r){var o=t.current;return pu(e,t,n,o=ki(Xi(),o),r)}function hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function yu(e){var t=1073741822-25*(1+((1073741822-Xi()+500)/25|0));t>=oi&&(t=oi-1),this._expirationTime=oi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function vu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function mu(e,t,n){e={current:t=qr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function gu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function bu(e,t,n,r,o){gu(n)||i("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var u=o;o=function(){var e=hu(a._internalRoot);u.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new mu(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=hu(a._internalRoot);l.call(e)}}cu(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return hu(a._internalRoot)}function wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return gu(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(_t(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||i("90"),Ve(r),_t(r,o)}}}break;case"textarea":Jn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},yu.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new vu;return pu(e,t,null,n,r._onCommit),r},yu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},yu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,au(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},yu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},vu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},vu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},mu.prototype.render=function(e,t){var n=this._internalRoot,r=new vu;return null!==(t=void 0===t?null:t)&&r.then(t),du(e,n,null,r._onCommit),r},mu.prototype.unmount=function(e){var t=this._internalRoot,n=new vu;return null!==(e=void 0===e?null:e)&&n.then(e),du(null,t,null,n._onCommit),n},mu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new vu;return null!==(n=void 0===n?null:n)&&o.then(n),du(t,r,e,o._onCommit),o},mu.prototype.createBatch=function(){var e=new yu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ae=su,Ne=fu,Re=function(){Ni||0===Ii||(ou(Ii,!1),Ii=0)};var xu={createPortal:wu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return bu(null,e,t,!0,n)},render:function(e,t,n){return bu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&i("38"),bu(e,t,n,!1,r)},unmountComponentAtNode:function(e){return gu(e)||i("40"),!!e._reactRootContainer&&(cu(function(){bu(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return wu.apply(void 0,arguments)},unstable_batchedUpdates:su,unstable_interactiveUpdates:fu,flushSync:function(e,t){Ni&&i("187");var n=Fi;Fi=!0;try{return Mi(e,t)}finally{Fi=n,ou(1073741823,!1)}},unstable_createRoot:_u,unstable_flushControlled:function(e){var t=Fi;Fi=!0;try{Mi(e)}finally{(Fi=t)||Ni||ou(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,z,T.injectEventPluginsByName,g,W,function(e){C(e,V)},je,Pe,Mn,P]}};function _u(e,t){return gu(e)||i("299","createRoot"),new mu(e,!0,null!=t&&!0===t.hydrate)}xu.createRoot=_u,xu.unstable_createRoot=void 0,function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zr=Ur(function(e){return t.onCommitFiberRoot(n,e)}),Fr=Ur(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:We.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:D,bundleType:0,version:"16.8.0-alpha.1",rendererPackageName:"react-dom"});var Eu={default:xu},ku=Eu&&xu||Eu;e.exports=ku.default||ku},function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.0-alpha.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,u=!1,l=!1;function s(){if(!u){var e=n.expirationTime;l?E():l=!0,_(p,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,u=i;o=e,i=t;try{var l=r()}finally{o=a,i=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,s()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){u=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?s():l=!1}}}function p(e){u=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{c()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{c()}while(null!==n&&!k())}finally{u=!1,r=o,null!==n?s():l=!1,f()}}var d,h,y=Date,v="function"==typeof setTimeout?setTimeout:void 0,m="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){d=g(function(t){m(h),e(t)}),h=v(function(){b(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return y.now()};var _,E,k,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var C=S._schedMock;_=C[0],E=C[1],k=C[2],t.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var O=null,M=function(e){if(null!==O)try{O(e)}finally{O=null}};_=function(e){null!==O?setTimeout(_,0,e):(O=e,setTimeout(M,0,!1))},E=function(){O=null},k=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var T=null,j=!1,P=-1,A=!1,N=!1,R=0,D=33,I=33;k=function(){return R<=t.unstable_now()};var L=new MessageChannel,z=L.port2;L.port1.onmessage=function(){j=!1;var e=T,n=P;T=null,P=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return A||(A=!0,w(F)),T=e,void(P=n);o=!0}if(null!==e){N=!0;try{e(o)}finally{N=!1}}};var F=function(e){if(null!==T){w(F);var t=e-R+I;t<I&&D<I?(8>t&&(t=8),I=t<D?D:t):D=t,R=e+I,j||(j=!0,z.postMessage(void 0))}else A=!1};_=function(e,t){T=e,P=t,N||0>t?z.postMessage(void 0):A||(A=!0,w(F))},E=function(){T=null,j=!1,P=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{i=null;var u=n;do{if(u.expirationTime>r){i=u;break}u=u.next}while(u!==n);null===i?i=n:i===n&&(n=e,s()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||k())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(10))},function(e,t,n){"use strict";var r=n(26);function o(){}e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){var r,o;!function(){var a={version:"3.5.17"},i=[].slice,u=function(e){return i.call(e)},l=this.document;function s(e){return e&&(e.ownerDocument||e.document||e).documentElement}function c(e){return e&&(e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView)}if(l)try{u(l.documentElement.childNodes)[0].nodeType}catch(e){u=function(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement("DIV").style.setProperty("opacity",0,"")}catch(e){var f=this.Element.prototype,p=f.setAttribute,d=f.setAttributeNS,h=this.CSSStyleDeclaration.prototype,y=h.setProperty;f.setAttribute=function(e,t){p.call(this,e,t+"")},f.setAttributeNS=function(e,t,n){d.call(this,e,t,n+"")},h.setProperty=function(e,t,n){y.call(this,e,t+"",n)}}function v(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function m(e){return null===e?NaN:+e}function g(e){return!isNaN(e)}function b(e){return{left:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var a=r+o>>>1;e(t[a],n)<0?r=a+1:o=a}return r},right:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var a=r+o>>>1;e(t[a],n)>0?o=a:r=a+1}return r}}}a.ascending=v,a.descending=function(e,t){return t<e?-1:t>e?1:t>=e?0:NaN},a.min=function(e,t){var n,r,o=-1,a=e.length;if(1===arguments.length){for(;++o<a;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<a;)null!=(r=e[o])&&n>r&&(n=r)}else{for(;++o<a;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<a;)null!=(r=t.call(e,e[o],o))&&n>r&&(n=r)}return n},a.max=function(e,t){var n,r,o=-1,a=e.length;if(1===arguments.length){for(;++o<a;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<a;)null!=(r=e[o])&&r>n&&(n=r)}else{for(;++o<a;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<a;)null!=(r=t.call(e,e[o],o))&&r>n&&(n=r)}return n},a.extent=function(e,t){var n,r,o,a=-1,i=e.length;if(1===arguments.length){for(;++a<i;)if(null!=(r=e[a])&&r>=r){n=o=r;break}for(;++a<i;)null!=(r=e[a])&&(n>r&&(n=r),o<r&&(o=r))}else{for(;++a<i;)if(null!=(r=t.call(e,e[a],a))&&r>=r){n=o=r;break}for(;++a<i;)null!=(r=t.call(e,e[a],a))&&(n>r&&(n=r),o<r&&(o=r))}return[n,o]},a.sum=function(e,t){var n,r=0,o=e.length,a=-1;if(1===arguments.length)for(;++a<o;)g(n=+e[a])&&(r+=n);else for(;++a<o;)g(n=+t.call(e,e[a],a))&&(r+=n);return r},a.mean=function(e,t){var n,r=0,o=e.length,a=-1,i=o;if(1===arguments.length)for(;++a<o;)g(n=m(e[a]))?r+=n:--i;else for(;++a<o;)g(n=m(t.call(e,e[a],a)))?r+=n:--i;if(i)return r/i},a.quantile=function(e,t){var n=(e.length-1)*t+1,r=Math.floor(n),o=+e[r-1],a=n-r;return a?o+a*(e[r]-o):o},a.median=function(e,t){var n,r=[],o=e.length,i=-1;if(1===arguments.length)for(;++i<o;)g(n=m(e[i]))&&r.push(n);else for(;++i<o;)g(n=m(t.call(e,e[i],i)))&&r.push(n);if(r.length)return a.quantile(r.sort(v),.5)},a.variance=function(e,t){var n,r,o=e.length,a=0,i=0,u=-1,l=0;if(1===arguments.length)for(;++u<o;)g(n=m(e[u]))&&(i+=(r=n-a)*(n-(a+=r/++l)));else for(;++u<o;)g(n=m(t.call(e,e[u],u)))&&(i+=(r=n-a)*(n-(a+=r/++l)));if(l>1)return i/(l-1)},a.deviation=function(){var e=a.variance.apply(this,arguments);return e?Math.sqrt(e):e};var w=b(v);function x(e){return e.length}a.bisectLeft=w.left,a.bisect=a.bisectRight=w.right,a.bisector=function(e){return b(1===e.length?function(t,n){return v(e(t),n)}:e)},a.shuffle=function(e,t,n){(a=arguments.length)<3&&(n=e.length,a<2&&(t=0));for(var r,o,a=n-t;a;)o=Math.random()*a--|0,r=e[a+t],e[a+t]=e[o+t],e[o+t]=r;return e},a.permute=function(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r},a.pairs=function(e){for(var t=0,n=e.length-1,r=e[0],o=new Array(n<0?0:n);t<n;)o[t]=[r,r=e[++t]];return o},a.transpose=function(e){if(!(o=e.length))return[];for(var t=-1,n=a.min(e,x),r=new Array(n);++t<n;)for(var o,i=-1,u=r[t]=new Array(o);++i<o;)u[i]=e[i][t];return r},a.zip=function(){return a.transpose(arguments)},a.keys=function(e){var t=[];for(var n in e)t.push(n);return t},a.values=function(e){var t=[];for(var n in e)t.push(e[n]);return t},a.entries=function(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t},a.merge=function(e){for(var t,n,r,o=e.length,a=-1,i=0;++a<o;)i+=e[a].length;for(n=new Array(i);--o>=0;)for(t=(r=e[o]).length;--t>=0;)n[--i]=r[t];return n};var _=Math.abs;function E(e,t){for(var n in t)Object.defineProperty(e.prototype,n,{value:t[n],enumerable:!1})}function k(){this._=Object.create(null)}a.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("infinite range");var r,o=[],a=function(e){var t=1;for(;e*t%1;)t*=10;return t}(_(n)),i=-1;if(e*=a,t*=a,(n*=a)<0)for(;(r=e+n*++i)>t;)o.push(r/a);else for(;(r=e+n*++i)<t;)o.push(r/a);return o},a.map=function(e,t){var n=new k;if(e instanceof k)e.forEach(function(e,t){n.set(e,t)});else if(Array.isArray(e)){var r,o=-1,a=e.length;if(1===arguments.length)for(;++o<a;)n.set(o,e[o]);else for(;++o<a;)n.set(t.call(e,r=e[o],o),r)}else for(var i in e)n.set(i,e[i]);return n};var S="__proto__",C="\0";function O(e){return(e+="")===S||e[0]===C?C+e:e}function M(e){return(e+="")[0]===C?e.slice(1):e}function T(e){return O(e)in this._}function j(e){return(e=O(e))in this._&&delete this._[e]}function P(){var e=[];for(var t in this._)e.push(M(t));return e}function A(){var e=0;for(var t in this._)++e;return e}function N(){for(var e in this._)return!1;return!0}function R(){this._=Object.create(null)}function D(e){return e}function I(e,t,n){return function(){var r=n.apply(t,arguments);return r===t?e:r}}function L(e,t){if(t in e)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var n=0,r=z.length;n<r;++n){var o=z[n]+t;if(o in e)return o}}E(k,{has:T,get:function(e){return this._[O(e)]},set:function(e,t){return this._[O(e)]=t},remove:j,keys:P,values:function(){var e=[];for(var t in this._)e.push(this._[t]);return e},entries:function(){var e=[];for(var t in this._)e.push({key:M(t),value:this._[t]});return e},size:A,empty:N,forEach:function(e){for(var t in this._)e.call(this,M(t),this._[t])}}),a.nest=function(){var e,t,n={},r=[],o=[];function i(o,a,u){if(u>=r.length)return t?t.call(n,a):e?a.sort(e):a;for(var l,s,c,f,p=-1,d=a.length,h=r[u++],y=new k;++p<d;)(f=y.get(l=h(s=a[p])))?f.push(s):y.set(l,[s]);return o?(s=o(),c=function(e,t){s.set(e,i(o,t,u))}):(s={},c=function(e,t){s[e]=i(o,t,u)}),y.forEach(c),s}return n.map=function(e,t){return i(t,e,0)},n.entries=function(e){return function e(t,n){if(n>=r.length)return t;var a=[],i=o[n++];return t.forEach(function(t,r){a.push({key:t,values:e(r,n)})}),i?a.sort(function(e,t){return i(e.key,t.key)}):a}(i(a.map,e,0),0)},n.key=function(e){return r.push(e),n},n.sortKeys=function(e){return o[r.length-1]=e,n},n.sortValues=function(t){return e=t,n},n.rollup=function(e){return t=e,n},n},a.set=function(e){var t=new R;if(e)for(var n=0,r=e.length;n<r;++n)t.add(e[n]);return t},E(R,{has:T,add:function(e){return this._[O(e+="")]=!0,e},remove:j,values:P,size:A,empty:N,forEach:function(e){for(var t in this._)e.call(this,M(t))}}),a.behavior={},a.rebind=function(e,t){for(var n,r=1,o=arguments.length;++r<o;)e[n=arguments[r]]=I(e,t,t[n]);return e};var z=["webkit","ms","moz","Moz","o","O"];function F(){}function U(){}function B(e){var t=[],n=new k;function r(){for(var n,r=t,o=-1,a=r.length;++o<a;)(n=r[o].on)&&n.apply(this,arguments);return e}return r.on=function(r,o){var a,i=n.get(r);return arguments.length<2?i&&i.on:(i&&(i.on=null,t=t.slice(0,a=t.indexOf(i)).concat(t.slice(a+1)),n.remove(r)),o&&t.push(n.set(r,{on:o})),e)},r}function q(){a.event.preventDefault()}function V(){for(var e,t=a.event;e=t.sourceEvent;)t=e;return t}function W(e){for(var t=new U,n=0,r=arguments.length;++n<r;)t[arguments[n]]=B(t);return t.of=function(n,r){return function(o){try{var i=o.sourceEvent=a.event;o.target=e,a.event=o,t[o.type].apply(n,r)}finally{a.event=i}}},t}a.dispatch=function(){for(var e=new U,t=-1,n=arguments.length;++t<n;)e[arguments[t]]=B(e);return e},U.prototype.on=function(e,t){var n=e.indexOf("."),r="";if(n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),e)return arguments.length<2?this[e].on(r):this[e].on(r,t);if(2===arguments.length){if(null==t)for(e in this)this.hasOwnProperty(e)&&this[e].on(r,null);return this}},a.event=null,a.requote=function(e){return e.replace(H,"\\$&")};var H=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,$={}.__proto__?function(e,t){e.__proto__=t}:function(e,t){for(var n in t)e[n]=t[n]};function Y(e){return $(e,Q),e}var K=function(e,t){return t.querySelector(e)},G=function(e,t){return t.querySelectorAll(e)},J=function(e,t){var n=e.matches||e[L(e,"matchesSelector")];return(J=function(e,t){return n.call(e,t)})(e,t)};"function"==typeof Sizzle&&(K=function(e,t){return Sizzle(e,t)[0]||null},G=Sizzle,J=Sizzle.matchesSelector),a.selection=function(){return a.select(l.documentElement)};var Q=a.selection.prototype=[];function X(e){return"function"==typeof e?e:function(){return K(e,this)}}function Z(e){return"function"==typeof e?e:function(){return G(e,this)}}Q.select=function(e){var t,n,r,o,a=[];e=X(e);for(var i=-1,u=this.length;++i<u;){a.push(t=[]),t.parentNode=(r=this[i]).parentNode;for(var l=-1,s=r.length;++l<s;)(o=r[l])?(t.push(n=e.call(o,o.__data__,l,i)),n&&"__data__"in o&&(n.__data__=o.__data__)):t.push(null)}return Y(a)},Q.selectAll=function(e){var t,n,r=[];e=Z(e);for(var o=-1,a=this.length;++o<a;)for(var i=this[o],l=-1,s=i.length;++l<s;)(n=i[l])&&(r.push(t=u(e.call(n,n.__data__,l,o))),t.parentNode=n);return Y(r)};var ee="http://www.w3.org/1999/xhtml",te={svg:"http://www.w3.org/2000/svg",xhtml:ee,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ne(e,t){return e=a.ns.qualify(e),null==t?e.local?function(){this.removeAttributeNS(e.space,e.local)}:function(){this.removeAttribute(e)}:"function"==typeof t?e.local?function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}:function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}:e.local?function(){this.setAttributeNS(e.space,e.local,t)}:function(){this.setAttribute(e,t)}}function re(e){return e.trim().replace(/\s+/g," ")}function oe(e){return new RegExp("(?:^|\\s+)"+a.requote(e)+"(?:\\s+|$)","g")}function ae(e){return(e+"").trim().split(/^|\s+/)}function ie(e,t){var n=(e=ae(e).map(ue)).length;return"function"==typeof t?function(){for(var r=-1,o=t.apply(this,arguments);++r<n;)e[r](this,o)}:function(){for(var r=-1;++r<n;)e[r](this,t)}}function ue(e){var t=oe(e);return function(n,r){if(o=n.classList)return r?o.add(e):o.remove(e);var o=n.getAttribute("class")||"";r?(t.lastIndex=0,t.test(o)||n.setAttribute("class",re(o+" "+e))):n.setAttribute("class",re(o.replace(t," ")))}}function le(e,t,n){return null==t?function(){this.style.removeProperty(e)}:"function"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}:function(){this.style.setProperty(e,t,n)}}function se(e,t){return null==t?function(){delete this[e]}:"function"==typeof t?function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}:function(){this[e]=t}}function ce(e){return"function"==typeof e?e:(e=a.ns.qualify(e)).local?function(){return this.ownerDocument.createElementNS(e.space,e.local)}:function(){var t=this.ownerDocument,n=this.namespaceURI;return n===ee&&t.documentElement.namespaceURI===ee?t.createElement(e):t.createElementNS(n,e)}}function fe(){var e=this.parentNode;e&&e.removeChild(this)}function pe(e){return{__data__:e}}function de(e){return function(){return J(this,e)}}function he(e,t){for(var n=0,r=e.length;n<r;n++)for(var o,a=e[n],i=0,u=a.length;i<u;i++)(o=a[i])&&t(o,i,n);return e}function ye(e){return $(e,ve),e}a.ns={prefix:te,qualify:function(e){var t=e.indexOf(":"),n=e;return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),te.hasOwnProperty(n)?{space:te[n],local:e}:e}},Q.attr=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node();return(e=a.ns.qualify(e)).local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}for(t in e)this.each(ne(t,e[t]));return this}return this.each(ne(e,t))},Q.classed=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node(),r=(e=ae(e)).length,o=-1;if(t=n.classList){for(;++o<r;)if(!t.contains(e[o]))return!1}else for(t=n.getAttribute("class");++o<r;)if(!oe(e[o]).test(t))return!1;return!0}for(t in e)this.each(ie(t,e[t]));return this}return this.each(ie(e,t))},Q.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.each(le(n,e[n],t));return this}if(r<2){var o=this.node();return c(o).getComputedStyle(o,null).getPropertyValue(e)}n=""}return this.each(le(e,t,n))},Q.property=function(e,t){if(arguments.length<2){if("string"==typeof e)return this.node()[e];for(t in e)this.each(se(t,e[t]));return this}return this.each(se(e,t))},Q.text=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}:null==e?function(){this.textContent=""}:function(){this.textContent=e}):this.node().textContent},Q.html=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}:null==e?function(){this.innerHTML=""}:function(){this.innerHTML=e}):this.node().innerHTML},Q.append=function(e){return e=ce(e),this.select(function(){return this.appendChild(e.apply(this,arguments))})},Q.insert=function(e,t){return e=ce(e),t=X(t),this.select(function(){return this.insertBefore(e.apply(this,arguments),t.apply(this,arguments)||null)})},Q.remove=function(){return this.each(fe)},Q.data=function(e,t){var n,r,o=-1,a=this.length;if(!arguments.length){for(e=new Array(a=(n=this[0]).length);++o<a;)(r=n[o])&&(e[o]=r.__data__);return e}function i(e,n){var r,o,a,i=e.length,c=n.length,f=Math.min(i,c),p=new Array(c),d=new Array(c),h=new Array(i);if(t){var y,v=new k,m=new Array(i);for(r=-1;++r<i;)(o=e[r])&&(v.has(y=t.call(o,o.__data__,r))?h[r]=o:v.set(y,o),m[r]=y);for(r=-1;++r<c;)(o=v.get(y=t.call(n,a=n[r],r)))?!0!==o&&(p[r]=o,o.__data__=a):d[r]=pe(a),v.set(y,!0);for(r=-1;++r<i;)r in m&&!0!==v.get(m[r])&&(h[r]=e[r])}else{for(r=-1;++r<f;)o=e[r],a=n[r],o?(o.__data__=a,p[r]=o):d[r]=pe(a);for(;r<c;++r)d[r]=pe(n[r]);for(;r<i;++r)h[r]=e[r]}d.update=p,d.parentNode=p.parentNode=h.parentNode=e.parentNode,u.push(d),l.push(p),s.push(h)}var u=ye([]),l=Y([]),s=Y([]);if("function"==typeof e)for(;++o<a;)i(n=this[o],e.call(n,n.parentNode.__data__,o));else for(;++o<a;)i(n=this[o],e);return l.enter=function(){return u},l.exit=function(){return s},l},Q.datum=function(e){return arguments.length?this.property("__data__",e):this.property("__data__")},Q.filter=function(e){var t,n,r,o=[];"function"!=typeof e&&(e=de(e));for(var a=0,i=this.length;a<i;a++){o.push(t=[]),t.parentNode=(n=this[a]).parentNode;for(var u=0,l=n.length;u<l;u++)(r=n[u])&&e.call(r,r.__data__,u,a)&&t.push(r)}return Y(o)},Q.order=function(){for(var e=-1,t=this.length;++e<t;)for(var n,r=this[e],o=r.length-1,a=r[o];--o>=0;)(n=r[o])&&(a&&a!==n.nextSibling&&a.parentNode.insertBefore(n,a),a=n);return this},Q.sort=function(e){e=function(e){arguments.length||(e=v);return function(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}}.apply(this,arguments);for(var t=-1,n=this.length;++t<n;)this[t].sort(e);return this.order()},Q.each=function(e){return he(this,function(t,n,r){e.call(t,t.__data__,n,r)})},Q.call=function(e){var t=u(arguments);return e.apply(t[0]=this,t),this},Q.empty=function(){return!this.node()},Q.node=function(){for(var e=0,t=this.length;e<t;e++)for(var n=this[e],r=0,o=n.length;r<o;r++){var a=n[r];if(a)return a}return null},Q.size=function(){var e=0;return he(this,function(){++e}),e};var ve=[];function me(e,t,n){var r="__on"+e,o=e.indexOf("."),i=be;o>0&&(e=e.slice(0,o));var l=ge.get(e);function s(){var t=this[r];t&&(this.removeEventListener(e,t,t.$),delete this[r])}return l&&(e=l,i=we),o?t?function(){var o=i(t,u(arguments));s.call(this),this.addEventListener(e,this[r]=o,o.$=n),o._=t}:s:t?F:function(){var t,n=new RegExp("^__on([^.]+)"+a.requote(e)+"$");for(var r in this)if(t=r.match(n)){var o=this[r];this.removeEventListener(t[1],o,o.$),delete this[r]}}}a.selection.enter=ye,a.selection.enter.prototype=ve,ve.append=Q.append,ve.empty=Q.empty,ve.node=Q.node,ve.call=Q.call,ve.size=Q.size,ve.select=function(e){for(var t,n,r,o,a,i=[],u=-1,l=this.length;++u<l;){r=(o=this[u]).update,i.push(t=[]),t.parentNode=o.parentNode;for(var s=-1,c=o.length;++s<c;)(a=o[s])?(t.push(r[s]=n=e.call(o.parentNode,a.__data__,s,u)),n.__data__=a.__data__):t.push(null)}return Y(i)},ve.insert=function(e,t){var n,r,o;return arguments.length<2&&(n=this,t=function(e,t,a){var i,u=n[a].update,l=u.length;for(a!=o&&(o=a,r=0),t>=r&&(r=t+1);!(i=u[r])&&++r<l;);return i}),Q.insert.call(this,e,t)},a.select=function(e){var t;return"string"==typeof e?(t=[K(e,l)]).parentNode=l.documentElement:(t=[e]).parentNode=s(e),Y([t])},a.selectAll=function(e){var t;return"string"==typeof e?(t=u(G(e,l))).parentNode=l.documentElement:(t=u(e)).parentNode=null,Y([t])},Q.on=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=!1),e)this.each(me(n,e[n],t));return this}if(r<2)return(r=this.node()["__on"+e])&&r._;n=!1}return this.each(me(e,t,n))};var ge=a.map({mouseenter:"mouseover",mouseleave:"mouseout"});function be(e,t){return function(n){var r=a.event;a.event=n,t[0]=this.__data__;try{e.apply(this,t)}finally{a.event=r}}}function we(e,t){var n=be(e,t);return function(e){var t=e.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||n.call(this,e)}}l&&ge.forEach(function(e){"on"+e in l&&ge.remove(e)});var xe,_e=0;function Ee(e){var t=".dragsuppress-"+ ++_e,n="click"+t,r=a.select(c(e)).on("touchmove"+t,q).on("dragstart"+t,q).on("selectstart"+t,q);if(null==xe&&(xe=!("onselectstart"in e)&&L(e.style,"userSelect")),xe){var o=s(e).style,i=o[xe];o[xe]="none"}return function(e){if(r.on(t,null),xe&&(o[xe]=i),e){var a=function(){r.on(n,null)};r.on(n,function(){q(),a()},!0),setTimeout(a,0)}}}a.mouse=function(e){return Se(e,V())};var ke=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function Se(e,t){t.changedTouches&&(t=t.changedTouches[0]);var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();if(ke<0){var o=c(e);if(o.scrollX||o.scrollY){var i=(n=a.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important"))[0][0].getScreenCTM();ke=!(i.f||i.e),n.remove()}}return ke?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var u=e.getBoundingClientRect();return[t.clientX-u.left-e.clientLeft,t.clientY-u.top-e.clientTop]}function Ce(){return a.event.changedTouches[0].identifier}a.touch=function(e,t,n){if(arguments.length<3&&(n=t,t=V().changedTouches),t)for(var r,o=0,a=t.length;o<a;++o)if((r=t[o]).identifier===n)return Se(e,r)},a.behavior.drag=function(){var e=W(o,"drag","dragstart","dragend"),t=null,n=i(F,a.mouse,c,"mousemove","mouseup"),r=i(Ce,a.touch,D,"touchmove","touchend");function o(){this.on("mousedown.drag",n).on("touchstart.drag",r)}function i(n,r,o,i,u){return function(){var l,s=a.event.target.correspondingElement||a.event.target,c=this.parentNode,f=e.of(this,arguments),p=0,d=n(),h=".drag"+(null==d?"":"-"+d),y=a.select(o(s)).on(i+h,function(){var e,t,n=r(c,d);if(!n)return;e=n[0]-m[0],t=n[1]-m[1],p|=e|t,m=n,f({type:"drag",x:n[0]+l[0],y:n[1]+l[1],dx:e,dy:t})}).on(u+h,function(){if(!r(c,d))return;y.on(i+h,null).on(u+h,null),v(p),f({type:"dragend"})}),v=Ee(s),m=r(c,d);l=t?[(l=t.apply(this,arguments)).x-m[0],l.y-m[1]]:[0,0],f({type:"dragstart"})}}return o.origin=function(e){return arguments.length?(t=e,o):t},a.rebind(o,e,"on")},a.touches=function(e,t){return arguments.length<2&&(t=V().touches),t?u(t).map(function(t){var n=Se(e,t);return n.identifier=t.identifier,n}):[]};var Oe=1e-6,Me=Oe*Oe,Te=Math.PI,je=2*Te,Pe=je-Oe,Ae=Te/2,Ne=Te/180,Re=180/Te;function De(e){return e>0?1:e<0?-1:0}function Ie(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}function Le(e){return e>1?0:e<-1?Te:Math.acos(e)}function ze(e){return e>1?Ae:e<-1?-Ae:Math.asin(e)}function Fe(e){return((e=Math.exp(e))+1/e)/2}function Ue(e){return(e=Math.sin(e/2))*e}var Be=Math.SQRT2;a.interpolateZoom=function(e,t){var n,r,o=e[0],a=e[1],i=e[2],u=t[0],l=t[1],s=t[2],c=u-o,f=l-a,p=c*c+f*f;if(p<Me)r=Math.log(s/i)/Be,n=function(e){return[o+e*c,a+e*f,i*Math.exp(Be*e*r)]};else{var d=Math.sqrt(p),h=(s*s-i*i+4*p)/(2*i*2*d),y=(s*s-i*i-4*p)/(2*s*2*d),v=Math.log(Math.sqrt(h*h+1)-h),m=Math.log(Math.sqrt(y*y+1)-y);r=(m-v)/Be,n=function(e){var t,n=e*r,u=Fe(v),l=i/(2*d)*(u*(t=Be*n+v,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(v));return[o+l*c,a+l*f,i*u/Fe(Be*n+v)]}}return n.duration=1e3*r,n},a.behavior.zoom=function(){var e,t,n,r,o,i,u,s,f,p={x:0,y:0,k:1},d=[960,500],h=We,y=250,v=0,m="mousedown.zoom",g="mousemove.zoom",b="mouseup.zoom",w="touchstart.zoom",x=W(_,"zoomstart","zoom","zoomend");function _(e){e.on(m,P).on(Ve+".zoom",N).on("dblclick.zoom",R).on(w,A)}function E(e){return[(e[0]-p.x)/p.k,(e[1]-p.y)/p.k]}function k(e){p.k=Math.max(h[0],Math.min(h[1],e))}function S(e,t){t=function(e){return[e[0]*p.k+p.x,e[1]*p.k+p.y]}(t),p.x+=e[0]-t[0],p.y+=e[1]-t[1]}function C(e,n,r,o){e.__chart__={x:p.x,y:p.y,k:p.k},k(Math.pow(2,o)),S(t=n,r),e=a.select(e),y>0&&(e=e.transition().duration(y)),e.call(_.event)}function O(){u&&u.domain(i.range().map(function(e){return(e-p.x)/p.k}).map(i.invert)),f&&f.domain(s.range().map(function(e){return(e-p.y)/p.k}).map(s.invert))}function M(e){v++||e({type:"zoomstart"})}function T(e){O(),e({type:"zoom",scale:p.k,translate:[p.x,p.y]})}function j(e){--v||(e({type:"zoomend"}),t=null)}function P(){var e=this,t=x.of(e,arguments),n=0,r=a.select(c(e)).on(g,function(){n=1,S(a.mouse(e),o),T(t)}).on(b,function(){r.on(g,null).on(b,null),i(n),j(t)}),o=E(a.mouse(e)),i=Ee(e);mu.call(e),M(t)}function A(){var e,t=this,n=x.of(t,arguments),r={},i=0,u=".zoom-"+a.event.changedTouches[0].identifier,l="touchmove"+u,s="touchend"+u,c=[],f=a.select(t),d=Ee(t);function h(){var n=a.touches(t);return e=p.k,n.forEach(function(e){e.identifier in r&&(r[e.identifier]=E(e))}),n}function y(){var e=a.event.target;a.select(e).on(l,v).on(s,g),c.push(e);for(var n=a.event.changedTouches,u=0,f=n.length;u<f;++u)r[n[u].identifier]=null;var d=h(),y=Date.now();if(1===d.length){if(y-o<500){var m=d[0];C(t,m,r[m.identifier],Math.floor(Math.log(p.k)/Math.LN2)+1),q()}o=y}else if(d.length>1){m=d[0];var b=d[1],w=m[0]-b[0],x=m[1]-b[1];i=w*w+x*x}}function v(){var u,l,s,c,f=a.touches(t);mu.call(t);for(var p=0,d=f.length;p<d;++p,c=null)if(s=f[p],c=r[s.identifier]){if(l)break;u=s,l=c}if(c){var h=(h=s[0]-u[0])*h+(h=s[1]-u[1])*h,y=i&&Math.sqrt(h/i);u=[(u[0]+s[0])/2,(u[1]+s[1])/2],l=[(l[0]+c[0])/2,(l[1]+c[1])/2],k(y*e)}o=null,S(u,l),T(n)}function g(){if(a.event.touches.length){for(var e=a.event.changedTouches,t=0,o=e.length;t<o;++t)delete r[e[t].identifier];for(var i in r)return void h()}a.selectAll(c).on(u,null),f.on(m,P).on(w,A),d(),j(n)}y(),M(n),f.on(m,null).on(w,y)}function N(){var o=x.of(this,arguments);r?clearTimeout(r):(mu.call(this),e=E(t=n||a.mouse(this)),M(o)),r=setTimeout(function(){r=null,j(o)},50),q(),k(Math.pow(2,.002*qe())*p.k),S(t,e),T(o)}function R(){var e=a.mouse(this),t=Math.log(p.k)/Math.LN2;C(this,e,E(e),a.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return Ve||(Ve="onwheel"in l?(qe=function(){return-a.event.deltaY*(a.event.deltaMode?120:1)},"wheel"):"onmousewheel"in l?(qe=function(){return a.event.wheelDelta},"mousewheel"):(qe=function(){return-a.event.detail},"MozMousePixelScroll")),_.event=function(e){e.each(function(){var e=x.of(this,arguments),n=p;wu?a.select(this).transition().each("start.zoom",function(){p=this.__chart__||{x:0,y:0,k:1},M(e)}).tween("zoom:zoom",function(){var r=d[0],o=d[1],i=t?t[0]:r/2,u=t?t[1]:o/2,l=a.interpolateZoom([(i-p.x)/p.k,(u-p.y)/p.k,r/p.k],[(i-n.x)/n.k,(u-n.y)/n.k,r/n.k]);return function(t){var n=l(t),o=r/n[2];this.__chart__=p={x:i-n[0]*o,y:u-n[1]*o,k:o},T(e)}}).each("interrupt.zoom",function(){j(e)}).each("end.zoom",function(){j(e)}):(this.__chart__=p,M(e),T(e),j(e))})},_.translate=function(e){return arguments.length?(p={x:+e[0],y:+e[1],k:p.k},O(),_):[p.x,p.y]},_.scale=function(e){return arguments.length?(p={x:p.x,y:p.y,k:null},k(+e),O(),_):p.k},_.scaleExtent=function(e){return arguments.length?(h=null==e?We:[+e[0],+e[1]],_):h},_.center=function(e){return arguments.length?(n=e&&[+e[0],+e[1]],_):n},_.size=function(e){return arguments.length?(d=e&&[+e[0],+e[1]],_):d},_.duration=function(e){return arguments.length?(y=+e,_):y},_.x=function(e){return arguments.length?(u=e,i=e.copy(),p={x:0,y:0,k:1},_):u},_.y=function(e){return arguments.length?(f=e,s=e.copy(),p={x:0,y:0,k:1},_):f},a.rebind(_,x,"on")};var qe,Ve,We=[0,1/0];function He(){}function $e(e,t,n){return this instanceof $e?(this.h=+e,this.s=+t,void(this.l=+n)):arguments.length<2?e instanceof $e?new $e(e.h,e.s,e.l):ht(""+e,yt,$e):new $e(e,t,n)}a.color=He,He.prototype.toString=function(){return this.rgb()+""},a.hsl=$e;var Ye=$e.prototype=new He;function Ke(e,t,n){var r,o;function a(e){return Math.round(255*function(e){return e>360?e-=360:e<0&&(e+=360),e<60?r+(o-r)*e/60:e<180?o:e<240?r+(o-r)*(240-e)/60:r}(e))}return e=isNaN(e)?0:(e%=360)<0?e+360:e,t=isNaN(t)?0:t<0?0:t>1?1:t,r=2*(n=n<0?0:n>1?1:n)-(o=n<=.5?n*(1+t):n+t-n*t),new st(a(e+120),a(e),a(e-120))}function Ge(e,t,n){return this instanceof Ge?(this.h=+e,this.c=+t,void(this.l=+n)):arguments.length<2?e instanceof Ge?new Ge(e.h,e.c,e.l):at(e instanceof Xe?e.l:(e=vt((e=a.rgb(e)).r,e.g,e.b)).l,e.a,e.b):new Ge(e,t,n)}Ye.brighter=function(e){return e=Math.pow(.7,arguments.length?e:1),new $e(this.h,this.s,this.l/e)},Ye.darker=function(e){return e=Math.pow(.7,arguments.length?e:1),new $e(this.h,this.s,e*this.l)},Ye.rgb=function(){return Ke(this.h,this.s,this.l)},a.hcl=Ge;var Je=Ge.prototype=new He;function Qe(e,t,n){return isNaN(e)&&(e=0),isNaN(t)&&(t=0),new Xe(n,Math.cos(e*=Ne)*t,Math.sin(e)*t)}function Xe(e,t,n){return this instanceof Xe?(this.l=+e,this.a=+t,void(this.b=+n)):arguments.length<2?e instanceof Xe?new Xe(e.l,e.a,e.b):e instanceof Ge?Qe(e.h,e.c,e.l):vt((e=st(e)).r,e.g,e.b):new Xe(e,t,n)}Je.brighter=function(e){return new Ge(this.h,this.c,Math.min(100,this.l+Ze*(arguments.length?e:1)))},Je.darker=function(e){return new Ge(this.h,this.c,Math.max(0,this.l-Ze*(arguments.length?e:1)))},Je.rgb=function(){return Qe(this.h,this.c,this.l).rgb()},a.lab=Xe;var Ze=18,et=.95047,tt=1,nt=1.08883,rt=Xe.prototype=new He;function ot(e,t,n){var r=(e+16)/116,o=r+t/500,a=r-n/200;return new st(lt(3.2404542*(o=it(o)*et)-1.5371385*(r=it(r)*tt)-.4985314*(a=it(a)*nt)),lt(-.969266*o+1.8760108*r+.041556*a),lt(.0556434*o-.2040259*r+1.0572252*a))}function at(e,t,n){return e>0?new Ge(Math.atan2(n,t)*Re,Math.sqrt(t*t+n*n),e):new Ge(NaN,NaN,e)}function it(e){return e>.206893034?e*e*e:(e-4/29)/7.787037}function ut(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29}function lt(e){return Math.round(255*(e<=.00304?12.92*e:1.055*Math.pow(e,1/2.4)-.055))}function st(e,t,n){return this instanceof st?(this.r=~~e,this.g=~~t,void(this.b=~~n)):arguments.length<2?e instanceof st?new st(e.r,e.g,e.b):ht(""+e,st,Ke):new st(e,t,n)}function ct(e){return new st(e>>16,e>>8&255,255&e)}function ft(e){return ct(e)+""}rt.brighter=function(e){return new Xe(Math.min(100,this.l+Ze*(arguments.length?e:1)),this.a,this.b)},rt.darker=function(e){return new Xe(Math.max(0,this.l-Ze*(arguments.length?e:1)),this.a,this.b)},rt.rgb=function(){return ot(this.l,this.a,this.b)},a.rgb=st;var pt=st.prototype=new He;function dt(e){return e<16?"0"+Math.max(0,e).toString(16):Math.min(255,e).toString(16)}function ht(e,t,n){var r,o,a,i=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(e=e.toLowerCase()))switch(o=r[2].split(","),r[1]){case"hsl":return n(parseFloat(o[0]),parseFloat(o[1])/100,parseFloat(o[2])/100);case"rgb":return t(gt(o[0]),gt(o[1]),gt(o[2]))}return(a=bt.get(e))?t(a.r,a.g,a.b):(null==e||"#"!==e.charAt(0)||isNaN(a=parseInt(e.slice(1),16))||(4===e.length?(i=(3840&a)>>4,i|=i>>4,u=240&a,u|=u>>4,l=15&a,l|=l<<4):7===e.length&&(i=(16711680&a)>>16,u=(65280&a)>>8,l=255&a)),t(i,u,l))}function yt(e,t,n){var r,o,a=Math.min(e/=255,t/=255,n/=255),i=Math.max(e,t,n),u=i-a,l=(i+a)/2;return u?(o=l<.5?u/(i+a):u/(2-i-a),r=e==i?(t-n)/u+(t<n?6:0):t==i?(n-e)/u+2:(e-t)/u+4,r*=60):(r=NaN,o=l>0&&l<1?0:r),new $e(r,o,l)}function vt(e,t,n){var r=ut((.4124564*(e=mt(e))+.3575761*(t=mt(t))+.1804375*(n=mt(n)))/et),o=ut((.2126729*e+.7151522*t+.072175*n)/tt);return Xe(116*o-16,500*(r-o),200*(o-ut((.0193339*e+.119192*t+.9503041*n)/nt)))}function mt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function gt(e){var t=parseFloat(e);return"%"===e.charAt(e.length-1)?Math.round(2.55*t):t}pt.brighter=function(e){e=Math.pow(.7,arguments.length?e:1);var t=this.r,n=this.g,r=this.b,o=30;return t||n||r?(t&&t<o&&(t=o),n&&n<o&&(n=o),r&&r<o&&(r=o),new st(Math.min(255,t/e),Math.min(255,n/e),Math.min(255,r/e))):new st(o,o,o)},pt.darker=function(e){return new st((e=Math.pow(.7,arguments.length?e:1))*this.r,e*this.g,e*this.b)},pt.hsl=function(){return yt(this.r,this.g,this.b)},pt.toString=function(){return"#"+dt(this.r)+dt(this.g)+dt(this.b)};var bt=a.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function wt(e){return"function"==typeof e?e:function(){return e}}function xt(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=null),_t(t,n,e,r)}}function _t(e,t,n,r){var o={},i=a.dispatch("beforesend","progress","load","error"),l={},s=new XMLHttpRequest,c=null;function f(){var e,t=s.status;if(!t&&function(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}(s)||t>=200&&t<300||304===t){try{e=n.call(o,s)}catch(e){return void i.error.call(o,e)}i.load.call(o,e)}else i.error.call(o,s)}return!this.XDomainRequest||"withCredentials"in s||!/^(http(s)?:)?\/\//.test(e)||(s=new XDomainRequest),"onload"in s?s.onload=s.onerror=f:s.onreadystatechange=function(){s.readyState>3&&f()},s.onprogress=function(e){var t=a.event;a.event=e;try{i.progress.call(o,s)}finally{a.event=t}},o.header=function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?l[e]:(null==t?delete l[e]:l[e]=t+"",o)},o.mimeType=function(e){return arguments.length?(t=null==e?null:e+"",o):t},o.responseType=function(e){return arguments.length?(c=e,o):c},o.response=function(e){return n=e,o},["get","post"].forEach(function(e){o[e]=function(){return o.send.apply(o,[e].concat(u(arguments)))}}),o.send=function(n,r,a){if(2===arguments.length&&"function"==typeof r&&(a=r,r=null),s.open(n,e,!0),null==t||"accept"in l||(l.accept=t+",*/*"),s.setRequestHeader)for(var u in l)s.setRequestHeader(u,l[u]);return null!=t&&s.overrideMimeType&&s.overrideMimeType(t),null!=c&&(s.responseType=c),null!=a&&o.on("error",a).on("load",function(e){a(null,e)}),i.beforesend.call(o,s),s.send(null==r?null:r),o},o.abort=function(){return s.abort(),o},a.rebind(o,i,"on"),null==r?o:o.get(function(e){return 1===e.length?function(t,n){e(null==t?n:null)}:e}(r))}bt.forEach(function(e,t){bt.set(e,ct(t))}),a.functor=wt,a.xhr=xt(D),a.dsv=function(e,t){var n=new RegExp('["'+e+"\n]"),r=e.charCodeAt(0);function o(e,n,r){arguments.length<3&&(r=n,n=null);var o=_t(e,t,null==n?a:i(n),r);return o.row=function(e){return arguments.length?o.response(null==(n=e)?a:i(e)):n},o}function a(e){return o.parse(e.responseText)}function i(e){return function(t){return o.parse(t.responseText,e)}}function u(t){return t.map(l).join(e)}function l(e){return n.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}return o.parse=function(e,t){var n;return o.parseRows(e,function(e,r){if(n)return n(e,r-1);var o=new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}");n=t?function(e,n){return t(o(e),n)}:o})},o.parseRows=function(e,t){var n,o,a={},i={},u=[],l=e.length,s=0,c=0;function f(){if(s>=l)return i;if(o)return o=!1,a;var t=s;if(34===e.charCodeAt(t)){for(var n=t;n++<l;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return s=n+2,13===(u=e.charCodeAt(n+1))?(o=!0,10===e.charCodeAt(n+2)&&++s):10===u&&(o=!0),e.slice(t+1,n).replace(/""/g,'"')}for(;s<l;){var u,c=1;if(10===(u=e.charCodeAt(s++)))o=!0;else if(13===u)o=!0,10===e.charCodeAt(s)&&(++s,++c);else if(u!==r)continue;return e.slice(t,s-c)}return e.slice(t)}for(;(n=f())!==i;){for(var p=[];n!==a&&n!==i;)p.push(n),n=f();t&&null==(p=t(p,c++))||u.push(p)}return u},o.format=function(t){if(Array.isArray(t[0]))return o.formatRows(t);var n=new R,r=[];return t.forEach(function(e){for(var t in e)n.has(t)||r.push(n.add(t))}),[r.map(l).join(e)].concat(t.map(function(t){return r.map(function(e){return l(t[e])}).join(e)})).join("\n")},o.formatRows=function(e){return e.map(u).join("\n")},o},a.csv=a.dsv(",","text/csv"),a.tsv=a.dsv("\t","text/tab-separated-values");var Et,kt,St,Ct,Ot=this[L(this,"requestAnimationFrame")]||function(e){setTimeout(e,17)};function Mt(e,t,n){var r=arguments.length;r<2&&(t=0),r<3&&(n=Date.now());var o={c:e,t:n+t,n:null};return kt?kt.n=o:Et=o,kt=o,St||(Ct=clearTimeout(Ct),St=1,Ot(Tt)),o}function Tt(){var e=jt(),t=Pt()-e;t>24?(isFinite(t)&&(clearTimeout(Ct),Ct=setTimeout(Tt,t)),St=0):(St=1,Ot(Tt))}function jt(){for(var e=Date.now(),t=Et;t;)e>=t.t&&t.c(e-t.t)&&(t.c=null),t=t.n;return e}function Pt(){for(var e,t=Et,n=1/0;t;)t.c?(t.t<n&&(n=t.t),t=(e=t).n):t=e?e.n=t.n:Et=t.n;return kt=e,n}function At(e,t){return t-(e?Math.ceil(Math.log(e)/Math.LN10):1)}a.timer=function(){Mt.apply(this,arguments)},a.timer.flush=function(){jt(),Pt()},a.round=function(e,t){return t?Math.round(e*(t=Math.pow(10,t)))/t:Math.round(e)};var Nt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(function(e,t){var n=Math.pow(10,3*_(8-t));return{scale:t>8?function(e){return e/n}:function(e){return e*n},symbol:e}});function Rt(e){var t=e.decimal,n=e.thousands,r=e.grouping,o=e.currency,i=r&&n?function(e,t){for(var o=e.length,a=[],i=0,u=r[0],l=0;o>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),a.push(e.substring(o-=u,o+u)),!((l+=u+1)>t));)u=r[i=(i+1)%r.length];return a.reverse().join(n)}:D;return function(e){var n=Dt.exec(e),r=n[1]||" ",u=n[2]||">",l=n[3]||"-",s=n[4]||"",c=n[5],f=+n[6],p=n[7],d=n[8],h=n[9],y=1,v="",m="",g=!1,b=!0;switch(d&&(d=+d.substring(1)),(c||"0"===r&&"="===u)&&(c=r="0",u="="),h){case"n":p=!0,h="g";break;case"%":y=100,m="%",h="f";break;case"p":y=100,m="%",h="r";break;case"b":case"o":case"x":case"X":"#"===s&&(v="0"+h.toLowerCase());case"c":b=!1;case"d":g=!0,d=0;break;case"s":y=-1,h="r"}"$"===s&&(v=o[0],m=o[1]),"r"!=h||d||(h="g"),null!=d&&("g"==h?d=Math.max(1,Math.min(21,d)):"e"!=h&&"f"!=h||(d=Math.max(0,Math.min(20,d)))),h=It.get(h)||Lt;var w=c&&p;return function(e){var n=m;if(g&&e%1)return"";var o=e<0||0===e&&1/e<0?(e=-e,"-"):"-"===l?"":l;if(y<0){var s=a.formatPrefix(e,d);e=s.scale(e),n=s.symbol+m}else e*=y;var x,_,E=(e=h(e,d)).lastIndexOf(".");if(E<0){var k=b?e.lastIndexOf("e"):-1;k<0?(x=e,_=""):(x=e.substring(0,k),_=e.substring(k))}else x=e.substring(0,E),_=t+e.substring(E+1);!c&&p&&(x=i(x,1/0));var S=v.length+x.length+_.length+(w?0:o.length),C=S<f?new Array(S=f-S+1).join(r):"";return w&&(x=i(C+x,C.length?f-_.length:1/0)),o+=v,e=x+_,("<"===u?o+e+C:">"===u?C+o+e:"^"===u?C.substring(0,S>>=1)+o+e+C.substring(S):o+(w?e:C+e))+n}}}a.formatPrefix=function(e,t){var n=0;return(e=+e)&&(e<0&&(e*=-1),t&&(e=a.round(e,At(e,t))),n=1+Math.floor(1e-12+Math.log(e)/Math.LN10),n=Math.max(-24,Math.min(24,3*Math.floor((n-1)/3)))),Nt[8+n/3]};var Dt=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,It=a.map({b:function(e){return e.toString(2)},c:function(e){return String.fromCharCode(e)},o:function(e){return e.toString(8)},x:function(e){return e.toString(16)},X:function(e){return e.toString(16).toUpperCase()},g:function(e,t){return e.toPrecision(t)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},r:function(e,t){return(e=a.round(e,At(e,t))).toFixed(Math.max(0,Math.min(20,At(e*(1+1e-15),t))))}});function Lt(e){return e+""}var zt=a.time={},Ft=Date;function Ut(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Ut.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){Bt.setUTCDate.apply(this._,arguments)},setDay:function(){Bt.setUTCDay.apply(this._,arguments)},setFullYear:function(){Bt.setUTCFullYear.apply(this._,arguments)},setHours:function(){Bt.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){Bt.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){Bt.setUTCMinutes.apply(this._,arguments)},setMonth:function(){Bt.setUTCMonth.apply(this._,arguments)},setSeconds:function(){Bt.setUTCSeconds.apply(this._,arguments)},setTime:function(){Bt.setTime.apply(this._,arguments)}};var Bt=Date.prototype;function qt(e,t,n){function r(t){var n=e(t),r=a(n,1);return t-n<r-t?n:r}function o(n){return t(n=e(new Ft(n-1)),1),n}function a(e,n){return t(e=new Ft(+e),n),e}function i(e,r,a){var i=o(e),u=[];if(a>1)for(;i<r;)n(i)%a||u.push(new Date(+i)),t(i,1);else for(;i<r;)u.push(new Date(+i)),t(i,1);return u}e.floor=e,e.round=r,e.ceil=o,e.offset=a,e.range=i;var u=e.utc=Vt(e);return u.floor=u,u.round=Vt(r),u.ceil=Vt(o),u.offset=Vt(a),u.range=function(e,t,n){try{Ft=Ut;var r=new Ut;return r._=e,i(r,t,n)}finally{Ft=Date}},e}function Vt(e){return function(t,n){try{Ft=Ut;var r=new Ut;return r._=t,e(r,n)._}finally{Ft=Date}}}function Wt(e){var t=e.dateTime,n=e.date,r=e.time,o=e.periods,i=e.days,u=e.shortDays,l=e.months,s=e.shortMonths;function c(e){var t=e.length;function n(n){for(var r,o,a,i=[],u=-1,l=0;++u<t;)37===e.charCodeAt(u)&&(i.push(e.slice(l,u)),null!=(o=Ht[r=e.charAt(++u)])&&(r=e.charAt(++u)),(a=x[r])&&(r=a(n,null==o?"e"===r?" ":"0":o)),i.push(r),l=u+1);return i.push(e.slice(l,u)),i.join("")}return n.parse=function(t){var n={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(n,e,t,0)!=t.length)return null;"p"in n&&(n.H=n.H%12+12*n.p);var r=null!=n.Z&&Ft!==Ut,o=new(r?Ut:Ft);return"j"in n?o.setFullYear(n.y,0,n.j):"W"in n||"U"in n?("w"in n||(n.w="W"in n?1:0),o.setFullYear(n.y,0,1),o.setFullYear(n.y,0,"W"in n?(n.w+6)%7+7*n.W-(o.getDay()+5)%7:n.w+7*n.U-(o.getDay()+6)%7)):o.setFullYear(n.y,n.m,n.d),o.setHours(n.H+(n.Z/100|0),n.M+n.Z%100,n.S,n.L),r?o._:o},n.toString=function(){return e},n}function f(e,t,n,r){for(var o,a,i,u=0,l=t.length,s=n.length;u<l;){if(r>=s)return-1;if(37===(o=t.charCodeAt(u++))){if(i=t.charAt(u++),!(a=_[i in Ht?t.charAt(u++):i])||(r=a(e,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}c.utc=function(e){var t=c(e);function n(e){try{var n=new(Ft=Ut);return n._=e,t(n)}finally{Ft=Date}}return n.parse=function(e){try{Ft=Ut;var n=t.parse(e);return n&&n._}finally{Ft=Date}},n.toString=t.toString,n},c.multi=c.utc.multi=dn;var p=a.map(),d=Gt(i),h=Jt(i),y=Gt(u),v=Jt(u),m=Gt(l),g=Jt(l),b=Gt(s),w=Jt(s);o.forEach(function(e,t){p.set(e.toLowerCase(),t)});var x={a:function(e){return u[e.getDay()]},A:function(e){return i[e.getDay()]},b:function(e){return s[e.getMonth()]},B:function(e){return l[e.getMonth()]},c:c(t),d:function(e,t){return Kt(e.getDate(),t,2)},e:function(e,t){return Kt(e.getDate(),t,2)},H:function(e,t){return Kt(e.getHours(),t,2)},I:function(e,t){return Kt(e.getHours()%12||12,t,2)},j:function(e,t){return Kt(1+zt.dayOfYear(e),t,3)},L:function(e,t){return Kt(e.getMilliseconds(),t,3)},m:function(e,t){return Kt(e.getMonth()+1,t,2)},M:function(e,t){return Kt(e.getMinutes(),t,2)},p:function(e){return o[+(e.getHours()>=12)]},S:function(e,t){return Kt(e.getSeconds(),t,2)},U:function(e,t){return Kt(zt.sundayOfYear(e),t,2)},w:function(e){return e.getDay()},W:function(e,t){return Kt(zt.mondayOfYear(e),t,2)},x:c(n),X:c(r),y:function(e,t){return Kt(e.getFullYear()%100,t,2)},Y:function(e,t){return Kt(e.getFullYear()%1e4,t,4)},Z:fn,"%":function(){return"%"}},_={a:function(e,t,n){y.lastIndex=0;var r=y.exec(t.slice(n));return r?(e.w=v.get(r[0].toLowerCase()),n+r[0].length):-1},A:function(e,t,n){d.lastIndex=0;var r=d.exec(t.slice(n));return r?(e.w=h.get(r[0].toLowerCase()),n+r[0].length):-1},b:function(e,t,n){b.lastIndex=0;var r=b.exec(t.slice(n));return r?(e.m=w.get(r[0].toLowerCase()),n+r[0].length):-1},B:function(e,t,n){m.lastIndex=0;var r=m.exec(t.slice(n));return r?(e.m=g.get(r[0].toLowerCase()),n+r[0].length):-1},c:function(e,t,n){return f(e,x.c.toString(),t,n)},d:on,e:on,H:un,I:un,j:an,L:cn,m:rn,M:ln,p:function(e,t,n){var r=p.get(t.slice(n,n+=2).toLowerCase());return null==r?-1:(e.p=r,n)},S:sn,U:Xt,w:Qt,W:Zt,x:function(e,t,n){return f(e,x.x.toString(),t,n)},X:function(e,t,n){return f(e,x.X.toString(),t,n)},y:tn,Y:en,Z:nn,"%":pn};return c}zt.year=qt(function(e){return(e=zt.day(e)).setMonth(0,1),e},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e){return e.getFullYear()}),zt.years=zt.year.range,zt.years.utc=zt.year.utc.range,zt.day=qt(function(e){var t=new Ft(2e3,0);return t.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),t},function(e,t){e.setDate(e.getDate()+t)},function(e){return e.getDate()-1}),zt.days=zt.day.range,zt.days.utc=zt.day.utc.range,zt.dayOfYear=function(e){var t=zt.year(e);return Math.floor((e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(e,t){t=7-t;var n=zt[e]=qt(function(e){return(e=zt.day(e)).setDate(e.getDate()-(e.getDay()+t)%7),e},function(e,t){e.setDate(e.getDate()+7*Math.floor(t))},function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)-(n!==t)});zt[e+"s"]=n.range,zt[e+"s"].utc=n.utc.range,zt[e+"OfYear"]=function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)}}),zt.week=zt.sunday,zt.weeks=zt.sunday.range,zt.weeks.utc=zt.sunday.utc.range,zt.weekOfYear=zt.sundayOfYear;var Ht={"-":"",_:" ",0:"0"},$t=/^\s*\d+/,Yt=/^%/;function Kt(e,t,n){var r=e<0?"-":"",o=(r?-e:e)+"",a=o.length;return r+(a<n?new Array(n-a+1).join(t)+o:o)}function Gt(e){return new RegExp("^(?:"+e.map(a.requote).join("|")+")","i")}function Jt(e){for(var t=new k,n=-1,r=e.length;++n<r;)t.set(e[n].toLowerCase(),n);return t}function Qt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Xt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.U=+r[0],n+r[0].length):-1}function Zt(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n));return r?(e.W=+r[0],n+r[0].length):-1}function en(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function tn(e,t,n){$t.lastIndex=0;var r,o=$t.exec(t.slice(n,n+2));return o?(e.y=(r=+o[0])+(r>68?1900:2e3),n+o[0].length):-1}function nn(e,t,n){return/^[+-]\d{4}$/.test(t=t.slice(n,n+5))?(e.Z=-t,n+5):-1}function rn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function on(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function an(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.j=+r[0],n+r[0].length):-1}function un(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function ln(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function sn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function cn(e,t,n){$t.lastIndex=0;var r=$t.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function fn(e){var t=e.getTimezoneOffset(),n=t>0?"-":"+",r=_(t)/60|0,o=_(t)%60;return n+Kt(r,"0",2)+Kt(o,"0",2)}function pn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function dn(e){for(var t=e.length,n=-1;++n<t;)e[n][0]=this(e[n][0]);return function(t){for(var n=0,r=e[n];!r[1](t);)r=e[++n];return r[0](t)}}a.locale=function(e){return{numberFormat:Rt(e),timeFormat:Wt(e)}};var hn=a.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function yn(){}a.format=hn.numberFormat,a.geo={},yn.prototype={s:0,t:0,add:function(e){mn(e,this.t,vn),mn(vn.s,this.s,this),this.s?this.t+=vn.t:this.s=vn.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var vn=new yn;function mn(e,t,n){var r=n.s=e+t,o=r-e,a=r-o;n.t=e-a+(t-o)}function gn(e,t){e&&wn.hasOwnProperty(e.type)&&wn[e.type](e,t)}a.geo.stream=function(e,t){e&&bn.hasOwnProperty(e.type)?bn[e.type](e,t):gn(e,t)};var bn={Feature:function(e,t){gn(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,o=n.length;++r<o;)gn(n[r].geometry,t)}},wn={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){xn(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)xn(n[r],t,0)},Polygon:function(e,t){_n(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)_n(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,o=n.length;++r<o;)gn(n[r],t)}};function xn(e,t,n){var r,o=-1,a=e.length-n;for(t.lineStart();++o<a;)r=e[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function _n(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)xn(e[n],t,1);t.polygonEnd()}a.geo.area=function(e){return En=0,a.geo.stream(e,In),En};var En,kn,Sn,Cn,On,Mn,Tn,jn,Pn,An,Nn,Rn,Dn=new yn,In={sphere:function(){En+=4*Te},point:F,lineStart:F,lineEnd:F,polygonStart:function(){Dn.reset(),In.lineStart=Ln},polygonEnd:function(){var e=2*Dn;En+=e<0?4*Te+e:e,In.lineStart=In.lineEnd=In.point=F}};function Ln(){var e,t,n,r,o;function a(e,t){t=t*Ne/2+Te/4;var a=(e*=Ne)-n,i=a>=0?1:-1,u=i*a,l=Math.cos(t),s=Math.sin(t),c=o*s,f=r*l+c*Math.cos(u),p=c*i*Math.sin(u);Dn.add(Math.atan2(p,f)),n=e,r=l,o=s}In.point=function(i,u){In.point=a,n=(e=i)*Ne,r=Math.cos(u=(t=u)*Ne/2+Te/4),o=Math.sin(u)},In.lineEnd=function(){a(e,t)}}function zn(e){var t=e[0],n=e[1],r=Math.cos(n);return[r*Math.cos(t),r*Math.sin(t),Math.sin(n)]}function Fn(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Un(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Bn(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function qn(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Vn(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}function Wn(e){return[Math.atan2(e[1],e[0]),ze(e[2])]}function Hn(e,t){return _(e[0]-t[0])<Oe&&_(e[1]-t[1])<Oe}a.geo.bounds=function(){var e,t,n,r,o,i,u,l,s,c,f,p={point:d,lineStart:y,lineEnd:v,polygonStart:function(){p.point=m,p.lineStart=g,p.lineEnd=b,s=0,In.polygonStart()},polygonEnd:function(){In.polygonEnd(),p.point=d,p.lineStart=y,p.lineEnd=v,Dn<0?(e=-(n=180),t=-(r=90)):s>Oe?r=90:s<-Oe&&(t=-90),f[0]=e,f[1]=n}};function d(o,a){c.push(f=[e=o,n=o]),a<t&&(t=a),a>r&&(r=a)}function h(a,i){var u=zn([a*Ne,i*Ne]);if(l){var s=Un(l,u),c=Un([s[1],-s[0],0],s);Vn(c),c=Wn(c);var f=a-o,p=f>0?1:-1,h=c[0]*Re*p,y=_(f)>180;if(y^(p*o<h&&h<p*a))(v=c[1]*Re)>r&&(r=v);else if(y^(p*o<(h=(h+360)%360-180)&&h<p*a)){var v;(v=-c[1]*Re)<t&&(t=v)}else i<t&&(t=i),i>r&&(r=i);y?a<o?w(e,a)>w(e,n)&&(n=a):w(a,n)>w(e,n)&&(e=a):n>=e?(a<e&&(e=a),a>n&&(n=a)):a>o?w(e,a)>w(e,n)&&(n=a):w(a,n)>w(e,n)&&(e=a)}else d(a,i);l=u,o=a}function y(){p.point=h}function v(){f[0]=e,f[1]=n,p.point=d,l=null}function m(e,t){if(l){var n=e-o;s+=_(n)>180?n+(n>0?360:-360):n}else i=e,u=t;In.point(e,t),h(e,t)}function g(){In.lineStart()}function b(){m(i,u),In.lineEnd(),_(s)>Oe&&(e=-(n=180)),f[0]=e,f[1]=n,l=null}function w(e,t){return(t-=e)<0?t+360:t}function x(e,t){return e[0]-t[0]}function E(e,t){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}return function(o){if(r=n=-(e=t=1/0),c=[],a.geo.stream(o,p),s=c.length){c.sort(x);for(var i=1,u=[y=c[0]];i<s;++i)E((d=c[i])[0],y)||E(d[1],y)?(w(y[0],d[1])>w(y[0],y[1])&&(y[1]=d[1]),w(d[0],y[1])>w(y[0],y[1])&&(y[0]=d[0])):u.push(y=d);for(var l,s,d,h=-1/0,y=(i=0,u[s=u.length-1]);i<=s;y=d,++i)d=u[i],(l=w(y[1],d[0]))>h&&(h=l,e=d[0],n=y[1])}return c=f=null,e===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[e,t],[n,r]]}}(),a.geo.centroid=function(e){kn=Sn=Cn=On=Mn=Tn=jn=Pn=An=Nn=Rn=0,a.geo.stream(e,$n);var t=An,n=Nn,r=Rn,o=t*t+n*n+r*r;return o<Me&&(t=Tn,n=jn,r=Pn,Sn<Oe&&(t=Cn,n=On,r=Mn),(o=t*t+n*n+r*r)<Me)?[NaN,NaN]:[Math.atan2(n,t)*Re,ze(r/Math.sqrt(o))*Re]};var $n={sphere:F,point:Yn,lineStart:Gn,lineEnd:Jn,polygonStart:function(){$n.lineStart=Qn},polygonEnd:function(){$n.lineStart=Gn}};function Yn(e,t){e*=Ne;var n=Math.cos(t*=Ne);Kn(n*Math.cos(e),n*Math.sin(e),Math.sin(t))}function Kn(e,t,n){Cn+=(e-Cn)/++kn,On+=(t-On)/kn,Mn+=(n-Mn)/kn}function Gn(){var e,t,n;function r(r,o){r*=Ne;var a=Math.cos(o*=Ne),i=a*Math.cos(r),u=a*Math.sin(r),l=Math.sin(o),s=Math.atan2(Math.sqrt((s=t*l-n*u)*s+(s=n*i-e*l)*s+(s=e*u-t*i)*s),e*i+t*u+n*l);Sn+=s,Tn+=s*(e+(e=i)),jn+=s*(t+(t=u)),Pn+=s*(n+(n=l)),Kn(e,t,n)}$n.point=function(o,a){o*=Ne;var i=Math.cos(a*=Ne);e=i*Math.cos(o),t=i*Math.sin(o),n=Math.sin(a),$n.point=r,Kn(e,t,n)}}function Jn(){$n.point=Yn}function Qn(){var e,t,n,r,o;function a(e,t){e*=Ne;var a=Math.cos(t*=Ne),i=a*Math.cos(e),u=a*Math.sin(e),l=Math.sin(t),s=r*l-o*u,c=o*i-n*l,f=n*u-r*i,p=Math.sqrt(s*s+c*c+f*f),d=n*i+r*u+o*l,h=p&&-Le(d)/p,y=Math.atan2(p,d);An+=h*s,Nn+=h*c,Rn+=h*f,Sn+=y,Tn+=y*(n+(n=i)),jn+=y*(r+(r=u)),Pn+=y*(o+(o=l)),Kn(n,r,o)}$n.point=function(i,u){e=i,t=u,$n.point=a,i*=Ne;var l=Math.cos(u*=Ne);n=l*Math.cos(i),r=l*Math.sin(i),o=Math.sin(u),Kn(n,r,o)},$n.lineEnd=function(){a(e,t),$n.lineEnd=Jn,$n.point=Yn}}function Xn(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function Zn(){return!0}function er(e,t,n,r,o){var a=[],i=[];if(e.forEach(function(e){if(!((t=e.length-1)<=0)){var t,n=e[0],r=e[t];if(Hn(n,r)){o.lineStart();for(var u=0;u<t;++u)o.point((n=e[u])[0],n[1]);o.lineEnd()}else{var l=new nr(n,e,null,!0),s=new nr(n,null,l,!1);l.o=s,a.push(l),i.push(s),l=new nr(r,e,null,!1),s=new nr(r,null,l,!0),l.o=s,a.push(l),i.push(s)}}}),i.sort(t),tr(a),tr(i),a.length){for(var u=0,l=n,s=i.length;u<s;++u)i[u].e=l=!l;for(var c,f,p=a[0];;){for(var d=p,h=!0;d.v;)if((d=d.n)===p)return;c=d.z,o.lineStart();do{if(d.v=d.o.v=!0,d.e){if(h)for(u=0,s=c.length;u<s;++u)o.point((f=c[u])[0],f[1]);else r(d.x,d.n.x,1,o);d=d.n}else{if(h)for(u=(c=d.p.z).length-1;u>=0;--u)o.point((f=c[u])[0],f[1]);else r(d.x,d.p.x,-1,o);d=d.p}c=(d=d.o).z,h=!h}while(!d.v);o.lineEnd()}}}function tr(e){if(t=e.length){for(var t,n,r=0,o=e[0];++r<t;)o.n=n=e[r],n.p=o,o=n;o.n=n=e[0],n.p=o}}function nr(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function rr(e,t,n,r){return function(o,i){var u,l=t(i),s=o.invert(r[0],r[1]),c={point:f,lineStart:d,lineEnd:h,polygonStart:function(){c.point=w,c.lineStart=x,c.lineEnd=_,u=[],y=[]},polygonEnd:function(){c.point=f,c.lineStart=d,c.lineEnd=h,u=a.merge(u);var e=function(e,t){var n=e[0],r=e[1],o=[Math.sin(n),-Math.cos(n),0],a=0,i=0;Dn.reset();for(var u=0,l=t.length;u<l;++u){var s=t[u],c=s.length;if(c)for(var f=s[0],p=f[0],d=f[1]/2+Te/4,h=Math.sin(d),y=Math.cos(d),v=1;;){v===c&&(v=0);var m=(e=s[v])[0],g=e[1]/2+Te/4,b=Math.sin(g),w=Math.cos(g),x=m-p,_=x>=0?1:-1,E=_*x,k=E>Te,S=h*b;if(Dn.add(Math.atan2(S*_*Math.sin(E),y*w+S*Math.cos(E))),a+=k?x+_*je:x,k^p>=n^m>=n){var C=Un(zn(f),zn(e));Vn(C);var O=Un(o,C);Vn(O);var M=(k^x>=0?-1:1)*ze(O[2]);(r>M||r===M&&(C[0]||C[1]))&&(i+=k^x>=0?1:-1)}if(!v++)break;p=m,h=b,y=w,f=e}}return(a<-Oe||a<Oe&&Dn<-Oe)^1&i}(s,y);u.length?(b||(i.polygonStart(),b=!0),er(u,ir,e,n,i)):e&&(b||(i.polygonStart(),b=!0),i.lineStart(),n(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),u=y=null},sphere:function(){i.polygonStart(),i.lineStart(),n(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function f(t,n){var r=o(t,n);e(t=r[0],n=r[1])&&i.point(t,n)}function p(e,t){var n=o(e,t);l.point(n[0],n[1])}function d(){c.point=p,l.lineStart()}function h(){c.point=f,l.lineEnd()}var y,v,m=ar(),g=t(m),b=!1;function w(e,t){v.push([e,t]);var n=o(e,t);g.point(n[0],n[1])}function x(){g.lineStart(),v=[]}function _(){w(v[0][0],v[0][1]),g.lineEnd();var e,t=g.clean(),n=m.buffer(),r=n.length;if(v.pop(),y.push(v),v=null,r)if(1&t){var o,a=-1;if((r=(e=n[0]).length-1)>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++a<r;)i.point((o=e[a])[0],o[1]);i.lineEnd()}}else r>1&&2&t&&n.push(n.pop().concat(n.shift())),u.push(n.filter(or))}return c}}function or(e){return e.length>1}function ar(){var e,t=[];return{lineStart:function(){t.push(e=[])},point:function(t,n){e.push([t,n])},lineEnd:F,buffer:function(){var n=t;return t=[],e=null,n},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ir(e,t){return((e=e.x)[0]<0?e[1]-Ae-Oe:Ae-e[1])-((t=t.x)[0]<0?t[1]-Ae-Oe:Ae-t[1])}var ur=rr(Zn,function(e){var t,n=NaN,r=NaN,o=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(a,i){var u=a>0?Te:-Te,l=_(a-n);_(l-Te)<Oe?(e.point(n,r=(r+i)/2>0?Ae:-Ae),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),e.point(a,r),t=0):o!==u&&l>=Te&&(_(n-o)<Oe&&(n-=o*Oe),_(a-u)<Oe&&(a-=u*Oe),r=function(e,t,n,r){var o,a,i=Math.sin(e-n);return _(i)>Oe?Math.atan((Math.sin(t)*(a=Math.cos(r))*Math.sin(n)-Math.sin(r)*(o=Math.cos(t))*Math.sin(e))/(o*a*i)):(t+r)/2}(n,r,a,i),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),t=0),e.point(n=a,r=i),o=u},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}},function(e,t,n,r){var o;if(null==e)o=n*Ae,r.point(-Te,o),r.point(0,o),r.point(Te,o),r.point(Te,0),r.point(Te,-o),r.point(0,-o),r.point(-Te,-o),r.point(-Te,0),r.point(-Te,o);else if(_(e[0]-t[0])>Oe){var a=e[0]<t[0]?Te:-Te;o=n*a/2,r.point(-a,o),r.point(0,o),r.point(a,o)}else r.point(t[0],t[1])},[-Te,-Te/2]);function lr(e,t,n,r){return function(o){var a,i=o.a,u=o.b,l=i.x,s=i.y,c=0,f=1,p=u.x-l,d=u.y-s;if(a=e-l,p||!(a>0)){if(a/=p,p<0){if(a<c)return;a<f&&(f=a)}else if(p>0){if(a>f)return;a>c&&(c=a)}if(a=n-l,p||!(a<0)){if(a/=p,p<0){if(a>f)return;a>c&&(c=a)}else if(p>0){if(a<c)return;a<f&&(f=a)}if(a=t-s,d||!(a>0)){if(a/=d,d<0){if(a<c)return;a<f&&(f=a)}else if(d>0){if(a>f)return;a>c&&(c=a)}if(a=r-s,d||!(a<0)){if(a/=d,d<0){if(a>f)return;a>c&&(c=a)}else if(d>0){if(a<c)return;a<f&&(f=a)}return c>0&&(o.a={x:l+c*p,y:s+c*d}),f<1&&(o.b={x:l+f*p,y:s+f*d}),o}}}}}}var sr=1e9;function cr(e,t,n,r){return function(l){var s,c,f,p,d,h,y,v,m,g,b,w=l,x=ar(),_=lr(e,t,n,r),E={point:C,lineStart:function(){E.point=O,c&&c.push(f=[]);g=!0,m=!1,y=v=NaN},lineEnd:function(){s&&(O(p,d),h&&m&&x.rejoin(),s.push(x.buffer()));E.point=C,m&&l.lineEnd()},polygonStart:function(){l=x,s=[],c=[],b=!0},polygonEnd:function(){l=w,s=a.merge(s);var t=function(e){for(var t=0,n=c.length,r=e[1],o=0;o<n;++o)for(var a,i=1,u=c[o],l=u.length,s=u[0];i<l;++i)a=u[i],s[1]<=r?a[1]>r&&Ie(s,a,e)>0&&++t:a[1]<=r&&Ie(s,a,e)<0&&--t,s=a;return 0!==t}([e,r]),n=b&&t,o=s.length;(n||o)&&(l.polygonStart(),n&&(l.lineStart(),k(null,null,1,l),l.lineEnd()),o&&er(s,i,t,k,l),l.polygonEnd()),s=c=f=null}};function k(a,i,l,s){var c=0,f=0;if(null==a||(c=o(a,l))!==(f=o(i,l))||u(a,i)<0^l>0)do{s.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+l+4)%4)!==f);else s.point(i[0],i[1])}function S(o,a){return e<=o&&o<=n&&t<=a&&a<=r}function C(e,t){S(e,t)&&l.point(e,t)}function O(e,t){var n=S(e=Math.max(-sr,Math.min(sr,e)),t=Math.max(-sr,Math.min(sr,t)));if(c&&f.push([e,t]),g)p=e,d=t,h=n,g=!1,n&&(l.lineStart(),l.point(e,t));else if(n&&m)l.point(e,t);else{var r={a:{x:y,y:v},b:{x:e,y:t}};_(r)?(m||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),n||l.lineEnd(),b=!1):n&&(l.lineStart(),l.point(e,t),b=!1)}y=e,v=t,m=n}return E};function o(r,o){return _(r[0]-e)<Oe?o>0?0:3:_(r[0]-n)<Oe?o>0?2:1:_(r[1]-t)<Oe?o>0?1:0:o>0?3:2}function i(e,t){return u(e.x,t.x)}function u(e,t){var n=o(e,1),r=o(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}}function fr(e){var t=0,n=Te/3,r=Dr(e),o=r(t,n);return o.parallels=function(e){return arguments.length?r(t=e[0]*Te/180,n=e[1]*Te/180):[t/Te*180,n/Te*180]},o}function pr(e,t){var n=Math.sin(e),r=(n+Math.sin(t))/2,o=1+n*(2*r-n),a=Math.sqrt(o)/r;function i(e,t){var n=Math.sqrt(o-2*r*Math.sin(t))/r;return[n*Math.sin(e*=r),a-n*Math.cos(e)]}return i.invert=function(e,t){var n=a-t;return[Math.atan2(e,n)/r,ze((o-(e*e+n*n)*r*r)/(2*r))]},i}a.geo.clipExtent=function(){var e,t,n,r,o,a,i={stream:function(e){return o&&(o.valid=!1),(o=a(e)).valid=!0,o},extent:function(u){return arguments.length?(a=cr(e=+u[0][0],t=+u[0][1],n=+u[1][0],r=+u[1][1]),o&&(o.valid=!1,o=null),i):[[e,t],[n,r]]}};return i.extent([[0,0],[960,500]])},(a.geo.conicEqualArea=function(){return fr(pr)}).raw=pr,a.geo.albers=function(){return a.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},a.geo.albersUsa=function(){var e,t,n,r,o=a.geo.albers(),i=a.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=a.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){e=[t,n]}};function s(o){var a=o[0],i=o[1];return e=null,t(a,i),e||(n(a,i),e)||r(a,i),e}return s.invert=function(e){var t=o.scale(),n=o.translate(),r=(e[0]-n[0])/t,a=(e[1]-n[1])/t;return(a>=.12&&a<.234&&r>=-.425&&r<-.214?i:a>=.166&&a<.234&&r>=-.214&&r<-.115?u:o).invert(e)},s.stream=function(e){var t=o.stream(e),n=i.stream(e),r=u.stream(e);return{point:function(e,o){t.point(e,o),n.point(e,o),r.point(e,o)},sphere:function(){t.sphere(),n.sphere(),r.sphere()},lineStart:function(){t.lineStart(),n.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),n.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),n.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),n.polygonEnd(),r.polygonEnd()}}},s.precision=function(e){return arguments.length?(o.precision(e),i.precision(e),u.precision(e),s):o.precision()},s.scale=function(e){return arguments.length?(o.scale(e),i.scale(.35*e),u.scale(e),s.translate(o.translate())):o.scale()},s.translate=function(e){if(!arguments.length)return o.translate();var a=o.scale(),c=+e[0],f=+e[1];return t=o.translate(e).clipExtent([[c-.455*a,f-.238*a],[c+.455*a,f+.238*a]]).stream(l).point,n=i.translate([c-.307*a,f+.201*a]).clipExtent([[c-.425*a+Oe,f+.12*a+Oe],[c-.214*a-Oe,f+.234*a-Oe]]).stream(l).point,r=u.translate([c-.205*a,f+.212*a]).clipExtent([[c-.214*a+Oe,f+.166*a+Oe],[c-.115*a-Oe,f+.234*a-Oe]]).stream(l).point,s},s.scale(1070)};var dr,hr,yr,vr,mr,gr,br={point:F,lineStart:F,lineEnd:F,polygonStart:function(){hr=0,br.lineStart=wr},polygonEnd:function(){br.lineStart=br.lineEnd=br.point=F,dr+=_(hr/2)}};function wr(){var e,t,n,r;function o(e,t){hr+=r*e-n*t,n=e,r=t}br.point=function(a,i){br.point=o,e=n=a,t=r=i},br.lineEnd=function(){o(e,t)}}var xr={point:function(e,t){e<yr&&(yr=e);e>mr&&(mr=e);t<vr&&(vr=t);t>gr&&(gr=t)},lineStart:F,lineEnd:F,polygonStart:F,polygonEnd:F};function _r(){var e=Er(4.5),t=[],n={point:r,lineStart:function(){n.point=o},lineEnd:i,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=i,n.point=r},pointRadius:function(t){return e=Er(t),n},result:function(){if(t.length){var e=t.join("");return t=[],e}}};function r(n,r){t.push("M",n,",",r,e)}function o(e,r){t.push("M",e,",",r),n.point=a}function a(e,n){t.push("L",e,",",n)}function i(){n.point=r}function u(){t.push("Z")}return n}function Er(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}var kr,Sr={point:Cr,lineStart:Or,lineEnd:Mr,polygonStart:function(){Sr.lineStart=Tr},polygonEnd:function(){Sr.point=Cr,Sr.lineStart=Or,Sr.lineEnd=Mr}};function Cr(e,t){Cn+=e,On+=t,++Mn}function Or(){var e,t;function n(n,r){var o=n-e,a=r-t,i=Math.sqrt(o*o+a*a);Tn+=i*(e+n)/2,jn+=i*(t+r)/2,Pn+=i,Cr(e=n,t=r)}Sr.point=function(r,o){Sr.point=n,Cr(e=r,t=o)}}function Mr(){Sr.point=Cr}function Tr(){var e,t,n,r;function o(e,t){var o=e-n,a=t-r,i=Math.sqrt(o*o+a*a);Tn+=i*(n+e)/2,jn+=i*(r+t)/2,Pn+=i,An+=(i=r*e-n*t)*(n+e),Nn+=i*(r+t),Rn+=3*i,Cr(n=e,r=t)}Sr.point=function(a,i){Sr.point=o,Cr(e=n=a,t=r=i)},Sr.lineEnd=function(){o(e,t)}}function jr(e){var t=4.5,n={point:r,lineStart:function(){n.point=o},lineEnd:i,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=i,n.point=r},pointRadius:function(e){return t=e,n},result:F};function r(n,r){e.moveTo(n+t,r),e.arc(n,r,t,0,je)}function o(t,r){e.moveTo(t,r),n.point=a}function a(t,n){e.lineTo(t,n)}function i(){n.point=r}function u(){e.closePath()}return n}function Pr(e){var t=.5,n=Math.cos(30*Ne),r=16;function o(t){return(r?function(t){var n,o,i,u,l,s,c,f,p,d,h,y,v={point:m,lineStart:g,lineEnd:w,polygonStart:function(){t.polygonStart(),v.lineStart=x},polygonEnd:function(){t.polygonEnd(),v.lineStart=g}};function m(n,r){n=e(n,r),t.point(n[0],n[1])}function g(){f=NaN,v.point=b,t.lineStart()}function b(n,o){var i=zn([n,o]),u=e(n,o);a(f,p,c,d,h,y,f=u[0],p=u[1],c=n,d=i[0],h=i[1],y=i[2],r,t),t.point(f,p)}function w(){v.point=m,t.lineEnd()}function x(){g(),v.point=_,v.lineEnd=E}function _(e,t){b(n=e,t),o=f,i=p,u=d,l=h,s=y,v.point=b}function E(){a(f,p,c,d,h,y,o,i,n,u,l,s,r,t),v.lineEnd=w,w()}return v}:function(t){return Nr(t,function(n,r){n=e(n,r),t.point(n[0],n[1])})})(t)}function a(r,o,i,u,l,s,c,f,p,d,h,y,v,m){var g=c-r,b=f-o,w=g*g+b*b;if(w>4*t&&v--){var x=u+d,E=l+h,k=s+y,S=Math.sqrt(x*x+E*E+k*k),C=Math.asin(k/=S),O=_(_(k)-1)<Oe||_(i-p)<Oe?(i+p)/2:Math.atan2(E,x),M=e(O,C),T=M[0],j=M[1],P=T-r,A=j-o,N=b*P-g*A;(N*N/w>t||_((g*P+b*A)/w-.5)>.3||u*d+l*h+s*y<n)&&(a(r,o,i,u,l,s,T,j,O,x/=S,E/=S,k,v,m),m.point(T,j),a(T,j,O,x,E,k,c,f,p,d,h,y,v,m))}}return o.precision=function(e){return arguments.length?(r=(t=e*e)>0&&16,o):Math.sqrt(t)},o}function Ar(e){this.stream=e}function Nr(e,t){return{point:t,sphere:function(){e.sphere()},lineStart:function(){e.lineStart()},lineEnd:function(){e.lineEnd()},polygonStart:function(){e.polygonStart()},polygonEnd:function(){e.polygonEnd()}}}function Rr(e){return Dr(function(){return e})()}function Dr(e){var t,n,r,o,i,u,l=Pr(function(e,n){return[(e=t(e,n))[0]*s+o,i-e[1]*s]}),s=150,c=480,f=250,p=0,d=0,h=0,y=0,v=0,m=ur,g=D,b=null,w=null;function x(e){return[(e=r(e[0]*Ne,e[1]*Ne))[0]*s+o,i-e[1]*s]}function E(e){return(e=r.invert((e[0]-o)/s,(i-e[1])/s))&&[e[0]*Re,e[1]*Re]}function k(){r=Xn(n=Fr(h,y,v),t);var e=t(p,d);return o=c-e[0]*s,i=f+e[1]*s,S()}function S(){return u&&(u.valid=!1,u=null),x}return x.stream=function(e){return u&&(u.valid=!1),(u=Ir(m(n,l(g(e))))).valid=!0,u},x.clipAngle=function(e){return arguments.length?(m=null==e?(b=e,ur):function(e){var t=Math.cos(e),n=t>0,r=_(t)>Oe;return rr(o,function(e){var t,u,l,s,c;return{lineStart:function(){s=l=!1,c=1},point:function(f,p){var d,h=[f,p],y=o(f,p),v=n?y?0:i(f,p):y?i(f+(f<0?Te:-Te),p):0;if(!t&&(s=l=y)&&e.lineStart(),y!==l&&(d=a(t,h),(Hn(t,d)||Hn(h,d))&&(h[0]+=Oe,h[1]+=Oe,y=o(h[0],h[1]))),y!==l)c=0,y?(e.lineStart(),d=a(h,t),e.point(d[0],d[1])):(d=a(t,h),e.point(d[0],d[1]),e.lineEnd()),t=d;else if(r&&t&&n^y){var m;v&u||!(m=a(h,t,!0))||(c=0,n?(e.lineStart(),e.point(m[0][0],m[0][1]),e.point(m[1][0],m[1][1]),e.lineEnd()):(e.point(m[1][0],m[1][1]),e.lineEnd(),e.lineStart(),e.point(m[0][0],m[0][1])))}!y||t&&Hn(t,h)||e.point(h[0],h[1]),t=h,l=y,u=v},lineEnd:function(){l&&e.lineEnd(),t=null},clean:function(){return c|(s&&l)<<1}}},Vr(e,6*Ne),n?[0,-e]:[-Te,e-Te]);function o(e,n){return Math.cos(e)*Math.cos(n)>t}function a(e,n,r){var o=[1,0,0],a=Un(zn(e),zn(n)),i=Fn(a,a),u=a[0],l=i-u*u;if(!l)return!r&&e;var s=t*i/l,c=-t*u/l,f=Un(o,a),p=qn(o,s);Bn(p,qn(a,c));var d=f,h=Fn(p,d),y=Fn(d,d),v=h*h-y*(Fn(p,p)-1);if(!(v<0)){var m=Math.sqrt(v),g=qn(d,(-h-m)/y);if(Bn(g,p),g=Wn(g),!r)return g;var b,w=e[0],x=n[0],E=e[1],k=n[1];x<w&&(b=w,w=x,x=b);var S=x-w,C=_(S-Te)<Oe;if(!C&&k<E&&(b=E,E=k,k=b),C||S<Oe?C?E+k>0^g[1]<(_(g[0]-w)<Oe?E:k):E<=g[1]&&g[1]<=k:S>Te^(w<=g[0]&&g[0]<=x)){var O=qn(d,(-h+m)/y);return Bn(O,p),[g,Wn(O)]}}}function i(t,r){var o=n?e:Te-e,a=0;return t<-o?a|=1:t>o&&(a|=2),r<-o?a|=4:r>o&&(a|=8),a}}((b=+e)*Ne),S()):b},x.clipExtent=function(e){return arguments.length?(w=e,g=e?cr(e[0][0],e[0][1],e[1][0],e[1][1]):D,S()):w},x.scale=function(e){return arguments.length?(s=+e,k()):s},x.translate=function(e){return arguments.length?(c=+e[0],f=+e[1],k()):[c,f]},x.center=function(e){return arguments.length?(p=e[0]%360*Ne,d=e[1]%360*Ne,k()):[p*Re,d*Re]},x.rotate=function(e){return arguments.length?(h=e[0]%360*Ne,y=e[1]%360*Ne,v=e.length>2?e[2]%360*Ne:0,k()):[h*Re,y*Re,v*Re]},a.rebind(x,l,"precision"),function(){return t=e.apply(this,arguments),x.invert=t.invert&&E,k()}}function Ir(e){return Nr(e,function(t,n){e.point(t*Ne,n*Ne)})}function Lr(e,t){return[e,t]}function zr(e,t){return[e>Te?e-je:e<-Te?e+je:e,t]}function Fr(e,t,n){return e?t||n?Xn(Br(e),qr(t,n)):Br(e):t||n?qr(t,n):zr}function Ur(e){return function(t,n){return[(t+=e)>Te?t-je:t<-Te?t+je:t,n]}}function Br(e){var t=Ur(e);return t.invert=Ur(-e),t}function qr(e,t){var n=Math.cos(e),r=Math.sin(e),o=Math.cos(t),a=Math.sin(t);function i(e,t){var i=Math.cos(t),u=Math.cos(e)*i,l=Math.sin(e)*i,s=Math.sin(t),c=s*n+u*r;return[Math.atan2(l*o-c*a,u*n-s*r),ze(c*o+l*a)]}return i.invert=function(e,t){var i=Math.cos(t),u=Math.cos(e)*i,l=Math.sin(e)*i,s=Math.sin(t),c=s*o-l*a;return[Math.atan2(l*o+s*a,u*n+c*r),ze(c*n-u*r)]},i}function Vr(e,t){var n=Math.cos(e),r=Math.sin(e);return function(o,a,i,u){var l=i*t;null!=o?(o=Wr(n,o),a=Wr(n,a),(i>0?o<a:o>a)&&(o+=i*je)):(o=e+i*je,a=e-.5*l);for(var s,c=o;i>0?c>a:c<a;c-=l)u.point((s=Wn([n,-r*Math.cos(c),-r*Math.sin(c)]))[0],s[1])}}function Wr(e,t){var n=zn(t);n[0]-=e,Vn(n);var r=Le(-n[1]);return((-n[2]<0?-r:r)+2*Math.PI-Oe)%(2*Math.PI)}function Hr(e,t,n){var r=a.range(e,t-Oe,n).concat(t);return function(e){return r.map(function(t){return[e,t]})}}function $r(e,t,n){var r=a.range(e,t-Oe,n).concat(t);return function(e){return r.map(function(t){return[t,e]})}}function Yr(e){return e.source}function Kr(e){return e.target}a.geo.path=function(){var e,t,n,r,o,i=4.5;function u(e){return e&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),o&&o.valid||(o=n(r)),a.geo.stream(e,o)),r.result()}function l(){return o=null,u}return u.area=function(e){return dr=0,a.geo.stream(e,n(br)),dr},u.centroid=function(e){return Cn=On=Mn=Tn=jn=Pn=An=Nn=Rn=0,a.geo.stream(e,n(Sr)),Rn?[An/Rn,Nn/Rn]:Pn?[Tn/Pn,jn/Pn]:Mn?[Cn/Mn,On/Mn]:[NaN,NaN]},u.bounds=function(e){return mr=gr=-(yr=vr=1/0),a.geo.stream(e,n(xr)),[[yr,vr],[mr,gr]]},u.projection=function(t){return arguments.length?(n=(e=t)?t.stream||(r=t,o=Pr(function(e,t){return r([e*Re,t*Re])}),function(e){return Ir(o(e))}):D,l()):e;var r,o},u.context=function(e){return arguments.length?(r=null==(t=e)?new _r:new jr(e),"function"!=typeof i&&r.pointRadius(i),l()):t},u.pointRadius=function(e){return arguments.length?(i="function"==typeof e?e:(r.pointRadius(+e),+e),u):i},u.projection(a.geo.albersUsa()).context(null)},a.geo.transform=function(e){return{stream:function(t){var n=new Ar(t);for(var r in e)n[r]=e[r];return n}}},Ar.prototype={point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},a.geo.projection=Rr,a.geo.projectionMutator=Dr,(a.geo.equirectangular=function(){return Rr(Lr)}).raw=Lr.invert=Lr,a.geo.rotation=function(e){function t(t){return(t=e(t[0]*Ne,t[1]*Ne))[0]*=Re,t[1]*=Re,t}return e=Fr(e[0]%360*Ne,e[1]*Ne,e.length>2?e[2]*Ne:0),t.invert=function(t){return(t=e.invert(t[0]*Ne,t[1]*Ne))[0]*=Re,t[1]*=Re,t},t},zr.invert=Lr,a.geo.circle=function(){var e,t,n=[0,0],r=6;function o(){var e="function"==typeof n?n.apply(this,arguments):n,r=Fr(-e[0]*Ne,-e[1]*Ne,0).invert,o=[];return t(null,null,1,{point:function(e,t){o.push(e=r(e,t)),e[0]*=Re,e[1]*=Re}}),{type:"Polygon",coordinates:[o]}}return o.origin=function(e){return arguments.length?(n=e,o):n},o.angle=function(n){return arguments.length?(t=Vr((e=+n)*Ne,r*Ne),o):e},o.precision=function(n){return arguments.length?(t=Vr(e*Ne,(r=+n)*Ne),o):r},o.angle(90)},a.geo.distance=function(e,t){var n,r=(t[0]-e[0])*Ne,o=e[1]*Ne,a=t[1]*Ne,i=Math.sin(r),u=Math.cos(r),l=Math.sin(o),s=Math.cos(o),c=Math.sin(a),f=Math.cos(a);return Math.atan2(Math.sqrt((n=f*i)*n+(n=s*c-l*f*u)*n),l*c+s*f*u)},a.geo.graticule=function(){var e,t,n,r,o,i,u,l,s,c,f,p,d=10,h=d,y=90,v=360,m=2.5;function g(){return{type:"MultiLineString",coordinates:b()}}function b(){return a.range(Math.ceil(r/y)*y,n,y).map(f).concat(a.range(Math.ceil(l/v)*v,u,v).map(p)).concat(a.range(Math.ceil(t/d)*d,e,d).filter(function(e){return _(e%y)>Oe}).map(s)).concat(a.range(Math.ceil(i/h)*h,o,h).filter(function(e){return _(e%v)>Oe}).map(c))}return g.lines=function(){return b().map(function(e){return{type:"LineString",coordinates:e}})},g.outline=function(){return{type:"Polygon",coordinates:[f(r).concat(p(u).slice(1),f(n).reverse().slice(1),p(l).reverse().slice(1))]}},g.extent=function(e){return arguments.length?g.majorExtent(e).minorExtent(e):g.minorExtent()},g.majorExtent=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],l=+e[0][1],u=+e[1][1],r>n&&(e=r,r=n,n=e),l>u&&(e=l,l=u,u=e),g.precision(m)):[[r,l],[n,u]]},g.minorExtent=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],i=+n[0][1],o=+n[1][1],t>e&&(n=t,t=e,e=n),i>o&&(n=i,i=o,o=n),g.precision(m)):[[t,i],[e,o]]},g.step=function(e){return arguments.length?g.majorStep(e).minorStep(e):g.minorStep()},g.majorStep=function(e){return arguments.length?(y=+e[0],v=+e[1],g):[y,v]},g.minorStep=function(e){return arguments.length?(d=+e[0],h=+e[1],g):[d,h]},g.precision=function(a){return arguments.length?(m=+a,s=Hr(i,o,90),c=$r(t,e,m),f=Hr(l,u,90),p=$r(r,n,m),g):m},g.majorExtent([[-180,-90+Oe],[180,90-Oe]]).minorExtent([[-180,-80-Oe],[180,80+Oe]])},a.geo.greatArc=function(){var e,t,n=Yr,r=Kr;function o(){return{type:"LineString",coordinates:[e||n.apply(this,arguments),t||r.apply(this,arguments)]}}return o.distance=function(){return a.geo.distance(e||n.apply(this,arguments),t||r.apply(this,arguments))},o.source=function(t){return arguments.length?(n=t,e="function"==typeof t?null:t,o):n},o.target=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,o):r},o.precision=function(){return arguments.length?o:0},o},a.geo.interpolate=function(e,t){return n=e[0]*Ne,r=e[1]*Ne,o=t[0]*Ne,a=t[1]*Ne,i=Math.cos(r),u=Math.sin(r),l=Math.cos(a),s=Math.sin(a),c=i*Math.cos(n),f=i*Math.sin(n),p=l*Math.cos(o),d=l*Math.sin(o),h=2*Math.asin(Math.sqrt(Ue(a-r)+i*l*Ue(o-n))),y=1/Math.sin(h),(v=h?function(e){var t=Math.sin(e*=h)*y,n=Math.sin(h-e)*y,r=n*c+t*p,o=n*f+t*d,a=n*u+t*s;return[Math.atan2(o,r)*Re,Math.atan2(a,Math.sqrt(r*r+o*o))*Re]}:function(){return[n*Re,r*Re]}).distance=h,v;var n,r,o,a,i,u,l,s,c,f,p,d,h,y,v},a.geo.length=function(e){return kr=0,a.geo.stream(e,Gr),kr};var Gr={sphere:F,point:F,lineStart:function(){var e,t,n;function r(r,o){var a=Math.sin(o*=Ne),i=Math.cos(o),u=_((r*=Ne)-e),l=Math.cos(u);kr+=Math.atan2(Math.sqrt((u=i*Math.sin(u))*u+(u=n*a-t*i*l)*u),t*a+n*i*l),e=r,t=a,n=i}Gr.point=function(o,a){e=o*Ne,t=Math.sin(a*=Ne),n=Math.cos(a),Gr.point=r},Gr.lineEnd=function(){Gr.point=Gr.lineEnd=F}},lineEnd:F,polygonStart:F,polygonEnd:F};function Jr(e,t){function n(t,n){var r=Math.cos(t),o=Math.cos(n),a=e(r*o);return[a*o*Math.sin(t),a*Math.sin(n)]}return n.invert=function(e,n){var r=Math.sqrt(e*e+n*n),o=t(r),a=Math.sin(o),i=Math.cos(o);return[Math.atan2(e*a,r*i),Math.asin(r&&n*a/r)]},n}var Qr=Jr(function(e){return Math.sqrt(2/(1+e))},function(e){return 2*Math.asin(e/2)});(a.geo.azimuthalEqualArea=function(){return Rr(Qr)}).raw=Qr;var Xr=Jr(function(e){var t=Math.acos(e);return t&&t/Math.sin(t)},D);function Zr(e,t){var n=Math.cos(e),r=function(e){return Math.tan(Te/4+e/2)},o=e===t?Math.sin(e):Math.log(n/Math.cos(t))/Math.log(r(t)/r(e)),a=n*Math.pow(r(e),o)/o;if(!o)return no;function i(e,t){a>0?t<-Ae+Oe&&(t=-Ae+Oe):t>Ae-Oe&&(t=Ae-Oe);var n=a/Math.pow(r(t),o);return[n*Math.sin(o*e),a-n*Math.cos(o*e)]}return i.invert=function(e,t){var n=a-t,r=De(o)*Math.sqrt(e*e+n*n);return[Math.atan2(e,n)/o,2*Math.atan(Math.pow(a/r,1/o))-Ae]},i}function eo(e,t){var n=Math.cos(e),r=e===t?Math.sin(e):(n-Math.cos(t))/(t-e),o=n/r+e;if(_(r)<Oe)return Lr;function a(e,t){var n=o-t;return[n*Math.sin(r*e),o-n*Math.cos(r*e)]}return a.invert=function(e,t){var n=o-t;return[Math.atan2(e,n)/r,o-De(r)*Math.sqrt(e*e+n*n)]},a}(a.geo.azimuthalEquidistant=function(){return Rr(Xr)}).raw=Xr,(a.geo.conicConformal=function(){return fr(Zr)}).raw=Zr,(a.geo.conicEquidistant=function(){return fr(eo)}).raw=eo;var to=Jr(function(e){return 1/e},Math.atan);function no(e,t){return[e,Math.log(Math.tan(Te/4+t/2))]}function ro(e){var t,n=Rr(e),r=n.scale,o=n.translate,a=n.clipExtent;return n.scale=function(){var e=r.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.translate=function(){var e=o.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.clipExtent=function(e){var i=a.apply(n,arguments);if(i===n){if(t=null==e){var u=Te*r(),l=o();a([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(i=null);return i},n.clipExtent(null)}(a.geo.gnomonic=function(){return Rr(to)}).raw=to,no.invert=function(e,t){return[e,2*Math.atan(Math.exp(t))-Ae]},(a.geo.mercator=function(){return ro(no)}).raw=no;var oo=Jr(function(){return 1},Math.asin);(a.geo.orthographic=function(){return Rr(oo)}).raw=oo;var ao=Jr(function(e){return 1/(1+e)},function(e){return 2*Math.atan(e)});function io(e,t){return[Math.log(Math.tan(Te/4+t/2)),-e]}function uo(e){return e[0]}function lo(e){return e[1]}function so(e){for(var t=e.length,n=[0,1],r=2,o=2;o<t;o++){for(;r>1&&Ie(e[n[r-2]],e[n[r-1]],e[o])<=0;)--r;n[r++]=o}return n.slice(0,r)}function co(e,t){return e[0]-t[0]||e[1]-t[1]}(a.geo.stereographic=function(){return Rr(ao)}).raw=ao,io.invert=function(e,t){return[-t,2*Math.atan(Math.exp(e))-Ae]},(a.geo.transverseMercator=function(){var e=ro(io),t=e.center,n=e.rotate;return e.center=function(e){return e?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return e?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90])}).raw=io,a.geom={},a.geom.hull=function(e){var t=uo,n=lo;if(arguments.length)return r(e);function r(e){if(e.length<3)return[];var r,o=wt(t),a=wt(n),i=e.length,u=[],l=[];for(r=0;r<i;r++)u.push([+o.call(this,e[r],r),+a.call(this,e[r],r),r]);for(u.sort(co),r=0;r<i;r++)l.push([u[r][0],-u[r][1]]);var s=so(u),c=so(l),f=c[0]===s[0],p=c[c.length-1]===s[s.length-1],d=[];for(r=s.length-1;r>=0;--r)d.push(e[u[s[r]][2]]);for(r=+f;r<c.length-p;++r)d.push(e[u[c[r]][2]]);return d}return r.x=function(e){return arguments.length?(t=e,r):t},r.y=function(e){return arguments.length?(n=e,r):n},r},a.geom.polygon=function(e){return $(e,fo),e};var fo=a.geom.polygon.prototype=[];function po(e,t,n){return(n[0]-t[0])*(e[1]-t[1])<(n[1]-t[1])*(e[0]-t[0])}function ho(e,t,n,r){var o=e[0],a=n[0],i=t[0]-o,u=r[0]-a,l=e[1],s=n[1],c=t[1]-l,f=r[1]-s,p=(u*(l-s)-f*(o-a))/(f*i-u*c);return[o+p*i,l+p*c]}function yo(e){var t=e[0],n=e[e.length-1];return!(t[0]-n[0]||t[1]-n[1])}fo.area=function(){for(var e,t=-1,n=this.length,r=this[n-1],o=0;++t<n;)e=r,r=this[t],o+=e[1]*r[0]-e[0]*r[1];return.5*o},fo.centroid=function(e){var t,n,r=-1,o=this.length,a=0,i=0,u=this[o-1];for(arguments.length||(e=-1/(6*this.area()));++r<o;)t=u,u=this[r],n=t[0]*u[1]-u[0]*t[1],a+=(t[0]+u[0])*n,i+=(t[1]+u[1])*n;return[a*e,i*e]},fo.clip=function(e){for(var t,n,r,o,a,i,u=yo(e),l=-1,s=this.length-yo(this),c=this[s-1];++l<s;){for(t=e.slice(),e.length=0,o=this[l],a=t[(r=t.length-u)-1],n=-1;++n<r;)po(i=t[n],c,o)?(po(a,c,o)||e.push(ho(a,i,c,o)),e.push(i)):po(a,c,o)&&e.push(ho(a,i,c,o)),a=i;u&&e.push(e[0]),c=o}return e};var vo,mo,go,bo,wo,xo=[],_o=[];function Eo(){Bo(this),this.edge=this.site=this.circle=null}function ko(e){var t=xo.pop()||new Eo;return t.site=e,t}function So(e){Ro(e),go.remove(e),xo.push(e),Bo(e)}function Co(e){var t=e.circle,n=t.x,r=t.cy,o={x:n,y:r},a=e.P,i=e.N,u=[e];So(e);for(var l=a;l.circle&&_(n-l.circle.x)<Oe&&_(r-l.circle.cy)<Oe;)a=l.P,u.unshift(l),So(l),l=a;u.unshift(l),Ro(l);for(var s=i;s.circle&&_(n-s.circle.x)<Oe&&_(r-s.circle.cy)<Oe;)i=s.N,u.push(s),So(s),s=i;u.push(s),Ro(s);var c,f=u.length;for(c=1;c<f;++c)s=u[c],l=u[c-1],zo(s.edge,l.site,s.site,o);l=u[0],(s=u[f-1]).edge=Lo(l.site,s.site,null,o),No(l),No(s)}function Oo(e){for(var t,n,r,o,a=e.x,i=e.y,u=go._;u;)if((r=Mo(u,i)-a)>Oe)u=u.L;else{if(!((o=a-To(u,i))>Oe)){r>-Oe?(t=u.P,n=u):o>-Oe?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}var l=ko(e);if(go.insert(t,l),t||n){if(t===n)return Ro(t),n=ko(t.site),go.insert(l,n),l.edge=n.edge=Lo(t.site,l.site),No(t),void No(n);if(n){Ro(t),Ro(n);var s=t.site,c=s.x,f=s.y,p=e.x-c,d=e.y-f,h=n.site,y=h.x-c,v=h.y-f,m=2*(p*v-d*y),g=p*p+d*d,b=y*y+v*v,w={x:(v*g-d*b)/m+c,y:(p*b-y*g)/m+f};zo(n.edge,s,h,w),l.edge=Lo(s,e,null,w),n.edge=Lo(e,h,null,w),No(t),No(n)}else l.edge=Lo(t.site,l.site)}}function Mo(e,t){var n=e.site,r=n.x,o=n.y,a=o-t;if(!a)return r;var i=e.P;if(!i)return-1/0;var u=(n=i.site).x,l=n.y,s=l-t;if(!s)return u;var c=u-r,f=1/a-1/s,p=c/s;return f?(-p+Math.sqrt(p*p-2*f*(c*c/(-2*s)-l+s/2+o-a/2)))/f+r:(r+u)/2}function To(e,t){var n=e.N;if(n)return Mo(n,t);var r=e.site;return r.y===t?r.x:1/0}function jo(e){this.site=e,this.edges=[]}function Po(e,t){return t.angle-e.angle}function Ao(){Bo(this),this.x=this.y=this.arc=this.site=this.cy=null}function No(e){var t=e.P,n=e.N;if(t&&n){var r=t.site,o=e.site,a=n.site;if(r!==a){var i=o.x,u=o.y,l=r.x-i,s=r.y-u,c=a.x-i,f=2*(l*(v=a.y-u)-s*c);if(!(f>=-Me)){var p=l*l+s*s,d=c*c+v*v,h=(v*p-s*d)/f,y=(l*d-c*p)/f,v=y+u,m=_o.pop()||new Ao;m.arc=e,m.site=o,m.x=h+i,m.y=v+Math.sqrt(h*h+y*y),m.cy=v,e.circle=m;for(var g=null,b=wo._;b;)if(m.y<b.y||m.y===b.y&&m.x<=b.x){if(!b.L){g=b.P;break}b=b.L}else{if(!b.R){g=b;break}b=b.R}wo.insert(g,m),g||(bo=m)}}}}function Ro(e){var t=e.circle;t&&(t.P||(bo=t.N),wo.remove(t),_o.push(t),Bo(t),e.circle=null)}function Do(e,t){var n=e.b;if(n)return!0;var r,o,a=e.a,i=t[0][0],u=t[1][0],l=t[0][1],s=t[1][1],c=e.l,f=e.r,p=c.x,d=c.y,h=f.x,y=f.y,v=(p+h)/2,m=(d+y)/2;if(y===d){if(v<i||v>=u)return;if(p>h){if(a){if(a.y>=s)return}else a={x:v,y:l};n={x:v,y:s}}else{if(a){if(a.y<l)return}else a={x:v,y:s};n={x:v,y:l}}}else if(o=m-(r=(p-h)/(y-d))*v,r<-1||r>1)if(p>h){if(a){if(a.y>=s)return}else a={x:(l-o)/r,y:l};n={x:(s-o)/r,y:s}}else{if(a){if(a.y<l)return}else a={x:(s-o)/r,y:s};n={x:(l-o)/r,y:l}}else if(d<y){if(a){if(a.x>=u)return}else a={x:i,y:r*i+o};n={x:u,y:r*u+o}}else{if(a){if(a.x<i)return}else a={x:u,y:r*u+o};n={x:i,y:r*i+o}}return e.a=a,e.b=n,!0}function Io(e,t){this.l=e,this.r=t,this.a=this.b=null}function Lo(e,t,n,r){var o=new Io(e,t);return vo.push(o),n&&zo(o,e,t,n),r&&zo(o,t,e,r),mo[e.i].edges.push(new Fo(o,e,t)),mo[t.i].edges.push(new Fo(o,t,e)),o}function zo(e,t,n,r){e.a||e.b?e.l===n?e.b=r:e.a=r:(e.a=r,e.l=t,e.r=n)}function Fo(e,t,n){var r=e.a,o=e.b;this.edge=e,this.site=t,this.angle=n?Math.atan2(n.y-t.y,n.x-t.x):e.l===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}function Uo(){this._=null}function Bo(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function qo(e,t){var n=t,r=t.R,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Vo(e,t){var n=t,r=t.L,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Wo(e){for(;e.L;)e=e.L;return e}function Ho(e,t){var n,r,o,a=e.sort($o).pop();for(vo=[],mo=new Array(e.length),go=new Uo,wo=new Uo;;)if(o=bo,a&&(!o||a.y<o.y||a.y===o.y&&a.x<o.x))a.x===n&&a.y===r||(mo[a.i]=new jo(a),Oo(a),n=a.x,r=a.y),a=e.pop();else{if(!o)break;Co(o.arc)}t&&(function(e){for(var t,n=vo,r=lr(e[0][0],e[0][1],e[1][0],e[1][1]),o=n.length;o--;)(!Do(t=n[o],e)||!r(t)||_(t.a.x-t.b.x)<Oe&&_(t.a.y-t.b.y)<Oe)&&(t.a=t.b=null,n.splice(o,1))}(t),function(e){for(var t,n,r,o,a,i,u,l,s,c,f=e[0][0],p=e[1][0],d=e[0][1],h=e[1][1],y=mo,v=y.length;v--;)if((a=y[v])&&a.prepare())for(l=(u=a.edges).length,i=0;i<l;)r=(c=u[i].end()).x,o=c.y,t=(s=u[++i%l].start()).x,n=s.y,(_(r-t)>Oe||_(o-n)>Oe)&&(u.splice(i,0,new Fo((m=a.site,g=c,b=_(r-f)<Oe&&h-o>Oe?{x:f,y:_(t-f)<Oe?n:h}:_(o-h)<Oe&&p-r>Oe?{x:_(n-h)<Oe?t:p,y:h}:_(r-p)<Oe&&o-d>Oe?{x:p,y:_(t-p)<Oe?n:d}:_(o-d)<Oe&&r-f>Oe?{x:_(n-d)<Oe?t:f,y:d}:null,w=void 0,w=new Io(m,null),w.a=g,w.b=b,vo.push(w),w),a.site,null)),++l);var m,g,b,w}(t));var i={cells:mo,edges:vo};return go=wo=vo=mo=null,i}function $o(e,t){return t.y-e.y||t.x-e.x}jo.prototype.prepare=function(){for(var e,t=this.edges,n=t.length;n--;)(e=t[n].edge).b&&e.a||t.splice(n,1);return t.sort(Po),t.length},Fo.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},Uo.prototype={insert:function(e,t){var n,r,o;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=Wo(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.R&&(qo(this,n),n=(e=n).U),n.C=!1,r.C=!0,Vo(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.L&&(Vo(this,n),n=(e=n).U),n.C=!1,r.C=!0,qo(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,o=e.U,a=e.L,i=e.R;if(n=a?i?Wo(i):a:i,o?o.L===e?o.L=n:o.R=n:this._=n,a&&i?(r=n.C,n.C=e.C,n.L=a,a.U=n,n!==i?(o=n.U,n.U=e.U,e=n.R,o.L=e,n.R=i,i.U=n):(n.U=o,o=n,e=n.R)):(r=e.C,e=n),e&&(e.U=o),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===o.L){if((t=o.R).C&&(t.C=!1,o.C=!0,qo(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,Vo(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,qo(this,o),e=this._;break}}else if((t=o.L).C&&(t.C=!1,o.C=!0,Vo(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,qo(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,Vo(this,o),e=this._;break}t.C=!0,e=o,o=o.U}while(!e.C);e&&(e.C=!1)}}},a.geom.voronoi=function(e){var t=uo,n=lo,r=t,o=n,a=Yo;if(e)return i(e);function i(e){var t=new Array(e.length),n=a[0][0],r=a[0][1],o=a[1][0],i=a[1][1];return Ho(u(e),a).cells.forEach(function(a,u){var l=a.edges,s=a.site;(t[u]=l.length?l.map(function(e){var t=e.start();return[t.x,t.y]}):s.x>=n&&s.x<=o&&s.y>=r&&s.y<=i?[[n,i],[o,i],[o,r],[n,r]]:[]).point=e[u]}),t}function u(e){return e.map(function(e,t){return{x:Math.round(r(e,t)/Oe)*Oe,y:Math.round(o(e,t)/Oe)*Oe,i:t}})}return i.links=function(e){return Ho(u(e)).edges.filter(function(e){return e.l&&e.r}).map(function(t){return{source:e[t.l.i],target:e[t.r.i]}})},i.triangles=function(e){var t=[];return Ho(u(e)).cells.forEach(function(n,r){for(var o,a,i,u,l=n.site,s=n.edges.sort(Po),c=-1,f=s.length,p=s[f-1].edge,d=p.l===l?p.r:p.l;++c<f;)p,o=d,d=(p=s[c].edge).l===l?p.r:p.l,r<o.i&&r<d.i&&(i=o,u=d,((a=l).x-u.x)*(i.y-a.y)-(a.x-i.x)*(u.y-a.y)<0)&&t.push([e[r],e[o.i],e[d.i]])}),t},i.x=function(e){return arguments.length?(r=wt(t=e),i):t},i.y=function(e){return arguments.length?(o=wt(n=e),i):n},i.clipExtent=function(e){return arguments.length?(a=null==e?Yo:e,i):a===Yo?null:a},i.size=function(e){return arguments.length?i.clipExtent(e&&[[0,0],e]):a===Yo?null:a&&a[1]},i};var Yo=[[-1e6,-1e6],[1e6,1e6]];function Ko(e){return e.x}function Go(e){return e.y}function Jo(e,t){e=a.rgb(e),t=a.rgb(t);var n=e.r,r=e.g,o=e.b,i=t.r-n,u=t.g-r,l=t.b-o;return function(e){return"#"+dt(Math.round(n+i*e))+dt(Math.round(r+u*e))+dt(Math.round(o+l*e))}}function Qo(e,t){var n,r={},o={};for(n in e)n in t?r[n]=na(e[n],t[n]):o[n]=e[n];for(n in t)n in e||(o[n]=t[n]);return function(e){for(n in r)o[n]=r[n](e);return o}}function Xo(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function Zo(e,t){var n,r,o,a=ea.lastIndex=ta.lastIndex=0,i=-1,u=[],l=[];for(e+="",t+="";(n=ea.exec(e))&&(r=ta.exec(t));)(o=r.index)>a&&(o=t.slice(a,o),u[i]?u[i]+=o:u[++i]=o),(n=n[0])===(r=r[0])?u[i]?u[i]+=r:u[++i]=r:(u[++i]=null,l.push({i:i,x:Xo(n,r)})),a=ta.lastIndex;return a<t.length&&(o=t.slice(a),u[i]?u[i]+=o:u[++i]=o),u.length<2?l[0]?(t=l[0].x,function(e){return t(e)+""}):function(){return t}:(t=l.length,function(e){for(var n,r=0;r<t;++r)u[(n=l[r]).i]=n.x(e);return u.join("")})}a.geom.delaunay=function(e){return a.geom.voronoi().triangles(e)},a.geom.quadtree=function(e,t,n,r,o){var a,i=uo,u=lo;if(a=arguments.length)return i=Ko,u=Go,3===a&&(o=n,r=t,n=t=0),l(e);function l(e){var l,s,c,f,p,d,h,y,v,m=wt(i),g=wt(u);if(null!=t)d=t,h=n,y=r,v=o;else if(y=v=-(d=h=1/0),s=[],c=[],p=e.length,a)for(f=0;f<p;++f)(l=e[f]).x<d&&(d=l.x),l.y<h&&(h=l.y),l.x>y&&(y=l.x),l.y>v&&(v=l.y),s.push(l.x),c.push(l.y);else for(f=0;f<p;++f){var b=+m(l=e[f],f),w=+g(l,f);b<d&&(d=b),w<h&&(h=w),b>y&&(y=b),w>v&&(v=w),s.push(b),c.push(w)}var x=y-d,E=v-h;function k(e,t,n,r,o,a,i,u){if(!isNaN(n)&&!isNaN(r))if(e.leaf){var l=e.x,s=e.y;if(null!=l)if(_(l-n)+_(s-r)<.01)S(e,t,n,r,o,a,i,u);else{var c=e.point;e.x=e.y=e.point=null,S(e,c,l,s,o,a,i,u),S(e,t,n,r,o,a,i,u)}else e.x=n,e.y=r,e.point=t}else S(e,t,n,r,o,a,i,u)}function S(e,t,n,r,o,a,i,u){var l=.5*(o+i),s=.5*(a+u),c=n>=l,f=r>=s,p=f<<1|c;e.leaf=!1,c?o=l:i=l,f?a=s:u=s,k(e=e.nodes[p]||(e.nodes[p]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,n,r,o,a,i,u)}x>E?v=h+x:y=d+E;var C={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(e){k(C,e,+m(e,++f),+g(e,f),d,h,y,v)}};if(C.visit=function(e){!function e(t,n,r,o,a,i){if(!t(n,r,o,a,i)){var u=.5*(r+a),l=.5*(o+i),s=n.nodes;s[0]&&e(t,s[0],r,o,u,l),s[1]&&e(t,s[1],u,o,a,l),s[2]&&e(t,s[2],r,l,u,i),s[3]&&e(t,s[3],u,l,a,i)}}(e,C,d,h,y,v)},C.find=function(e){return function(e,t,n,r,o,a,i){var u,l=1/0;return function e(s,c,f,p,d){if(!(c>a||f>i||p<r||d<o)){if(h=s.point){var h,y=t-s.x,v=n-s.y,m=y*y+v*v;if(m<l){var g=Math.sqrt(l=m);r=t-g,o=n-g,a=t+g,i=n+g,u=h}}for(var b=s.nodes,w=.5*(c+p),x=.5*(f+d),_=(n>=x)<<1|t>=w,E=_+4;_<E;++_)if(s=b[3&_])switch(3&_){case 0:e(s,c,f,w,x);break;case 1:e(s,w,f,p,x);break;case 2:e(s,c,x,w,d);break;case 3:e(s,w,x,p,d)}}}(e,r,o,a,i),u}(C,e[0],e[1],d,h,y,v)},f=-1,null==t){for(;++f<p;)k(C,e[f],s[f],c[f],d,h,y,v);--f}else e.forEach(C.add);return s=c=e=l=null,C}return l.x=function(e){return arguments.length?(i=e,l):i},l.y=function(e){return arguments.length?(u=e,l):u},l.extent=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=+e[0][0],n=+e[0][1],r=+e[1][0],o=+e[1][1]),l):null==t?null:[[t,n],[r,o]]},l.size=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=n=0,r=+e[0],o=+e[1]),l):null==t?null:[r-t,o-n]},l},a.interpolateRgb=Jo,a.interpolateObject=Qo,a.interpolateNumber=Xo,a.interpolateString=Zo;var ea=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ta=new RegExp(ea.source,"g");function na(e,t){for(var n,r=a.interpolators.length;--r>=0&&!(n=a.interpolators[r](e,t)););return n}function ra(e,t){var n,r=[],o=[],a=e.length,i=t.length,u=Math.min(e.length,t.length);for(n=0;n<u;++n)r.push(na(e[n],t[n]));for(;n<a;++n)o[n]=e[n];for(;n<i;++n)o[n]=t[n];return function(e){for(n=0;n<u;++n)o[n]=r[n](e);return o}}a.interpolate=na,a.interpolators=[function(e,t){var n=typeof t;return("string"===n?bt.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?Jo:Zo:t instanceof He?Jo:Array.isArray(t)?ra:"object"===n&&isNaN(t)?Qo:Xo)(e,t)}],a.interpolateArray=ra;var oa=function(){return D},aa=a.map({linear:oa,poly:function(e){return function(t){return Math.pow(t,e)}},quad:function(){return sa},cubic:function(){return ca},sin:function(){return pa},exp:function(){return da},circle:function(){return ha},elastic:function(e,t){var n;arguments.length<2&&(t=.45);arguments.length?n=t/je*Math.asin(1/e):(e=1,n=t/4);return function(r){return 1+e*Math.pow(2,-10*r)*Math.sin((r-n)*je/t)}},back:function(e){e||(e=1.70158);return function(t){return t*t*((e+1)*t-e)}},bounce:function(){return ya}}),ia=a.map({in:D,out:ua,"in-out":la,"out-in":function(e){return la(ua(e))}});function ua(e){return function(t){return 1-e(1-t)}}function la(e){return function(t){return.5*(t<.5?e(2*t):2-e(2-2*t))}}function sa(e){return e*e}function ca(e){return e*e*e}function fa(e){if(e<=0)return 0;if(e>=1)return 1;var t=e*e,n=t*e;return 4*(e<.5?n:3*(e-t)+n-.75)}function pa(e){return 1-Math.cos(e*Ae)}function da(e){return Math.pow(2,10*(e-1))}function ha(e){return 1-Math.sqrt(1-e*e)}function ya(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function va(e,t){return t-=e,function(n){return Math.round(e+t*n)}}function ma(e){var t,n,r,o=[e.a,e.b],a=[e.c,e.d],i=ba(o),u=ga(o,a),l=ba(((t=a)[0]+=(r=-u)*(n=o)[0],t[1]+=r*n[1],t))||0;o[0]*a[1]<a[0]*o[1]&&(o[0]*=-1,o[1]*=-1,i*=-1,u*=-1),this.rotate=(i?Math.atan2(o[1],o[0]):Math.atan2(-a[0],a[1]))*Re,this.translate=[e.e,e.f],this.scale=[i,l],this.skew=l?Math.atan2(u,l)*Re:0}function ga(e,t){return e[0]*t[0]+e[1]*t[1]}function ba(e){var t=Math.sqrt(ga(e,e));return t&&(e[0]/=t,e[1]/=t),t}a.ease=function(e){var t,n=e.indexOf("-"),r=n>=0?e.slice(0,n):e,o=n>=0?e.slice(n+1):"in";return r=aa.get(r)||oa,o=ia.get(o)||D,t=o(r.apply(null,i.call(arguments,1))),function(e){return e<=0?0:e>=1?1:t(e)}},a.interpolateHcl=function(e,t){e=a.hcl(e),t=a.hcl(t);var n=e.h,r=e.c,o=e.l,i=t.h-n,u=t.c-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.c:r);isNaN(i)?(i=0,n=isNaN(n)?t.h:n):i>180?i-=360:i<-180&&(i+=360);return function(e){return Qe(n+i*e,r+u*e,o+l*e)+""}},a.interpolateHsl=function(e,t){e=a.hsl(e),t=a.hsl(t);var n=e.h,r=e.s,o=e.l,i=t.h-n,u=t.s-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.s:r);isNaN(i)?(i=0,n=isNaN(n)?t.h:n):i>180?i-=360:i<-180&&(i+=360);return function(e){return Ke(n+i*e,r+u*e,o+l*e)+""}},a.interpolateLab=function(e,t){e=a.lab(e),t=a.lab(t);var n=e.l,r=e.a,o=e.b,i=t.l-n,u=t.a-r,l=t.b-o;return function(e){return ot(n+i*e,r+u*e,o+l*e)+""}},a.interpolateRound=va,a.transform=function(e){var t=l.createElementNS(a.ns.prefix.svg,"g");return(a.transform=function(e){if(null!=e){t.setAttribute("transform",e);var n=t.transform.baseVal.consolidate()}return new ma(n?n.matrix:wa)})(e)},ma.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var wa={a:1,b:0,c:0,d:1,e:0,f:0};function xa(e){return e.length?e.pop()+",":""}function _a(e,t){var n=[],r=[];return e=a.transform(e),t=a.transform(t),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push("translate(",null,",",null,")");r.push({i:o-4,x:Xo(e[0],t[0])},{i:o-2,x:Xo(e[1],t[1])})}else(t[0]||t[1])&&n.push("translate("+t+")")}(e.translate,t.translate,n,r),function(e,t,n,r){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),r.push({i:n.push(xa(n)+"rotate(",null,")")-2,x:Xo(e,t)})):t&&n.push(xa(n)+"rotate("+t+")")}(e.rotate,t.rotate,n,r),function(e,t,n,r){e!==t?r.push({i:n.push(xa(n)+"skewX(",null,")")-2,x:Xo(e,t)}):t&&n.push(xa(n)+"skewX("+t+")")}(e.skew,t.skew,n,r),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push(xa(n)+"scale(",null,",",null,")");r.push({i:o-4,x:Xo(e[0],t[0])},{i:o-2,x:Xo(e[1],t[1])})}else 1===t[0]&&1===t[1]||n.push(xa(n)+"scale("+t+")")}(e.scale,t.scale,n,r),e=t=null,function(e){for(var t,o=-1,a=r.length;++o<a;)n[(t=r[o]).i]=t.x(e);return n.join("")}}function Ea(e,t){return t=(t-=e=+e)||1/t,function(n){return(n-e)/t}}function ka(e,t){return t=(t-=e=+e)||1/t,function(n){return Math.max(0,Math.min(1,(n-e)/t))}}function Sa(e){for(var t=e.source,n=e.target,r=function(e,t){if(e===t)return e;var n=Ca(e),r=Ca(t),o=n.pop(),a=r.pop(),i=null;for(;o===a;)i=o,o=n.pop(),a=r.pop();return i}(t,n),o=[t];t!==r;)t=t.parent,o.push(t);for(var a=o.length;n!==r;)o.splice(a,0,n),n=n.parent;return o}function Ca(e){for(var t=[],n=e.parent;null!=n;)t.push(e),e=n,n=n.parent;return t.push(e),t}function Oa(e){e.fixed|=2}function Ma(e){e.fixed&=-7}function Ta(e){e.fixed|=4,e.px=e.x,e.py=e.y}function ja(e){e.fixed&=-5}a.interpolateTransform=_a,a.layout={},a.layout.bundle=function(){return function(e){for(var t=[],n=-1,r=e.length;++n<r;)t.push(Sa(e[n]));return t}},a.layout.chord=function(){var e,t,n,r,o,i,u,l={},s=0;function c(){var l,c,p,d,h,y={},v=[],m=a.range(r),g=[];for(e=[],t=[],l=0,d=-1;++d<r;){for(c=0,h=-1;++h<r;)c+=n[d][h];v.push(c),g.push(a.range(r)),l+=c}for(o&&m.sort(function(e,t){return o(v[e],v[t])}),i&&g.forEach(function(e,t){e.sort(function(e,r){return i(n[t][e],n[t][r])})}),l=(je-s*r)/l,c=0,d=-1;++d<r;){for(p=c,h=-1;++h<r;){var b=m[d],w=g[b][h],x=n[b][w],_=c,E=c+=x*l;y[b+"-"+w]={index:b,subindex:w,startAngle:_,endAngle:E,value:x}}t[b]={index:b,startAngle:p,endAngle:c,value:v[b]},c+=s}for(d=-1;++d<r;)for(h=d-1;++h<r;){var k=y[d+"-"+h],S=y[h+"-"+d];(k.value||S.value)&&e.push(k.value<S.value?{source:S,target:k}:{source:k,target:S})}u&&f()}function f(){e.sort(function(e,t){return u((e.source.value+e.target.value)/2,(t.source.value+t.target.value)/2)})}return l.matrix=function(o){return arguments.length?(r=(n=o)&&n.length,e=t=null,l):n},l.padding=function(n){return arguments.length?(s=n,e=t=null,l):s},l.sortGroups=function(n){return arguments.length?(o=n,e=t=null,l):o},l.sortSubgroups=function(t){return arguments.length?(i=t,e=null,l):i},l.sortChords=function(t){return arguments.length?(u=t,e&&f(),l):u},l.chords=function(){return e||c(),e},l.groups=function(){return t||c(),t},l},a.layout.force=function(){var e,t,n,r,o,i,u={},l=a.dispatch("start","tick","end"),s=[1,1],c=.9,f=Pa,p=Aa,d=-30,h=Na,y=.1,v=.64,m=[],g=[];function b(e){return function(t,n,r,o){if(t.point!==e){var a=t.cx-e.x,i=t.cy-e.y,u=o-n,l=a*a+i*i;if(u*u/v<l){if(l<h){var s=t.charge/l;e.px-=a*s,e.py-=i*s}return!0}if(t.point&&l&&l<h){s=t.pointCharge/l;e.px-=a*s,e.py-=i*s}}return!t.charge}}function w(e){e.px=a.event.x,e.py=a.event.y,u.resume()}return u.tick=function(){if((n*=.99)<.005)return e=null,l.end({type:"end",alpha:n=0}),!0;var t,u,f,p,h,v,w,x,_,E=m.length,k=g.length;for(u=0;u<k;++u)p=(f=g[u]).source,(v=(x=(h=f.target).x-p.x)*x+(_=h.y-p.y)*_)&&(x*=v=n*o[u]*((v=Math.sqrt(v))-r[u])/v,_*=v,h.x-=x*(w=p.weight+h.weight?p.weight/(p.weight+h.weight):.5),h.y-=_*w,p.x+=x*(w=1-w),p.y+=_*w);if((w=n*y)&&(x=s[0]/2,_=s[1]/2,u=-1,w))for(;++u<E;)(f=m[u]).x+=(x-f.x)*w,f.y+=(_-f.y)*w;if(d)for(!function e(t,n,r){var o=0,a=0;t.charge=0;if(!t.leaf)for(var i,u=t.nodes,l=u.length,s=-1;++s<l;)null!=(i=u[s])&&(e(i,n,r),t.charge+=i.charge,o+=i.charge*i.cx,a+=i.charge*i.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var c=n*r[t.point.index];t.charge+=t.pointCharge=c,o+=c*t.point.x,a+=c*t.point.y}t.cx=o/t.charge;t.cy=a/t.charge}(t=a.geom.quadtree(m),n,i),u=-1;++u<E;)(f=m[u]).fixed||t.visit(b(f));for(u=-1;++u<E;)(f=m[u]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*c,f.y-=(f.py-(f.py=f.y))*c);l.tick({type:"tick",alpha:n})},u.nodes=function(e){return arguments.length?(m=e,u):m},u.links=function(e){return arguments.length?(g=e,u):g},u.size=function(e){return arguments.length?(s=e,u):s},u.linkDistance=function(e){return arguments.length?(f="function"==typeof e?e:+e,u):f},u.distance=u.linkDistance,u.linkStrength=function(e){return arguments.length?(p="function"==typeof e?e:+e,u):p},u.friction=function(e){return arguments.length?(c=+e,u):c},u.charge=function(e){return arguments.length?(d="function"==typeof e?e:+e,u):d},u.chargeDistance=function(e){return arguments.length?(h=e*e,u):Math.sqrt(h)},u.gravity=function(e){return arguments.length?(y=+e,u):y},u.theta=function(e){return arguments.length?(v=e*e,u):Math.sqrt(v)},u.alpha=function(t){return arguments.length?(t=+t,n?t>0?n=t:(e.c=null,e.t=NaN,e=null,l.end({type:"end",alpha:n=0})):t>0&&(l.start({type:"start",alpha:n=t}),e=Mt(u.tick)),u):n},u.start=function(){var e,t,n,a=m.length,l=g.length,c=s[0],h=s[1];for(e=0;e<a;++e)(n=m[e]).index=e,n.weight=0;for(e=0;e<l;++e)"number"==typeof(n=g[e]).source&&(n.source=m[n.source]),"number"==typeof n.target&&(n.target=m[n.target]),++n.source.weight,++n.target.weight;for(e=0;e<a;++e)n=m[e],isNaN(n.x)&&(n.x=y("x",c)),isNaN(n.y)&&(n.y=y("y",h)),isNaN(n.px)&&(n.px=n.x),isNaN(n.py)&&(n.py=n.y);if(r=[],"function"==typeof f)for(e=0;e<l;++e)r[e]=+f.call(this,g[e],e);else for(e=0;e<l;++e)r[e]=f;if(o=[],"function"==typeof p)for(e=0;e<l;++e)o[e]=+p.call(this,g[e],e);else for(e=0;e<l;++e)o[e]=p;if(i=[],"function"==typeof d)for(e=0;e<a;++e)i[e]=+d.call(this,m[e],e);else for(e=0;e<a;++e)i[e]=d;function y(n,r){if(!t){for(t=new Array(a),s=0;s<a;++s)t[s]=[];for(s=0;s<l;++s){var o=g[s];t[o.source.index].push(o.target),t[o.target.index].push(o.source)}}for(var i,u=t[e],s=-1,c=u.length;++s<c;)if(!isNaN(i=u[s][n]))return i;return Math.random()*r}return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){if(t||(t=a.behavior.drag().origin(D).on("dragstart.force",Oa).on("drag.force",w).on("dragend.force",Ma)),!arguments.length)return t;this.on("mouseover.force",Ta).on("mouseout.force",ja).call(t)},a.rebind(u,l,"on")};var Pa=20,Aa=1,Na=1/0;function Ra(e,t){return a.rebind(e,t,"sort","children","value"),e.nodes=e,e.links=Ua,e}function Da(e,t){for(var n=[e];null!=(e=n.pop());)if(t(e),(o=e.children)&&(r=o.length))for(var r,o;--r>=0;)n.push(o[r])}function Ia(e,t){for(var n=[e],r=[];null!=(e=n.pop());)if(r.push(e),(a=e.children)&&(o=a.length))for(var o,a,i=-1;++i<o;)n.push(a[i]);for(;null!=(e=r.pop());)t(e)}function La(e){return e.children}function za(e){return e.value}function Fa(e,t){return t.value-e.value}function Ua(e){return a.merge(e.map(function(e){return(e.children||[]).map(function(t){return{source:e,target:t}})}))}a.layout.hierarchy=function(){var e=Fa,t=La,n=za;function r(o){var a,i=[o],u=[];for(o.depth=0;null!=(a=i.pop());)if(u.push(a),(s=t.call(r,a,a.depth))&&(l=s.length)){for(var l,s,c;--l>=0;)i.push(c=s[l]),c.parent=a,c.depth=a.depth+1;n&&(a.value=0),a.children=s}else n&&(a.value=+n.call(r,a,a.depth)||0),delete a.children;return Ia(o,function(t){var r,o;e&&(r=t.children)&&r.sort(e),n&&(o=t.parent)&&(o.value+=t.value)}),u}return r.sort=function(t){return arguments.length?(e=t,r):e},r.children=function(e){return arguments.length?(t=e,r):t},r.value=function(e){return arguments.length?(n=e,r):n},r.revalue=function(e){return n&&(Da(e,function(e){e.children&&(e.value=0)}),Ia(e,function(e){var t;e.children||(e.value=+n.call(r,e,e.depth)||0),(t=e.parent)&&(t.value+=e.value)})),e},r},a.layout.partition=function(){var e=a.layout.hierarchy(),t=[1,1];function n(n,r){var o=e.call(this,n,r);return function e(t,n,r,o){var a=t.children;if(t.x=n,t.y=t.depth*o,t.dx=r,t.dy=o,a&&(i=a.length)){var i,u,l,s=-1;for(r=t.value?r/t.value:0;++s<i;)e(u=a[s],n,l=u.value*r,o),n+=l}}(o[0],0,t[0],t[1]/function e(t){var n=t.children,r=0;if(n&&(o=n.length))for(var o,a=-1;++a<o;)r=Math.max(r,e(n[a]));return 1+r}(o[0])),o}return n.size=function(e){return arguments.length?(t=e,n):t},Ra(n,e)},a.layout.pie=function(){var e=Number,t=Ba,n=0,r=je,o=0;function i(u){var l,s=u.length,c=u.map(function(t,n){return+e.call(i,t,n)}),f=+("function"==typeof n?n.apply(this,arguments):n),p=("function"==typeof r?r.apply(this,arguments):r)-f,d=Math.min(Math.abs(p)/s,+("function"==typeof o?o.apply(this,arguments):o)),h=d*(p<0?-1:1),y=a.sum(c),v=y?(p-s*h)/y:0,m=a.range(s),g=[];return null!=t&&m.sort(t===Ba?function(e,t){return c[t]-c[e]}:function(e,n){return t(u[e],u[n])}),m.forEach(function(e){g[e]={data:u[e],value:l=c[e],startAngle:f,endAngle:f+=l*v+h,padAngle:d}}),g}return i.value=function(t){return arguments.length?(e=t,i):e},i.sort=function(e){return arguments.length?(t=e,i):t},i.startAngle=function(e){return arguments.length?(n=e,i):n},i.endAngle=function(e){return arguments.length?(r=e,i):r},i.padAngle=function(e){return arguments.length?(o=e,i):o},i};var Ba={};function qa(e){return e.x}function Va(e){return e.y}function Wa(e,t,n){e.y0=t,e.y=n}a.layout.stack=function(){var e=D,t=Ya,n=Ka,r=Wa,o=qa,i=Va;function u(l,s){if(!(d=l.length))return l;var c=l.map(function(t,n){return e.call(u,t,n)}),f=c.map(function(e){return e.map(function(e,t){return[o.call(u,e,t),i.call(u,e,t)]})}),p=t.call(u,f,s);c=a.permute(c,p),f=a.permute(f,p);var d,h,y,v,m=n.call(u,f,s),g=c[0].length;for(y=0;y<g;++y)for(r.call(u,c[0][y],v=m[y],f[0][y][1]),h=1;h<d;++h)r.call(u,c[h][y],v+=f[h-1][y][1],f[h][y][1]);return l}return u.values=function(t){return arguments.length?(e=t,u):e},u.order=function(e){return arguments.length?(t="function"==typeof e?e:Ha.get(e)||Ya,u):t},u.offset=function(e){return arguments.length?(n="function"==typeof e?e:$a.get(e)||Ka,u):n},u.x=function(e){return arguments.length?(o=e,u):o},u.y=function(e){return arguments.length?(i=e,u):i},u.out=function(e){return arguments.length?(r=e,u):r},u};var Ha=a.map({"inside-out":function(e){var t,n,r=e.length,o=e.map(Ga),i=e.map(Ja),u=a.range(r).sort(function(e,t){return o[e]-o[t]}),l=0,s=0,c=[],f=[];for(t=0;t<r;++t)n=u[t],l<s?(l+=i[n],c.push(n)):(s+=i[n],f.push(n));return f.reverse().concat(c)},reverse:function(e){return a.range(e.length).reverse()},default:Ya}),$a=a.map({silhouette:function(e){var t,n,r,o=e.length,a=e[0].length,i=[],u=0,l=[];for(n=0;n<a;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];r>u&&(u=r),i.push(r)}for(n=0;n<a;++n)l[n]=(u-i[n])/2;return l},wiggle:function(e){var t,n,r,o,a,i,u,l,s,c=e.length,f=e[0],p=f.length,d=[];for(d[0]=l=s=0,n=1;n<p;++n){for(t=0,o=0;t<c;++t)o+=e[t][n][1];for(t=0,a=0,u=f[n][0]-f[n-1][0];t<c;++t){for(r=0,i=(e[t][n][1]-e[t][n-1][1])/(2*u);r<t;++r)i+=(e[r][n][1]-e[r][n-1][1])/u;a+=i*e[t][n][1]}d[n]=l-=o?a/o*u:0,l<s&&(s=l)}for(n=0;n<p;++n)d[n]-=s;return d},expand:function(e){var t,n,r,o=e.length,a=e[0].length,i=1/o,u=[];for(n=0;n<a;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];if(r)for(t=0;t<o;t++)e[t][n][1]/=r;else for(t=0;t<o;t++)e[t][n][1]=i}for(n=0;n<a;++n)u[n]=0;return u},zero:Ka});function Ya(e){return a.range(e.length)}function Ka(e){for(var t=-1,n=e[0].length,r=[];++t<n;)r[t]=0;return r}function Ga(e){for(var t,n=1,r=0,o=e[0][1],a=e.length;n<a;++n)(t=e[n][1])>o&&(r=n,o=t);return r}function Ja(e){return e.reduce(Qa,0)}function Qa(e,t){return e+t[1]}function Xa(e,t){return Za(e,Math.ceil(Math.log(t.length)/Math.LN2+1))}function Za(e,t){for(var n=-1,r=+e[0],o=(e[1]-r)/t,a=[];++n<=t;)a[n]=o*n+r;return a}function ei(e){return[a.min(e),a.max(e)]}function ti(e,t){return e.value-t.value}function ni(e,t){var n=e._pack_next;e._pack_next=t,t._pack_prev=e,t._pack_next=n,n._pack_prev=t}function ri(e,t){e._pack_next=t,t._pack_prev=e}function oi(e,t){var n=t.x-e.x,r=t.y-e.y,o=e.r+t.r;return.999*o*o>n*n+r*r}function ai(e){if((t=e.children)&&(l=t.length)){var t,n,r,o,a,i,u,l,s=1/0,c=-1/0,f=1/0,p=-1/0;if(t.forEach(ii),(n=t[0]).x=-n.r,n.y=0,b(n),l>1&&((r=t[1]).x=r.r,r.y=0,b(r),l>2))for(li(n,r,o=t[2]),b(o),ni(n,o),n._pack_prev=o,ni(o,r),r=n._pack_next,a=3;a<l;a++){li(n,r,o=t[a]);var d=0,h=1,y=1;for(i=r._pack_next;i!==r;i=i._pack_next,h++)if(oi(i,o)){d=1;break}if(1==d)for(u=n._pack_prev;u!==i._pack_prev&&!oi(u,o);u=u._pack_prev,y++);d?(h<y||h==y&&r.r<n.r?ri(n,r=i):ri(n=u,r),a--):(ni(n,o),r=o,b(o))}var v=(s+c)/2,m=(f+p)/2,g=0;for(a=0;a<l;a++)(o=t[a]).x-=v,o.y-=m,g=Math.max(g,o.r+Math.sqrt(o.x*o.x+o.y*o.y));e.r=g,t.forEach(ui)}function b(e){s=Math.min(e.x-e.r,s),c=Math.max(e.x+e.r,c),f=Math.min(e.y-e.r,f),p=Math.max(e.y+e.r,p)}}function ii(e){e._pack_next=e._pack_prev=e}function ui(e){delete e._pack_next,delete e._pack_prev}function li(e,t,n){var r=e.r+n.r,o=t.x-e.x,a=t.y-e.y;if(r&&(o||a)){var i=t.r+n.r,u=o*o+a*a,l=.5+((r*=r)-(i*=i))/(2*u),s=Math.sqrt(Math.max(0,2*i*(r+u)-(r-=u)*r-i*i))/(2*u);n.x=e.x+l*o+s*a,n.y=e.y+l*a-s*o}else n.x=e.x+r,n.y=e.y}function si(e,t){return e.parent==t.parent?1:2}function ci(e){var t=e.children;return t.length?t[0]:e.t}function fi(e){var t,n=e.children;return(t=n.length)?n[t-1]:e.t}function pi(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function di(e,t,n){return e.a.parent===t.parent?e.a:n}function hi(e){return{x:e.x,y:e.y,dx:e.dx,dy:e.dy}}function yi(e,t){var n=e.x+t[3],r=e.y+t[0],o=e.dx-t[1]-t[3],a=e.dy-t[0]-t[2];return o<0&&(n+=o/2,o=0),a<0&&(r+=a/2,a=0),{x:n,y:r,dx:o,dy:a}}function vi(e){var t=e[0],n=e[e.length-1];return t<n?[t,n]:[n,t]}function mi(e){return e.rangeExtent?e.rangeExtent():vi(e.range())}function gi(e,t,n,r){var o=n(e[0],e[1]),a=r(t[0],t[1]);return function(e){return a(o(e))}}function bi(e,t){var n,r=0,o=e.length-1,a=e[r],i=e[o];return i<a&&(n=r,r=o,o=n,n=a,a=i,i=n),e[r]=t.floor(a),e[o]=t.ceil(i),e}function wi(e){return e?{floor:function(t){return Math.floor(t/e)*e},ceil:function(t){return Math.ceil(t/e)*e}}:xi}a.layout.histogram=function(){var e=!0,t=Number,n=ei,r=Xa;function o(o,i){for(var u,l,s=[],c=o.map(t,this),f=n.call(this,c,i),p=r.call(this,f,c,i),d=(i=-1,c.length),h=p.length-1,y=e?1:1/d;++i<h;)(u=s[i]=[]).dx=p[i+1]-(u.x=p[i]),u.y=0;if(h>0)for(i=-1;++i<d;)(l=c[i])>=f[0]&&l<=f[1]&&((u=s[a.bisect(p,l,1,h)-1]).y+=y,u.push(o[i]));return s}return o.value=function(e){return arguments.length?(t=e,o):t},o.range=function(e){return arguments.length?(n=wt(e),o):n},o.bins=function(e){return arguments.length?(r="number"==typeof e?function(t){return Za(t,e)}:wt(e),o):r},o.frequency=function(t){return arguments.length?(e=!!t,o):e},o},a.layout.pack=function(){var e,t=a.layout.hierarchy().sort(ti),n=0,r=[1,1];function o(o,a){var i=t.call(this,o,a),u=i[0],l=r[0],s=r[1],c=null==e?Math.sqrt:"function"==typeof e?e:function(){return e};if(u.x=u.y=0,Ia(u,function(e){e.r=+c(e.value)}),Ia(u,ai),n){var f=n*(e?1:Math.max(2*u.r/l,2*u.r/s))/2;Ia(u,function(e){e.r+=f}),Ia(u,ai),Ia(u,function(e){e.r-=f})}return function e(t,n,r,o){var a=t.children;t.x=n+=o*t.x;t.y=r+=o*t.y;t.r*=o;if(a)for(var i=-1,u=a.length;++i<u;)e(a[i],n,r,o)}(u,l/2,s/2,e?1:1/Math.max(2*u.r/l,2*u.r/s)),i}return o.size=function(e){return arguments.length?(r=e,o):r},o.radius=function(t){return arguments.length?(e=null==t||"function"==typeof t?t:+t,o):e},o.padding=function(e){return arguments.length?(n=+e,o):n},Ra(o,t)},a.layout.tree=function(){var e=a.layout.hierarchy().sort(null).value(null),t=si,n=[1,1],r=null;function o(o,a){var s=e.call(this,o,a),c=s[0],f=function(e){var t,n={A:null,children:[e]},r=[n];for(;null!=(t=r.pop());)for(var o,a=t.children,i=0,u=a.length;i<u;++i)r.push((a[i]=o={_:a[i],parent:t,children:(o=a[i].children)&&o.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:i}).a=o);return n.children[0]}(c);if(Ia(f,i),f.parent.m=-f.z,Da(f,u),r)Da(c,l);else{var p=c,d=c,h=c;Da(c,function(e){e.x<p.x&&(p=e),e.x>d.x&&(d=e),e.depth>h.depth&&(h=e)});var y=t(p,d)/2-p.x,v=n[0]/(d.x+t(d,p)/2+y),m=n[1]/(h.depth||1);Da(c,function(e){e.x=(e.x+y)*v,e.y=e.depth*m})}return s}function i(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n.length){!function(e){var t,n=0,r=0,o=e.children,a=o.length;for(;--a>=0;)(t=o[a]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(e);var a=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-a):e.z=a}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,a=e,i=e,u=n,l=a.parent.children[0],s=a.m,c=i.m,f=u.m,p=l.m;u=fi(u),a=ci(a),u&&a;)l=ci(l),(i=fi(i)).a=e,(o=u.z+f-a.z-s+t(u._,a._))>0&&(pi(di(u,e,r),e,o),s+=o,c+=o),f+=u.m,s+=a.m,p+=l.m,c+=i.m;u&&!fi(i)&&(i.t=u,i.m+=f-c),a&&!ci(l)&&(l.t=a,l.m+=s-p,r=e)}return r}(e,o,e.parent.A||r[0])}function u(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function l(e){e.x*=n[0],e.y=e.depth*n[1]}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e)?l:null,o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null==(n=e)?null:l,o):r?n:null},Ra(o,e)},a.layout.cluster=function(){var e=a.layout.hierarchy().sort(null).value(null),t=si,n=[1,1],r=!1;function o(o,i){var u,l=e.call(this,o,i),s=l[0],c=0;Ia(s,function(e){var n=e.children;n&&n.length?(e.x=function(e){return e.reduce(function(e,t){return e+t.x},0)/e.length}(n),e.y=function(e){return 1+a.max(e,function(e){return e.y})}(n)):(e.x=u?c+=t(e,u):0,e.y=0,u=e)});var f=function e(t){var n=t.children;return n&&n.length?e(n[0]):t}(s),p=function e(t){var n,r=t.children;return r&&(n=r.length)?e(r[n-1]):t}(s),d=f.x-t(f,p)/2,h=p.x+t(p,f)/2;return Ia(s,r?function(e){e.x=(e.x-s.x)*n[0],e.y=(s.y-e.y)*n[1]}:function(e){e.x=(e.x-d)/(h-d)*n[0],e.y=(1-(s.y?e.y/s.y:1))*n[1]}),l}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e),o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null!=(n=e),o):r?n:null},Ra(o,e)},a.layout.treemap=function(){var e,t=a.layout.hierarchy(),n=Math.round,r=[1,1],o=null,i=hi,u=!1,l="squarify",s=.5*(1+Math.sqrt(5));function c(e,t){for(var n,r,o=-1,a=e.length;++o<a;)r=(n=e[o]).value*(t<0?0:t),n.area=isNaN(r)||r<=0?0:r}function f(e){var t=e.children;if(t&&t.length){var n,r,o,a=i(e),u=[],s=t.slice(),p=1/0,y="slice"===l?a.dx:"dice"===l?a.dy:"slice-dice"===l?1&e.depth?a.dy:a.dx:Math.min(a.dx,a.dy);for(c(s,a.dx*a.dy/e.value),u.area=0;(o=s.length)>0;)u.push(n=s[o-1]),u.area+=n.area,"squarify"!==l||(r=d(u,y))<=p?(s.pop(),p=r):(u.area-=u.pop().area,h(u,y,a,!1),y=Math.min(a.dx,a.dy),u.length=u.area=0,p=1/0);u.length&&(h(u,y,a,!0),u.length=u.area=0),t.forEach(f)}}function p(e){var t=e.children;if(t&&t.length){var n,r=i(e),o=t.slice(),a=[];for(c(o,r.dx*r.dy/e.value),a.area=0;n=o.pop();)a.push(n),a.area+=n.area,null!=n.z&&(h(a,n.z?r.dx:r.dy,r,!o.length),a.length=a.area=0);t.forEach(p)}}function d(e,t){for(var n,r=e.area,o=0,a=1/0,i=-1,u=e.length;++i<u;)(n=e[i].area)&&(n<a&&(a=n),n>o&&(o=n));return t*=t,(r*=r)?Math.max(t*o*s/r,r/(t*a*s)):1/0}function h(e,t,r,o){var a,i=-1,u=e.length,l=r.x,s=r.y,c=t?n(e.area/t):0;if(t==r.dx){for((o||c>r.dy)&&(c=r.dy);++i<u;)(a=e[i]).x=l,a.y=s,a.dy=c,l+=a.dx=Math.min(r.x+r.dx-l,c?n(a.area/c):0);a.z=!0,a.dx+=r.x+r.dx-l,r.y+=c,r.dy-=c}else{for((o||c>r.dx)&&(c=r.dx);++i<u;)(a=e[i]).x=l,a.y=s,a.dx=c,s+=a.dy=Math.min(r.y+r.dy-s,c?n(a.area/c):0);a.z=!1,a.dy+=r.y+r.dy-s,r.x+=c,r.dx-=c}}function y(n){var o=e||t(n),a=o[0];return a.x=a.y=0,a.value?(a.dx=r[0],a.dy=r[1]):a.dx=a.dy=0,e&&t.revalue(a),c([a],a.dx*a.dy/a.value),(e?p:f)(a),u&&(e=o),o}return y.size=function(e){return arguments.length?(r=e,y):r},y.padding=function(e){if(!arguments.length)return o;function t(t){return yi(t,e)}var n;return i=null==(o=e)?hi:"function"==(n=typeof e)?function(t){var n=e.call(y,t,t.depth);return null==n?hi(t):yi(t,"number"==typeof n?[n,n,n,n]:n)}:"number"===n?(e=[e,e,e,e],t):t,y},y.round=function(e){return arguments.length?(n=e?Math.round:Number,y):n!=Number},y.sticky=function(t){return arguments.length?(u=t,e=null,y):u},y.ratio=function(e){return arguments.length?(s=e,y):s},y.mode=function(e){return arguments.length?(l=e+"",y):l},Ra(y,t)},a.random={normal:function(e,t){var n=arguments.length;return n<2&&(t=1),n<1&&(e=0),function(){var n,r,o;do{o=(n=2*Math.random()-1)*n+(r=2*Math.random()-1)*r}while(!o||o>1);return e+t*n*Math.sqrt(-2*Math.log(o)/o)}},logNormal:function(){var e=a.random.normal.apply(a,arguments);return function(){return Math.exp(e())}},bates:function(e){var t=a.random.irwinHall(e);return function(){return t()/e}},irwinHall:function(e){return function(){for(var t=0,n=0;n<e;n++)t+=Math.random();return t}}},a.scale={};var xi={floor:D,ceil:D};function _i(e,t,n,r){var o=[],i=[],u=0,l=Math.min(e.length,t.length)-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++u<=l;)o.push(n(e[u-1],e[u])),i.push(r(t[u-1],t[u]));return function(t){var n=a.bisect(e,t,1,l)-1;return i[n](o[n](t))}}function Ei(e,t){return a.rebind(e,t,"range","rangeRound","interpolate","clamp")}function ki(e,t){return bi(e,wi(Si(e,t)[2])),bi(e,wi(Si(e,t)[2])),e}function Si(e,t){null==t&&(t=10);var n=vi(e),r=n[1]-n[0],o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),a=t/r*o;return a<=.15?o*=10:a<=.35?o*=5:a<=.75&&(o*=2),n[0]=Math.ceil(n[0]/o)*o,n[1]=Math.floor(n[1]/o)*o+.5*o,n[2]=o,n}function Ci(e,t){return a.range.apply(a,Si(e,t))}function Oi(e,t,n){var r=Si(e,t);if(n){var o=Dt.exec(n);if(o.shift(),"s"===o[8]){var i=a.formatPrefix(Math.max(_(r[0]),_(r[1])));return o[7]||(o[7]="."+Ti(i.scale(r[2]))),o[8]="f",n=a.format(o.join("")),function(e){return n(i.scale(e))+i.symbol}}o[7]||(o[7]="."+function(e,t){var n=Ti(t[2]);return e in Mi?Math.abs(n-Ti(Math.max(_(t[0]),_(t[1]))))+ +("e"!==e):n-2*("%"===e)}(o[8],r)),n=o.join("")}else n=",."+Ti(r[2])+"f";return a.format(n)}a.scale.linear=function(){return function e(t,n,r,o){var a,i;function u(){var e=Math.min(t.length,n.length)>2?_i:gi,u=o?ka:Ea;return a=e(t,n,u,r),i=e(n,t,u,na),l}function l(e){return a(e)}l.invert=function(e){return i(e)};l.domain=function(e){return arguments.length?(t=e.map(Number),u()):t};l.range=function(e){return arguments.length?(n=e,u()):n};l.rangeRound=function(e){return l.range(e).interpolate(va)};l.clamp=function(e){return arguments.length?(o=e,u()):o};l.interpolate=function(e){return arguments.length?(r=e,u()):r};l.ticks=function(e){return Ci(t,e)};l.tickFormat=function(e,n){return Oi(t,e,n)};l.nice=function(e){return ki(t,e),u()};l.copy=function(){return e(t,n,r,o)};return u()}([0,1],[0,1],na,!1)};var Mi={s:1,g:1,p:1,r:1,e:1};function Ti(e){return-Math.floor(Math.log(e)/Math.LN10+.01)}a.scale.log=function(){return function e(t,n,r,o){function i(e){return(r?Math.log(e<0?0:e):-Math.log(e>0?0:-e))/Math.log(n)}function u(e){return r?Math.pow(n,e):-Math.pow(n,-e)}function l(e){return t(i(e))}l.invert=function(e){return u(t.invert(e))};l.domain=function(e){return arguments.length?(r=e[0]>=0,t.domain((o=e.map(Number)).map(i)),l):o};l.base=function(e){return arguments.length?(n=+e,t.domain(o.map(i)),l):n};l.nice=function(){var e=bi(o.map(i),r?Math:Pi);return t.domain(e),o=e.map(u),l};l.ticks=function(){var e=vi(o),t=[],a=e[0],l=e[1],s=Math.floor(i(a)),c=Math.ceil(i(l)),f=n%1?2:n;if(isFinite(c-s)){if(r){for(;s<c;s++)for(var p=1;p<f;p++)t.push(u(s)*p);t.push(u(s))}else for(t.push(u(s));s++<c;)for(var p=f-1;p>0;p--)t.push(u(s)*p);for(s=0;t[s]<a;s++);for(c=t.length;t[c-1]>l;c--);t=t.slice(s,c)}return t};l.tickFormat=function(e,t){if(!arguments.length)return ji;arguments.length<2?t=ji:"function"!=typeof t&&(t=a.format(t));var r=Math.max(1,n*e/l.ticks().length);return function(e){var o=e/u(Math.round(i(e)));return o*n<n-.5&&(o*=n),o<=r?t(e):""}};l.copy=function(){return e(t.copy(),n,r,o)};return Ei(l,t)}(a.scale.linear().domain([0,1]),10,!0,[1,10])};var ji=a.format(".0e"),Pi={floor:function(e){return-Math.ceil(-e)},ceil:function(e){return-Math.floor(-e)}};function Ai(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}a.scale.pow=function(){return function e(t,n,r){var o=Ai(n),a=Ai(1/n);function i(e){return t(o(e))}i.invert=function(e){return a(t.invert(e))};i.domain=function(e){return arguments.length?(t.domain((r=e.map(Number)).map(o)),i):r};i.ticks=function(e){return Ci(r,e)};i.tickFormat=function(e,t){return Oi(r,e,t)};i.nice=function(e){return i.domain(ki(r,e))};i.exponent=function(e){return arguments.length?(o=Ai(n=e),a=Ai(1/n),t.domain(r.map(o)),i):n};i.copy=function(){return e(t.copy(),n,r)};return Ei(i,t)}(a.scale.linear(),1,[0,1])},a.scale.sqrt=function(){return a.scale.pow().exponent(.5)},a.scale.ordinal=function(){return function e(t,n){var r,o,i;function u(e){return o[((r.get(e)||("range"===n.t?r.set(e,t.push(e)):NaN))-1)%o.length]}function l(e,n){return a.range(t.length).map(function(t){return e+n*t})}u.domain=function(e){if(!arguments.length)return t;t=[],r=new k;for(var o,a=-1,i=e.length;++a<i;)r.has(o=e[a])||r.set(o,t.push(o));return u[n.t].apply(u,n.a)};u.range=function(e){return arguments.length?(o=e,i=0,n={t:"range",a:arguments},u):o};u.rangePoints=function(e,r){arguments.length<2&&(r=0);var a=e[0],s=e[1],c=t.length<2?(a=(a+s)/2,0):(s-a)/(t.length-1+r);return o=l(a+c*r/2,c),i=0,n={t:"rangePoints",a:arguments},u};u.rangeRoundPoints=function(e,r){arguments.length<2&&(r=0);var a=e[0],s=e[1],c=t.length<2?(a=s=Math.round((a+s)/2),0):(s-a)/(t.length-1+r)|0;return o=l(a+Math.round(c*r/2+(s-a-(t.length-1+r)*c)/2),c),i=0,n={t:"rangeRoundPoints",a:arguments},u};u.rangeBands=function(e,r,a){arguments.length<2&&(r=0),arguments.length<3&&(a=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=(f-c)/(t.length-r+2*a);return o=l(c+p*a,p),s&&o.reverse(),i=p*(1-r),n={t:"rangeBands",a:arguments},u};u.rangeRoundBands=function(e,r,a){arguments.length<2&&(r=0),arguments.length<3&&(a=r);var s=e[1]<e[0],c=e[s-0],f=e[1-s],p=Math.floor((f-c)/(t.length-r+2*a));return o=l(c+Math.round((f-c-(t.length-r)*p)/2),p),s&&o.reverse(),i=Math.round(p*(1-r)),n={t:"rangeRoundBands",a:arguments},u};u.rangeBand=function(){return i};u.rangeExtent=function(){return vi(n.a[0])};u.copy=function(){return e(t,n)};return u.domain(t)}([],{t:"range",a:[[]]})},a.scale.category10=function(){return a.scale.ordinal().range(Ni)},a.scale.category20=function(){return a.scale.ordinal().range(Ri)},a.scale.category20b=function(){return a.scale.ordinal().range(Di)},a.scale.category20c=function(){return a.scale.ordinal().range(Ii)};var Ni=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ft),Ri=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ft),Di=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ft),Ii=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ft);function Li(){return 0}a.scale.quantile=function(){return function e(t,n){var r;function o(){var e=0,o=n.length;for(r=[];++e<o;)r[e-1]=a.quantile(t,e/o);return i}function i(e){if(!isNaN(e=+e))return n[a.bisect(r,e)]}i.domain=function(e){return arguments.length?(t=e.map(m).filter(g).sort(v),o()):t};i.range=function(e){return arguments.length?(n=e,o()):n};i.quantiles=function(){return r};i.invertExtent=function(e){return(e=n.indexOf(e))<0?[NaN,NaN]:[e>0?r[e-1]:t[0],e<r.length?r[e]:t[t.length-1]]};i.copy=function(){return e(t,n)};return o()}([],[])},a.scale.quantize=function(){return function e(t,n,r){var o,a;function i(e){return r[Math.max(0,Math.min(a,Math.floor(o*(e-t))))]}function u(){return o=r.length/(n-t),a=r.length-1,i}i.domain=function(e){return arguments.length?(t=+e[0],n=+e[e.length-1],u()):[t,n]};i.range=function(e){return arguments.length?(r=e,u()):r};i.invertExtent=function(e){return[e=(e=r.indexOf(e))<0?NaN:e/o+t,e+1/o]};i.copy=function(){return e(t,n,r)};return u()}(0,1,[0,1])},a.scale.threshold=function(){return function e(t,n){function r(e){if(e<=e)return n[a.bisect(t,e)]}r.domain=function(e){return arguments.length?(t=e,r):t};r.range=function(e){return arguments.length?(n=e,r):n};r.invertExtent=function(e){return e=n.indexOf(e),[t[e-1],t[e]]};r.copy=function(){return e(t,n)};return r}([.5],[0,1])},a.scale.identity=function(){return function e(t){function n(e){return+e}n.invert=n;n.domain=n.range=function(e){return arguments.length?(t=e.map(n),n):t};n.ticks=function(e){return Ci(t,e)};n.tickFormat=function(e,n){return Oi(t,e,n)};n.copy=function(){return e(t)};return n}([0,1])},a.svg={},a.svg.arc=function(){var e=Fi,t=Ui,n=Li,r=zi,o=Bi,a=qi,i=Vi;function u(){var u=Math.max(0,+e.apply(this,arguments)),s=Math.max(0,+t.apply(this,arguments)),c=o.apply(this,arguments)-Ae,f=a.apply(this,arguments)-Ae,p=Math.abs(f-c),d=c>f?0:1;if(s<u&&(h=s,s=u,u=h),p>=Pe)return l(s,d)+(u?l(u,1-d):"")+"Z";var h,y,v,m,g,b,w,x,_,E,k,S,C=0,O=0,M=[];if((m=(+i.apply(this,arguments)||0)/2)&&(v=r===zi?Math.sqrt(u*u+s*s):+r.apply(this,arguments),d||(O*=-1),s&&(O=ze(v/s*Math.sin(m))),u&&(C=ze(v/u*Math.sin(m)))),s){g=s*Math.cos(c+O),b=s*Math.sin(c+O),w=s*Math.cos(f-O),x=s*Math.sin(f-O);var T=Math.abs(f-c-2*O)<=Te?0:1;if(O&&Wi(g,b,w,x)===d^T){var j=(c+f)/2;g=s*Math.cos(j),b=s*Math.sin(j),w=x=null}}else g=b=0;if(u){_=u*Math.cos(f-C),E=u*Math.sin(f-C),k=u*Math.cos(c+C),S=u*Math.sin(c+C);var P=Math.abs(c-f+2*C)<=Te?0:1;if(C&&Wi(_,E,k,S)===1-d^P){var A=(c+f)/2;_=u*Math.cos(A),E=u*Math.sin(A),k=S=null}}else _=E=0;if(p>Oe&&(h=Math.min(Math.abs(s-u)/2,+n.apply(this,arguments)))>.001){y=u<s^d?0:1;var N=h,R=h;if(p<Te){var D=null==k?[_,E]:null==w?[g,b]:ho([g,b],[k,S],[w,x],[_,E]),I=g-D[0],L=b-D[1],z=w-D[0],F=x-D[1],U=1/Math.sin(Math.acos((I*z+L*F)/(Math.sqrt(I*I+L*L)*Math.sqrt(z*z+F*F)))/2),B=Math.sqrt(D[0]*D[0]+D[1]*D[1]);R=Math.min(h,(u-B)/(U-1)),N=Math.min(h,(s-B)/(U+1))}if(null!=w){var q=Hi(null==k?[_,E]:[k,S],[g,b],s,N,d),V=Hi([w,x],[_,E],s,N,d);h===N?M.push("M",q[0],"A",N,",",N," 0 0,",y," ",q[1],"A",s,",",s," 0 ",1-d^Wi(q[1][0],q[1][1],V[1][0],V[1][1]),",",d," ",V[1],"A",N,",",N," 0 0,",y," ",V[0]):M.push("M",q[0],"A",N,",",N," 0 1,",y," ",V[0])}else M.push("M",g,",",b);if(null!=k){var W=Hi([g,b],[k,S],u,-R,d),H=Hi([_,E],null==w?[g,b]:[w,x],u,-R,d);h===R?M.push("L",H[0],"A",R,",",R," 0 0,",y," ",H[1],"A",u,",",u," 0 ",d^Wi(H[1][0],H[1][1],W[1][0],W[1][1]),",",1-d," ",W[1],"A",R,",",R," 0 0,",y," ",W[0]):M.push("L",H[0],"A",R,",",R," 0 0,",y," ",W[0])}else M.push("L",_,",",E)}else M.push("M",g,",",b),null!=w&&M.push("A",s,",",s," 0 ",T,",",d," ",w,",",x),M.push("L",_,",",E),null!=k&&M.push("A",u,",",u," 0 ",P,",",1-d," ",k,",",S);return M.push("Z"),M.join("")}function l(e,t){return"M0,"+e+"A"+e+","+e+" 0 1,"+t+" 0,"+-e+"A"+e+","+e+" 0 1,"+t+" 0,"+e}return u.innerRadius=function(t){return arguments.length?(e=wt(t),u):e},u.outerRadius=function(e){return arguments.length?(t=wt(e),u):t},u.cornerRadius=function(e){return arguments.length?(n=wt(e),u):n},u.padRadius=function(e){return arguments.length?(r=e==zi?zi:wt(e),u):r},u.startAngle=function(e){return arguments.length?(o=wt(e),u):o},u.endAngle=function(e){return arguments.length?(a=wt(e),u):a},u.padAngle=function(e){return arguments.length?(i=wt(e),u):i},u.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +a.apply(this,arguments))/2-Ae;return[Math.cos(r)*n,Math.sin(r)*n]},u};var zi="auto";function Fi(e){return e.innerRadius}function Ui(e){return e.outerRadius}function Bi(e){return e.startAngle}function qi(e){return e.endAngle}function Vi(e){return e&&e.padAngle}function Wi(e,t,n,r){return(e-n)*t-(t-r)*e>0?0:1}function Hi(e,t,n,r,o){var a=e[0]-t[0],i=e[1]-t[1],u=(o?r:-r)/Math.sqrt(a*a+i*i),l=u*i,s=-u*a,c=e[0]+l,f=e[1]+s,p=t[0]+l,d=t[1]+s,h=(c+p)/2,y=(f+d)/2,v=p-c,m=d-f,g=v*v+m*m,b=n-r,w=c*d-p*f,x=(m<0?-1:1)*Math.sqrt(Math.max(0,b*b*g-w*w)),_=(w*m-v*x)/g,E=(-w*v-m*x)/g,k=(w*m+v*x)/g,S=(-w*v+m*x)/g,C=_-h,O=E-y,M=k-h,T=S-y;return C*C+O*O>M*M+T*T&&(_=k,E=S),[[_-l,E-s],[_*n/b,E*n/b]]}function $i(e){var t=uo,n=lo,r=Zn,o=Ki,a=o.key,i=.7;function u(a){var u,l=[],s=[],c=-1,f=a.length,p=wt(t),d=wt(n);function h(){l.push("M",o(e(s),i))}for(;++c<f;)r.call(this,u=a[c],c)?s.push([+p.call(this,u,c),+d.call(this,u,c)]):s.length&&(h(),s=[]);return s.length&&h(),l.length?l.join(""):null}return u.x=function(e){return arguments.length?(t=e,u):t},u.y=function(e){return arguments.length?(n=e,u):n},u.defined=function(e){return arguments.length?(r=e,u):r},u.interpolate=function(e){return arguments.length?(a="function"==typeof e?o=e:(o=Yi.get(e)||Ki).key,u):a},u.tension=function(e){return arguments.length?(i=e,u):i},u}a.svg.line=function(){return $i(D)};var Yi=a.map({linear:Ki,"linear-closed":Gi,step:function(e){var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];for(;++t<n;)o.push("H",(r[0]+(r=e[t])[0])/2,"V",r[1]);n>1&&o.push("H",r[0]);return o.join("")},"step-before":Ji,"step-after":Qi,basis:eu,"basis-open":function(e){if(e.length<4)return Ki(e);var t,n=[],r=-1,o=e.length,a=[0],i=[0];for(;++r<3;)t=e[r],a.push(t[0]),i.push(t[1]);n.push(tu(ou,a)+","+tu(ou,i)),--r;for(;++r<o;)t=e[r],a.shift(),a.push(t[0]),i.shift(),i.push(t[1]),au(n,a,i);return n.join("")},"basis-closed":function(e){var t,n,r=-1,o=e.length,a=o+4,i=[],u=[];for(;++r<4;)n=e[r%o],i.push(n[0]),u.push(n[1]);t=[tu(ou,i),",",tu(ou,u)],--r;for(;++r<a;)n=e[r%o],i.shift(),i.push(n[0]),u.shift(),u.push(n[1]),au(t,i,u);return t.join("")},bundle:function(e,t){var n=e.length-1;if(n)for(var r,o,a=e[0][0],i=e[0][1],u=e[n][0]-a,l=e[n][1]-i,s=-1;++s<=n;)r=e[s],o=s/n,r[0]=t*r[0]+(1-t)*(a+o*u),r[1]=t*r[1]+(1-t)*(i+o*l);return eu(e)},cardinal:function(e,t){return e.length<3?Ki(e):e[0]+Xi(e,Zi(e,t))},"cardinal-open":function(e,t){return e.length<4?Ki(e):e[1]+Xi(e.slice(1,-1),Zi(e,t))},"cardinal-closed":function(e,t){return e.length<3?Gi(e):e[0]+Xi((e.push(e[0]),e),Zi([e[e.length-2]].concat(e,[e[1]]),t))},monotone:function(e){return e.length<3?Ki(e):e[0]+Xi(e,function(e){var t,n,r,o,a=[],i=function(e){var t=0,n=e.length-1,r=[],o=e[0],a=e[1],i=r[0]=iu(o,a);for(;++t<n;)r[t]=(i+(i=iu(o=a,a=e[t+1])))/2;return r[t]=i,r}(e),u=-1,l=e.length-1;for(;++u<l;)t=iu(e[u],e[u+1]),_(t)<Oe?i[u]=i[u+1]=0:(n=i[u]/t,r=i[u+1]/t,(o=n*n+r*r)>9&&(o=3*t/Math.sqrt(o),i[u]=o*n,i[u+1]=o*r));u=-1;for(;++u<=l;)o=(e[Math.min(l,u+1)][0]-e[Math.max(0,u-1)][0])/(6*(1+i[u]*i[u])),a.push([o||0,i[u]*o||0]);return a}(e))}});function Ki(e){return e.length>1?e.join("L"):e+"Z"}function Gi(e){return e.join("L")+"Z"}function Ji(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("V",(r=e[t])[1],"H",r[0]);return o.join("")}function Qi(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("H",(r=e[t])[0],"V",r[1]);return o.join("")}function Xi(e,t){if(t.length<1||e.length!=t.length&&e.length!=t.length+2)return Ki(e);var n=e.length!=t.length,r="",o=e[0],a=e[1],i=t[0],u=i,l=1;if(n&&(r+="Q"+(a[0]-2*i[0]/3)+","+(a[1]-2*i[1]/3)+","+a[0]+","+a[1],o=e[1],l=2),t.length>1){u=t[1],a=e[l],l++,r+="C"+(o[0]+i[0])+","+(o[1]+i[1])+","+(a[0]-u[0])+","+(a[1]-u[1])+","+a[0]+","+a[1];for(var s=2;s<t.length;s++,l++)a=e[l],u=t[s],r+="S"+(a[0]-u[0])+","+(a[1]-u[1])+","+a[0]+","+a[1]}if(n){var c=e[l];r+="Q"+(a[0]+2*u[0]/3)+","+(a[1]+2*u[1]/3)+","+c[0]+","+c[1]}return r}function Zi(e,t){for(var n,r=[],o=(1-t)/2,a=e[0],i=e[1],u=1,l=e.length;++u<l;)n=a,a=i,i=e[u],r.push([o*(i[0]-n[0]),o*(i[1]-n[1])]);return r}function eu(e){if(e.length<3)return Ki(e);var t=1,n=e.length,r=e[0],o=r[0],a=r[1],i=[o,o,o,(r=e[1])[0]],u=[a,a,a,r[1]],l=[o,",",a,"L",tu(ou,i),",",tu(ou,u)];for(e.push(e[n-1]);++t<=n;)r=e[t],i.shift(),i.push(r[0]),u.shift(),u.push(r[1]),au(l,i,u);return e.pop(),l.push("L",r),l.join("")}function tu(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}Yi.forEach(function(e,t){t.key=e,t.closed=/-closed$/.test(e)});var nu=[0,2/3,1/3,0],ru=[0,1/3,2/3,0],ou=[0,1/6,2/3,1/6];function au(e,t,n){e.push("C",tu(nu,t),",",tu(nu,n),",",tu(ru,t),",",tu(ru,n),",",tu(ou,t),",",tu(ou,n))}function iu(e,t){return(t[1]-e[1])/(t[0]-e[0])}function uu(e){for(var t,n,r,o=-1,a=e.length;++o<a;)n=(t=e[o])[0],r=t[1]-Ae,t[0]=n*Math.cos(r),t[1]=n*Math.sin(r);return e}function lu(e){var t=uo,n=uo,r=0,o=lo,a=Zn,i=Ki,u=i.key,l=i,s="L",c=.7;function f(u){var f,p,d,h=[],y=[],v=[],m=-1,g=u.length,b=wt(t),w=wt(r),x=t===n?function(){return p}:wt(n),_=r===o?function(){return d}:wt(o);function E(){h.push("M",i(e(v),c),s,l(e(y.reverse()),c),"Z")}for(;++m<g;)a.call(this,f=u[m],m)?(y.push([p=+b.call(this,f,m),d=+w.call(this,f,m)]),v.push([+x.call(this,f,m),+_.call(this,f,m)])):y.length&&(E(),y=[],v=[]);return y.length&&E(),h.length?h.join(""):null}return f.x=function(e){return arguments.length?(t=n=e,f):n},f.x0=function(e){return arguments.length?(t=e,f):t},f.x1=function(e){return arguments.length?(n=e,f):n},f.y=function(e){return arguments.length?(r=o=e,f):o},f.y0=function(e){return arguments.length?(r=e,f):r},f.y1=function(e){return arguments.length?(o=e,f):o},f.defined=function(e){return arguments.length?(a=e,f):a},f.interpolate=function(e){return arguments.length?(u="function"==typeof e?i=e:(i=Yi.get(e)||Ki).key,l=i.reverse||i,s=i.closed?"M":"L",f):u},f.tension=function(e){return arguments.length?(c=e,f):c},f}function su(e){return e.radius}function cu(e){return[e.x,e.y]}function fu(){return 64}function pu(){return"circle"}function du(e){var t=Math.sqrt(e/Te);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}a.svg.line.radial=function(){var e=$i(uu);return e.radius=e.x,delete e.x,e.angle=e.y,delete e.y,e},Ji.reverse=Qi,Qi.reverse=Ji,a.svg.area=function(){return lu(D)},a.svg.area.radial=function(){var e=lu(uu);return e.radius=e.x,delete e.x,e.innerRadius=e.x0,delete e.x0,e.outerRadius=e.x1,delete e.x1,e.angle=e.y,delete e.y,e.startAngle=e.y0,delete e.y0,e.endAngle=e.y1,delete e.y1,e},a.svg.chord=function(){var e=Yr,t=Kr,n=su,r=Bi,o=qi;function a(n,r){var o,a,s=i(this,e,n,r),c=i(this,t,n,r);return"M"+s.p0+u(s.r,s.p1,s.a1-s.a0)+(a=c,(o=s).a0==a.a0&&o.a1==a.a1?l(s.r,s.p1,s.r,s.p0):l(s.r,s.p1,c.r,c.p0)+u(c.r,c.p1,c.a1-c.a0)+l(c.r,c.p1,s.r,s.p0))+"Z"}function i(e,t,a,i){var u=t.call(e,a,i),l=n.call(e,u,i),s=r.call(e,u,i)-Ae,c=o.call(e,u,i)-Ae;return{r:l,a0:s,a1:c,p0:[l*Math.cos(s),l*Math.sin(s)],p1:[l*Math.cos(c),l*Math.sin(c)]}}function u(e,t,n){return"A"+e+","+e+" 0 "+ +(n>Te)+",1 "+t}function l(e,t,n,r){return"Q 0,0 "+r}return a.radius=function(e){return arguments.length?(n=wt(e),a):n},a.source=function(t){return arguments.length?(e=wt(t),a):e},a.target=function(e){return arguments.length?(t=wt(e),a):t},a.startAngle=function(e){return arguments.length?(r=wt(e),a):r},a.endAngle=function(e){return arguments.length?(o=wt(e),a):o},a},a.svg.diagonal=function(){var e=Yr,t=Kr,n=cu;function r(r,o){var a=e.call(this,r,o),i=t.call(this,r,o),u=(a.y+i.y)/2,l=[a,{x:a.x,y:u},{x:i.x,y:u},i];return"M"+(l=l.map(n))[0]+"C"+l[1]+" "+l[2]+" "+l[3]}return r.source=function(t){return arguments.length?(e=wt(t),r):e},r.target=function(e){return arguments.length?(t=wt(e),r):t},r.projection=function(e){return arguments.length?(n=e,r):n},r},a.svg.diagonal.radial=function(){var e=a.svg.diagonal(),t=cu,n=e.projection;return e.projection=function(e){return arguments.length?n(function(e){return function(){var t=e.apply(this,arguments),n=t[0],r=t[1]-Ae;return[n*Math.cos(r),n*Math.sin(r)]}}(t=e)):t},e},a.svg.symbol=function(){var e=pu,t=fu;function n(n,r){return(hu.get(e.call(this,n,r))||du)(t.call(this,n,r))}return n.type=function(t){return arguments.length?(e=wt(t),n):e},n.size=function(e){return arguments.length?(t=wt(e),n):t},n};var hu=a.map({circle:du,cross:function(e){var t=Math.sqrt(e/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(e){var t=Math.sqrt(e/(2*vu)),n=t*vu;return"M0,"+-t+"L"+n+",0 0,"+t+" "+-n+",0Z"},square:function(e){var t=Math.sqrt(e)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(e){var t=Math.sqrt(e/yu),n=t*yu/2;return"M0,"+n+"L"+t+","+-n+" "+-t+","+-n+"Z"},"triangle-up":function(e){var t=Math.sqrt(e/yu),n=t*yu/2;return"M0,"+-n+"L"+t+","+n+" "+-t+","+n+"Z"}});a.svg.symbolTypes=hu.keys();var yu=Math.sqrt(3),vu=Math.tan(30*Ne);Q.transition=function(e){for(var t,n,r=wu||++Eu,o=Cu(e),a=[],i=xu||{time:Date.now(),ease:fa,delay:0,duration:250},u=-1,l=this.length;++u<l;){a.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(n=s[c])&&Ou(n,c,o,r,i),t.push(n)}return bu(a,o,r)},Q.interrupt=function(e){return this.each(null==e?mu:gu(Cu(e)))};var mu=gu(Cu());function gu(e){return function(){var t,n,r;(t=this[e])&&(r=t[n=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[n]:delete this[e],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function bu(e,t,n){return $(e,_u),e.namespace=t,e.id=n,e}var wu,xu,_u=[],Eu=0;function ku(e,t,n,r){var o=e.id,a=e.namespace;return he(e,"function"==typeof n?function(e,i,u){e[a][o].tween.set(t,r(n.call(e,e.__data__,i,u)))}:(n=r(n),function(e){e[a][o].tween.set(t,n)}))}function Su(e){return null==e&&(e=""),function(){this.textContent=e}}function Cu(e){return null==e?"__transition__":"__transition_"+e+"__"}function Ou(e,t,n,r,o){var a,i,u,l,s,c=e[n]||(e[n]={active:0,count:0}),f=c[r];function p(n){var o=c.active,p=c[o];for(var h in p&&(p.timer.c=null,p.timer.t=NaN,--c.count,delete c[o],p.event&&p.event.interrupt.call(e,e.__data__,p.index)),c)if(+h<r){var y=c[h];y.timer.c=null,y.timer.t=NaN,--c.count,delete c[h]}i.c=d,Mt(function(){return i.c&&d(n||1)&&(i.c=null,i.t=NaN),1},0,a),c.active=r,f.event&&f.event.start.call(e,e.__data__,t),s=[],f.tween.forEach(function(n,r){(r=r.call(e,e.__data__,t))&&s.push(r)}),l=f.ease,u=f.duration}function d(o){for(var a=o/u,i=l(a),p=s.length;p>0;)s[--p].call(e,i);if(a>=1)return f.event&&f.event.end.call(e,e.__data__,t),--c.count?delete c[r]:delete e[n],1}f||(a=o.time,i=Mt(function(e){var t=f.delay;if(i.t=t+a,t<=e)return p(e-t);i.c=p},0,a),f=c[r]={tween:new k,time:a,timer:i,delay:o.delay,duration:o.duration,ease:o.ease,index:t},o=null,++c.count)}_u.call=Q.call,_u.empty=Q.empty,_u.node=Q.node,_u.size=Q.size,a.transition=function(e,t){return e&&e.transition?wu?e.transition(t):e:a.selection().transition(e)},a.transition.prototype=_u,_u.select=function(e){var t,n,r,o=this.id,a=this.namespace,i=[];e=X(e);for(var u=-1,l=this.length;++u<l;){i.push(t=[]);for(var s=this[u],c=-1,f=s.length;++c<f;)(r=s[c])&&(n=e.call(r,r.__data__,c,u))?("__data__"in r&&(n.__data__=r.__data__),Ou(n,c,a,o,r[a][o]),t.push(n)):t.push(null)}return bu(i,a,o)},_u.selectAll=function(e){var t,n,r,o,a,i=this.id,u=this.namespace,l=[];e=Z(e);for(var s=-1,c=this.length;++s<c;)for(var f=this[s],p=-1,d=f.length;++p<d;)if(r=f[p]){a=r[u][i],n=e.call(r,r.__data__,p,s),l.push(t=[]);for(var h=-1,y=n.length;++h<y;)(o=n[h])&&Ou(o,h,u,i,a),t.push(o)}return bu(l,u,i)},_u.filter=function(e){var t,n,r=[];"function"!=typeof e&&(e=de(e));for(var o=0,a=this.length;o<a;o++){r.push(t=[]);for(var i,u=0,l=(i=this[o]).length;u<l;u++)(n=i[u])&&e.call(n,n.__data__,u,o)&&t.push(n)}return bu(r,this.namespace,this.id)},_u.tween=function(e,t){var n=this.id,r=this.namespace;return arguments.length<2?this.node()[r][n].tween.get(e):he(this,null==t?function(t){t[r][n].tween.remove(e)}:function(o){o[r][n].tween.set(e,t)})},_u.attr=function(e,t){if(arguments.length<2){for(t in e)this.attr(t,e[t]);return this}var n="transform"==e?_a:na,r=a.ns.qualify(e);function o(){this.removeAttribute(r)}function i(){this.removeAttributeNS(r.space,r.local)}return ku(this,"attr."+e,t,r.local?function(e){return null==e?i:(e+="",function(){var t,o=this.getAttributeNS(r.space,r.local);return o!==e&&(t=n(o,e),function(e){this.setAttributeNS(r.space,r.local,t(e))})})}:function(e){return null==e?o:(e+="",function(){var t,o=this.getAttribute(r);return o!==e&&(t=n(o,e),function(e){this.setAttribute(r,t(e))})})})},_u.attrTween=function(e,t){var n=a.ns.qualify(e);return this.tween("attr."+e,n.local?function(e,r){var o=t.call(this,e,r,this.getAttributeNS(n.space,n.local));return o&&function(e){this.setAttributeNS(n.space,n.local,o(e))}}:function(e,r){var o=t.call(this,e,r,this.getAttribute(n));return o&&function(e){this.setAttribute(n,o(e))}})},_u.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.style(n,e[n],t);return this}n=""}function o(){this.style.removeProperty(e)}return ku(this,"style."+e,t,function(t){return null==t?o:(t+="",function(){var r,o=c(this).getComputedStyle(this,null).getPropertyValue(e);return o!==t&&(r=na(o,t),function(t){this.style.setProperty(e,r(t),n)})})})},_u.styleTween=function(e,t,n){return arguments.length<3&&(n=""),this.tween("style."+e,function(r,o){var a=t.call(this,r,o,c(this).getComputedStyle(this,null).getPropertyValue(e));return a&&function(t){this.style.setProperty(e,a(t),n)}})},_u.text=function(e){return ku(this,"text",e,Su)},_u.remove=function(){var e=this.namespace;return this.each("end.transition",function(){var t;this[e].count<2&&(t=this.parentNode)&&t.removeChild(this)})},_u.ease=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].ease:("function"!=typeof e&&(e=a.ease.apply(a,arguments)),he(this,function(r){r[n][t].ease=e}))},_u.delay=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].delay:he(this,"function"==typeof e?function(r,o,a){r[n][t].delay=+e.call(r,r.__data__,o,a)}:(e=+e,function(r){r[n][t].delay=e}))},_u.duration=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].duration:he(this,"function"==typeof e?function(r,o,a){r[n][t].duration=Math.max(1,e.call(r,r.__data__,o,a))}:(e=Math.max(1,e),function(r){r[n][t].duration=e}))},_u.each=function(e,t){var n=this.id,r=this.namespace;if(arguments.length<2){var o=xu,i=wu;try{wu=n,he(this,function(t,o,a){xu=t[r][n],e.call(t,t.__data__,o,a)})}finally{xu=o,wu=i}}else he(this,function(o){var i=o[r][n];(i.event||(i.event=a.dispatch("start","end","interrupt"))).on(e,t)});return this},_u.transition=function(){for(var e,t,n,r=this.id,o=++Eu,a=this.namespace,i=[],u=0,l=this.length;u<l;u++){i.push(e=[]);for(var s,c=0,f=(s=this[u]).length;c<f;c++)(t=s[c])&&Ou(t,c,a,o,{time:(n=t[a][r]).time,ease:n.ease,delay:n.delay+n.duration,duration:n.duration}),e.push(t)}return bu(i,a,o)},a.svg.axis=function(){var e,t=a.scale.linear(),n=Mu,r=6,o=6,i=3,l=[10],s=null;function c(u){u.each(function(){var u,c=a.select(this),f=this.__chart__||t,p=this.__chart__=t.copy(),d=null==s?p.ticks?p.ticks.apply(p,l):p.domain():s,h=null==e?p.tickFormat?p.tickFormat.apply(p,l):D:e,y=c.selectAll(".tick").data(d,p),v=y.enter().insert("g",".domain").attr("class","tick").style("opacity",Oe),m=a.transition(y.exit()).style("opacity",Oe).remove(),g=a.transition(y.order()).style("opacity",1),b=Math.max(r,0)+i,w=mi(p),x=c.selectAll(".domain").data([0]),_=(x.enter().append("path").attr("class","domain"),a.transition(x));v.append("line"),v.append("text");var E,k,S,C,O=v.select("line"),M=g.select("line"),T=y.select("text").text(h),j=v.select("text"),P=g.select("text"),A="top"===n||"left"===n?-1:1;if("bottom"===n||"top"===n?(u=ju,E="x",S="y",k="x2",C="y2",T.attr("dy",A<0?"0em":".71em").style("text-anchor","middle"),_.attr("d","M"+w[0]+","+A*o+"V0H"+w[1]+"V"+A*o)):(u=Pu,E="y",S="x",k="y2",C="x2",T.attr("dy",".32em").style("text-anchor",A<0?"end":"start"),_.attr("d","M"+A*o+","+w[0]+"H0V"+w[1]+"H"+A*o)),O.attr(C,A*r),j.attr(S,A*b),M.attr(k,0).attr(C,A*r),P.attr(E,0).attr(S,A*b),p.rangeBand){var N=p,R=N.rangeBand()/2;f=p=function(e){return N(e)+R}}else f.rangeBand?f=p:m.call(u,p,f);v.call(u,f,p),g.call(u,p,p)})}return c.scale=function(e){return arguments.length?(t=e,c):t},c.orient=function(e){return arguments.length?(n=e in Tu?e+"":Mu,c):n},c.ticks=function(){return arguments.length?(l=u(arguments),c):l},c.tickValues=function(e){return arguments.length?(s=e,c):s},c.tickFormat=function(t){return arguments.length?(e=t,c):e},c.tickSize=function(e){var t=arguments.length;return t?(r=+e,o=+arguments[t-1],c):r},c.innerTickSize=function(e){return arguments.length?(r=+e,c):r},c.outerTickSize=function(e){return arguments.length?(o=+e,c):o},c.tickPadding=function(e){return arguments.length?(i=+e,c):i},c.tickSubdivide=function(){return arguments.length&&c},c};var Mu="bottom",Tu={top:1,right:1,bottom:1,left:1};function ju(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"})}function Pu(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"})}a.svg.brush=function(){var e,t,n=W(p,"brushstart","brush","brushend"),r=null,o=null,i=[0,0],u=[0,0],l=!0,s=!0,f=Nu[0];function p(e){e.each(function(){var e=a.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",v).on("touchstart.brush",v),t=e.selectAll(".background").data([0]);t.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),e.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var n=e.selectAll(".resize").data(f,D);n.exit().remove(),n.enter().append("g").attr("class",function(e){return"resize "+e}).style("cursor",function(e){return Au[e]}).append("rect").attr("x",function(e){return/[ew]$/.test(e)?-3:null}).attr("y",function(e){return/^[ns]/.test(e)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),n.style("display",p.empty()?"none":null);var i,u=a.transition(e),l=a.transition(t);r&&(i=mi(r),l.attr("x",i[0]).attr("width",i[1]-i[0]),h(u)),o&&(i=mi(o),l.attr("y",i[0]).attr("height",i[1]-i[0]),y(u)),d(u)})}function d(e){e.selectAll(".resize").attr("transform",function(e){return"translate("+i[+/e$/.test(e)]+","+u[+/^s/.test(e)]+")"})}function h(e){e.select(".extent").attr("x",i[0]),e.selectAll(".extent,.n>rect,.s>rect").attr("width",i[1]-i[0])}function y(e){e.select(".extent").attr("y",u[0]),e.selectAll(".extent,.e>rect,.w>rect").attr("height",u[1]-u[0])}function v(){var f,v,m=this,g=a.select(a.event.target),b=n.of(m,arguments),w=a.select(m),x=g.datum(),_=!/^(n|s)$/.test(x)&&r,E=!/^(e|w)$/.test(x)&&o,k=g.classed("extent"),S=Ee(m),C=a.mouse(m),O=a.select(c(m)).on("keydown.brush",function(){32==a.event.keyCode&&(k||(f=null,C[0]-=i[1],C[1]-=u[1],k=2),q())}).on("keyup.brush",function(){32==a.event.keyCode&&2==k&&(C[0]+=i[1],C[1]+=u[1],k=0,q())});if(a.event.changedTouches?O.on("touchmove.brush",j).on("touchend.brush",A):O.on("mousemove.brush",j).on("mouseup.brush",A),w.interrupt().selectAll("*").interrupt(),k)C[0]=i[0]-C[0],C[1]=u[0]-C[1];else if(x){var M=+/w$/.test(x),T=+/^n/.test(x);v=[i[1-M]-C[0],u[1-T]-C[1]],C[0]=i[M],C[1]=u[T]}else a.event.altKey&&(f=C.slice());function j(){var e=a.mouse(m),t=!1;v&&(e[0]+=v[0],e[1]+=v[1]),k||(a.event.altKey?(f||(f=[(i[0]+i[1])/2,(u[0]+u[1])/2]),C[0]=i[+(e[0]<f[0])],C[1]=u[+(e[1]<f[1])]):f=null),_&&P(e,r,0)&&(h(w),t=!0),E&&P(e,o,1)&&(y(w),t=!0),t&&(d(w),b({type:"brush",mode:k?"move":"resize"}))}function P(n,r,o){var a,c,p=mi(r),d=p[0],h=p[1],y=C[o],v=o?u:i,m=v[1]-v[0];if(k&&(d-=y,h-=m+y),a=(o?s:l)?Math.max(d,Math.min(h,n[o])):n[o],k?c=(a+=y)+m:(f&&(y=Math.max(d,Math.min(h,2*f[o]-a))),y<a?(c=a,a=y):c=y),v[0]!=a||v[1]!=c)return o?t=null:e=null,v[0]=a,v[1]=c,!0}function A(){j(),w.style("pointer-events","all").selectAll(".resize").style("display",p.empty()?"none":null),a.select("body").style("cursor",null),O.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),S(),b({type:"brushend"})}w.style("pointer-events","none").selectAll(".resize").style("display",null),a.select("body").style("cursor",g.style("cursor")),b({type:"brushstart"}),j()}return p.event=function(r){r.each(function(){var r=n.of(this,arguments),o={x:i,y:u,i:e,j:t},l=this.__chart__||o;this.__chart__=o,wu?a.select(this).transition().each("start.brush",function(){e=l.i,t=l.j,i=l.x,u=l.y,r({type:"brushstart"})}).tween("brush:brush",function(){var n=ra(i,o.x),a=ra(u,o.y);return e=t=null,function(e){i=o.x=n(e),u=o.y=a(e),r({type:"brush",mode:"resize"})}}).each("end.brush",function(){e=o.i,t=o.j,r({type:"brush",mode:"resize"}),r({type:"brushend"})}):(r({type:"brushstart"}),r({type:"brush",mode:"resize"}),r({type:"brushend"}))})},p.x=function(e){return arguments.length?(f=Nu[!(r=e)<<1|!o],p):r},p.y=function(e){return arguments.length?(f=Nu[!r<<1|!(o=e)],p):o},p.clamp=function(e){return arguments.length?(r&&o?(l=!!e[0],s=!!e[1]):r?l=!!e:o&&(s=!!e),p):r&&o?[l,s]:r?l:o?s:null},p.extent=function(n){var a,l,s,c,f;return arguments.length?(r&&(a=n[0],l=n[1],o&&(a=a[0],l=l[0]),e=[a,l],r.invert&&(a=r(a),l=r(l)),l<a&&(f=a,a=l,l=f),a==i[0]&&l==i[1]||(i=[a,l])),o&&(s=n[0],c=n[1],r&&(s=s[1],c=c[1]),t=[s,c],o.invert&&(s=o(s),c=o(c)),c<s&&(f=s,s=c,c=f),s==u[0]&&c==u[1]||(u=[s,c])),p):(r&&(e?(a=e[0],l=e[1]):(a=i[0],l=i[1],r.invert&&(a=r.invert(a),l=r.invert(l)),l<a&&(f=a,a=l,l=f))),o&&(t?(s=t[0],c=t[1]):(s=u[0],c=u[1],o.invert&&(s=o.invert(s),c=o.invert(c)),c<s&&(f=s,s=c,c=f))),r&&o?[[a,s],[l,c]]:r?[a,l]:o&&[s,c])},p.clear=function(){return p.empty()||(i=[0,0],u=[0,0],e=t=null),p},p.empty=function(){return!!r&&i[0]==i[1]||!!o&&u[0]==u[1]},a.rebind(p,n,"on")};var Au={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Nu=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Ru=zt.format=hn.timeFormat,Du=Ru.utc,Iu=Du("%Y-%m-%dT%H:%M:%S.%LZ");function Lu(e){return e.toISOString()}function zu(e,t,n){function r(t){return e(t)}function o(e,n){var r=(e[1]-e[0])/n,o=a.bisect(Uu,r);return o==Uu.length?[t.year,Si(e.map(function(e){return e/31536e6}),n)[2]]:o?t[r/Uu[o-1]<Uu[o]/r?o-1:o]:[Vu,Si(e,n)[2]]}return r.invert=function(t){return Fu(e.invert(t))},r.domain=function(t){return arguments.length?(e.domain(t),r):e.domain().map(Fu)},r.nice=function(e,t){var n=r.domain(),a=vi(n),i=null==e?o(a,10):"number"==typeof e&&o(a,e);function u(n){return!isNaN(n)&&!e.range(n,Fu(+n+1),t).length}return i&&(e=i[0],t=i[1]),r.domain(bi(n,t>1?{floor:function(t){for(;u(t=e.floor(t));)t=Fu(t-1);return t},ceil:function(t){for(;u(t=e.ceil(t));)t=Fu(+t+1);return t}}:e))},r.ticks=function(e,t){var n=vi(r.domain()),a=null==e?o(n,10):"number"==typeof e?o(n,e):!e.range&&[{range:e},t];return a&&(e=a[0],t=a[1]),e.range(n[0],Fu(+n[1]+1),t<1?1:t)},r.tickFormat=function(){return n},r.copy=function(){return zu(e.copy(),t,n)},Ei(r,e)}function Fu(e){return new Date(e)}Ru.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Lu:Iu,Lu.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Lu.toString=Iu.toString,zt.second=qt(function(e){return new Ft(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(e.getTime()+1e3*Math.floor(t))},function(e){return e.getSeconds()}),zt.seconds=zt.second.range,zt.seconds.utc=zt.second.utc.range,zt.minute=qt(function(e){return new Ft(6e4*Math.floor(e/6e4))},function(e,t){e.setTime(e.getTime()+6e4*Math.floor(t))},function(e){return e.getMinutes()}),zt.minutes=zt.minute.range,zt.minutes.utc=zt.minute.utc.range,zt.hour=qt(function(e){var t=e.getTimezoneOffset()/60;return new Ft(36e5*(Math.floor(e/36e5-t)+t))},function(e,t){e.setTime(e.getTime()+36e5*Math.floor(t))},function(e){return e.getHours()}),zt.hours=zt.hour.range,zt.hours.utc=zt.hour.utc.range,zt.month=qt(function(e){return(e=zt.day(e)).setDate(1),e},function(e,t){e.setMonth(e.getMonth()+t)},function(e){return e.getMonth()}),zt.months=zt.month.range,zt.months.utc=zt.month.utc.range;var Uu=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Bu=[[zt.second,1],[zt.second,5],[zt.second,15],[zt.second,30],[zt.minute,1],[zt.minute,5],[zt.minute,15],[zt.minute,30],[zt.hour,1],[zt.hour,3],[zt.hour,6],[zt.hour,12],[zt.day,1],[zt.day,2],[zt.week,1],[zt.month,1],[zt.month,3],[zt.year,1]],qu=Ru.multi([[".%L",function(e){return e.getMilliseconds()}],[":%S",function(e){return e.getSeconds()}],["%I:%M",function(e){return e.getMinutes()}],["%I %p",function(e){return e.getHours()}],["%a %d",function(e){return e.getDay()&&1!=e.getDate()}],["%b %d",function(e){return 1!=e.getDate()}],["%B",function(e){return e.getMonth()}],["%Y",Zn]]),Vu={range:function(e,t,n){return a.range(Math.ceil(e/n)*n,+t,n).map(Fu)},floor:D,ceil:D};Bu.year=zt.year,zt.scale=function(){return zu(a.scale.linear(),Bu,qu)};var Wu=Bu.map(function(e){return[e[0].utc,e[1]]}),Hu=Du.multi([[".%L",function(e){return e.getUTCMilliseconds()}],[":%S",function(e){return e.getUTCSeconds()}],["%I:%M",function(e){return e.getUTCMinutes()}],["%I %p",function(e){return e.getUTCHours()}],["%a %d",function(e){return e.getUTCDay()&&1!=e.getUTCDate()}],["%b %d",function(e){return 1!=e.getUTCDate()}],["%B",function(e){return e.getUTCMonth()}],["%Y",Zn]]);function $u(e){return JSON.parse(e.responseText)}function Yu(e){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(e.responseText)}Wu.year=zt.year.utc,zt.scale.utc=function(){return zu(a.scale.linear(),Wu,Hu)},a.text=xt(function(e){return e.responseText}),a.json=function(e,t){return _t(e,"application/json",$u,t)},a.html=function(e,t){return _t(e,"text/html",Yu,t)},a.xml=xt(function(e){return e.responseXML}),this.d3=a,void 0===(o="function"==typeof(r=a)?r.call(t,n,t,e):r)||(e.exports=o)}()},function(e,t,n){var r=n(29),o=n(30),a=o;a.v1=r,a.v4=o,e.exports=a},function(e,t,n){var r,o,a=n(11),i=n(12),u=0,l=0;e.exports=function(e,t,n){var s=t&&n||0,c=t||[],f=(e=e||{}).node||r,p=void 0!==e.clockseq?e.clockseq:o;if(null==f||null==p){var d=a();null==f&&(f=r=[1|d[0],d[1],d[2],d[3],d[4],d[5]]),null==p&&(p=o=16383&(d[6]<<8|d[7]))}var h=void 0!==e.msecs?e.msecs:(new Date).getTime(),y=void 0!==e.nsecs?e.nsecs:l+1,v=h-u+(y-l)/1e4;if(v<0&&void 0===e.clockseq&&(p=p+1&16383),(v<0||h>u)&&void 0===e.nsecs&&(y=0),y>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");u=h,l=y,o=p;var m=(1e4*(268435455&(h+=122192928e5))+y)%4294967296;c[s++]=m>>>24&255,c[s++]=m>>>16&255,c[s++]=m>>>8&255,c[s++]=255&m;var g=h/4294967296*1e4&268435455;c[s++]=g>>>8&255,c[s++]=255&g,c[s++]=g>>>24&15|16,c[s++]=g>>>16&255,c[s++]=p>>>8|128,c[s++]=255&p;for(var b=0;b<6;++b)c[s+b]=f[b];return t||i(c)}},function(e,t,n){var r=n(11),o=n(12);e.exports=function(e,t,n){var a=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var i=(e=e||{}).random||(e.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t)for(var u=0;u<16;++u)t[a+u]=i[u];return t||o(i)}},function(e,t,n){(function(t){var n=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var n,r,o;try{n=Map}catch(e){n=function(){}}try{r=Set}catch(e){r=function(){}}try{o=Promise}catch(e){o=function(){}}function a(i,l,s,c,f){"object"==typeof l&&(s=l.depth,c=l.prototype,f=l.includeNonEnumerable,l=l.circular);var p=[],d=[],h=void 0!==t;return void 0===l&&(l=!0),void 0===s&&(s=1/0),function i(s,y){if(null===s)return null;if(0===y)return s;var v,m;if("object"!=typeof s)return s;if(e(s,n))v=new n;else if(e(s,r))v=new r;else if(e(s,o))v=new o(function(e,t){s.then(function(t){e(i(t,y-1))},function(e){t(i(e,y-1))})});else if(a.__isArray(s))v=[];else if(a.__isRegExp(s))v=new RegExp(s.source,u(s)),s.lastIndex&&(v.lastIndex=s.lastIndex);else if(a.__isDate(s))v=new Date(s.getTime());else{if(h&&t.isBuffer(s))return v=t.allocUnsafe?t.allocUnsafe(s.length):new t(s.length),s.copy(v),v;e(s,Error)?v=Object.create(s):void 0===c?(m=Object.getPrototypeOf(s),v=Object.create(m)):(v=Object.create(c),m=c)}if(l){var g=p.indexOf(s);if(-1!=g)return d[g];p.push(s),d.push(v)}for(var b in e(s,n)&&s.forEach(function(e,t){var n=i(t,y-1),r=i(e,y-1);v.set(n,r)}),e(s,r)&&s.forEach(function(e){var t=i(e,y-1);v.add(t)}),s){var w;m&&(w=Object.getOwnPropertyDescriptor(m,b)),w&&null==w.set||(v[b]=i(s[b],y-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(s);for(b=0;b<x.length;b++){var _=x[b];(!(k=Object.getOwnPropertyDescriptor(s,_))||k.enumerable||f)&&(v[_]=i(s[_],y-1),k.enumerable||Object.defineProperty(v,_,{enumerable:!1}))}}if(f){var E=Object.getOwnPropertyNames(s);for(b=0;b<E.length;b++){var k,S=E[b];(k=Object.getOwnPropertyDescriptor(s,S))&&k.enumerable||(v[S]=i(s[S],y-1),Object.defineProperty(v,S,{enumerable:!1}))}}return v}(i,s)}function i(e){return Object.prototype.toString.call(e)}function u(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return a.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},a.__objToStr=i,a.__isDate=function(e){return"object"==typeof e&&"[object Date]"===i(e)},a.__isArray=function(e){return"object"==typeof e&&"[object Array]"===i(e)},a.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===i(e)},a.__getRegExpFlags=u,a}();e.exports&&(e.exports=n)}).call(this,n(32).Buffer)},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var r=n(33),o=n(34),a=n(35);function i(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=l.prototype:(null===e&&(e=new l(t)),e.length=t),e}function l(e,t,n){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return f(this,e)}return s(this,e,t,n)}function s(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);l.TYPED_ARRAY_SUPPORT?(e=t).__proto__=l.prototype:e=p(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|h(t,n),o=(e=u(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(l.isBuffer(t)){var n=0|d(t.length);return 0===(e=u(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?u(e,0):p(e,t);if("Buffer"===t.type&&a(t.data))return p(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function f(e,t){if(c(t),e=u(e,t<0?0:0|d(t)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|d(t.length);e=u(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function d(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function h(e,t){if(l.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return U(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return B(e).length;default:if(r)return U(e).length;t=(""+t).toLowerCase(),r=!0}}function y(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:m(e,t,n,r,o);if("number"==typeof t)return t&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):m(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function m(e,t,n,r,o){var a,i=1,u=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,u/=2,l/=2,n/=2}function s(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){var c=-1;for(a=n;a<u;a++)if(s(e,a)===s(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===l)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+l>u&&(n=u-l),a=n;a>=0;a--){for(var f=!0,p=0;p<l;p++)if(s(e,a+p)!==s(t,p)){f=!1;break}if(f)return a}return-1}function g(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var a=t.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var i=0;i<r;++i){var u=parseInt(t.substr(2*i,2),16);if(isNaN(u))return i;e[n+i]=u}return i}function b(e,t,n,r){return q(U(t,e.length-n),e,n,r)}function w(e,t,n,r){return q(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function x(e,t,n,r){return w(e,t,n,r)}function _(e,t,n,r){return q(B(t),e,n,r)}function E(e,t,n,r){return q(function(e,t){for(var n,r,o,a=[],i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,o=n%256,a.push(o),a.push(r);return a}(t,e.length-n),e,n,r)}function k(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function S(e,t,n){n=Math.min(e.length,n);for(var r=[],o=t;o<n;){var a,i,u,l,s=e[o],c=null,f=s>239?4:s>223?3:s>191?2:1;if(o+f<=n)switch(f){case 1:s<128&&(c=s);break;case 2:128==(192&(a=e[o+1]))&&(l=(31&s)<<6|63&a)>127&&(c=l);break;case 3:a=e[o+1],i=e[o+2],128==(192&a)&&128==(192&i)&&(l=(15&s)<<12|(63&a)<<6|63&i)>2047&&(l<55296||l>57343)&&(c=l);break;case 4:a=e[o+1],i=e[o+2],u=e[o+3],128==(192&a)&&128==(192&i)&&128==(192&u)&&(l=(15&s)<<18|(63&a)<<12|(63&i)<<6|63&u)>65535&&l<1114112&&(c=l)}null===c?(c=65533,f=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),o+=f}return function(e){var t=e.length;if(t<=C)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=C));return n}(r)}t.Buffer=l,t.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},t.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=i(),l.poolSize=8192,l._augment=function(e){return e.__proto__=l.prototype,e},l.from=function(e,t,n){return s(null,e,t,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(e,t,n){return function(e,t,n,r){return c(t),t<=0?u(e,t):void 0!==n?"string"==typeof r?u(e,t).fill(n,r):u(e,t).fill(n):u(e,t)}(null,e,t,n)},l.allocUnsafe=function(e){return f(null,e)},l.allocUnsafeSlow=function(e){return f(null,e)},l.isBuffer=function(e){return!(null==e||!e._isBuffer)},l.compare=function(e,t){if(!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,o=0,a=Math.min(n,r);o<a;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!a(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=l.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var i=e[n];if(!l.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,o),o+=i.length}return r},l.byteLength=h,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},l.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},l.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},l.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?S(this,0,e):function(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return T(this,t,n);case"utf8":case"utf-8":return S(this,t,n);case"ascii":return O(this,t,n);case"latin1":case"binary":return M(this,t,n);case"base64":return k(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return j(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}.apply(this,arguments)},l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},l.prototype.compare=function(e,t,n,r,o){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),u=Math.min(a,i),s=this.slice(r,o),c=e.slice(t,n),f=0;f<u;++f)if(s[f]!==c[f]){a=s[f],i=c[f];break}return a<i?-1:i<a?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return g(this,e,t,n);case"utf8":case"utf-8":return b(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return x(this,e,t,n);case"base64":return _(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var C=4096;function O(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function M(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function T(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",a=t;a<n;++a)o+=F(e[a]);return o}function j(e,t,n){for(var r=e.slice(t,n),o="",a=0;a<r.length;a+=2)o+=String.fromCharCode(r[a]+256*r[a+1]);return o}function P(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function A(e,t,n,r,o,a){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function N(e,t,n,r){t<0&&(t=65535+t+1);for(var o=0,a=Math.min(e.length-n,2);o<a;++o)e[n+o]=(t&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function R(e,t,n,r){t<0&&(t=4294967295+t+1);for(var o=0,a=Math.min(e.length-n,4);o<a;++o)e[n+o]=t>>>8*(r?o:3-o)&255}function D(e,t,n,r,o,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function I(e,t,n,r,a){return a||D(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,a){return a||D(e,0,n,8),o.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),l.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=l.prototype;else{var o=t-e;n=new l(o,void 0);for(var a=0;a<o;++a)n[a]=this[a+e]}return n},l.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,a=0;++a<t&&(o*=256);)r+=this[e+a]*o;return r},l.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},l.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},l.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,a=0;++a<t&&(o*=256);)r+=this[e+a]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=t,o=1,a=this[e+--r];r>0&&(o*=256);)a+=this[e+--r]*o;return a>=(o*=128)&&(a-=Math.pow(2,8*t)),a},l.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!1,52,8)},l.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,a=0;for(this[t]=255&e;++a<n&&(o*=256);)this[t+a]=e/o&255;return t+n},l.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=n-1,a=1;for(this[t+o]=255&e;--o>=0&&(a*=256);)this[t+o]=e/a&255;return t+n},l.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,255,0),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):R(this,e,t,!0),t+4},l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var a=0,i=1,u=0;for(this[t]=255&e;++a<n&&(i*=256);)e<0&&0===u&&0!==this[t+a-1]&&(u=1),this[t+a]=(e/i>>0)-u&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var a=n-1,i=1,u=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===u&&0!==this[t+a+1]&&(u=1),this[t+a]=(e/i>>0)-u&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,127,-128),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):R(this,e,t,!0),t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeFloatLE=function(e,t,n){return I(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return I(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o,a=r-n;if(this===e&&n<t&&t<r)for(o=a-1;o>=0;--o)e[o+t]=this[o+n];else if(a<1e3||!l.TYPED_ARRAY_SUPPORT)for(o=0;o<a;++o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+a),t);return a},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var i=l.isBuffer(e)?e:U(new l(e,r).toString()),u=i.length;for(a=0;a<n-t;++a)this[a+t]=i[a%u]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function F(e){return e<16?"0"+e.toString(16):e.toString(16)}function U(e,t){var n;t=t||1/0;for(var r=e.length,o=null,a=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&a.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function B(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(z,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function q(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}}).call(this,n(10))},function(e,t,n){"use strict";t.byteLength=function(e){var t=s(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){for(var t,n=s(e),r=n[0],i=n[1],u=new a(function(e,t,n){return 3*(t+n)/4-n}(0,r,i)),l=0,c=i>0?r-4:r,f=0;f<c;f+=4)t=o[e.charCodeAt(f)]<<18|o[e.charCodeAt(f+1)]<<12|o[e.charCodeAt(f+2)]<<6|o[e.charCodeAt(f+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===i&&(t=o[e.charCodeAt(f)]<<2|o[e.charCodeAt(f+1)]>>4,u[l++]=255&t);1===i&&(t=o[e.charCodeAt(f)]<<10|o[e.charCodeAt(f+1)]<<4|o[e.charCodeAt(f+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,a=[],i=0,u=n-o;i<u;i+=16383)a.push(c(e,i,i+16383>u?u:i+16383));1===o?(t=e[n-1],a.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],a.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return a.join("")};for(var r=[],o=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,l=i.length;u<l;++u)r[u]=i[u],o[i.charCodeAt(u)]=u;function s(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e,t,n){for(var o,a,i=[],u=t;u<n;u+=3)o=(e[u]<<16&16711680)+(e[u+1]<<8&65280)+(255&e[u+2]),i.push(r[(a=o)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return i.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,o){var a,i,u=8*o-r-1,l=(1<<u)-1,s=l>>1,c=-7,f=n?o-1:0,p=n?-1:1,d=e[t+f];for(f+=p,a=d&(1<<-c)-1,d>>=-c,c+=u;c>0;a=256*a+e[t+f],f+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+f],f+=p,c-=8);if(0===a)a=1-s;else{if(a===l)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=s}return(d?-1:1)*i*Math.pow(2,a-r)},t.write=function(e,t,n,r,o,a){var i,u,l,s=8*a-o-1,c=(1<<s)-1,f=c>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,h=r?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(u=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),(t+=i+f>=1?p/l:p*Math.pow(2,1-f))*l>=2&&(i++,l/=2),i+f>=c?(u=0,i=c):i+f>=1?(u=(t*l-1)*Math.pow(2,o),i+=f):(u=t*Math.pow(2,f-1)*Math.pow(2,o),i=0));o>=8;e[n+d]=255&u,d+=h,u/=256,o-=8);for(i=i<<o|u,s+=o;s>0;e[n+d]=255&i,d+=h,i/=256,s-=8);e[n+d-h]|=128*y}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){var r=Array.prototype.slice,o=n(37),a=n(38),i=e.exports=function(e,t,n){return n||(n={}),e===t||(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=typeof e&&"object"!=typeof t?n.strict?e===t:e==t:function(e,t,n){var s,c;if(u(e)||u(t))return!1;if(e.prototype!==t.prototype)return!1;if(a(e))return!!a(t)&&(e=r.call(e),t=r.call(t),i(e,t,n));if(l(e)){if(!l(t))return!1;if(e.length!==t.length)return!1;for(s=0;s<e.length;s++)if(e[s]!==t[s])return!1;return!0}try{var f=o(e),p=o(t)}catch(e){return!1}if(f.length!=p.length)return!1;for(f.sort(),p.sort(),s=f.length-1;s>=0;s--)if(f[s]!=p[s])return!1;for(s=f.length-1;s>=0;s--)if(c=f[s],!i(e[c],t[c],n))return!1;return typeof e==typeof t}(e,t,n))};function u(e){return null==e}function l(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}},function(e,t){function n(e){var t=[];for(var n in e)t.push(n);return t}(e.exports="function"==typeof Object.keys?Object.keys:n).shim=n},function(e,t){var n="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();function r(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function o(e){return e&&"object"==typeof e&&"number"==typeof e.length&&Object.prototype.hasOwnProperty.call(e,"callee")&&!Object.prototype.propertyIsEnumerable.call(e,"callee")||!1}(t=e.exports=n?r:o).supported=r,t.unsupported=o},function(e,t,n){"use strict";var r=a(n(40)),o=a(n(13));function a(e){return e&&e.__esModule?e:{default:e}}e.exports={TransitionGroup:o.default,CSSTransitionGroup:r.default}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(0)),a=s(n(2)),i=s(n(13)),u=s(n(44)),l=n(15);function s(e){return e&&e.__esModule?e:{default:e}}function c(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}l.nameShape.isRequired,a.default.bool,a.default.bool,a.default.bool,(0,l.transitionTimeout)("Appear"),(0,l.transitionTimeout)("Enter"),(0,l.transitionTimeout)("Leave");var f=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=Array(a),l=0;l<a;l++)i[l]=arguments[l];return n=r=c(this,e.call.apply(e,[this].concat(i))),r._wrapChild=function(e){return o.default.createElement(u.default,{name:r.props.transitionName,appear:r.props.transitionAppear,enter:r.props.transitionEnter,leave:r.props.transitionLeave,appearTimeout:r.props.transitionAppearTimeout,enterTimeout:r.props.transitionEnterTimeout,leaveTimeout:r.props.transitionLeaveTimeout},e)},c(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){return o.default.createElement(i.default,r({},this.props,{childFactory:this._wrapChild}))},t}(o.default.Component);f.displayName="CSSTransitionGroup",f.propTypes={},f.defaultProps={transitionAppear:!1,transitionEnter:!0,transitionLeave:!0},t.default=f,e.exports=t.default},function(e,t){e.exports=function(){for(var e=arguments.length,t=[],n=0;n<e;n++)t[n]=arguments[n];if(0!==(t=t.filter(function(e){return null!=e})).length)return 1===t.length?t[0]:t.reduce(function(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}})}},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";t.__esModule=!0,t.getChildMapping=function(e){if(!e)return e;var t={};return r.Children.map(e,function(e){return e}).forEach(function(e){t[e.key]=e}),t},t.mergeChildMappings=function(e,t){function n(n){return t.hasOwnProperty(n)?t[n]:e[n]}e=e||{},t=t||{};var r={},o=[];for(var a in e)t.hasOwnProperty(a)?o.length&&(r[a]=o,o=[]):o.push(a);var i=void 0,u={};for(var l in t){if(r.hasOwnProperty(l))for(i=0;i<r[l].length;i++){var s=r[l][i];u[r[l][i]]=n(s)}u[l]=n(l)}for(i=0;i<o.length;i++)u[o[i]]=n(o[i]);return u};var r=n(0)},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=p(n(45)),a=p(n(47)),i=p(n(48)),u=n(49),l=p(n(0)),s=p(n(2)),c=n(3),f=n(15);function p(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var h=[];u.transitionEnd&&h.push(u.transitionEnd),u.animationEnd&&h.push(u.animationEnd);s.default.node,f.nameShape.isRequired,s.default.bool,s.default.bool,s.default.bool,s.default.number,s.default.number,s.default.number;var y=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=d(this,e.call.apply(e,[this].concat(a))),r.componentWillAppear=function(e){r.props.appear?r.transition("appear",e,r.props.appearTimeout):e()},r.componentWillEnter=function(e){r.props.enter?r.transition("enter",e,r.props.enterTimeout):e()},r.componentWillLeave=function(e){r.props.leave?r.transition("leave",e,r.props.leaveTimeout):e()},d(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.classNameAndNodeQueue=[],this.transitionTimeouts=[]},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)}),this.classNameAndNodeQueue.length=0},t.prototype.transition=function(e,t,n){var r=(0,c.findDOMNode)(this);if(r){var i=this.props.name[e]||this.props.name+"-"+e,l=this.props.name[e+"Active"]||i+"-active",s=null,f=void 0;(0,o.default)(r,i),this.queueClassAndNode(l,r);var p=function(e){e&&e.target!==r||(clearTimeout(s),f&&f(),(0,a.default)(r,i),(0,a.default)(r,l),f&&f(),t&&t())};n?(s=setTimeout(p,n),this.transitionTimeouts.push(s)):u.transitionEnd&&(f=function(e,t){return h.length?h.forEach(function(n){return e.addEventListener(n,t,!1)}):setTimeout(t,0),function(){h.length&&h.forEach(function(n){return e.removeEventListener(n,t,!1)})}}(r,p))}else t&&t()},t.prototype.queueClassAndNode=function(e,t){var n=this;this.classNameAndNodeQueue.push({className:e,node:t}),this.rafHandle||(this.rafHandle=(0,i.default)(function(){return n.flushClassNameAndNodeQueue()}))},t.prototype.flushClassNameAndNodeQueue=function(){this.unmounted||this.classNameAndNodeQueue.forEach(function(e){e.node.scrollTop,(0,o.default)(e.node,e.className)}),this.classNameAndNodeQueue.length=0,this.rafHandle=null},t.prototype.render=function(){var e=r({},this.props);return delete e.name,delete e.appear,delete e.enter,delete e.leave,delete e.appearTimeout,delete e.enterTimeout,delete e.leaveTimeout,delete e.children,l.default.cloneElement(l.default.Children.only(this.props.children),e)},t}(l.default.Component);y.displayName="CSSTransitionGroupChild",y.propTypes={},t.default=y,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=function(e,t){e.classList?e.classList.add(t):(0,o.default)(e,t)||("string"==typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))};var o=r(n(46));e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")},e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}e.exports=function(e,t){e.classList?e.classList.remove(t):"string"==typeof e.className?e.className=r(e.className,t):e.setAttribute("class",r(e.className&&e.className.baseVal||"",t))}},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=void 0;var o,a=r(n(14)),i="clearTimeout",u=function(e){var t=(new Date).getTime(),n=Math.max(0,16-(t-s)),r=setTimeout(e,n);return s=t,r},l=function(e,t){return e+(e?t[0].toUpperCase()+t.substr(1):t)+"AnimationFrame"};a.default&&["","webkit","moz","o","ms"].some(function(e){var t=l(e,"request");if(t in window)return i=l(e,"cancel"),u=function(e){return window[t](e)}});var s=(new Date).getTime();(o=function(e){return u(e)}).cancel=function(e){window[i]&&"function"==typeof window[i]&&window[i](e)};var c=o;t.default=c,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=t.animationEnd=t.animationDelay=t.animationTiming=t.animationDuration=t.animationName=t.transitionEnd=t.transitionDuration=t.transitionDelay=t.transitionTiming=t.transitionProperty=t.transform=void 0;var o,a,i,u,l,s,c,f,p,d,h,y=r(n(14)),v="transform";if(t.transform=v,t.animationEnd=i,t.transitionEnd=a,t.transitionDelay=c,t.transitionTiming=s,t.transitionDuration=l,t.transitionProperty=u,t.animationDelay=h,t.animationTiming=d,t.animationDuration=p,t.animationName=f,y.default){var m=function(){for(var e,t,n=document.createElement("div").style,r={O:function(e){return"o"+e.toLowerCase()},Moz:function(e){return e.toLowerCase()},Webkit:function(e){return"webkit"+e},ms:function(e){return"MS"+e}},o=Object.keys(r),a="",i=0;i<o.length;i++){var u=o[i];if(u+"TransitionProperty"in n){a="-"+u.toLowerCase(),e=r[u]("TransitionEnd"),t=r[u]("AnimationEnd");break}}!e&&"transitionProperty"in n&&(e="transitionend");!t&&"animationName"in n&&(t="animationend");return n=null,{animationEnd:t,transitionEnd:e,prefix:a}}();o=m.prefix,t.transitionEnd=a=m.transitionEnd,t.animationEnd=i=m.animationEnd,t.transform=v=o+"-"+v,t.transitionProperty=u=o+"-transition-property",t.transitionDuration=l=o+"-transition-duration",t.transitionDelay=c=o+"-transition-delay",t.transitionTiming=s=o+"-transition-timing-function",t.animationName=f=o+"-animation-name",t.animationDuration=p=o+"-animation-duration",t.animationTiming=d=o+"-animation-delay",t.animationDelay=h=o+"-animation-timing-function"}var g={transform:v,end:a,property:u,timing:s,delay:c,duration:l};t.default=g},function(e,t){var n,r,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var l,s=[],c=!1,f=-1;function p(){c&&l&&(c=!1,l.length?s=l.concat(s):f=-1,s.length&&d())}function d(){if(!c){var e=u(p);c=!0;for(var t=s.length;t;){for(l=s,s=[];++f<t;)l&&l[f].run();f=-1,t=s.length}l=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function y(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new h(e,t)),1!==s.length||c||u(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=y,o.addListener=y,o.once=y,o.off=y,o.removeListener=y,o.removeAllListeners=y,o.emit=y,o.prependListener=y,o.prependOnceListener=y,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,y=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function m(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case i:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case c:case d:case s:return e;default:return t}}case v:case y:case a:return t}}}function g(e){return m(e)===p}t.typeOf=m,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=c,t.ContextProvider=s,t.Element=o,t.ForwardRef=d,t.Fragment=i,t.Lazy=v,t.Memo=y,t.Portal=a,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===p||e===l||e===u||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===y||e.$$typeof===s||e.$$typeof===c||e.$$typeof===d)},t.isAsyncMode=function(e){return g(e)||m(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return m(e)===c},t.isContextProvider=function(e){return m(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return m(e)===d},t.isFragment=function(e){return m(e)===i},t.isLazy=function(e){return m(e)===v},t.isMemo=function(e){return m(e)===y},t.isPortal=function(e){return m(e)===a},t.isProfiler=function(e){return m(e)===l},t.isStrictMode=function(e){return m(e)===u},t.isSuspense=function(e){return m(e)===h}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(3),i=n(1),u=n(6),l=n.n(u),s=n(16),c=n.n(s);function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function v(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  width: 10%;\n  outline: none;\n  display: inline;\n"]);return v=function(){return e},e}i.a.input(v());var m=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=d(t).call(this,e))||"object"!==f(o)&&"function"!=typeof o?y(r):o).state={green:.005,lightGreen:.001,yellow:.05,orange:.01},n.cloneTree=n.cloneTree.bind(y(y(n))),n.updateTree=n.updateTree.bind(y(y(n))),n.changeTempPercentages=n.changeTempPercentages.bind(y(y(n))),n}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,r["Component"]),n=t,(a=[{key:"addColor",value:function(e,t,n,r,o){for(var a=e[0].renderTime,i=[e[0]];i.length>0;){var u=i[0].individualTime/a;i[0].nodeSvgShape=u<t?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#80b74c"}}:u<n?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#a1c94f"}}:u<r?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e6cc38"}}:u<o?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#f69d27"}}:{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e74e2c"}};for(var l=0;l<i[0].children.length;l++)i.push(i[0].children[l]);i.shift()}return e}},{key:"cloneTree",value:function(e){for(var t=[],n=0;n<e.length;n++){var r={};for(var o in e[n])e[n].hasOwnProperty(o)&&(r[o]="children"===o?this.cloneTree(e[n][o]):e[n][o]);t.push(r)}return t}},{key:"updateTree",value:function(){var e=this.cloneTree(this.props.treeData);this.addColor(e,this.state.green,this.state.lightGreen,this.state.yellow,this.state.orange),this.props.updateTreeState(e)}},{key:"changeTempPercentages",value:function(e){var t={};t[e.target.id]=e.target.value/100,this.setState(t),console.log(this.state)}},{key:"render",value:function(){return o.a.createElement("form",{style:{borderBottom:"0.5px solid #ababab",boxShadow:"0 4px 2px -2px #ababab",paddingBottom:"5px"}},o.a.createElement("div",{style:{width:"98%",display:"inline",justifyContent:"left"}},o.a.createElement("p",null,"Node colors are determined by lowest input percentage above individual render time divided by total render time of app. Nodes are be red otherwise."),o.a.createElement("div",{style:{display:"flex",justifyContent:"space-around",padding:"5px"}},o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.green,placeholder:"percentForGreen",id:"green",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Green")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.lightGreen,placeholder:"percentForLightGreen",id:"lightGreen",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Light Green")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.yellow,placeholder:"percentForYellow",id:"yellow",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Yellow")),o.a.createElement("span",null,o.a.createElement("input",{type:"number",step:"0.1",style:{width:"45px",padding:"3px"},value:100*this.state.orange,placeholder:"percentForOrange",id:"orange",onChange:this.changeTempPercentages}),"%",o.a.createElement("br",null),o.a.createElement("label",null,"Orange")),o.a.createElement("input",{style:{height:"40px",width:"60px"},type:"button",onClick:this.updateTree,value:"Submit"}))))}}])&&p(n.prototype,a),i&&p(n,i),t}();function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t){return(x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n-moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\nbox-shadow: 3px 4px 0px 0px #3dc21b;\nbackground-color:#44c767;\n-moz-border-radius:42px;\n-webkit-border-radius:42px;\nborder-radius:42px;\nborder:1px solid #18ab29;\ndisplay: flex;\njustify-content: center;\ncursor:pointer;\ncolor:#ffffff;\nfont-family: Trebuchet MS;\nfont-size: 11px;\nfont-weight:bold;\npadding: 3px 8px;\ntext-decoration:none;\ntext-shadow:2px 1px 3px #2f6627;\ntext-align: center;\nwidth: 20%;\nmargin: 8px;\n\n&:hover {\n  background-color: #3e8e41;\n}\n\n&:active {\n  background-color: #3e8e41;\n  box-shadow: 0 5px #666;\n  transform: translateY(4px);\n}\n"]);return E=function(){return e},e}var k=i.a.div(E()),S=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=w(t).call(this,e))||"object"!==g(o)&&"function"!=typeof o?_(r):o).mouseOver=n.mouseOver.bind(_(_(n))),n.state={orientation:"vertical"},n.changeOrientation=n.changeOrientation.bind(_(_(n))),n}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&x(e,t)}(t,o.a.Component),n=t,(r=[{key:"mouseOver",value:function(e){var t={name:e.name,time:e.renderTime,individualTime:e.individualTime,memoizedProps:e.memoizedProps,memoizedState:e.memoizedState};(0,this.props.grabNodeStats)(t)}},{key:"changeOrientation",value:function(){"vertical"===this.state.orientation?this.setState({orientation:"horizontal"}):this.setState({orientation:"vertical"})}},{key:"render",value:function(){var e=this.state;e.orientation,e.shape,this.props.treeData;return o.a.createElement("div",null,o.a.createElement("div",{id:"treeWrapper",style:{width:"100%",height:"60em",float:"right",border:"0.5px solid #ababab",margin:"10px",boxShadow:"1.5px 1.5px 1.5px 1.5px #ababab"}},o.a.createElement(m,{updateTreeState:this.props.updateTreeState,treeData:this.props.treeData}),o.a.createElement(k,{id:"button2",onClick:this.changeOrientation,counter:"Orientation"},"Change Orientation"),o.a.createElement("div",{style:{width:"98%",height:"45em"}},o.a.createElement(c.a,{translate:{x:100,y:100},orientation:this.state.orientation,onMouseOver:this.mouseOver,nodeSvgShape:this.state.shape,separation:{siblings:.6,nonSiblings:.6},data:this.props.treeData}))))}}])&&b(n.prototype,r),a&&b(n,a),t}();function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  -moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n\t-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\n\tbox-shadow: 3px 4px 0px 0px #3dc21b;\n\tbackground-color:#44c767;\n\t-moz-border-radius:42px;\n\t-webkit-border-radius:42px;\n\tborder-radius:42px;\n\tborder:1px solid #18ab29;\n  display: flex;\n  justify-content: center;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family: Trebuchet MS;\n\tfont-size: 24px;\n\tfont-weight:bold;\n  padding: 15px 25px;\n\ttext-decoration:none;\n  text-shadow:2px 1px 3px #2f6627;\n  text-align: center;\n  width: auto;\n\n  &:hover {\n    background-color: #3e8e41;\n  }\n\n  &:active {\n    background-color: #3e8e41;\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n\n  "]);return P=function(){return e},e}var A=i.a.button(P()),N=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),M(this,T(t).call(this,e))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){return o.a.createElement(A,{id:this.props.id,onClick:this.props.clicked},this.props.counter)}}])&&O(n.prototype,a),i&&O(n,i),t}();function R(e){return(R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return!t||"object"!==R(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function z(e,t){return(z=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(['\n  color: #595959;\n  text-shadow: 1px 1px 2px #a3a3a3;\n  font-size: 8px;\n  font-family: "Trebuchet MS";\n  margin: 1em;\n  padding: 0.25em 1em;\n  width: 45%;\n  height: auto;\n  text-align: left;\n  float: left;\n']);return F=function(){return e},e}var U=i.a.div(F()),B=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),I(this,L(t).call(this,e))}var n,r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&z(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement(U,null,o.a.createElement("h1",null,"Component Name:",o.a.createElement("br",null),this.props.stats.name),o.a.createElement("h1",null,"Total Render Time:",o.a.createElement("br",null),this.props.stats.totalTime),o.a.createElement("h1",null,"Individual Render Time:",o.a.createElement("br",null),this.props.stats.individualTime))}}])&&D(n.prototype,r),a&&D(n,a),t}(),q=n(19),V=n.n(q);function W(e){return(W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function $(e){return($=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Y(e,t){return(Y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function K(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function G(){var e=Z(['\n  border: none;\n  height: 20em;\n  width: 95%;\n  overflow: auto;\n  text-align: left;\n  color: #595959;\n  text-shadow: 1px 1px 2px #a3a3a3;\n  font-size: 16px;\n  font-family: "Trebuchet MS";\n  margin: 1em;\n  padding: 0.25em 1em;\n  float: left;\n']);return G=function(){return e},e}function J(){var e=Z(["\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border: 0.5px solid #ababab;\n  margin: 10px;\n  box-shadow: 1.5px 1.5px 1.5px 1.5px #ababab;\n  width: 35em;\n  height: 60em;\n"]);return J=function(){return e},e}function Q(){var e=Z(["\n  display: flex;\n  justify-content: space-between;\n\n"]);return Q=function(){return e},e}function X(){var e=Z(["\n  width: 100%;\n  text-align: center;\n"]);return X=function(){return e},e}function Z(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var ee=i.a.div(X()),te=i.a.div(Q()),ne=i.a.div(J()),re=i.a.div(G()),oe=function(e){function t(){var e,n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(r=$(t).call(this))||"object"!==W(r)&&"function"!=typeof r?K(n):r).state={nodeinfo:5,startQuantum:!1,treeData:{name:"PLEASE REFRESH PAGE",nodeSvgShape:{shapeProps:{fill:"white"}}},green:.005,lightGreen:.01,yellow:.05,orange:.1},e.updateTreeState=e.updateTreeState.bind(K(K(e))),e.grabNodeStats=e.grabNodeStats.bind(K(K(e))),e.clicked=e.clicked.bind(K(K(e))),e.startQuantum=e.startQuantum.bind(K(K(e))),chrome.devtools.panels.create("React Quantum",null,"devtools.html"),e}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Y(e,t)}(t,r["Component"]),n=t,(a=[{key:"componentDidMount",value:function(){var e,t=this,n=chrome.runtime.connect(null,{name:"devTools"}),r=chrome.devtools.inspectedWindow.tabId;(e={message:"initialize"}).tabId=r,n.postMessage(e),n.onMessage.addListener(function(e){var n=t.state,r=n.green,o=n.lightGreen,a=n.yellow,i=n.orange,u=JSON.parse(e.message);console.log("tempTreeData",u),function e(t){for(var n=t,r=0;r<n.length;r+=1)if(n[r].memoizedProps&&(n[r].memoizedProps=JSON.parse(n[r].memoizedProps)),0===n[r].renderTime)n[r].individualTime=0;else{for(var o=0,a=0;a<n[r].children.length;a+=1){var i=n[r].children[a];if(0===i.renderTime&&i.children>0)for(var u=0;u<i.children.length;u+=1)o+=i.children[u].renderTime;else o+=n[r].children[a].renderTime}n[r].individualTime=n[r].renderTime-o}for(var l=0;l<n.length;l+=1)n[l].children.length>0&&e(n[l].children)}(u=u[0].children),function(e,t,n,r,o){for(var a=e[0].renderTime,i=[e[0]];i.length>0;){var u=i[0].individualTime/a;i[0].nodeSvgShape=u<t?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#80b74c"}}:u<n?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#a1c94f"}}:u<r?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e6cc38"}}:u<o?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#f69d27"}}:{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e74e2c"}};for(var l=0;l<i[0].children.length;l+=1)i.push(i[0].children[l]);i.shift()}}(u,r,o,a,i),t.setState({treeData:u})})}},{key:"startQuantum",value:function(){var e=chrome.devtools.inspectedWindow.tabId;chrome.runtime.sendMessage({name:"startQuantum",target:"content",tabId:e}),this.setState({startQuantum:!0})}},{key:"updateTreeState",value:function(e){this.setState({treeData:e})}},{key:"grabNodeStats",value:function(e){this.setState({nodeinfo:{totalTime:e.time,individualTime:e.individualTime,name:e.name,memoizedProps:e.memoizedProps,memoizedState:e.memoizedState}})}},{key:"clicked",value:function(e){var t="".concat(e.target.id,"counter"),n=this.state.counterId+1,r={};r[t]=n,this.setState(r)}},{key:"render",value:function(){var e=this.state,t=e.nodeinfo,n=e.treeData,r=(e.green,e.lightGreen,e.yellow,e.orange,e.orientation),a=e.startQuantum;return o.a.createElement(ee,null,o.a.createElement("div",null,o.a.createElement("img",{src:V.a,href:"https://github.com/ReactQuantum/ReactQuantum",alt:""}),!1===a?o.a.createElement("div",{style:{width:"100%",alignContent:"center",display:"flex",justifyContent:"center"}},o.a.createElement(N,{id:"startQuantum",clicked:this.startQuantum,counter:"Start Quantum"})):o.a.createElement("div",{className:"content"},o.a.createElement(te,null,o.a.createElement(ne,null,o.a.createElement(B,{stats:t}),o.a.createElement(U,{style:{marginTop:"-10px"}},o.a.createElement("h1",null,"Current State:")),o.a.createElement(re,null,o.a.createElement(l.a,{src:t.memoizedState})),o.a.createElement(U,null,o.a.createElement("h1",null,"Props:")),o.a.createElement(re,null,o.a.createElement(l.a,{src:t.memoizedProps}))),o.a.createElement("div",{style:{width:"45%",height:"60em"}},o.a.createElement(S,{updateTreeState:this.updateTreeState,orientation:r,treeData:n,grabNodeStats:this.grabNodeStats}))))))}}])&&H(n.prototype,a),i&&H(n,i),t}();Object(a.render)(o.a.createElement(oe,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtanNvbi12aWV3L2Rpc3QvbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzL3N0eWxpcy5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21lbW9pemUtb25lL2Rpc3QvbWVtb2l6ZS1vbmUuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3V1aWQvbGliL3JuZy1icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL2xpYi9ieXRlc1RvVXVpZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9UcmFuc2l0aW9uR3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3V0aWwvaW5ET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvUHJvcFR5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kMy10cmVlL2xpYi9yZWFjdC1kMy10cmVlLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9SZWFjdFF1YW50dW1Mb2dvLnBuZyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzL2QzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL3YxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL3Y0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbG9uZS9jbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYnVmZmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2lzX2FyZ3VtZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9DU1NUcmFuc2l0aW9uR3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NoYWluLWZ1bmN0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvQ2hpbGRNYXBwaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL0NTU1RyYW5zaXRpb25Hcm91cENoaWxkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9jbGFzcy9hZGRDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvaGFzQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2NsYXNzL3JlbW92ZUNsYXNzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy91dGlsL3JlcXVlc3RBbmltYXRpb25GcmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9QZXJjZW50Q29sb3JJbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9UcmVlQ29tcG9uZW50LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU3RhdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RldnRvb2xzLmpzeCJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInByb2Nlc3MiLCJzdHlsaXNfc3R5bGlzX21pbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwic3R5bGlzX3N0eWxpc19taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0Iiwic3R5bGlzX3J1bGVfc2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInN0eWxpc19ydWxlX3NoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQiLCJfZW1vdGlvbl91bml0bGVzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwicmVhY3RfaXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIm1lbW9pemVfb25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfZW1vdGlvbl9pc19wcm9wX3ZhbGlkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJpbnRlcmxlYXZlIiwic3RyaW5ncyIsImludGVycG9sYXRpb25zIiwicmVzdWx0IiwibGVuIiwibGVuZ3RoIiwicHVzaCIsIl90eXBlb2YiLCJpdGVyYXRvciIsIm9iaiIsImNvbnN0cnVjdG9yIiwiY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJkZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImFyZ3VtZW50cyIsInNvdXJjZSIsImluaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJvYmplY3RXaXRob3V0UHJvcGVydGllcyIsImtleXMiLCJpbmRleE9mIiwicG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsImlzUGxhaW5PYmplY3QiLCJ4IiwiRU1QVFlfQVJSQVkiLCJmcmVlemUiLCJFTVBUWV9PQkpFQ1QiLCJpc0Z1bmN0aW9uIiwidGVzdCIsImdldENvbXBvbmVudE5hbWUiLCJkaXNwbGF5TmFtZSIsImlzU3R5bGVkQ29tcG9uZW50Iiwic3R5bGVkQ29tcG9uZW50SWQiLCJTQ19BVFRSIiwiZW52IiwiSVNfQlJPV1NFUiIsIndpbmRvdyIsIkRJU0FCTEVfU1BFRURZIiwiU0NfRElTQUJMRV9TUEVFRFkiLCJTdHlsZWRDb21wb25lbnRzRXJyb3IiLCJfRXJyb3IiLCJjb2RlIiwidGhpcyIsIl9sZW4iLCJBcnJheSIsIl9rZXkiLCJfdGhpcyIsImpvaW4iLCJFcnJvciIsIlNDX0NPTVBPTkVOVF9JRCIsImV4dHJhY3RDb21wcyIsIm1heWJlQ1NTIiwiY3NzIiwiZXhpc3RpbmdDb21wb25lbnRzIiwicmVwbGFjZSIsIm1hdGNoIiwiY29tcG9uZW50SWQiLCJtYXRjaEluZGV4IiwibWFwIiwiX3JlZiIsIm5leHRDb21wIiwiY3NzRnJvbURPTSIsInNsaWNlIiwiQ09NTUVOVF9SRUdFWCIsInN0eWxpc1NwbGl0dGVyIiwiYSIsImdsb2JhbCIsImNhc2NhZGUiLCJrZXlmcmFtZSIsInByZWZpeCIsImNvbXByZXNzIiwic2VtaWNvbG9uIiwic3R5bGlzIiwicGFyc2luZ1J1bGVzIiwicmV0dXJuUnVsZXNQbHVnaW4iLCJjb250ZXh0IiwicGFyc2VkUnVsZXMiLCJwYXJzZVJ1bGVzUGx1Z2luIiwicnVsZSIsIl9jb21wb25lbnRJZCIsIl9zZWxlY3RvciIsIl9zZWxlY3RvclJlZ2V4cCIsInNlbGZSZWZlcmVuY2VSZXBsYWNlciIsIm9mZnNldCIsInN0cmluZyIsInVzZSIsIl8iLCJzZWxlY3RvcnMiLCJsYXN0SW5kZXhPZiIsInN0cmluZ2lmeVJ1bGVzIiwicnVsZXMiLCJzZWxlY3RvciIsInVuZGVmaW5lZCIsImZsYXRDU1MiLCJjc3NTdHIiLCJSZWdFeHAiLCJnZXROb25jZSIsIm5jIiwiYWRkTmFtZUZvcklkIiwibmFtZXMiLCJpZCIsInJlc2V0SWROYW1lcyIsImhhc05hbWVGb3JJZCIsInN0cmluZ2lmeU5hbWVzIiwic3RyIiwidHJpbSIsInNoZWV0Rm9yVGFnIiwidGFnIiwic2hlZXQiLCJzaXplIiwiZG9jdW1lbnQiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsInNhZmVJbnNlcnRSdWxlIiwiY3NzUnVsZSIsImluZGV4IiwibWF4SW5kZXgiLCJjc3NSdWxlcyIsImluc2VydFJ1bGUiLCJlcnIiLCJtYWtlVGV4dE1hcmtlciIsImFkZFVwVW50aWxJbmRleCIsInNpemVzIiwidG90YWxVcFRvSW5kZXgiLCJ3cmFwQXNIdG1sVGFnIiwiYWRkaXRpb25hbEF0dHJzIiwibm9uY2UiLCJTQ19WRVJTSU9OX0FUVFIiLCJmaWx0ZXIiLCJCb29sZWFuIiwid3JhcEFzRWxlbWVudCIsIl9wcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImdldElkc0Zyb21NYXJrZXJzRmFjdG9yeSIsIm1hcmtlcnMiLCJtYWtlVGV4dE5vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsIm1ha2VTZXJ2ZXJUYWciLCJuYW1lc0FyZyIsIm1hcmtlcnNBcmciLCJpbnNlcnRNYXJrZXIiLCJwcmV2IiwiY3NzRm9ySWQiLCJjbG9uZSIsIm5hbWVzQ2xvbmUiLCJjbG9uZU5hbWVzIiwibWFya2Vyc0Nsb25lIiwiZ2V0SWRzIiwiaW5zZXJ0UnVsZXMiLCJyZW1vdmVSdWxlcyIsIm1hcmtlciIsInNlYWxlZCIsInN0eWxlVGFnIiwidG9FbGVtZW50IiwidG9IVE1MIiwibWFrZVRhZyIsInRhZ0VsIiwiZm9yY2VTZXJ2ZXIiLCJpbnNlcnRCZWZvcmUiLCJnZXRJbXBvcnRSdWxlVGFnIiwiZWwiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJuZXh0U2libGluZyIsIm1ha2VTdHlsZVRhZyIsImV4dHJhY3RJbXBvcnQiLCJ1c2VkSW1wb3J0UnVsZVRhZyIsImRhdGEiLCJpbXBvcnRSdWxlcyIsImNzc1J1bGVzU2l6ZSIsIm1heUhhdmVJbXBvcnQiLCJzZXBhcmF0b3IiLCJhcHBlbmREYXRhIiwibmV3TWFya2VyIiwicmVwbGFjZUNoaWxkIiwibWFrZUJyb3dzZXJUYWciLCJlbmQiLCJjc3NUZXh0IiwiaW5zZXJ0SW5kZXgiLCJpbmplY3RlZFJ1bGVzIiwicmVtb3ZhbEluZGV4IiwibG93ZXJCb3VuZCIsImRlbGV0ZVJ1bGUiLCJkZWxldGVSdWxlcyIsIm1ha2VTcGVlZHlUYWciLCJTUExJVF9SRUdFWCIsIk1BWF9TSVpFIiwic2hlZXRSdW5uaW5nSWQiLCJtYXN0ZXIiLCJTdHlsZVNoZWV0IiwiaGVhZCIsImltcG9ydFJ1bGVUYWciLCJmaXJzdFRhZyIsInRhZ3MiLCJ0YWdNYXAiLCJkZWZlcnJlZCIsInJlaHlkcmF0ZWROYW1lcyIsImlnbm9yZVJlaHlkcmF0ZWROYW1lcyIsImNhcGFjaXR5IiwiY2xvbmVzIiwicmVoeWRyYXRlIiwiZWxzIiwiZXh0cmFjdGVkIiwiaXNTdHJlYW1lZCIsIm5vZGVzIiwicXVlcnlTZWxlY3RvckFsbCIsIm5vZGVzU2l6ZSIsImdldEF0dHJpYnV0ZSIsImVsTmFtZXMiLCJzcGxpdCIsImVsTmFtZXNTaXplIiwiaiIsImFwcGx5IiwidGV4dENvbnRlbnQiLCJleHRyYWN0ZWRTaXplIiwiX2V4dHJhY3RlZCRpIiwiX2kiLCJyZW1vdmVDaGlsZCIsIk1hdGgiLCJtYXgiLCJfaiIsInJlc2V0IiwiaWRzIiwibmV3VGFnIiwic2VhbEFsbFRhZ3MiLCJmb3JFYWNoIiwibGFzdEVsIiwiZ2V0VGFnRm9ySWQiLCJoYXNJZCIsImRlZmVycmVkSW5qZWN0IiwiaW5qZWN0IiwiY29uY2F0IiwicmVtb3ZlIiwidG9SZWFjdEVsZW1lbnRzIiwiS2V5ZnJhbWVzIiwic3R5bGVTaGVldCIsInRvU3RyaW5nIiwiU3RyaW5nIiwiZ2V0TmFtZSIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJpc0ZhbHNpc2giLCJjaHVuayIsIm9ialRvQ3NzIiwicHJldktleSIsInRvTG93ZXJDYXNlIiwiZmxhdHRlbiIsImV4ZWN1dGlvbkNvbnRleHQiLCJpc0FycmF5IiwicnVsZVNldCIsInNob3VsZFRocm93IiwiZSIsInN0eWxlcyIsIm11cm11cmhhc2giLCJiIiwiY2hhckNvZGVBdCIsImNoYXJzTGVuZ3RoIiwiZ2V0QWxwaGFiZXRpY0NoYXIiLCJmcm9tQ2hhckNvZGUiLCJnZW5lcmF0ZUFscGhhYmV0aWNOYW1lIiwiZmxvb3IiLCJpc1N0YXRpY1J1bGVzIiwiYXR0cnMiLCJzb21lIiwiaGFzRnVuY3Rpb25PYmplY3RLZXkiLCJfVFlQRV9TVEFUSUNTIiwiaXNITVJFbmFibGVkIiwiaGFzaGVyIiwiQ29tcG9uZW50U3R5bGUiLCJpc1N0YXRpYyIsImdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzIiwibGFzdENsYXNzTmFtZSIsImdlbmVyYXRlTmFtZSIsImRldGVybWluZVRoZW1lIiwiZmFsbGJhY2tUaGVtZSIsImRlZmF1bHRQcm9wcyIsImlzRGVmYXVsdFRoZW1lIiwidGhlbWUiLCJlc2NhcGVSZWdleCIsImRhc2hlc0F0RW5kcyIsImVzY2FwZSIsImlzVGFnIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGVzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIlRZUEVfU1RBVElDUyIsIiQkdHlwZW9mIiwicmVuZGVyIiwiZGVmaW5lUHJvcGVydHkkMSIsImdldE93blByb3BlcnR5TmFtZXMiLCJfT2JqZWN0JGdldE93blByb3BlcnQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImFycmF5UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsIlRoZW1lQ29udGV4dCIsIlRoZW1lQ29uc3VtZXIiLCJDb25zdW1lciIsIlN0eWxlU2hlZXRDb250ZXh0IiwiX0NvbXBvbmVudCIsIlRoZW1lUHJvdmlkZXIiLCJnZXRDb250ZXh0IiwicmVuZGVySW5uZXIiLCJjaGlsZHJlbiIsIm91dGVyVGhlbWUiLCJQcm92aWRlciIsIkNoaWxkcmVuIiwib25seSIsImdldFRoZW1lIiwiU2VydmVyU3R5bGVTaGVldCIsIm1hc3RlclNoZWV0Iiwic2VhbCIsInNwbGljZSIsImNvbGxlY3RTdHlsZXMiLCJTdHlsZVNoZWV0TWFuYWdlciIsImdldFN0eWxlVGFncyIsImdldFN0eWxlRWxlbWVudCIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsInJlYWRhYmxlU3RyZWFtIiwiU3R5bGVTaGVldENvbnN1bWVyIiwiaWRlbnRpZmllcnMiLCJTZXQiLCJTdHlsZWRDb21wb25lbnQiLCJyZW5kZXJPdXRlciIsImZvcndhcmRlZENvbXBvbmVudCIsImNvbXBvbmVudFN0eWxlIiwiX3Byb3BzJGZvcndhcmRlZENvbXBvIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiZ2VuZXJhdGVkQ2xhc3NOYW1lIiwiZWxlbWVudFRvQmVDcmVhdGVkIiwiYXMiLCJpc1RhcmdldFRhZyIsInByb3BzRm9yRWxlbWVudCIsImNvbXB1dGVkUHJvcHMiLCJyZWYiLCJzdHlsZSIsImNsYXNzTmFtZSIsImJ1aWxkRXhlY3V0aW9uQ29udGV4dCIsIl90aGlzMiIsImF0dHJEZWYiLCJmbiIsInJlc29sdmVkQXR0ckRlZiIsImF0dHJEZWZXYXNGbiIsImF0dHIiLCJpc1JlYWN0Q29tcG9uZW50IiwiX3Byb3BzJGZvcndhcmRlZENvbXBvMiIsIndhcm5Ub29NYW55Q2xhc3NlcyIsImNyZWF0ZVN0eWxlZENvbXBvbmVudCIsIm9wdGlvbnMiLCJpc1RhcmdldFN0eWxlZENvbXAiLCJpc0NsYXNzIiwiX29wdGlvbnMkZGlzcGxheU5hbWUiLCJnZW5lcmF0ZURpc3BsYXlOYW1lIiwiX29wdGlvbnMkY29tcG9uZW50SWQiLCJfQ29tcG9uZW50U3R5bGUiLCJfZGlzcGxheU5hbWUiLCJwYXJlbnRDb21wb25lbnRJZCIsIm5yIiwiZ2VuZXJhdGVJZCIsIl9vcHRpb25zJFBhcmVudENvbXBvbiIsIlBhcmVudENvbXBvbmVudCIsIl9vcHRpb25zJGF0dHJzIiwiZmluYWxBdHRycyIsIldyYXBwZWRTdHlsZWRDb21wb25lbnQiLCJmb3J3YXJkUmVmIiwiZm9yd2FyZGVkUmVmIiwid2l0aENvbXBvbmVudCIsInByZXZpb3VzQ29tcG9uZW50SWQiLCJvcHRpb25zVG9Db3B5IiwibmV3Q29tcG9uZW50SWQiLCJzdHlsZWQiLCJjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImNvbXBvbmVudENvbnN0cnVjdG9yIiwidGVtcGxhdGVGdW5jdGlvbiIsIndpdGhDb25maWciLCJjb25maWciLCJkb21FbGVtZW50IiwiR2xvYmFsU3R5bGUiLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJzY0NHU0hNUkNhY2hlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwiZGVmYXVsdCIsImYiLCJ1IiwiYmFja2dyb3VuZENvbG9yIiwiYmFzZTAwIiwiZWxsaXBzaXNDb2xvciIsImJhc2UwOSIsImJyYWNlQ29sb3IiLCJiYXNlMDciLCJleHBhbmRlZEljb24iLCJiYXNlMEQiLCJjb2xsYXBzZWRJY29uIiwiYmFzZTBFIiwia2V5Q29sb3IiLCJhcnJheUtleUNvbG9yIiwiYmFzZTBDIiwib2JqZWN0U2l6ZSIsImJhc2UwNCIsImNvcHlUb0NsaXBib2FyZCIsImJhc2UwRiIsImNvcHlUb0NsaXBib2FyZENoZWNrIiwib2JqZWN0Qm9yZGVyIiwiYmFzZTAyIiwiZGF0YVR5cGVzIiwiYm9vbGVhbiIsImRhdGUiLCJmbG9hdCIsImJhc2UwQiIsImZ1bmN0aW9uIiwiaW50ZWdlciIsIm5hbiIsImJhc2UwOCIsIm51bGwiLCJiYXNlMEEiLCJiYXNlMDUiLCJyZWdleHAiLCJiYWNrZ3JvdW5kIiwiZWRpdFZhcmlhYmxlIiwiZWRpdEljb24iLCJjYW5jZWxJY29uIiwicmVtb3ZlSWNvbiIsImFkZEljb24iLCJjaGVja0ljb24iLCJiYXNlMDEiLCJjb2xvciIsImJvcmRlciIsImFkZEtleU1vZGFsIiwibGFiZWxDb2xvciIsInZhbGlkYXRpb25GYWlsdXJlIiwiaWNvbkNvbG9yIiwiZm9udENvbG9yIiwiYXBwLWNvbnRhaW5lciIsImZvbnRGYW1pbHkiLCJnbG9iYWxGb250RmFtaWx5IiwiY3Vyc29yIiwiZ2xvYmFsQ3Vyc29yIiwicG9zaXRpb24iLCJlbGxpcHNpcyIsImRpc3BsYXkiLCJmb250U2l6ZSIsImVsbGlwc2lzRm9udFNpemUiLCJsaW5lSGVpZ2h0IiwiZWxsaXBzaXNMaW5lSGVpZ2h0IiwiZWxsaXBzaXNDdXJzb3IiLCJicmFjZS1yb3ciLCJicmFjZSIsImJyYWNlQ3Vyc29yIiwiZm9udFdlaWdodCIsImJyYWNlRm9udFdlaWdodCIsImV4cGFuZGVkLWljb24iLCJjb2xsYXBzZWQtaWNvbiIsImNvbG9uIiwibWFyZ2luIiwia2V5TWFyZ2luIiwidmVydGljYWxBbGlnbiIsIm9iamVjdEtleVZhbCIsInBhZGRpbmdUb3AiLCJrZXlWYWxQYWRkaW5nVG9wIiwicGFkZGluZ1JpZ2h0Iiwia2V5VmFsUGFkZGluZ1JpZ2h0IiwicGFkZGluZ0JvdHRvbSIsImtleVZhbFBhZGRpbmdCb3R0b20iLCJib3JkZXJMZWZ0Iiwia2V5VmFsQm9yZGVyTGVmdCIsIjpob3ZlciIsInBhZGRpbmdMZWZ0Iiwia2V5VmFsQm9yZGVySG92ZXIiLCJvYmplY3Qta2V5LXZhbC1uby1ib3JkZXIiLCJwYWRkaW5nIiwia2V5VmFsUGFkZGluZyIsInB1c2hlZC1jb250ZW50IiwibWFyZ2luTGVmdCIsInB1c2hlZENvbnRlbnRNYXJnaW5MZWZ0IiwidmFyaWFibGVWYWx1ZSIsInZhcmlhYmxlVmFsdWVQYWRkaW5nUmlnaHQiLCJvYmplY3QtbmFtZSIsImxldHRlclNwYWNpbmciLCJrZXlMZXR0ZXJTcGFjaW5nIiwiZm9udFN0eWxlIiwia2V5Rm9udFN0eWxlIiwia2V5VmVydGljYWxBbGlnbiIsIm9wYWNpdHkiLCJrZXlPcGFjaXR5Iiwia2V5T3BhY2l0eUhvdmVyIiwiYXJyYXkta2V5Iiwib2JqZWN0LXNpemUiLCJib3JkZXJSYWRpdXMiLCJvYmplY3RTaXplQm9yZGVyUmFkaXVzIiwib2JqZWN0U2l6ZUZvbnRTdHlsZSIsIm9iamVjdFNpemVNYXJnaW4iLCJkYXRhLXR5cGUtbGFiZWwiLCJkYXRhVHlwZUZvbnRTaXplIiwibWFyZ2luUmlnaHQiLCJkYXRhVHlwZU1hcmdpblJpZ2h0IiwiZGF0YXR5cGVPcGFjaXR5IiwiZGF0ZS12YWx1ZSIsImRhdGVWYWx1ZU1hcmdpbkxlZnQiLCJ3aGl0ZVNwYWNlIiwiZnVuY3Rpb24tdmFsdWUiLCJuYW5Gb250U2l6ZSIsIm5hbkZvbnRXZWlnaHQiLCJuYW5QYWRkaW5nIiwibmFuQm9yZGVyUmFkaXVzIiwibnVsbEZvbnRTaXplIiwibnVsbEZvbnRXZWlnaHQiLCJudWxsUGFkZGluZyIsIm51bGxCb3JkZXJSYWRpdXMiLCJ1bmRlZmluZWRGb250U2l6ZSIsInVuZGVmaW5lZFBhZGRpbmciLCJ1bmRlZmluZWRCb3JkZXJSYWRpdXMiLCJjb3B5LXRvLWNsaXBib2FyZCIsImNsaXBib2FyZEN1cnNvciIsImNvcHktaWNvbiIsImljb25Gb250U2l6ZSIsImljb25NYXJnaW5SaWdodCIsImNvcHktaWNvbi1jb3BpZWQiLCJjbGlwYm9hcmRDaGVja01hcmdpbkxlZnQiLCJhcnJheS1ncm91cC1tZXRhLWRhdGEiLCJhcnJheUdyb3VwTWV0YVBhZGRpbmciLCJvYmplY3QtbWV0YS1kYXRhIiwibWV0YURhdGFQYWRkaW5nIiwiaWNvbi1jb250YWluZXIiLCJ3aWR0aCIsImljb25Db250YWluZXJXaWR0aCIsInRvb2x0aXAiLCJ0b29sdGlwUGFkZGluZyIsInJlbW92ZVZhckljb24iLCJpY29uQ3Vyc29yIiwiYWRkVmFySWNvbiIsImVkaXRWYXJJY29uIiwiZWRpdC1pY29uLWNvbnRhaW5lciIsImNoZWNrLWljb24iLCJpY29uUGFkZGluZ1JpZ2h0IiwiY2FuY2VsLWljb24iLCJlZGl0LWlucHV0IiwibWluSGVpZ2h0IiwiZWRpdElucHV0SGVpZ2h0IiwibWluV2lkdGgiLCJlZGl0SW5wdXRNaW5XaWR0aCIsImVkaXRJbnB1dEJvcmRlclJhZGl1cyIsImVkaXRJbnB1dFBhZGRpbmciLCJlZGl0SW5wdXRNYXJnaW5SaWdodCIsImVkaXRJbnB1dEZvbnRGYW1pbHkiLCJkZXRlY3RlZC1yb3ciLCJkZXRlY3RlZFJvd1BhZGRpbmdUb3AiLCJrZXktbW9kYWwtcmVxdWVzdCIsImFkZEtleUNvdmVyUG9zaXRpb24iLCJ0b3AiLCJhZGRLZXlDb3ZlclBvc2l0aW9uUHgiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJhZGRLZXlDb3ZlckJhY2tncm91bmQiLCJrZXktbW9kYWwiLCJhZGRLZXlNb2RhbFdpZHRoIiwiYWRkS2V5TW9kYWxNYXJnaW4iLCJhZGRLZXlNb2RhbFBhZGRpbmciLCJhZGRLZXlNb2RhbFJhZGl1cyIsIm1hcmdpblRvcCIsImtleS1tb2RhbC1sYWJlbCIsIm1hcmdpbkJvdHRvbSIsImtleS1tb2RhbC1pbnB1dC1jb250YWluZXIiLCJvdmVyZmxvdyIsImtleS1tb2RhbC1pbnB1dCIsImJveFNpemluZyIsImtleS1tb2RhbC1jYW5jZWwiLCJrZXktbW9kYWwtY2FuY2VsLWljb24iLCJ0cmFuc2Zvcm0iLCJrZXktbW9kYWwtc3VibWl0IiwiZnVuY3Rpb24tZWxsaXBzaXMiLCJ2YWxpZGF0aW9uLWZhaWx1cmUiLCJ2YWxpZGF0aW9uLWZhaWx1cmUtbGFiZWwiLCJ2YWxpZGF0aW9uLWZhaWx1cmUtY2xlYXIiLCJyanZfZGVmYXVsdCIsInJqdl9ncmV5IiwiY3JlYXRlU3R5bGluZyIsImRlZmF1bHRCYXNlMTYiLCJ2ZXJzaW9uIiwiX19lIiwic3RvcmUiLCJpc05hTiIsInRvVHlwZSIsImlzVGhlbWUiLCJGdW5jdGlvbiIsIl9fZyIsInJqdklkIiwidHlwZV9uYW1lIiwiZGlzcGxheURhdGFUeXBlcyIsIlB1cmVDb21wb25lbnQiLCJmcm9tIiwib2JqZWN0cyIsInNldCIsImhhbmRsZUFjdGlvbiIsImVtaXQiLCJ1cGRhdGVkX3NyYyIsInVwZGF0ZVNyYyIsIm5hbWVzcGFjZSIsIm5ld192YWx1ZSIsImV4aXN0aW5nX3ZhbHVlIiwidmFyaWFibGVfcmVtb3ZlZCIsInNoaWZ0IiwiZGVlcENvcHkiLCJoIiwieSIsIm5leHQiLCJkb25lIiwicmV0dXJuIiwiRXZlbnRFbWl0dGVyIiwicmVnaXN0ZXIiLCJEaXNwYXRjaGVyIiwiaGVpZ2h0IiwiQ2hlY2tDaXJjbGUiLCJFZGl0IiwiQWRkIiwiQWRkQ2lyY2xlIiwiUmVtb3ZlQ2lyY2xlIiwiQ2xpcHB5IiwiQXJyb3dEb3duIiwiQXJyb3dSaWdodCIsIlNxdWFyZVBsdXMiLCJTcXVhcmVNaW51cyIsIkNpcmNsZVBsdXMiLCJDaXJjbGVNaW51cyIsInZpZXdCb3giLCJmaWxsIiwicHJlc2VydmVBc3BlY3RSYXRpbyIsIkYiLCJHIiwiUyIsIlAiLCJCIiwidiIsIlciLCJnIiwidmlydHVhbCIsIlIiLCJVIiwicmFuZG9tIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJPIiwiRSIsInciLCJDIiwiayIsImdldFN0YXRlIiwic3RhdGUiLCJwcmV2UHJvcHMiLCJzcmMiLCJpY29uU3R5bGUiLCJwYXJlbnRfdHlwZSIsImdldE9iamVjdE1ldGFEYXRhIiwiRXhwYW5kZWRJY29uIiwiQ29sbGFwc2VkSWNvbiIsIm9uQ2xpY2siLCJ0b2dnbGVDb2xsYXBzZWQiLCJkZXB0aCIsImpzdlJvb3QiLCJvYmplY3RfdHlwZSIsImV4cGFuZGVkIiwiaW5kZW50V2lkdGgiLCJnZXRCcmFjZVN0YXJ0IiwiZ2V0T2JqZWN0Q29udGVudCIsImdldEVsbGlwc2lzIiwiY29sbGFwc2VkIiwic2hvdWxkQ29sbGFwc2UiLCJzZXRTdGF0ZSIsInJlbmRlck9iamVjdENvbnRlbnRzIiwiaW5kZXhfb2Zmc2V0IiwiZ3JvdXBBcnJheXNBZnRlckxlbmd0aCIsInNvcnRLZXlzIiwic29ydCIsIk0iLCJwYXJzZUludCIsIkpzb25PYmplY3QiLCJ2YXJpYWJsZSIsInNpbmdsZUluZGVudCIsInBvbHlmaWxsIiwiX3QiLCJjZWlsIiwidmFsdWVPZiIsImNvcHlyaWdodCIsImNoYXJBdCIsIm1pbiIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90IiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJjb21wb25lbnRXaWxsTW91bnQiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyIsImVudHJpZXMiLCJ2YWx1ZXMiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwiY2xvc2UiLCJldmFsIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvcGllZFRpbWVyIiwiaGFuZGxlQ29weSIsImNsaWNrQ2FsbGJhY2siLCJpbm5lckhUTUwiLCJjbGlwYm9hcmRWYWx1ZSIsImJvZHkiLCJzZWxlY3QiLCJleGVjQ29tbWFuZCIsInNldFRpbWVvdXQiLCJjb3BpZWQiLCJnZXRDbGlwcHlJY29uIiwiY2xlYXJUaW1lb3V0IiwiaGlkZGVuIiwiZ2V0T2JqZWN0U2l6ZSIsImRpc3BsYXlPYmplY3RTaXplIiwiZ2V0QWRkQXR0cmlidXRlIiwia2V5X25hbWUiLCJkaXNwYXRjaCIsImdldFJlbW92ZU9iamVjdCIsImhvdmVyIiwib25EZWxldGUiLCJvbkFkZCIsImVuYWJsZUNsaXBib2FyZCIsInN0b3BQcm9wYWdhdGlvbiIsImdldEV4cGFuZGVkSWNvbiIsIkRhdGUiLCJub3ciLCJnZXRMaXN0ZW5lcnMiLCJyZXNldFN0YXRlIiwidmFyaWFibGUtdXBkYXRlIiwiYWRkLWtleS1yZXF1ZXN0IiwiYWRkS2V5UmVxdWVzdCIsIm9uRWRpdCIsImV4aXN0aW5nX3NyYyIsImVkaXRLZXlSZXF1ZXN0IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJwcmV2U3JjIiwicHJldk5hbWUiLCJwcmV2VGhlbWUiLCJvbiIsInJlbW92ZUxpc3RlbmVyIiwiZGVmYXVsdFZhbHVlIiwibWVzc2FnZSIsImFjdGl2ZSIsInZhbGlkYXRlU3RhdGUiLCJjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aCIsIm9uU2VsZWN0Iiwic2NoZW1lIiwiYXV0aG9yIiwiYmFzZTAzIiwiYmFzZTA2Iiwid2hpdGUiLCJibGFjayIsInRyYW5zcGFyZW50IiwiaW5kZW50QmxvY2tXaWR0aCIsImtleUJvcmRlclJhZGl1cyIsImtleUNvbG9uV2VpZ2h0Iiwia2V5VmFsUGFkZGluZ0hvdmVyIiwidW5kZWZpbmVkRm9udFdlaWdodCIsImdldEJhc2UxNlRoZW1lIiwiaW52ZXJ0VGhlbWUiLCJyZ2IyeXV2IiwieXV2MnJnYiIsInJlZHVjZSIsIkEiLCJiYXNlMTZUaGVtZXMiLCJleHRlbmQiLCJkb2N1bWVudEVsZW1lbnQiLCJfayIsIkFyZ3VtZW50cyIsIktFWSIsIkQiLCJUIiwiSSIsIkwiLCJOIiwieiIsInEiLCJWIiwiUU9iamVjdCIsImZpbmRDaGlsZCIsIksiLCJIIiwiSiIsIlkiLCJRIiwiWiIsIlgiLCJlZSIsInRlIiwibmUiLCJyZSIsImZvciIsImtleUZvciIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsImlzRXh0ZW5zaWJsZSIsInByZXZlbnRFeHRlbnNpb25zIiwiTkVFRCIsImZhc3RLZXkiLCJnZXRXZWFrIiwib25GcmVlemUiLCJpc0l0ZXJhYmxlIiwiZ2V0SXRlcmF0b3IiLCJnZXRJdGVyYXRvck1ldGhvZCIsInhlIiwiUGUiLCJvZSIsImllIiwiU2UiLCJoZSIsIkNlIiwiTWUiLCJwbGFjZWhvbGRlciIsImplIiwiJCIsIkFlIiwicmV2ZXJzZSIsIkRlIiwiZmUiLCJkZSIsImNlIiwidmUiLCJSZSIsImFlIiwic2UiLCJsZSIsImJlIiwieWUiLCJtZSIsInBlIiwiTmFOIiwiZ2UiLCJfZSIsIk9lIiwiRWUiLCJ3ZSIsImV4ZWMiLCJJRV9QUk9UTyIsImtlIiwiRmUiLCJ0aHJlZXplcm90d29mb3VyIiwiYXBhdGh5IiwiYXNoZXMiLCJhdGVsaWVyRHVuZSIsImF0ZWxpZXJGb3Jlc3QiLCJhdGVsaWVySGVhdGgiLCJhdGVsaWVyTGFrZXNpZGUiLCJhdGVsaWVyU2Vhc2lkZSIsImJlc3BpbiIsImJyZXdlciIsImJyaWdodCIsImNoYWxrIiwiY29kZXNjaG9vbCIsImNvbG9ycyIsImVpZ2h0aWVzIiwiZW1iZXJzIiwiZmxhdCIsImdvb2dsZSIsImdyYXlzY2FsZSIsImdyZWVuc2NyZWVuIiwiaGFybW9uaWMiLCJob3BzY290Y2giLCJpc290b3BlIiwibWFycmFrZXNoIiwibW9jaGEiLCJtb25va2FpIiwib2NlYW4iLCJwYXJhaXNvIiwicG9wIiwicmFpbHNjYXN0cyIsInNoYXBlc2hpZnRlciIsInNvbGFyaXplZCIsInN1bW1lcmZydWl0IiwidG9tb3Jyb3ciLCJ0dWJlIiwidHdpbGlnaHQiLCJyb3VuZCIsIiMiLCJoc2wiLCJyZ2IiLCJoZXgiLCJwYXJzZUZsb2F0Iiwic3Vic3RyaW5nIiwidG9GaXhlZCIsImlzQ29uY2F0U3ByZWFkYWJsZSIsInRvTG9jYWxlVGltZVN0cmluZyIsIndlZWtkYXkiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJob3VyIiwibWludXRlIiwiZ2V0RnVuY3Rpb25EaXNwbGF5IiwiX2V2ZW50cyIsIl9tYXhMaXN0ZW5lcnMiLCJkZWZhdWx0TWF4TGlzdGVuZXJzIiwic2V0TWF4TGlzdGVuZXJzIiwiYWRkTGlzdGVuZXIiLCJuZXdMaXN0ZW5lciIsImxpc3RlbmVyIiwid2FybmVkIiwidHJhY2UiLCJvbmNlIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwibGlzdGVuZXJzIiwibGlzdGVuZXJDb3VudCIsIl9jYWxsYmFja3MiLCJfaXNEaXNwYXRjaGluZyIsIl9pc0hhbmRsZWQiLCJfaXNQZW5kaW5nIiwiX2xhc3RJRCIsInVucmVnaXN0ZXIiLCJ3YWl0Rm9yIiwiX2ludm9rZUNhbGxiYWNrIiwiX3N0YXJ0RGlzcGF0Y2hpbmciLCJfc3RvcERpc3BhdGNoaW5nIiwiaXNEaXNwYXRjaGluZyIsIl9wZW5kaW5nUGF5bG9hZCIsImZyYW1lc1RvUG9wIiwiZWRpdE1vZGUiLCJlZGl0VmFsdWUiLCJyZW5hbWVLZXkiLCJwYXJzZWRJbnB1dCIsImN0cmxLZXkiLCJtZXRhS2V5IiwicHJlcG9wSW5wdXQiLCJnZXRWYWx1ZSIsImdldEVkaXRJY29uIiwiZ2V0UmVtb3ZlSWNvbiIsImdldEVkaXRJbnB1dCIsIkpzb25TdHJpbmciLCJKc29uSW50ZWdlciIsIkpzb25GbG9hdCIsIkpzb25Cb29sZWFuIiwiSnNvbkZ1bmN0aW9uIiwiSnNvbk51bGwiLCJKc29uTmFuIiwiSnNvblVuZGVmaW5lZCIsIkpzb25EYXRlIiwiSnNvblJlZ2V4cCIsImlucHV0UmVmIiwiZm9jdXMiLCJvbkNoYW5nZSIsIm9uS2V5RG93biIsInN1Ym1pdEVkaXQiLCJzaG93RGV0ZWN0ZWQiLCJnZXREZXRlY3RlZElucHV0IiwicGFkZGluZ1NpemUiLCJib3JkZXJTaXplIiwic2l6aW5nU3R5bGUiLCJzY3JvbGxIZWlnaHQiLCJtYXhIZWlnaHQiLCJyb3dDb3VudCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImN1cnJlbnRTdHlsZSIsIm1pbi1oZWlnaHQiLCJtYXgtaGVpZ2h0IiwidmlzaWJpbGl0eSIsInotaW5kZXgiLCJzZXRQcm9wZXJ0eSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiX3Jlc2l6ZUxvY2siLCJfb25Sb290RE9NTm9kZSIsIl9yb290RE9NTm9kZSIsIl9vbkNoYW5nZSIsIl9jb250cm9sbGVkIiwiX3Jlc2l6ZUNvbXBvbmVudCIsIl91aWQiLCJ1c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50cyIsIm1pblJvd3MiLCJtYXhSb3dzIiwib25IZWlnaHRDaGFuZ2UiLCJjb21wb25lbnREaWRNb3VudCIsIl9yZXNpemVMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2xlYXJOZXh0RnJhbWUiLCJfb25OZXh0RnJhbWVBY3Rpb25JZCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIkNvbXBvbmVudCIsImZ1bmMiLCJudW1iZXIiLCJib29sIiwiaXNSZXF1aXJlZCIsImFycmF5Iiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJwYXJzZSIsImlzVmFsaWQiLCJzdWJtaXQiLCJjbG9zZU1vZGFsIiwiaW5wdXQiLCJzcGVsbENoZWNrIiwib25LZXlQcmVzcyIsImxvY2FscyIsImJ0b2EiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwicmVmcyIsInBhcnRzIiwiYmFzZSIsIm1lZGlhIiwic291cmNlTWFwIiwiaW5zZXJ0SW50byIsImluc2VydEF0IiwiZmlyc3RDaGlsZCIsInJlbCIsInNpbmdsZXRvbiIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJocmVmIiwiY2hpbGROb2RlcyIsImFsbCIsImF0b2IiLCJxdWVyeVNlbGVjdG9yIiwiREVCVUciLCJsb2NhdGlvbiIsInByb3RvY29sIiwiaG9zdCIsInBhdGhuYW1lIiwidWUiLCIkZSIsInplIiwiTmUiLCJXZSIsInFlIiwiQmUiLCJHZSIsIkhlIiwiSmUiLCJUZSIsIlVlIiwiVmUiLCJYZSIsIlllIiwiUWUiLCJJZSIsIkxlIiwiS2UiLCJzaW1wbGVJc0VxdWFsIiwicmVzdWx0Rm4iLCJpc0VxdWFsIiwibGFzdFRoaXMiLCJsYXN0UmVzdWx0IiwibGFzdEFyZ3MiLCJjYWxsZWRPbmNlIiwiaXNOZXdBcmdFcXVhbFRvTGFzdCIsIm5ld0FyZyIsIm5ld0FyZ3MiLCJldmVyeSIsInByb3BJc0VudW1lcmFibGUiLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJ0b09iamVjdCIsImdldFJhbmRvbVZhbHVlcyIsImNyeXB0byIsIm1zQ3J5cHRvIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5kcyIsImJ5dGVUb0hleCIsInN1YnN0ciIsImJ1ZiIsImJ0aCIsIl9jaGFpbkZ1bmN0aW9uMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QyIiwiX3Byb3BUeXBlczIiLCJfQ2hpbGRNYXBwaW5nIiwiVHJhbnNpdGlvbkdyb3VwIiwiX1JlYWN0JENvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwicGVyZm9ybUFwcGVhciIsImNvbXBvbmVudCIsImN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzIiwiY29tcG9uZW50V2lsbEFwcGVhciIsIl9oYW5kbGVEb25lQXBwZWFyaW5nIiwiY29tcG9uZW50RGlkQXBwZWFyIiwiY3VycmVudENoaWxkTWFwcGluZyIsImdldENoaWxkTWFwcGluZyIsInBlcmZvcm1MZWF2ZSIsInBlcmZvcm1FbnRlciIsImNvbXBvbmVudFdpbGxFbnRlciIsIl9oYW5kbGVEb25lRW50ZXJpbmciLCJjb21wb25lbnREaWRFbnRlciIsImNvbXBvbmVudFdpbGxMZWF2ZSIsIl9oYW5kbGVEb25lTGVhdmluZyIsImNvbXBvbmVudERpZExlYXZlIiwia2V5c1RvRW50ZXIiLCJuZXdDaGlsZHJlbiIsImNoaWxkUmVmcyIsIl9pbmhlcml0cyIsImtleXNUb0xlYXZlIiwiaW5pdGlhbENoaWxkTWFwcGluZyIsIm5leHRQcm9wcyIsIm5leHRDaGlsZE1hcHBpbmciLCJwcmV2Q2hpbGRNYXBwaW5nIiwibWVyZ2VDaGlsZE1hcHBpbmdzIiwiaGFzUHJldiIsImhhc05leHQiLCJfdGhpczMiLCJjaGlsZHJlblRvUmVuZGVyIiwiX2xvb3AiLCJjaGlsZCIsImlzQ2FsbGJhY2tSZWYiLCJmYWN0b3J5Q2hpbGQiLCJjaGlsZEZhY3RvcnkiLCJjbG9uZUVsZW1lbnQiLCJ0cmFuc2l0aW9uTGVhdmUiLCJ0cmFuc2l0aW9uTmFtZSIsInRyYW5zaXRpb25BcHBlYXIiLCJ0cmFuc2l0aW9uRW50ZXIiLCJ0cmFuc2l0aW9uTGVhdmVUaW1lb3V0IiwidHJhbnNpdGlvbkVudGVyVGltZW91dCIsInRyYW5zaXRpb25BcHBlYXJUaW1lb3V0IiwiX2RlZmF1bHQiLCJuYW1lU2hhcGUiLCJ0cmFuc2l0aW9uVGltZW91dCIsInRyYW5zaXRpb25UeXBlIiwidGltZW91dFByb3BOYW1lIiwiZW5hYmxlZFByb3BOYW1lIiwiZW50ZXIiLCJsZWF2ZSIsImVudGVyQWN0aXZlIiwibGVhdmVBY3RpdmUiLCJhcHBlYXIiLCJhcHBlYXJBY3RpdmUiLCJiZWZvcmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsInRyZWVVdGlsIiwiVHJlZSIsImFzc2lnbkludGVybmFsUHJvcGVydGllcyIsInJkM3RTdmdDbGFzc05hbWUiLCJ2NCIsInJkM3RHQ2xhc3NOYW1lIiwiaW50ZXJuYWxTdGF0ZSIsImluaXRpYWxSZW5kZXIiLCJ0YXJnZXROb2RlIiwiaXNUcmFuc2l0aW9uaW5nIiwiZDMiLCJzY2FsZSIsInpvb20iLCJ0cmFuc2xhdGUiLCJoYW5kbGVOb2RlVG9nZ2xlIiwiZmluZE5vZGVzQnlJZCIsInBlcnNpc3QiLCJjb2xsYXBzaWJsZSIsIl9jb2xsYXBzZWQiLCJleHBhbmROb2RlIiwic2hvdWxkQ29sbGFwc2VOZWlnaGJvck5vZGVzIiwiY29sbGFwc2VOZWlnaGJvck5vZGVzIiwiY29sbGFwc2VOb2RlIiwiaGFuZGxlT25DbGlja0NiIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiaGFuZGxlT25Nb3VzZU92ZXJDYiIsIm9uTW91c2VPdmVyIiwiaGFuZGxlT25Nb3VzZU91dENiIiwib25Nb3VzZU91dCIsImNhbGN1bGF0ZUQzR2VvbWV0cnkiLCJiaW5kWm9vbUxpc3RlbmVyIiwib25VcGRhdGUiLCJzY2FsZUV4dGVudCIsInpvb21hYmxlIiwiYmVoYXZpb3IiLCJldmVudCIsIl9jaGlsZHJlbiIsImZpbmROb2Rlc0F0RGVwdGgiLCJpbml0aWFsRGVwdGgiLCJ1c2VDb2xsYXBzZURhdGEiLCJkZXB0aEZhY3RvciIsInNlcGFyYXRpb24iLCJub2RlU2l6ZSIsIm9yaWVudGF0aW9uIiwibGF5b3V0IiwidHJlZSIsInBhcmVudCIsInNpYmxpbmdzIiwibm9uU2libGluZ3MiLCJzZXRJbml0aWFsVHJlZURlcHRoIiwibGlua3MiLCJnZW5lcmF0ZVRyZWUiLCJub2RlU3ZnU2hhcGUiLCJub2RlTGFiZWxDb21wb25lbnQiLCJwYXRoRnVuYyIsInRleHRMYXlvdXQiLCJjaXJjbGVSYWRpdXMiLCJhbGxvd0ZvcmVpZ25PYmplY3RzIiwibGlua0RhdGEiLCJub2RlRGF0YSIsImF0dHJpYnV0ZXMiLCJzdWJzY3JpcHRpb25zIiwic2hhcGVQcm9wcyIsInRleHRBbmNob3IiLCJlbmFibGVUcmFuc2l0aW9ucyIsInNldFRyYW5zZm9ybSIsImluaXRpYWxTdHlsZSIsInNob3VsZE5vZGVUcmFuc2Zvcm0iLCJyZW5kZXJOb2RlRWxlbWVudCIsImNpcmNsZSIsImhhbmRsZUNsaWNrIiwiaGFuZGxlT25Nb3VzZU92ZXIiLCJoYW5kbGVPbk1vdXNlT3V0IiwiYXBwbHlUcmFuc2Zvcm0iLCJ0cmFuc2l0aW9uIiwiZHVyYXRpb24iLCJlYWNoIiwibGVhZk5vZGUiLCJub2RlU3R5bGUiLCJkeSIsIkJBU0VfTUFSR0lOIiwiZm9yZWlnbk9iamVjdFdyYXBwZXIiLCJobXIiLCJhcHBseU9wYWNpdHkiLCJsaW5rIiwic3ZnIiwiZGlhZ29uYWwiLCJwcm9qZWN0aW9uIiwibGluZSIsImludGVycG9sYXRlIiwiZHJhd0VsYm93UGF0aCIsImRyYXdTdHJhaWdodFBhdGgiLCJkcmF3RGlhZ29uYWxQYXRoIiwiZHJhd1BhdGgiLCJwYXJzZUNTViIsIlByb21pc2UiLCJjc3YiLCJwYXJzZUpTT04iLCJqc29uIiwicGFyc2VGbGF0SlNPTiIsImdlbmVyYXRlSGllcmFyY2h5IiwidG9TaGVldCIsImJsb2NrIiwiY29udGVudCIsInBhcmVudHMiLCJjb2x1bW4iLCJhdCIsImRlbGltaXRlciIsImZhY3RvcnkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4IiwiV2Via2l0TGluZUNsYW1wIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJtZW1vaXplX2Jyb3dzZXJfZXNtIiwicHJvcCIsImFhIiwiYmEiLCJjYSIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJ1cGRhdGVyIiwiZm9yY2VVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsImN1cnJlbnQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9vd25lciIsImtleVByZWZpeCIsImNvdW50IiwiPSIsIjoiLCJlYSIsImZhIiwiZGEiLCJ0b0FycmF5IiwiY3JlYXRlUmVmIiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiQ29uY3VycmVudE1vZGUiLCJQcm9maWxlciIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImhhIiwiaWEiLCJqYSIsIm9uRXJyb3IiLCJrYSIsIm1hIiwibmEiLCJvYSIsInFhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJyYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwic2EiLCJyZWdpc3RyYXRpb25OYW1lIiwidGEiLCJ1YSIsImRlcGVuZGVuY2llcyIsInZhIiwid2EiLCJ4YSIsInlhIiwiY3VycmVudFRhcmdldCIsImxhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJEYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJFYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJkaXNwYXRjaENvbmZpZyIsIlBhIiwiX3RhcmdldEluc3QiLCJRYSIsIlJhIiwiU2EiLCJUYSIsIlVhIiwiVmEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJXYSIsIlhhIiwiWWEiLCJhbmltYXRpb24iLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJjYW5jZWxCdWJibGUiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJtYiIsIm5iIiwib2IiLCJxYiIsInJiIiwiZG9jdW1lbnRNb2RlIiwic2IiLCJ0YiIsInViIiwidmIiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwid2IiLCJ4YiIsImtleUNvZGUiLCJ5YiIsImRldGFpbCIsInpiIiwiQ2IiLCJsb2NhbGUiLCJ3aGljaCIsIkFiIiwiYWx0S2V5IiwiY2hhciIsIkJiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJOYiIsIk9iIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlBiIiwibm9kZU5hbWUiLCJRYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiUmIiLCJTYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWIiLCJXYiIsImNoZWNrZWQiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwidG9VcHBlckNhc2UiLCJ4YyIsInRjIiwidWMiLCJzYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieWMiLCJ6YyIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInRhYkluZGV4IiwiRmMiLCJjaGFuZ2UiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiZGV0YWNoRXZlbnQiLCJPYyIsIlBjIiwiYXR0YWNoRXZlbnQiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJVYyIsInZpZXciLCJWYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJXYyIsImdldE1vZGlmaWVyU3RhdGUiLCJYYyIsIlljIiwiYWQiLCJiZCIsImNkIiwiZGQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImVkIiwicG9pbnRlcklkIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJqZCIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJuZCIsInNpYmxpbmciLCJtZCIsIm9kIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsInBkIiwiY2xpcGJvYXJkRGF0YSIsInFkIiwicmQiLCJjaGFyQ29kZSIsInNkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInRkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInVkIiwicmVwZWF0IiwidmQiLCJkYXRhVHJhbnNmZXIiLCJ3ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ4ZCIsInlkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsImlzSW50ZXJhY3RpdmUiLCJEZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkVkIiwiRmQiLCJHZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlRkIiwiVWQiLCJjb250ZW50RWRpdGFibGUiLCJWZCIsIldkIiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiaHRtbCIsIm1hdGhtbCIsIm5hbWVzcGFjZVVSSSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJncmlkQXJlYSIsImxpbmVDbGFtcCIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiaXMiLCJibHVyIiwiYXV0b0ZvY3VzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiZ2V0Q2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlplIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJnZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiaGYiLCJqZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwia2YiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsImxmIiwibWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIm5mIiwib2YiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJwZiIsInFmIiwicmYiLCJzZiIsInRmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJzdGFjayIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwiRmYiLCJvYnNlcnZlZEJpdHMiLCJHZiIsIkhmIiwiSWYiLCJKZiIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlVmIiwicXVldWUiLCJiYXNlVXBkYXRlIiwiVmYiLCJXZiIsIlhmIiwiZGVsZXRlIiwiYWN0aW9uIiwibGFzdCIsIk1hcCIsImNnIiwiYmciLCJkZyIsImVnIiwiWmYiLCJkZXN0cm95IiwiaW5wdXRzIiwiJGYiLCJhZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsInRhZ05hbWUiLCJsZyIsIm1nIiwibmciLCJwZyIsInFnIiwicmciLCJzZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJ0ZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInVnIiwiY29udGV4dFR5cGUiLCJyZWFkQ29udGV4dCIsInZnIiwid2ciLCJ4ZyIsInlnIiwiX3N0cmluZ1JlZiIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIlNnIiwiVGciLCJVZyIsIlZnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiV2ciLCJwZW5kaW5nQ29udGV4dCIsIlhnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiWWciLCJ0aGVuIiwib2ciLCJoeWRyYXRlIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsIm9uY2xpY2siLCJkaCIsIldlYWtTZXQiLCJlaCIsImloIiwiamgiLCJraCIsIm1oIiwibmgiLCJvaCIsInBoIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInFoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsImxoIiwiV2giLCJOaCIsImhhcyIsImFkZCIsInNoIiwiV2Vha01hcCIsInRoIiwidWgiLCJ2aCIsImNvbXBvbmVudERpZENhdGNoIiwid2giLCJjb21wb25lbnRTdGFjayIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiT2giLCJjcmVhdGVFbGVtZW50TlMiLCJQaCIsIlFoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiUmgiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsIlNoIiwiZmluaXNoZWRXb3JrIiwiVGgiLCJVaCIsIlZoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJnaSIsImhpIiwidW5zdGFibGVfbm93IiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJuaSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwicGkiLCJxaSIsIm5leHRTY2hlZHVsZWRSb290IiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsInVpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJwYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJ6ZyIsInlpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJTZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwicGEiLCJUYiIsIlpjIiwiTWkiLCJmaCIsImdoIiwiTmkiLCIkYyIsImhoIiwidmkiLCJ3aSIsInhpIiwiemkiLCJBaSIsIkJpIiwiRGkiLCJfcm9vdCIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiRWkiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiRmkiLCJfaW50ZXJuYWxSb290IiwiR2kiLCJJaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIkhpIiwiSmkiLCJDaSIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJMaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiS2kiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJjcmVhdGVSb290IiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiT2kiLCJQaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18iLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyIsImQzX2FycmF5U2xpY2UiLCJkM19hcnJheSIsImxpc3QiLCJkM19kb2N1bWVudCIsImQzX2RvY3VtZW50RWxlbWVudCIsImQzX3dpbmRvdyIsImQzX2VsZW1lbnRfcHJvdG90eXBlIiwiRWxlbWVudCIsImQzX2VsZW1lbnRfc2V0QXR0cmlidXRlIiwiZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGVOUyIsImQzX3N0eWxlX3Byb3RvdHlwZSIsIkNTU1N0eWxlRGVjbGFyYXRpb24iLCJkM19zdHlsZV9zZXRQcm9wZXJ0eSIsInNwYWNlIiwibG9jYWwiLCJwcmlvcml0eSIsImQzX2FzY2VuZGluZyIsImQzX251bWJlciIsImQzX251bWVyaWMiLCJkM19iaXNlY3RvciIsImxvIiwibWlkIiwiYXNjZW5kaW5nIiwiZGVzY2VuZGluZyIsImV4dGVudCIsInN1bSIsIm1lYW4iLCJxdWFudGlsZSIsIm1lZGlhbiIsIm51bWJlcnMiLCJ2YXJpYW5jZSIsImRldmlhdGlvbiIsInNxcnQiLCJkM19iaXNlY3QiLCJkM190cmFuc3Bvc2VMZW5ndGgiLCJiaXNlY3RMZWZ0IiwiYmlzZWN0IiwiYmlzZWN0UmlnaHQiLCJiaXNlY3RvciIsInNodWZmbGUiLCJpMCIsImkxIiwicGVybXV0ZSIsImluZGV4ZXMiLCJwZXJtdXRlcyIsInBhaXJzIiwicDEiLCJ0cmFuc3Bvc2UiLCJtYXRyaXgiLCJyb3ciLCJ6aXAiLCJtZXJnZSIsImFycmF5cyIsIm1lcmdlZCIsImFicyIsImQzX2NsYXNzIiwiY3RvciIsInByb3BlcnRpZXMiLCJkM19NYXAiLCJzdG9wIiwic3RlcCIsIkluZmluaXR5IiwiZDNfcmFuZ2VfaW50ZWdlclNjYWxlIiwiZDNfbWFwX3Byb3RvIiwiZDNfbWFwX3plcm8iLCJkM19tYXBfZXNjYXBlIiwiZDNfbWFwX3VuZXNjYXBlIiwiZDNfbWFwX2hhcyIsImQzX21hcF9yZW1vdmUiLCJkM19tYXBfa2V5cyIsImQzX21hcF9zaXplIiwiZDNfbWFwX2VtcHR5IiwiZDNfU2V0IiwiZDNfaWRlbnRpdHkiLCJkM19yZWJpbmQiLCJtZXRob2QiLCJkM192ZW5kb3JTeW1ib2wiLCJkM192ZW5kb3JQcmVmaXhlcyIsInByZWZpeE5hbWUiLCJlbXB0eSIsIm5lc3QiLCJzb3J0VmFsdWVzIiwicm9sbHVwIiwibWFwVHlwZSIsImtleVZhbHVlIiwic2V0dGVyIiwidmFsdWVzQnlLZXkiLCJzb3J0S2V5Iiwia2V5TWFwIiwicmViaW5kIiwiZDNfbm9vcCIsImQzX2Rpc3BhdGNoIiwiZDNfZGlzcGF0Y2hfZXZlbnQiLCJsaXN0ZW5lckJ5TmFtZSIsImQzX2V2ZW50UHJldmVudERlZmF1bHQiLCJkM19ldmVudFNvdXJjZSIsInNvdXJjZUV2ZW50IiwiZDNfZXZlbnREaXNwYXRjaCIsInRoaXoiLCJhcmd1bWVudHoiLCJlMSIsImUwIiwicmVxdW90ZSIsImQzX3JlcXVvdGVfcmUiLCJkM19zdWJjbGFzcyIsImQzX3NlbGVjdGlvbiIsImdyb3VwcyIsImQzX3NlbGVjdGlvblByb3RvdHlwZSIsImQzX3NlbGVjdCIsImQzX3NlbGVjdEFsbCIsImQzX3NlbGVjdE1hdGNoZXMiLCJkM19zZWxlY3RNYXRjaGVyIiwibWF0Y2hlcyIsIlNpenpsZSIsIm1hdGNoZXNTZWxlY3RvciIsInNlbGVjdGlvbiIsImQzX3NlbGVjdGlvbl9zZWxlY3RvciIsImQzX3NlbGVjdGlvbl9zZWxlY3RvckFsbCIsInN1Ymdyb3VwIiwic3Vibm9kZSIsImdyb3VwIiwic3ViZ3JvdXBzIiwiX19kYXRhX18iLCJzZWxlY3RBbGwiLCJkM19uc1hodG1sIiwiZDNfbnNQcmVmaXgiLCJ4aHRtbCIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJkM19zZWxlY3Rpb25fYXR0ciIsInF1YWxpZnkiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsImQzX2NvbGxhcHNlIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWRSZSIsImQzX3NlbGVjdGlvbl9jbGFzc2VzIiwiZDNfc2VsZWN0aW9uX2NsYXNzZWQiLCJkM19zZWxlY3Rpb25fY2xhc3NlZE5hbWUiLCJjbGFzc0xpc3QiLCJsYXN0SW5kZXgiLCJkM19zZWxlY3Rpb25fc3R5bGUiLCJyZW1vdmVQcm9wZXJ0eSIsImQzX3NlbGVjdGlvbl9wcm9wZXJ0eSIsImQzX3NlbGVjdGlvbl9jcmVhdG9yIiwiZDNfc2VsZWN0aW9uUmVtb3ZlIiwiZDNfc2VsZWN0aW9uX2RhdGFOb2RlIiwiZDNfc2VsZWN0aW9uX2ZpbHRlciIsImQzX3NlbGVjdGlvbl9lYWNoIiwiZDNfc2VsZWN0aW9uX2VudGVyIiwiZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlIiwiZ2V0QXR0cmlidXRlTlMiLCJjbGFzc2VkIiwiYXBwZW5kIiwiaW5zZXJ0IiwiZ3JvdXBEYXRhIiwibjAiLCJ1cGRhdGVOb2RlcyIsImVudGVyTm9kZXMiLCJleGl0Tm9kZXMiLCJub2RlQnlLZXlWYWx1ZSIsImtleVZhbHVlcyIsInVwZGF0ZSIsImV4aXQiLCJkYXR1bSIsImNvbXBhcmF0b3IiLCJhcmdzIiwiZDNfc2VsZWN0aW9uX29uIiwiY2FwdHVyZSIsIndyYXAiLCJkM19zZWxlY3Rpb25fb25MaXN0ZW5lciIsImQzX3NlbGVjdGlvbl9vbkZpbHRlcnMiLCJvblJlbW92ZSIsImQzX3NlbGVjdGlvbl9vbkZpbHRlciIsInVwZ3JvdXAiLCJqMCIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicmVsYXRlZCIsImQzX2V2ZW50X2RyYWdTZWxlY3QiLCJkM19ldmVudF9kcmFnSWQiLCJkM19ldmVudF9kcmFnU3VwcHJlc3MiLCJjbGljayIsInN1cHByZXNzQ2xpY2siLCJvZmYiLCJtb3VzZSIsImNvbnRhaW5lciIsImQzX21vdXNlUG9pbnQiLCJkM19tb3VzZV9idWc0NDA4MyIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm93bmVyU1ZHRWxlbWVudCIsImNyZWF0ZVNWR1BvaW50IiwicG9pbnQiLCJzY3JvbGxYIiwic2Nyb2xsWSIsImN0bSIsImdldFNjcmVlbkNUTSIsIm1hdHJpeFRyYW5zZm9ybSIsImludmVyc2UiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsImQzX2JlaGF2aW9yX2RyYWdUb3VjaElkIiwiaWRlbnRpZmllciIsInRvdWNoIiwiZHJhZyIsIm9yaWdpbiIsIm1vdXNlZG93biIsImRyYWdzdGFydCIsInRvdWNoc3RhcnQiLCJzdWJqZWN0IiwibW92ZSIsImRyYWdPZmZzZXQiLCJjb3JyZXNwb25kaW5nRWxlbWVudCIsImRyYWdnZWQiLCJkcmFnSWQiLCJkcmFnTmFtZSIsImRyYWdTdWJqZWN0IiwiZHgiLCJwb3NpdGlvbjEiLCJwb3NpdGlvbjAiLCJkcmFnUmVzdG9yZSIsIs61IiwizrUyIiwiz4AiLCJQSSIsIs+EIiwiz4TOtSIsImhhbGbPgCIsImQzX3JhZGlhbnMiLCJkM19kZWdyZWVzIiwiZDNfc2duIiwiZDNfY3Jvc3MyZCIsImQzX2Fjb3MiLCJhY29zIiwiZDNfYXNpbiIsImFzaW4iLCJkM19jb3NoIiwiZXhwIiwiZDNfaGF2ZXJzaW4iLCJzaW4iLCLPgSIsIlNRUlQyIiwiaW50ZXJwb2xhdGVab29tIiwicDAiLCJ1eDAiLCJ1eTAiLCJ3MCIsInV4MSIsInV5MSIsIncxIiwiZDIiLCJsb2ciLCJkMSIsImIwIiwiYjEiLCJyMCIsInIxIiwiY29zaHIwIiwiZDNfc2luaCIsInRyYW5zbGF0ZTAiLCJjZW50ZXIwIiwiY2VudGVyIiwibW91c2V3aGVlbFRpbWVyIiwidG91Y2h0aW1lIiwieDAiLCJ4MSIsInkwIiwieTEiLCJkM19iZWhhdmlvcl96b29tSW5maW5pdHkiLCJ6b29taW5nIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsIm1vdXNlZG93bmVkIiwiZDNfYmVoYXZpb3Jfem9vbVdoZWVsIiwibW91c2V3aGVlbGVkIiwiZGJsY2xpY2tlZCIsInRvdWNoc3RhcnRlZCIsInNjYWxlVG8iLCJ0cmFuc2xhdGVUbyIsInpvb21UbyIsInRoYXQiLCJfX2NoYXJ0X18iLCJwb3ciLCJyZXNjYWxlIiwiZG9tYWluIiwiaW52ZXJ0Iiwiem9vbXN0YXJ0ZWQiLCJ6b29tZWQiLCJ6b29tZW5kZWQiLCJsb2NhdGlvbjAiLCJkM19zZWxlY3Rpb25faW50ZXJydXB0Iiwic2NhbGUwIiwibG9jYXRpb25zMCIsImRpc3RhbmNlMCIsInpvb21OYW1lIiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJ0YXJnZXRzIiwicmVsb2NhdGUiLCJzdGFydGVkIiwibW92ZWQiLCJlbmRlZCIsImNoYW5nZWQiLCJMTjIiLCJsMCIsImwxIiwiZGlzdGFuY2UxIiwic2NhbGUxIiwiZDNfYmVoYXZpb3Jfem9vbURlbHRhIiwidmlldzEiLCJkM190cmFuc2l0aW9uSW5oZXJpdElkIiwidHdlZW4iLCJjeCIsImN5IiwiY29weSIsImQzX2NvbG9yIiwiZDNfaHNsIiwiZDNfcmdiX3BhcnNlIiwiZDNfcmdiX2hzbCIsImQzX2hzbFByb3RvdHlwZSIsImQzX2hzbF9yZ2IiLCJtMSIsIm0yIiwidnYiLCJkM19yZ2IiLCJkM19oY2wiLCJkM19sYWJfaGNsIiwiZDNfbGFiIiwiZDNfcmdiX2xhYiIsImJyaWdodGVyIiwiZGFya2VyIiwiaGNsIiwiZDNfaGNsUHJvdG90eXBlIiwiZDNfaGNsX2xhYiIsImNvcyIsImQzX2xhYl9LIiwibGFiIiwiZDNfbGFiX1giLCJkM19sYWJfWSIsImQzX2xhYl9aIiwiZDNfbGFiUHJvdG90eXBlIiwiZDNfbGFiX3JnYiIsImQzX3h5el9yZ2IiLCJkM19sYWJfeHl6IiwiYXRhbjIiLCJkM194eXpfbGFiIiwiZDNfcmdiTnVtYmVyIiwiZDNfcmdiU3RyaW5nIiwiZDNfcmdiUHJvdG90eXBlIiwiZDNfcmdiX2hleCIsImZvcm1hdCIsImQzX3JnYl9wYXJzZU51bWJlciIsImQzX3JnYl9uYW1lcyIsImQzX3JnYl94eXoiLCJhbGljZWJsdWUiLCJhbnRpcXVld2hpdGUiLCJhcXVhIiwiYXF1YW1hcmluZSIsImF6dXJlIiwiYmVpZ2UiLCJiaXNxdWUiLCJibGFuY2hlZGFsbW9uZCIsImJsdWUiLCJibHVldmlvbGV0IiwiYnJvd24iLCJidXJseXdvb2QiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGVzbW9rZSIsInllbGxvdyIsInllbGxvd2dyZWVuIiwiZDNfZnVuY3RvciIsImQzX3hoclR5cGUiLCJyZXNwb25zZSIsIm1pbWVUeXBlIiwiZDNfeGhyIiwieGhyIiwiaGVhZGVycyIsInJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsInJlc3BvbnNlVHlwZSIsInJlc3BvbmQiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJkM194aHJIYXNSZXNwb25zZSIsImxvYWQiLCJYRG9tYWluUmVxdWVzdCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwib25wcm9ncmVzcyIsInByb2dyZXNzIiwiaGVhZGVyIiwic2VuZCIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwiYmVmb3Jlc2VuZCIsImFib3J0IiwiZDNfeGhyX2ZpeENhbGxiYWNrIiwiZnVuY3RvciIsImRzdiIsInJlRm9ybWF0IiwiZGVsaW1pdGVyQ29kZSIsInR5cGVkUmVzcG9uc2UiLCJmb3JtYXRSb3ciLCJmb3JtYXRWYWx1ZSIsInBhcnNlUm93cyIsImVvbCIsIkVPTCIsIkVPRiIsInJvd3MiLCJ0b2tlbiIsImZvcm1hdFJvd3MiLCJmaWVsZFNldCIsImZpZWxkcyIsImZpZWxkIiwidHN2IiwiZDNfdGltZXJfcXVldWVIZWFkIiwiZDNfdGltZXJfcXVldWVUYWlsIiwiZDNfdGltZXJfaW50ZXJ2YWwiLCJkM190aW1lcl90aW1lb3V0IiwiZDNfdGltZXJfZnJhbWUiLCJkM190aW1lciIsImRlbGF5IiwidGltZXIiLCJkM190aW1lcl9zdGVwIiwiZDNfdGltZXJfbWFyayIsImQzX3RpbWVyX3N3ZWVwIiwiaXNGaW5pdGUiLCJ0MCIsInQxIiwiZDNfZm9ybWF0X3ByZWNpc2lvbiIsIkxOMTAiLCJmbHVzaCIsImQzX2Zvcm1hdFByZWZpeGVzIiwiZDNfbG9jYWxlX251bWJlckZvcm1hdCIsImxvY2FsZV9kZWNpbWFsIiwiZGVjaW1hbCIsImxvY2FsZV90aG91c2FuZHMiLCJ0aG91c2FuZHMiLCJsb2NhbGVfZ3JvdXBpbmciLCJncm91cGluZyIsImxvY2FsZV9jdXJyZW5jeSIsImN1cnJlbmN5IiwiZm9ybWF0R3JvdXAiLCJzcGVjaWZpZXIiLCJkM19mb3JtYXRfcmUiLCJhbGlnbiIsInNpZ24iLCJ6ZmlsbCIsImNvbW1hIiwicHJlY2lzaW9uIiwic3VmZml4IiwiZXhwb25lbnQiLCJkM19mb3JtYXRfdHlwZXMiLCJkM19mb3JtYXRfdHlwZURlZmF1bHQiLCJ6Y29tbWEiLCJmdWxsU3VmZml4IiwibmVnYXRpdmUiLCJ1bml0IiwiZm9ybWF0UHJlZml4IiwiYWZ0ZXIiLCJ0b1ByZWNpc2lvbiIsInRvRXhwb25lbnRpYWwiLCJkM190aW1lIiwiZDNfZGF0ZSIsImQzX2RhdGVfdXRjIiwiVVRDIiwiZ2V0RGF0ZSIsImdldFVUQ0RhdGUiLCJnZXREYXkiLCJnZXRVVENEYXkiLCJnZXRGdWxsWWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0SG91cnMiLCJnZXRVVENIb3VycyIsImdldE1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldE1pbnV0ZXMiLCJnZXRVVENNaW51dGVzIiwiZ2V0TW9udGgiLCJnZXRVVENNb250aCIsImdldFNlY29uZHMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VGltZSIsImdldFRpbWV6b25lT2Zmc2V0Iiwic2V0RGF0ZSIsImQzX3RpbWVfcHJvdG90eXBlIiwic2V0VVRDRGF0ZSIsInNldERheSIsInNldFVUQ0RheSIsInNldEZ1bGxZZWFyIiwic2V0VVRDRnVsbFllYXIiLCJzZXRIb3VycyIsInNldFVUQ0hvdXJzIiwic2V0TWlsbGlzZWNvbmRzIiwic2V0VVRDTWlsbGlzZWNvbmRzIiwic2V0TWludXRlcyIsInNldFVUQ01pbnV0ZXMiLCJzZXRNb250aCIsInNldFVUQ01vbnRoIiwic2V0U2Vjb25kcyIsInNldFVUQ1NlY29uZHMiLCJzZXRUaW1lIiwiZDNfdGltZV9pbnRlcnZhbCIsImQwIiwiZHQiLCJ0aW1lcyIsInV0YyIsImQzX3RpbWVfaW50ZXJ2YWxfdXRjIiwiZDNfbG9jYWxlX3RpbWVGb3JtYXQiLCJsb2NhbGVfZGF0ZVRpbWUiLCJkYXRlVGltZSIsImxvY2FsZV9kYXRlIiwibG9jYWxlX3RpbWUiLCJsb2NhbGVfcGVyaW9kcyIsInBlcmlvZHMiLCJsb2NhbGVfZGF5cyIsImRheXMiLCJsb2NhbGVfc2hvcnREYXlzIiwic2hvcnREYXlzIiwibG9jYWxlX21vbnRocyIsIm1vbnRocyIsImxvY2FsZV9zaG9ydE1vbnRocyIsInNob3J0TW9udGhzIiwiZDNfdGltZV9mb3JtYXQiLCJ0ZW1wbGF0ZSIsImQzX3RpbWVfZm9ybWF0UGFkcyIsImQzX3RpbWVfZm9ybWF0cyIsImQzX3RpbWVfcGFyc2UiLCJsb2NhbFoiLCJkM190aW1lX3BhcnNlcnMiLCJtdWx0aSIsImQzX3RpbWVfZm9ybWF0TXVsdGkiLCJkM190aW1lX3BlcmlvZExvb2t1cCIsImQzX3RpbWVfZGF5UmUiLCJkM190aW1lX2Zvcm1hdFJlIiwiZDNfdGltZV9kYXlMb29rdXAiLCJkM190aW1lX2Zvcm1hdExvb2t1cCIsImQzX3RpbWVfZGF5QWJicmV2UmUiLCJkM190aW1lX2RheUFiYnJldkxvb2t1cCIsImQzX3RpbWVfbW9udGhSZSIsImQzX3RpbWVfbW9udGhMb29rdXAiLCJkM190aW1lX21vbnRoQWJicmV2UmUiLCJkM190aW1lX21vbnRoQWJicmV2TG9va3VwIiwiZDNfdGltZV9mb3JtYXRQYWQiLCJkYXlPZlllYXIiLCJzdW5kYXlPZlllYXIiLCJtb25kYXlPZlllYXIiLCJkM190aW1lX3pvbmUiLCIlIiwiZDNfdGltZV9wYXJzZURheSIsImQzX3RpbWVfcGFyc2VIb3VyMjQiLCJkM190aW1lX3BhcnNlRGF5T2ZZZWFyIiwiZDNfdGltZV9wYXJzZU1pbGxpc2Vjb25kcyIsImQzX3RpbWVfcGFyc2VNb250aE51bWJlciIsImQzX3RpbWVfcGFyc2VNaW51dGVzIiwiZDNfdGltZV9wYXJzZVNlY29uZHMiLCJkM190aW1lX3BhcnNlV2Vla051bWJlclN1bmRheSIsImQzX3RpbWVfcGFyc2VXZWVrZGF5TnVtYmVyIiwiZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJNb25kYXkiLCJkM190aW1lX3BhcnNlWWVhciIsImQzX3RpbWVfcGFyc2VGdWxsWWVhciIsImQzX3RpbWVfcGFyc2Vab25lIiwiZDNfdGltZV9wYXJzZUxpdGVyYWxQZXJjZW50IiwieWVhcnMiLCJpbnRlcnZhbCIsInN1bmRheSIsIndlZWtzIiwid2Vla09mWWVhciIsIi0iLCIwIiwiZDNfdGltZV9udW1iZXJSZSIsImQzX3RpbWVfcGVyY2VudFJlIiwienMiLCJ6bSIsImZvcm1hdHMiLCJudW1iZXJGb3JtYXQiLCJ0aW1lRm9ybWF0IiwiZDNfbG9jYWxlX2VuVVMiLCJkM19hZGRlciIsImdlbyIsImQzX2FkZGVyU3VtIiwiZDNfYWRkZXJUZW1wIiwiYnYiLCJhdiIsImQzX2dlb19zdHJlYW1HZW9tZXRyeSIsImdlb21ldHJ5IiwiZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZSIsInN0cmVhbSIsImQzX2dlb19zdHJlYW1PYmplY3RUeXBlIiwiRmVhdHVyZSIsImZlYXR1cmUiLCJGZWF0dXJlQ29sbGVjdGlvbiIsImZlYXR1cmVzIiwiU3BoZXJlIiwic3BoZXJlIiwiUG9pbnQiLCJjb29yZGluYXRlcyIsIk11bHRpUG9pbnQiLCJMaW5lU3RyaW5nIiwiZDNfZ2VvX3N0cmVhbUxpbmUiLCJNdWx0aUxpbmVTdHJpbmciLCJQb2x5Z29uIiwiZDNfZ2VvX3N0cmVhbVBvbHlnb24iLCJNdWx0aVBvbHlnb24iLCJHZW9tZXRyeUNvbGxlY3Rpb24iLCJnZW9tZXRyaWVzIiwiY2xvc2VkIiwiY29vcmRpbmF0ZSIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJwb2x5Z29uU3RhcnQiLCJwb2x5Z29uRW5kIiwiZDNfZ2VvX2FyZWFTdW0iLCJkM19nZW9fYXJlYSIsImQzX2dlb19jZW50cm9pZFcwIiwiZDNfZ2VvX2NlbnRyb2lkVzEiLCJkM19nZW9fY2VudHJvaWRYMCIsImQzX2dlb19jZW50cm9pZFkwIiwiZDNfZ2VvX2NlbnRyb2lkWjAiLCJkM19nZW9fY2VudHJvaWRYMSIsImQzX2dlb19jZW50cm9pZFkxIiwiZDNfZ2VvX2NlbnRyb2lkWjEiLCJkM19nZW9fY2VudHJvaWRYMiIsImQzX2dlb19jZW50cm9pZFkyIiwiZDNfZ2VvX2NlbnRyb2lkWjIiLCJkM19nZW9fYXJlYVJpbmdTdW0iLCJkM19nZW9fYXJlYVJpbmdTdGFydCIsIs67MDAiLCLPhjAwIiwizrswIiwiY29zz4YwIiwic2luz4YwIiwibmV4dFBvaW50IiwizrsiLCLPhiIsImTOuyIsInNkzrsiLCJhZM67IiwiY29zz4YiLCJzaW7PhiIsImQzX2dlb19jYXJ0ZXNpYW4iLCJzcGhlcmljYWwiLCJkM19nZW9fY2FydGVzaWFuRG90IiwiZDNfZ2VvX2NhcnRlc2lhbkNyb3NzIiwiZDNfZ2VvX2NhcnRlc2lhbkFkZCIsImQzX2dlb19jYXJ0ZXNpYW5TY2FsZSIsInZlY3RvciIsImQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUiLCJkM19nZW9fc3BoZXJpY2FsIiwiY2FydGVzaWFuIiwiZDNfZ2VvX3NwaGVyaWNhbEVxdWFsIiwiYm91bmRzIiwiz4YwIiwizrsxIiwiz4YxIiwizrtfIiwizrtfXyIsIs+GX18iLCJkzrtTdW0iLCJyYW5nZXMiLCJib3VuZCIsInJpbmdQb2ludCIsInJpbmdTdGFydCIsInJpbmdFbmQiLCJsaW5lUG9pbnQiLCJub3JtYWwiLCJpbmZsZWN0aW9uIiwizrtpIiwiYW50aW1lcmlkaWFuIiwiz4ZpIiwiYW5nbGUiLCJjb21wYXJlUmFuZ2VzIiwid2l0aGluUmFuZ2UiLCJiZXN0IiwiY2VudHJvaWQiLCJkM19nZW9fY2VudHJvaWQiLCJkM19nZW9fY2VudHJvaWRQb2ludCIsImQzX2dlb19jZW50cm9pZExpbmVTdGFydCIsImQzX2dlb19jZW50cm9pZExpbmVFbmQiLCJkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQiLCJkM19nZW9fY2VudHJvaWRQb2ludFhZWiIsInowIiwiY3oiLCJkM19nZW9fY29tcG9zZSIsImNvbXBvc2UiLCJkM190cnVlIiwiZDNfZ2VvX2NsaXBQb2x5Z29uIiwic2VnbWVudHMiLCJjbGlwU3RhcnRJbnNpZGUiLCJjbGlwIiwic2VnbWVudCIsImQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbiIsImQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhciIsImVudHJ5IiwicG9pbnRzIiwiaXNTdWJqZWN0Iiwib3RoZXIiLCJkM19nZW9fY2xpcCIsInBvaW50VmlzaWJsZSIsImNsaXBMaW5lIiwiY2xpcFN0YXJ0Iiwicm90YXRlIiwicm90YXRlZENsaXBTdGFydCIsInBvaW50UmluZyIsInBvbHlnb24iLCJtZXJpZGlhbiIsInBhcmFsbGVsIiwibWVyaWRpYW5Ob3JtYWwiLCJwb2xhckFuZ2xlIiwid2luZGluZyIsInJpbmciLCJwb2ludDAiLCJhcmMiLCJpbnRlcnNlY3Rpb24iLCLPhmFyYyIsImQzX2dlb19wb2ludEluUG9seWdvbiIsInBvbHlnb25TdGFydGVkIiwiZDNfZ2VvX2NsaXBTb3J0IiwicG9pbnRMaW5lIiwiYnVmZmVyIiwiZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lciIsInJpbmdMaXN0ZW5lciIsImNsZWFuIiwicmluZ1NlZ21lbnRzIiwiZDNfZ2VvX2NsaXBTZWdtZW50TGVuZ3RoMSIsImxpbmVzIiwicmVqb2luIiwiZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4iLCJzzrswIiwic867MSIsImNvc8+GMSIsInNpbs67MF/OuzEiLCJhdGFuIiwiZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QiLCJkaXJlY3Rpb24iLCJkM19nZW9tX2NsaXBMaW5lIiwiYXgiLCJheSIsImQzX2dlb19jbGlwRXh0ZW50TUFYIiwiZDNfZ2VvX2NsaXBFeHRlbnQiLCJ4X18iLCJ5X18iLCJ2X18iLCJ4XyIsInlfIiwidl8iLCJmaXJzdCIsImxpc3RlbmVyXyIsImJ1ZmZlckxpc3RlbmVyIiwid24iLCJpbnNpZGVQb2x5Z29uIiwiaW5zaWRlIiwidmlzaWJsZSIsImExIiwiY29ybmVyIiwiY29tcGFyZVBvaW50cyIsImQzX2dlb19jb25pYyIsInByb2plY3RBdCIsImQzX2dlb19wcm9qZWN0aW9uTXV0YXRvciIsInBhcmFsbGVscyIsImQzX2dlb19jb25pY0VxdWFsQXJlYSIsIs+BMCIsImZvcndhcmQiLCLPgTBfeSIsImNsaXBFeHRlbnQiLCJvdXRwdXQiLCJ2YWxpZCIsImNvbmljRXF1YWxBcmVhIiwicmF3IiwiYWxiZXJzIiwiYWxiZXJzVXNhIiwibG93ZXI0OFBvaW50IiwiYWxhc2thUG9pbnQiLCJoYXdhaWlQb2ludCIsImxvd2VyNDgiLCJhbGFza2EiLCJoYXdhaWkiLCJwb2ludFN0cmVhbSIsImxvd2VyNDhTdHJlYW0iLCJhbGFza2FTdHJlYW0iLCJoYXdhaWlTdHJlYW0iLCJkM19nZW9fcGF0aEFyZWFTdW0iLCJkM19nZW9fcGF0aEFyZWFQb2x5Z29uIiwiZDNfZ2VvX3BhdGhCb3VuZHNYMCIsImQzX2dlb19wYXRoQm91bmRzWTAiLCJkM19nZW9fcGF0aEJvdW5kc1gxIiwiZDNfZ2VvX3BhdGhCb3VuZHNZMSIsImQzX2dlb19wYXRoQXJlYSIsImQzX2dlb19wYXRoQXJlYVJpbmdTdGFydCIsIngwMCIsInkwMCIsImQzX2dlb19wYXRoQm91bmRzIiwiZDNfZ2VvX3BhdGhCdWZmZXIiLCJwb2ludENpcmNsZSIsImQzX2dlb19wYXRoQnVmZmVyQ2lyY2xlIiwicG9pbnRMaW5lU3RhcnQiLCJsaW5lRW5kUG9seWdvbiIsInBvaW50UmFkaXVzIiwicmFkaXVzIiwiZDNfZ2VvX2xlbmd0aFN1bSIsImQzX2dlb19wYXRoQ2VudHJvaWQiLCJkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQiLCJkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0IiwiZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQiLCJkM19nZW9fcGF0aENlbnRyb2lkUmluZ1N0YXJ0IiwiZDNfZ2VvX3BhdGhDb250ZXh0IiwibW92ZVRvIiwibGluZVRvIiwiY2xvc2VQYXRoIiwiZDNfZ2VvX3Jlc2FtcGxlIiwicHJvamVjdCIsIs60MiIsImNvc01pbkRpc3RhbmNlIiwibWF4RGVwdGgiLCJyZXNhbXBsZSIsImEwMCIsImIwMCIsImMwMCIsImEwIiwiYzAiLCJyZXNhbXBsZUxpbmVUbyIsImQzX2dlb190cmFuc2Zvcm1Qb2ludCIsImMxIiwiz4YyIiwizrsyIiwieDIiLCJ5MiIsImR4MiIsImR5MiIsImR6IiwiZDNfZ2VvX3RyYW5zZm9ybSIsImQzX2dlb19wcm9qZWN0aW9uIiwicHJvamVjdFJvdGF0ZSIsIs60eCIsIs60eSIsInByb2plY3RSZXNhbXBsZSIsIs60zrsiLCLOtM+GIiwizrTOsyIsInByZWNsaXAiLCJwb3N0Y2xpcCIsImNsaXBBbmdsZSIsImQzX2dlb19yb3RhdGlvbiIsImludmFsaWRhdGUiLCJkM19nZW9fcHJvamVjdGlvblJhZGlhbnMiLCJjciIsInNtYWxsUmFkaXVzIiwibm90SGVtaXNwaGVyZSIsInYwIiwidjAwIiwicG9pbnQyIiwicG9pbnQxIiwiaW50ZXJzZWN0IiwiZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlIiwidHdvIiwibjEiLCJuMiIsIm4ybjIiLCJuMW4yIiwiZGV0ZXJtaW5hbnQiLCJjMiIsIm4xeG4yIiwidXUiLCJ0MiIsInBvbGFyIiwicTEiLCJkM19nZW9fY2xpcENpcmNsZSIsImQzX2dlb19lcXVpcmVjdGFuZ3VsYXIiLCJkM19nZW9faWRlbnRpdHlSb3RhdGlvbiIsImQzX2dlb19yb3RhdGlvbs67IiwiZDNfZ2VvX3JvdGF0aW9uz4bOsyIsImQzX2dlb19mb3J3YXJkUm90YXRpb27OuyIsInJvdGF0aW9uIiwiY29zzrTPhiIsInNpbs60z4YiLCJjb3POtM6zIiwic2luzrTOsyIsInNyIiwiZDNfZ2VvX2NpcmNsZUFuZ2xlIiwiZDNfZ2VvX2dyYXRpY3VsZVgiLCJkM19nZW9fZ3JhdGljdWxlWSIsImQzX3NvdXJjZSIsImQzX3RhcmdldCIsInBhdGgiLCJwcm9qZWN0U3RyZWFtIiwiY29udGV4dFN0cmVhbSIsImNhY2hlU3RyZWFtIiwibWV0aG9kcyIsInByb2plY3Rpb25NdXRhdG9yIiwiZXF1aXJlY3Rhbmd1bGFyIiwiZGlzdGFuY2UiLCLOlM67Iiwic2luzpTOuyIsImNvc86UzrsiLCJzaW7PhjEiLCJncmF0aWN1bGUiLCJYMSIsIlgwIiwiWTEiLCJZMCIsIkRYIiwiRFkiLCJvdXRsaW5lIiwibWFqb3JFeHRlbnQiLCJtaW5vckV4dGVudCIsIm1ham9yU3RlcCIsIm1pbm9yU3RlcCIsImdyZWF0QXJjIiwic291cmNlXyIsInRhcmdldF8iLCJjeTAiLCJzeTAiLCJjeTEiLCJzeTEiLCJreDAiLCJreTAiLCJreDEiLCJreTEiLCJkM19nZW9fbGVuZ3RoIiwiZDNfZ2VvX2F6aW11dGhhbCIsImF6aW11dGhhbCIsImNvc867Iiwic2luYyIsImNvc2MiLCJkM19nZW9fYXppbXV0aGFsRXF1YWxBcmVhIiwiY29zzrtjb3PPhiIsImF6aW11dGhhbEVxdWFsQXJlYSIsImQzX2dlb19hemltdXRoYWxFcXVpZGlzdGFudCIsImQzX2dlb19jb25pY0NvbmZvcm1hbCIsImQzX2dlb19tZXJjYXRvciIsImQzX2dlb19jb25pY0VxdWlkaXN0YW50IiwiYXppbXV0aGFsRXF1aWRpc3RhbnQiLCJjb25pY0NvbmZvcm1hbCIsImNvbmljRXF1aWRpc3RhbnQiLCJkM19nZW9fZ25vbW9uaWMiLCJkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uIiwiY2xpcEF1dG8iLCJnbm9tb25pYyIsIm1lcmNhdG9yIiwiZDNfZ2VvX29ydGhvZ3JhcGhpYyIsIm9ydGhvZ3JhcGhpYyIsImQzX2dlb19zdGVyZW9ncmFwaGljIiwiZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvciIsImQzX2dlb21fcG9pbnRYIiwiZDNfZ2VvbV9wb2ludFkiLCJkM19nZW9tX2h1bGxVcHBlciIsImh1bGwiLCJocyIsImQzX2dlb21faHVsbE9yZGVyIiwic3RlcmVvZ3JhcGhpYyIsInRyYW5zdmVyc2VNZXJjYXRvciIsImdlb20iLCJ2ZXJ0aWNlcyIsImZ4IiwiZnkiLCJmbGlwcGVkUG9pbnRzIiwidXBwZXIiLCJsb3dlciIsInNraXBMZWZ0Iiwic2tpcFJpZ2h0IiwiZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlIiwiZDNfZ2VvbV9wb2x5Z29uSW5zaWRlIiwiZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0IiwieDMiLCJ4MjEiLCJ4NDMiLCJ5MyIsInkyMSIsInk0MyIsImQzX2dlb21fcG9seWdvbkNsb3NlZCIsImQzX2dlb21fdm9yb25vaUVkZ2VzIiwiZDNfZ2VvbV92b3Jvbm9pQ2VsbHMiLCJkM19nZW9tX3Zvcm9ub2lCZWFjaGVzIiwiZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUiLCJkM19nZW9tX3Zvcm9ub2lDaXJjbGVzIiwiZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbCIsImQzX2dlb21fdm9yb25vaUJlYWNoIiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlIiwiZWRnZSIsInNpdGUiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaCIsImJlYWNoIiwiZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQmVhY2giLCJkM19nZW9tX3Zvcm9ub2lEZXRhY2hDaXJjbGUiLCJkM19nZW9tX3Zvcm9ub2lSZW1vdmVCZWFjaCIsInZlcnRleCIsImRpc2FwcGVhcmluZyIsImxBcmMiLCJ1bnNoaWZ0IiwickFyYyIsImlBcmMiLCJuQXJjcyIsImQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQiLCJkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlIiwiZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2giLCJkeGwiLCJkeHIiLCJkaXJlY3RyaXgiLCJkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludCIsImQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludCIsIm5ld0FyYyIsImxTaXRlIiwiYngiLCJieSIsInJTaXRlIiwicmZvY3giLCJyZm9jeSIsInBieTIiLCJsZm9jeCIsImxmb2N5IiwicGxieTIiLCJobCIsImFieTIiLCJkM19nZW9tX3Zvcm9ub2lDZWxsIiwiZWRnZXMiLCJkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyIiwiZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlIiwiY1NpdGUiLCJkM19nZW9tX3Zvcm9ub2lDb25uZWN0RWRnZSIsImZtIiwibHgiLCJseSIsInJ4IiwicnkiLCJkM19nZW9tX3Zvcm9ub2lFZGdlIiwiZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQiLCJkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0IiwiZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdCIsImQzX2dlb21fdm9yb25vaSIsInNpdGVzIiwiYmJveCIsImQzX2dlb21fdm9yb25vaVZlcnRleE9yZGVyIiwiZDNfZ2VvbV92b3Jvbm9pQ2xpcEVkZ2VzIiwiY2VsbCIsImlIYWxmRWRnZSIsImhhbGZFZGdlcyIsIm5IYWxmRWRnZXMiLCJjZWxscyIsImlDZWxsIiwicHJlcGFyZSIsImQzX2dlb21fdm9yb25vaUNsb3NlQ2VsbHMiLCJkaWFncmFtIiwiZ3JhbmRwYSIsInVuY2xlIiwidm9yb25vaSIsImQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQiLCJwb2x5Z29ucyIsInRyaWFuZ2xlcyIsInMwIiwiczEiLCJkM19nZW9tX3F1YWR0cmVlQ29tcGF0WCIsImQzX2dlb21fcXVhZHRyZWVDb21wYXRZIiwiZDNfaW50ZXJwb2xhdGVSZ2IiLCJhciIsImQzX2ludGVycG9sYXRlT2JqZWN0IiwiZDNfaW50ZXJwb2xhdGUiLCJkM19pbnRlcnBvbGF0ZU51bWJlciIsImQzX2ludGVycG9sYXRlU3RyaW5nIiwiYW0iLCJibSIsImJzIiwiZDNfaW50ZXJwb2xhdGVfbnVtYmVyQSIsImQzX2ludGVycG9sYXRlX251bWJlckIiLCJkZWxhdW5heSIsInF1YWR0cmVlIiwiY29tcGF0IiwieHMiLCJ5cyIsIngxXyIsInkxXyIsIngyXyIsInkyXyIsImxlYWYiLCJueCIsIm55IiwiaW5zZXJ0Q2hpbGQiLCJuUG9pbnQiLCJ4bSIsInltIiwiYmVsb3ciLCJyb290IiwidmlzaXQiLCJkM19nZW9tX3F1YWR0cmVlVmlzaXQiLCJzeCIsInN5IiwiZmluZCIsImNsb3Nlc3RQb2ludCIsIm1pbkRpc3RhbmNlMiIsImRpc3RhbmNlMiIsImQzX2dlb21fcXVhZHRyZWVGaW5kIiwiaW50ZXJwb2xhdGVSZ2IiLCJpbnRlcnBvbGF0ZU9iamVjdCIsImludGVycG9sYXRlTnVtYmVyIiwiaW50ZXJwb2xhdGVTdHJpbmciLCJpbnRlcnBvbGF0b3JzIiwiZDNfaW50ZXJwb2xhdGVBcnJheSIsImludGVycG9sYXRlQXJyYXkiLCJkM19lYXNlX2RlZmF1bHQiLCJkM19lYXNlIiwibGluZWFyIiwicG9seSIsInF1YWQiLCJkM19lYXNlX3F1YWQiLCJjdWJpYyIsImQzX2Vhc2VfY3ViaWMiLCJkM19lYXNlX3NpbiIsImQzX2Vhc2VfZXhwIiwiZDNfZWFzZV9jaXJjbGUiLCJlbGFzdGljIiwiYmFjayIsImJvdW5jZSIsImQzX2Vhc2VfYm91bmNlIiwiZDNfZWFzZV9tb2RlIiwiaW4iLCJvdXQiLCJkM19lYXNlX3JldmVyc2UiLCJpbi1vdXQiLCJkM19lYXNlX3JlZmxlY3QiLCJvdXQtaW4iLCJkM19lYXNlX2N1YmljSW5PdXQiLCJ0MyIsImQzX2ludGVycG9sYXRlUm91bmQiLCJkM190cmFuc2Zvcm0iLCJreCIsImQzX3RyYW5zZm9ybU5vcm1hbGl6ZSIsImt6IiwiZDNfdHJhbnNmb3JtRG90Iiwia3kiLCJza2V3IiwiZWFzZSIsImludGVycG9sYXRlSGNsIiwiYWwiLCJibCIsImludGVycG9sYXRlSHNsIiwiaW50ZXJwb2xhdGVMYWIiLCJpbnRlcnBvbGF0ZVJvdW5kIiwiYmFzZVZhbCIsImNvbnNvbGlkYXRlIiwiZDNfdHJhbnNmb3JtSWRlbnRpdHkiLCJkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcCIsImQzX2ludGVycG9sYXRlVHJhbnNmb3JtIiwiZDNfaW50ZXJwb2xhdGVUcmFuc2xhdGUiLCJkM19pbnRlcnBvbGF0ZVJvdGF0ZSIsImQzX2ludGVycG9sYXRlU2tldyIsImQzX2ludGVycG9sYXRlU2NhbGUiLCJkM191bmludGVycG9sYXRlTnVtYmVyIiwiZDNfdW5pbnRlcnBvbGF0ZUNsYW1wIiwiZDNfbGF5b3V0X2J1bmRsZVBhdGgiLCJsY2EiLCJhTm9kZXMiLCJkM19sYXlvdXRfYnVuZGxlQW5jZXN0b3JzIiwiYk5vZGVzIiwiYU5vZGUiLCJiTm9kZSIsInNoYXJlZE5vZGUiLCJkM19sYXlvdXRfYnVuZGxlTGVhc3RDb21tb25BbmNlc3RvciIsImQzX2xheW91dF9mb3JjZURyYWdzdGFydCIsImZpeGVkIiwiZDNfbGF5b3V0X2ZvcmNlRHJhZ2VuZCIsImQzX2xheW91dF9mb3JjZU1vdXNlb3ZlciIsInB4IiwicHkiLCJkM19sYXlvdXRfZm9yY2VNb3VzZW91dCIsImludGVycG9sYXRlVHJhbnNmb3JtIiwiYnVuZGxlIiwicGF0aHMiLCJjaG9yZCIsImNob3JkcyIsInNvcnRHcm91cHMiLCJzb3J0U3ViZ3JvdXBzIiwic29ydENob3JkcyIsInJlbGF5b3V0IiwiZ3JvdXBTdW1zIiwiZ3JvdXBJbmRleCIsInN1Ymdyb3VwSW5kZXgiLCJkaiIsInN1YmluZGV4Iiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwicmVzb3J0IiwiZm9yY2UiLCJhbHBoYSIsImRpc3RhbmNlcyIsInN0cmVuZ3RocyIsImNoYXJnZXMiLCJmcmljdGlvbiIsImxpbmtEaXN0YW5jZSIsImQzX2xheW91dF9mb3JjZUxpbmtEaXN0YW5jZSIsImxpbmtTdHJlbmd0aCIsImQzX2xheW91dF9mb3JjZUxpbmtTdHJlbmd0aCIsImNoYXJnZSIsImNoYXJnZURpc3RhbmNlMiIsImQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiIsImdyYXZpdHkiLCJ0aGV0YTIiLCJyZXB1bHNlIiwiZHciLCJkbiIsInBvaW50Q2hhcmdlIiwiZHJhZ21vdmUiLCJyZXN1bWUiLCJ0aWNrIiwid2VpZ2h0IiwiZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZSIsImNoYXJnZURpc3RhbmNlIiwidGhldGEiLCJuZWlnaGJvcnMiLCJkaW1lbnNpb24iLCJjYW5kaWRhdGVzIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZCIsImhpZXJhcmNoeSIsImQzX2xheW91dF9oaWVyYXJjaHlMaW5rcyIsImQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZSIsImQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyIiwibm9kZXMyIiwiZDNfbGF5b3V0X2hpZXJhcmNoeUNoaWxkcmVuIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlIiwiZDNfbGF5b3V0X2hpZXJhcmNoeVNvcnQiLCJjaGlsZHMiLCJyZXZhbHVlIiwicGFydGl0aW9uIiwicGllIiwiTnVtYmVyIiwiZDNfbGF5b3V0X3BpZVNvcnRCeVZhbHVlIiwicGFkQW5nbGUiLCJhcmNzIiwiZDNfbGF5b3V0X3N0YWNrWCIsImQzX2xheW91dF9zdGFja1kiLCJkM19sYXlvdXRfc3RhY2tPdXQiLCJkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHQiLCJkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvIiwic2VyaWVzIiwib3JkZXJzIiwib2Zmc2V0cyIsImQzX2xheW91dF9zdGFja09yZGVycyIsImQzX2xheW91dF9zdGFja09mZnNldHMiLCJpbnNpZGUtb3V0IiwiZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgiLCJzdW1zIiwiZDNfbGF5b3V0X3N0YWNrUmVkdWNlU3VtIiwidG9wcyIsImJvdHRvbXMiLCJzaWxob3VldHRlIiwid2lnZ2xlIiwiczIiLCJzMyIsIm8wIiwiZXhwYW5kIiwiemVybyIsImQzX2xheW91dF9zdGFja1N1bSIsImQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkIiwiZDNfbGF5b3V0X2hpc3RvZ3JhbVJhbmdlIiwiZDNfbGF5b3V0X3BhY2tTb3J0IiwiZDNfbGF5b3V0X3BhY2tJbnNlcnQiLCJfcGFja19uZXh0IiwiX3BhY2tfcHJldiIsImQzX2xheW91dF9wYWNrU3BsaWNlIiwiZDNfbGF5b3V0X3BhY2tJbnRlcnNlY3RzIiwiZHIiLCJkM19sYXlvdXRfcGFja1NpYmxpbmdzIiwieE1pbiIsInhNYXgiLCJ5TWluIiwieU1heCIsImQzX2xheW91dF9wYWNrTGluayIsImQzX2xheW91dF9wYWNrUGxhY2UiLCJpc2VjdCIsImQzX2xheW91dF9wYWNrVW5saW5rIiwiZDNfbGF5b3V0X3RyZWVTZXBhcmF0aW9uIiwiZDNfbGF5b3V0X3RyZWVMZWZ0IiwiZDNfbGF5b3V0X3RyZWVSaWdodCIsImQzX2xheW91dF90cmVlTW92ZSIsIndtIiwid3AiLCJkM19sYXlvdXRfdHJlZUFuY2VzdG9yIiwidmltIiwiYW5jZXN0b3IiLCJkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwiLCJkM19sYXlvdXRfdHJlZW1hcFBhZCIsImQzX3NjYWxlRXh0ZW50IiwiZDNfc2NhbGVSYW5nZSIsInJhbmdlRXh0ZW50IiwiZDNfc2NhbGVfYmlsaW5lYXIiLCJ1bmludGVycG9sYXRlIiwiZDNfc2NhbGVfbmljZSIsIm5pY2UiLCJkM19zY2FsZV9uaWNlU3RlcCIsImQzX3NjYWxlX25pY2VJZGVudGl0eSIsImhpc3RvZ3JhbSIsImZyZXF1ZW5jeSIsInZhbHVlciIsInJhbmdlciIsImJpbm5lciIsImJpbiIsImJpbnMiLCJ0aHJlc2hvbGRzIiwicGFjayIsImQzX2xheW91dF9wYWNrVHJhbnNmb3JtIiwicm9vdDAiLCJyb290MSIsIm5vZGUxIiwid3JhcFRyZWUiLCJmaXJzdFdhbGsiLCJzZWNvbmRXYWxrIiwic2l6ZU5vZGUiLCJ0eCIsImQzX2xheW91dF90cmVlU2hpZnQiLCJtaWRwb2ludCIsInZpcCIsInZvcCIsInZvbSIsInNpcCIsInNvcCIsInNpbSIsInNvbSIsImFwcG9ydGlvbiIsImNsdXN0ZXIiLCJwcmV2aW91c05vZGUiLCJkM19sYXlvdXRfY2x1c3RlclgiLCJkM19sYXlvdXRfY2x1c3RlclkiLCJkM19sYXlvdXRfY2x1c3RlckxlZnQiLCJkM19sYXlvdXRfY2x1c3RlclJpZ2h0IiwidHJlZW1hcCIsInN0aWNraWVzIiwicGFkIiwic3RpY2t5IiwicmF0aW8iLCJzcXVhcmlmeSIsInNjb3JlIiwicmVtYWluaW5nIiwid29yc3QiLCJzdGlja2lmeSIsInJtYXgiLCJybWluIiwicGFkQ29uc3RhbnQiLCLCtSIsIs+DIiwibG9nTm9ybWFsIiwiYmF0ZXMiLCJpcndpbkhhbGwiLCJkM19zY2FsZV9wb2x5bGluZWFyIiwiZDNfc2NhbGVfbGluZWFyUmViaW5kIiwiZDNfc2NhbGVfbGluZWFyTmljZSIsImQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZSIsInNwYW4iLCJkM19zY2FsZV9saW5lYXJUaWNrcyIsImQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQiLCJkM19zY2FsZV9saW5lYXJQcmVjaXNpb24iLCJkM19zY2FsZV9saW5lYXJGb3JtYXRTaWduaWZpY2FudCIsImQzX3NjYWxlX2xpbmVhckZvcm1hdFByZWNpc2lvbiIsImQzX3NjYWxlX2xpbmVhciIsImNsYW1wIiwicmFuZ2VSb3VuZCIsInRpY2tzIiwidGlja0Zvcm1hdCIsImQzX3NjYWxlX2xvZyIsInBvc2l0aXZlIiwibmljZWQiLCJkM19zY2FsZV9sb2dOaWNlTmVnYXRpdmUiLCJkM19zY2FsZV9sb2dGb3JtYXQiLCJkM19zY2FsZV9wb3dQb3ciLCJkM19zY2FsZV9wb3ciLCJwb3dwIiwicG93YiIsIm9yZGluYWwiLCJkM19zY2FsZV9vcmRpbmFsIiwicmFuZ2VCYW5kIiwic3RlcHMiLCJyYW5nZVBvaW50cyIsInJhbmdlUm91bmRQb2ludHMiLCJyYW5nZUJhbmRzIiwib3V0ZXJQYWRkaW5nIiwicmFuZ2VSb3VuZEJhbmRzIiwiY2F0ZWdvcnkxMCIsImQzX2NhdGVnb3J5MTAiLCJjYXRlZ29yeTIwIiwiZDNfY2F0ZWdvcnkyMCIsImNhdGVnb3J5MjBiIiwiZDNfY2F0ZWdvcnkyMGIiLCJjYXRlZ29yeTIwYyIsImQzX2NhdGVnb3J5MjBjIiwiZDNfemVybyIsImQzX3NjYWxlX3F1YW50aWxlIiwicXVhbnRpbGVzIiwiaW52ZXJ0RXh0ZW50IiwicXVhbnRpemUiLCJkM19zY2FsZV9xdWFudGl6ZSIsInRocmVzaG9sZCIsImQzX3NjYWxlX3RocmVzaG9sZCIsImlkZW50aXR5IiwiZDNfc2NhbGVfaWRlbnRpdHkiLCJpbm5lclJhZGl1cyIsImQzX3N2Z19hcmNJbm5lclJhZGl1cyIsIm91dGVyUmFkaXVzIiwiZDNfc3ZnX2FyY091dGVyUmFkaXVzIiwiY29ybmVyUmFkaXVzIiwicGFkUmFkaXVzIiwiZDNfc3ZnX2FyY0F1dG8iLCJkM19zdmdfYXJjU3RhcnRBbmdsZSIsImQzX3N2Z19hcmNFbmRBbmdsZSIsImQzX3N2Z19hcmNQYWRBbmdsZSIsImN3IiwiY2lyY2xlU2VnbWVudCIsInJwIiwiYXAiLCJkM19zdmdfYXJjU3dlZXAiLCJoMSIsImgwIiwicmMxIiwicmMwIiwidDMwIiwiZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzIiwidDEyIiwidDAzIiwidDIxIiwieDAxIiwieTAxIiwib3giLCJveSIsImN4MCIsImN4MSIsImR4MCIsImR5MCIsImR4MSIsImR5MSIsImQzX3N2Z19saW5lIiwiZGVmaW5lZCIsImQzX3N2Z19saW5lTGluZWFyIiwiaW50ZXJwb2xhdGVLZXkiLCJ0ZW5zaW9uIiwiZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzIiwibGluZWFyLWNsb3NlZCIsImQzX3N2Z19saW5lTGluZWFyQ2xvc2VkIiwic3RlcC1iZWZvcmUiLCJkM19zdmdfbGluZVN0ZXBCZWZvcmUiLCJzdGVwLWFmdGVyIiwiZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIiLCJiYXNpcyIsImQzX3N2Z19saW5lQmFzaXMiLCJiYXNpcy1vcGVuIiwiZDNfc3ZnX2xpbmVEb3Q0IiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMiLCJkM19zdmdfbGluZUJhc2lzQmV6aWVyIiwiYmFzaXMtY2xvc2VkIiwiY2FyZGluYWwiLCJkM19zdmdfbGluZUhlcm1pdGUiLCJkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMiLCJjYXJkaW5hbC1vcGVuIiwiY2FyZGluYWwtY2xvc2VkIiwibW9ub3RvbmUiLCJ0YW5nZW50cyIsImQzX3N2Z19saW5lU2xvcGUiLCJkM19zdmdfbGluZUZpbml0ZURpZmZlcmVuY2VzIiwiZDNfc3ZnX2xpbmVNb25vdG9uZVRhbmdlbnRzIiwibHAiLCJwMiIsImQzX3N2Z19saW5lQmFzaXNCZXppZXIxIiwiZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIiLCJkM19zdmdfbGluZVJhZGlhbCIsImQzX3N2Z19hcmVhIiwiaW50ZXJwb2xhdGVSZXZlcnNlIiwicG9pbnRzMCIsInBvaW50czEiLCJmeDAiLCJmeTAiLCJmeDEiLCJmeTEiLCJkM19zdmdfY2hvcmRSYWRpdXMiLCJkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uIiwiZDNfc3ZnX3N5bWJvbFNpemUiLCJkM19zdmdfc3ltYm9sVHlwZSIsImQzX3N2Z19zeW1ib2xDaXJjbGUiLCJyYWRpYWwiLCJjdXJ2ZSIsInAzIiwicHJvamVjdGlvbl8iLCJkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uIiwiZDNfc3ZnX3N5bWJvbHMiLCJjcm9zcyIsImRpYW1vbmQiLCJkM19zdmdfc3ltYm9sVGFuMzAiLCJzcXVhcmUiLCJ0cmlhbmdsZS1kb3duIiwiZDNfc3ZnX3N5bWJvbFNxcnQzIiwidHJpYW5nbGUtdXAiLCJzeW1ib2xUeXBlcyIsImQzX3RyYW5zaXRpb25JZCIsImQzX3RyYW5zaXRpb25OYW1lc3BhY2UiLCJkM190cmFuc2l0aW9uSW5oZXJpdCIsImQzX3RyYW5zaXRpb25Ob2RlIiwiZDNfdHJhbnNpdGlvbiIsImludGVycnVwdCIsImQzX3NlbGVjdGlvbl9pbnRlcnJ1cHROUyIsImxvY2siLCJhY3RpdmVJZCIsImQzX3RyYW5zaXRpb25Qcm90b3R5cGUiLCJkM190cmFuc2l0aW9uX3R3ZWVuIiwiZDNfdHJhbnNpdGlvbl90ZXh0IiwiaW5oZXJpdCIsInR3ZWVucyIsImVsYXBzZWQiLCJjYW5jZWxJZCIsImNhbmNlbCIsInN1Ym5vZGVzIiwibmFtZU5TIiwiYXR0ck51bGwiLCJhdHRyTnVsbE5TIiwiYXR0clR3ZWVuIiwic3R5bGVOdWxsIiwic3R5bGVUd2VlbiIsImluaGVyaXRJZCIsImlkMCIsImlkMSIsImF4aXMiLCJ0aWNrRm9ybWF0XyIsIm9yaWVudCIsImQzX3N2Z19heGlzRGVmYXVsdE9yaWVudCIsImlubmVyVGlja1NpemUiLCJvdXRlclRpY2tTaXplIiwidGlja1BhZGRpbmciLCJ0aWNrQXJndW1lbnRzXyIsInRpY2tWYWx1ZXMiLCJ0aWNrVHJhbnNmb3JtIiwidGlja0VudGVyIiwidGlja0V4aXQiLCJ0aWNrVXBkYXRlIiwidGlja1NwYWNpbmciLCJwYXRoVXBkYXRlIiwibGluZUVudGVyIiwibGluZVVwZGF0ZSIsInRleHRFbnRlciIsInRleHRVcGRhdGUiLCJkM19zdmdfYXhpc1giLCJkM19zdmdfYXhpc1kiLCJkM19zdmdfYXhpc09yaWVudHMiLCJ0aWNrU2l6ZSIsInRpY2tTdWJkaXZpZGUiLCJicnVzaCIsInhFeHRlbnREb21haW4iLCJ5RXh0ZW50RG9tYWluIiwieEV4dGVudCIsInlFeHRlbnQiLCJ4Q2xhbXAiLCJ5Q2xhbXAiLCJyZXNpemVzIiwiZDNfc3ZnX2JydXNoUmVzaXplcyIsImJydXNoc3RhcnQiLCJyZXNpemUiLCJkM19zdmdfYnJ1c2hDdXJzb3IiLCJnVXBkYXRlIiwiYmFja2dyb3VuZFVwZGF0ZSIsInJlZHJhd1giLCJyZWRyYXdZIiwicmVkcmF3IiwiZXZlbnRUYXJnZXQiLCJldmVudF8iLCJyZXNpemluZyIsInJlc2l6aW5nWCIsInJlc2l6aW5nWSIsImRyYWdnaW5nIiwiYnJ1c2htb3ZlIiwiYnJ1c2hlbmQiLCJleCIsImV5IiwibW92ZTEiLCJleHRlbnQxIiwiZXh0ZW50MCIsImNsZWFyIiwibnciLCJzdyIsImQzX3RpbWVfZm9ybWF0VXRjIiwiZDNfdGltZV9mb3JtYXRJc28iLCJkM190aW1lX2Zvcm1hdElzb05hdGl2ZSIsInRvSVNPU3RyaW5nIiwiZDNfdGltZV9zY2FsZSIsInRpY2tNZXRob2QiLCJkM190aW1lX3NjYWxlU3RlcHMiLCJkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzIiwiZDNfdGltZV9zY2FsZURhdGUiLCJza2lwIiwic2tpcHBlZCIsImlzbyIsInNlY29uZCIsInNlY29uZHMiLCJtaW51dGVzIiwidGltZXpvbmUiLCJob3VycyIsImQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMiLCJkM190aW1lX3NjYWxlTG9jYWxGb3JtYXQiLCJkM190aW1lX3NjYWxlVXRjTWV0aG9kcyIsImQzX3RpbWVfc2NhbGVVdGNGb3JtYXQiLCJkM19qc29uIiwiZDNfaHRtbCIsInNlbGVjdE5vZGUiLCJjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQiLCJyZXNwb25zZVhNTCIsInYxIiwidXVpZCIsIl9ub2RlSWQiLCJfY2xvY2tzZXEiLCJybmciLCJieXRlc1RvVXVpZCIsIl9sYXN0TVNlY3MiLCJfbGFzdE5TZWNzIiwiY2xvY2tzZXEiLCJzZWVkQnl0ZXMiLCJtc2VjcyIsIm5zZWNzIiwidGwiLCJ0bWgiLCJCdWZmZXIiLCJfaW5zdGFuY2VvZiIsIm5hdGl2ZU1hcCIsIm5hdGl2ZVNldCIsIm5hdGl2ZVByb21pc2UiLCJjaXJjdWxhciIsImluY2x1ZGVOb25FbnVtZXJhYmxlIiwiYWxsUGFyZW50cyIsImFsbENoaWxkcmVuIiwidXNlQnVmZmVyIiwiX2Nsb25lIiwicHJvdG8iLCJyZXNvbHZlIiwicmVqZWN0IiwiX19pc0FycmF5IiwiX19pc1JlZ0V4cCIsIl9fZ2V0UmVnRXhwRmxhZ3MiLCJfX2lzRGF0ZSIsImlzQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJrZXlDaGlsZCIsInZhbHVlQ2hpbGQiLCJlbnRyeUNoaWxkIiwiYWxsUHJvcGVydHlOYW1lcyIsIl9fb2JqVG9TdHIiLCJmbGFncyIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJjbG9uZVByb3RvdHlwZSIsImJhc2U2NCIsImllZWU3NTQiLCJrTWF4TGVuZ3RoIiwiVFlQRURfQVJSQVlfU1VQUE9SVCIsImNyZWF0ZUJ1ZmZlciIsIlJhbmdlRXJyb3IiLCJlbmNvZGluZ09yT2Zmc2V0IiwiQXJyYXlCdWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImZyb21BcnJheUxpa2UiLCJmcm9tQXJyYXlCdWZmZXIiLCJlbmNvZGluZyIsImlzRW5jb2RpbmciLCJhY3R1YWwiLCJmcm9tU3RyaW5nIiwiZnJvbU9iamVjdCIsImFzc2VydFNpemUiLCJpc1ZpZXciLCJsb3dlcmVkQ2FzZSIsInV0ZjhUb0J5dGVzIiwiYmFzZTY0VG9CeXRlcyIsInN3YXAiLCJiaWRpcmVjdGlvbmFsSW5kZXhPZiIsImRpciIsImFycmF5SW5kZXhPZiIsImFyciIsImluZGV4U2l6ZSIsImFyckxlbmd0aCIsInZhbExlbmd0aCIsInJlYWQiLCJyZWFkVUludDE2QkUiLCJmb3VuZEluZGV4IiwiZm91bmQiLCJoZXhXcml0ZSIsInN0ckxlbiIsInBhcnNlZCIsInV0ZjhXcml0ZSIsImJsaXRCdWZmZXIiLCJhc2NpaVdyaXRlIiwiYnl0ZUFycmF5IiwiYXNjaWlUb0J5dGVzIiwibGF0aW4xV3JpdGUiLCJiYXNlNjRXcml0ZSIsInVjczJXcml0ZSIsInVuaXRzIiwidXRmMTZsZVRvQnl0ZXMiLCJiYXNlNjRTbGljZSIsImZyb21CeXRlQXJyYXkiLCJ1dGY4U2xpY2UiLCJyZXMiLCJzZWNvbmRCeXRlIiwidGhpcmRCeXRlIiwiZm91cnRoQnl0ZSIsInRlbXBDb2RlUG9pbnQiLCJmaXJzdEJ5dGUiLCJjb2RlUG9pbnQiLCJieXRlc1BlclNlcXVlbmNlIiwiY29kZVBvaW50cyIsIk1BWF9BUkdVTUVOVFNfTEVOR1RIIiwiZGVjb2RlQ29kZVBvaW50c0FycmF5IiwiU2xvd0J1ZmZlciIsImFsbG9jIiwiSU5TUEVDVF9NQVhfQllURVMiLCJmb28iLCJzdWJhcnJheSIsInR5cGVkQXJyYXlTdXBwb3J0IiwicG9vbFNpemUiLCJfYXVnbWVudCIsInNwZWNpZXMiLCJhbGxvY1Vuc2FmZVNsb3ciLCJfaXNCdWZmZXIiLCJwb3MiLCJzd2FwMTYiLCJzd2FwMzIiLCJzd2FwNjQiLCJoZXhTbGljZSIsImFzY2lpU2xpY2UiLCJsYXRpbjFTbGljZSIsInV0ZjE2bGVTbGljZSIsImVxdWFscyIsImluc3BlY3QiLCJ0aGlzU3RhcnQiLCJ0aGlzRW5kIiwidGhpc0NvcHkiLCJ0YXJnZXRDb3B5IiwiaW5jbHVkZXMiLCJ0b0pTT04iLCJfYXJyIiwicmV0IiwidG9IZXgiLCJieXRlcyIsImNoZWNrT2Zmc2V0IiwiZXh0IiwiY2hlY2tJbnQiLCJvYmplY3RXcml0ZVVJbnQxNiIsImxpdHRsZUVuZGlhbiIsIm9iamVjdFdyaXRlVUludDMyIiwiY2hlY2tJRUVFNzU0Iiwid3JpdGVGbG9hdCIsIm5vQXNzZXJ0Iiwid3JpdGVEb3VibGUiLCJuZXdCdWYiLCJzbGljZUxlbiIsInJlYWRVSW50TEUiLCJtdWwiLCJyZWFkVUludEJFIiwicmVhZFVJbnQ4IiwicmVhZFVJbnQxNkxFIiwicmVhZFVJbnQzMkxFIiwicmVhZFVJbnQzMkJFIiwicmVhZEludExFIiwicmVhZEludEJFIiwicmVhZEludDgiLCJyZWFkSW50MTZMRSIsInJlYWRJbnQxNkJFIiwicmVhZEludDMyTEUiLCJyZWFkSW50MzJCRSIsInJlYWRGbG9hdExFIiwicmVhZEZsb2F0QkUiLCJyZWFkRG91YmxlTEUiLCJyZWFkRG91YmxlQkUiLCJ3cml0ZVVJbnRMRSIsIndyaXRlVUludEJFIiwid3JpdGVVSW50OCIsIndyaXRlVUludDE2TEUiLCJ3cml0ZVVJbnQxNkJFIiwid3JpdGVVSW50MzJMRSIsIndyaXRlVUludDMyQkUiLCJ3cml0ZUludExFIiwibGltaXQiLCJzdWIiLCJ3cml0ZUludEJFIiwid3JpdGVJbnQ4Iiwid3JpdGVJbnQxNkxFIiwid3JpdGVJbnQxNkJFIiwid3JpdGVJbnQzMkxFIiwid3JpdGVJbnQzMkJFIiwid3JpdGVGbG9hdExFIiwid3JpdGVGbG9hdEJFIiwid3JpdGVEb3VibGVMRSIsIndyaXRlRG91YmxlQkUiLCJ0YXJnZXRTdGFydCIsIklOVkFMSURfQkFTRTY0X1JFIiwibGVhZFN1cnJvZ2F0ZSIsInRvQnl0ZUFycmF5Iiwic3RyaW5ndHJpbSIsImJhc2U2NGNsZWFuIiwiZHN0IiwiYjY0IiwibGVucyIsImdldExlbnMiLCJ2YWxpZExlbiIsInBsYWNlSG9sZGVyc0xlbiIsInRtcCIsIkFyciIsIl9ieXRlTGVuZ3RoIiwiY3VyQnl0ZSIsInJldkxvb2t1cCIsInVpbnQ4IiwiZXh0cmFCeXRlcyIsImxlbjIiLCJlbmNvZGVDaHVuayIsImxvb2t1cCIsIm51bSIsImlzTEUiLCJtTGVuIiwibkJ5dGVzIiwiZUxlbiIsImVNYXgiLCJlQmlhcyIsIm5CaXRzIiwicnQiLCJwU2xpY2UiLCJvYmplY3RLZXlzIiwiaXNBcmd1bWVudHMiLCJkZWVwRXF1YWwiLCJleHBlY3RlZCIsIm9wdHMiLCJzdHJpY3QiLCJpc1VuZGVmaW5lZE9yTnVsbCIsIm9iakVxdWl2Iiwic3VwcG9ydHNBcmd1bWVudHNDbGFzcyIsInN1cHBvcnRlZCIsInVuc3VwcG9ydGVkIiwiX0NTU1RyYW5zaXRpb25Hcm91cDIiLCJfVHJhbnNpdGlvbkdyb3VwMiIsIkNTU1RyYW5zaXRpb25Hcm91cCIsIl9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDIiLCJfUHJvcFR5cGVzIiwiX3RlbXAiLCJfd3JhcENoaWxkIiwiYXBwZWFyVGltZW91dCIsImVudGVyVGltZW91dCIsImxlYXZlVGltZW91dCIsIl9yZWFjdCIsImdldFZhbHVlRm9yS2V5IiwibmV4dEtleXNQZW5kaW5nIiwicGVuZGluZ0tleXMiLCJjaGlsZE1hcHBpbmciLCJuZXh0S2V5IiwicGVuZGluZ05leHRLZXkiLCJfYWRkQ2xhc3MyIiwiX3JlbW92ZUNsYXNzMiIsIl9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUyIiwiX3Byb3BlcnRpZXMiLCJfcmVhY3REb20iLCJldmVudHMiLCJ0cmFuc2l0aW9uRW5kIiwiYW5pbWF0aW9uRW5kIiwiQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQiLCJjbGFzc05hbWVBbmROb2RlUXVldWUiLCJ0cmFuc2l0aW9uVGltZW91dHMiLCJ1bm1vdW50ZWQiLCJhbmltYXRpb25UeXBlIiwiZmluaXNoQ2FsbGJhY2siLCJhY3RpdmVDbGFzc05hbWUiLCJyZW1vdmVMaXN0ZW5lcnMiLCJxdWV1ZUNsYXNzQW5kTm9kZSIsImZpbmlzaCIsImFkZEVuZExpc3RlbmVyIiwicmFmSGFuZGxlIiwiZmx1c2hDbGFzc05hbWVBbmROb2RlUXVldWUiLCJfaGFzQ2xhc3MiLCJyZXBsYWNlQ2xhc3NOYW1lIiwib3JpZ0NsYXNzIiwiY2xhc3NUb1JlbW92ZSIsImNvbXBhdFJhZiIsIl9pbkRPTSIsInJhZiIsImN1cnIiLCJtcyIsInJlcSIsImdldEtleSIsInZlbmRvciIsInJhZktleSIsImFuaW1hdGlvbkRlbGF5IiwiYW5pbWF0aW9uVGltaW5nIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJ0cmFuc2l0aW9uRGVsYXkiLCJ0cmFuc2l0aW9uVGltaW5nIiwidHJhbnNpdGlvblByb3BlcnR5IiwiX2dldFRyYW5zaXRpb25Qcm9wZXJ0IiwidmVuZG9yTWFwIiwiTW96IiwiV2Via2l0IiwidmVuZG9ycyIsImdldFRyYW5zaXRpb25Qcm9wZXJ0aWVzIiwidGltaW5nIiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJydW4iLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwibm9vcCIsIm5leHRUaWNrIiwidGl0bGUiLCJicm93c2VyIiwiYXJndiIsInZlcnNpb25zIiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsInVtYXNrIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRm9yd2FyZFJlZiIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc01lbW8iLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiX3RlbXBsYXRlT2JqZWN0IiwiUGVyY2VudENvbG9ySW5wdXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJsaWdodEdyZWVuIiwiY2xvbmVUcmVlIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInVwZGF0ZVRyZWUiLCJjaGFuZ2VUZW1wUGVyY2VudGFnZXMiLCJ0cmVlRGF0YUFyciIsInRvdGFsVGltZSIsInJlbmRlclRpbWUiLCJ3b3JrVG9CZURvbmUiLCJwZXJjZW50VGltZSIsImluZGl2aWR1YWxUaW1lIiwibmV3VHJlZSIsIm5ld05vZGUiLCJ0cmVlRGF0YSIsImFkZENvbG9yIiwidXBkYXRlVHJlZVN0YXRlIiwidGVtcCIsInJlYWN0X2RlZmF1bHQiLCJib3JkZXJCb3R0b20iLCJib3hTaGFkb3ciLCJqdXN0aWZ5Q29udGVudCIsIk9yaWVudGF0aW9uQnV0dG9uU3R5bGVkIiwiZGl2IiwiVHJlZUNvbXBvbmVudF90ZW1wbGF0ZU9iamVjdCIsIlRyZWVDb21wb25lbnQiLCJUcmVlQ29tcG9uZW50X2NsYXNzQ2FsbENoZWNrIiwiVHJlZUNvbXBvbmVudF9nZXRQcm90b3R5cGVPZiIsIm1vdXNlT3ZlciIsIlRyZWVDb21wb25lbnRfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiY2hhbmdlT3JpZW50YXRpb24iLCJSZWFjdCIsInN0YXRzIiwiZ3JhYk5vZGVTdGF0cyIsIl90aGlzJHN0YXRlIiwiY29tcG9uZW50c19QZXJjZW50Q29sb3JJbnB1dCIsImNvdW50ZXIiLCJyZWFjdF9kM190cmVlX21pbl9kZWZhdWx0IiwiQnV0dG9uU3R5bGVkIiwiQnV0dG9uX3RlbXBsYXRlT2JqZWN0IiwiQnV0dG9uIiwiQnV0dG9uX2NsYXNzQ2FsbENoZWNrIiwiQnV0dG9uX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJCdXR0b25fZ2V0UHJvdG90eXBlT2YiLCJjbGlja2VkIiwiU3RhdHNTdHlsZWQiLCJTdGF0c190ZW1wbGF0ZU9iamVjdCIsIlN0YXRzIiwiU3RhdHNfY2xhc3NDYWxsQ2hlY2siLCJTdGF0c19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3RhdHNfZ2V0UHJvdG90eXBlT2YiLCJXcmFwcGVyU3R5bGVkIiwiZGV2dG9vbHNfdGVtcGxhdGVPYmplY3QiLCJDb250ZW50U3R5bGVkIiwiX3RlbXBsYXRlT2JqZWN0MiIsIlN0YXRzUGFuZWxTdHlsZWQiLCJfdGVtcGxhdGVPYmplY3QzIiwiU3RhdHNXaW5kb3dTdHlsZWQiLCJfdGVtcGxhdGVPYmplY3Q0IiwiQXBwIiwiZGV2dG9vbHNfY2xhc3NDYWxsQ2hlY2siLCJkZXZ0b29sc19nZXRQcm90b3R5cGVPZiIsIm5vZGVpbmZvIiwic3RhcnRRdWFudHVtIiwiZGV2dG9vbHNfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiY2hyb21lIiwiZGV2dG9vbHMiLCJwYW5lbHMiLCJwb3J0IiwicnVudGltZSIsImNvbm5lY3QiLCJ0YWJJZCIsImluc3BlY3RlZFdpbmRvdyIsIm9uTWVzc2FnZSIsIl90aGlzMiRzdGF0ZSIsInRlbXBUcmVlRGF0YSIsImFkZEluZGl2aWR1YWxUaW1lIiwidHJlZURhdGFBcnJDb3B5Iiwic3VtQ2hpbGRyZW5UaW1lIiwiY3VycmVudE5vZGUiLCJzZW5kTWVzc2FnZSIsImNvdW50ZXJJIiwiY291bnRlcklkIiwidXBkYXRlQ291bnRlciIsImltYWdlIiwiYWx0IiwiYWxpZ25Db250ZW50IiwiY29tcG9uZW50c19CdXR0b24iLCJTdGF0c19TdGF0cyIsIm1haW5fZGVmYXVsdCIsImNvbXBvbmVudHNfVHJlZUNvbXBvbmVudCIsImRldnRvb2xzX0FwcCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkEx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QSxTQUNBQyxZQUFBLFFBQ0FDLGVBQUEsUUFDQUMsV0FBQSxTQUNBQyxXQUFBLFNBQ0FDLFFBQUEsUUFDQUMsV0FBQSxTQUNBQyxhQUFBLFFBQ0FDLGNBQUEsUUFDQUMsY0FBQSxRQUNBQyxjQUFBLFFBQ0FDLGNBQUEsTUFDQUMsV0FBQSxRQUNBQyxTQUFBLFNBQ0FDLFlBQUEsTUFDQUMsUUFBQSxRQUNBQyxRQUFBLFFBQ0FDLFdBQUEsUUFDQUMsVUFBQSxTQUNBQyxZQUFBLFNBQ0FDLFlBQUEsUUFDQUMsUUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsU0FDQUMsS0FBQSxTQUNBQyxVQUFBLFNBQ0FDLEtBQUEsUUFDQUMsTUFBQSxNQUNBQyxZQUFBLFNBQ0FDLEtBQUEsUUFDQUMsU0FBQSxTQUNBQyxRQUFBLFNBQ0FDLFVBQUEsU0FDQUMsT0FBQSxRQUNBQyxNQUFBLFNBQ0FDLE1BQUEsU0FDQUMsU0FBQSxTQUNBQyxjQUFBLFNBQ0FDLFVBQUEsUUFDQUMsYUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsU0FDQUMsVUFBQSxTQUNBQyxxQkFBQSxTQUNBQyxVQUFBLFNBQ0FDLFdBQUEsUUFDQUMsVUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFlBQUEsU0FDQUMsY0FBQSxRQUNBQyxhQUFBLFFBQ0FDLGVBQUEsUUFDQUMsZUFBQSxRQUNBQyxlQUFBLFNBQ0FDLFlBQUEsU0FDQUMsS0FBQSxNQUNBQyxVQUFBLFFBQ0FDLE1BQUEsU0FDQUMsUUFBQSxTQUNBQyxPQUFBLFFBQ0FDLGlCQUFBLFFBQ0FDLFdBQUEsSUFDQUMsYUFBQSxTQUNBQyxhQUFBLFFBQ0FDLGVBQUEsUUFDQUMsZ0JBQUEsUUFDQUMsa0JBQUEsTUFDQUMsZ0JBQUEsUUFDQUMsZ0JBQUEsU0FDQUMsYUFBQSxRQUNBQyxVQUFBLFNBQ0FDLFVBQUEsU0FDQUMsU0FBQSxTQUNBQyxZQUFBLFNBQ0FDLEtBQUEsSUFDQUMsUUFBQSxTQUNBQyxNQUFBLFFBQ0FDLFVBQUEsUUFDQUMsT0FBQSxTQUNBQyxVQUFBLFNBQ0FDLE9BQUEsU0FDQUMsY0FBQSxT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NG5JLFFBQVN0ckksS0FBS3lzSSxhQUNkM0IsUUFBUSxtQkFLWmxCLEVBQUFyb0ksRUFBQW1FLGNBQUEsT0FBSzhOLFVBQVUsV0FDYm8ySCxFQUFBcm9JLEVBQUFtRSxjQUFDcW1JLEdBQUQsS0FDRW5DLEVBQUFyb0ksRUFBQW1FLGNBQUN1bUksR0FBRCxLQUNFckMsRUFBQXJvSSxFQUFBbUUsY0FBQ3dvSSxFQUFELENBQU94RCxNQUFPOEIsSUFDZDVDLEVBQUFyb0ksRUFBQW1FLGNBQUM2bEksRUFBRCxDQUFhaDRILE1BQU8sQ0FBRXNPLFVBQVcsVUFDL0IrbkgsRUFBQXJvSSxFQUFBbUUsY0FBQSw2QkFFRmtrSSxFQUFBcm9JLEVBQUFtRSxjQUFDeW1JLEdBQUQsS0FDRXZDLEVBQUFyb0ksRUFBQW1FLGNBQUN5b0ksRUFBQTVzSSxFQUFELENBQVcrbEIsSUFBS2tsSCxFQUFTLzdFLGlCQUUzQm01RSxFQUFBcm9JLEVBQUFtRSxjQUFDNmxJLEVBQUQsS0FDRTNCLEVBQUFyb0ksRUFBQW1FLGNBQUEscUJBRUZra0ksRUFBQXJvSSxFQUFBbUUsY0FBQ3ltSSxHQUFELEtBQ0V2QyxFQUFBcm9JLEVBQUFtRSxjQUFDeW9JLEVBQUE1c0ksRUFBRCxDQUFXK2xCLElBQUtrbEgsRUFBUzc3RSxrQkFJN0JpNUUsRUFBQXJvSSxFQUFBbUUsY0FBQSxPQUFLNk4sTUFBTyxDQUFFa00sTUFBTyxNQUFPd0YsT0FBUSxTQVNsQzJrSCxFQUFBcm9JLEVBQUFtRSxjQUFDMG9JLEVBQUQsQ0FDRTFFLGdCQUFpQjFwSSxLQUFLMHBJLGdCQUN0QnYvRixZQUFhQSxFQUNicS9GLFNBQVVBLEVBQ1ZtQixjQUFlM3FJLEtBQUsycUksMERBZ0I1QzU2SCxpQkFBTzY1SCxFQUFBcm9JLEVBQUFtRSxjQUFDMm9JLEdBQUQsTUFBU2pxSSxTQUFTa3FJLGVBQWUiLCJmaWxlIjoid2VicGFjay1idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNTIpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgU3R5bGlzIGZyb20gJ3N0eWxpcy9zdHlsaXMubWluJztcbmltcG9ydCBfaW5zZXJ0UnVsZVBsdWdpbiBmcm9tICdzdHlsaXMtcnVsZS1zaGVldCc7XG5pbXBvcnQgUmVhY3QsIHsgY2xvbmVFbGVtZW50LCBjcmVhdGVDb250ZXh0LCBDb21wb25lbnQsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdW5pdGxlc3MgZnJvbSAnQGVtb3Rpb24vdW5pdGxlc3MnO1xuaW1wb3J0IHsgaXNFbGVtZW50LCBpc1ZhbGlkRWxlbWVudFR5cGUsIEZvcndhcmRSZWYgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdtZW1vaXplLW9uZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgdmFsaWRBdHRyIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnO1xuXG4vLyBcblxudmFyIGludGVybGVhdmUgPSAoZnVuY3Rpb24gKHN0cmluZ3MsIGludGVycG9sYXRpb25zKSB7XG4gIHZhciByZXN1bHQgPSBbc3RyaW5nc1swXV07XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGludGVycG9sYXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgcmVzdWx0LnB1c2goaW50ZXJwb2xhdGlvbnNbaV0sIHN0cmluZ3NbaSArIDFdKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmo7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5cbnZhciBjbGFzc0NhbGxDaGVjayA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG52YXIgY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG52YXIgaW5oZXJpdHMgPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59O1xuXG52YXIgb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgPSBmdW5jdGlvbiAob2JqLCBrZXlzKSB7XG4gIHZhciB0YXJnZXQgPSB7fTtcblxuICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgIGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7XG4gICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7XG4gICAgdGFyZ2V0W2ldID0gb2JqW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbnZhciBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHtcbiAgaWYgKCFzZWxmKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG59O1xuXG4vLyBcbnZhciBpc1BsYWluT2JqZWN0ID0gKGZ1bmN0aW9uICh4KSB7XG4gIHJldHVybiAodHlwZW9mIHggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHgpKSA9PT0gJ29iamVjdCcgJiYgeC5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufSk7XG5cbi8vIFxudmFyIEVNUFRZX0FSUkFZID0gT2JqZWN0LmZyZWV6ZShbXSk7XG52YXIgRU1QVFlfT0JKRUNUID0gT2JqZWN0LmZyZWV6ZSh7fSk7XG5cbi8vIFxuZnVuY3Rpb24gaXNGdW5jdGlvbih0ZXN0KSB7XG4gIHJldHVybiB0eXBlb2YgdGVzdCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWUodGFyZ2V0KSB7XG4gIHJldHVybiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIHRhcmdldCA6IGZhbHNlKSB8fCB0YXJnZXQuZGlzcGxheU5hbWUgfHwgdGFyZ2V0Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG59XG5cbi8vIFxuZnVuY3Rpb24gaXNTdHlsZWRDb21wb25lbnQodGFyZ2V0KSB7XG4gIHJldHVybiB0YXJnZXQgJiYgdHlwZW9mIHRhcmdldC5zdHlsZWRDb21wb25lbnRJZCA9PT0gJ3N0cmluZyc7XG59XG5cbi8vIFxuXG52YXIgU0NfQVRUUiA9IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5TQ19BVFRSIHx8ICdkYXRhLXN0eWxlZCc7XG5cbnZhciBTQ19WRVJTSU9OX0FUVFIgPSAnZGF0YS1zdHlsZWQtdmVyc2lvbic7XG5cbnZhciBTQ19TVFJFQU1fQVRUUiA9ICdkYXRhLXN0eWxlZC1zdHJlYW1lZCc7XG5cbnZhciBJU19CUk9XU0VSID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgJ0hUTUxFbGVtZW50JyBpbiB3aW5kb3c7XG5cbnZhciBESVNBQkxFX1NQRUVEWSA9IHR5cGVvZiBTQ19ESVNBQkxFX1NQRUVEWSA9PT0gJ2Jvb2xlYW4nICYmIFNDX0RJU0FCTEVfU1BFRURZIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbi8vIFNoYXJlZCBlbXB0eSBleGVjdXRpb24gY29udGV4dCB3aGVuIGdlbmVyYXRpbmcgc3RhdGljIHN0eWxlc1xudmFyIFNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCA9IHt9O1xuXG4vLyBcblxuXG4vKipcbiAqIFBhcnNlIGVycm9ycy5tZCBhbmQgdHVybiBpdCBpbnRvIGEgc2ltcGxlIGhhc2ggb2YgY29kZTogbWVzc2FnZVxuICovXG52YXIgRVJST1JTID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHtcbiAgXCIxXCI6IFwiQ2Fubm90IGNyZWF0ZSBzdHlsZWQtY29tcG9uZW50IGZvciBjb21wb25lbnQ6ICVzLlxcblxcblwiLFxuICBcIjJcIjogXCJDYW4ndCBjb2xsZWN0IHN0eWxlcyBvbmNlIHlvdSd2ZSBjb25zdW1lZCBhIGBTZXJ2ZXJTdHlsZVNoZWV0YCdzIHN0eWxlcyEgYFNlcnZlclN0eWxlU2hlZXRgIGlzIGEgb25lIG9mZiBpbnN0YW5jZSBmb3IgZWFjaCBzZXJ2ZXItc2lkZSByZW5kZXIgY3ljbGUuXFxuXFxuLSBBcmUgeW91IHRyeWluZyB0byByZXVzZSBpdCBhY3Jvc3MgcmVuZGVycz9cXG4tIEFyZSB5b3UgYWNjaWRlbnRhbGx5IGNhbGxpbmcgY29sbGVjdFN0eWxlcyB0d2ljZT9cXG5cXG5cIixcbiAgXCIzXCI6IFwiU3RyZWFtaW5nIFNTUiBpcyBvbmx5IHN1cHBvcnRlZCBpbiBhIE5vZGUuanMgZW52aXJvbm1lbnQ7IFBsZWFzZSBkbyBub3QgdHJ5IHRvIGNhbGwgdGhpcyBtZXRob2QgaW4gdGhlIGJyb3dzZXIuXFxuXFxuXCIsXG4gIFwiNFwiOiBcIlRoZSBgU3R5bGVTaGVldE1hbmFnZXJgIGV4cGVjdHMgYSB2YWxpZCB0YXJnZXQgb3Igc2hlZXQgcHJvcCFcXG5cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgY2xpZW50IGFuZCBpcyB5b3VyIHRhcmdldCBmYWxzeT9cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgc2VydmVyIGFuZCBpcyB0aGUgc2hlZXQgZmFsc3k/XFxuXFxuXCIsXG4gIFwiNVwiOiBcIlRoZSBjbG9uZSBtZXRob2QgY2Fubm90IGJlIHVzZWQgb24gdGhlIGNsaWVudCFcXG5cXG4tIEFyZSB5b3UgcnVubmluZyBpbiBhIGNsaWVudC1saWtlIGVudmlyb25tZW50IG9uIHRoZSBzZXJ2ZXI/XFxuLSBBcmUgeW91IHRyeWluZyB0byBydW4gU1NSIG9uIHRoZSBjbGllbnQ/XFxuXFxuXCIsXG4gIFwiNlwiOiBcIlRyeWluZyB0byBpbnNlcnQgYSBuZXcgc3R5bGUgdGFnLCBidXQgdGhlIGdpdmVuIE5vZGUgaXMgdW5tb3VudGVkIVxcblxcbi0gQXJlIHlvdSB1c2luZyBhIGN1c3RvbSB0YXJnZXQgdGhhdCBpc24ndCBtb3VudGVkP1xcbi0gRG9lcyB5b3VyIGRvY3VtZW50IG5vdCBoYXZlIGEgdmFsaWQgaGVhZCBlbGVtZW50P1xcbi0gSGF2ZSB5b3UgYWNjaWRlbnRhbGx5IHJlbW92ZWQgYSBzdHlsZSB0YWcgbWFudWFsbHk/XFxuXFxuXCIsXG4gIFwiN1wiOiBcIlRoZW1lUHJvdmlkZXI6IFBsZWFzZSByZXR1cm4gYW4gb2JqZWN0IGZyb20geW91ciBcXFwidGhlbWVcXFwiIHByb3AgZnVuY3Rpb24sIGUuZy5cXG5cXG5gYGBqc1xcbnRoZW1lPXsoKSA9PiAoe30pfVxcbmBgYFxcblxcblwiLFxuICBcIjhcIjogXCJUaGVtZVByb3ZpZGVyOiBQbGVhc2UgbWFrZSB5b3VyIFxcXCJ0aGVtZVxcXCIgcHJvcCBhbiBvYmplY3QuXFxuXFxuXCIsXG4gIFwiOVwiOiBcIk1pc3NpbmcgZG9jdW1lbnQgYDxoZWFkPmBcXG5cXG5cIixcbiAgXCIxMFwiOiBcIkNhbm5vdCBmaW5kIGEgU3R5bGVTaGVldCBpbnN0YW5jZS4gVXN1YWxseSB0aGlzIGhhcHBlbnMgaWYgdGhlcmUgYXJlIG11bHRpcGxlIGNvcGllcyBvZiBzdHlsZWQtY29tcG9uZW50cyBsb2FkZWQgYXQgb25jZS4gQ2hlY2sgb3V0IHRoaXMgaXNzdWUgZm9yIGhvdyB0byB0cm91Ymxlc2hvb3QgYW5kIGZpeCB0aGUgY29tbW9uIGNhc2VzIHdoZXJlIHRoaXMgc2l0dWF0aW9uIGNhbiBoYXBwZW46IGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9pc3N1ZXMvMTk0MSNpc3N1ZWNvbW1lbnQtNDE3ODYyMDIxXFxuXFxuXCIsXG4gIFwiMTFcIjogXCJfVGhpcyBlcnJvciB3YXMgcmVwbGFjZWQgd2l0aCBhIGRldi10aW1lIHdhcm5pbmcsIGl0IHdpbGwgYmUgZGVsZXRlZCBmb3IgdjQgZmluYWwuXyBbY3JlYXRlR2xvYmFsU3R5bGVdIHJlY2VpdmVkIGNoaWxkcmVuIHdoaWNoIHdpbGwgbm90IGJlIHJlbmRlcmVkLiBQbGVhc2UgdXNlIHRoZSBjb21wb25lbnQgd2l0aG91dCBwYXNzaW5nIGNoaWxkcmVuIGVsZW1lbnRzLlxcblxcblwiLFxuICBcIjEyXCI6IFwiSXQgc2VlbXMgeW91IGFyZSBpbnRlcnBvbGF0aW5nIGEga2V5ZnJhbWUgZGVjbGFyYXRpb24gKCVzKSBpbnRvIGFuIHVudGFnZ2VkIHN0cmluZy4gVGhpcyB3YXMgc3VwcG9ydGVkIGluIHN0eWxlZC1jb21wb25lbnRzIHYzLCBidXQgaXMgbm90IGxvbmdlciBzdXBwb3J0ZWQgaW4gdjQgYXMga2V5ZnJhbWVzIGFyZSBub3cgaW5qZWN0ZWQgb24tZGVtYW5kLiBQbGVhc2Ugd3JhcCB5b3VyIHN0cmluZyBpbiB0aGUgY3NzXFxcXGBcXFxcYCBoZWxwZXIgKHNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hcGkjY3NzKSwgd2hpY2ggZW5zdXJlcyB0aGUgc3R5bGVzIGFyZSBpbmplY3RlZCBjb3JyZWN0bHkuXFxuXFxuXCIsXG4gIFwiMTNcIjogXCIlcyBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuXFxuXCJcbn0gOiB7fTtcblxuLyoqXG4gKiBzdXBlciBiYXNpYyB2ZXJzaW9uIG9mIHNwcmludGZcbiAqL1xuZnVuY3Rpb24gZm9ybWF0KCkge1xuICB2YXIgYSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXTtcbiAgdmFyIGIgPSBbXTtcblxuICBmb3IgKHZhciBjID0gMSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDsgYyA8IGxlbjsgYyArPSAxKSB7XG4gICAgYi5wdXNoKGFyZ3VtZW50cy5sZW5ndGggPD0gYyA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1tjXSk7XG4gIH1cblxuICBiLmZvckVhY2goZnVuY3Rpb24gKGQpIHtcbiAgICBhID0gYS5yZXBsYWNlKC8lW2Etel0vLCBkKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGE7XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGVycm9yIGZpbGUgb3V0IG9mIGVycm9ycy5tZCBmb3IgZGV2ZWxvcG1lbnQgYW5kIGEgc2ltcGxlIHdlYiBsaW5rIHRvIHRoZSBmdWxsIGVycm9yc1xuICogaW4gcHJvZHVjdGlvbiBtb2RlLlxuICovXG5cbnZhciBTdHlsZWRDb21wb25lbnRzRXJyb3IgPSBmdW5jdGlvbiAoX0Vycm9yKSB7XG4gIGluaGVyaXRzKFN0eWxlZENvbXBvbmVudHNFcnJvciwgX0Vycm9yKTtcblxuICBmdW5jdGlvbiBTdHlsZWRDb21wb25lbnRzRXJyb3IoY29kZSkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlZENvbXBvbmVudHNFcnJvcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0Vycm9yLmNhbGwodGhpcywgJ0FuIGVycm9yIG9jY3VycmVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2Jsb2IvbWFzdGVyL3NyYy91dGlscy9lcnJvcnMubWQjJyArIGNvZGUgKyAnIGZvciBtb3JlIGluZm9ybWF0aW9uLiAnICsgKGludGVycG9sYXRpb25zID8gJ0FkZGl0aW9uYWwgYXJndW1lbnRzOiAnICsgaW50ZXJwb2xhdGlvbnMuam9pbignLCAnKSA6ICcnKSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9FcnJvci5jYWxsKHRoaXMsIGZvcm1hdC5hcHBseSh1bmRlZmluZWQsIFtFUlJPUlNbY29kZV1dLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpLnRyaW0oKSkpO1xuICAgIH1cbiAgICByZXR1cm4gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcyk7XG4gIH1cblxuICByZXR1cm4gU3R5bGVkQ29tcG9uZW50c0Vycm9yO1xufShFcnJvcik7XG5cbi8vIFxudmFyIFNDX0NPTVBPTkVOVF9JRCA9IC9eW15cXFNcXG5dKj9cXC9cXCogc2MtY29tcG9uZW50LWlkOlxccyooXFxTKylcXHMrXFwqXFwvL2dtO1xuXG52YXIgZXh0cmFjdENvbXBzID0gKGZ1bmN0aW9uIChtYXliZUNTUykge1xuICB2YXIgY3NzID0gJycgKyAobWF5YmVDU1MgfHwgJycpOyAvLyBEZWZpbml0ZWx5IGEgc3RyaW5nLCBhbmQgYSBjbG9uZVxuICB2YXIgZXhpc3RpbmdDb21wb25lbnRzID0gW107XG4gIGNzcy5yZXBsYWNlKFNDX0NPTVBPTkVOVF9JRCwgZnVuY3Rpb24gKG1hdGNoLCBjb21wb25lbnRJZCwgbWF0Y2hJbmRleCkge1xuICAgIGV4aXN0aW5nQ29tcG9uZW50cy5wdXNoKHsgY29tcG9uZW50SWQ6IGNvbXBvbmVudElkLCBtYXRjaEluZGV4OiBtYXRjaEluZGV4IH0pO1xuICAgIHJldHVybiBtYXRjaDtcbiAgfSk7XG4gIHJldHVybiBleGlzdGluZ0NvbXBvbmVudHMubWFwKGZ1bmN0aW9uIChfcmVmLCBpKSB7XG4gICAgdmFyIGNvbXBvbmVudElkID0gX3JlZi5jb21wb25lbnRJZCxcbiAgICAgICAgbWF0Y2hJbmRleCA9IF9yZWYubWF0Y2hJbmRleDtcblxuICAgIHZhciBuZXh0Q29tcCA9IGV4aXN0aW5nQ29tcG9uZW50c1tpICsgMV07XG4gICAgdmFyIGNzc0Zyb21ET00gPSBuZXh0Q29tcCA/IGNzcy5zbGljZShtYXRjaEluZGV4LCBuZXh0Q29tcC5tYXRjaEluZGV4KSA6IGNzcy5zbGljZShtYXRjaEluZGV4KTtcbiAgICByZXR1cm4geyBjb21wb25lbnRJZDogY29tcG9uZW50SWQsIGNzc0Zyb21ET006IGNzc0Zyb21ET00gfTtcbiAgfSk7XG59KTtcblxuLy8gXG5cbnZhciBDT01NRU5UX1JFR0VYID0gL15cXHMqXFwvXFwvLiokL2dtO1xuXG4vLyBOT1RFOiBUaGlzIHN0eWxpcyBpbnN0YW5jZSBpcyBvbmx5IHVzZWQgdG8gc3BsaXQgcnVsZXMgZnJvbSBTU1InZCBzdHlsZSB0YWdzXG52YXIgc3R5bGlzU3BsaXR0ZXIgPSBuZXcgU3R5bGlzKHtcbiAgZ2xvYmFsOiBmYWxzZSxcbiAgY2FzY2FkZTogdHJ1ZSxcbiAga2V5ZnJhbWU6IGZhbHNlLFxuICBwcmVmaXg6IGZhbHNlLFxuICBjb21wcmVzczogZmFsc2UsXG4gIHNlbWljb2xvbjogdHJ1ZVxufSk7XG5cbnZhciBzdHlsaXMgPSBuZXcgU3R5bGlzKHtcbiAgZ2xvYmFsOiBmYWxzZSxcbiAgY2FzY2FkZTogdHJ1ZSxcbiAga2V5ZnJhbWU6IGZhbHNlLFxuICBwcmVmaXg6IHRydWUsXG4gIGNvbXByZXNzOiBmYWxzZSxcbiAgc2VtaWNvbG9uOiBmYWxzZSAvLyBOT1RFOiBUaGlzIG1lYW5zIFwiYXV0b2NvbXBsZXRlIG1pc3Npbmcgc2VtaWNvbG9uc1wiXG59KTtcblxuLy8gV3JhcCBgaW5zZXJ0UnVsZVBsdWdpbiB0byBidWlsZCBhIGxpc3Qgb2YgcnVsZXMsXG4vLyBhbmQgdGhlbiBtYWtlIG91ciBvd24gcGx1Z2luIHRvIHJldHVybiB0aGUgcnVsZXMuIFRoaXNcbi8vIG1ha2VzIGl0IGVhc2llciB0byBob29rIGludG8gdGhlIGV4aXN0aW5nIFNTUiBhcmNoaXRlY3R1cmVcblxudmFyIHBhcnNpbmdSdWxlcyA9IFtdO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbnZhciByZXR1cm5SdWxlc1BsdWdpbiA9IGZ1bmN0aW9uIHJldHVyblJ1bGVzUGx1Z2luKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IC0yKSB7XG4gICAgdmFyIHBhcnNlZFJ1bGVzID0gcGFyc2luZ1J1bGVzO1xuICAgIHBhcnNpbmdSdWxlcyA9IFtdO1xuICAgIHJldHVybiBwYXJzZWRSdWxlcztcbiAgfVxufTtcblxudmFyIHBhcnNlUnVsZXNQbHVnaW4gPSBfaW5zZXJ0UnVsZVBsdWdpbihmdW5jdGlvbiAocnVsZSkge1xuICBwYXJzaW5nUnVsZXMucHVzaChydWxlKTtcbn0pO1xuXG52YXIgX2NvbXBvbmVudElkID0gdm9pZCAwO1xudmFyIF9zZWxlY3RvciA9IHZvaWQgMDtcbnZhciBfc2VsZWN0b3JSZWdleHAgPSB2b2lkIDA7XG5cbnZhciBzZWxmUmVmZXJlbmNlUmVwbGFjZXIgPSBmdW5jdGlvbiBzZWxmUmVmZXJlbmNlUmVwbGFjZXIobWF0Y2gsIG9mZnNldCwgc3RyaW5nKSB7XG4gIGlmIChcbiAgLy8gdGhlIGZpcnN0IHNlbGYtcmVmIGlzIGFsd2F5cyB1bnRvdWNoZWRcbiAgb2Zmc2V0ID4gMCAmJlxuICAvLyB0aGVyZSBzaG91bGQgYmUgYXQgbGVhc3QgdHdvIHNlbGYtcmVmcyB0byBkbyBhIHJlcGxhY2VtZW50ICguYiA+IC5iKVxuICBzdHJpbmcuc2xpY2UoMCwgb2Zmc2V0KS5pbmRleE9mKF9zZWxlY3RvcikgIT09IC0xICYmXG4gIC8vIG5vIGNvbnNlY3V0aXZlIHNlbGYgcmVmcyAoLmIuYik7IHRoYXQgaXMgYSBwcmVjZWRlbmNlIGJvb3N0IGFuZCB0cmVhdGVkIGRpZmZlcmVudGx5XG4gIHN0cmluZy5zbGljZShvZmZzZXQgLSBfc2VsZWN0b3IubGVuZ3RoLCBvZmZzZXQpICE9PSBfc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gJy4nICsgX2NvbXBvbmVudElkO1xuICB9XG5cbiAgcmV0dXJuIG1hdGNoO1xufTtcblxuLyoqXG4gKiBXaGVuIHdyaXRpbmcgYSBzdHlsZSBsaWtlXG4gKlxuICogJiArICYge1xuICogICBjb2xvcjogcmVkO1xuICogfVxuICpcbiAqIFRoZSBzZWNvbmQgYW1wZXJzYW5kIHNob3VsZCBiZSBhIHJlZmVyZW5jZSB0byB0aGUgc3RhdGljIGNvbXBvbmVudCBjbGFzcy4gc3R5bGlzXG4gKiBoYXMgbm8ga25vd2xlZGdlIG9mIHN0YXRpYyBjbGFzcyBzbyB3ZSBoYXZlIHRvIGludGVsbGlnZW50bHkgcmVwbGFjZSB0aGUgYmFzZSBzZWxlY3Rvci5cbiAqL1xudmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbiA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbihjb250ZXh0LCBfLCBzZWxlY3RvcnMpIHtcbiAgaWYgKGNvbnRleHQgPT09IDIgJiYgc2VsZWN0b3JzLmxlbmd0aCAmJiBzZWxlY3RvcnNbMF0ubGFzdEluZGV4T2YoX3NlbGVjdG9yKSA+IDApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBzZWxlY3RvcnNbMF0gPSBzZWxlY3RvcnNbMF0ucmVwbGFjZShfc2VsZWN0b3JSZWdleHAsIHNlbGZSZWZlcmVuY2VSZXBsYWNlcik7XG4gIH1cbn07XG5cbnN0eWxpcy51c2UoW3NlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbiwgcGFyc2VSdWxlc1BsdWdpbiwgcmV0dXJuUnVsZXNQbHVnaW5dKTtcbnN0eWxpc1NwbGl0dGVyLnVzZShbcGFyc2VSdWxlc1BsdWdpbiwgcmV0dXJuUnVsZXNQbHVnaW5dKTtcblxudmFyIHNwbGl0QnlSdWxlcyA9IGZ1bmN0aW9uIHNwbGl0QnlSdWxlcyhjc3MpIHtcbiAgcmV0dXJuIHN0eWxpc1NwbGl0dGVyKCcnLCBjc3MpO1xufTtcblxuZnVuY3Rpb24gc3RyaW5naWZ5UnVsZXMocnVsZXMsIHNlbGVjdG9yLCBwcmVmaXgpIHtcbiAgdmFyIGNvbXBvbmVudElkID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnJic7XG5cbiAgdmFyIGZsYXRDU1MgPSBydWxlcy5qb2luKCcnKS5yZXBsYWNlKENPTU1FTlRfUkVHRVgsICcnKTsgLy8gcmVwbGFjZSBKUyBjb21tZW50c1xuXG4gIHZhciBjc3NTdHIgPSBzZWxlY3RvciAmJiBwcmVmaXggPyBwcmVmaXggKyAnICcgKyBzZWxlY3RvciArICcgeyAnICsgZmxhdENTUyArICcgfScgOiBmbGF0Q1NTO1xuXG4gIC8vIHN0eWxpcyBoYXMgbm8gY29uY2VwdCBvZiBzdGF0ZSB0byBiZSBwYXNzZWQgdG8gcGx1Z2luc1xuICAvLyBidXQgc2luY2UgSlMgaXMgc2luZ2xlPXRocmVhZGVkLCB3ZSBjYW4gcmVseSBvbiB0aGF0IHRvIGVuc3VyZVxuICAvLyB0aGVzZSBwcm9wZXJ0aWVzIHN0YXkgaW4gc3luYyB3aXRoIHRoZSBjdXJyZW50IHN0eWxpcyBydW5cbiAgX2NvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG4gIF9zZWxlY3RvciA9IHNlbGVjdG9yO1xuICBfc2VsZWN0b3JSZWdleHAgPSBuZXcgUmVnRXhwKCdcXFxcJyArIF9zZWxlY3RvciArICdcXFxcYicsICdnJyk7XG5cbiAgcmV0dXJuIHN0eWxpcyhwcmVmaXggfHwgIXNlbGVjdG9yID8gJycgOiBzZWxlY3RvciwgY3NzU3RyKTtcbn1cblxuLy8gXG4vKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UsIG5vLXVuZGVmICovXG5cbnZhciBnZXROb25jZSA9IChmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xufSk7XG5cbi8vIFxuLyogVGhlc2UgYXJlIGhlbHBlcnMgZm9yIHRoZSBTdHlsZVRhZ3MgdG8ga2VlcCB0cmFjayBvZiB0aGUgaW5qZWN0ZWRcbiAqIHJ1bGUgbmFtZXMgZm9yIGVhY2ggKGNvbXBvbmVudCkgSUQgdGhhdCB0aGV5J3JlIGtlZXBpbmcgdHJhY2sgb2YuXG4gKiBUaGV5J3JlIGNydWNpYWwgZm9yIGRldGVjdGluZyB3aGV0aGVyIGEgbmFtZSBoYXMgYWxyZWFkeSBiZWVuXG4gKiBpbmplY3RlZC5cbiAqIChUaGlzIGV4Y2x1ZGVzIHJlaHlkcmF0ZWQgbmFtZXMpICovXG5cbi8qIGFkZHMgYSBuZXcgSUQ6bmFtZSBwYWlyaW5nIHRvIGEgbmFtZXMgZGljdGlvbmFyeSAqL1xudmFyIGFkZE5hbWVGb3JJZCA9IGZ1bmN0aW9uIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpIHtcbiAgaWYgKG5hbWUpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB2YXIgbmFtZXNGb3JJZCA9IG5hbWVzW2lkXSB8fCAobmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKSk7XG4gICAgbmFtZXNGb3JJZFtuYW1lXSA9IHRydWU7XG4gIH1cbn07XG5cbi8qIHJlc2V0cyBhbiBJRCBlbnRpcmVseSBieSBvdmVyd3JpdGluZyBpdCBpbiB0aGUgZGljdGlvbmFyeSAqL1xudmFyIHJlc2V0SWROYW1lcyA9IGZ1bmN0aW9uIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG59O1xuXG4vKiBmYWN0b3J5IGZvciBhIG5hbWVzIGRpY3Rpb25hcnkgY2hlY2tpbmcgdGhlIGV4aXN0YW5jZSBvZiBhbiBJRDpuYW1lIHBhaXJpbmcgKi9cbnZhciBoYXNOYW1lRm9ySWQgPSBmdW5jdGlvbiBoYXNOYW1lRm9ySWQobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpZCwgbmFtZSkge1xuICAgIHJldHVybiBuYW1lc1tpZF0gIT09IHVuZGVmaW5lZCAmJiBuYW1lc1tpZF1bbmFtZV07XG4gIH07XG59O1xuXG4vKiBzdHJpbmdpZmllcyBuYW1lcyBmb3IgdGhlIGh0bWwvZWxlbWVudCBvdXRwdXQgKi9cbnZhciBzdHJpbmdpZnlOYW1lcyA9IGZ1bmN0aW9uIHN0cmluZ2lmeU5hbWVzKG5hbWVzKSB7XG4gIHZhciBzdHIgPSAnJztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICBmb3IgKHZhciBpZCBpbiBuYW1lcykge1xuICAgIHN0ciArPSBPYmplY3Qua2V5cyhuYW1lc1tpZF0pLmpvaW4oJyAnKSArICcgJztcbiAgfVxuICByZXR1cm4gc3RyLnRyaW0oKTtcbn07XG5cbi8qIGNsb25lcyB0aGUgbmVzdGVkIG5hbWVzIGRpY3Rpb25hcnkgKi9cbnZhciBjbG9uZU5hbWVzID0gZnVuY3Rpb24gY2xvbmVOYW1lcyhuYW1lcykge1xuICB2YXIgY2xvbmUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gIGZvciAodmFyIGlkIGluIG5hbWVzKSB7XG4gICAgY2xvbmVbaWRdID0gX2V4dGVuZHMoe30sIG5hbWVzW2lkXSk7XG4gIH1cbiAgcmV0dXJuIGNsb25lO1xufTtcblxuLy8gXG5cbi8qIFRoZXNlIGFyZSBoZWxwZXJzIHRoYXQgZGVhbCB3aXRoIHRoZSBpbnNlcnRSdWxlIChha2Egc3BlZWR5KSBBUElcbiAqIFRoZXkgYXJlIHVzZWQgaW4gdGhlIFN0eWxlVGFncyBhbmQgc3BlY2lmaWNhbGx5IHRoZSBzcGVlZHkgdGFnXG4gKi9cblxuLyogcmV0cmlldmUgYSBzaGVldCBmb3IgYSBnaXZlbiBzdHlsZSB0YWcgKi9cbnZhciBzaGVldEZvclRhZyA9IGZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICAvLyAkRmxvd0ZpeE1lXG4gIGlmICh0YWcuc2hlZXQpIHJldHVybiB0YWcuc2hlZXQ7XG5cbiAgLyogRmlyZWZveCBxdWlyayByZXF1aXJlcyB1cyB0byBzdGVwIHRocm91Z2ggYWxsIHN0eWxlc2hlZXRzIHRvIGZpbmQgb25lIG93bmVkIGJ5IHRoZSBnaXZlbiB0YWcgKi9cbiAgdmFyIHNpemUgPSBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZTsgaSArPSAxKSB7XG4gICAgdmFyIHNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGlmIChzaGVldC5vd25lck5vZGUgPT09IHRhZykgcmV0dXJuIHNoZWV0O1xuICB9XG5cbiAgLyogd2Ugc2hvdWxkIGFsd2F5cyBiZSBhYmxlIHRvIGZpbmQgYSB0YWcgKi9cbiAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxMCk7XG59O1xuXG4vKiBpbnNlcnQgYSBydWxlIHNhZmVseSBhbmQgcmV0dXJuIHdoZXRoZXIgaXQgd2FzIGFjdHVhbGx5IGluamVjdGVkICovXG52YXIgc2FmZUluc2VydFJ1bGUgPSBmdW5jdGlvbiBzYWZlSW5zZXJ0UnVsZShzaGVldCwgY3NzUnVsZSwgaW5kZXgpIHtcbiAgLyogYWJvcnQgZWFybHkgaWYgY3NzUnVsZSBzdHJpbmcgaXMgZmFsc3kgKi9cbiAgaWYgKCFjc3NSdWxlKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIG1heEluZGV4ID0gc2hlZXQuY3NzUnVsZXMubGVuZ3RoO1xuXG4gIHRyeSB7XG4gICAgLyogdXNlIGluc2VydFJ1bGUgYW5kIGNhcCBwYXNzZWQgaW5kZXggd2l0aCBtYXhJbmRleCAobm8gb2YgY3NzUnVsZXMpICovXG4gICAgc2hlZXQuaW5zZXJ0UnVsZShjc3NSdWxlLCBpbmRleCA8PSBtYXhJbmRleCA/IGluZGV4IDogbWF4SW5kZXgpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvKiBhbnkgZXJyb3IgaW5kaWNhdGVzIGFuIGludmFsaWQgcnVsZSAqL1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyogZGVsZXRlcyBgc2l6ZWAgcnVsZXMgc3RhcnRpbmcgZnJvbSBgcmVtb3ZhbEluZGV4YCAqL1xudmFyIGRlbGV0ZVJ1bGVzID0gZnVuY3Rpb24gZGVsZXRlUnVsZXMoc2hlZXQsIHJlbW92YWxJbmRleCwgc2l6ZSkge1xuICB2YXIgbG93ZXJCb3VuZCA9IHJlbW92YWxJbmRleCAtIHNpemU7XG4gIGZvciAodmFyIGkgPSByZW1vdmFsSW5kZXg7IGkgPiBsb3dlckJvdW5kOyBpIC09IDEpIHtcbiAgICBzaGVldC5kZWxldGVSdWxlKGkpO1xuICB9XG59O1xuXG4vLyBcblxuLyogdGhpcyBtYXJrZXIgc2VwYXJhdGVzIGNvbXBvbmVudCBzdHlsZXMgYW5kIGlzIGltcG9ydGFudCBmb3IgcmVoeWRyYXRpb24gKi9cbnZhciBtYWtlVGV4dE1hcmtlciA9IGZ1bmN0aW9uIG1ha2VUZXh0TWFya2VyKGlkKSB7XG4gIHJldHVybiAnXFxuLyogc2MtY29tcG9uZW50LWlkOiAnICsgaWQgKyAnICovXFxuJztcbn07XG5cbi8qIGFkZCB1cCBhbGwgbnVtYmVycyBpbiBhcnJheSB1cCB1bnRpbCBhbmQgaW5jbHVkaW5nIHRoZSBpbmRleCAqL1xudmFyIGFkZFVwVW50aWxJbmRleCA9IGZ1bmN0aW9uIGFkZFVwVW50aWxJbmRleChzaXplcywgaW5kZXgpIHtcbiAgdmFyIHRvdGFsVXBUb0luZGV4ID0gMDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPD0gaW5kZXg7IGkgKz0gMSkge1xuICAgIHRvdGFsVXBUb0luZGV4ICs9IHNpemVzW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRvdGFsVXBUb0luZGV4O1xufTtcblxuLyogY3JlYXRlIGEgbmV3IHN0eWxlIHRhZyBhZnRlciBsYXN0RWwgKi9cbnZhciBtYWtlU3R5bGVUYWcgPSBmdW5jdGlvbiBtYWtlU3R5bGVUYWcodGFyZ2V0LCB0YWdFbCwgaW5zZXJ0QmVmb3JlKSB7XG4gIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIGVsLnNldEF0dHJpYnV0ZShTQ19BVFRSLCAnJyk7XG4gIGVsLnNldEF0dHJpYnV0ZShTQ19WRVJTSU9OX0FUVFIsIFwiNC4xLjNcIik7XG5cbiAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgaWYgKG5vbmNlKSB7XG4gICAgZWwuc2V0QXR0cmlidXRlKCdub25jZScsIG5vbmNlKTtcbiAgfVxuXG4gIC8qIFdvcmsgYXJvdW5kIGluc2VydFJ1bGUgcXVpcmsgaW4gRWRnZUhUTUwgKi9cbiAgZWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcblxuICBpZiAodGFyZ2V0ICYmICF0YWdFbCkge1xuICAgIC8qIEFwcGVuZCB0byB0YXJnZXQgd2hlbiBubyBwcmV2aW91cyBlbGVtZW50IHdhcyBwYXNzZWQgKi9cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoZWwpO1xuICB9IGVsc2Uge1xuICAgIGlmICghdGFnRWwgfHwgIXRhcmdldCB8fCAhdGFnRWwucGFyZW50Tm9kZSkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig2KTtcbiAgICB9XG5cbiAgICAvKiBJbnNlcnQgbmV3IHN0eWxlIHRhZyBhZnRlciB0aGUgcHJldmlvdXMgb25lICovXG4gICAgdGFnRWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWwsIGluc2VydEJlZm9yZSA/IHRhZ0VsIDogdGFnRWwubmV4dFNpYmxpbmcpO1xuICB9XG5cbiAgcmV0dXJuIGVsO1xufTtcblxuLyogdGFrZXMgYSBjc3MgZmFjdG9yeSBmdW5jdGlvbiBhbmQgb3V0cHV0cyBhbiBodG1sIHN0eWxlZCB0YWcgZmFjdG9yeSAqL1xudmFyIHdyYXBBc0h0bWxUYWcgPSBmdW5jdGlvbiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhZGRpdGlvbmFsQXR0cnMpIHtcbiAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICAgIHZhciBhdHRycyA9IFtub25jZSAmJiAnbm9uY2U9XCInICsgbm9uY2UgKyAnXCInLCBTQ19BVFRSICsgJz1cIicgKyBzdHJpbmdpZnlOYW1lcyhuYW1lcykgKyAnXCInLCBTQ19WRVJTSU9OX0FUVFIgKyAnPVwiJyArIFwiNC4xLjNcIiArICdcIicsIGFkZGl0aW9uYWxBdHRyc107XG5cbiAgICB2YXIgaHRtbEF0dHIgPSBhdHRycy5maWx0ZXIoQm9vbGVhbikuam9pbignICcpO1xuICAgIHJldHVybiAnPHN0eWxlICcgKyBodG1sQXR0ciArICc+JyArIGNzcygpICsgJzwvc3R5bGU+JztcbiAgfTtcbn07XG5cbi8qIHRha2VzIGEgY3NzIGZhY3RvcnkgZnVuY3Rpb24gYW5kIG91dHB1dHMgYW4gZWxlbWVudCBmYWN0b3J5ICovXG52YXIgd3JhcEFzRWxlbWVudCA9IGZ1bmN0aW9uIHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcHJvcHM7XG5cbiAgICB2YXIgcHJvcHMgPSAoX3Byb3BzID0ge30sIF9wcm9wc1tTQ19BVFRSXSA9IHN0cmluZ2lmeU5hbWVzKG5hbWVzKSwgX3Byb3BzW1NDX1ZFUlNJT05fQVRUUl0gPSBcIjQuMS4zXCIsIF9wcm9wcyk7XG5cbiAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICAgIGlmIChub25jZSkge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgcHJvcHMubm9uY2UgPSBub25jZTtcbiAgICB9XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3Qvbm8tZGFuZ2VyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJywgX2V4dGVuZHMoe30sIHByb3BzLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogY3NzKCkgfSB9KSk7XG4gIH07XG59O1xuXG52YXIgZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5ID0gZnVuY3Rpb24gZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMobWFya2Vycyk7XG4gIH07XG59O1xuXG4vKiBzcGVlZHkgdGFncyB1dGlsaXNlIGluc2VydFJ1bGUgKi9cbnZhciBtYWtlU3BlZWR5VGFnID0gZnVuY3Rpb24gbWFrZVNwZWVkeVRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICB2YXIgbmFtZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgbWFya2VycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBzaXplcyA9IFtdO1xuXG4gIHZhciBleHRyYWN0SW1wb3J0ID0gZ2V0SW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkO1xuICAvKiBpbmRpY2F0ZXMgd2hldGhlciBnZXRJbXBvcnRSdWxlVGFnIHdhcyBjYWxsZWQgKi9cbiAgdmFyIHVzZWRJbXBvcnRSdWxlVGFnID0gZmFsc2U7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgbWFya2Vyc1tpZF0gPSBzaXplcy5sZW5ndGg7XG4gICAgc2l6ZXMucHVzaCgwKTtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIHJldHVybiBtYXJrZXJzW2lkXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyhlbCk7XG4gICAgdmFyIGluc2VydEluZGV4ID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpO1xuXG4gICAgdmFyIGluamVjdGVkUnVsZXMgPSAwO1xuICAgIHZhciBpbXBvcnRSdWxlcyA9IFtdO1xuICAgIHZhciBjc3NSdWxlc1NpemUgPSBjc3NSdWxlcy5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNzc1J1bGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgY3NzUnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgdmFyIG1heUhhdmVJbXBvcnQgPSBleHRyYWN0SW1wb3J0OyAvKiBAaW1wb3J0IHJ1bGVzIGFyZSByZW9yZGVyZWQgdG8gYXBwZWFyIGZpcnN0ICovXG4gICAgICBpZiAobWF5SGF2ZUltcG9ydCAmJiBjc3NSdWxlLmluZGV4T2YoJ0BpbXBvcnQnKSAhPT0gLTEpIHtcbiAgICAgICAgaW1wb3J0UnVsZXMucHVzaChjc3NSdWxlKTtcbiAgICAgIH0gZWxzZSBpZiAoc2FmZUluc2VydFJ1bGUoc2hlZXQsIGNzc1J1bGUsIGluc2VydEluZGV4ICsgaW5qZWN0ZWRSdWxlcykpIHtcbiAgICAgICAgbWF5SGF2ZUltcG9ydCA9IGZhbHNlO1xuICAgICAgICBpbmplY3RlZFJ1bGVzICs9IDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgaW1wb3J0UnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgdXNlZEltcG9ydFJ1bGVUYWcgPSB0cnVlO1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLmluc2VydFJ1bGVzKGlkICsgJy1pbXBvcnQnLCBpbXBvcnRSdWxlcyk7XG4gICAgfVxuXG4gICAgc2l6ZXNbbWFya2VyXSArPSBpbmplY3RlZFJ1bGVzOyAvKiBhZGQgdXAgbm8gb2YgaW5qZWN0ZWQgcnVsZXMgKi9cbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBzaXplID0gc2l6ZXNbbWFya2VyXTtcbiAgICB2YXIgc2hlZXQgPSBzaGVldEZvclRhZyhlbCk7XG4gICAgdmFyIHJlbW92YWxJbmRleCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKSAtIDE7XG4gICAgZGVsZXRlUnVsZXMoc2hlZXQsIHJlbW92YWxJbmRleCwgc2l6ZSk7XG4gICAgc2l6ZXNbbWFya2VyXSA9IDA7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiB1c2VkSW1wb3J0UnVsZVRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLnJlbW92ZVJ1bGVzKGlkICsgJy1pbXBvcnQnKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgX3NoZWV0Rm9yVGFnID0gc2hlZXRGb3JUYWcoZWwpLFxuICAgICAgICBjc3NSdWxlcyA9IF9zaGVldEZvclRhZy5jc3NSdWxlcztcblxuICAgIHZhciBzdHIgPSAnJztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBzdHIgKz0gbWFrZVRleHRNYXJrZXIoaWQpO1xuICAgICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgICAgdmFyIGVuZCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKTtcbiAgICAgIHZhciBzaXplID0gc2l6ZXNbbWFya2VyXTtcbiAgICAgIGZvciAodmFyIGkgPSBlbmQgLSBzaXplOyBpIDwgZW5kOyBpICs9IDEpIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgICAgaWYgKHJ1bGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHN0ciArPSBydWxlLmNzc1RleHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY2xvbmU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig1KTtcbiAgICB9LFxuXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogZWwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xufTtcblxudmFyIG1ha2VUZXh0Tm9kZSA9IGZ1bmN0aW9uIG1ha2VUZXh0Tm9kZShpZCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobWFrZVRleHRNYXJrZXIoaWQpKTtcbn07XG5cbnZhciBtYWtlQnJvd3NlclRhZyA9IGZ1bmN0aW9uIG1ha2VCcm93c2VyVGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIHZhciBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBtYXJrZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICB2YXIgZXh0cmFjdEltcG9ydCA9IGdldEltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZDtcblxuICAvKiBpbmRpY2F0ZXMgd2hldGhlciBnZXRJbXBvcnRSdWxlVGFnIHdhcyBjYWxsZWQgKi9cbiAgdmFyIHVzZWRJbXBvcnRSdWxlVGFnID0gZmFsc2U7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgbWFya2Vyc1tpZF0gPSBtYWtlVGV4dE5vZGUoaWQpO1xuICAgIGVsLmFwcGVuZENoaWxkKG1hcmtlcnNbaWRdKTtcbiAgICBuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIHZhciBpbXBvcnRSdWxlcyA9IFtdO1xuICAgIHZhciBjc3NSdWxlc1NpemUgPSBjc3NSdWxlcy5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNzc1J1bGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgcnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgdmFyIG1heUhhdmVJbXBvcnQgPSBleHRyYWN0SW1wb3J0O1xuICAgICAgaWYgKG1heUhhdmVJbXBvcnQgJiYgcnVsZS5pbmRleE9mKCdAaW1wb3J0JykgIT09IC0xKSB7XG4gICAgICAgIGltcG9ydFJ1bGVzLnB1c2gocnVsZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXlIYXZlSW1wb3J0ID0gZmFsc2U7XG4gICAgICAgIHZhciBzZXBhcmF0b3IgPSBpID09PSBjc3NSdWxlc1NpemUgLSAxID8gJycgOiAnICc7XG4gICAgICAgIG1hcmtlci5hcHBlbmREYXRhKCcnICsgcnVsZSArIHNlcGFyYXRvcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiBpbXBvcnRSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICB1c2VkSW1wb3J0UnVsZVRhZyA9IHRydWU7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkuaW5zZXJ0UnVsZXMoaWQgKyAnLWltcG9ydCcsIGltcG9ydFJ1bGVzKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICAvKiBjcmVhdGUgbmV3IGVtcHR5IHRleHQgbm9kZSBhbmQgcmVwbGFjZSB0aGUgY3VycmVudCBvbmUgKi9cbiAgICB2YXIgbmV3TWFya2VyID0gbWFrZVRleHROb2RlKGlkKTtcbiAgICBlbC5yZXBsYWNlQ2hpbGQobmV3TWFya2VyLCBtYXJrZXIpO1xuICAgIG1hcmtlcnNbaWRdID0gbmV3TWFya2VyO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgdXNlZEltcG9ydFJ1bGVUYWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5yZW1vdmVSdWxlcyhpZCArICctaW1wb3J0Jyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHN0ciArPSBtYXJrZXJzW2lkXS5kYXRhO1xuICAgIH1cblxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBjbG9uZTogZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDUpO1xuICAgIH0sXG5cbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBlbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG59O1xuXG52YXIgbWFrZVNlcnZlclRhZyA9IGZ1bmN0aW9uIG1ha2VTZXJ2ZXJUYWcobmFtZXNBcmcsIG1hcmtlcnNBcmcpIHtcbiAgdmFyIG5hbWVzID0gbmFtZXNBcmcgPT09IHVuZGVmaW5lZCA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiBuYW1lc0FyZztcbiAgdmFyIG1hcmtlcnMgPSBtYXJrZXJzQXJnID09PSB1bmRlZmluZWQgPyBPYmplY3QuY3JlYXRlKG51bGwpIDogbWFya2Vyc0FyZztcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF0gPSBbJyddO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIG1hcmtlclswXSArPSBjc3NSdWxlcy5qb2luKCcgJyk7XG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG4gICAgbWFya2VyWzBdID0gJyc7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgc3RyID0gJyc7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHZhciBjc3NGb3JJZCA9IG1hcmtlcnNbaWRdWzBdO1xuICAgICAgaWYgKGNzc0ZvcklkKSB7XG4gICAgICAgIHN0ciArPSBtYWtlVGV4dE1hcmtlcihpZCkgKyBjc3NGb3JJZDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICB2YXIgY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICB2YXIgbmFtZXNDbG9uZSA9IGNsb25lTmFtZXMobmFtZXMpO1xuICAgIHZhciBtYXJrZXJzQ2xvbmUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIG1hcmtlcnNDbG9uZVtpZF0gPSBbbWFya2Vyc1tpZF1bMF1dO1xuICAgIH1cblxuICAgIHJldHVybiBtYWtlU2VydmVyVGFnKG5hbWVzQ2xvbmUsIG1hcmtlcnNDbG9uZSk7XG4gIH07XG5cbiAgdmFyIHRhZyA9IHtcbiAgICBjbG9uZTogY2xvbmUsXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogbnVsbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG5cbiAgcmV0dXJuIHRhZztcbn07XG5cbnZhciBtYWtlVGFnID0gZnVuY3Rpb24gbWFrZVRhZyh0YXJnZXQsIHRhZ0VsLCBmb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIGlmIChJU19CUk9XU0VSICYmICFmb3JjZVNlcnZlcikge1xuICAgIHZhciBlbCA9IG1ha2VTdHlsZVRhZyh0YXJnZXQsIHRhZ0VsLCBpbnNlcnRCZWZvcmUpO1xuXG4gICAgaWYgKERJU0FCTEVfU1BFRURZKSB7XG4gICAgICByZXR1cm4gbWFrZUJyb3dzZXJUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbWFrZVNwZWVkeVRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1ha2VTZXJ2ZXJUYWcoKTtcbn07XG5cbnZhciByZWh5ZHJhdGUgPSBmdW5jdGlvbiByZWh5ZHJhdGUodGFnLCBlbHMsIGV4dHJhY3RlZCkge1xuICAvKiBhZGQgYWxsIGV4dHJhY3RlZCBjb21wb25lbnRzIHRvIHRoZSBuZXcgdGFnICovXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBleHRyYWN0ZWQubGVuZ3RoOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICB2YXIgX2V4dHJhY3RlZCRpID0gZXh0cmFjdGVkW2ldLFxuICAgICAgICBjb21wb25lbnRJZCA9IF9leHRyYWN0ZWQkaS5jb21wb25lbnRJZCxcbiAgICAgICAgY3NzRnJvbURPTSA9IF9leHRyYWN0ZWQkaS5jc3NGcm9tRE9NO1xuXG4gICAgdmFyIGNzc1J1bGVzID0gc3BsaXRCeVJ1bGVzKGNzc0Zyb21ET00pO1xuICAgIHRhZy5pbnNlcnRSdWxlcyhjb21wb25lbnRJZCwgY3NzUnVsZXMpO1xuICB9XG5cbiAgLyogcmVtb3ZlIG9sZCBIVE1MU3R5bGVFbGVtZW50cywgc2luY2UgdGhleSBoYXZlIGJlZW4gcmVoeWRyYXRlZCAqL1xuICBmb3IgKHZhciBfaSA9IDAsIF9sZW4gPSBlbHMubGVuZ3RoOyBfaSA8IF9sZW47IF9pICs9IDEpIHtcbiAgICB2YXIgZWwgPSBlbHNbX2ldO1xuICAgIGlmIChlbC5wYXJlbnROb2RlKSB7XG4gICAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIFxuXG52YXIgU1BMSVRfUkVHRVggPSAvXFxzKy87XG5cbi8qIGRldGVybWluZSB0aGUgbWF4aW11bSBudW1iZXIgb2YgY29tcG9uZW50cyBiZWZvcmUgdGFncyBhcmUgc2hhcmRlZCAqL1xudmFyIE1BWF9TSVpFID0gdm9pZCAwO1xuaWYgKElTX0JST1dTRVIpIHtcbiAgLyogaW4gc3BlZWR5IG1vZGUgd2UgY2FuIGtlZXAgYSBsb3QgbW9yZSBydWxlcyBpbiBhIHNoZWV0IGJlZm9yZSBhIHNsb3dkb3duIGNhbiBiZSBleHBlY3RlZCAqL1xuICBNQVhfU0laRSA9IERJU0FCTEVfU1BFRURZID8gNDAgOiAxMDAwO1xufSBlbHNlIHtcbiAgLyogZm9yIHNlcnZlcnMgd2UgZG8gbm90IG5lZWQgdG8gc2hhcmQgYXQgYWxsICovXG4gIE1BWF9TSVpFID0gLTE7XG59XG5cbnZhciBzaGVldFJ1bm5pbmdJZCA9IDA7XG52YXIgbWFzdGVyID0gdm9pZCAwO1xuXG52YXIgU3R5bGVTaGVldCA9IGZ1bmN0aW9uICgpIHtcblxuICAvKiBhIG1hcCBmcm9tIGlkcyB0byB0YWdzICovXG5cbiAgLyogZGVmZXJyZWQgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQgKi9cblxuICAvKiB0aGlzIGlzIHVzZWQgZm9yIG5vdCByZWluamVjdGluZyBydWxlcyB2aWEgaGFzTmFtZUZvcklkKCkgKi9cblxuICAvKiB3aGVuIHJ1bGVzIGZvciBhbiBpZCBhcmUgcmVtb3ZlZCB1c2luZyByZW1vdmUoKSB3ZSBoYXZlIHRvIGlnbm9yZSByZWh5ZHJhdGVkTmFtZXMgZm9yIGl0ICovXG5cbiAgLyogYSBsaXN0IG9mIHRhZ3MgYmVsb25naW5nIHRvIHRoaXMgU3R5bGVTaGVldCAqL1xuXG4gIC8qIGEgdGFnIGZvciBpbXBvcnQgcnVsZXMgKi9cblxuICAvKiBjdXJyZW50IGNhcGFjaXR5IHVudGlsIGEgbmV3IHRhZyBtdXN0IGJlIGNyZWF0ZWQgKi9cblxuICAvKiBjaGlsZHJlbiAoYWthIGNsb25lcykgb2YgdGhpcyBTdHlsZVNoZWV0IGluaGVyaXRpbmcgYWxsIGFuZCBmdXR1cmUgaW5qZWN0aW9ucyAqL1xuXG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciB0YXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IElTX0JST1dTRVIgPyBkb2N1bWVudC5oZWFkIDogbnVsbDtcbiAgICB2YXIgZm9yY2VTZXJ2ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlU2hlZXQpO1xuXG4gICAgdGhpcy5nZXRJbXBvcnRSdWxlVGFnID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGltcG9ydFJ1bGVUYWcgPSBfdGhpcy5pbXBvcnRSdWxlVGFnO1xuXG4gICAgICBpZiAoaW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBpbXBvcnRSdWxlVGFnO1xuICAgICAgfVxuXG4gICAgICB2YXIgZmlyc3RUYWcgPSBfdGhpcy50YWdzWzBdO1xuICAgICAgdmFyIGluc2VydEJlZm9yZSA9IHRydWU7XG5cbiAgICAgIHJldHVybiBfdGhpcy5pbXBvcnRSdWxlVGFnID0gbWFrZVRhZyhfdGhpcy50YXJnZXQsIGZpcnN0VGFnID8gZmlyc3RUYWcuc3R5bGVUYWcgOiBudWxsLCBfdGhpcy5mb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlKTtcbiAgICB9O1xuXG4gICAgc2hlZXRSdW5uaW5nSWQgKz0gMTtcbiAgICB0aGlzLmlkID0gc2hlZXRSdW5uaW5nSWQ7XG4gICAgdGhpcy5mb3JjZVNlcnZlciA9IGZvcmNlU2VydmVyO1xuICAgIHRoaXMudGFyZ2V0ID0gZm9yY2VTZXJ2ZXIgPyBudWxsIDogdGFyZ2V0O1xuICAgIHRoaXMudGFnTWFwID0ge307XG4gICAgdGhpcy5kZWZlcnJlZCA9IHt9O1xuICAgIHRoaXMucmVoeWRyYXRlZE5hbWVzID0ge307XG4gICAgdGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXMgPSB7fTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmNhcGFjaXR5ID0gMTtcbiAgICB0aGlzLmNsb25lcyA9IFtdO1xuICB9XG5cbiAgLyogcmVoeWRyYXRlIGFsbCBTU1InZCBzdHlsZSB0YWdzICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5yZWh5ZHJhdGUgPSBmdW5jdGlvbiByZWh5ZHJhdGUkJDEoKSB7XG4gICAgaWYgKCFJU19CUk9XU0VSIHx8IHRoaXMuZm9yY2VTZXJ2ZXIpIHJldHVybiB0aGlzO1xuXG4gICAgdmFyIGVscyA9IFtdO1xuICAgIHZhciBleHRyYWN0ZWQgPSBbXTtcbiAgICB2YXIgaXNTdHJlYW1lZCA9IGZhbHNlO1xuXG4gICAgLyogcmV0cmlldmUgYWxsIG9mIG91ciBTU1Igc3R5bGUgZWxlbWVudHMgZnJvbSB0aGUgRE9NICovXG4gICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGVbJyArIFNDX0FUVFIgKyAnXVsnICsgU0NfVkVSU0lPTl9BVFRSICsgJz1cIicgKyBcIjQuMS4zXCIgKyAnXCJdJyk7XG5cbiAgICB2YXIgbm9kZXNTaXplID0gbm9kZXMubGVuZ3RoO1xuXG4gICAgLyogYWJvcnQgcmVoeWRyYXRpb24gaWYgbm8gcHJldmlvdXMgc3R5bGUgdGFncyB3ZXJlIGZvdW5kICovXG4gICAgaWYgKCFub2Rlc1NpemUpIHJldHVybiB0aGlzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIGVsID0gbm9kZXNbaV07XG5cbiAgICAgIC8qIGNoZWNrIGlmIHN0eWxlIHRhZyBpcyBhIHN0cmVhbWVkIHRhZyAqL1xuICAgICAgaWYgKCFpc1N0cmVhbWVkKSBpc1N0cmVhbWVkID0gISFlbC5nZXRBdHRyaWJ1dGUoU0NfU1RSRUFNX0FUVFIpO1xuXG4gICAgICAvKiByZXRyaWV2ZSBhbGwgY29tcG9uZW50IG5hbWVzICovXG4gICAgICB2YXIgZWxOYW1lcyA9IChlbC5nZXRBdHRyaWJ1dGUoU0NfQVRUUikgfHwgJycpLnRyaW0oKS5zcGxpdChTUExJVF9SRUdFWCk7XG4gICAgICB2YXIgZWxOYW1lc1NpemUgPSBlbE5hbWVzLmxlbmd0aDtcbiAgICAgIGZvciAodmFyIGogPSAwLCBuYW1lOyBqIDwgZWxOYW1lc1NpemU7IGogKz0gMSkge1xuICAgICAgICBuYW1lID0gZWxOYW1lc1tqXTtcbiAgICAgICAgLyogYWRkIHJlaHlkcmF0ZWQgbmFtZSB0byBzaGVldCB0byBhdm9pZCByZS1hZGRpbmcgc3R5bGVzICovXG4gICAgICAgIHRoaXMucmVoeWRyYXRlZE5hbWVzW25hbWVdID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXh0cmFjdCBhbGwgY29tcG9uZW50cyBhbmQgdGhlaXIgQ1NTICovXG4gICAgICBleHRyYWN0ZWQucHVzaC5hcHBseShleHRyYWN0ZWQsIGV4dHJhY3RDb21wcyhlbC50ZXh0Q29udGVudCkpO1xuXG4gICAgICAvKiBzdG9yZSBvcmlnaW5hbCBIVE1MU3R5bGVFbGVtZW50ICovXG4gICAgICBlbHMucHVzaChlbCk7XG4gICAgfVxuXG4gICAgLyogYWJvcnQgcmVoeWRyYXRpb24gaWYgbm90aGluZyB3YXMgZXh0cmFjdGVkICovXG4gICAgdmFyIGV4dHJhY3RlZFNpemUgPSBleHRyYWN0ZWQubGVuZ3RoO1xuICAgIGlmICghZXh0cmFjdGVkU2l6ZSkgcmV0dXJuIHRoaXM7XG5cbiAgICAvKiBjcmVhdGUgYSB0YWcgdG8gYmUgdXNlZCBmb3IgcmVoeWRyYXRpb24gKi9cbiAgICB2YXIgdGFnID0gdGhpcy5tYWtlVGFnKG51bGwpO1xuXG4gICAgcmVoeWRyYXRlKHRhZywgZWxzLCBleHRyYWN0ZWQpO1xuXG4gICAgLyogcmVzZXQgY2FwYWNpdHkgYW5kIGFkanVzdCBNQVhfU0laRSBieSB0aGUgaW5pdGlhbCBzaXplIG9mIHRoZSByZWh5ZHJhdGlvbiAqL1xuICAgIHRoaXMuY2FwYWNpdHkgPSBNYXRoLm1heCgxLCBNQVhfU0laRSAtIGV4dHJhY3RlZFNpemUpO1xuICAgIHRoaXMudGFncy5wdXNoKHRhZyk7XG5cbiAgICAvKiByZXRyaWV2ZSBhbGwgY29tcG9uZW50IGlkcyAqL1xuICAgIGZvciAodmFyIF9qID0gMDsgX2ogPCBleHRyYWN0ZWRTaXplOyBfaiArPSAxKSB7XG4gICAgICB0aGlzLnRhZ01hcFtleHRyYWN0ZWRbX2pdLmNvbXBvbmVudElkXSA9IHRhZztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKiByZXRyaWV2ZSBhIFwibWFzdGVyXCIgaW5zdGFuY2Ugb2YgU3R5bGVTaGVldCB3aGljaCBpcyB0eXBpY2FsbHkgdXNlZCB3aGVuIG5vIG90aGVyIGlzIGF2YWlsYWJsZVxuICAgKiBUaGUgbWFzdGVyIFN0eWxlU2hlZXQgaXMgdGFyZ2V0ZWQgYnkgY3JlYXRlR2xvYmFsU3R5bGUsIGtleWZyYW1lcywgYW5kIGNvbXBvbmVudHMgb3V0c2lkZSBvZiBhbnlcbiAgICAqIFN0eWxlU2hlZXRNYW5hZ2VyJ3MgY29udGV4dCAqL1xuXG5cbiAgLyogcmVzZXQgdGhlIGludGVybmFsIFwibWFzdGVyXCIgaW5zdGFuY2UgKi9cbiAgU3R5bGVTaGVldC5yZXNldCA9IGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIHZhciBmb3JjZVNlcnZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICBtYXN0ZXIgPSBuZXcgU3R5bGVTaGVldCh1bmRlZmluZWQsIGZvcmNlU2VydmVyKS5yZWh5ZHJhdGUoKTtcbiAgfTtcblxuICAvKiBhZGRzIFwiY2hpbGRyZW5cIiB0byB0aGUgU3R5bGVTaGVldCB0aGF0IGluaGVyaXQgYWxsIG9mIHRoZSBwYXJlbnRzJyBydWxlc1xuICAgKiB3aGlsZSB0aGVpciBvd24gcnVsZXMgZG8gbm90IGFmZmVjdCB0aGUgcGFyZW50ICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgIHZhciBzaGVldCA9IG5ldyBTdHlsZVNoZWV0KHRoaXMudGFyZ2V0LCB0aGlzLmZvcmNlU2VydmVyKTtcblxuICAgIC8qIGFkZCB0byBjbG9uZSBhcnJheSAqL1xuICAgIHRoaXMuY2xvbmVzLnB1c2goc2hlZXQpO1xuXG4gICAgLyogY2xvbmUgYWxsIHRhZ3MgKi9cbiAgICBzaGVldC50YWdzID0gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnKSB7XG4gICAgICB2YXIgaWRzID0gdGFnLmdldElkcygpO1xuICAgICAgdmFyIG5ld1RhZyA9IHRhZy5jbG9uZSgpO1xuXG4gICAgICAvKiByZWNvbnN0cnVjdCB0YWdNYXAgKi9cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIHNoZWV0LnRhZ01hcFtpZHNbaV1dID0gbmV3VGFnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3VGFnO1xuICAgIH0pO1xuXG4gICAgLyogY2xvbmUgb3RoZXIgbWFwcyAqL1xuICAgIHNoZWV0LnJlaHlkcmF0ZWROYW1lcyA9IF9leHRlbmRzKHt9LCB0aGlzLnJlaHlkcmF0ZWROYW1lcyk7XG4gICAgc2hlZXQuZGVmZXJyZWQgPSBfZXh0ZW5kcyh7fSwgdGhpcy5kZWZlcnJlZCk7XG5cbiAgICByZXR1cm4gc2hlZXQ7XG4gIH07XG5cbiAgLyogZm9yY2UgU3R5bGVTaGVldCB0byBjcmVhdGUgYSBuZXcgdGFnIG9uIHRoZSBuZXh0IGluamVjdGlvbiAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuc2VhbEFsbFRhZ3MgPSBmdW5jdGlvbiBzZWFsQWxsVGFncygpIHtcbiAgICB0aGlzLmNhcGFjaXR5ID0gMTtcblxuICAgIHRoaXMudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgdGFnLnNlYWxlZCA9IHRydWU7XG4gICAgfSk7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUubWFrZVRhZyA9IGZ1bmN0aW9uIG1ha2VUYWckJDEodGFnKSB7XG4gICAgdmFyIGxhc3RFbCA9IHRhZyA/IHRhZy5zdHlsZVRhZyA6IG51bGw7XG4gICAgdmFyIGluc2VydEJlZm9yZSA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIG1ha2VUYWcodGhpcy50YXJnZXQsIGxhc3RFbCwgdGhpcy5mb3JjZVNlcnZlciwgaW5zZXJ0QmVmb3JlLCB0aGlzLmdldEltcG9ydFJ1bGVUYWcpO1xuICB9O1xuXG4gIC8qIGdldCBhIHRhZyBmb3IgYSBnaXZlbiBjb21wb25lbnRJZCwgYXNzaWduIHRoZSBjb21wb25lbnRJZCB0byBvbmUsIG9yIHNoYXJkICovXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmdldFRhZ0ZvcklkID0gZnVuY3Rpb24gZ2V0VGFnRm9ySWQoaWQpIHtcbiAgICAvKiBzaW1wbHkgcmV0dXJuIGEgdGFnLCB3aGVuIHRoZSBjb21wb25lbnRJZCB3YXMgYWxyZWFkeSBhc3NpZ25lZCBvbmUgKi9cbiAgICB2YXIgcHJldiA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkICYmICFwcmV2LnNlYWxlZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICAvKiBzaGFyZCAoY3JlYXRlIGEgbmV3IHRhZykgaWYgdGhlIHRhZyBpcyBleGhhdXN0ZWQgKFNlZSBNQVhfU0laRSkgKi9cbiAgICB0aGlzLmNhcGFjaXR5IC09IDE7XG5cbiAgICBpZiAodGhpcy5jYXBhY2l0eSA9PT0gMCkge1xuICAgICAgdGhpcy5jYXBhY2l0eSA9IE1BWF9TSVpFO1xuICAgICAgdGFnID0gdGhpcy5tYWtlVGFnKHRhZyk7XG4gICAgICB0aGlzLnRhZ3MucHVzaCh0YWcpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnRhZ01hcFtpZF0gPSB0YWc7XG4gIH07XG5cbiAgLyogbWFpbmx5IGZvciBjcmVhdGVHbG9iYWxTdHlsZSB0byBjaGVjayBmb3IgaXRzIGlkICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5oYXNJZCA9IGZ1bmN0aW9uIGhhc0lkKGlkKSB7XG4gICAgcmV0dXJuIHRoaXMudGFnTWFwW2lkXSAhPT0gdW5kZWZpbmVkO1xuICB9O1xuXG4gIC8qIGNhY2hpbmcgbGF5ZXIgY2hlY2tpbmcgaWQrbmFtZSB0byBhbHJlYWR5IGhhdmUgYSBjb3JyZXNwb25kaW5nIHRhZyBhbmQgaW5qZWN0ZWQgcnVsZXMgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmhhc05hbWVGb3JJZCA9IGZ1bmN0aW9uIGhhc05hbWVGb3JJZChpZCwgbmFtZSkge1xuICAgIC8qIGV4Y2VwdGlvbiBmb3IgcmVoeWRyYXRlZCBuYW1lcyB3aGljaCBhcmUgY2hlY2tlZCBzZXBhcmF0ZWx5ICovXG4gICAgaWYgKHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzW2lkXSA9PT0gdW5kZWZpbmVkICYmIHRoaXMucmVoeWRyYXRlZE5hbWVzW25hbWVdKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIHJldHVybiB0YWcgIT09IHVuZGVmaW5lZCAmJiB0YWcuaGFzTmFtZUZvcklkKGlkLCBuYW1lKTtcbiAgfTtcblxuICAvKiByZWdpc3RlcnMgYSBjb21wb25lbnRJZCBhbmQgcmVnaXN0ZXJzIGl0IG9uIGl0cyB0YWcgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmRlZmVycmVkSW5qZWN0ID0gZnVuY3Rpb24gZGVmZXJyZWRJbmplY3QoaWQsIGNzc1J1bGVzKSB7XG4gICAgLyogZG9uJ3QgaW5qZWN0IHdoZW4gdGhlIGlkIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCAqL1xuICAgIGlmICh0aGlzLnRhZ01hcFtpZF0gIT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5kZWZlcnJlZEluamVjdChpZCwgY3NzUnVsZXMpO1xuICAgIH1cblxuICAgIHRoaXMuZ2V0VGFnRm9ySWQoaWQpLmluc2VydE1hcmtlcihpZCk7XG4gICAgdGhpcy5kZWZlcnJlZFtpZF0gPSBjc3NSdWxlcztcbiAgfTtcblxuICAvKiBpbmplY3RzIHJ1bGVzIGZvciBhIGdpdmVuIGlkIHdpdGggYSBuYW1lIHRoYXQgd2lsbCBuZWVkIHRvIGJlIGNhY2hlZCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaW5qZWN0ID0gZnVuY3Rpb24gaW5qZWN0KGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5pbmplY3QoaWQsIGNzc1J1bGVzLCBuYW1lKTtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy5nZXRUYWdGb3JJZChpZCk7XG5cbiAgICAvKiBhZGQgZGVmZXJyZWQgcnVsZXMgZm9yIGNvbXBvbmVudCAqL1xuICAgIGlmICh0aGlzLmRlZmVycmVkW2lkXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBDb21iaW5lIHBhc3NlZCBjc3NSdWxlcyB3aXRoIHByZXZpb3VzbHkgZGVmZXJyZWQgQ1NTIHJ1bGVzXG4gICAgICAvLyBOT1RFOiBXZSBjYW5ub3QgbXV0YXRlIHRoZSBkZWZlcnJlZCBhcnJheSBpdHNlbGYgYXMgYWxsIGNsb25lc1xuICAgICAgLy8gZG8gdGhlIHNhbWUgKHNlZSBjbG9uZXNbaV0uaW5qZWN0KVxuICAgICAgdmFyIHJ1bGVzID0gdGhpcy5kZWZlcnJlZFtpZF0uY29uY2F0KGNzc1J1bGVzKTtcbiAgICAgIHRhZy5pbnNlcnRSdWxlcyhpZCwgcnVsZXMsIG5hbWUpO1xuXG4gICAgICB0aGlzLmRlZmVycmVkW2lkXSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLmluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSk7XG4gICAgfVxuICB9O1xuXG4gIC8qIHJlbW92ZXMgYWxsIHJ1bGVzIGZvciBhIGdpdmVuIGlkLCB3aGljaCBkb2Vzbid0IHJlbW92ZSBpdHMgbWFya2VyIGJ1dCByZXNldHMgaXQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShpZCkge1xuICAgIHZhciB0YWcgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgaWYgKHRhZyA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLnJlbW92ZShpZCk7XG4gICAgfVxuXG4gICAgLyogcmVtb3ZlIGFsbCBydWxlcyBmcm9tIHRoZSB0YWcgKi9cbiAgICB0YWcucmVtb3ZlUnVsZXMoaWQpO1xuXG4gICAgLyogaWdub3JlIHBvc3NpYmxlIHJlaHlkcmF0ZWQgbmFtZXMgKi9cbiAgICB0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lc1tpZF0gPSB0cnVlO1xuXG4gICAgLyogZGVsZXRlIHBvc3NpYmxlIGRlZmVycmVkIHJ1bGVzICovXG4gICAgdGhpcy5kZWZlcnJlZFtpZF0gPSB1bmRlZmluZWQ7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24gdG9IVE1MKCkge1xuICAgIHJldHVybiB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHJldHVybiB0YWcudG9IVE1MKCk7XG4gICAgfSkuam9pbignJyk7XG4gIH07XG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUudG9SZWFjdEVsZW1lbnRzID0gZnVuY3Rpb24gdG9SZWFjdEVsZW1lbnRzKCkge1xuICAgIHZhciBpZCA9IHRoaXMuaWQ7XG5cblxuICAgIHJldHVybiB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcsIGkpIHtcbiAgICAgIHZhciBrZXkgPSAnc2MtJyArIGlkICsgJy0nICsgaTtcbiAgICAgIHJldHVybiBjbG9uZUVsZW1lbnQodGFnLnRvRWxlbWVudCgpLCB7IGtleToga2V5IH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGNyZWF0ZUNsYXNzKFN0eWxlU2hlZXQsIG51bGwsIFt7XG4gICAga2V5OiAnbWFzdGVyJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCQkMSgpIHtcbiAgICAgIHJldHVybiBtYXN0ZXIgfHwgKG1hc3RlciA9IG5ldyBTdHlsZVNoZWV0KCkucmVoeWRyYXRlKCkpO1xuICAgIH1cblxuICAgIC8qIE5PVEU6IFRoaXMgaXMganVzdCBmb3IgYmFja3dhcmRzLWNvbXBhdGliaWxpdHkgd2l0aCBqZXN0LXN0eWxlZC1jb21wb25lbnRzICovXG5cbiAgfSwge1xuICAgIGtleTogJ2luc3RhbmNlJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCQkMSgpIHtcbiAgICAgIHJldHVybiBTdHlsZVNoZWV0Lm1hc3RlcjtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbi8vIFxuXG52YXIgS2V5ZnJhbWVzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBLZXlmcmFtZXMobmFtZSwgcnVsZXMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgS2V5ZnJhbWVzKTtcblxuICAgIHRoaXMuaW5qZWN0ID0gZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoX3RoaXMuaWQsIF90aGlzLm5hbWUpKSB7XG4gICAgICAgIHN0eWxlU2hlZXQuaW5qZWN0KF90aGlzLmlkLCBfdGhpcy5ydWxlcywgX3RoaXMubmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEyLCBTdHJpbmcoX3RoaXMubmFtZSkpO1xuICAgIH07XG5cbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMucnVsZXMgPSBydWxlcztcblxuICAgIHRoaXMuaWQgPSAnc2Mta2V5ZnJhbWVzLScgKyBuYW1lO1xuICB9XG5cbiAgS2V5ZnJhbWVzLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gZ2V0TmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lO1xuICB9O1xuXG4gIHJldHVybiBLZXlmcmFtZXM7XG59KCk7XG5cbi8vIFxuXG4vKipcbiAqIGlubGluZWQgdmVyc2lvbiBvZlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2ZianMvYmxvYi9tYXN0ZXIvcGFja2FnZXMvZmJqcy9zcmMvY29yZS9oeXBoZW5hdGVTdHlsZU5hbWUuanNcbiAqL1xuXG52YXIgdXBwZXJjYXNlUGF0dGVybiA9IC8oW0EtWl0pL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xuXG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIENTUyBwcm9wZXJ0eSBuYW1lLCBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdiYWNrZ3JvdW5kQ29sb3InKVxuICogICA8IFwiYmFja2dyb3VuZC1jb2xvclwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdNb3pUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tb3otdHJhbnNpdGlvblwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdtc1RyYW5zaXRpb24nKVxuICogICA8IFwiLW1zLXRyYW5zaXRpb25cIlxuICpcbiAqIEFzIE1vZGVybml6ciBzdWdnZXN0cyAoaHR0cDovL21vZGVybml6ci5jb20vZG9jcy8jcHJlZml4ZWQpLCBhbiBgbXNgIHByZWZpeFxuICogaXMgY29udmVydGVkIHRvIGAtbXMtYC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHVwcGVyY2FzZVBhdHRlcm4sICctJDEnKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UobXNQYXR0ZXJuLCAnLW1zLScpO1xufVxuXG4vLyBcblxuLy8gVGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9iODdhYWJkZmUxYjc0NjFlNzMzMWFiYjM2MDFkOWU2YmIyNzU0NGJjL3BhY2thZ2VzL3JlYWN0LWRvbS9zcmMvc2hhcmVkL2Rhbmdlcm91c1N0eWxlVmFsdWUuanNcbmZ1bmN0aW9uIGFkZFVuaXRJZk5lZWRlZChuYW1lLCB2YWx1ZSkge1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vYW1pbGFqYWNrL2VzbGludC1wbHVnaW4tZmxvd3R5cGUtZXJyb3JzL2lzc3Vlcy8xMzNcbiAgLy8gJEZsb3dGaXhNZVxuICBpZiAodmFsdWUgPT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJyB8fCB2YWx1ZSA9PT0gJycpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSAhPT0gMCAmJiAhKG5hbWUgaW4gdW5pdGxlc3MpKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgJ3B4JzsgLy8gUHJlc3VtZXMgaW1wbGljaXQgJ3B4JyBzdWZmaXggZm9yIHVuaXRsZXNzIG51bWJlcnNcbiAgfVxuXG4gIHJldHVybiBTdHJpbmcodmFsdWUpLnRyaW0oKTtcbn1cblxuLy8gXG5cbi8qKlxuICogSXQncyBmYWxzaXNoIG5vdCBmYWxzeSBiZWNhdXNlIDAgaXMgYWxsb3dlZC5cbiAqL1xudmFyIGlzRmFsc2lzaCA9IGZ1bmN0aW9uIGlzRmFsc2lzaChjaHVuaykge1xuICByZXR1cm4gY2h1bmsgPT09IHVuZGVmaW5lZCB8fCBjaHVuayA9PT0gbnVsbCB8fCBjaHVuayA9PT0gZmFsc2UgfHwgY2h1bmsgPT09ICcnO1xufTtcblxudmFyIG9ialRvQ3NzID0gZnVuY3Rpb24gb2JqVG9Dc3Mob2JqLCBwcmV2S2V5KSB7XG4gIHZhciBjc3MgPSBPYmplY3Qua2V5cyhvYmopLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFpc0ZhbHNpc2gob2JqW2tleV0pO1xuICB9KS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIGlmIChpc1BsYWluT2JqZWN0KG9ialtrZXldKSkgcmV0dXJuIG9ialRvQ3NzKG9ialtrZXldLCBrZXkpO1xuICAgIHJldHVybiBoeXBoZW5hdGVTdHlsZU5hbWUoa2V5KSArICc6ICcgKyBhZGRVbml0SWZOZWVkZWQoa2V5LCBvYmpba2V5XSkgKyAnOyc7XG4gIH0pLmpvaW4oJyAnKTtcbiAgcmV0dXJuIHByZXZLZXkgPyBwcmV2S2V5ICsgJyB7XFxuICAnICsgY3NzICsgJ1xcbn0nIDogY3NzO1xufTtcblxuZnVuY3Rpb24gZmxhdHRlbihjaHVuaywgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShjaHVuaykpIHtcbiAgICB2YXIgcnVsZVNldCA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNodW5rLmxlbmd0aCwgcmVzdWx0OyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICAgIHJlc3VsdCA9IGZsYXR0ZW4oY2h1bmtbaV0sIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuXG4gICAgICBpZiAocmVzdWx0ID09PSBudWxsKSBjb250aW51ZTtlbHNlIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdCkpIHJ1bGVTZXQucHVzaC5hcHBseShydWxlU2V0LCByZXN1bHQpO2Vsc2UgcnVsZVNldC5wdXNoKHJlc3VsdCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJ1bGVTZXQ7XG4gIH1cblxuICBpZiAoaXNGYWxzaXNoKGNodW5rKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLyogSGFuZGxlIG90aGVyIGNvbXBvbmVudHMgKi9cbiAgaWYgKGlzU3R5bGVkQ29tcG9uZW50KGNodW5rKSkge1xuICAgIHJldHVybiAnLicgKyBjaHVuay5zdHlsZWRDb21wb25lbnRJZDtcbiAgfVxuXG4gIC8qIEVpdGhlciBleGVjdXRlIG9yIGRlZmVyIHRoZSBmdW5jdGlvbiAqL1xuICBpZiAoaXNGdW5jdGlvbihjaHVuaykpIHtcbiAgICBpZiAoZXhlY3V0aW9uQ29udGV4dCkge1xuICAgICAgdmFyIHNob3VsZFRocm93ID0gZmFsc2U7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuZXctY2FwXG4gICAgICAgIGlmIChpc0VsZW1lbnQobmV3IGNodW5rKGV4ZWN1dGlvbkNvbnRleHQpKSkge1xuICAgICAgICAgIHNob3VsZFRocm93ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvKiAqL1xuICAgICAgfVxuXG4gICAgICBpZiAoc2hvdWxkVGhyb3cpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxMywgZ2V0Q29tcG9uZW50TmFtZShjaHVuaykpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmxhdHRlbihjaHVuayhleGVjdXRpb25Db250ZXh0KSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG4gICAgfSBlbHNlIHJldHVybiBjaHVuaztcbiAgfVxuXG4gIGlmIChjaHVuayBpbnN0YW5jZW9mIEtleWZyYW1lcykge1xuICAgIGlmIChzdHlsZVNoZWV0KSB7XG4gICAgICBjaHVuay5pbmplY3Qoc3R5bGVTaGVldCk7XG4gICAgICByZXR1cm4gY2h1bmsuZ2V0TmFtZSgpO1xuICAgIH0gZWxzZSByZXR1cm4gY2h1bms7XG4gIH1cblxuICAvKiBIYW5kbGUgb2JqZWN0cyAqL1xuICByZXR1cm4gaXNQbGFpbk9iamVjdChjaHVuaykgPyBvYmpUb0NzcyhjaHVuaykgOiBjaHVuay50b1N0cmluZygpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gY3NzKHN0eWxlcykge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGlzRnVuY3Rpb24oc3R5bGVzKSB8fCBpc1BsYWluT2JqZWN0KHN0eWxlcykpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIGZsYXR0ZW4oaW50ZXJsZWF2ZShFTVBUWV9BUlJBWSwgW3N0eWxlc10uY29uY2F0KGludGVycG9sYXRpb25zKSkpO1xuICB9XG5cbiAgLy8gJEZsb3dGaXhNZVxuICByZXR1cm4gZmxhdHRlbihpbnRlcmxlYXZlKHN0eWxlcywgaW50ZXJwb2xhdGlvbnMpKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IEVNUFRZX09CSkVDVDtcblxuICBpZiAoIWlzVmFsaWRFbGVtZW50VHlwZSh0YWcpKSB7XG4gICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxLCBTdHJpbmcodGFnKSk7XG4gIH1cblxuICAvKiBUaGlzIGlzIGNhbGxhYmxlIGRpcmVjdGx5IGFzIGEgdGVtcGxhdGUgZnVuY3Rpb24gKi9cbiAgLy8gJEZsb3dGaXhNZTogTm90IHR5cGVkIHRvIGF2b2lkIGRlc3RydWN0dXJpbmcgYXJndW1lbnRzXG4gIHZhciB0ZW1wbGF0ZUZ1bmN0aW9uID0gZnVuY3Rpb24gdGVtcGxhdGVGdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29tcG9uZW50Q29uc3RydWN0b3IodGFnLCBvcHRpb25zLCBjc3MuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICAvKiBJZiBjb25maWcgbWV0aG9kcyBhcmUgY2FsbGVkLCB3cmFwIHVwIGEgbmV3IHRlbXBsYXRlIGZ1bmN0aW9uIGFuZCBtZXJnZSBvcHRpb25zICovXG4gIHRlbXBsYXRlRnVuY3Rpb24ud2l0aENvbmZpZyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIGNvbmZpZykpO1xuICB9O1xuXG4gIC8qIE1vZGlmeS9pbmplY3QgbmV3IHByb3BzIGF0IHJ1bnRpbWUgKi9cbiAgdGVtcGxhdGVGdW5jdGlvbi5hdHRycyA9IGZ1bmN0aW9uIChhdHRycykge1xuICAgIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgYXR0cnM6IEFycmF5LnByb3RvdHlwZS5jb25jYXQob3B0aW9ucy5hdHRycywgYXR0cnMpLmZpbHRlcihCb29sZWFuKVxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gdGVtcGxhdGVGdW5jdGlvbjtcbn1cblxuLy8gXG4vLyBTb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9nYXJ5Y291cnQvbXVybXVyaGFzaC1qcy9ibG9iL21hc3Rlci9tdXJtdXJoYXNoMl9nYy5qc1xuZnVuY3Rpb24gbXVybXVyaGFzaChjKSB7XG4gIGZvciAodmFyIGUgPSBjLmxlbmd0aCB8IDAsIGEgPSBlIHwgMCwgZCA9IDAsIGI7IGUgPj0gNDspIHtcbiAgICBiID0gYy5jaGFyQ29kZUF0KGQpICYgMjU1IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCA4IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCAxNiB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgMjQsIGIgPSAxNTQwNDgzNDc3ICogKGIgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYiA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSwgYiBePSBiID4+PiAyNCwgYiA9IDE1NDA0ODM0NzcgKiAoYiAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChiID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpLCBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNikgXiBiLCBlIC09IDQsICsrZDtcbiAgfVxuICBzd2l0Y2ggKGUpIHtcbiAgICBjYXNlIDM6XG4gICAgICBhIF49IChjLmNoYXJDb2RlQXQoZCArIDIpICYgMjU1KSA8PCAxNjtcbiAgICBjYXNlIDI6XG4gICAgICBhIF49IChjLmNoYXJDb2RlQXQoZCArIDEpICYgMjU1KSA8PCA4O1xuICAgIGNhc2UgMTpcbiAgICAgIGEgXj0gYy5jaGFyQ29kZUF0KGQpICYgMjU1LCBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNik7XG4gIH1cbiAgYSBePSBhID4+PiAxMztcbiAgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpO1xuICByZXR1cm4gKGEgXiBhID4+PiAxNSkgPj4+IDA7XG59XG5cbi8vIFxuLyogZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKiBUaGlzIGlzIHRoZSBcImNhcGFjaXR5XCIgb2Ygb3VyIGFscGhhYmV0IGkuZS4gMngyNiBmb3IgYWxsIGxldHRlcnMgcGx1cyB0aGVpciBjYXBpdGFsaXNlZFxuICogY291bnRlcnBhcnRzICovXG52YXIgY2hhcnNMZW5ndGggPSA1MjtcblxuLyogc3RhcnQgYXQgNzUgZm9yICdhJyB1bnRpbCAneicgKDI1KSBhbmQgdGhlbiBzdGFydCBhdCA2NSBmb3IgY2FwaXRhbGlzZWQgbGV0dGVycyAqL1xudmFyIGdldEFscGhhYmV0aWNDaGFyID0gZnVuY3Rpb24gZ2V0QWxwaGFiZXRpY0NoYXIoY29kZSkge1xuICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlICsgKGNvZGUgPiAyNSA/IDM5IDogOTcpKTtcbn07XG5cbi8qIGlucHV0IGEgbnVtYmVyLCB1c3VhbGx5IGEgaGFzaCBhbmQgY29udmVydCBpdCB0byBiYXNlLTUyICovXG5mdW5jdGlvbiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKGNvZGUpIHtcbiAgdmFyIG5hbWUgPSAnJztcbiAgdmFyIHggPSB2b2lkIDA7XG5cbiAgLyogZ2V0IGEgY2hhciBhbmQgZGl2aWRlIGJ5IGFscGhhYmV0LWxlbmd0aCAqL1xuICBmb3IgKHggPSBjb2RlOyB4ID4gY2hhcnNMZW5ndGg7IHggPSBNYXRoLmZsb29yKHggLyBjaGFyc0xlbmd0aCkpIHtcbiAgICBuYW1lID0gZ2V0QWxwaGFiZXRpY0NoYXIoeCAlIGNoYXJzTGVuZ3RoKSArIG5hbWU7XG4gIH1cblxuICByZXR1cm4gZ2V0QWxwaGFiZXRpY0NoYXIoeCAlIGNoYXJzTGVuZ3RoKSArIG5hbWU7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBoYXNGdW5jdGlvbk9iamVjdEtleShvYmopIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pbiwgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChpc0Z1bmN0aW9uKG9ialtrZXldKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBpc1N0YXRpY1J1bGVzKHJ1bGVzLCBhdHRycykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcblxuICAgIC8vIHJlY3Vyc2l2ZSBjYXNlXG4gICAgaWYgKEFycmF5LmlzQXJyYXkocnVsZSkgJiYgIWlzU3RhdGljUnVsZXMocnVsZSwgYXR0cnMpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChpc0Z1bmN0aW9uKHJ1bGUpICYmICFpc1N0eWxlZENvbXBvbmVudChydWxlKSkge1xuICAgICAgLy8gZnVuY3Rpb25zIGFyZSBhbGxvd2VkIHRvIGJlIHN0YXRpYyBpZiB0aGV5J3JlIGp1c3QgYmVpbmdcbiAgICAgIC8vIHVzZWQgdG8gZ2V0IHRoZSBjbGFzc25hbWUgb2YgYSBuZXN0ZWQgc3R5bGVkIGNvbXBvbmVudFxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChhdHRycy5zb21lKGZ1bmN0aW9uICh4KSB7XG4gICAgcmV0dXJuIGlzRnVuY3Rpb24oeCkgfHwgaGFzRnVuY3Rpb25PYmplY3RLZXkoeCk7XG4gIH0pKSByZXR1cm4gZmFsc2U7XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vIFxuXG52YXIgaXNITVJFbmFibGVkID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuaG90O1xuXG4vKiBjb21iaW5lcyBoYXNoU3RyIChtdXJtdXJoYXNoKSBhbmQgbmFtZUdlbmVyYXRvciBmb3IgY29udmVuaWVuY2UgKi9cbnZhciBoYXNoZXIgPSBmdW5jdGlvbiBoYXNoZXIoc3RyKSB7XG4gIHJldHVybiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKG11cm11cmhhc2goc3RyKSk7XG59O1xuXG4vKlxuIENvbXBvbmVudFN0eWxlIGlzIGFsbCB0aGUgQ1NTLXNwZWNpZmljIHN0dWZmLCBub3RcbiB0aGUgUmVhY3Qtc3BlY2lmaWMgc3R1ZmYuXG4gKi9cblxudmFyIENvbXBvbmVudFN0eWxlID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDb21wb25lbnRTdHlsZShydWxlcywgYXR0cnMsIGNvbXBvbmVudElkKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tcG9uZW50U3R5bGUpO1xuXG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuICAgIHRoaXMuaXNTdGF0aWMgPSAhaXNITVJFbmFibGVkICYmIGlzU3RhdGljUnVsZXMocnVsZXMsIGF0dHJzKTtcbiAgICB0aGlzLmNvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG5cbiAgICBpZiAoIVN0eWxlU2hlZXQubWFzdGVyLmhhc0lkKGNvbXBvbmVudElkKSkge1xuICAgICAgU3R5bGVTaGVldC5tYXN0ZXIuZGVmZXJyZWRJbmplY3QoY29tcG9uZW50SWQsIFtdKTtcbiAgICB9XG4gIH1cblxuICAvKlxuICAgICAqIEZsYXR0ZW5zIGEgcnVsZSBzZXQgaW50byB2YWxpZCBDU1NcbiAgICAgKiBIYXNoZXMgaXQsIHdyYXBzIHRoZSB3aG9sZSBjaHVuayBpbiBhIC5oYXNoMTIzNCB7fVxuICAgICAqIFJldHVybnMgdGhlIGhhc2ggdG8gYmUgaW5qZWN0ZWQgb24gcmVuZGVyKClcbiAgICAgKiAqL1xuXG5cbiAgQ29tcG9uZW50U3R5bGUucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHZhciBpc1N0YXRpYyA9IHRoaXMuaXNTdGF0aWMsXG4gICAgICAgIGNvbXBvbmVudElkID0gdGhpcy5jb21wb25lbnRJZCxcbiAgICAgICAgbGFzdENsYXNzTmFtZSA9IHRoaXMubGFzdENsYXNzTmFtZTtcblxuICAgIGlmIChJU19CUk9XU0VSICYmIGlzU3RhdGljICYmIHR5cGVvZiBsYXN0Q2xhc3NOYW1lID09PSAnc3RyaW5nJyAmJiBzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChjb21wb25lbnRJZCwgbGFzdENsYXNzTmFtZSkpIHtcbiAgICAgIHJldHVybiBsYXN0Q2xhc3NOYW1lO1xuICAgIH1cblxuICAgIHZhciBmbGF0Q1NTID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB2YXIgbmFtZSA9IGhhc2hlcih0aGlzLmNvbXBvbmVudElkICsgZmxhdENTUy5qb2luKCcnKSk7XG4gICAgaWYgKCFzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChjb21wb25lbnRJZCwgbmFtZSkpIHtcbiAgICAgIHN0eWxlU2hlZXQuaW5qZWN0KHRoaXMuY29tcG9uZW50SWQsIHN0cmluZ2lmeVJ1bGVzKGZsYXRDU1MsICcuJyArIG5hbWUsIHVuZGVmaW5lZCwgY29tcG9uZW50SWQpLCBuYW1lKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhc3RDbGFzc05hbWUgPSBuYW1lO1xuICAgIHJldHVybiBuYW1lO1xuICB9O1xuXG4gIENvbXBvbmVudFN0eWxlLmdlbmVyYXRlTmFtZSA9IGZ1bmN0aW9uIGdlbmVyYXRlTmFtZShzdHIpIHtcbiAgICByZXR1cm4gaGFzaGVyKHN0cik7XG4gIH07XG5cbiAgcmV0dXJuIENvbXBvbmVudFN0eWxlO1xufSgpO1xuXG4vLyBcblxudmFyIExJTUlUID0gMjAwO1xuXG52YXIgY3JlYXRlV2FyblRvb01hbnlDbGFzc2VzID0gKGZ1bmN0aW9uIChkaXNwbGF5TmFtZSkge1xuICB2YXIgZ2VuZXJhdGVkQ2xhc3NlcyA9IHt9O1xuICB2YXIgd2FybmluZ1NlZW4gPSBmYWxzZTtcblxuICByZXR1cm4gZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmICghd2FybmluZ1NlZW4pIHtcbiAgICAgIGdlbmVyYXRlZENsYXNzZXNbY2xhc3NOYW1lXSA9IHRydWU7XG4gICAgICBpZiAoT2JqZWN0LmtleXMoZ2VuZXJhdGVkQ2xhc3NlcykubGVuZ3RoID49IExJTUlUKSB7XG4gICAgICAgIC8vIFVuYWJsZSB0byBmaW5kIGxhdGVzdFJ1bGUgaW4gdGVzdCBlbnZpcm9ubWVudC5cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSwgcHJlZmVyLXRlbXBsYXRlICovXG4gICAgICAgIGNvbnNvbGUud2FybignT3ZlciAnICsgTElNSVQgKyAnIGNsYXNzZXMgd2VyZSBnZW5lcmF0ZWQgZm9yIGNvbXBvbmVudCAnICsgZGlzcGxheU5hbWUgKyAnLiBcXG4nICsgJ0NvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuJyArICdFeGFtcGxlOlxcbicgKyAnICBjb25zdCBDb21wb25lbnQgPSBzdHlsZWQuZGl2LmF0dHJzKHtcXG4nICsgJyAgICBzdHlsZTogKHsgYmFja2dyb3VuZCB9KSA9PiAoe1xcbicgKyAnICAgICAgYmFja2dyb3VuZCxcXG4nICsgJyAgICB9KSxcXG4nICsgJyAgfSlgd2lkdGg6IDEwMCU7YFxcblxcbicgKyAnICA8Q29tcG9uZW50IC8+Jyk7XG4gICAgICAgIHdhcm5pbmdTZWVuID0gdHJ1ZTtcbiAgICAgICAgZ2VuZXJhdGVkQ2xhc3NlcyA9IHt9O1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyBcblxudmFyIGRldGVybWluZVRoZW1lID0gKGZ1bmN0aW9uIChwcm9wcywgZmFsbGJhY2tUaGVtZSkge1xuICB2YXIgZGVmYXVsdFByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBFTVBUWV9PQkpFQ1Q7XG5cbiAgLy8gUHJvcHMgc2hvdWxkIHRha2UgcHJlY2VkZW5jZSBvdmVyIFRoZW1lUHJvdmlkZXIsIHdoaWNoIHNob3VsZCB0YWtlIHByZWNlZGVuY2Ugb3ZlclxuICAvLyBkZWZhdWx0UHJvcHMsIGJ1dCBSZWFjdCBhdXRvbWF0aWNhbGx5IHB1dHMgZGVmYXVsdFByb3BzIG9uIHByb3BzLlxuXG4gIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMsIGZsb3d0eXBlLWVycm9ycy9zaG93LWVycm9ycyAqL1xuICB2YXIgaXNEZWZhdWx0VGhlbWUgPSBkZWZhdWx0UHJvcHMgPyBwcm9wcy50aGVtZSA9PT0gZGVmYXVsdFByb3BzLnRoZW1lIDogZmFsc2U7XG4gIHZhciB0aGVtZSA9IHByb3BzLnRoZW1lICYmICFpc0RlZmF1bHRUaGVtZSA/IHByb3BzLnRoZW1lIDogZmFsbGJhY2tUaGVtZSB8fCBkZWZhdWx0UHJvcHMudGhlbWU7XG4gIC8qIGVzbGludC1lbmFibGUgKi9cblxuICByZXR1cm4gdGhlbWU7XG59KTtcblxuLy8gXG52YXIgZXNjYXBlUmVnZXggPSAvW1tcXF0uIyokPjwrfj18XjooKSxcIidgLV0rL2c7XG52YXIgZGFzaGVzQXRFbmRzID0gLyheLXwtJCkvZztcblxuLyoqXG4gKiBUT0RPOiBFeHBsb3JlIHVzaW5nIENTUy5lc2NhcGUgd2hlbiBpdCBiZWNvbWVzIG1vcmUgYXZhaWxhYmxlXG4gKiBpbiBldmVyZ3JlZW4gYnJvd3NlcnMuXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZShzdHIpIHtcbiAgcmV0dXJuIHN0clxuICAvLyBSZXBsYWNlIGFsbCBwb3NzaWJsZSBDU1Mgc2VsZWN0b3JzXG4gIC5yZXBsYWNlKGVzY2FwZVJlZ2V4LCAnLScpXG5cbiAgLy8gUmVtb3ZlIGV4dHJhbmVvdXMgaHlwaGVucyBhdCB0aGUgc3RhcnQgYW5kIGVuZFxuICAucmVwbGFjZShkYXNoZXNBdEVuZHMsICcnKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGlzVGFnKHRhcmdldCkge1xuICByZXR1cm4gdHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycgJiYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB0YXJnZXQuY2hhckF0KDApID09PSB0YXJnZXQuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgOiB0cnVlKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGdlbmVyYXRlRGlzcGxheU5hbWUodGFyZ2V0KSB7XG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIGlzVGFnKHRhcmdldCkgPyAnc3R5bGVkLicgKyB0YXJnZXQgOiAnU3R5bGVkKCcgKyBnZXRDb21wb25lbnROYW1lKHRhcmdldCkgKyAnKSc7XG59XG5cbnZhciBfVFlQRV9TVEFUSUNTO1xuXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG5cbnZhciBUWVBFX1NUQVRJQ1MgPSAoX1RZUEVfU1RBVElDUyA9IHt9LCBfVFlQRV9TVEFUSUNTW0ZvcndhcmRSZWZdID0ge1xuICAkJHR5cGVvZjogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlXG59LCBfVFlQRV9TVEFUSUNTKTtcblxudmFyIGRlZmluZVByb3BlcnR5JDEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHksXG4gICAgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAgIF9PYmplY3QkZ2V0T3duUHJvcGVydCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsXG4gICAgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gX09iamVjdCRnZXRPd25Qcm9wZXJ0ID09PSB1bmRlZmluZWQgPyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBbXTtcbn0gOiBfT2JqZWN0JGdldE93blByb3BlcnQsXG4gICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgICBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZixcbiAgICBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xudmFyIGFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBhcnJheVByb3RvdHlwZS5jb25jYXQoZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpLFxuICAgIC8vICRGbG93Rml4TWVcbiAgICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IFRZUEVfU1RBVElDU1t0YXJnZXRDb21wb25lbnQuJCR0eXBlb2ZdIHx8IFJFQUNUX1NUQVRJQ1M7XG5cbiAgICB2YXIgc291cmNlU3RhdGljcyA9IFRZUEVfU1RBVElDU1tzb3VyY2VDb21wb25lbnQuJCR0eXBlb2ZdIHx8IFJFQUNUX1NUQVRJQ1M7XG5cbiAgICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBkZXNjcmlwdG9yID0gdm9pZCAwO1xuICAgIHZhciBrZXkgPSB2b2lkIDA7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGx1c3BsdXNcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAhS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJlxuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgaWYgKGRlc2NyaXB0b3IpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkkMSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgLyogZmFpbCBzaWxlbnRseSAqL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGZuKSB7XG4gIHJldHVybiAhIShmbiAmJiBmbi5wcm90b3R5cGUgJiYgZm4ucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQpO1xufVxuXG4vLyBcbi8vIEhlbHBlciB0byBjYWxsIGEgZ2l2ZW4gZnVuY3Rpb24sIG9ubHkgb25jZVxudmFyIG9uY2UgPSAoZnVuY3Rpb24gKGNiKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmICghY2FsbGVkKSB7XG4gICAgICBjYWxsZWQgPSB0cnVlO1xuICAgICAgY2IuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyBcblxudmFyIFRoZW1lQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxudmFyIFRoZW1lQ29uc3VtZXIgPSBUaGVtZUNvbnRleHQuQ29uc3VtZXI7XG5cbi8qKlxuICogUHJvdmlkZSBhIHRoZW1lIHRvIGFuIGVudGlyZSByZWFjdCBjb21wb25lbnQgdHJlZSB2aWEgY29udGV4dFxuICovXG5cbnZhciBUaGVtZVByb3ZpZGVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgaW5oZXJpdHMoVGhlbWVQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVGhlbWVQcm92aWRlcihwcm9wcykge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFRoZW1lUHJvdmlkZXIpO1xuXG4gICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLmdldENvbnRleHQgPSBtZW1vaXplKF90aGlzLmdldENvbnRleHQuYmluZChfdGhpcykpO1xuICAgIF90aGlzLnJlbmRlcklubmVyID0gX3RoaXMucmVuZGVySW5uZXIuYmluZChfdGhpcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5wcm9wcy5jaGlsZHJlbikgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29udGV4dC5Db25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlcklubmVyXG4gICAgKTtcbiAgfTtcblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXJJbm5lciA9IGZ1bmN0aW9uIHJlbmRlcklubmVyKG91dGVyVGhlbWUpIHtcbiAgICB2YXIgY29udGV4dCA9IHRoaXMuZ2V0Q29udGV4dCh0aGlzLnByb3BzLnRoZW1lLCBvdXRlclRoZW1lKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb250ZXh0LlByb3ZpZGVyLFxuICAgICAgeyB2YWx1ZTogY29udGV4dCB9LFxuICAgICAgUmVhY3QuQ2hpbGRyZW4ub25seSh0aGlzLnByb3BzLmNoaWxkcmVuKVxuICAgICk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgdGhlbWUgZnJvbSB0aGUgcHJvcHMsIHN1cHBvcnRpbmcgYm90aCAob3V0ZXJUaGVtZSkgPT4ge31cbiAgICogYXMgd2VsbCBhcyBvYmplY3Qgbm90YXRpb25cbiAgICovXG5cblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5nZXRUaGVtZSA9IGZ1bmN0aW9uIGdldFRoZW1lKHRoZW1lLCBvdXRlclRoZW1lKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24odGhlbWUpKSB7XG4gICAgICB2YXIgbWVyZ2VkVGhlbWUgPSB0aGVtZShvdXRlclRoZW1lKTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKG1lcmdlZFRoZW1lID09PSBudWxsIHx8IEFycmF5LmlzQXJyYXkobWVyZ2VkVGhlbWUpIHx8ICh0eXBlb2YgbWVyZ2VkVGhlbWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG1lcmdlZFRoZW1lKSkgIT09ICdvYmplY3QnKSkge1xuICAgICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDcpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2VkVGhlbWU7XG4gICAgfVxuXG4gICAgaWYgKHRoZW1lID09PSBudWxsIHx8IEFycmF5LmlzQXJyYXkodGhlbWUpIHx8ICh0eXBlb2YgdGhlbWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHRoZW1lKSkgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDgpO1xuICAgIH1cblxuICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgb3V0ZXJUaGVtZSwgdGhlbWUpO1xuICB9O1xuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLmdldENvbnRleHQgPSBmdW5jdGlvbiBnZXRDb250ZXh0KHRoZW1lLCBvdXRlclRoZW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VGhlbWUodGhlbWUsIG91dGVyVGhlbWUpO1xuICB9O1xuXG4gIHJldHVybiBUaGVtZVByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG4vLyBcblxudmFyIFNlcnZlclN0eWxlU2hlZXQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlcnZlclN0eWxlU2hlZXQoKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VydmVyU3R5bGVTaGVldCk7XG5cbiAgICAvKiBUaGUgbWFzdGVyIHNoZWV0IG1pZ2h0IGJlIHJlc2V0LCBzbyBrZWVwIGEgcmVmZXJlbmNlIGhlcmUgKi9cbiAgICB0aGlzLm1hc3RlclNoZWV0ID0gU3R5bGVTaGVldC5tYXN0ZXI7XG4gICAgdGhpcy5pbnN0YW5jZSA9IHRoaXMubWFzdGVyU2hlZXQuY2xvbmUoKTtcbiAgICB0aGlzLnNlYWxlZCA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIE1hcmsgdGhlIFNlcnZlclN0eWxlU2hlZXQgYXMgYmVpbmcgZnVsbHkgZW1pdHRlZCBhbmQgbWFudWFsbHkgR0MgaXQgZnJvbSB0aGVcbiAgICogU3R5bGVTaGVldCBzaW5nbGV0b24uXG4gICAqL1xuXG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuc2VhbCA9IGZ1bmN0aW9uIHNlYWwoKSB7XG4gICAgaWYgKCF0aGlzLnNlYWxlZCkge1xuICAgICAgLyogUmVtb3ZlIHNlYWxlZCBTdHlsZVNoZWV0cyBmcm9tIHRoZSBtYXN0ZXIgc2hlZXQgKi9cbiAgICAgIHZhciBpbmRleCA9IHRoaXMubWFzdGVyU2hlZXQuY2xvbmVzLmluZGV4T2YodGhpcy5pbnN0YW5jZSk7XG4gICAgICB0aGlzLm1hc3RlclNoZWV0LmNsb25lcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5zZWFsZWQgPSB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5jb2xsZWN0U3R5bGVzID0gZnVuY3Rpb24gY29sbGVjdFN0eWxlcyhjaGlsZHJlbikge1xuICAgIGlmICh0aGlzLnNlYWxlZCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRNYW5hZ2VyLFxuICAgICAgeyBzaGVldDogdGhpcy5pbnN0YW5jZSB9LFxuICAgICAgY2hpbGRyZW5cbiAgICApO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmdldFN0eWxlVGFncyA9IGZ1bmN0aW9uIGdldFN0eWxlVGFncygpIHtcbiAgICB0aGlzLnNlYWwoKTtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS50b0hUTUwoKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRTdHlsZUVsZW1lbnQgPSBmdW5jdGlvbiBnZXRTdHlsZUVsZW1lbnQoKSB7XG4gICAgdGhpcy5zZWFsKCk7XG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2UudG9SZWFjdEVsZW1lbnRzKCk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtID0gZnVuY3Rpb24gaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtKHJlYWRhYmxlU3RyZWFtKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMyk7XG4gICAgfVxuXG4gICAgLyogdGhlIHRhZyBpbmRleCBrZWVwcyB0cmFjayBvZiB3aGljaCB0YWdzIGhhdmUgYWxyZWFkeSBiZWVuIGVtaXR0ZWQgKi9cbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzLmluc3RhbmNlO1xuXG4gICAgdmFyIGluc3RhbmNlVGFnSW5kZXggPSAwO1xuXG4gICAgdmFyIHN0cmVhbUF0dHIgPSBTQ19TVFJFQU1fQVRUUiArICc9XCJ0cnVlXCInO1xuXG4gICAgdmFyIHRyYW5zZm9ybWVyID0gbmV3IHN0cmVhbS5UcmFuc2Zvcm0oe1xuICAgICAgdHJhbnNmb3JtOiBmdW5jdGlvbiBhcHBlbmRTdHlsZUNodW5rcyhjaHVuaywgLyogZW5jb2RpbmcgKi9fLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgdGFncyA9IGluc3RhbmNlLnRhZ3M7XG5cbiAgICAgICAgdmFyIGh0bWwgPSAnJztcblxuICAgICAgICAvKiByZXRyaWV2ZSBodG1sIGZvciBlYWNoIG5ldyBzdHlsZSB0YWcgKi9cbiAgICAgICAgZm9yICg7IGluc3RhbmNlVGFnSW5kZXggPCB0YWdzLmxlbmd0aDsgaW5zdGFuY2VUYWdJbmRleCArPSAxKSB7XG4gICAgICAgICAgdmFyIHRhZyA9IHRhZ3NbaW5zdGFuY2VUYWdJbmRleF07XG4gICAgICAgICAgaHRtbCArPSB0YWcudG9IVE1MKHN0cmVhbUF0dHIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogZm9yY2Ugb3VyIFN0eWxlU2hlZXRzIHRvIGVtaXQgZW50aXJlbHkgbmV3IHRhZ3MgKi9cbiAgICAgICAgaW5zdGFuY2Uuc2VhbEFsbFRhZ3MoKTtcblxuICAgICAgICAvKiBwcmVwZW5kIHN0eWxlIGh0bWwgdG8gY2h1bmsgKi9cbiAgICAgICAgdGhpcy5wdXNoKGh0bWwgKyBjaHVuayk7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZWFkYWJsZVN0cmVhbS5vbignZW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF90aGlzLnNlYWwoKTtcbiAgICB9KTtcbiAgICByZWFkYWJsZVN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBfdGhpcy5zZWFsKCk7XG5cbiAgICAgIC8vIGZvcndhcmQgdGhlIGVycm9yIHRvIHRoZSB0cmFuc2Zvcm0gc3RyZWFtXG4gICAgICB0cmFuc2Zvcm1lci5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVhZGFibGVTdHJlYW0ucGlwZSh0cmFuc2Zvcm1lcik7XG4gIH07XG5cbiAgcmV0dXJuIFNlcnZlclN0eWxlU2hlZXQ7XG59KCk7XG5cbi8vIFxuXG52YXIgU3R5bGVTaGVldENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbnZhciBTdHlsZVNoZWV0Q29uc3VtZXIgPSBTdHlsZVNoZWV0Q29udGV4dC5Db25zdW1lcjtcblxudmFyIFN0eWxlU2hlZXRNYW5hZ2VyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgaW5oZXJpdHMoU3R5bGVTaGVldE1hbmFnZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXRNYW5hZ2VyKHByb3BzKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVTaGVldE1hbmFnZXIpO1xuXG4gICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLmdldENvbnRleHQgPSBtZW1vaXplKF90aGlzLmdldENvbnRleHQpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFN0eWxlU2hlZXRNYW5hZ2VyLnByb3RvdHlwZS5nZXRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q29udGV4dChzaGVldCwgdGFyZ2V0KSB7XG4gICAgaWYgKHNoZWV0KSB7XG4gICAgICByZXR1cm4gc2hlZXQ7XG4gICAgfSBlbHNlIGlmICh0YXJnZXQpIHtcbiAgICAgIHJldHVybiBuZXcgU3R5bGVTaGVldCh0YXJnZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDQpO1xuICAgIH1cbiAgfTtcblxuICBTdHlsZVNoZWV0TWFuYWdlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgc2hlZXQgPSBfcHJvcHMuc2hlZXQsXG4gICAgICAgIHRhcmdldCA9IF9wcm9wcy50YXJnZXQ7XG5cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldENvbnRleHQuUHJvdmlkZXIsXG4gICAgICB7IHZhbHVlOiB0aGlzLmdldENvbnRleHQoc2hlZXQsIHRhcmdldCkgfSxcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IGNoaWxkcmVuXG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gU3R5bGVTaGVldE1hbmFnZXI7XG59KENvbXBvbmVudCk7XG5wcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBTdHlsZVNoZWV0TWFuYWdlci5wcm9wVHlwZXMgPSB7XG4gIHNoZWV0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuaW5zdGFuY2VPZihTdHlsZVNoZWV0KSwgUHJvcFR5cGVzLmluc3RhbmNlT2YoU2VydmVyU3R5bGVTaGVldCldKSxcblxuICB0YXJnZXQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgYXBwZW5kQ2hpbGQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgfSlcbn0gOiB2b2lkIDA7XG5cbi8vIFxuXG52YXIgZGlkV2FybkFib3V0Q2xhc3NOYW1lVXNhZ2UgPSBuZXcgU2V0KCk7XG5cbnZhciBjbGFzc05hbWVVc2FnZUNoZWNrSW5qZWN0b3IgPSAoZnVuY3Rpb24gKHRhcmdldCkge1xuICB2YXIgZWxlbWVudENsYXNzTmFtZSA9ICcnO1xuXG4gIHZhciB0YXJnZXRDRE0gPSB0YXJnZXQuY29tcG9uZW50RGlkTW91bnQ7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIHRhcmdldC5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0eXBlb2YgdGFyZ2V0Q0RNID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0YXJnZXRDRE0uY2FsbCh0aGlzKTtcbiAgICB9XG5cbiAgICB2YXIgZm9yd2FyZFRhcmdldCA9IHRoaXMucHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LnRhcmdldDtcblxuICAgIGlmICh0YXJnZXQucHJvcHMgJiYgdGFyZ2V0LnByb3BzLnN1cHByZXNzQ2xhc3NOYW1lV2FybmluZyB8fCB0YXJnZXQuYXR0cnMgJiYgdGFyZ2V0LmF0dHJzLnN1cHByZXNzQ2xhc3NOYW1lV2FybmluZyB8fCBkaWRXYXJuQWJvdXRDbGFzc05hbWVVc2FnZS5oYXMoZm9yd2FyZFRhcmdldCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBkaWRXYXJuQWJvdXRDbGFzc05hbWVVc2FnZS5hZGQoZm9yd2FyZFRhcmdldCk7XG5cbiAgICB2YXIgY2xhc3NOYW1lcyA9IGVsZW1lbnRDbGFzc05hbWUucmVwbGFjZSgvICsvZywgJyAnKS50cmltKCkuc3BsaXQoJyAnKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3Qvbm8tZmluZC1kb20tbm9kZVxuICAgIHZhciBub2RlID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcyk7XG4gICAgdmFyIHNlbGVjdG9yID0gY2xhc3NOYW1lcy5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgIHJldHVybiAnLicgKyBzO1xuICAgIH0pLmpvaW4oJycpO1xuXG4gICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiAhY2xhc3NOYW1lcy5ldmVyeShmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgICByZXR1cm4gbm9kZS5jbGFzc0xpc3QgJiYgbm9kZS5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgICB9KSAmJiAhbm9kZS5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSkge1xuICAgICAgY29uc29sZS53YXJuKCdJdCBsb29rcyBsaWtlIHlvdVxcJ3ZlIHdyYXBwZWQgc3R5bGVkKCkgYXJvdW5kIHlvdXIgUmVhY3QgY29tcG9uZW50ICgnICsgZ2V0Q29tcG9uZW50TmFtZShmb3J3YXJkVGFyZ2V0KSArICcpLCBidXQgdGhlIGNsYXNzTmFtZSBwcm9wIGlzIG5vdCBiZWluZyBwYXNzZWQgZG93biB0byBhIGNoaWxkLiBObyBzdHlsZXMgd2lsbCBiZSByZW5kZXJlZCB1bmxlc3MgY2xhc3NOYW1lIGlzIGNvbXBvc2VkIHdpdGhpbiB5b3VyIFJlYWN0IGNvbXBvbmVudC4nKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHByZXZSZW5kZXJJbm5lciA9IHRhcmdldC5yZW5kZXJJbm5lcjtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgdGFyZ2V0LnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnQgPSBwcmV2UmVuZGVySW5uZXIuYXBwbHkodGhpcywgYXJncyk7XG5cbiAgICBlbGVtZW50Q2xhc3NOYW1lID0gZWxlbWVudC5wcm9wcy5jbGFzc05hbWU7XG5cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfTtcbn0pO1xuXG4vLyBcblxudmFyIGlkZW50aWZpZXJzID0ge307XG5cbi8qIFdlIGRlcGVuZCBvbiBjb21wb25lbnRzIGhhdmluZyB1bmlxdWUgSURzICovXG5mdW5jdGlvbiBnZW5lcmF0ZUlkKF9Db21wb25lbnRTdHlsZSwgX2Rpc3BsYXlOYW1lLCBwYXJlbnRDb21wb25lbnRJZCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSB0eXBlb2YgX2Rpc3BsYXlOYW1lICE9PSAnc3RyaW5nJyA/ICdzYycgOiBlc2NhcGUoX2Rpc3BsYXlOYW1lKTtcblxuICAvKipcbiAgICogVGhpcyBlbnN1cmVzIHVuaXF1ZW5lc3MgaWYgdHdvIGNvbXBvbmVudHMgaGFwcGVuIHRvIHNoYXJlXG4gICAqIHRoZSBzYW1lIGRpc3BsYXlOYW1lLlxuICAgKi9cbiAgdmFyIG5yID0gKGlkZW50aWZpZXJzW2Rpc3BsYXlOYW1lXSB8fCAwKSArIDE7XG4gIGlkZW50aWZpZXJzW2Rpc3BsYXlOYW1lXSA9IG5yO1xuXG4gIHZhciBjb21wb25lbnRJZCA9IGRpc3BsYXlOYW1lICsgJy0nICsgX0NvbXBvbmVudFN0eWxlLmdlbmVyYXRlTmFtZShkaXNwbGF5TmFtZSArIG5yKTtcblxuICByZXR1cm4gcGFyZW50Q29tcG9uZW50SWQgPyBwYXJlbnRDb21wb25lbnRJZCArICctJyArIGNvbXBvbmVudElkIDogY29tcG9uZW50SWQ7XG59XG5cbi8vICRGbG93Rml4TWVcblxudmFyIFN0eWxlZENvbXBvbmVudCA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFN0eWxlZENvbXBvbmVudCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3R5bGVkQ29tcG9uZW50KCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFN0eWxlZENvbXBvbmVudCk7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5hdHRycyA9IHt9O1xuXG4gICAgX3RoaXMucmVuZGVyT3V0ZXIgPSBfdGhpcy5yZW5kZXJPdXRlci5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5yZW5kZXJJbm5lciA9IF90aGlzLnJlbmRlcklubmVyLmJpbmQoX3RoaXMpO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIF90aGlzLndhcm5Jbm5lclJlZiA9IG9uY2UoZnVuY3Rpb24gKGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBcImlubmVyUmVmXCIgQVBJIGhhcyBiZWVuIHJlbW92ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjQgaW4gZmF2b3Igb2YgUmVhY3QgMTYgcmVmIGZvcndhcmRpbmcsIHVzZSBcInJlZlwiIGluc3RlYWQgbGlrZSBhIHR5cGljYWwgY29tcG9uZW50LiBcImlubmVyUmVmXCIgd2FzIGRldGVjdGVkIG9uIGNvbXBvbmVudCBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nKVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZCA9IG9uY2UoZnVuY3Rpb24gKGtleSwgZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignRnVuY3Rpb25zIGFzIG9iamVjdC1mb3JtIGF0dHJzKHt9KSBrZXlzIGFyZSBub3cgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIHZlcnNpb24gb2Ygc3R5bGVkLWNvbXBvbmVudHMuIFN3aXRjaCB0byB0aGUgbmV3IGF0dHJzKHByb3BzID0+ICh7fSkpIHN5bnRheCBpbnN0ZWFkIGZvciBlYXNpZXIgYW5kIG1vcmUgcG93ZXJmdWwgY29tcG9zaXRpb24uIFRoZSBhdHRycyBrZXkgaW4gcXVlc3Rpb24gaXMgXCInICsga2V5ICsgJ1wiIG9uIGNvbXBvbmVudCBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nKVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLndhcm5Ob25TdHlsZWRDb21wb25lbnRBdHRyc09iamVjdEtleSA9IG9uY2UoZnVuY3Rpb24gKGtleSwgZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignSXQgbG9va3MgbGlrZSB5b3VcXCd2ZSB1c2VkIGEgbm9uIHN0eWxlZC1jb21wb25lbnQgYXMgdGhlIHZhbHVlIGZvciB0aGUgXCInICsga2V5ICsgJ1wiIHByb3AgaW4gYW4gb2JqZWN0LWZvcm0gYXR0cnMgY29uc3RydWN0b3Igb2YgXCInICsgZGlzcGxheU5hbWUgKyAnXCIuXFxuJyArICdZb3Ugc2hvdWxkIHVzZSB0aGUgbmV3IGZ1bmN0aW9uLWZvcm0gYXR0cnMgY29uc3RydWN0b3Igd2hpY2ggYXZvaWRzIHRoaXMgaXNzdWU6IGF0dHJzKHByb3BzID0+ICh7IHlvdXJTdHVmZiB9KSlcXG4nICsgXCJUbyBjb250aW51ZSB1c2luZyB0aGUgZGVwcmVjYXRlZCBvYmplY3Qgc3ludGF4LCB5b3UnbGwgbmVlZCB0byB3cmFwIHlvdXIgY29tcG9uZW50IHByb3AgaW4gYSBmdW5jdGlvbiB0byBtYWtlIGl0IGF2YWlsYWJsZSBpbnNpZGUgdGhlIHN0eWxlZCBjb21wb25lbnQgKHlvdSdsbCBzdGlsbCBnZXQgdGhlIGRlcHJlY2F0aW9uIHdhcm5pbmcgdGhvdWdoLilcXG5cIiArICgnRm9yIGV4YW1wbGUsIHsgJyArIGtleSArICc6ICgpID0+IElubmVyQ29tcG9uZW50IH0gaW5zdGVhZCBvZiB7ICcgKyBrZXkgKyAnOiBJbm5lckNvbXBvbmVudCB9JykpXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBJU19CUk9XU0VSKSB7XG4gICAgICBjbGFzc05hbWVVc2FnZUNoZWNrSW5qZWN0b3IoX3RoaXMpO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlck91dGVyXG4gICAgKTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlck91dGVyID0gZnVuY3Rpb24gcmVuZGVyT3V0ZXIoKSB7XG4gICAgdmFyIHN0eWxlU2hlZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFN0eWxlU2hlZXQubWFzdGVyO1xuXG4gICAgdGhpcy5zdHlsZVNoZWV0ID0gc3R5bGVTaGVldDtcblxuICAgIC8vIE5vIG5lZWQgdG8gc3Vic2NyaWJlIGEgc3RhdGljIGNvbXBvbmVudCB0byB0aGVtZSBjaGFuZ2VzLCBpdCB3b24ndCBjaGFuZ2UgYW55dGhpbmdcbiAgICBpZiAodGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQuY29tcG9uZW50U3R5bGUuaXNTdGF0aWMpIHJldHVybiB0aGlzLnJlbmRlcklubmVyKCk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5yZW5kZXJJbm5lclxuICAgICk7XG4gIH07XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXJJbm5lciA9IGZ1bmN0aW9uIHJlbmRlcklubmVyKHRoZW1lKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbyA9IHRoaXMucHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LFxuICAgICAgICBjb21wb25lbnRTdHlsZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5jb21wb25lbnRTdHlsZSxcbiAgICAgICAgZGVmYXVsdFByb3BzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmRlZmF1bHRQcm9wcyxcbiAgICAgICAgZGlzcGxheU5hbWUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZGlzcGxheU5hbWUsXG4gICAgICAgIGZvbGRlZENvbXBvbmVudElkcyA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5mb2xkZWRDb21wb25lbnRJZHMsXG4gICAgICAgIHN0eWxlZENvbXBvbmVudElkID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLnN0eWxlZENvbXBvbmVudElkLFxuICAgICAgICB0YXJnZXQgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8udGFyZ2V0O1xuXG5cbiAgICB2YXIgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdm9pZCAwO1xuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYykge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhFTVBUWV9PQkpFQ1QsIHRoaXMucHJvcHMpO1xuICAgIH0gZWxzZSBpZiAodGhlbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhkZXRlcm1pbmVUaGVtZSh0aGlzLnByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKSwgdGhpcy5wcm9wcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbmVyYXRlZENsYXNzTmFtZSA9IHRoaXMuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhpcy5wcm9wcy50aGVtZSB8fCBFTVBUWV9PQkpFQ1QsIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHZhciBlbGVtZW50VG9CZUNyZWF0ZWQgPSB0aGlzLnByb3BzLmFzIHx8IHRoaXMuYXR0cnMuYXMgfHwgdGFyZ2V0O1xuICAgIHZhciBpc1RhcmdldFRhZyA9IGlzVGFnKGVsZW1lbnRUb0JlQ3JlYXRlZCk7XG5cbiAgICB2YXIgcHJvcHNGb3JFbGVtZW50ID0ge307XG4gICAgdmFyIGNvbXB1dGVkUHJvcHMgPSBfZXh0ZW5kcyh7fSwgdGhpcy5hdHRycywgdGhpcy5wcm9wcyk7XG5cbiAgICB2YXIga2V5ID0gdm9pZCAwO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKGtleSBpbiBjb21wdXRlZFByb3BzKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBrZXkgPT09ICdpbm5lclJlZicgJiYgaXNUYXJnZXRUYWcpIHtcbiAgICAgICAgdGhpcy53YXJuSW5uZXJSZWYoZGlzcGxheU5hbWUpO1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5ID09PSAnZm9yd2FyZGVkQ29tcG9uZW50JyB8fCBrZXkgPT09ICdhcycpIGNvbnRpbnVlO2Vsc2UgaWYgKGtleSA9PT0gJ2ZvcndhcmRlZFJlZicpIHByb3BzRm9yRWxlbWVudC5yZWYgPSBjb21wdXRlZFByb3BzW2tleV07ZWxzZSBpZiAoIWlzVGFyZ2V0VGFnIHx8IHZhbGlkQXR0cihrZXkpKSB7XG4gICAgICAgIC8vIERvbid0IHBhc3MgdGhyb3VnaCBub24gSFRNTCB0YWdzIHRocm91Z2ggdG8gSFRNTCBlbGVtZW50c1xuICAgICAgICBwcm9wc0ZvckVsZW1lbnRba2V5XSA9IGNvbXB1dGVkUHJvcHNba2V5XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5zdHlsZSAmJiB0aGlzLmF0dHJzLnN0eWxlKSB7XG4gICAgICBwcm9wc0ZvckVsZW1lbnQuc3R5bGUgPSBfZXh0ZW5kcyh7fSwgdGhpcy5hdHRycy5zdHlsZSwgdGhpcy5wcm9wcy5zdHlsZSk7XG4gICAgfVxuXG4gICAgcHJvcHNGb3JFbGVtZW50LmNsYXNzTmFtZSA9IEFycmF5LnByb3RvdHlwZS5jb25jYXQoZm9sZGVkQ29tcG9uZW50SWRzLCB0aGlzLnByb3BzLmNsYXNzTmFtZSwgc3R5bGVkQ29tcG9uZW50SWQsIHRoaXMuYXR0cnMuY2xhc3NOYW1lLCBnZW5lcmF0ZWRDbGFzc05hbWUpLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7XG5cbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChlbGVtZW50VG9CZUNyZWF0ZWQsIHByb3BzRm9yRWxlbWVudCk7XG4gIH07XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5idWlsZEV4ZWN1dGlvbkNvbnRleHQgPSBmdW5jdGlvbiBidWlsZEV4ZWN1dGlvbkNvbnRleHQodGhlbWUsIHByb3BzLCBhdHRycykge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGNvbnRleHQgPSBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgdGhlbWU6IHRoZW1lIH0pO1xuXG4gICAgaWYgKCFhdHRycy5sZW5ndGgpIHJldHVybiBjb250ZXh0O1xuXG4gICAgdGhpcy5hdHRycyA9IHt9O1xuXG4gICAgYXR0cnMuZm9yRWFjaChmdW5jdGlvbiAoYXR0ckRlZikge1xuICAgICAgdmFyIHJlc29sdmVkQXR0ckRlZiA9IGF0dHJEZWY7XG4gICAgICB2YXIgYXR0ckRlZldhc0ZuID0gZmFsc2U7XG4gICAgICB2YXIgYXR0ciA9IHZvaWQgMDtcbiAgICAgIHZhciBrZXkgPSB2b2lkIDA7XG5cbiAgICAgIGlmIChpc0Z1bmN0aW9uKHJlc29sdmVkQXR0ckRlZikpIHtcbiAgICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgICByZXNvbHZlZEF0dHJEZWYgPSByZXNvbHZlZEF0dHJEZWYoY29udGV4dCk7XG4gICAgICAgIGF0dHJEZWZXYXNGbiA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIGd1YXJkLWZvci1pbiAqL1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZm9yIChrZXkgaW4gcmVzb2x2ZWRBdHRyRGVmKSB7XG4gICAgICAgIGF0dHIgPSByZXNvbHZlZEF0dHJEZWZba2V5XTtcblxuICAgICAgICBpZiAoIWF0dHJEZWZXYXNGbikge1xuICAgICAgICAgIGlmIChpc0Z1bmN0aW9uKGF0dHIpICYmICFpc0Rlcml2ZWRSZWFjdENvbXBvbmVudChhdHRyKSAmJiAhaXNTdHlsZWRDb21wb25lbnQoYXR0cikpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgIF90aGlzMi53YXJuQXR0cnNGbk9iamVjdEtleURlcHJlY2F0ZWQoa2V5LCBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQuZGlzcGxheU5hbWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhdHRyID0gYXR0cihjb250ZXh0KTtcblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoYXR0cikpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLndhcm5Ob25TdHlsZWRDb21wb25lbnRBdHRyc09iamVjdEtleShrZXksIHByb3BzLmZvcndhcmRlZENvbXBvbmVudC5kaXNwbGF5TmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMyLmF0dHJzW2tleV0gPSBhdHRyO1xuICAgICAgICBjb250ZXh0W2tleV0gPSBhdHRyO1xuICAgICAgfVxuICAgICAgLyogZXNsaW50LWVuYWJsZSAqL1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNvbnRleHQ7XG4gIH07XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyA9IGZ1bmN0aW9uIGdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKHRoZW1lLCBwcm9wcykge1xuICAgIHZhciBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yID0gcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LFxuICAgICAgICBhdHRycyA9IF9wcm9wcyRmb3J3YXJkZWRDb21wbzIuYXR0cnMsXG4gICAgICAgIGNvbXBvbmVudFN0eWxlID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi5jb21wb25lbnRTdHlsZSxcbiAgICAgICAgd2FyblRvb01hbnlDbGFzc2VzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi53YXJuVG9vTWFueUNsYXNzZXM7XG5cbiAgICAvLyBzdGF0aWNhbGx5IHN0eWxlZC1jb21wb25lbnRzIGRvbid0IG5lZWQgdG8gYnVpbGQgYW4gZXhlY3V0aW9uIGNvbnRleHQgb2JqZWN0LFxuICAgIC8vIGFuZCBzaG91bGRuJ3QgYmUgaW5jcmVhc2luZyB0aGUgbnVtYmVyIG9mIGNsYXNzIG5hbWVzXG5cbiAgICBpZiAoY29tcG9uZW50U3R5bGUuaXNTdGF0aWMgJiYgIWF0dHJzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGNvbXBvbmVudFN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEVNUFRZX09CSkVDVCwgdGhpcy5zdHlsZVNoZWV0KTtcbiAgICB9XG5cbiAgICB2YXIgY2xhc3NOYW1lID0gY29tcG9uZW50U3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhpcy5idWlsZEV4ZWN1dGlvbkNvbnRleHQodGhlbWUsIHByb3BzLCBhdHRycyksIHRoaXMuc3R5bGVTaGVldCk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuVG9vTWFueUNsYXNzZXMpIHdhcm5Ub29NYW55Q2xhc3NlcyhjbGFzc05hbWUpO1xuXG4gICAgcmV0dXJuIGNsYXNzTmFtZTtcbiAgfTtcblxuICByZXR1cm4gU3R5bGVkQ29tcG9uZW50O1xufShDb21wb25lbnQpO1xuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZWRDb21wb25lbnQodGFyZ2V0LCBvcHRpb25zLCBydWxlcykge1xuICB2YXIgaXNUYXJnZXRTdHlsZWRDb21wID0gaXNTdHlsZWRDb21wb25lbnQodGFyZ2V0KTtcbiAgdmFyIGlzQ2xhc3MgPSAhaXNUYWcodGFyZ2V0KTtcblxuICB2YXIgX29wdGlvbnMkZGlzcGxheU5hbWUgPSBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgICAgZGlzcGxheU5hbWUgPSBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9PT0gdW5kZWZpbmVkID8gZ2VuZXJhdGVEaXNwbGF5TmFtZSh0YXJnZXQpIDogX29wdGlvbnMkZGlzcGxheU5hbWUsXG4gICAgICBfb3B0aW9ucyRjb21wb25lbnRJZCA9IG9wdGlvbnMuY29tcG9uZW50SWQsXG4gICAgICBjb21wb25lbnRJZCA9IF9vcHRpb25zJGNvbXBvbmVudElkID09PSB1bmRlZmluZWQgPyBnZW5lcmF0ZUlkKENvbXBvbmVudFN0eWxlLCBvcHRpb25zLmRpc3BsYXlOYW1lLCBvcHRpb25zLnBhcmVudENvbXBvbmVudElkKSA6IF9vcHRpb25zJGNvbXBvbmVudElkLFxuICAgICAgX29wdGlvbnMkUGFyZW50Q29tcG9uID0gb3B0aW9ucy5QYXJlbnRDb21wb25lbnQsXG4gICAgICBQYXJlbnRDb21wb25lbnQgPSBfb3B0aW9ucyRQYXJlbnRDb21wb24gPT09IHVuZGVmaW5lZCA/IFN0eWxlZENvbXBvbmVudCA6IF9vcHRpb25zJFBhcmVudENvbXBvbixcbiAgICAgIF9vcHRpb25zJGF0dHJzID0gb3B0aW9ucy5hdHRycyxcbiAgICAgIGF0dHJzID0gX29wdGlvbnMkYXR0cnMgPT09IHVuZGVmaW5lZCA/IEVNUFRZX0FSUkFZIDogX29wdGlvbnMkYXR0cnM7XG5cblxuICB2YXIgc3R5bGVkQ29tcG9uZW50SWQgPSBvcHRpb25zLmRpc3BsYXlOYW1lICYmIG9wdGlvbnMuY29tcG9uZW50SWQgPyBlc2NhcGUob3B0aW9ucy5kaXNwbGF5TmFtZSkgKyAnLScgKyBvcHRpb25zLmNvbXBvbmVudElkIDogb3B0aW9ucy5jb21wb25lbnRJZCB8fCBjb21wb25lbnRJZDtcblxuICAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCBhdHRycyB1cCAoaW1wbGljaXQgZXh0ZW5kKVxuICB2YXIgZmluYWxBdHRycyA9XG4gIC8vICRGbG93Rml4TWVcbiAgaXNUYXJnZXRTdHlsZWRDb21wICYmIHRhcmdldC5hdHRycyA/IEFycmF5LnByb3RvdHlwZS5jb25jYXQodGFyZ2V0LmF0dHJzLCBhdHRycykuZmlsdGVyKEJvb2xlYW4pIDogYXR0cnM7XG5cbiAgdmFyIGNvbXBvbmVudFN0eWxlID0gbmV3IENvbXBvbmVudFN0eWxlKGlzVGFyZ2V0U3R5bGVkQ29tcCA/IC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IHJ1bGVzIHVwIChpbXBsaWNpdCBleHRlbmQpXG4gIC8vICRGbG93Rml4TWVcbiAgdGFyZ2V0LmNvbXBvbmVudFN0eWxlLnJ1bGVzLmNvbmNhdChydWxlcykgOiBydWxlcywgZmluYWxBdHRycywgc3R5bGVkQ29tcG9uZW50SWQpO1xuXG4gIC8qKlxuICAgKiBmb3J3YXJkUmVmIGNyZWF0ZXMgYSBuZXcgaW50ZXJpbSBjb21wb25lbnQsIHdoaWNoIHdlJ2xsIHRha2UgYWR2YW50YWdlIG9mXG4gICAqIGluc3RlYWQgb2YgZXh0ZW5kaW5nIFBhcmVudENvbXBvbmVudCB0byBjcmVhdGUgX2Fub3RoZXJfIGludGVyaW0gY2xhc3NcbiAgICovXG4gIHZhciBXcmFwcGVkU3R5bGVkQ29tcG9uZW50ID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFBhcmVudENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGZvcndhcmRlZENvbXBvbmVudDogV3JhcHBlZFN0eWxlZENvbXBvbmVudCwgZm9yd2FyZGVkUmVmOiByZWYgfSkpO1xuICB9KTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuYXR0cnMgPSBmaW5hbEF0dHJzO1xuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuY29tcG9uZW50U3R5bGUgPSBjb21wb25lbnRTdHlsZTtcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5mb2xkZWRDb21wb25lbnRJZHMgPSBpc1RhcmdldFN0eWxlZENvbXAgPyAvLyAkRmxvd0ZpeE1lXG4gIEFycmF5LnByb3RvdHlwZS5jb25jYXQodGFyZ2V0LmZvbGRlZENvbXBvbmVudElkcywgdGFyZ2V0LnN0eWxlZENvbXBvbmVudElkKSA6IEVNUFRZX0FSUkFZO1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZCA9IHN0eWxlZENvbXBvbmVudElkO1xuXG4gIC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IHRhcmdldCB1cCBzaW5jZSB3ZSBmb2xkZWQgdGhlIHN0eWxlc1xuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQudGFyZ2V0ID0gaXNUYXJnZXRTdHlsZWRDb21wID8gdGFyZ2V0LnRhcmdldCA6IHRhcmdldDtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQud2l0aENvbXBvbmVudCA9IGZ1bmN0aW9uIHdpdGhDb21wb25lbnQodGFnKSB7XG4gICAgdmFyIHByZXZpb3VzQ29tcG9uZW50SWQgPSBvcHRpb25zLmNvbXBvbmVudElkLFxuICAgICAgICBvcHRpb25zVG9Db3B5ID0gb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob3B0aW9ucywgWydjb21wb25lbnRJZCddKTtcblxuXG4gICAgdmFyIG5ld0NvbXBvbmVudElkID0gcHJldmlvdXNDb21wb25lbnRJZCAmJiBwcmV2aW91c0NvbXBvbmVudElkICsgJy0nICsgKGlzVGFnKHRhZykgPyB0YWcgOiBlc2NhcGUoZ2V0Q29tcG9uZW50TmFtZSh0YWcpKSk7XG5cbiAgICB2YXIgbmV3T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBvcHRpb25zVG9Db3B5LCB7XG4gICAgICBhdHRyczogZmluYWxBdHRycyxcbiAgICAgIGNvbXBvbmVudElkOiBuZXdDb21wb25lbnRJZCxcbiAgICAgIFBhcmVudENvbXBvbmVudDogUGFyZW50Q29tcG9uZW50XG4gICAgfSk7XG5cbiAgICByZXR1cm4gY3JlYXRlU3R5bGVkQ29tcG9uZW50KHRhZywgbmV3T3B0aW9ucywgcnVsZXMpO1xuICB9O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIFdyYXBwZWRTdHlsZWRDb21wb25lbnQud2FyblRvb01hbnlDbGFzc2VzID0gY3JlYXRlV2FyblRvb01hbnlDbGFzc2VzKGRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJy4nICsgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZDtcbiAgfTtcblxuICBpZiAoaXNDbGFzcykge1xuICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFdyYXBwZWRTdHlsZWRDb21wb25lbnQsIHRhcmdldCwge1xuICAgICAgLy8gYWxsIFNDLXNwZWNpZmljIHRoaW5ncyBzaG91bGQgbm90IGJlIGhvaXN0ZWRcbiAgICAgIGF0dHJzOiB0cnVlLFxuICAgICAgY29tcG9uZW50U3R5bGU6IHRydWUsXG4gICAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICAgIGZvbGRlZENvbXBvbmVudElkczogdHJ1ZSxcbiAgICAgIHN0eWxlZENvbXBvbmVudElkOiB0cnVlLFxuICAgICAgdGFyZ2V0OiB0cnVlLFxuICAgICAgd2l0aENvbXBvbmVudDogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIFdyYXBwZWRTdHlsZWRDb21wb25lbnQ7XG59XG5cbi8vIFxuLy8gVGhhbmtzIHRvIFJlYWN0RE9NRmFjdG9yaWVzIGZvciB0aGlzIGhhbmR5IGxpc3QhXG5cbnZhciBkb21FbGVtZW50cyA9IFsnYScsICdhYmJyJywgJ2FkZHJlc3MnLCAnYXJlYScsICdhcnRpY2xlJywgJ2FzaWRlJywgJ2F1ZGlvJywgJ2InLCAnYmFzZScsICdiZGknLCAnYmRvJywgJ2JpZycsICdibG9ja3F1b3RlJywgJ2JvZHknLCAnYnInLCAnYnV0dG9uJywgJ2NhbnZhcycsICdjYXB0aW9uJywgJ2NpdGUnLCAnY29kZScsICdjb2wnLCAnY29sZ3JvdXAnLCAnZGF0YScsICdkYXRhbGlzdCcsICdkZCcsICdkZWwnLCAnZGV0YWlscycsICdkZm4nLCAnZGlhbG9nJywgJ2RpdicsICdkbCcsICdkdCcsICdlbScsICdlbWJlZCcsICdmaWVsZHNldCcsICdmaWdjYXB0aW9uJywgJ2ZpZ3VyZScsICdmb290ZXInLCAnZm9ybScsICdoMScsICdoMicsICdoMycsICdoNCcsICdoNScsICdoNicsICdoZWFkJywgJ2hlYWRlcicsICdoZ3JvdXAnLCAnaHInLCAnaHRtbCcsICdpJywgJ2lmcmFtZScsICdpbWcnLCAnaW5wdXQnLCAnaW5zJywgJ2tiZCcsICdrZXlnZW4nLCAnbGFiZWwnLCAnbGVnZW5kJywgJ2xpJywgJ2xpbmsnLCAnbWFpbicsICdtYXAnLCAnbWFyaycsICdtYXJxdWVlJywgJ21lbnUnLCAnbWVudWl0ZW0nLCAnbWV0YScsICdtZXRlcicsICduYXYnLCAnbm9zY3JpcHQnLCAnb2JqZWN0JywgJ29sJywgJ29wdGdyb3VwJywgJ29wdGlvbicsICdvdXRwdXQnLCAncCcsICdwYXJhbScsICdwaWN0dXJlJywgJ3ByZScsICdwcm9ncmVzcycsICdxJywgJ3JwJywgJ3J0JywgJ3J1YnknLCAncycsICdzYW1wJywgJ3NjcmlwdCcsICdzZWN0aW9uJywgJ3NlbGVjdCcsICdzbWFsbCcsICdzb3VyY2UnLCAnc3BhbicsICdzdHJvbmcnLCAnc3R5bGUnLCAnc3ViJywgJ3N1bW1hcnknLCAnc3VwJywgJ3RhYmxlJywgJ3Rib2R5JywgJ3RkJywgJ3RleHRhcmVhJywgJ3Rmb290JywgJ3RoJywgJ3RoZWFkJywgJ3RpbWUnLCAndGl0bGUnLCAndHInLCAndHJhY2snLCAndScsICd1bCcsICd2YXInLCAndmlkZW8nLCAnd2JyJyxcblxuLy8gU1ZHXG4nY2lyY2xlJywgJ2NsaXBQYXRoJywgJ2RlZnMnLCAnZWxsaXBzZScsICdmb3JlaWduT2JqZWN0JywgJ2cnLCAnaW1hZ2UnLCAnbGluZScsICdsaW5lYXJHcmFkaWVudCcsICdtYXNrJywgJ3BhdGgnLCAncGF0dGVybicsICdwb2x5Z29uJywgJ3BvbHlsaW5lJywgJ3JhZGlhbEdyYWRpZW50JywgJ3JlY3QnLCAnc3RvcCcsICdzdmcnLCAndGV4dCcsICd0c3BhbiddO1xuXG4vLyBcblxudmFyIHN0eWxlZCA9IGZ1bmN0aW9uIHN0eWxlZCh0YWcpIHtcbiAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNyZWF0ZVN0eWxlZENvbXBvbmVudCwgdGFnKTtcbn07XG5cbi8vIFNob3J0aGFuZHMgZm9yIGFsbCB2YWxpZCBIVE1MIEVsZW1lbnRzXG5kb21FbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChkb21FbGVtZW50KSB7XG4gIHN0eWxlZFtkb21FbGVtZW50XSA9IHN0eWxlZChkb21FbGVtZW50KTtcbn0pO1xuXG4vLyBcblxudmFyIEdsb2JhbFN0eWxlID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBHbG9iYWxTdHlsZShydWxlcywgY29tcG9uZW50SWQpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBHbG9iYWxTdHlsZSk7XG5cbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG4gICAgdGhpcy5jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuICAgIHRoaXMuaXNTdGF0aWMgPSBpc1N0YXRpY1J1bGVzKHJ1bGVzLCBFTVBUWV9BUlJBWSk7XG5cbiAgICBpZiAoIVN0eWxlU2hlZXQubWFzdGVyLmhhc0lkKGNvbXBvbmVudElkKSkge1xuICAgICAgU3R5bGVTaGVldC5tYXN0ZXIuZGVmZXJyZWRJbmplY3QoY29tcG9uZW50SWQsIFtdKTtcbiAgICB9XG4gIH1cblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUuY3JlYXRlU3R5bGVzID0gZnVuY3Rpb24gY3JlYXRlU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgZmxhdENTUyA9IGZsYXR0ZW4odGhpcy5ydWxlcywgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG4gICAgdmFyIGNzcyA9IHN0cmluZ2lmeVJ1bGVzKGZsYXRDU1MsICcnKTtcblxuICAgIHN0eWxlU2hlZXQuaW5qZWN0KHRoaXMuY29tcG9uZW50SWQsIGNzcyk7XG4gIH07XG5cbiAgR2xvYmFsU3R5bGUucHJvdG90eXBlLnJlbW92ZVN0eWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVN0eWxlcyhzdHlsZVNoZWV0KSB7XG4gICAgdmFyIGNvbXBvbmVudElkID0gdGhpcy5jb21wb25lbnRJZDtcblxuICAgIGlmIChzdHlsZVNoZWV0Lmhhc0lkKGNvbXBvbmVudElkKSkge1xuICAgICAgc3R5bGVTaGVldC5yZW1vdmUoY29tcG9uZW50SWQpO1xuICAgIH1cbiAgfTtcblxuICAvLyBUT0RPOiBvdmVyd3JpdGUgaW4tcGxhY2UgaW5zdGVhZCBvZiByZW1vdmUrY3JlYXRlP1xuXG5cbiAgR2xvYmFsU3R5bGUucHJvdG90eXBlLnJlbmRlclN0eWxlcyA9IGZ1bmN0aW9uIHJlbmRlclN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gICAgdGhpcy5yZW1vdmVTdHlsZXMoc3R5bGVTaGVldCk7XG4gICAgdGhpcy5jcmVhdGVTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG4gIH07XG5cbiAgcmV0dXJuIEdsb2JhbFN0eWxlO1xufSgpO1xuXG4vLyBcblxuLy8gcGxhY2Ugb3VyIGNhY2hlIGludG8gc2hhcmVkIGNvbnRleHQgc28gaXQnbGwgcGVyc2lzdCBiZXR3ZWVuIEhNUnNcbmlmIChJU19CUk9XU0VSKSB7XG4gIHdpbmRvdy5zY0NHU0hNUkNhY2hlID0ge307XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUdsb2JhbFN0eWxlKHN0cmluZ3MpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBydWxlcyA9IGNzcy5hcHBseSh1bmRlZmluZWQsIFtzdHJpbmdzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKTtcbiAgdmFyIGlkID0gJ3NjLWdsb2JhbC0nICsgbXVybXVyaGFzaChKU09OLnN0cmluZ2lmeShydWxlcykpO1xuICB2YXIgc3R5bGUgPSBuZXcgR2xvYmFsU3R5bGUocnVsZXMsIGlkKTtcblxuICB2YXIgR2xvYmFsU3R5bGVDb21wb25lbnQgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICAgIGluaGVyaXRzKEdsb2JhbFN0eWxlQ29tcG9uZW50LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIEdsb2JhbFN0eWxlQ29tcG9uZW50KCkge1xuICAgICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgR2xvYmFsU3R5bGVDb21wb25lbnQpO1xuXG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzKSk7XG5cbiAgICAgIHZhciBfdGhpcyRjb25zdHJ1Y3RvciA9IF90aGlzLmNvbnN0cnVjdG9yLFxuICAgICAgICAgIGdsb2JhbFN0eWxlID0gX3RoaXMkY29uc3RydWN0b3IuZ2xvYmFsU3R5bGUsXG4gICAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQgPSBfdGhpcyRjb25zdHJ1Y3Rvci5zdHlsZWRDb21wb25lbnRJZDtcblxuXG4gICAgICBpZiAoSVNfQlJPV1NFUikge1xuICAgICAgICB3aW5kb3cuc2NDR1NITVJDYWNoZVtzdHlsZWRDb21wb25lbnRJZF0gPSAod2luZG93LnNjQ0dTSE1SQ2FjaGVbc3R5bGVkQ29tcG9uZW50SWRdIHx8IDApICsgMTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBUaGlzIGZpeGVzIEhNUiBjb21wYXRpYmlsaXR5LiBEb24ndCBhc2sgbWUgd2h5LCBidXQgdGhpcyBjb21iaW5hdGlvbiBvZlxuICAgICAgICogY2FjaGluZyB0aGUgY2xvc3VyZSB2YXJpYWJsZXMgdmlhIHN0YXRpY3MgYW5kIHRoZW4gcGVyc2lzdGluZyB0aGUgc3RhdGljcyBpblxuICAgICAgICogc3RhdGUgd29ya3MgYWNyb3NzIEhNUiB3aGVyZSBubyBvdGhlciBjb21iaW5hdGlvbiBkaWQuIMKvXFxfKOODhClfL8KvXG4gICAgICAgKi9cbiAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICBnbG9iYWxTdHlsZTogZ2xvYmFsU3R5bGUsXG4gICAgICAgIHN0eWxlZENvbXBvbmVudElkOiBzdHlsZWRDb21wb25lbnRJZFxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBHbG9iYWxTdHlsZUNvbXBvbmVudC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh3aW5kb3cuc2NDR1NITVJDYWNoZVt0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkXSkge1xuICAgICAgICB3aW5kb3cuc2NDR1NITVJDYWNoZVt0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkXSAtPSAxO1xuICAgICAgfVxuICAgICAgLyoqXG4gICAgICAgKiBEZXBlbmRpbmcgb24gdGhlIG9yZGVyIFwicmVuZGVyXCIgaXMgY2FsbGVkIHRoaXMgY2FuIGNhdXNlIHRoZSBzdHlsZXMgdG8gYmUgbG9zdFxuICAgICAgICogdW50aWwgdGhlIG5leHQgcmVuZGVyIHBhc3Mgb2YgdGhlIHJlbWFpbmluZyBpbnN0YW5jZSwgd2hpY2ggbWF5XG4gICAgICAgKiBub3QgYmUgaW1tZWRpYXRlLlxuICAgICAgICovXG4gICAgICBpZiAod2luZG93LnNjQ0dTSE1SQ2FjaGVbdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZF0gPT09IDApIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5nbG9iYWxTdHlsZS5yZW1vdmVTdHlsZXModGhpcy5zdHlsZVNoZWV0KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgR2xvYmFsU3R5bGVDb21wb25lbnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBSZWFjdC5DaGlsZHJlbi5jb3VudCh0aGlzLnByb3BzLmNoaWxkcmVuKSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBnbG9iYWwgc3R5bGUgY29tcG9uZW50ICcgKyB0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkICsgJyB3YXMgZ2l2ZW4gY2hpbGQgSlNYLiBjcmVhdGVHbG9iYWxTdHlsZSBkb2VzIG5vdCByZW5kZXIgY2hpbGRyZW4uJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBTdHlsZVNoZWV0Q29uc3VtZXIsXG4gICAgICAgIG51bGwsXG4gICAgICAgIGZ1bmN0aW9uIChzdHlsZVNoZWV0KSB7XG4gICAgICAgICAgX3RoaXMyLnN0eWxlU2hlZXQgPSBzdHlsZVNoZWV0IHx8IFN0eWxlU2hlZXQubWFzdGVyO1xuXG4gICAgICAgICAgdmFyIGdsb2JhbFN0eWxlID0gX3RoaXMyLnN0YXRlLmdsb2JhbFN0eWxlO1xuXG5cbiAgICAgICAgICBpZiAoZ2xvYmFsU3R5bGUuaXNTdGF0aWMpIHtcbiAgICAgICAgICAgIGdsb2JhbFN0eWxlLnJlbmRlclN0eWxlcyhTVEFUSUNfRVhFQ1VUSU9OX0NPTlRFWFQsIF90aGlzMi5zdHlsZVNoZWV0KTtcblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBUaGVtZUNvbnN1bWVyLFxuICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgICAgICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRQcm9wcyA9IF90aGlzMi5jb25zdHJ1Y3Rvci5kZWZhdWx0UHJvcHM7XG5cblxuICAgICAgICAgICAgICAgIHZhciBjb250ZXh0ID0gX2V4dGVuZHMoe30sIF90aGlzMi5wcm9wcyk7XG5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoZW1lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgY29udGV4dC50aGVtZSA9IGRldGVybWluZVRoZW1lKF90aGlzMi5wcm9wcywgdGhlbWUsIGRlZmF1bHRQcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZ2xvYmFsU3R5bGUucmVuZGVyU3R5bGVzKGNvbnRleHQsIF90aGlzMi5zdHlsZVNoZWV0KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIEdsb2JhbFN0eWxlQ29tcG9uZW50O1xuICB9KFJlYWN0LkNvbXBvbmVudCk7XG5cbiAgR2xvYmFsU3R5bGVDb21wb25lbnQuZ2xvYmFsU3R5bGUgPSBzdHlsZTtcbiAgR2xvYmFsU3R5bGVDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQgPSBpZDtcblxuXG4gIHJldHVybiBHbG9iYWxTdHlsZUNvbXBvbmVudDtcbn1cblxuLy8gXG5cbnZhciByZXBsYWNlV2hpdGVzcGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2VXaGl0ZXNwYWNlKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcc3xcXFxcbi9nLCAnJyk7XG59O1xuXG5mdW5jdGlvbiBrZXlmcmFtZXMoc3RyaW5ncykge1xuICAvKiBXYXJuaW5nIGlmIHlvdSd2ZSB1c2VkIGtleWZyYW1lcyBvbiBSZWFjdCBOYXRpdmUgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgICBjb25zb2xlLndhcm4oJ2BrZXlmcmFtZXNgIGNhbm5vdCBiZSB1c2VkIG9uIFJlYWN0TmF0aXZlLCBvbmx5IG9uIHRoZSB3ZWIuIFRvIGRvIGFuaW1hdGlvbiBpbiBSZWFjdE5hdGl2ZSBwbGVhc2UgdXNlIEFuaW1hdGVkLicpO1xuICB9XG5cbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBydWxlcyA9IGNzcy5hcHBseSh1bmRlZmluZWQsIFtzdHJpbmdzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKTtcblxuICB2YXIgbmFtZSA9IGdlbmVyYXRlQWxwaGFiZXRpY05hbWUobXVybXVyaGFzaChyZXBsYWNlV2hpdGVzcGFjZShKU09OLnN0cmluZ2lmeShydWxlcykpKSk7XG5cbiAgcmV0dXJuIG5ldyBLZXlmcmFtZXMobmFtZSwgc3RyaW5naWZ5UnVsZXMocnVsZXMsIG5hbWUsICdAa2V5ZnJhbWVzJykpO1xufVxuXG4vLyBcblxudmFyIHdpdGhUaGVtZSA9IChmdW5jdGlvbiAoQ29tcG9uZW50JCQxKSB7XG4gIHZhciBXaXRoVGhlbWUgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHZhciBkZWZhdWx0UHJvcHMgPSBDb21wb25lbnQkJDEuZGVmYXVsdFByb3BzO1xuXG4gICAgICAgIHZhciB0aGVtZVByb3AgPSBkZXRlcm1pbmVUaGVtZShwcm9wcywgdGhlbWUsIGRlZmF1bHRQcm9wcyk7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdGhlbWVQcm9wID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignW3dpdGhUaGVtZV0gWW91IGFyZSBub3QgdXNpbmcgYSBUaGVtZVByb3ZpZGVyIG5vciBwYXNzaW5nIGEgdGhlbWUgcHJvcCBvciBhIHRoZW1lIGluIGRlZmF1bHRQcm9wcyBpbiBjb21wb25lbnQgY2xhc3MgXCInICsgZ2V0Q29tcG9uZW50TmFtZShDb21wb25lbnQkJDEpICsgJ1wiJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQkJDEsIF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWVQcm9wLCByZWY6IHJlZiB9KSk7XG4gICAgICB9XG4gICAgKTtcbiAgfSk7XG5cbiAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV2l0aFRoZW1lLCBDb21wb25lbnQkJDEpO1xuXG4gIFdpdGhUaGVtZS5kaXNwbGF5TmFtZSA9ICdXaXRoVGhlbWUoJyArIGdldENvbXBvbmVudE5hbWUoQ29tcG9uZW50JCQxKSArICcpJztcblxuICByZXR1cm4gV2l0aFRoZW1lO1xufSk7XG5cbi8vIFxuXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xudmFyIF9fRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9IQVVOVEVEX0JZX1NQT09LWV9HSE9TVFMgPSB7XG4gIFN0eWxlU2hlZXQ6IFN0eWxlU2hlZXRcbn07XG5cbi8vIFxuXG4vKiBXYXJuaW5nIGlmIHlvdSd2ZSBpbXBvcnRlZCB0aGlzIGZpbGUgb24gUmVhY3QgTmF0aXZlICovXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHlvdSd2ZSBpbXBvcnRlZCAnc3R5bGVkLWNvbXBvbmVudHMnIG9uIFJlYWN0IE5hdGl2ZS5cXG5cIiArIFwiUGVyaGFwcyB5b3UncmUgbG9va2luZyB0byBpbXBvcnQgJ3N0eWxlZC1jb21wb25lbnRzL25hdGl2ZSc/XFxuXCIgKyAnUmVhZCBtb3JlIGFib3V0IHRoaXMgYXQgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYmFzaWNzI3JlYWN0LW5hdGl2ZScpO1xufVxuXG4vKiBXYXJuaW5nIGlmIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiBzdHlsZWQtY29tcG9uZW50cyAqL1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbmF2aWdhdG9yLnVzZXJBZ2VudCA9PT0gJ3N0cmluZycgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdOb2RlLmpzJykgPT09IC0xICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignanNkb20nKSA9PT0gLTEpIHtcbiAgd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddID0gd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddIHx8IDA7XG5cbiAgaWYgKHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSA9PT0gMSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2YgJ3N0eWxlZC1jb21wb25lbnRzJyBpbml0aWFsaXplZCBpbiB0aGlzIGFwcGxpY2F0aW9uLiBcIiArICdUaGlzIG1heSBjYXVzZSBkeW5hbWljIHN0eWxlcyBub3QgcmVuZGVyaW5nIHByb3Blcmx5LCBlcnJvcnMgaGFwcGVuaW5nIGR1cmluZyByZWh5ZHJhdGlvbiBwcm9jZXNzICcgKyAnYW5kIG1ha2VzIHlvdXIgYXBwbGljYXRpb24gYmlnZ2VyIHdpdGhvdXQgYSBnb29kIHJlYXNvbi5cXG5cXG4nICsgJ1NlZSBodHRwczovL3MtYy5zaC8yQkFYemVkIGZvciBtb3JlIGluZm8uJyk7XG4gIH1cblxuICB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gKz0gMTtcbn1cblxuLy9cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkO1xuZXhwb3J0IHsgY3NzLCBrZXlmcmFtZXMsIGNyZWF0ZUdsb2JhbFN0eWxlLCBpc1N0eWxlZENvbXBvbmVudCwgVGhlbWVDb25zdW1lciwgVGhlbWVDb250ZXh0LCBUaGVtZVByb3ZpZGVyLCB3aXRoVGhlbWUsIFNlcnZlclN0eWxlU2hlZXQsIFN0eWxlU2hlZXRNYW5hZ2VyLCBfX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfSEFVTlRFRF9CWV9TUE9PS1lfR0hPU1RTIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcy5tYXBcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBkZWZhdWx0OiBvYmpcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0OyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQocmVxdWlyZShcInJlYWN0XCIpKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcInJlYWN0XCJdLHQpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMucmVhY3RKc29uVmlldz10KHJlcXVpcmUoXCJyZWFjdFwiKSk6ZS5yZWFjdEpzb25WaWV3PXQoZS5SZWFjdCl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChyKXtpZihuW3JdKXJldHVybiBuW3JdLmV4cG9ydHM7dmFyIGE9bltyXT17aTpyLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbcl0uY2FsbChhLmV4cG9ydHMsYSxhLmV4cG9ydHMsdCksYS5sPSEwLGEuZXhwb3J0c312YXIgbj17fTtyZXR1cm4gdC5tPWUsdC5jPW4sdC5kPWZ1bmN0aW9uKGUsbixyKXt0Lm8oZSxuKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbix7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0OnJ9KX0sdC5uPWZ1bmN0aW9uKGUpe3ZhciBuPWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiB0LmQobixcImFcIixuKSxufSx0Lm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHQucD1cIlwiLHQodC5zPTYwKX0oW2Z1bmN0aW9uKHQsbil7dC5leHBvcnRzPWV9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUsdCxuKXtyZXR1cm4gZXx8Y29uc29sZS5lcnJvcihcInRoZW1lIGhhcyBub3QgYmVlbiBzZXRcIiksZihlKSh0LG4pfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBhPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9O3QuZGVmYXVsdD1yO3ZhciBvPW4oNjQpLGk9big2NSkscz1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KGkpLHU9big2NiksbD1mdW5jdGlvbihlKXtyZXR1cm57YmFja2dyb3VuZENvbG9yOmUuYmFzZTAwLGVsbGlwc2lzQ29sb3I6ZS5iYXNlMDksYnJhY2VDb2xvcjplLmJhc2UwNyxleHBhbmRlZEljb246ZS5iYXNlMEQsY29sbGFwc2VkSWNvbjplLmJhc2UwRSxrZXlDb2xvcjplLmJhc2UwNyxhcnJheUtleUNvbG9yOmUuYmFzZTBDLG9iamVjdFNpemU6ZS5iYXNlMDQsY29weVRvQ2xpcGJvYXJkOmUuYmFzZTBGLGNvcHlUb0NsaXBib2FyZENoZWNrOmUuYmFzZTBELG9iamVjdEJvcmRlcjplLmJhc2UwMixkYXRhVHlwZXM6e2Jvb2xlYW46ZS5iYXNlMEUsZGF0ZTplLmJhc2UwRCxmbG9hdDplLmJhc2UwQixmdW5jdGlvbjplLmJhc2UwRCxpbnRlZ2VyOmUuYmFzZTBGLHN0cmluZzplLmJhc2UwOSxuYW46ZS5iYXNlMDgsbnVsbDplLmJhc2UwQSx1bmRlZmluZWQ6ZS5iYXNlMDUscmVnZXhwOmUuYmFzZTBBLGJhY2tncm91bmQ6ZS5iYXNlMDJ9LGVkaXRWYXJpYWJsZTp7ZWRpdEljb246ZS5iYXNlMEUsY2FuY2VsSWNvbjplLmJhc2UwOSxyZW1vdmVJY29uOmUuYmFzZTA5LGFkZEljb246ZS5iYXNlMEUsY2hlY2tJY29uOmUuYmFzZTBFLGJhY2tncm91bmQ6ZS5iYXNlMDEsY29sb3I6ZS5iYXNlMEEsYm9yZGVyOmUuYmFzZTA3fSxhZGRLZXlNb2RhbDp7YmFja2dyb3VuZDplLmJhc2UwNSxib3JkZXI6ZS5iYXNlMDQsY29sb3I6ZS5iYXNlMEEsbGFiZWxDb2xvcjplLmJhc2UwMX0sdmFsaWRhdGlvbkZhaWx1cmU6e2JhY2tncm91bmQ6ZS5iYXNlMDksaWNvbkNvbG9yOmUuYmFzZTAxLGZvbnRDb2xvcjplLmJhc2UwMX19fSxjPWZ1bmN0aW9uKGUpe3ZhciB0PWwoZSk7cmV0dXJue1wiYXBwLWNvbnRhaW5lclwiOntmb250RmFtaWx5OnMuZGVmYXVsdC5nbG9iYWxGb250RmFtaWx5LGN1cnNvcjpzLmRlZmF1bHQuZ2xvYmFsQ3Vyc29yLGJhY2tncm91bmRDb2xvcjp0LmJhY2tncm91bmRDb2xvcixwb3NpdGlvbjpcInJlbGF0aXZlXCJ9LGVsbGlwc2lzOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5lbGxpcHNpc0NvbG9yLGZvbnRTaXplOnMuZGVmYXVsdC5lbGxpcHNpc0ZvbnRTaXplLGxpbmVIZWlnaHQ6cy5kZWZhdWx0LmVsbGlwc2lzTGluZUhlaWdodCxjdXJzb3I6cy5kZWZhdWx0LmVsbGlwc2lzQ3Vyc29yfSxcImJyYWNlLXJvd1wiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY3Vyc29yOlwicG9pbnRlclwifSxicmFjZTp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGN1cnNvcjpzLmRlZmF1bHQuYnJhY2VDdXJzb3IsZm9udFdlaWdodDpzLmRlZmF1bHQuYnJhY2VGb250V2VpZ2h0LGNvbG9yOnQuYnJhY2VDb2xvcn0sXCJleHBhbmRlZC1pY29uXCI6e2NvbG9yOnQuZXhwYW5kZWRJY29ufSxcImNvbGxhcHNlZC1pY29uXCI6e2NvbG9yOnQuY29sbGFwc2VkSWNvbn0sY29sb246e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixtYXJnaW46cy5kZWZhdWx0LmtleU1hcmdpbixjb2xvcjp0LmtleUNvbG9yLHZlcnRpY2FsQWxpZ246XCJ0b3BcIn0sb2JqZWN0S2V5VmFsOmZ1bmN0aW9uKGUsbil7cmV0dXJue3N0eWxlOmEoe3BhZGRpbmdUb3A6cy5kZWZhdWx0LmtleVZhbFBhZGRpbmdUb3AscGFkZGluZ1JpZ2h0OnMuZGVmYXVsdC5rZXlWYWxQYWRkaW5nUmlnaHQscGFkZGluZ0JvdHRvbTpzLmRlZmF1bHQua2V5VmFsUGFkZGluZ0JvdHRvbSxib3JkZXJMZWZ0OnMuZGVmYXVsdC5rZXlWYWxCb3JkZXJMZWZ0K1wiIFwiK3Qub2JqZWN0Qm9yZGVyLFwiOmhvdmVyXCI6e3BhZGRpbmdMZWZ0Om4ucGFkZGluZ0xlZnQtMStcInB4XCIsYm9yZGVyTGVmdDpzLmRlZmF1bHQua2V5VmFsQm9yZGVySG92ZXIrXCIgXCIrdC5vYmplY3RCb3JkZXJ9fSxuKX19LFwib2JqZWN0LWtleS12YWwtbm8tYm9yZGVyXCI6e3BhZGRpbmc6cy5kZWZhdWx0LmtleVZhbFBhZGRpbmd9LFwicHVzaGVkLWNvbnRlbnRcIjp7bWFyZ2luTGVmdDpzLmRlZmF1bHQucHVzaGVkQ29udGVudE1hcmdpbkxlZnR9LHZhcmlhYmxlVmFsdWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm57c3R5bGU6YSh7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLHBhZGRpbmdSaWdodDpzLmRlZmF1bHQudmFyaWFibGVWYWx1ZVBhZGRpbmdSaWdodCxwb3NpdGlvbjpcInJlbGF0aXZlXCJ9LHQpfX0sXCJvYmplY3QtbmFtZVwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5rZXlDb2xvcixsZXR0ZXJTcGFjaW5nOnMuZGVmYXVsdC5rZXlMZXR0ZXJTcGFjaW5nLGZvbnRTdHlsZTpzLmRlZmF1bHQua2V5Rm9udFN0eWxlLHZlcnRpY2FsQWxpZ246cy5kZWZhdWx0LmtleVZlcnRpY2FsQWxpZ24sb3BhY2l0eTpzLmRlZmF1bHQua2V5T3BhY2l0eSxcIjpob3ZlclwiOntvcGFjaXR5OnMuZGVmYXVsdC5rZXlPcGFjaXR5SG92ZXJ9fSxcImFycmF5LWtleVwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5hcnJheUtleUNvbG9yLGxldHRlclNwYWNpbmc6cy5kZWZhdWx0LmtleUxldHRlclNwYWNpbmcsZm9udFN0eWxlOnMuZGVmYXVsdC5rZXlGb250U3R5bGUsdmVydGljYWxBbGlnbjpzLmRlZmF1bHQua2V5VmVydGljYWxBbGlnbixvcGFjaXR5OnMuZGVmYXVsdC5rZXlPcGFjaXR5LFwiOmhvdmVyXCI6e29wYWNpdHk6cy5kZWZhdWx0LmtleU9wYWNpdHlIb3Zlcn19LFwib2JqZWN0LXNpemVcIjp7Y29sb3I6dC5vYmplY3RTaXplLGJvcmRlclJhZGl1czpzLmRlZmF1bHQub2JqZWN0U2l6ZUJvcmRlclJhZGl1cyxmb250U3R5bGU6cy5kZWZhdWx0Lm9iamVjdFNpemVGb250U3R5bGUsbWFyZ2luOnMuZGVmYXVsdC5vYmplY3RTaXplTWFyZ2luLGN1cnNvcjpcImRlZmF1bHRcIn0sXCJkYXRhLXR5cGUtbGFiZWxcIjp7Zm9udFNpemU6cy5kZWZhdWx0LmRhdGFUeXBlRm9udFNpemUsbWFyZ2luUmlnaHQ6cy5kZWZhdWx0LmRhdGFUeXBlTWFyZ2luUmlnaHQsb3BhY2l0eTpzLmRlZmF1bHQuZGF0YXR5cGVPcGFjaXR5fSxib29sZWFuOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMuYm9vbGVhbn0sZGF0ZTp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLmRhdGV9LFwiZGF0ZS12YWx1ZVwiOnttYXJnaW5MZWZ0OnMuZGVmYXVsdC5kYXRlVmFsdWVNYXJnaW5MZWZ0fSxmbG9hdDp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLmZsb2F0fSxmdW5jdGlvbjp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLmZ1bmN0aW9uLGN1cnNvcjpcInBvaW50ZXJcIix3aGl0ZVNwYWNlOlwicHJlLWxpbmVcIn0sXCJmdW5jdGlvbi12YWx1ZVwiOntmb250U3R5bGU6XCJpdGFsaWNcIn0saW50ZWdlcjp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLmludGVnZXJ9LHN0cmluZzp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLnN0cmluZ30sbmFuOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5kYXRhVHlwZXMubmFuLGZvbnRTaXplOnMuZGVmYXVsdC5uYW5Gb250U2l6ZSxmb250V2VpZ2h0OnMuZGVmYXVsdC5uYW5Gb250V2VpZ2h0LGJhY2tncm91bmRDb2xvcjp0LmRhdGFUeXBlcy5iYWNrZ3JvdW5kLHBhZGRpbmc6cy5kZWZhdWx0Lm5hblBhZGRpbmcsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC5uYW5Cb3JkZXJSYWRpdXN9LG51bGw6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmRhdGFUeXBlcy5udWxsLGZvbnRTaXplOnMuZGVmYXVsdC5udWxsRm9udFNpemUsZm9udFdlaWdodDpzLmRlZmF1bHQubnVsbEZvbnRXZWlnaHQsYmFja2dyb3VuZENvbG9yOnQuZGF0YVR5cGVzLmJhY2tncm91bmQscGFkZGluZzpzLmRlZmF1bHQubnVsbFBhZGRpbmcsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC5udWxsQm9yZGVyUmFkaXVzfSx1bmRlZmluZWQ6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIixjb2xvcjp0LmRhdGFUeXBlcy51bmRlZmluZWQsZm9udFNpemU6cy5kZWZhdWx0LnVuZGVmaW5lZEZvbnRTaXplLHBhZGRpbmc6cy5kZWZhdWx0LnVuZGVmaW5lZFBhZGRpbmcsYm9yZGVyUmFkaXVzOnMuZGVmYXVsdC51bmRlZmluZWRCb3JkZXJSYWRpdXMsYmFja2dyb3VuZENvbG9yOnQuZGF0YVR5cGVzLmJhY2tncm91bmR9LHJlZ2V4cDp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZGF0YVR5cGVzLnJlZ2V4cH0sXCJjb3B5LXRvLWNsaXBib2FyZFwiOntjdXJzb3I6cy5kZWZhdWx0LmNsaXBib2FyZEN1cnNvcn0sXCJjb3B5LWljb25cIjp7Y29sb3I6dC5jb3B5VG9DbGlwYm9hcmQsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSxtYXJnaW5SaWdodDpzLmRlZmF1bHQuaWNvbk1hcmdpblJpZ2h0LHZlcnRpY2FsQWxpZ246XCJ0b3BcIn0sXCJjb3B5LWljb24tY29waWVkXCI6e2NvbG9yOnQuY29weVRvQ2xpcGJvYXJkQ2hlY2ssbWFyZ2luTGVmdDpzLmRlZmF1bHQuY2xpcGJvYXJkQ2hlY2tNYXJnaW5MZWZ0fSxcImFycmF5LWdyb3VwLW1ldGEtZGF0YVwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIscGFkZGluZzpzLmRlZmF1bHQuYXJyYXlHcm91cE1ldGFQYWRkaW5nfSxcIm9iamVjdC1tZXRhLWRhdGFcIjp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLHBhZGRpbmc6cy5kZWZhdWx0Lm1ldGFEYXRhUGFkZGluZ30sXCJpY29uLWNvbnRhaW5lclwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsd2lkdGg6cy5kZWZhdWx0Lmljb25Db250YWluZXJXaWR0aH0sdG9vbHRpcDp7cGFkZGluZzpzLmRlZmF1bHQudG9vbHRpcFBhZGRpbmd9LHJlbW92ZVZhckljb246e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIixkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5lZGl0VmFyaWFibGUucmVtb3ZlSWNvbixjdXJzb3I6cy5kZWZhdWx0Lmljb25DdXJzb3IsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSxtYXJnaW5SaWdodDpzLmRlZmF1bHQuaWNvbk1hcmdpblJpZ2h0fSxhZGRWYXJJY29uOnt2ZXJ0aWNhbEFsaWduOlwidG9wXCIsZGlzcGxheTpcImlubGluZS1ibG9ja1wiLGNvbG9yOnQuZWRpdFZhcmlhYmxlLmFkZEljb24sY3Vyc29yOnMuZGVmYXVsdC5pY29uQ3Vyc29yLGZvbnRTaXplOnMuZGVmYXVsdC5pY29uRm9udFNpemUsbWFyZ2luUmlnaHQ6cy5kZWZhdWx0Lmljb25NYXJnaW5SaWdodH0sZWRpdFZhckljb246e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIixkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5lZGl0VmFyaWFibGUuZWRpdEljb24sY3Vyc29yOnMuZGVmYXVsdC5pY29uQ3Vyc29yLGZvbnRTaXplOnMuZGVmYXVsdC5pY29uRm9udFNpemUsbWFyZ2luUmlnaHQ6cy5kZWZhdWx0Lmljb25NYXJnaW5SaWdodH0sXCJlZGl0LWljb24tY29udGFpbmVyXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIix2ZXJ0aWNhbEFsaWduOlwidG9wXCJ9LFwiY2hlY2staWNvblwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY3Vyc29yOnMuZGVmYXVsdC5pY29uQ3Vyc29yLGNvbG9yOnQuZWRpdFZhcmlhYmxlLmNoZWNrSWNvbixmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLHBhZGRpbmdSaWdodDpzLmRlZmF1bHQuaWNvblBhZGRpbmdSaWdodH0sXCJjYW5jZWwtaWNvblwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY3Vyc29yOnMuZGVmYXVsdC5pY29uQ3Vyc29yLGNvbG9yOnQuZWRpdFZhcmlhYmxlLmNhbmNlbEljb24sZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSxwYWRkaW5nUmlnaHQ6cy5kZWZhdWx0Lmljb25QYWRkaW5nUmlnaHR9LFwiZWRpdC1pbnB1dFwiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsbWluSGVpZ2h0OnMuZGVmYXVsdC5lZGl0SW5wdXRIZWlnaHQsbWluV2lkdGg6cy5kZWZhdWx0LmVkaXRJbnB1dE1pbldpZHRoLGJvcmRlclJhZGl1czpzLmRlZmF1bHQuZWRpdElucHV0Qm9yZGVyUmFkaXVzLGJhY2tncm91bmRDb2xvcjp0LmVkaXRWYXJpYWJsZS5iYWNrZ3JvdW5kLGNvbG9yOnQuZWRpdFZhcmlhYmxlLmNvbG9yLHBhZGRpbmc6cy5kZWZhdWx0LmVkaXRJbnB1dFBhZGRpbmcsbWFyZ2luUmlnaHQ6cy5kZWZhdWx0LmVkaXRJbnB1dE1hcmdpblJpZ2h0LGZvbnRGYW1pbHk6cy5kZWZhdWx0LmVkaXRJbnB1dEZvbnRGYW1pbHl9LFwiZGV0ZWN0ZWQtcm93XCI6e3BhZGRpbmdUb3A6cy5kZWZhdWx0LmRldGVjdGVkUm93UGFkZGluZ1RvcH0sXCJrZXktbW9kYWwtcmVxdWVzdFwiOntwb3NpdGlvbjpzLmRlZmF1bHQuYWRkS2V5Q292ZXJQb3NpdGlvbix0b3A6cy5kZWZhdWx0LmFkZEtleUNvdmVyUG9zaXRpb25QeCxsZWZ0OnMuZGVmYXVsdC5hZGRLZXlDb3ZlclBvc2l0aW9uUHgscmlnaHQ6cy5kZWZhdWx0LmFkZEtleUNvdmVyUG9zaXRpb25QeCxib3R0b206cy5kZWZhdWx0LmFkZEtleUNvdmVyUG9zaXRpb25QeCxiYWNrZ3JvdW5kQ29sb3I6cy5kZWZhdWx0LmFkZEtleUNvdmVyQmFja2dyb3VuZH0sXCJrZXktbW9kYWxcIjp7d2lkdGg6cy5kZWZhdWx0LmFkZEtleU1vZGFsV2lkdGgsYmFja2dyb3VuZENvbG9yOnQuYWRkS2V5TW9kYWwuYmFja2dyb3VuZCxtYXJnaW5MZWZ0OnMuZGVmYXVsdC5hZGRLZXlNb2RhbE1hcmdpbixtYXJnaW5SaWdodDpzLmRlZmF1bHQuYWRkS2V5TW9kYWxNYXJnaW4scGFkZGluZzpzLmRlZmF1bHQuYWRkS2V5TW9kYWxQYWRkaW5nLGJvcmRlclJhZGl1czpzLmRlZmF1bHQuYWRkS2V5TW9kYWxSYWRpdXMsbWFyZ2luVG9wOlwiMTVweFwiLHBvc2l0aW9uOlwicmVsYXRpdmVcIn0sXCJrZXktbW9kYWwtbGFiZWxcIjp7Y29sb3I6dC5hZGRLZXlNb2RhbC5sYWJlbENvbG9yLG1hcmdpbkxlZnQ6XCIycHhcIixtYXJnaW5Cb3R0b206XCI1cHhcIixmb250U2l6ZTpcIjExcHhcIn0sXCJrZXktbW9kYWwtaW5wdXQtY29udGFpbmVyXCI6e292ZXJmbG93OlwiaGlkZGVuXCJ9LFwia2V5LW1vZGFsLWlucHV0XCI6e3dpZHRoOlwiMTAwJVwiLHBhZGRpbmc6XCIzcHggNnB4XCIsZm9udEZhbWlseTpcIm1vbm9zcGFjZVwiLGNvbG9yOnQuYWRkS2V5TW9kYWwuY29sb3IsYm9yZGVyOlwibm9uZVwiLGJveFNpemluZzpcImJvcmRlci1ib3hcIixib3JkZXJSYWRpdXM6XCIycHhcIn0sXCJrZXktbW9kYWwtY2FuY2VsXCI6e2JhY2tncm91bmRDb2xvcjp0LmVkaXRWYXJpYWJsZS5yZW1vdmVJY29uLHBvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6XCIwcHhcIixyaWdodDpcIjBweFwiLGJvcmRlclJhZGl1czpcIjBweCAzcHggMHB4IDNweFwiLGN1cnNvcjpcInBvaW50ZXJcIn0sXCJrZXktbW9kYWwtY2FuY2VsLWljb25cIjp7Y29sb3I6dC5hZGRLZXlNb2RhbC5sYWJlbENvbG9yLGZvbnRTaXplOnMuZGVmYXVsdC5pY29uRm9udFNpemUsdHJhbnNmb3JtOlwicm90YXRlKDQ1ZGVnKVwifSxcImtleS1tb2RhbC1zdWJtaXRcIjp7Y29sb3I6dC5lZGl0VmFyaWFibGUuYWRkSWNvbixmb250U2l6ZTpzLmRlZmF1bHQuaWNvbkZvbnRTaXplLHBvc2l0aW9uOlwiYWJzb2x1dGVcIixyaWdodDpcIjJweFwiLHRvcDpcIjNweFwiLGN1cnNvcjpcInBvaW50ZXJcIn0sXCJmdW5jdGlvbi1lbGxpcHNpc1wiOntkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCIsY29sb3I6dC5lbGxpcHNpc0NvbG9yLGZvbnRTaXplOnMuZGVmYXVsdC5lbGxpcHNpc0ZvbnRTaXplLGxpbmVIZWlnaHQ6cy5kZWZhdWx0LmVsbGlwc2lzTGluZUhlaWdodCxjdXJzb3I6cy5kZWZhdWx0LmVsbGlwc2lzQ3Vyc29yfSxcInZhbGlkYXRpb24tZmFpbHVyZVwiOntmbG9hdDpcInJpZ2h0XCIscGFkZGluZzpcIjNweCA2cHhcIixib3JkZXJSYWRpdXM6XCIycHhcIixjdXJzb3I6XCJwb2ludGVyXCIsY29sb3I6dC52YWxpZGF0aW9uRmFpbHVyZS5mb250Q29sb3IsYmFja2dyb3VuZENvbG9yOnQudmFsaWRhdGlvbkZhaWx1cmUuYmFja2dyb3VuZH0sXCJ2YWxpZGF0aW9uLWZhaWx1cmUtbGFiZWxcIjp7bWFyZ2luUmlnaHQ6XCI2cHhcIn0sXCJ2YWxpZGF0aW9uLWZhaWx1cmUtY2xlYXJcIjp7cG9zaXRpb246XCJyZWxhdGl2ZVwiLHZlcnRpY2FsQWxpZ246XCJ0b3BcIixjdXJzb3I6XCJwb2ludGVyXCIsY29sb3I6dC52YWxpZGF0aW9uRmFpbHVyZS5pY29uQ29sb3IsZm9udFNpemU6cy5kZWZhdWx0Lmljb25Gb250U2l6ZSx0cmFuc2Zvcm06XCJyb3RhdGUoNDVkZWcpXCJ9fX0sZj1mdW5jdGlvbihlKXt2YXIgdD1vLnJqdl9kZWZhdWx0O3JldHVybiExIT09ZSYmXCJub25lXCIhPT1lfHwodD1vLnJqdl9ncmV5KSwoMCx1LmNyZWF0ZVN0eWxpbmcpKGMse2RlZmF1bHRCYXNlMTY6dH0pKGUpfX0sZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmV4cG9ydHM9e3ZlcnNpb246XCIyLjUuN1wifTtcIm51bWJlclwiPT10eXBlb2YgX19lJiYoX19lPW4pfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMikoXCJ3a3NcIiksYT1uKDIzKSxvPW4oNSkuU3ltYm9sLGk9XCJmdW5jdGlvblwiPT10eXBlb2YgbzsoZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByW2VdfHwocltlXT1pJiZvW2VdfHwoaT9vOmEpKFwiU3ltYm9sLlwiK2UpKX0pLnN0b3JlPXJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3ZhciB0PWEoZSk7cmV0dXJuXCJudW1iZXJcIj09PXQmJih0PWlzTmFOKGUpP1wibmFuXCI6KDB8ZSkhPWU/XCJmbG9hdFwiOlwiaW50ZWdlclwiKSx0fWZ1bmN0aW9uIGEoZSl7cmV0dXJue30udG9TdHJpbmcuY2FsbChlKS5tYXRjaCgvXFxzKFthLXpBLVpdKykvKVsxXS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIG8oZSl7dmFyIHQ9W1wiYmFzZTAwXCIsXCJiYXNlMDFcIixcImJhc2UwMlwiLFwiYmFzZTAzXCIsXCJiYXNlMDRcIixcImJhc2UwNVwiLFwiYmFzZTA2XCIsXCJiYXNlMDdcIixcImJhc2UwOFwiLFwiYmFzZTA5XCIsXCJiYXNlMEFcIixcImJhc2UwQlwiLFwiYmFzZTBDXCIsXCJiYXNlMERcIixcImJhc2UwRVwiLFwiYmFzZTBGXCJdO2lmKFwib2JqZWN0XCI9PT1yKGUpKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKylpZighKHRbbl1pbiBlKSlyZXR1cm4hMTtyZXR1cm4hMH1yZXR1cm4hMX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LnRvVHlwZT1yLHQuaXNUaGVtZT1vfSxmdW5jdGlvbihlLHQpe3ZhciBuPWUuZXhwb3J0cz1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcIm51bWJlclwiPT10eXBlb2YgX19nJiYoX19nPW4pfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMSksZD1yKGYpLHA9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9KGUucmp2SWQsZS50eXBlX25hbWUpLG49ZS5kaXNwbGF5RGF0YVR5cGVzLHI9ZS50aGVtZTtyZXR1cm4gbj9jLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixzKHtjbGFzc05hbWU6XCJkYXRhLXR5cGUtbGFiZWxcIn0sKDAsZC5kZWZhdWx0KShyLFwiZGF0YS10eXBlLWxhYmVsXCIpKSx0KTpudWxsfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PXB9LGZ1bmN0aW9uKGUsdCl7dmFyIG49e30uaGFzT3duUHJvcGVydHk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY2FsbChlLHQpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oOSksYT1uKDIyKTtlLmV4cG9ydHM9bigxMCk/ZnVuY3Rpb24oZSx0LG4pe3JldHVybiByLmYoZSx0LGEoMSxuKSl9OmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZVt0XT1uLGV9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNiksYT1uKDQ0KSxvPW4oMjkpLGk9T2JqZWN0LmRlZmluZVByb3BlcnR5O3QuZj1uKDEwKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LG4pe2lmKHIoZSksdD1vKHQsITApLHIobiksYSl0cnl7cmV0dXJuIGkoZSx0LG4pfWNhdGNoKGUpe31pZihcImdldFwiaW4gbnx8XCJzZXRcImluIG4pdGhyb3cgVHlwZUVycm9yKFwiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhXCIpO3JldHVyblwidmFsdWVcImluIG4mJihlW3RdPW4udmFsdWUpLGV9fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSFuKDExKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sXCJhXCIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDQ5KSxhPW4oMjgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gcihhKGUpKX19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLG49QXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKW5bdF09ZVt0XTtyZXR1cm4gbn1yZXR1cm4gQXJyYXkuZnJvbShlKX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9bigxNjEpLGw9bigxNCksYz1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KGwpLGY9big0KSxkPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZSxuLGksdTthKHRoaXMsdCk7Zm9yKHZhciBsPWFyZ3VtZW50cy5sZW5ndGgsYz1BcnJheShsKSxkPTA7ZDxsO2QrKyljW2RdPWFyZ3VtZW50c1tkXTtyZXR1cm4gbj1pPW8odGhpcywoZT10Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsLmFwcGx5KGUsW3RoaXNdLmNvbmNhdChjKSkpLGkub2JqZWN0cz17fSxpLnNldD1mdW5jdGlvbihlLHQsbixyKXt2b2lkIDA9PT1pLm9iamVjdHNbZV0mJihpLm9iamVjdHNbZV09e30pLHZvaWQgMD09PWkub2JqZWN0c1tlXVt0XSYmKGkub2JqZWN0c1tlXVt0XT17fSksaS5vYmplY3RzW2VdW3RdW25dPXJ9LGkuZ2V0PWZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiB2b2lkIDA9PT1pLm9iamVjdHNbZV18fHZvaWQgMD09PWkub2JqZWN0c1tlXVt0XXx8dm9pZCAwPT1pLm9iamVjdHNbZV1bdF1bbl0/cjppLm9iamVjdHNbZV1bdF1bbl19LGkuaGFuZGxlQWN0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0PWUucmp2SWQsbj1lLmRhdGE7c3dpdGNoKGUubmFtZSl7Y2FzZVwiUkVTRVRcIjppLmVtaXQoXCJyZXNldC1cIit0KTticmVhaztjYXNlXCJWQVJJQUJMRV9VUERBVEVEXCI6ZS5kYXRhLnVwZGF0ZWRfc3JjPWkudXBkYXRlU3JjKHQsbiksaS5zZXQodCxcImFjdGlvblwiLFwidmFyaWFibGUtdXBkYXRlXCIscyh7fSxuLHt0eXBlOlwidmFyaWFibGUtZWRpdGVkXCJ9KSksaS5lbWl0KFwidmFyaWFibGUtdXBkYXRlLVwiK3QpO2JyZWFrO2Nhc2VcIlZBUklBQkxFX1JFTU9WRURcIjplLmRhdGEudXBkYXRlZF9zcmM9aS51cGRhdGVTcmModCxuKSxpLnNldCh0LFwiYWN0aW9uXCIsXCJ2YXJpYWJsZS11cGRhdGVcIixzKHt9LG4se3R5cGU6XCJ2YXJpYWJsZS1yZW1vdmVkXCJ9KSksaS5lbWl0KFwidmFyaWFibGUtdXBkYXRlLVwiK3QpO2JyZWFrO2Nhc2VcIlZBUklBQkxFX0FEREVEXCI6ZS5kYXRhLnVwZGF0ZWRfc3JjPWkudXBkYXRlU3JjKHQsbiksaS5zZXQodCxcImFjdGlvblwiLFwidmFyaWFibGUtdXBkYXRlXCIscyh7fSxuLHt0eXBlOlwidmFyaWFibGUtYWRkZWRcIn0pKSxpLmVtaXQoXCJ2YXJpYWJsZS11cGRhdGUtXCIrdCk7YnJlYWs7Y2FzZVwiQUREX1ZBUklBQkxFX0tFWV9SRVFVRVNUXCI6aS5zZXQodCxcImFjdGlvblwiLFwibmV3LWtleS1yZXF1ZXN0XCIsbiksaS5lbWl0KFwiYWRkLWtleS1yZXF1ZXN0LVwiK3QpfX0saS51cGRhdGVTcmM9ZnVuY3Rpb24oZSx0KXt2YXIgbj10Lm5hbWUsYT10Lm5hbWVzcGFjZSxvPXQubmV3X3ZhbHVlLHM9KHQuZXhpc3RpbmdfdmFsdWUsdC52YXJpYWJsZV9yZW1vdmVkKTthLnNoaWZ0KCk7dmFyIHU9aS5nZXQoZSxcImdsb2JhbFwiLFwic3JjXCIpLGw9aS5kZWVwQ29weSh1LFtdLmNvbmNhdChyKGEpKSksYz1sLGQ9ITAscD0hMSxiPXZvaWQgMDt0cnl7Zm9yKHZhciBoLHk9YVtTeW1ib2wuaXRlcmF0b3JdKCk7IShkPShoPXkubmV4dCgpKS5kb25lKTtkPSEwKWM9Y1toLnZhbHVlXX1jYXRjaChlKXtwPSEwLGI9ZX1maW5hbGx5e3RyeXshZCYmeS5yZXR1cm4mJnkucmV0dXJuKCl9ZmluYWxseXtpZihwKXRocm93IGJ9fXJldHVybiBzP1wiYXJyYXlcIj09KDAsZi50b1R5cGUpKGMpP2Muc3BsaWNlKG4sMSk6ZGVsZXRlIGNbbl06bnVsbCE9PW4/Y1tuXT1vOmw9byxpLnNldChlLFwiZ2xvYmFsXCIsXCJzcmNcIixsKSxsfSxpLmRlZXBDb3B5PWZ1bmN0aW9uKGUsdCl7dmFyIG49KDAsZi50b1R5cGUpKGUpLGE9dm9pZCAwLG89dC5zaGlmdCgpO3JldHVyblwiYXJyYXlcIj09bj9hPVtdLmNvbmNhdChyKGUpKTpcIm9iamVjdFwiPT1uJiYoYT1zKHt9LGUpKSx2b2lkIDAhPT1vJiYoYVtvXT1pLmRlZXBDb3B5KGVbb10sdCkpLGF9LHU9bixvKGksdSl9cmV0dXJuIGkodCxlKSx0fSh1LkV2ZW50RW1pdHRlcikscD1uZXcgZDtjLmRlZmF1bHQucmVnaXN0ZXIocC5oYW5kbGVBY3Rpb24uYmluZChwKSksdC5kZWZhdWx0PXB9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcj1uKDE2MiksYT1uZXcgci5EaXNwYXRjaGVyO3QuZGVmYXVsdD1hfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKXQuaW5kZXhPZihyKT49MHx8T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJihuW3JdPWVbcl0pO3JldHVybiBufWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZXx8KGU9e30pLHtzdHlsZTp1KHt2ZXJ0aWNhbEFsaWduOlwibWlkZGxlXCJ9LGUse2NvbG9yOmUuY29sb3I/ZS5jb2xvcjpkLGhlaWdodDpcIjFlbVwiLHdpZHRoOlwiMWVtXCJ9KX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5DaGVja0NpcmNsZT10LkVkaXQ9dC5BZGQ9dC5BZGRDaXJjbGU9dC5SZW1vdmVDaXJjbGU9dC5DbGlwcHk9dC5BcnJvd0Rvd249dC5BcnJvd1JpZ2h0PXQuU3F1YXJlUGx1cz10LlNxdWFyZU1pbnVzPXQuQ2lyY2xlUGx1cz10LkNpcmNsZU1pbnVzPXZvaWQgMDt2YXIgdT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksYz1uKDApLGY9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShjKSxkPVwiIzAwMDAwMFwiO3QuQ2lyY2xlTWludXM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgMjQgMjRcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTEyLDIwQzcuNTksMjAgNCwxNi40MSA0LDEyQzQsNy41OSA3LjU5LDQgMTIsNEMxNi40MSw0IDIwLDcuNTkgMjAsMTJDMjAsMTYuNDEgMTYuNDEsMjAgMTIsMjBNMTIsMkExMCwxMCAwIDAsMCAyLDEyQTEwLDEwIDAgMCwwIDEyLDIyQTEwLDEwIDAgMCwwIDIyLDEyQTEwLDEwIDAgMCwwIDEyLDJNNywxM0gxN1YxMUg3XCJ9KSkpfX1dKSx0fShmLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksdC5DaXJjbGVQbHVzPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDI0IDI0XCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0xMiwyMEM3LjU5LDIwIDQsMTYuNDEgNCwxMkM0LDcuNTkgNy41OSw0IDEyLDRDMTYuNDEsNCAyMCw3LjU5IDIwLDEyQzIwLDE2LjQxIDE2LjQxLDIwIDEyLDIwTTEyLDJBMTAsMTAgMCAwLDAgMiwxMkExMCwxMCAwIDAsMCAxMiwyMkExMCwxMCAwIDAsMCAyMiwxMkExMCwxMCAwIDAsMCAxMiwyTTEzLDdIMTFWMTFIN1YxM0gxMVYxN0gxM1YxM0gxN1YxMUgxM1Y3WlwifSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuU3F1YXJlTWludXM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSksYT1zKHQpLnN0eWxlO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIse2ZpbGw6YS5jb2xvcix3aWR0aDphLmhlaWdodCxoZWlnaHQ6YS53aWR0aCxzdHlsZTphLHZpZXdCb3g6XCIwIDAgMTc5MiAxNzkyXCJ9LGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwiTTEzNDQgODAwdjY0cTAgMTQtOSAyM3QtMjMgOWgtODMycS0xNCAwLTIzLTl0LTktMjN2LTY0cTAtMTQgOS0yM3QyMy05aDgzMnExNCAwIDIzIDl0OSAyM3ptMTI4IDQ0OHYtODMycTAtNjYtNDctMTEzdC0xMTMtNDdoLTgzMnEtNjYgMC0xMTMgNDd0LTQ3IDExM3Y4MzJxMCA2NiA0NyAxMTN0MTEzIDQ3aDgzMnE2NiAwIDExMy00N3Q0Ny0xMTN6bTEyOC04MzJ2ODMycTAgMTE5LTg0LjUgMjAzLjV0LTIwMy41IDg0LjVoLTgzMnEtMTE5IDAtMjAzLjUtODQuNXQtODQuNS0yMDMuNXYtODMycTAtMTE5IDg0LjUtMjAzLjV0MjAzLjUtODQuNWg4MzJxMTE5IDAgMjAzLjUgODQuNXQ4NC41IDIwMy41elwifSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuU3F1YXJlUGx1cz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKSxhPXModCkuc3R5bGU7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix7ZmlsbDphLmNvbG9yLHdpZHRoOmEuaGVpZ2h0LGhlaWdodDphLndpZHRoLHN0eWxlOmEsdmlld0JveDpcIjAgMCAxNzkyIDE3OTJcIn0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNMTM0NCA4MDB2NjRxMCAxNC05IDIzdC0yMyA5aC0zNTJ2MzUycTAgMTQtOSAyM3QtMjMgOWgtNjRxLTE0IDAtMjMtOXQtOS0yM3YtMzUyaC0zNTJxLTE0IDAtMjMtOXQtOS0yM3YtNjRxMC0xNCA5LTIzdDIzLTloMzUydi0zNTJxMC0xNCA5LTIzdDIzLTloNjRxMTQgMCAyMyA5dDkgMjN2MzUyaDM1MnExNCAwIDIzIDl0OSAyM3ptMTI4IDQ0OHYtODMycTAtNjYtNDctMTEzdC0xMTMtNDdoLTgzMnEtNjYgMC0xMTMgNDd0LTQ3IDExM3Y4MzJxMCA2NiA0NyAxMTN0MTEzIDQ3aDgzMnE2NiAwIDExMy00N3Q0Ny0xMTN6bTEyOC04MzJ2ODMycTAgMTE5LTg0LjUgMjAzLjV0LTIwMy41IDg0LjVoLTgzMnEtMTE5IDAtMjAzLjUtODQuNXQtODQuNS0yMDMuNXYtODMycTAtMTE5IDg0LjUtMjAzLjV0MjAzLjUtODQuNWg4MzJxMTE5IDAgMjAzLjUgODQuNXQ4NC41IDIwMy41elwifSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQXJyb3dSaWdodD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHtzdHlsZTp1KHt9LHModCkuc3R5bGUse3BhZGRpbmdMZWZ0OlwiMnB4XCIsdmVydGljYWxBbGlnbjpcInRvcFwifSksdmlld0JveDpcIjAgMCAxNSAxNVwiLGZpbGw6XCJjdXJyZW50Q29sb3JcIn0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNMCAxNGw2LTYtNi02elwifSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQXJyb3dEb3duPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIse3N0eWxlOnUoe30scyh0KS5zdHlsZSx7cGFkZGluZ0xlZnQ6XCIycHhcIix2ZXJ0aWNhbEFsaWduOlwidG9wXCJ9KSx2aWV3Qm94OlwiMCAwIDE1IDE1XCIsZmlsbDpcImN1cnJlbnRDb2xvclwifSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0wIDVsNiA2IDYtNnpcIn0pKSl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSx0LkNsaXBweT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHUoe30scyh0KSx7dmlld0JveDpcIjAgMCA0MCA0MFwiLGZpbGw6XCJjdXJyZW50Q29sb3JcIixwcmVzZXJ2ZUFzcGVjdFJhdGlvOlwieE1pZFlNaWQgbWVldFwifSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIm0zMCAzNWgtMjV2LTIyLjVoMjV2Ny41aDIuNXYtMTIuNWMwLTEuNC0xLjEtMi41LTIuNS0yLjVoLTcuNWMwLTIuOC0yLjItNS01LTVzLTUgMi4yLTUgNWgtNy41Yy0xLjQgMC0yLjUgMS4xLTIuNSAyLjV2MjcuNWMwIDEuNCAxLjEgMi41IDIuNSAyLjVoMjVjMS40IDAgMi41LTEuMSAyLjUtMi41di01aC0yLjV2NXogbS0yMC0yNy41aDIuNXMyLjUtMS4xIDIuNS0yLjUgMS4xLTIuNSAyLjUtMi41IDIuNSAxLjEgMi41IDIuNSAxLjMgMi41IDIuNSAyLjVoMi41czIuNSAxLjEgMi41IDIuNWgtMjBjMC0xLjUgMS4xLTIuNSAyLjUtMi41eiBtLTIuNSAyMGg1di0yLjVoLTV2Mi41eiBtMTcuNS01di01bC0xMCA3LjUgMTAgNy41di01aDEyLjV2LTVoLTEyLjV6IG0tMTcuNSAxMGg3LjV2LTIuNWgtNy41djIuNXogbTEyLjUtMTcuNWgtMTIuNXYyLjVoMTIuNXYtMi41eiBtLTcuNSA1aC01djIuNWg1di0yLjV6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuUmVtb3ZlQ2lyY2xlPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDQwIDQwXCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwibTI4LjYgMjVxMC0wLjUtMC40LTFsLTQtNCA0LTRxMC40LTAuNSAwLjQtMSAwLTAuNi0wLjQtMS4xbC0yLTJxLTAuNC0wLjQtMS0wLjQtMC42IDAtMSAwLjRsLTQuMSA0LjEtNC00LjFxLTAuNC0wLjQtMS0wLjQtMC42IDAtMSAwLjRsLTIgMnEtMC41IDAuNS0wLjUgMS4xIDAgMC41IDAuNSAxbDQgNC00IDRxLTAuNSAwLjUtMC41IDEgMCAwLjcgMC41IDEuMWwyIDJxMC40IDAuNCAxIDAuNCAwLjYgMCAxLTAuNGw0LTQuMSA0LjEgNC4xcTAuNCAwLjQgMSAwLjQgMC42IDAgMS0wLjRsMi0ycTAuNC0wLjQgMC40LTF6IG04LjctNXEwIDQuNy0yLjMgOC42dC02LjMgNi4yLTguNiAyLjMtOC42LTIuMy02LjItNi4yLTIuMy04LjYgMi4zLTguNiA2LjItNi4yIDguNi0yLjMgOC42IDIuMyA2LjMgNi4yIDIuMyA4LjZ6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpLHQuQWRkQ2lyY2xlPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDQwIDQwXCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwibTMwLjEgMjEuNHYtMi44cTAtMC42LTAuNC0xdC0xLTAuNWgtNS43di01LjdxMC0wLjYtMC40LTF0LTEtMC40aC0yLjlxLTAuNiAwLTEgMC40dC0wLjQgMXY1LjdoLTUuN3EtMC42IDAtMSAwLjV0LTAuNSAxdjIuOHEwIDAuNiAwLjUgMXQxIDAuNWg1Ljd2NS43cTAgMC41IDAuNCAxdDEgMC40aDIuOXEwLjYgMCAxLTAuNHQwLjQtMXYtNS43aDUuN3EwLjYgMCAxLTAuNXQwLjQtMXogbTcuMi0xLjRxMCA0LjctMi4zIDguNnQtNi4zIDYuMi04LjYgMi4zLTguNi0yLjMtNi4yLTYuMi0yLjMtOC42IDIuMy04LjYgNi4yLTYuMiA4LjYtMi4zIDguNiAyLjMgNi4zIDYuMiAyLjMgOC42elwifSkpKSl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSx0LkFkZD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxsKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLnN0eWxlLG49cihlLFtcInN0eWxlXCJdKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbixmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHUoe30scyh0KSx7dmlld0JveDpcIjAgMCA0MCA0MFwiLGZpbGw6XCJjdXJyZW50Q29sb3JcIixwcmVzZXJ2ZUFzcGVjdFJhdGlvOlwieE1pZFlNaWQgbWVldFwifSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIm0zMS42IDIxLjZoLTEwdjEwaC0zLjJ2LTEwaC0xMHYtMy4yaDEwdi0xMGgzLjJ2MTBoMTB2My4yelwifSkpKSl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSx0LkVkaXQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksbCh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5zdHlsZSxuPXIoZSxbXCJzdHlsZVwiXSk7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG4sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix1KHt9LHModCkse3ZpZXdCb3g6XCIwIDAgNDAgNDBcIixmaWxsOlwiY3VycmVudENvbG9yXCIscHJlc2VydmVBc3BlY3RSYXRpbzpcInhNaWRZTWlkIG1lZXRcIn0pLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJtMTkuOCAyNi40bDIuNi0yLjYtMy40LTMuNC0yLjYgMi42djEuM2gyLjJ2Mi4xaDEuMnogbTkuOC0xNnEtMC4zLTAuNC0wLjcgMGwtNy44IDcuOHEtMC40IDAuNCAwIDAuN3QwLjcgMGw3LjgtNy44cTAuNC0wLjQgMC0wLjd6IG0xLjggMTMuMnY0LjNxMCAyLjYtMS45IDQuNXQtNC41IDEuOWgtMTguNnEtMi42IDAtNC41LTEuOXQtMS45LTQuNXYtMTguNnEwLTIuNyAxLjktNC42dDQuNS0xLjhoMTguNnExLjQgMCAyLjYgMC41IDAuMyAwLjIgMC40IDAuNSAwLjEgMC40LTAuMiAwLjdsLTEuMSAxLjFxLTAuMyAwLjMtMC43IDAuMS0wLjUtMC4xLTEtMC4xaC0xOC42cS0xLjQgMC0yLjUgMS4xdC0xIDIuNXYxOC42cTAgMS40IDEgMi41dDIuNSAxaDE4LjZxMS41IDAgMi41LTF0MS4xLTIuNXYtMi45cTAtMC4yIDAuMi0wLjRsMS40LTEuNXEwLjMtMC4zIDAuOC0wLjF0MC40IDAuNnogbS0yLjEtMTYuNWw2LjQgNi41LTE1IDE1aC02LjR2LTYuNXogbTkuOSAzbC0yLjEgMi02LjQtNi40IDIuMS0ycTAuNi0wLjcgMS41LTAuN3QxLjUgMC43bDMuNCAzLjRxMC42IDAuNiAwLjYgMS41dC0wLjYgMS41elwifSkpKSl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSx0LkNoZWNrQ2lyY2xlPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuc3R5bGUsbj1yKGUsW1wic3R5bGVcIl0pO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixuLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsdSh7fSxzKHQpLHt2aWV3Qm94OlwiMCAwIDQwIDQwXCIsZmlsbDpcImN1cnJlbnRDb2xvclwiLHByZXNlcnZlQXNwZWN0UmF0aW86XCJ4TWlkWU1pZCBtZWV0XCJ9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtkOlwibTMxLjcgMTYuNHEwLTAuNi0wLjQtMWwtMi4xLTIuMXEtMC40LTAuNC0xLTAuNHQtMSAwLjRsLTkuMSA5LjEtNS01cS0wLjUtMC40LTEtMC40dC0xIDAuNGwtMi4xIDJxLTAuNCAwLjQtMC40IDEgMCAwLjYgMC40IDFsOC4xIDguMXEwLjQgMC40IDEgMC40IDAuNiAwIDEtMC40bDEyLjItMTIuMXEwLjQtMC40IDAuNC0xeiBtNS42IDMuNnEwIDQuNy0yLjMgOC42dC02LjMgNi4yLTguNiAyLjMtOC42LTIuMy02LjItNi4yLTIuMy04LjYgMi4zLTguNiA2LjItNi4yIDguNi0yLjMgOC42IDIuMyA2LjMgNi4yIDIuMyA4LjZ6XCJ9KSkpKX19XSksdH0oZi5kZWZhdWx0LlB1cmVDb21wb25lbnQpfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFyKGUpKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhbiBvYmplY3QhXCIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGU/bnVsbCE9PWU6XCJmdW5jdGlvblwiPT10eXBlb2YgZX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXt9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big0OCksYT1uKDMzKTtlLmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiByKGUsYSl9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0hMH0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNSksYT1uKDIpLG89big3MSksaT1uKDgpLHM9big3KSx1PWZ1bmN0aW9uKGUsdCxuKXt2YXIgbCxjLGYsZD1lJnUuRixwPWUmdS5HLGI9ZSZ1LlMsaD1lJnUuUCx5PWUmdS5CLHY9ZSZ1LlcsbT1wP2E6YVt0XXx8KGFbdF09e30pLGc9bS5wcm90b3R5cGUsXz1wP3I6Yj9yW3RdOihyW3RdfHx7fSkucHJvdG90eXBlO3AmJihuPXQpO2ZvcihsIGluIG4pKGM9IWQmJl8mJnZvaWQgMCE9PV9bbF0pJiZzKG0sbCl8fChmPWM/X1tsXTpuW2xdLG1bbF09cCYmXCJmdW5jdGlvblwiIT10eXBlb2YgX1tsXT9uW2xdOnkmJmM/byhmLHIpOnYmJl9bbF09PWY/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxuLHIpe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxuKX1yZXR1cm4gbmV3IGUodCxuLHIpfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHQucHJvdG90eXBlPWUucHJvdG90eXBlLHR9KGYpOmgmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGY/byhGdW5jdGlvbi5jYWxsLGYpOmYsaCYmKChtLnZpcnR1YWx8fChtLnZpcnR1YWw9e30pKVtsXT1mLGUmdS5SJiZnJiYhZ1tsXSYmaShnLGwsZikpKX07dS5GPTEsdS5HPTIsdS5TPTQsdS5QPTgsdS5CPTE2LHUuVz0zMix1LlU9NjQsdS5SPTEyOCxlLmV4cG9ydHM9dX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSxmdW5jdGlvbihlLHQpe3ZhciBuPTAscj1NYXRoLnJhbmRvbSgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm5cIlN5bWJvbChcIi5jb25jYXQodm9pZCAwPT09ZT9cIlwiOmUsXCIpX1wiLCgrK24rcikudG9TdHJpbmcoMzYpKX19LGZ1bmN0aW9uKGUsdCl7dC5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKXQuaW5kZXhPZihyKT49MHx8T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJihuW3JdPWVbcl0pO3JldHVybiBufWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGkoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBzKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHU9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGM9bigwKSxmPXIoYyksZD1uKDQxKSxwPW4oNCksYj1uKDQyKSxoPW4oMTcxKSx5PXIoaCksdj1uKDU2KSxtPXIodiksZz1uKDU3KSxfPXIoZyksaj1uKDU4KSxPPXIoaiksRT1uKDEzKSx3PXIoRSkseD1uKDU5KSxDPW4oMSksaz1yKEMpLFA9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXtvKHRoaXMsdCk7dmFyIG49aSh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO1MuY2FsbChuKTt2YXIgcj10LmdldFN0YXRlKGUpO3JldHVybiBuLnN0YXRlPXUoe30scix7cHJldlByb3BzOnt9fSksbn1yZXR1cm4gcyh0LGUpLGwodCxbe2tleTpcImdldEJyYWNlU3RhcnRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMscj10aGlzLnByb3BzLGE9ci5zcmMsbz1yLnRoZW1lLGk9ci5pY29uU3R5bGU7aWYoXCJhcnJheV9ncm91cFwiPT09ci5wYXJlbnRfdHlwZSlyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxrLmRlZmF1bHQpKG8sXCJicmFjZVwiKSxcImFycmF5XCI9PT1lP1wiW1wiOlwie1wiKSx0P3RoaXMuZ2V0T2JqZWN0TWV0YURhdGEoYSk6bnVsbCk7dmFyIHM9dD94LkV4cGFuZGVkSWNvbjp4LkNvbGxhcHNlZEljb247cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsdSh7b25DbGljazpmdW5jdGlvbihlKXtuLnRvZ2dsZUNvbGxhcHNlZCgpfX0sKDAsay5kZWZhdWx0KShvLFwiYnJhY2Utcm93XCIpKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHUoe2NsYXNzTmFtZTpcImljb24tY29udGFpbmVyXCJ9LCgwLGsuZGVmYXVsdCkobyxcImljb24tY29udGFpbmVyXCIpKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChzLHt0aGVtZTpvLGljb25TdHlsZTppfSkpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KE8uZGVmYXVsdCx0aGlzLnByb3BzKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxrLmRlZmF1bHQpKG8sXCJicmFjZVwiKSxcImFycmF5XCI9PT1lP1wiW1wiOlwie1wiKSksdD90aGlzLmdldE9iamVjdE1ldGFEYXRhKGEpOm51bGwpfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuZGVwdGgsbj1lLnNyYyxyPShlLm5hbWVzcGFjZSxlLm5hbWUsZS50eXBlLGUucGFyZW50X3R5cGUpLG89ZS50aGVtZSxpPWUuanN2Um9vdCxzPWUuaWNvblN0eWxlLGw9YShlLFtcImRlcHRoXCIsXCJzcmNcIixcIm5hbWVzcGFjZVwiLFwibmFtZVwiLFwidHlwZVwiLFwicGFyZW50X3R5cGVcIixcInRoZW1lXCIsXCJqc3ZSb290XCIsXCJpY29uU3R5bGVcIl0pLGM9dGhpcy5zdGF0ZSxkPWMub2JqZWN0X3R5cGUscD1jLmV4cGFuZGVkLGI9e307cmV0dXJuIGl8fFwiYXJyYXlfZ3JvdXBcIj09PXI/XCJhcnJheV9ncm91cFwiPT09ciYmKGIuYm9yZGVyTGVmdD0wLGIuZGlzcGxheT1cImlubGluZVwiKTpiLnBhZGRpbmdMZWZ0PTUqdGhpcy5wcm9wcy5pbmRlbnRXaWR0aCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHUoe2NsYXNzTmFtZTpcIm9iamVjdC1rZXktdmFsXCJ9LCgwLGsuZGVmYXVsdCkobyxpP1wianN2LXJvb3RcIjpcIm9iamVjdEtleVZhbFwiLGIpKSx0aGlzLmdldEJyYWNlU3RhcnQoZCxwKSxwP3RoaXMuZ2V0T2JqZWN0Q29udGVudCh0LG4sdSh7dGhlbWU6byxpY29uU3R5bGU6c30sbCkpOnRoaXMuZ2V0RWxsaXBzaXMoKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwiYnJhY2Utcm93XCJ9LGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLGsuZGVmYXVsdCkobyxcImJyYWNlXCIpLnN0eWxlLHtwYWRkaW5nTGVmdDpwP1wiM3B4XCI6XCIwcHhcIn0pfSxcImFycmF5XCI9PT1kP1wiXVwiOlwifVwiKSxwP251bGw6dGhpcy5nZXRPYmplY3RNZXRhRGF0YShuKSkpfX1dLFt7a2V5OlwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzXCIsdmFsdWU6ZnVuY3Rpb24oZSxuKXt2YXIgcj1uLnByZXZQcm9wcztpZihlLnNyYyE9PXIuc3JjfHxlLmNvbGxhcHNlZCE9PXIuY29sbGFwc2VkfHxlLm5hbWUhPT1yLm5hbWV8fGUubmFtZXNwYWNlIT09ci5uYW1lc3BhY2V8fGUucmp2SWQhPT1yLnJqdklkKXt2YXIgYT10LmdldFN0YXRlKGUpO3JldHVybiB1KHt9LGEse3ByZXZQcm9wczplfSl9cmV0dXJuIG51bGx9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTtQLmdldFN0YXRlPWZ1bmN0aW9uKGUpe3ZhciB0PU9iamVjdC5rZXlzKGUuc3JjKS5sZW5ndGgsbj0oITE9PT1lLmNvbGxhcHNlZHx8ITAhPT1lLmNvbGxhcHNlZCYmZS5jb2xsYXBzZWQ+ZS5kZXB0aCkmJighZS5zaG91bGRDb2xsYXBzZXx8ITE9PT1lLnNob3VsZENvbGxhcHNlKHtuYW1lOmUubmFtZSxzcmM6ZS5zcmMsdHlwZTooMCxwLnRvVHlwZSkoZS5zcmMpLG5hbWVzcGFjZTplLm5hbWVzcGFjZX0pKSYmMCE9PXQ7cmV0dXJue2V4cGFuZGVkOncuZGVmYXVsdC5nZXQoZS5yanZJZCxlLm5hbWVzcGFjZSxcImV4cGFuZGVkXCIsbiksb2JqZWN0X3R5cGU6XCJhcnJheVwiPT09ZS50eXBlP1wiYXJyYXlcIjpcIm9iamVjdFwiLHBhcmVudF90eXBlOlwiYXJyYXlcIj09PWUudHlwZT9cImFycmF5XCI6XCJvYmplY3RcIixzaXplOnR9fTt2YXIgUz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy50b2dnbGVDb2xsYXBzZWQ9ZnVuY3Rpb24oKXtlLnNldFN0YXRlKHtleHBhbmRlZDohZS5zdGF0ZS5leHBhbmRlZH0sZnVuY3Rpb24oKXt3LmRlZmF1bHQuc2V0KGUucHJvcHMucmp2SWQsZS5wcm9wcy5uYW1lc3BhY2UsXCJleHBhbmRlZFwiLGUuc3RhdGUuZXhwYW5kZWQpfSl9LHRoaXMuZ2V0T2JqZWN0Q29udGVudD1mdW5jdGlvbih0LG4scil7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInB1c2hlZC1jb250ZW50IG9iamVjdC1jb250YWluZXJcIn0sZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix1KHtjbGFzc05hbWU6XCJvYmplY3QtY29udGVudFwifSwoMCxrLmRlZmF1bHQpKGUucHJvcHMudGhlbWUsXCJwdXNoZWQtY29udGVudFwiKSksZS5yZW5kZXJPYmplY3RDb250ZW50cyhuLHIpKSl9LHRoaXMuZ2V0RWxsaXBzaXM9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PWUuc3RhdGUuc2l6ZT9udWxsOmYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7fSwoMCxrLmRlZmF1bHQpKGUucHJvcHMudGhlbWUsXCJlbGxpcHNpc1wiKSx7Y2xhc3NOYW1lOlwibm9kZS1lbGxpcHNpc1wiLG9uQ2xpY2s6ZS50b2dnbGVDb2xsYXBzZWR9KSxcIi4uLlwiKX0sdGhpcy5nZXRPYmplY3RNZXRhRGF0YT1mdW5jdGlvbih0KXt2YXIgbj1lLnByb3BzLHI9KG4ucmp2SWQsbi50aGVtZSxlLnN0YXRlLnNpemUpO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChtLmRlZmF1bHQsdSh7c2l6ZTpyfSxlLnByb3BzKSl9LHRoaXMucmVuZGVyT2JqZWN0Q29udGVudHM9ZnVuY3Rpb24odCxuKXt2YXIgcj1lLnByb3BzLGE9ci5kZXB0aCxvPXIucGFyZW50X3R5cGUsaT1yLmluZGV4X29mZnNldCxzPXIuZ3JvdXBBcnJheXNBZnRlckxlbmd0aCxsPXIubmFtZXNwYWNlLGM9ZS5zdGF0ZS5vYmplY3RfdHlwZSxkPShuLnRoZW1lLFtdKSxwPXZvaWQgMCxoPU9iamVjdC5rZXlzKHR8fHt9KTtyZXR1cm4gZS5wcm9wcy5zb3J0S2V5cyYmKGg9aC5zb3J0KCkpLGguZm9yRWFjaChmdW5jdGlvbihyKXtpZihwPW5ldyBNKHIsdFtyXSksXCJhcnJheV9ncm91cFwiPT09byYmaSYmKHAubmFtZT1wYXJzZUludChwLm5hbWUpK2kpLHQuaGFzT3duUHJvcGVydHkocikpaWYoXCJvYmplY3RcIj09PXAudHlwZSlkLnB1c2goZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoYi5Kc29uT2JqZWN0LHUoe2tleTpwLm5hbWUsZGVwdGg6YSsxLG5hbWU6cC5uYW1lLHNyYzpwLnZhbHVlLG5hbWVzcGFjZTpsLmNvbmNhdChwLm5hbWUpLHBhcmVudF90eXBlOmN9LG4pKSk7ZWxzZSBpZihcImFycmF5XCI9PT1wLnR5cGUpe3ZhciBoPWIuSnNvbk9iamVjdDtzJiZwLnZhbHVlLmxlbmd0aD5zJiYoaD1fLmRlZmF1bHQpLGQucHVzaChmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChoLHUoe2tleTpwLm5hbWUsZGVwdGg6YSsxLG5hbWU6cC5uYW1lLHNyYzpwLnZhbHVlLG5hbWVzcGFjZTpsLmNvbmNhdChwLm5hbWUpLHR5cGU6XCJhcnJheVwiLHBhcmVudF90eXBlOmN9LG4pKSl9ZWxzZSBkLnB1c2goZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoeS5kZWZhdWx0LHUoe2tleTpwLm5hbWUrXCJfXCIrbCx2YXJpYWJsZTpwLHNpbmdsZUluZGVudDo1LG5hbWVzcGFjZTpsLHR5cGU6ZS5wcm9wcy50eXBlfSxuKSkpfSksZH19LE09ZnVuY3Rpb24gZSh0LG4pe28odGhpcyxlKSx0aGlzLm5hbWU9dCx0aGlzLnZhbHVlPW4sdGhpcy50eXBlPSgwLHAudG9UeXBlKShuKX07KDAsZC5wb2x5ZmlsbCkoUCksdC5kZWZhdWx0PVB9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDcwKSghMCk7big0MykoU3RyaW5nLFwiU3RyaW5nXCIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxuPXRoaXMuX2k7cmV0dXJuIG4+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9cih0LG4pLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSxmdW5jdGlvbihlLHQpe3ZhciBuPU1hdGguY2VpbCxyPU1hdGguZmxvb3I7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/cjpuKShlKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIrZSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXIoZSkpcmV0dXJuIGU7dmFyIG4sYTtpZih0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZihuPWUudG9TdHJpbmcpJiYhcihhPW4uY2FsbChlKSkpcmV0dXJuIGE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Yobj1lLnZhbHVlT2YpJiYhcihhPW4uY2FsbChlKSkpcmV0dXJuIGE7aWYoIXQmJlwiZnVuY3Rpb25cIj09dHlwZW9mKG49ZS50b1N0cmluZykmJiFyKGE9bi5jYWxsKGUpKSlyZXR1cm4gYTt0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIil9fSxmdW5jdGlvbihlLHQpe3ZhciBuPXt9LnRvU3RyaW5nO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5jYWxsKGUpLnNsaWNlKDgsLTEpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzIpKFwia2V5c1wiKSxhPW4oMjMpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gcltlXXx8KHJbZV09YShlKSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyKSxhPW4oNSksbz1hW1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdfHwoYVtcIl9fY29yZS1qc19zaGFyZWRfX1wiXT17fSk7KGUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBvW2VdfHwob1tlXT12b2lkIDAhPT10P3Q6e30pfSkoXCJ2ZXJzaW9uc1wiLFtdKS5wdXNoKHt2ZXJzaW9uOnIudmVyc2lvbixtb2RlOm4oMjApP1wicHVyZVwiOlwiZ2xvYmFsXCIsY29weXJpZ2h0OlwiwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KVwifSl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPVwiY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mXCIuc3BsaXQoXCIsXCIpfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big5KS5mLGE9big3KSxvPW4oMykoXCJ0b1N0cmluZ1RhZ1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG4pe2UmJiFhKGU9bj9lOmUucHJvdG90eXBlLG8pJiZyKGUsbyx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI4KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChyKGUpKX19LGZ1bmN0aW9uKGUsdCxuKXtuKDgwKTtmb3IodmFyIHI9big1KSxhPW4oOCksbz1uKDE4KSxpPW4oMykoXCJ0b1N0cmluZ1RhZ1wiKSxzPVwiQ1NTUnVsZUxpc3QsQ1NTU3R5bGVEZWNsYXJhdGlvbixDU1NWYWx1ZUxpc3QsQ2xpZW50UmVjdExpc3QsRE9NUmVjdExpc3QsRE9NU3RyaW5nTGlzdCxET01Ub2tlbkxpc3QsRGF0YVRyYW5zZmVySXRlbUxpc3QsRmlsZUxpc3QsSFRNTEFsbENvbGxlY3Rpb24sSFRNTENvbGxlY3Rpb24sSFRNTEZvcm1FbGVtZW50LEhUTUxTZWxlY3RFbGVtZW50LE1lZGlhTGlzdCxNaW1lVHlwZUFycmF5LE5hbWVkTm9kZU1hcCxOb2RlTGlzdCxQYWludFJlcXVlc3RMaXN0LFBsdWdpbixQbHVnaW5BcnJheSxTVkdMZW5ndGhMaXN0LFNWR051bWJlckxpc3QsU1ZHUGF0aFNlZ0xpc3QsU1ZHUG9pbnRMaXN0LFNWR1N0cmluZ0xpc3QsU1ZHVHJhbnNmb3JtTGlzdCxTb3VyY2VCdWZmZXJMaXN0LFN0eWxlU2hlZXRMaXN0LFRleHRUcmFja0N1ZUxpc3QsVGV4dFRyYWNrTGlzdCxUb3VjaExpc3RcIi5zcGxpdChcIixcIiksdT0wO3U8cy5sZW5ndGg7dSsrKXt2YXIgbD1zW3VdLGM9cltsXSxmPWMmJmMucHJvdG90eXBlO2YmJiFmW2ldJiZhKGYsaSxsKSxvW2xdPW8uQXJyYXl9fSxmdW5jdGlvbihlLHQsbil7dC5mPW4oMyl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDUpLGE9bigyKSxvPW4oMjApLGk9bigzNykscz1uKDkpLmY7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PWEuU3ltYm9sfHwoYS5TeW1ib2w9bz97fTpyLlN5bWJvbHx8e30pO1wiX1wiPT1lLmNoYXJBdCgwKXx8ZSBpbiB0fHxzKHQsZSx7dmFsdWU6aS5mKGUpfSl9fSxmdW5jdGlvbihlLHQpe3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSx0LG4pe3JldHVybiBNYXRoLm1pbihNYXRoLm1heChlLHQpLG4pfWUuZXhwb3J0cz1ufSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcigpe3ZhciBlPXRoaXMuY29uc3RydWN0b3IuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHRoaXMucHJvcHMsdGhpcy5zdGF0ZSk7bnVsbCE9PWUmJnZvaWQgMCE9PWUmJnRoaXMuc2V0U3RhdGUoZSl9ZnVuY3Rpb24gYShlKXtmdW5jdGlvbiB0KHQpe3ZhciBuPXRoaXMuY29uc3RydWN0b3IuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKGUsdCk7cmV0dXJuIG51bGwhPT1uJiZ2b2lkIDAhPT1uP246bnVsbH10aGlzLnNldFN0YXRlKHQuYmluZCh0aGlzKSl9ZnVuY3Rpb24gbyhlLHQpe3RyeXt2YXIgbj10aGlzLnByb3BzLHI9dGhpcy5zdGF0ZTt0aGlzLnByb3BzPWUsdGhpcy5zdGF0ZT10LHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RGbGFnPSEwLHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3Q9dGhpcy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShuLHIpfWZpbmFsbHl7dGhpcy5wcm9wcz1uLHRoaXMuc3RhdGU9cn19ZnVuY3Rpb24gaShlKXt2YXIgdD1lLnByb3RvdHlwZTtpZighdHx8IXQuaXNSZWFjdENvbXBvbmVudCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gb25seSBwb2x5ZmlsbCBjbGFzcyBjb21wb25lbnRzXCIpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXJldHVybiBlO3ZhciBuPW51bGwsaT1udWxsLHM9bnVsbDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvbXBvbmVudFdpbGxNb3VudD9uPVwiY29tcG9uZW50V2lsbE1vdW50XCI6XCJmdW5jdGlvblwiPT10eXBlb2YgdC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiYobj1cIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnRcIiksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzP2k9XCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCI6XCJmdW5jdGlvblwiPT10eXBlb2YgdC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmKGk9XCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc1wiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvbXBvbmVudFdpbGxVcGRhdGU/cz1cImNvbXBvbmVudFdpbGxVcGRhdGVcIjpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiYocz1cIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlXCIpLG51bGwhPT1ufHxudWxsIT09aXx8bnVsbCE9PXMpe3ZhciB1PWUuZGlzcGxheU5hbWV8fGUubmFtZSxsPVwiZnVuY3Rpb25cIj09dHlwZW9mIGUuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzP1wiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKClcIjpcImdldFNuYXBzaG90QmVmb3JlVXBkYXRlKClcIjt0aHJvdyBFcnJvcihcIlVuc2FmZSBsZWdhY3kgbGlmZWN5Y2xlcyB3aWxsIG5vdCBiZSBjYWxsZWQgZm9yIGNvbXBvbmVudHMgdXNpbmcgbmV3IGNvbXBvbmVudCBBUElzLlxcblxcblwiK3UrXCIgdXNlcyBcIitsK1wiIGJ1dCBhbHNvIGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgbGVnYWN5IGxpZmVjeWNsZXM6XCIrKG51bGwhPT1uP1wiXFxuICBcIituOlwiXCIpKyhudWxsIT09aT9cIlxcbiAgXCIraTpcIlwiKSsobnVsbCE9PXM/XCJcXG4gIFwiK3M6XCJcIikrXCJcXG5cXG5UaGUgYWJvdmUgbGlmZWN5Y2xlcyBzaG91bGQgYmUgcmVtb3ZlZC4gTGVhcm4gbW9yZSBhYm91dCB0aGlzIHdhcm5pbmcgaGVyZTpcXG5odHRwczovL2ZiLm1lL3JlYWN0LWFzeW5jLWNvbXBvbmVudC1saWZlY3ljbGUtaG9va3NcIil9aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJih0LmNvbXBvbmVudFdpbGxNb3VudD1yLHQuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcz1hKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LmNvbXBvbmVudERpZFVwZGF0ZSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcG9seWZpbGwgZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKSBmb3IgY29tcG9uZW50cyB0aGF0IGRvIG5vdCBkZWZpbmUgY29tcG9uZW50RGlkVXBkYXRlKCkgb24gdGhlIHByb3RvdHlwZVwiKTt0LmNvbXBvbmVudFdpbGxVcGRhdGU9bzt2YXIgYz10LmNvbXBvbmVudERpZFVwZGF0ZTt0LmNvbXBvbmVudERpZFVwZGF0ZT1mdW5jdGlvbihlLHQsbil7dmFyIHI9dGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEZsYWc/dGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdDpuO2MuY2FsbCh0aGlzLGUsdCxyKX19cmV0dXJuIGV9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbi5kKHQsXCJwb2x5ZmlsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGl9KSxyLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmc9ITAsYS5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nPSEwLG8uX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZz0hMH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBhPW4oNjMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbkJvb2xlYW5cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihhKS5kZWZhdWx0fX0pO3ZhciBvPW4oMTU4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25EYXRlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIobykuZGVmYXVsdH19KTt2YXIgaT1uKDE1OSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJKc29uRmxvYXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihpKS5kZWZhdWx0fX0pO3ZhciBzPW4oMTYwKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25GdW5jdGlvblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKHMpLmRlZmF1bHR9fSk7dmFyIHU9bigxNjUpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbk5hblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByKHUpLmRlZmF1bHR9fSk7dmFyIGw9bigxNjYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSnNvbk51bGxcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihsKS5kZWZhdWx0fX0pO3ZhciBjPW4oMTY3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25JbnRlZ2VyXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIoYykuZGVmYXVsdH19KTt2YXIgZj1uKDI1KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25PYmplY3RcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihmKS5kZWZhdWx0fX0pO3ZhciBkPW4oMTY4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25SZWdleHBcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihkKS5kZWZhdWx0fX0pO3ZhciBwPW4oMTY5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25TdHJpbmdcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihwKS5kZWZhdWx0fX0pO3ZhciBiPW4oMTcwKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkpzb25VbmRlZmluZWRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcihiKS5kZWZhdWx0fX0pfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyMCksYT1uKDIxKSxvPW4oNDYpLGk9big4KSxzPW4oMTgpLHU9big3MyksbD1uKDM0KSxjPW4oNzkpLGY9bigzKShcIml0ZXJhdG9yXCIpLGQ9IShbXS5rZXlzJiZcIm5leHRcImluW10ua2V5cygpKSxwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbixiLGgseSx2KXt1KG4sdCxiKTt2YXIgbSxnLF8saj1mdW5jdGlvbihlKXtpZighZCYmZSBpbiB4KXJldHVybiB4W2VdO3N3aXRjaChlKXtjYXNlXCJrZXlzXCI6Y2FzZVwidmFsdWVzXCI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBuKHRoaXMsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgbih0aGlzLGUpfX0sTz10K1wiIEl0ZXJhdG9yXCIsRT1cInZhbHVlc1wiPT1oLHc9ITEseD1lLnByb3RvdHlwZSxDPXhbZl18fHhbXCJAQGl0ZXJhdG9yXCJdfHxoJiZ4W2hdLGs9Q3x8aihoKSxQPWg/RT9qKFwiZW50cmllc1wiKTprOnZvaWQgMCxTPVwiQXJyYXlcIj09dD94LmVudHJpZXN8fEM6QztpZihTJiYoXz1jKFMuY2FsbChuZXcgZSkpKSE9PU9iamVjdC5wcm90b3R5cGUmJl8ubmV4dCYmKGwoXyxPLCEwKSxyfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBfW2ZdfHxpKF8sZixwKSksRSYmQyYmXCJ2YWx1ZXNcIiE9PUMubmFtZSYmKHc9ITAsaz1mdW5jdGlvbigpe3JldHVybiBDLmNhbGwodGhpcyl9KSxyJiYhdnx8IWQmJiF3JiZ4W2ZdfHxpKHgsZixrKSxzW3RdPWssc1tPXT1wLGgpaWYobT17dmFsdWVzOkU/azpqKFwidmFsdWVzXCIpLGtleXM6eT9rOmooXCJrZXlzXCIpLGVudHJpZXM6UH0sdilmb3IoZyBpbiBtKWcgaW4geHx8byh4LGcsbVtnXSk7ZWxzZSBhKGEuUCthLkYqKGR8fHcpLHQsbSk7cmV0dXJuIG19fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPSFuKDEwKSYmIW4oMTEpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShuKDQ1KShcImRpdlwiKSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNyksYT1uKDUpLmRvY3VtZW50LG89cihhKSYmcihhLmNyZWF0ZUVsZW1lbnQpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbz9hLmNyZWF0ZUVsZW1lbnQoZSk6e319fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oOCl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE2KSxhPW4oNzQpLG89bigzMyksaT1uKDMxKShcIklFX1BST1RPXCIpLHM9ZnVuY3Rpb24oKXt9LHU9ZnVuY3Rpb24oKXt2YXIgZSx0PW4oNDUpKFwiaWZyYW1lXCIpLHI9by5sZW5ndGg7Zm9yKHQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIixuKDc4KS5hcHBlbmRDaGlsZCh0KSx0LnNyYz1cImphdmFzY3JpcHQ6XCIsZT10LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQsZS5vcGVuKCksZS53cml0ZShcIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8XFwvc2NyaXB0PlwiKSxlLmNsb3NlKCksdT1lLkY7ci0tOylkZWxldGUgdS5wcm90b3R5cGVbb1tyXV07cmV0dXJuIHUoKX07ZS5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIG47cmV0dXJuIG51bGwhPT1lPyhzLnByb3RvdHlwZT1yKGUpLG49bmV3IHMscy5wcm90b3R5cGU9bnVsbCxuW2ldPWUpOm49dSgpLHZvaWQgMD09PXQ/bjphKG4sdCl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big3KSxhPW4oMTIpLG89big3NSkoITEpLGk9bigzMSkoXCJJRV9QUk9UT1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgbixzPWEoZSksdT0wLGw9W107Zm9yKG4gaW4gcyluIT1pJiZyKHMsbikmJmwucHVzaChuKTtmb3IoO3QubGVuZ3RoPnU7KXIocyxuPXRbdSsrXSkmJih+byhsLG4pfHxsLnB1c2gobikpO3JldHVybiBsfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApO2UuZXhwb3J0cz1PYmplY3QoXCJ6XCIpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApP09iamVjdDpmdW5jdGlvbihlKXtyZXR1cm5cIlN0cmluZ1wiPT1yKGUpP2Uuc3BsaXQoXCJcIik6T2JqZWN0KGUpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNDgpLGE9bigzMykuY29uY2F0KFwibGVuZ3RoXCIsXCJwcm90b3R5cGVcIik7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbihlKXtyZXR1cm4gcihlLGEpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzApLGE9bigzKShcInRvU3RyaW5nVGFnXCIpLG89XCJBcmd1bWVudHNcIj09cihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpLGk9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2goZSl7fX07ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LG4scztyZXR1cm4gdm9pZCAwPT09ZT9cIlVuZGVmaW5lZFwiOm51bGw9PT1lP1wiTnVsbFwiOlwic3RyaW5nXCI9PXR5cGVvZihuPWkodD1PYmplY3QoZSksYSkpP246bz9yKHQpOlwiT2JqZWN0XCI9PShzPXIodCkpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNhbGxlZT9cIkFyZ3VtZW50c1wiOnN9fSxmdW5jdGlvbihlLHQpe3ZhciBuO249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKTt0cnl7bj1ufHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCl8fCgwLGV2YWwpKFwidGhpc1wiKX1jYXRjaChlKXtcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiYobj13aW5kb3cpfWUuZXhwb3J0cz1ufSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUubWF0Y2gocil9dmFyIHI9Ly0/XFxkKyhcXC5cXGQrKT8lPy9nO2UuZXhwb3J0cz1ufSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHI9big0KTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9KDAsci50b1R5cGUpKGUpLG49dm9pZCAwO3N3aXRjaCh0KXtjYXNlXCJ1bmRlZmluZWRcIjpuPVwidW5kZWZpbmVkXCI7YnJlYWs7Y2FzZVwibmFuXCI6bj1cIk5hTlwiO2JyZWFrO2Nhc2VcInN0cmluZ1wiOm49ZTticmVhaztjYXNlXCJkYXRlXCI6Y2FzZVwiZnVuY3Rpb25cIjpjYXNlXCJyZWdleHBcIjpuPWUudG9TdHJpbmcoKTticmVhaztkZWZhdWx0OnRyeXtuPUpTT04uc3RyaW5naWZ5KGUsbnVsbCxcIiAgXCIpfWNhdGNoKGUpe249XCJcIn19cmV0dXJuIG59fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNCksZD1uKDU0KSxwPShyKGQpLG4oMTUpKSxiPW4oMSksaD1yKGIpLHk9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXthKHRoaXMsdCk7dmFyIG49byh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO3JldHVybiBuLmNvcGllZFRpbWVyPW51bGwsbi5oYW5kbGVDb3B5PWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpLHQ9bi5wcm9wcyxyPXQuY2xpY2tDYWxsYmFjayxhPXQuc3JjLG89dC5uYW1lc3BhY2U7ZS5pbm5lckhUTUw9SlNPTi5zdHJpbmdpZnkobi5jbGlwYm9hcmRWYWx1ZShhKSxudWxsLFwiICBcIiksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlKSxlLnNlbGVjdCgpLGRvY3VtZW50LmV4ZWNDb21tYW5kKFwiY29weVwiKSxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGUpLG4uY29waWVkVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe24uc2V0U3RhdGUoe2NvcGllZDohMX0pfSw1NTAwKSxuLnNldFN0YXRlKHtjb3BpZWQ6ITB9LGZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT10eXBlb2YgciYmcih7c3JjOmEsbmFtZXNwYWNlOm8sbmFtZTpvW28ubGVuZ3RoLTFdfSl9KX0sbi5nZXRDbGlwcHlJY29uPWZ1bmN0aW9uKCl7dmFyIGU9bi5wcm9wcy50aGVtZTtyZXR1cm4gbi5zdGF0ZS5jb3BpZWQ/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChwLkNsaXBweSxzKHtjbGFzc05hbWU6XCJjb3B5LWljb25cIn0sKDAsaC5kZWZhdWx0KShlLFwiY29weS1pY29uXCIpKSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAsaC5kZWZhdWx0KShlLFwiY29weS1pY29uLWNvcGllZFwiKSxcIuKclFwiKSk6Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQocC5DbGlwcHkscyh7Y2xhc3NOYW1lOlwiY29weS1pY29uXCJ9LCgwLGguZGVmYXVsdCkoZSxcImNvcHktaWNvblwiKSkpfSxuLmNsaXBib2FyZFZhbHVlPWZ1bmN0aW9uKGUpe3N3aXRjaCgoMCxmLnRvVHlwZSkoZSkpe2Nhc2VcImZ1bmN0aW9uXCI6Y2FzZVwicmVnZXhwXCI6cmV0dXJuIGUudG9TdHJpbmcoKTtkZWZhdWx0OnJldHVybiBlfX0sbi5zdGF0ZT17Y29waWVkOiExfSxufXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwiY29tcG9uZW50V2lsbFVubW91bnRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY29waWVkVGltZXImJihjbGVhclRpbWVvdXQodGhpcy5jb3BpZWRUaW1lciksdGhpcy5jb3BpZWRUaW1lcj1udWxsKX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD0oZS5zcmMsZS50aGVtZSksbj1lLmhpZGRlbixyPSgwLGguZGVmYXVsdCkodCxcImNvcHktdG8tY2xpcGJvYXJkXCIpLnN0eWxlLGE9XCJpbmxpbmVcIjtyZXR1cm4gbiYmKGE9XCJub25lXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJjb3B5LXRvLWNsaXBib2FyZC1jb250YWluZXJcIn0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnMoe30scix7ZGlzcGxheTphfSksb25DbGljazp0aGlzLmhhbmRsZUNvcHl9LHRoaXMuZ2V0Q2xpcHB5SWNvbigpKSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9eX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAsbj1BcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspblt0XT1lW3RdO3JldHVybiBufXJldHVybiBBcnJheS5mcm9tKGUpfWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGkoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBzKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHU9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sbD1uKDApLGM9cihsKSxmPW4oMTQpLGQ9cihmKSxwPW4oNTUpLGI9cihwKSxoPW4oNCkseT1uKDE1KSx2PW4oMSksbT1yKHYpLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4scixzO28odGhpcyx0KTtmb3IodmFyIGw9YXJndW1lbnRzLmxlbmd0aCxmPUFycmF5KGwpLHA9MDtwPGw7cCsrKWZbcF09YXJndW1lbnRzW3BdO3JldHVybiBuPXI9aSh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KGYpKSksci5nZXRPYmplY3RTaXplPWZ1bmN0aW9uKCl7dmFyIGU9ci5wcm9wcyx0PWUuc2l6ZSxuPWUudGhlbWU7aWYoZS5kaXNwbGF5T2JqZWN0U2l6ZSlyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsdSh7Y2xhc3NOYW1lOlwib2JqZWN0LXNpemVcIn0sKDAsbS5kZWZhdWx0KShuLFwib2JqZWN0LXNpemVcIikpLHQsXCIgaXRlbVwiLDE9PT10P1wiXCI6XCJzXCIpfSxyLmdldEFkZEF0dHJpYnV0ZT1mdW5jdGlvbigpe3ZhciBlPXIucHJvcHMsdD1lLnRoZW1lLG49ZS5uYW1lc3BhY2Usbz1lLm5hbWUsaT1lLnNyYyxzPWUucmp2SWQsbD1lLmRlcHRoO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwiY2xpY2stdG8tYWRkXCIsc3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHkuQWRkQ2lyY2xlLHUoe2NsYXNzTmFtZTpcImNsaWNrLXRvLWFkZC1pY29uXCJ9LCgwLG0uZGVmYXVsdCkodCxcImFkZFZhckljb25cIikse29uQ2xpY2s6ZnVuY3Rpb24oKXt2YXIgZT17bmFtZTpsPjA/bzpudWxsLG5hbWVzcGFjZTpuLnNwbGljZSgwLG4ubGVuZ3RoLTEpLGV4aXN0aW5nX3ZhbHVlOmksdmFyaWFibGVfcmVtb3ZlZDohMSxrZXlfbmFtZTpudWxsfTtcIm9iamVjdFwiPT09KDAsaC50b1R5cGUpKGkpP2QuZGVmYXVsdC5kaXNwYXRjaCh7bmFtZTpcIkFERF9WQVJJQUJMRV9LRVlfUkVRVUVTVFwiLHJqdklkOnMsZGF0YTplfSk6ZC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiVkFSSUFCTEVfQURERURcIixyanZJZDpzLGRhdGE6dSh7fSxlLHtuZXdfdmFsdWU6W10uY29uY2F0KGEoaSksW251bGxdKX0pfSl9fSkpKX0sci5nZXRSZW1vdmVPYmplY3Q9ZnVuY3Rpb24oKXt2YXIgZT1yLnByb3BzLHQ9ZS50aGVtZSxuPShlLmhvdmVyLGUubmFtZXNwYWNlKSxhPWUubmFtZSxvPWUuc3JjLGk9ZS5yanZJZDtpZigxIT09bi5sZW5ndGgpcmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJjbGljay10by1yZW1vdmVcIn0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoeS5SZW1vdmVDaXJjbGUsdSh7Y2xhc3NOYW1lOlwiY2xpY2stdG8tcmVtb3ZlLWljb25cIn0sKDAsbS5kZWZhdWx0KSh0LFwicmVtb3ZlVmFySWNvblwiKSx7b25DbGljazpmdW5jdGlvbigpe2QuZGVmYXVsdC5kaXNwYXRjaCh7bmFtZTpcIlZBUklBQkxFX1JFTU9WRURcIixyanZJZDppLGRhdGE6e25hbWU6YSxuYW1lc3BhY2U6bi5zcGxpY2UoMCxuLmxlbmd0aC0xKSxleGlzdGluZ192YWx1ZTpvLHZhcmlhYmxlX3JlbW92ZWQ6ITB9fSl9fSkpKX0sci5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1yLnByb3BzLHQ9ZS50aGVtZSxuPWUub25EZWxldGUsYT1lLm9uQWRkLG89ZS5lbmFibGVDbGlwYm9hcmQsaT1lLnNyYyxzPWUubmFtZXNwYWNlO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHUoe30sKDAsbS5kZWZhdWx0KSh0LFwib2JqZWN0LW1ldGEtZGF0YVwiKSx7Y2xhc3NOYW1lOlwib2JqZWN0LW1ldGEtZGF0YVwiLG9uQ2xpY2s6ZnVuY3Rpb24oZSl7ZS5zdG9wUHJvcGFnYXRpb24oKX19KSxyLmdldE9iamVjdFNpemUoKSxvP2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGIuZGVmYXVsdCx1KHtjbGlja0NhbGxiYWNrOm99LHtzcmM6aSx0aGVtZTp0LG5hbWVzcGFjZTpzfSkpOm51bGwsITEhPT1hP3IuZ2V0QWRkQXR0cmlidXRlKCk6bnVsbCwhMSE9PW4/ci5nZXRSZW1vdmVPYmplY3QoKTpudWxsKX0scz1uLGkocixzKX1yZXR1cm4gcyh0LGUpLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9Z30sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAsbj1BcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspblt0XT1lW3RdO3JldHVybiBufXJldHVybiBBcnJheS5mcm9tKGUpfWZ1bmN0aW9uIG8oZSx0KXt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSl0LmluZGV4T2Yocik+PTB8fE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYobltyXT1lW3JdKTtyZXR1cm4gbn1mdW5jdGlvbiBpKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBzKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gdShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBsPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxmPW4oMCksZD1yKGYpLHA9bigxKSxiPXIocCksaD1uKDU2KSx5PXIoaCksdj1uKDU4KSxtPXIodiksZz1uKDI1KSxfPXIoZyksaj1uKDU5KSxPPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7aSh0aGlzLHQpO3ZhciBuPXModGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbCh0aGlzLGUpKTtyZXR1cm4gbi50b2dnbGVDb2xsYXBzZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9W107Zm9yKHZhciByIGluIG4uc3RhdGUuZXhwYW5kZWQpdC5wdXNoKG4uc3RhdGUuZXhwYW5kZWRbcl0pO3RbZV09IXRbZV0sbi5zZXRTdGF0ZSh7ZXhwYW5kZWQ6dH0pfSxuLnN0YXRlPXtleHBhbmRlZDpbXX0sbn1yZXR1cm4gdSh0LGUpLGModCxbe2tleTpcImdldEV4cGFuZGVkSWNvblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucHJvcHMsbj10LnRoZW1lLHI9dC5pY29uU3R5bGU7cmV0dXJuIHRoaXMuc3RhdGUuZXhwYW5kZWRbZV0/ZC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoai5FeHBhbmRlZEljb24se3RoZW1lOm4saWNvblN0eWxlOnJ9KTpkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChqLkNvbGxhcHNlZEljb24se3RoZW1lOm4saWNvblN0eWxlOnJ9KX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLnByb3BzLG49dC5zcmMscj10Lmdyb3VwQXJyYXlzQWZ0ZXJMZW5ndGgsaT0odC5kZXB0aCx0Lm5hbWUpLHM9dC50aGVtZSx1PXQuanN2Um9vdCxjPXQubmFtZXNwYWNlLGY9KHQucGFyZW50X3R5cGUsbyh0LFtcInNyY1wiLFwiZ3JvdXBBcnJheXNBZnRlckxlbmd0aFwiLFwiZGVwdGhcIixcIm5hbWVcIixcInRoZW1lXCIsXCJqc3ZSb290XCIsXCJuYW1lc3BhY2VcIixcInBhcmVudF90eXBlXCJdKSkscD0wLGg9NSp0aGlzLnByb3BzLmluZGVudFdpZHRoO3V8fChwPTUqdGhpcy5wcm9wcy5pbmRlbnRXaWR0aCk7dmFyIHY9cixnPU1hdGguY2VpbChuLmxlbmd0aC92KTtyZXR1cm4gZC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixsKHtjbGFzc05hbWU6XCJvYmplY3Qta2V5LXZhbFwifSwoMCxiLmRlZmF1bHQpKHMsdT9cImpzdi1yb290XCI6XCJvYmplY3RLZXlWYWxcIix7cGFkZGluZ0xlZnQ6cH0pKSxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChtLmRlZmF1bHQsdGhpcy5wcm9wcyksZC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh5LmRlZmF1bHQsbCh7c2l6ZTpuLmxlbmd0aH0sdGhpcy5wcm9wcykpKSxbXS5jb25jYXQoYShBcnJheShnKSkpLm1hcChmdW5jdGlvbih0LHIpe3JldHVybiBkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLGwoe2tleTpyLGNsYXNzTmFtZTpcIm9iamVjdC1rZXktdmFsIGFycmF5LWdyb3VwXCJ9LCgwLGIuZGVmYXVsdCkocyxcIm9iamVjdEtleVZhbFwiLHttYXJnaW5MZWZ0OjYscGFkZGluZ0xlZnQ6aH0pKSxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxiLmRlZmF1bHQpKHMsXCJicmFjZS1yb3dcIiksZC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixsKHtjbGFzc05hbWU6XCJpY29uLWNvbnRhaW5lclwifSwoMCxiLmRlZmF1bHQpKHMsXCJpY29uLWNvbnRhaW5lclwiKSx7b25DbGljazpmdW5jdGlvbih0KXtlLnRvZ2dsZUNvbGxhcHNlZChyKX19KSxlLmdldEV4cGFuZGVkSWNvbihyKSksZS5zdGF0ZS5leHBhbmRlZFtyXT9kLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfLmRlZmF1bHQsbCh7a2V5OmkrcixkZXB0aDowLG5hbWU6ITEsY29sbGFwc2VkOiExLGdyb3VwQXJyYXlzQWZ0ZXJMZW5ndGg6dixpbmRleF9vZmZzZXQ6cip2LHNyYzpuLnNsaWNlKHIqdixyKnYrdiksbmFtZXNwYWNlOmMsdHlwZTpcImFycmF5XCIscGFyZW50X3R5cGU6XCJhcnJheV9ncm91cFwiLHRoZW1lOnN9LGYpKTpkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixsKHt9LCgwLGIuZGVmYXVsdCkocyxcImJyYWNlXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKHQpe2UudG9nZ2xlQ29sbGFwc2VkKHIpfSxjbGFzc05hbWU6XCJhcnJheS1ncm91cC1icmFjZVwifSksXCJbXCIsZC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixsKHt9LCgwLGIuZGVmYXVsdCkocyxcImFycmF5LWdyb3VwLW1ldGEtZGF0YVwiKSx7Y2xhc3NOYW1lOlwiYXJyYXktZ3JvdXAtbWV0YS1kYXRhXCJ9KSxkLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixsKHtjbGFzc05hbWU6XCJvYmplY3Qtc2l6ZVwifSwoMCxiLmRlZmF1bHQpKHMsXCJvYmplY3Qtc2l6ZVwiKSkscip2LFwiIC0gXCIscip2K3Y+bi5sZW5ndGg/bi5sZW5ndGg6cip2K3YpKSxcIl1cIikpKX0pKX19XSksdH0oZC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1PfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlKXt2YXIgdD1lLnBhcmVudF90eXBlLG49ZS5uYW1lc3BhY2Uscj1lLnRoZW1lLGE9ZS5qc3ZSb290LGk9ZS5uYW1lLHU9ZS5uYW1lP2UubmFtZTpcIlwiO3JldHVybiFhfHwhMSE9PWkmJm51bGwhPT1pP1wiYXJyYXlcIj09dD9zLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixvKHt9LCgwLGwuZGVmYXVsdCkocixcImFycmF5LWtleVwiKSx7a2V5Om59KSxzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwiYXJyYXkta2V5XCJ9LHUpLHMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGwuZGVmYXVsdCkocixcImNvbG9uXCIpLFwiOlwiKSk6cy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbyh7fSwoMCxsLmRlZmF1bHQpKHIsXCJvYmplY3QtbmFtZVwiKSx7a2V5Om59KSxzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwib2JqZWN0LWtleVwifSxzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LCdcIicpLHMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwsdSkscy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnt2ZXJ0aWNhbEFsaWduOlwidG9wXCJ9fSwnXCInKSkscy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAsbC5kZWZhdWx0KShyLFwiY29sb25cIiksXCI6XCIpKTpzLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsKX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfTt0LmRlZmF1bHQ9YTt2YXIgaT1uKDApLHM9cihpKSx1PW4oMSksbD1yKHUpfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlKXt2YXIgdD1lLnRoZW1lO3N3aXRjaChlLmljb25TdHlsZSl7Y2FzZVwidHJpYW5nbGVcIjpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5BcnJvd0Rvd24saSh7fSwoMCxjLmRlZmF1bHQpKHQsXCJleHBhbmRlZC1pY29uXCIpLHtjbGFzc05hbWU6XCJleHBhbmRlZC1pY29uXCJ9KSk7Y2FzZVwic3F1YXJlXCI6cmV0dXJuIHUuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGYuU3F1YXJlTWludXMsaSh7fSwoMCxjLmRlZmF1bHQpKHQsXCJleHBhbmRlZC1pY29uXCIpLHtjbGFzc05hbWU6XCJleHBhbmRlZC1pY29uXCJ9KSk7ZGVmYXVsdDpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5DaXJjbGVNaW51cyxpKHt9LCgwLGMuZGVmYXVsdCkodCxcImV4cGFuZGVkLWljb25cIikse2NsYXNzTmFtZTpcImV4cGFuZGVkLWljb25cIn0pKX19ZnVuY3Rpb24gbyhlKXt2YXIgdD1lLnRoZW1lO3N3aXRjaChlLmljb25TdHlsZSl7Y2FzZVwidHJpYW5nbGVcIjpyZXR1cm4gdS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZi5BcnJvd1JpZ2h0LGkoe30sKDAsYy5kZWZhdWx0KSh0LFwiY29sbGFwc2VkLWljb25cIikse2NsYXNzTmFtZTpcImNvbGxhcHNlZC1pY29uXCJ9KSk7Y2FzZVwic3F1YXJlXCI6cmV0dXJuIHUuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGYuU3F1YXJlUGx1cyxpKHt9LCgwLGMuZGVmYXVsdCkodCxcImNvbGxhcHNlZC1pY29uXCIpLHtjbGFzc05hbWU6XCJjb2xsYXBzZWQtaWNvblwifSkpO2RlZmF1bHQ6cmV0dXJuIHUuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGYuQ2lyY2xlUGx1cyxpKHt9LCgwLGMuZGVmYXVsdCkodCxcImNvbGxhcHNlZC1pY29uXCIpLHtjbGFzc05hbWU6XCJjb2xsYXBzZWQtaWNvblwifSkpfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgaT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfTt0LkV4cGFuZGVkSWNvbj1hLHQuQ29sbGFwc2VkSWNvbj1vO3ZhciBzPW4oMCksdT1yKHMpLGw9bigxKSxjPXIobCksZj1uKDE1KX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDYxKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDQxKSxkPW4oNjIpLHA9cihkKSxiPW4oMTc3KSxoPXIoYikseT1uKDE3OSksdj1yKHkpLG09big0KSxnPW4oMTMpLF89cihnKSxqPW4oMSksTz1yKGopO24oMTgwKTt2YXIgRT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe2EodGhpcyx0KTt2YXIgbj1vKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwodGhpcyxlKSk7cmV0dXJuIG4ucmp2SWQ9RGF0ZS5ub3coKS50b1N0cmluZygpLG4uZ2V0TGlzdGVuZXJzPWZ1bmN0aW9uKCl7cmV0dXJue3Jlc2V0Om4ucmVzZXRTdGF0ZSxcInZhcmlhYmxlLXVwZGF0ZVwiOm4udXBkYXRlU3JjLFwiYWRkLWtleS1yZXF1ZXN0XCI6bi5hZGRLZXlSZXF1ZXN0fX0sbi51cGRhdGVTcmM9ZnVuY3Rpb24oKXt2YXIgZT1fLmRlZmF1bHQuZ2V0KG4ucmp2SWQsXCJhY3Rpb25cIixcInZhcmlhYmxlLXVwZGF0ZVwiKSx0PWUubmFtZSxyPWUubmFtZXNwYWNlLGE9ZS5uZXdfdmFsdWUsbz1lLmV4aXN0aW5nX3ZhbHVlLGk9KGUudmFyaWFibGVfcmVtb3ZlZCxlLnVwZGF0ZWRfc3JjKSxzPWUudHlwZSx1PW4ucHJvcHMsbD11Lm9uRWRpdCxjPXUub25EZWxldGUsZj11Lm9uQWRkLGQ9bi5zdGF0ZS5zcmMscD12b2lkIDAsYj17ZXhpc3Rpbmdfc3JjOmQsbmV3X3ZhbHVlOmEsdXBkYXRlZF9zcmM6aSxuYW1lOnQsbmFtZXNwYWNlOnIsZXhpc3RpbmdfdmFsdWU6b307c3dpdGNoKHMpe2Nhc2VcInZhcmlhYmxlLWFkZGVkXCI6cD1mKGIpO2JyZWFrO2Nhc2VcInZhcmlhYmxlLWVkaXRlZFwiOnA9bChiKTticmVhaztjYXNlXCJ2YXJpYWJsZS1yZW1vdmVkXCI6cD1jKGIpfSExIT09cD8oXy5kZWZhdWx0LnNldChuLnJqdklkLFwiZ2xvYmFsXCIsXCJzcmNcIixpKSxuLnNldFN0YXRlKHtzcmM6aX0pKTpuLnNldFN0YXRlKHt2YWxpZGF0aW9uRmFpbHVyZTohMH0pfSxuLmFkZEtleVJlcXVlc3Q9ZnVuY3Rpb24oKXtuLnNldFN0YXRlKHthZGRLZXlSZXF1ZXN0OiEwfSl9LG4ucmVzZXRTdGF0ZT1mdW5jdGlvbigpe24uc2V0U3RhdGUoe3ZhbGlkYXRpb25GYWlsdXJlOiExLGFkZEtleVJlcXVlc3Q6ITF9KX0sbi5zdGF0ZT17YWRkS2V5UmVxdWVzdDohMSxlZGl0S2V5UmVxdWVzdDohMSx2YWxpZGF0aW9uRmFpbHVyZTohMSxzcmM6dC5kZWZhdWx0UHJvcHMuc3JjLG5hbWU6dC5kZWZhdWx0UHJvcHMubmFtZSx0aGVtZTp0LmRlZmF1bHRQcm9wcy50aGVtZSx2YWxpZGF0aW9uTWVzc2FnZTp0LmRlZmF1bHRQcm9wcy52YWxpZGF0aW9uTWVzc2FnZSxwcmV2U3JjOnQuZGVmYXVsdFByb3BzLnNyYyxwcmV2TmFtZTp0LmRlZmF1bHRQcm9wcy5uYW1lLHByZXZUaGVtZTp0LmRlZmF1bHRQcm9wcy50aGVtZX0sbn1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcImNvbXBvbmVudERpZE1vdW50XCIsdmFsdWU6ZnVuY3Rpb24oKXtfLmRlZmF1bHQuc2V0KHRoaXMucmp2SWQsXCJnbG9iYWxcIixcInNyY1wiLHRoaXMuc3RhdGUuc3JjKTt2YXIgZT10aGlzLmdldExpc3RlbmVycygpO2Zvcih2YXIgdCBpbiBlKV8uZGVmYXVsdC5vbih0K1wiLVwiK3RoaXMucmp2SWQsZVt0XSk7dGhpcy5zZXRTdGF0ZSh7YWRkS2V5UmVxdWVzdDohMSxlZGl0S2V5UmVxdWVzdDohMX0pfX0se2tleTpcImNvbXBvbmVudERpZFVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7ITEhPT10LmFkZEtleVJlcXVlc3QmJnRoaXMuc2V0U3RhdGUoe2FkZEtleVJlcXVlc3Q6ITF9KSwhMSE9PXQuZWRpdEtleVJlcXVlc3QmJnRoaXMuc2V0U3RhdGUoe2VkaXRLZXlSZXF1ZXN0OiExfSksZS5zcmMhPT10aGlzLnN0YXRlLnNyYyYmXy5kZWZhdWx0LnNldCh0aGlzLnJqdklkLFwiZ2xvYmFsXCIsXCJzcmNcIix0aGlzLnN0YXRlLnNyYyl9fSx7a2V5OlwiY29tcG9uZW50V2lsbFVubW91bnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZ2V0TGlzdGVuZXJzKCk7Zm9yKHZhciB0IGluIGUpXy5kZWZhdWx0LnJlbW92ZUxpc3RlbmVyKHQrXCItXCIrdGhpcy5yanZJZCxlW3RdKX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuc3RhdGUsdD1lLnZhbGlkYXRpb25GYWlsdXJlLG49ZS52YWxpZGF0aW9uTWVzc2FnZSxyPWUuYWRkS2V5UmVxdWVzdCxhPWUudGhlbWUsbz1lLnNyYyxpPWUubmFtZSx1PXRoaXMucHJvcHMsbD11LnN0eWxlLGY9dS5kZWZhdWx0VmFsdWU7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInJlYWN0LWpzb24tdmlld1wiLHN0eWxlOnMoe30sKDAsTy5kZWZhdWx0KShhLFwiYXBwLWNvbnRhaW5lclwiKS5zdHlsZSxsKX0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodi5kZWZhdWx0LHttZXNzYWdlOm4sYWN0aXZlOnQsdGhlbWU6YSxyanZJZDp0aGlzLnJqdklkfSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQocC5kZWZhdWx0LHMoe30sdGhpcy5wcm9wcyx7c3JjOm8sbmFtZTppLHRoZW1lOmEsdHlwZTooMCxtLnRvVHlwZSkobykscmp2SWQ6dGhpcy5yanZJZH0pKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChoLmRlZmF1bHQse2FjdGl2ZTpyLHRoZW1lOmEscmp2SWQ6dGhpcy5yanZJZCxkZWZhdWx0VmFsdWU6Zn0pKX19XSxbe2tleTpcImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc1wiLHZhbHVlOmZ1bmN0aW9uKGUsbil7aWYoZS5zcmMhPT1uLnByZXZTcmN8fGUubmFtZSE9PW4ucHJldk5hbWV8fGUudGhlbWUhPT1uLnByZXZUaGVtZSl7dmFyIHI9e3NyYzplLnNyYyxuYW1lOmUubmFtZSx0aGVtZTplLnRoZW1lLHZhbGlkYXRpb25NZXNzYWdlOmUudmFsaWRhdGlvbk1lc3NhZ2UscHJldlNyYzplLnNyYyxwcmV2TmFtZTplLm5hbWUscHJldlRoZW1lOmUudGhlbWV9O3JldHVybiB0LnZhbGlkYXRlU3RhdGUocil9cmV0dXJuIG51bGx9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTtFLmRlZmF1bHRQcm9wcz17c3JjOnt9LG5hbWU6XCJyb290XCIsdGhlbWU6XCJyanYtZGVmYXVsdFwiLGNvbGxhcHNlZDohMSxjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aDohMSxzaG91bGRDb2xsYXBzZTohMSxzb3J0S2V5czohMSxncm91cEFycmF5c0FmdGVyTGVuZ3RoOjEwMCxpbmRlbnRXaWR0aDo0LGVuYWJsZUNsaXBib2FyZDohMCxkaXNwbGF5T2JqZWN0U2l6ZTohMCxkaXNwbGF5RGF0YVR5cGVzOiEwLG9uRWRpdDohMSxvbkRlbGV0ZTohMSxvbkFkZDohMSxvblNlbGVjdDohMSxpY29uU3R5bGU6XCJ0cmlhbmdsZVwiLHN0eWxlOnt9LHZhbGlkYXRpb25NZXNzYWdlOlwiVmFsaWRhdGlvbiBFcnJvclwiLGRlZmF1bHRWYWx1ZTpudWxsfSxFLnZhbGlkYXRlU3RhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9e307cmV0dXJuXCJvYmplY3RcIiE9PSgwLG0udG9UeXBlKShlLnRoZW1lKXx8KDAsbS5pc1RoZW1lKShlLnRoZW1lKXx8KGNvbnNvbGUuZXJyb3IoXCJyZWFjdC1qc29uLXZpZXcgZXJyb3I6XCIsXCJ0aGVtZSBwcm9wIG11c3QgYmUgYSB0aGVtZSBuYW1lIG9yIHZhbGlkIGJhc2UtMTYgdGhlbWUgb2JqZWN0LlwiLCdkZWZhdWx0aW5nIHRvIFwicmp2LWRlZmF1bHRcIiB0aGVtZScpLHQudGhlbWU9XCJyanYtZGVmYXVsdFwiKSxcIm9iamVjdFwiIT09KDAsbS50b1R5cGUpKGUuc3JjKSYmXCJhcnJheVwiIT09KDAsbS50b1R5cGUpKGUuc3JjKSYmKGNvbnNvbGUuZXJyb3IoXCJyZWFjdC1qc29uLXZpZXcgZXJyb3I6XCIsXCJzcmMgcHJvcGVydHkgbXVzdCBiZSBhIHZhbGlkIGpzb24gb2JqZWN0XCIpLHQubmFtZT1cIkVSUk9SXCIsdC5zcmM9e21lc3NhZ2U6XCJzcmMgcHJvcGVydHkgbXVzdCBiZSBhIHZhbGlkIGpzb24gb2JqZWN0XCJ9KSxzKHt9LGUsdCl9LCgwLGYucG9seWZpbGwpKEUpLHQuZGVmYXVsdD1FfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PW4oMCksbD1yKHUpLGM9bigyNSksZj1yKGMpLGQ9big1NykscD1yKGQpLGI9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4scixpO2EodGhpcyx0KTtmb3IodmFyIHU9YXJndW1lbnRzLmxlbmd0aCxjPUFycmF5KHUpLGQ9MDtkPHU7ZCsrKWNbZF09YXJndW1lbnRzW2RdO3JldHVybiBuPXI9byh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KGMpKSksci5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1yLHQ9ZS5wcm9wcyxuPVt0Lm5hbWVdLGE9Zi5kZWZhdWx0O3JldHVybiB0Lmdyb3VwQXJyYXlzQWZ0ZXJMZW5ndGgmJnQuc3JjLmxlbmd0aD50Lmdyb3VwQXJyYXlzQWZ0ZXJMZW5ndGgmJihhPXAuZGVmYXVsdCksbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicHJldHR5LWpzb24tY29udGFpbmVyIG9iamVjdC1jb250YWluZXJcIn0sbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwib2JqZWN0LWNvbnRlbnRcIn0sbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoYSxzKHtuYW1lc3BhY2U6bixkZXB0aDowLGpzdlJvb3Q6ITB9LHQpKSkpfSxpPW4sbyhyLGkpfXJldHVybiBpKHQsZSksdH0obC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1ifSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9bigxKSxiPXIocCksaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHM7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiYm9vbGVhblwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChkLmRlZmF1bHQscyh7dHlwZV9uYW1lOlwiYm9vbFwifSxlKSksZS52YWx1ZT9cInRydWVcIjpcImZhbHNlXCIpfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWh9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LnJqdl9kZWZhdWx0PXtzY2hlbWU6XCJyanYtZGVmYXVsdFwiLGF1dGhvcjpcIm1hYyBnYWlub3JcIixiYXNlMDA6XCJyZ2JhKDAsIDAsIDAsIDApXCIsYmFzZTAxOlwicmdiKDI0NSwgMjQ1LCAyNDUpXCIsYmFzZTAyOlwicmdiKDIzNSwgMjM1LCAyMzUpXCIsYmFzZTAzOlwiIzkzYTFhMVwiLGJhc2UwNDpcInJnYmEoMCwgMCwgMCwgMC4zKVwiLGJhc2UwNTpcIiM1ODZlNzVcIixiYXNlMDY6XCIjMDczNjQyXCIsYmFzZTA3OlwiIzAwMmIzNlwiLGJhc2UwODpcIiNkMzM2ODJcIixiYXNlMDk6XCIjY2I0YjE2XCIsYmFzZTBBOlwiI2RjMzIyZlwiLGJhc2UwQjpcIiM4NTk5MDBcIixiYXNlMEM6XCIjNmM3MWM0XCIsYmFzZTBEOlwiIzU4NmU3NVwiLGJhc2UwRTpcIiMyYWExOThcIixiYXNlMEY6XCIjMjY4YmQyXCJ9LHQucmp2X2dyZXk9e3NjaGVtZTpcInJqdi1ncmV5XCIsYXV0aG9yOlwibWFjIGdhaW5vclwiLGJhc2UwMDpcInJnYmEoMSwgMSwgMSwgMClcIixiYXNlMDE6XCJyZ2JhKDEsIDEsIDEsIDAuMSlcIixiYXNlMDI6XCJyZ2JhKDAsIDAsIDAsIDAuMilcIixiYXNlMDM6XCJyZ2JhKDEsIDEsIDEsIDAuMylcIixiYXNlMDQ6XCJyZ2JhKDAsIDAsIDAsIDAuNClcIixiYXNlMDU6XCJyZ2JhKDEsIDEsIDEsIDAuNSlcIixiYXNlMDY6XCJyZ2JhKDEsIDEsIDEsIDAuNilcIixiYXNlMDc6XCJyZ2JhKDEsIDEsIDEsIDAuNylcIixiYXNlMDg6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMDk6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEE6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEI6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEM6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEQ6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEU6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIixiYXNlMEY6XCJyZ2JhKDEsIDEsIDEsIDAuOClcIn19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9e3doaXRlOlwiI2ZmZlwiLGJsYWNrOlwiIzAwMFwiLHRyYW5zcGFyZW50OlwicmdiYSgxLCAxLCAxLCAwKVwiLGdsb2JhbEZvbnRGYW1pbHk6XCJtb25vc3BhY2VcIixnbG9iYWxDdXJzb3I6XCJkZWZhdWx0XCIsaW5kZW50QmxvY2tXaWR0aDpcIjVweFwiLGJyYWNlRm9udFdlaWdodDpcImJvbGRcIixicmFjZUN1cnNvcjpcInBvaW50ZXJcIixlbGxpcHNpc0ZvbnRTaXplOlwiMThweFwiLGVsbGlwc2lzTGluZUhlaWdodDpcIjEwcHhcIixlbGxpcHNpc0N1cnNvcjpcInBvaW50ZXJcIixrZXlNYXJnaW46XCIwcHggNXB4XCIsa2V5TGV0dGVyU3BhY2luZzpcIjAuNXB4XCIsa2V5Rm9udFN0eWxlOlwibm9uZVwiLGtleUJvcmRlclJhZGl1czpcIjNweFwiLGtleUNvbG9uV2VpZ2h0OlwiYm9sZFwiLGtleVZlcnRpY2FsQWxpZ246XCJ0b3BcIixrZXlPcGFjaXR5OlwiMC44NVwiLGtleU9wYWNpdHlIb3ZlcjpcIjFcIixrZXlWYWxQYWRkaW5nVG9wOlwiM3B4XCIsa2V5VmFsUGFkZGluZ0JvdHRvbTpcIjNweFwiLGtleVZhbFBhZGRpbmdSaWdodDpcIjVweFwiLGtleVZhbEJvcmRlckxlZnQ6XCIxcHggc29saWRcIixrZXlWYWxCb3JkZXJIb3ZlcjpcIjJweCBzb2xpZFwiLGtleVZhbFBhZGRpbmdIb3ZlcjpcIjNweCA1cHggM3B4IDRweFwiLHB1c2hlZENvbnRlbnRNYXJnaW5MZWZ0OlwiNnB4XCIsdmFyaWFibGVWYWx1ZVBhZGRpbmdSaWdodDpcIjZweFwiLG51bGxGb250U2l6ZTpcIjExcHhcIixudWxsRm9udFdlaWdodDpcImJvbGRcIixudWxsUGFkZGluZzpcIjFweCAycHhcIixudWxsQm9yZGVyUmFkaXVzOlwiM3B4XCIsbmFuRm9udFNpemU6XCIxMXB4XCIsbmFuRm9udFdlaWdodDpcImJvbGRcIixuYW5QYWRkaW5nOlwiMXB4IDJweFwiLG5hbkJvcmRlclJhZGl1czpcIjNweFwiLHVuZGVmaW5lZEZvbnRTaXplOlwiMTFweFwiLHVuZGVmaW5lZEZvbnRXZWlnaHQ6XCJib2xkXCIsdW5kZWZpbmVkUGFkZGluZzpcIjFweCAycHhcIix1bmRlZmluZWRCb3JkZXJSYWRpdXM6XCIzcHhcIixkYXRhVHlwZUZvbnRTaXplOlwiMTFweFwiLGRhdGFUeXBlTWFyZ2luUmlnaHQ6XCI0cHhcIixkYXRhdHlwZU9wYWNpdHk6XCIwLjhcIixvYmplY3RTaXplQm9yZGVyUmFkaXVzOlwiM3B4XCIsb2JqZWN0U2l6ZUZvbnRTdHlsZTpcIml0YWxpY1wiLG9iamVjdFNpemVNYXJnaW46XCIwcHggNnB4IDBweCAwcHhcIixjbGlwYm9hcmRDdXJzb3I6XCJwb2ludGVyXCIsY2xpcGJvYXJkQ2hlY2tNYXJnaW5MZWZ0OlwiLTEycHhcIixtZXRhRGF0YVBhZGRpbmc6XCIwcHggMHB4IDBweCAxMHB4XCIsYXJyYXlHcm91cE1ldGFQYWRkaW5nOlwiMHB4IDBweCAwcHggNHB4XCIsaWNvbkNvbnRhaW5lcldpZHRoOlwiMTdweFwiLHRvb2x0aXBQYWRkaW5nOlwiNHB4XCIsZWRpdElucHV0SGVpZ2h0OlwiMjVweFwiLGVkaXRJbnB1dE1pbldpZHRoOlwiMTMwcHhcIixlZGl0SW5wdXRCb3JkZXJSYWRpdXM6XCIycHhcIixlZGl0SW5wdXRQYWRkaW5nOlwiNXB4XCIsZWRpdElucHV0TWFyZ2luUmlnaHQ6XCI0cHhcIixlZGl0SW5wdXRGb250RmFtaWx5OlwibW9ub3NwYWNlXCIsaWNvbkN1cnNvcjpcInBvaW50ZXJcIixpY29uRm9udFNpemU6XCIxNXB4XCIsaWNvblBhZGRpbmdSaWdodDpcIjFweFwiLGRhdGVWYWx1ZU1hcmdpbkxlZnQ6XCIycHhcIixpY29uTWFyZ2luUmlnaHQ6XCIzcHhcIixkZXRlY3RlZFJvd1BhZGRpbmdUb3A6XCIzcHhcIixhZGRLZXlDb3ZlckJhY2tncm91bmQ6XCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMylcIixhZGRLZXlDb3ZlclBvc2l0aW9uOlwiYWJzb2x1dGVcIixhZGRLZXlDb3ZlclBvc2l0aW9uUHg6XCIwcHhcIixhZGRLZXlNb2RhbFdpZHRoOlwiMjAwcHhcIixhZGRLZXlNb2RhbE1hcmdpbjpcImF1dG9cIixhZGRLZXlNb2RhbFBhZGRpbmc6XCIxMHB4XCIsYWRkS2V5TW9kYWxSYWRpdXM6XCIzcHhcIn19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmdldEJhc2UxNlRoZW1lPXQuY3JlYXRlU3R5bGluZz10LmludmVydFRoZW1lPXZvaWQgMDt2YXIgYT1uKDY3KSxvPXIoYSksaT1uKDk0KSxzPXIoaSksdT1uKDk5KSxsPXIodSksYz1uKDEwNyksZj1yKGMpLGQ9bigxMTEpLHA9cihkKSxiPW4oMTEyKSxoPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0oYikseT1uKDE1MCksdj1yKHkpLG09bigxNTEpLGc9cihtKSxfPW4oMTU2KSxqPXIoXyksTz1uKDE1NyksRT1oLmRlZmF1bHQsdz0oMCxmLmRlZmF1bHQpKEUpLHg9ZnVuY3Rpb24oZSl7cmV0dXJuIGU8LjI1PzE6ZTwuNT8uOS1lOjEuMS1lfSxDPSgwLGouZGVmYXVsdCkoZy5kZWZhdWx0LE8ucmdiMnl1dixmdW5jdGlvbihlKXt2YXIgdD0oMCxsLmRlZmF1bHQpKGUsMyksbj10WzBdLHI9dFsxXSxhPXRbMl07cmV0dXJuW3gobikscixhXX0sTy55dXYycmdiLHYuZGVmYXVsdCksaz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJue2NsYXNzTmFtZTpbdC5jbGFzc05hbWUsZS5jbGFzc05hbWVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKSxzdHlsZTooMCxzLmRlZmF1bHQpKHt9LHQuc3R5bGV8fHt9LGUuc3R5bGV8fHt9KX19fSxQPWZ1bmN0aW9uKGUsdCl7aWYodm9pZCAwPT09ZSlyZXR1cm4gdDtpZih2b2lkIDA9PT10KXJldHVybiBlO3ZhciBuPXZvaWQgMD09PWU/XCJ1bmRlZmluZWRcIjooMCxvLmRlZmF1bHQpKGUpLHI9dm9pZCAwPT09dD9cInVuZGVmaW5lZFwiOigwLG8uZGVmYXVsdCkodCk7c3dpdGNoKG4pe2Nhc2VcInN0cmluZ1wiOnN3aXRjaChyKXtjYXNlXCJzdHJpbmdcIjpyZXR1cm5bdCxlXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7Y2FzZVwib2JqZWN0XCI6cmV0dXJuIGsoe2NsYXNzTmFtZTplLHN0eWxlOnR9KTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBmdW5jdGlvbihuKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCxhPUFycmF5KHI+MT9yLTE6MCksbz0xO288cjtvKyspYVtvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4gayh7Y2xhc3NOYW1lOmV9KSh0LmFwcGx5KHZvaWQgMCxbbl0uY29uY2F0KGEpKSl9fWNhc2VcIm9iamVjdFwiOnN3aXRjaChyKXtjYXNlXCJzdHJpbmdcIjpyZXR1cm4gayh7Y2xhc3NOYW1lOnQsc3R5bGU6ZX0pO2Nhc2VcIm9iamVjdFwiOnJldHVybigwLHMuZGVmYXVsdCkoe30sdCxlKTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBmdW5jdGlvbihuKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCxhPUFycmF5KHI+MT9yLTE6MCksbz0xO288cjtvKyspYVtvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4gayh7c3R5bGU6ZX0pKHQuYXBwbHkodm9pZCAwLFtuXS5jb25jYXQoYSkpKX19Y2FzZVwiZnVuY3Rpb25cIjpzd2l0Y2gocil7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGE9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylhW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLmFwcGx5KHZvaWQgMCxbayhuKSh7Y2xhc3NOYW1lOnR9KV0uY29uY2F0KGEpKX07Y2FzZVwib2JqZWN0XCI6cmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGE9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylhW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLmFwcGx5KHZvaWQgMCxbayhuKSh7c3R5bGU6dH0pXS5jb25jYXQoYSkpfTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBmdW5jdGlvbihuKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCxhPUFycmF5KHI+MT9yLTE6MCksbz0xO288cjtvKyspYVtvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4gZS5hcHBseSh2b2lkIDAsW3QuYXBwbHkodm9pZCAwLFtuXS5jb25jYXQoYSkpXS5jb25jYXQoYSkpfX19fSxTPWZ1bmN0aW9uKGUsdCl7dmFyIG49KDAsZi5kZWZhdWx0KSh0KTtmb3IodmFyIHIgaW4gZSktMT09PW4uaW5kZXhPZihyKSYmbi5wdXNoKHIpO3JldHVybiBuLnJlZHVjZShmdW5jdGlvbihuLHIpe3JldHVybiBuW3JdPVAoZVtyXSx0W3JdKSxufSx7fSl9LE09ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49YXJndW1lbnRzLmxlbmd0aCxyPUFycmF5KG4+Mj9uLTI6MCksYT0yO2E8bjthKyspclthLTJdPWFyZ3VtZW50c1thXTtpZihudWxsPT09dClyZXR1cm4gZTtBcnJheS5pc0FycmF5KHQpfHwodD1bdF0pO3ZhciBpPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSkuZmlsdGVyKEJvb2xlYW4pLHU9aS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdD9lLmNsYXNzTmFtZT1bZS5jbGFzc05hbWUsdF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpOlwib2JqZWN0XCI9PT0odm9pZCAwPT09dD9cInVuZGVmaW5lZFwiOigwLG8uZGVmYXVsdCkodCkpP2Uuc3R5bGU9KDAscy5kZWZhdWx0KSh7fSxlLnN0eWxlLHQpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJihlPSgwLHMuZGVmYXVsdCkoe30sZSx0LmFwcGx5KHZvaWQgMCxbZV0uY29uY2F0KHIpKSkpLGV9LHtjbGFzc05hbWU6XCJcIixzdHlsZTp7fX0pO3JldHVybiB1LmNsYXNzTmFtZXx8ZGVsZXRlIHUuY2xhc3NOYW1lLDA9PT0oMCxmLmRlZmF1bHQpKHUuc3R5bGUpLmxlbmd0aCYmZGVsZXRlIHUuc3R5bGUsdX0sQT10LmludmVydFRoZW1lPWZ1bmN0aW9uKGUpe3JldHVybigwLGYuZGVmYXVsdCkoZSkucmVkdWNlKGZ1bmN0aW9uKHQsbil7cmV0dXJuIHRbbl09L15iYXNlLy50ZXN0KG4pP0MoZVtuXSk6XCJzY2hlbWVcIj09PW4/ZVtuXStcIjppbnZlcnRlZFwiOmVbbl0sdH0se30pfSxSPSh0LmNyZWF0ZVN0eWxpbmc9KDAscC5kZWZhdWx0KShmdW5jdGlvbihlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPUFycmF5KHQ+Mz90LTM6MCkscj0zO3I8dDtyKyspbltyLTNdPWFyZ3VtZW50c1tyXTt2YXIgYT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sbz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e30saT1hLmRlZmF1bHRCYXNlMTYsdT12b2lkIDA9PT1pP0U6aSxsPWEuYmFzZTE2VGhlbWVzLGM9dm9pZCAwPT09bD9udWxsOmwsZD1SKG8sYyk7ZCYmKG89KDAscy5kZWZhdWx0KSh7fSxkLG8pKTt2YXIgYj13LnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBlW3RdPW9bdF18fHVbdF0sZX0se30pLGg9KDAsZi5kZWZhdWx0KShvKS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4tMT09PXcuaW5kZXhPZih0KT8oZVt0XT1vW3RdLGUpOmV9LHt9KSx5PWUoYiksdj1TKGgseSk7cmV0dXJuKDAscC5kZWZhdWx0KShNLDIpLmFwcGx5KHZvaWQgMCxbdl0uY29uY2F0KG4pKX0sMyksdC5nZXRCYXNlMTZUaGVtZT1mdW5jdGlvbihlLHQpe2lmKGUmJmUuZXh0ZW5kJiYoZT1lLmV4dGVuZCksXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciBuPWUuc3BsaXQoXCI6XCIpLHI9KDAsbC5kZWZhdWx0KShuLDIpLGE9clswXSxvPXJbMV07ZT0odHx8e30pW2FdfHxoW2FdLFwiaW52ZXJ0ZWRcIj09PW8mJihlPUEoZSkpfXJldHVybiBlJiZlLmhhc093blByb3BlcnR5KFwiYmFzZTAwXCIpP2U6dm9pZCAwfSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10Ll9fZXNNb2R1bGU9ITA7dmFyIGE9big2OCksbz1yKGEpLGk9big4Mykscz1yKGkpLHU9XCJmdW5jdGlvblwiPT10eXBlb2Ygcy5kZWZhdWx0JiZcInN5bWJvbFwiPT10eXBlb2Ygby5kZWZhdWx0P2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHMuZGVmYXVsdCYmZS5jb25zdHJ1Y3Rvcj09PXMuZGVmYXVsdCYmZSE9PXMuZGVmYXVsdC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX07dC5kZWZhdWx0PVwiZnVuY3Rpb25cIj09dHlwZW9mIHMuZGVmYXVsdCYmXCJzeW1ib2xcIj09PXUoby5kZWZhdWx0KT9mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOnUoZSl9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBzLmRlZmF1bHQmJmUuY29uc3RydWN0b3I9PT1zLmRlZmF1bHQmJmUhPT1zLmRlZmF1bHQucHJvdG90eXBlP1wic3ltYm9sXCI6dm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOnUoZSl9fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPXtkZWZhdWx0Om4oNjkpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQsbil7bigyNiksbigzNiksZS5leHBvcnRzPW4oMzcpLmYoXCJpdGVyYXRvclwiKX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjcpLGE9bigyOCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LG4pe3ZhciBvLGkscz1TdHJpbmcoYSh0KSksdT1yKG4pLGw9cy5sZW5ndGg7cmV0dXJuIHU8MHx8dT49bD9lP1wiXCI6dm9pZCAwOihvPXMuY2hhckNvZGVBdCh1KSxvPDU1Mjk2fHxvPjU2MzE5fHx1KzE9PT1sfHwoaT1zLmNoYXJDb2RlQXQodSsxKSk8NTYzMjB8fGk+NTczNDM/ZT9zLmNoYXJBdCh1KTpvOmU/cy5zbGljZSh1LHUrMik6aS01NjMyMCsoby01NTI5Njw8MTApKzY1NTM2KX19fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big3Mik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxuKXtpZihyKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKG4pe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGUuY2FsbCh0LG4pfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKG4scil7cmV0dXJuIGUuY2FsbCh0LG4scil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24obixyLGEpe3JldHVybiBlLmNhbGwodCxuLHIsYSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhIGZ1bmN0aW9uIVwiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQ3KSxhPW4oMjIpLG89bigzNCksaT17fTtuKDgpKGksbigzKShcIml0ZXJhdG9yXCIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG4pe2UucHJvdG90eXBlPXIoaSx7bmV4dDphKDEsbil9KSxvKGUsdCtcIiBJdGVyYXRvclwiKX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDkpLGE9bigxNiksbz1uKDE5KTtlLmV4cG9ydHM9bigxMCk/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXthKGUpO2Zvcih2YXIgbixpPW8odCkscz1pLmxlbmd0aCx1PTA7cz51OylyLmYoZSxuPWlbdSsrXSx0W25dKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDEyKSxhPW4oNzYpLG89big3Nyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LG4saSl7dmFyIHMsdT1yKHQpLGw9YSh1Lmxlbmd0aCksYz1vKGksbCk7aWYoZSYmbiE9bil7Zm9yKDtsPmM7KWlmKChzPXVbYysrXSkhPXMpcmV0dXJuITB9ZWxzZSBmb3IoO2w+YztjKyspaWYoKGV8fGMgaW4gdSkmJnVbY109PT1uKXJldHVybiBlfHxjfHwwO3JldHVybiFlJiYtMX19fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyNyksYT1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9hKHIoZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDI3KSxhPU1hdGgubWF4LG89TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9cihlKSxlPDA/YShlK3QsMCk6byhlLHQpfX0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oNSkuZG9jdW1lbnQ7ZS5leHBvcnRzPXImJnIuZG9jdW1lbnRFbGVtZW50fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big3KSxhPW4oMzUpLG89bigzMSkoXCJJRV9QUk9UT1wiKSxpPU9iamVjdC5wcm90b3R5cGU7ZS5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24oZSl7cmV0dXJuIGU9YShlKSxyKGUsbyk/ZVtvXTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P2k6bnVsbH19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDgxKSxhPW4oODIpLG89bigxOCksaT1uKDEyKTtlLmV4cG9ydHM9big0MykoQXJyYXksXCJBcnJheVwiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1pKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2ssbj10aGlzLl9pKys7cmV0dXJuIWV8fG4+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxhKDEpKTpcImtleXNcIj09dD9hKDAsbik6XCJ2YWx1ZXNcIj09dD9hKDAsZVtuXSk6YSgwLFtuLGVbbl1dKX0sXCJ2YWx1ZXNcIiksby5Bcmd1bWVudHM9by5BcnJheSxyKFwia2V5c1wiKSxyKFwidmFsdWVzXCIpLHIoXCJlbnRyaWVzXCIpfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbigpe319LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3ZhbHVlOnQsZG9uZTohIWV9fX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz17ZGVmYXVsdDpuKDg0KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LG4pe24oODUpLG4oOTEpLG4oOTIpLG4oOTMpLGUuZXhwb3J0cz1uKDIpLlN5bWJvbH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksYT1uKDcpLG89bigxMCksaT1uKDIxKSxzPW4oNDYpLHU9big4NikuS0VZLGw9bigxMSksYz1uKDMyKSxmPW4oMzQpLGQ9bigyMykscD1uKDMpLGI9bigzNyksaD1uKDM4KSx5PW4oODcpLHY9big4OCksbT1uKDE2KSxnPW4oMTcpLF89bigxMiksaj1uKDI5KSxPPW4oMjIpLEU9big0Nyksdz1uKDg5KSx4PW4oOTApLEM9big5KSxrPW4oMTkpLFA9eC5mLFM9Qy5mLE09dy5mLEE9ci5TeW1ib2wsUj1yLkpTT04sRj1SJiZSLnN0cmluZ2lmeSxEPXAoXCJfaGlkZGVuXCIpLFQ9cChcInRvUHJpbWl0aXZlXCIpLEk9e30ucHJvcGVydHlJc0VudW1lcmFibGUsTD1jKFwic3ltYm9sLXJlZ2lzdHJ5XCIpLEI9YyhcInN5bWJvbHNcIiksTj1jKFwib3Atc3ltYm9sc1wiKSx6PU9iamVjdC5wcm90b3R5cGUscT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBBLFY9ci5RT2JqZWN0LFU9IVZ8fCFWLnByb3RvdHlwZXx8IVYucHJvdG90eXBlLmZpbmRDaGlsZCxLPW8mJmwoZnVuY3Rpb24oKXtyZXR1cm4gNyE9RShTKHt9LFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzLFwiYVwiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxuKXt2YXIgcj1QKHosdCk7ciYmZGVsZXRlIHpbdF0sUyhlLHQsbiksciYmZSE9PXomJlMoeix0LHIpfTpTLFc9ZnVuY3Rpb24oZSl7dmFyIHQ9QltlXT1FKEEucHJvdG90eXBlKTtyZXR1cm4gdC5faz1lLHR9LEg9cSYmXCJzeW1ib2xcIj09dHlwZW9mIEEuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgQX0sSj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGU9PT16JiZKKE4sdCxuKSxtKGUpLHQ9aih0LCEwKSxtKG4pLGEoQix0KT8obi5lbnVtZXJhYmxlPyhhKGUsRCkmJmVbRF1bdF0mJihlW0RdW3RdPSExKSxuPUUobix7ZW51bWVyYWJsZTpPKDAsITEpfSkpOihhKGUsRCl8fFMoZSxELE8oMSx7fSkpLGVbRF1bdF09ITApLEsoZSx0LG4pKTpTKGUsdCxuKX0sRz1mdW5jdGlvbihlLHQpe20oZSk7Zm9yKHZhciBuLHI9eSh0PV8odCkpLGE9MCxvPXIubGVuZ3RoO28+YTspSihlLG49clthKytdLHRbbl0pO3JldHVybiBlfSwkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/RShlKTpHKEUoZSksdCl9LFk9ZnVuY3Rpb24oZSl7dmFyIHQ9SS5jYWxsKHRoaXMsZT1qKGUsITApKTtyZXR1cm4hKHRoaXM9PT16JiZhKEIsZSkmJiFhKE4sZSkpJiYoISh0fHwhYSh0aGlzLGUpfHwhYShCLGUpfHxhKHRoaXMsRCkmJnRoaXNbRF1bZV0pfHx0KX0sUT1mdW5jdGlvbihlLHQpe2lmKGU9XyhlKSx0PWoodCwhMCksZSE9PXp8fCFhKEIsdCl8fGEoTix0KSl7dmFyIG49UChlLHQpO3JldHVybiFufHwhYShCLHQpfHxhKGUsRCkmJmVbRF1bdF18fChuLmVudW1lcmFibGU9ITApLG59fSxaPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPU0oXyhlKSkscj1bXSxvPTA7bi5sZW5ndGg+bzspYShCLHQ9bltvKytdKXx8dD09RHx8dD09dXx8ci5wdXNoKHQpO3JldHVybiByfSxYPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPWU9PT16LHI9TShuP046XyhlKSksbz1bXSxpPTA7ci5sZW5ndGg+aTspIWEoQix0PXJbaSsrXSl8fG4mJiFhKHosdCl8fG8ucHVzaChCW3RdKTtyZXR1cm4gb307cXx8KEE9ZnVuY3Rpb24oKXtpZih0aGlzIGluc3RhbmNlb2YgQSl0aHJvdyBUeXBlRXJyb3IoXCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhXCIpO3ZhciBlPWQoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApLHQ9ZnVuY3Rpb24obil7dGhpcz09PXomJnQuY2FsbChOLG4pLGEodGhpcyxEKSYmYSh0aGlzW0RdLGUpJiYodGhpc1tEXVtlXT0hMSksSyh0aGlzLGUsTygxLG4pKX07cmV0dXJuIG8mJlUmJksoeixlLHtjb25maWd1cmFibGU6ITAsc2V0OnR9KSxXKGUpfSxzKEEucHJvdG90eXBlLFwidG9TdHJpbmdcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSkseC5mPVEsQy5mPUosbig1MCkuZj13LmY9WixuKDI0KS5mPVksbigzOSkuZj1YLG8mJiFuKDIwKSYmcyh6LFwicHJvcGVydHlJc0VudW1lcmFibGVcIixZLCEwKSxiLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIFcocChlKSl9KSxpKGkuRytpLlcraS5GKiFxLHtTeW1ib2w6QX0pO2Zvcih2YXIgZWU9XCJoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlc1wiLnNwbGl0KFwiLFwiKSx0ZT0wO2VlLmxlbmd0aD50ZTspcChlZVt0ZSsrXSk7Zm9yKHZhciBuZT1rKHAuc3RvcmUpLHJlPTA7bmUubGVuZ3RoPnJlOyloKG5lW3JlKytdKTtpKGkuUytpLkYqIXEsXCJTeW1ib2xcIix7Zm9yOmZ1bmN0aW9uKGUpe3JldHVybiBhKEwsZSs9XCJcIik/TFtlXTpMW2VdPUEoZSl9LGtleUZvcjpmdW5jdGlvbihlKXtpZighSChlKSl0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYSBzeW1ib2whXCIpO2Zvcih2YXIgdCBpbiBMKWlmKExbdF09PT1lKXJldHVybiB0fSx1c2VTZXR0ZXI6ZnVuY3Rpb24oKXtVPSEwfSx1c2VTaW1wbGU6ZnVuY3Rpb24oKXtVPSExfX0pLGkoaS5TK2kuRiohcSxcIk9iamVjdFwiLHtjcmVhdGU6JCxkZWZpbmVQcm9wZXJ0eTpKLGRlZmluZVByb3BlcnRpZXM6RyxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6USxnZXRPd25Qcm9wZXJ0eU5hbWVzOlosZ2V0T3duUHJvcGVydHlTeW1ib2xzOlh9KSxSJiZpKGkuUytpLkYqKCFxfHxsKGZ1bmN0aW9uKCl7dmFyIGU9QSgpO3JldHVyblwiW251bGxdXCIhPUYoW2VdKXx8XCJ7fVwiIT1GKHthOmV9KXx8XCJ7fVwiIT1GKE9iamVjdChlKSl9KSksXCJKU09OXCIse3N0cmluZ2lmeTpmdW5jdGlvbihlKXtmb3IodmFyIHQsbixyPVtlXSxhPTE7YXJndW1lbnRzLmxlbmd0aD5hOylyLnB1c2goYXJndW1lbnRzW2ErK10pO2lmKG49dD1yWzFdLChnKHQpfHx2b2lkIDAhPT1lKSYmIUgoZSkpcmV0dXJuIHYodCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKHQ9bi5jYWxsKHRoaXMsZSx0KSksIUgodCkpcmV0dXJuIHR9KSxyWzFdPXQsRi5hcHBseShSLHIpfX0pLEEucHJvdG90eXBlW1RdfHxuKDgpKEEucHJvdG90eXBlLFQsQS5wcm90b3R5cGUudmFsdWVPZiksZihBLFwiU3ltYm9sXCIpLGYoTWF0aCxcIk1hdGhcIiwhMCksZihyLkpTT04sXCJKU09OXCIsITApfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyMykoXCJtZXRhXCIpLGE9bigxNyksbz1uKDcpLGk9big5KS5mLHM9MCx1PU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LGw9IW4oMTEpKGZ1bmN0aW9uKCl7cmV0dXJuIHUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSl9KSxjPWZ1bmN0aW9uKGUpe2koZSxyLHt2YWx1ZTp7aTpcIk9cIisgKytzLHc6e319fSl9LGY9ZnVuY3Rpb24oZSx0KXtpZighYShlKSlyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgZT9lOihcInN0cmluZ1wiPT10eXBlb2YgZT9cIlNcIjpcIlBcIikrZTtpZighbyhlLHIpKXtpZighdShlKSlyZXR1cm5cIkZcIjtpZighdClyZXR1cm5cIkVcIjtjKGUpfXJldHVybiBlW3JdLml9LGQ9ZnVuY3Rpb24oZSx0KXtpZighbyhlLHIpKXtpZighdShlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtjKGUpfXJldHVybiBlW3JdLnd9LHA9ZnVuY3Rpb24oZSl7cmV0dXJuIGwmJmIuTkVFRCYmdShlKSYmIW8oZSxyKSYmYyhlKSxlfSxiPWUuZXhwb3J0cz17S0VZOnIsTkVFRDohMSxmYXN0S2V5OmYsZ2V0V2VhazpkLG9uRnJlZXplOnB9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxOSksYT1uKDM5KSxvPW4oMjQpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1yKGUpLG49YS5mO2lmKG4pZm9yKHZhciBpLHM9bihlKSx1PW8uZixsPTA7cy5sZW5ndGg+bDspdS5jYWxsKGUsaT1zW2wrK10pJiZ0LnB1c2goaSk7cmV0dXJuIHR9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigzMCk7ZS5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVyblwiQXJyYXlcIj09cihlKX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDEyKSxhPW4oNTApLmYsbz17fS50b1N0cmluZyxpPVwib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXSxzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gYShlKX1jYXRjaChlKXtyZXR1cm4gaS5zbGljZSgpfX07ZS5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIGkmJlwiW29iamVjdCBXaW5kb3ddXCI9PW8uY2FsbChlKT9zKGUpOmEocihlKSl9fSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyNCksYT1uKDIyKSxvPW4oMTIpLGk9bigyOSkscz1uKDcpLHU9big0NCksbD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3QuZj1uKDEwKT9sOmZ1bmN0aW9uKGUsdCl7aWYoZT1vKGUpLHQ9aSh0LCEwKSx1KXRyeXtyZXR1cm4gbChlLHQpfWNhdGNoKGUpe31pZihzKGUsdCkpcmV0dXJuIGEoIXIuZi5jYWxsKGUsdCksZVt0XSl9fSxmdW5jdGlvbihlLHQpe30sZnVuY3Rpb24oZSx0LG4pe24oMzgpKFwiYXN5bmNJdGVyYXRvclwiKX0sZnVuY3Rpb24oZSx0LG4pe24oMzgpKFwib2JzZXJ2YWJsZVwiKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgcj1uKDk1KSxhPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0ocik7dC5kZWZhdWx0PWEuZGVmYXVsdHx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9e2RlZmF1bHQ6big5NiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxuKXtuKDk3KSxlLmV4cG9ydHM9bigyKS5PYmplY3QuYXNzaWdufSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyMSk7cihyLlMrci5GLFwiT2JqZWN0XCIse2Fzc2lnbjpuKDk4KX0pfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxOSksYT1uKDM5KSxvPW4oMjQpLGk9bigzNSkscz1uKDQ5KSx1PU9iamVjdC5hc3NpZ247ZS5leHBvcnRzPSF1fHxuKDExKShmdW5jdGlvbigpe3ZhciBlPXt9LHQ9e30sbj1TeW1ib2woKSxyPVwiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIjtyZXR1cm4gZVtuXT03LHIuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWV9KSw3IT11KHt9LGUpW25dfHxPYmplY3Qua2V5cyh1KHt9LHQpKS5qb2luKFwiXCIpIT1yfSk/ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49aShlKSx1PWFyZ3VtZW50cy5sZW5ndGgsbD0xLGM9YS5mLGY9by5mO3U+bDspZm9yKHZhciBkLHA9cyhhcmd1bWVudHNbbCsrXSksYj1jP3IocCkuY29uY2F0KGMocCkpOnIocCksaD1iLmxlbmd0aCx5PTA7aD55OylmLmNhbGwocCxkPWJbeSsrXSkmJihuW2RdPXBbZF0pO3JldHVybiBufTp1fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5fX2VzTW9kdWxlPSEwO3ZhciBhPW4oMTAwKSxvPXIoYSksaT1uKDEwMykscz1yKGkpO3QuZGVmYXVsdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt2YXIgbj1bXSxyPSEwLGE9ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgaSx1PSgwLHMuZGVmYXVsdCkoZSk7IShyPShpPXUubmV4dCgpKS5kb25lKSYmKG4ucHVzaChpLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtyPSEwKTt9Y2F0Y2goZSl7YT0hMCxvPWV9ZmluYWxseXt0cnl7IXImJnUucmV0dXJuJiZ1LnJldHVybigpfWZpbmFsbHl7aWYoYSl0aHJvdyBvfX1yZXR1cm4gbn1yZXR1cm4gZnVuY3Rpb24odCxuKXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0O2lmKCgwLG8uZGVmYXVsdCkoT2JqZWN0KHQpKSlyZXR1cm4gZSh0LG4pO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfX0oKX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz17ZGVmYXVsdDpuKDEwMSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxuKXtuKDM2KSxuKDI2KSxlLmV4cG9ydHM9bigxMDIpfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9big1MSksYT1uKDMpKFwiaXRlcmF0b3JcIiksbz1uKDE4KTtlLmV4cG9ydHM9bigyKS5pc0l0ZXJhYmxlPWZ1bmN0aW9uKGUpe3ZhciB0PU9iamVjdChlKTtyZXR1cm4gdm9pZCAwIT09dFthXXx8XCJAQGl0ZXJhdG9yXCJpbiB0fHxvLmhhc093blByb3BlcnR5KHIodCkpfX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz17ZGVmYXVsdDpuKDEwNCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxuKXtuKDM2KSxuKDI2KSxlLmV4cG9ydHM9bigxMDUpfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigxNiksYT1uKDEwNik7ZS5leHBvcnRzPW4oMikuZ2V0SXRlcmF0b3I9ZnVuY3Rpb24oZSl7dmFyIHQ9YShlKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBpdGVyYWJsZSFcIik7cmV0dXJuIHIodC5jYWxsKGUpKX19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDUxKSxhPW4oMykoXCJpdGVyYXRvclwiKSxvPW4oMTgpO2UuZXhwb3J0cz1uKDIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMCE9ZSlyZXR1cm4gZVthXXx8ZVtcIkBAaXRlcmF0b3JcIl18fG9bcihlKV19fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPXtkZWZhdWx0Om4oMTA4KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LG4pe24oMTA5KSxlLmV4cG9ydHM9bigyKS5PYmplY3Qua2V5c30sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMzUpLGE9bigxOSk7bigxMTApKFwia2V5c1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBhKHIoZSkpfX0pfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9bigyMSksYT1uKDIpLG89bigxMSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIG49KGEuT2JqZWN0fHx7fSlbZV18fE9iamVjdFtlXSxpPXt9O2lbZV09dChuKSxyKHIuUytyLkYqbyhmdW5jdGlvbigpe24oMSl9KSxcIk9iamVjdFwiLGkpfX0sZnVuY3Rpb24oZSx0LG4peyhmdW5jdGlvbih0KXtmdW5jdGlvbiBuKGUsdCxuKXtzd2l0Y2gobi5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gZS5jYWxsKHQpO2Nhc2UgMTpyZXR1cm4gZS5jYWxsKHQsblswXSk7Y2FzZSAyOnJldHVybiBlLmNhbGwodCxuWzBdLG5bMV0pO2Nhc2UgMzpyZXR1cm4gZS5jYWxsKHQsblswXSxuWzFdLG5bMl0pfXJldHVybiBlLmFwcGx5KHQsbil9ZnVuY3Rpb24gcihlLHQpe2Zvcih2YXIgbj0tMSxyPWU/ZS5sZW5ndGg6MDsrK248ciYmITEhPT10KGVbbl0sbixlKTspO3JldHVybiBlfWZ1bmN0aW9uIGEoZSx0KXtyZXR1cm4hIShlP2UubGVuZ3RoOjApJiZpKGUsdCwwKT4tMX1mdW5jdGlvbiBvKGUsdCxuLHIpe2Zvcih2YXIgYT1lLmxlbmd0aCxvPW4rKHI/MTotMSk7cj9vLS06KytvPGE7KWlmKHQoZVtvXSxvLGUpKXJldHVybiBvO3JldHVybi0xfWZ1bmN0aW9uIGkoZSx0LG4pe2lmKHQhPT10KXJldHVybiBvKGUscyxuKTtmb3IodmFyIHI9bi0xLGE9ZS5sZW5ndGg7KytyPGE7KWlmKGVbcl09PT10KXJldHVybiByO3JldHVybi0xfWZ1bmN0aW9uIHMoZSl7cmV0dXJuIGUhPT1lfWZ1bmN0aW9uIHUoZSx0KXtmb3IodmFyIG49ZS5sZW5ndGgscj0wO24tLTspZVtuXT09PXQmJnIrKztyZXR1cm4gcn1mdW5jdGlvbiBsKGUsdCl7cmV0dXJuIG51bGw9PWU/dm9pZCAwOmVbdF19ZnVuY3Rpb24gYyhlKXt2YXIgdD0hMTtpZihudWxsIT1lJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlLnRvU3RyaW5nKXRyeXt0PSEhKGUrXCJcIil9Y2F0Y2goZSl7fXJldHVybiB0fWZ1bmN0aW9uIGYoZSx0KXtmb3IodmFyIG49LTEscj1lLmxlbmd0aCxhPTAsbz1bXTsrK248cjspe3ZhciBpPWVbbl07aSE9PXQmJmkhPT1LfHwoZVtuXT1LLG9bYSsrXT1uKX1yZXR1cm4gb31mdW5jdGlvbiBkKGUpe3JldHVybiBUKGUpP01lKGUpOnt9fWZ1bmN0aW9uIHAoZSl7cmV0dXJuISghVChlKXx8UyhlKSkmJihEKGUpfHxjKGUpP1NlOmhlKS50ZXN0KEEoZSkpfWZ1bmN0aW9uIGIoZSx0LG4scil7Zm9yKHZhciBhPS0xLG89ZS5sZW5ndGgsaT1uLmxlbmd0aCxzPS0xLHU9dC5sZW5ndGgsbD1BZShvLWksMCksYz1BcnJheSh1K2wpLGY9IXI7KytzPHU7KWNbc109dFtzXTtmb3IoOysrYTxpOykoZnx8YTxvKSYmKGNbblthXV09ZVthXSk7Zm9yKDtsLS07KWNbcysrXT1lW2ErK107cmV0dXJuIGN9ZnVuY3Rpb24gaChlLHQsbixyKXtmb3IodmFyIGE9LTEsbz1lLmxlbmd0aCxpPS0xLHM9bi5sZW5ndGgsdT0tMSxsPXQubGVuZ3RoLGM9QWUoby1zLDApLGY9QXJyYXkoYytsKSxkPSFyOysrYTxjOylmW2FdPWVbYV07Zm9yKHZhciBwPWE7Kyt1PGw7KWZbcCt1XT10W3VdO2Zvcig7KytpPHM7KShkfHxhPG8pJiYoZltwK25baV1dPWVbYSsrXSk7cmV0dXJuIGZ9ZnVuY3Rpb24geShlLHQpe3ZhciBuPS0xLHI9ZS5sZW5ndGg7Zm9yKHR8fCh0PUFycmF5KHIpKTsrK248cjspdFtuXT1lW25dO3JldHVybiB0fWZ1bmN0aW9uIHYoZSx0LG4pe2Z1bmN0aW9uIHIoKXtyZXR1cm4odGhpcyYmdGhpcyE9PWplJiZ0aGlzIGluc3RhbmNlb2Ygcj9vOmUpLmFwcGx5KGE/bjp0aGlzLGFyZ3VtZW50cyl9dmFyIGE9dCZXLG89bShlKTtyZXR1cm4gcn1mdW5jdGlvbiBtKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cztzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0WzBdKTtjYXNlIDI6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTtjYXNlIDU6cmV0dXJuIG5ldyBlKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSk7Y2FzZSA2OnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSx0WzNdLHRbNF0sdFs1XSk7Y2FzZSA3OnJldHVybiBuZXcgZSh0WzBdLHRbMV0sdFsyXSx0WzNdLHRbNF0sdFs1XSx0WzZdKX12YXIgbj1kKGUucHJvdG90eXBlKSxyPWUuYXBwbHkobix0KTtyZXR1cm4gVChyKT9yOm59fWZ1bmN0aW9uIGcoZSx0LHIpe2Z1bmN0aW9uIGEoKXtmb3IodmFyIGk9YXJndW1lbnRzLmxlbmd0aCxzPUFycmF5KGkpLHU9aSxsPXcoYSk7dS0tOylzW3VdPWFyZ3VtZW50c1t1XTt2YXIgYz1pPDMmJnNbMF0hPT1sJiZzW2ktMV0hPT1sP1tdOmYocyxsKTtyZXR1cm4oaS09Yy5sZW5ndGgpPHI/TyhlLHQsXyxhLnBsYWNlaG9sZGVyLHZvaWQgMCxzLGMsdm9pZCAwLHZvaWQgMCxyLWkpOm4odGhpcyYmdGhpcyE9PWplJiZ0aGlzIGluc3RhbmNlb2YgYT9vOmUsdGhpcyxzKX12YXIgbz1tKGUpO3JldHVybiBhfWZ1bmN0aW9uIF8oZSx0LG4scixhLG8saSxzLGwsYyl7ZnVuY3Rpb24gZCgpe2Zvcih2YXIgeD1hcmd1bWVudHMubGVuZ3RoLEM9QXJyYXkoeCksaz14O2stLTspQ1trXT1hcmd1bWVudHNba107aWYoZyl2YXIgUD13KGQpLFM9dShDLFApO2lmKHImJihDPWIoQyxyLGEsZykpLG8mJihDPWgoQyxvLGksZykpLHgtPVMsZyYmeDxjKXt2YXIgQT1mKEMsUCk7cmV0dXJuIE8oZSx0LF8sZC5wbGFjZWhvbGRlcixuLEMsQSxzLGwsYy14KX12YXIgUj15P246dGhpcyxGPXY/UltlXTplO3JldHVybiB4PUMubGVuZ3RoLHM/Qz1NKEMscyk6aiYmeD4xJiZDLnJldmVyc2UoKSxwJiZsPHgmJihDLmxlbmd0aD1sKSx0aGlzJiZ0aGlzIT09amUmJnRoaXMgaW5zdGFuY2VvZiBkJiYoRj1FfHxtKEYpKSxGLmFwcGx5KFIsQyl9dmFyIHA9dCZaLHk9dCZXLHY9dCZILGc9dCYoR3wkKSxqPXQmWCxFPXY/dm9pZCAwOm0oZSk7cmV0dXJuIGR9ZnVuY3Rpb24gaihlLHQscixhKXtmdW5jdGlvbiBvKCl7Zm9yKHZhciB0PS0xLHU9YXJndW1lbnRzLmxlbmd0aCxsPS0xLGM9YS5sZW5ndGgsZj1BcnJheShjK3UpLGQ9dGhpcyYmdGhpcyE9PWplJiZ0aGlzIGluc3RhbmNlb2Ygbz9zOmU7KytsPGM7KWZbbF09YVtsXTtmb3IoO3UtLTspZltsKytdPWFyZ3VtZW50c1srK3RdO3JldHVybiBuKGQsaT9yOnRoaXMsZil9dmFyIGk9dCZXLHM9bShlKTtyZXR1cm4gb31mdW5jdGlvbiBPKGUsdCxuLHIsYSxvLGkscyx1LGwpe3ZhciBjPXQmRyxmPWM/aTp2b2lkIDAsZD1jP3ZvaWQgMDppLHA9Yz9vOnZvaWQgMCxiPWM/dm9pZCAwOm87dHw9Yz9ZOlEsKHQmPX4oYz9ROlkpKSZKfHwodCY9fihXfEgpKTt2YXIgaD1uKGUsdCxhLHAsZixiLGQscyx1LGwpO3JldHVybiBoLnBsYWNlaG9sZGVyPXIsRGUoaCxlLHQpfWZ1bmN0aW9uIEUoZSx0LG4scixhLG8saSxzKXt2YXIgdT10Jkg7aWYoIXUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcihVKTt2YXIgbD1yP3IubGVuZ3RoOjA7aWYobHx8KHQmPX4oWXxRKSxyPWE9dm9pZCAwKSxpPXZvaWQgMD09PWk/aTpBZShOKGkpLDApLHM9dm9pZCAwPT09cz9zOk4ocyksbC09YT9hLmxlbmd0aDowLHQmUSl7dmFyIGM9cixmPWE7cj1hPXZvaWQgMH12YXIgZD1bZSx0LG4scixhLGMsZixvLGksc107aWYoZT1kWzBdLHQ9ZFsxXSxuPWRbMl0scj1kWzNdLGE9ZFs0XSxzPWRbOV09bnVsbD09ZFs5XT91PzA6ZS5sZW5ndGg6QWUoZFs5XS1sLDApLCFzJiZ0JihHfCQpJiYodCY9fihHfCQpKSx0JiZ0IT1XKXA9dD09R3x8dD09JD9nKGUsdCxzKTp0IT1ZJiZ0IT0oV3xZKXx8YS5sZW5ndGg/Xy5hcHBseSh2b2lkIDAsZCk6aihlLHQsbixyKTtlbHNlIHZhciBwPXYoZSx0LG4pO3JldHVybiBEZShwLGUsdCl9ZnVuY3Rpb24gdyhlKXtyZXR1cm4gZS5wbGFjZWhvbGRlcn1mdW5jdGlvbiB4KGUsdCl7dmFyIG49bChlLHQpO3JldHVybiBwKG4pP246dm9pZCAwfWZ1bmN0aW9uIEMoZSl7dmFyIHQ9ZS5tYXRjaChmZSk7cmV0dXJuIHQ/dFsxXS5zcGxpdChkZSk6W119ZnVuY3Rpb24gayhlLHQpe3ZhciBuPXQubGVuZ3RoLHI9bi0xO3JldHVybiB0W3JdPShuPjE/XCImIFwiOlwiXCIpK3Rbcl0sdD10LmpvaW4obj4yP1wiLCBcIjpcIiBcIiksZS5yZXBsYWNlKGNlLFwie1xcbi8qIFt3cmFwcGVkIHdpdGggXCIrdCtcIl0gKi9cXG5cIil9ZnVuY3Rpb24gUChlLHQpe3JldHVybiEhKHQ9bnVsbD09dD90ZTp0KSYmKFwibnVtYmVyXCI9PXR5cGVvZiBlfHx2ZS50ZXN0KGUpKSYmZT4tMSYmZSUxPT0wJiZlPHR9ZnVuY3Rpb24gUyhlKXtyZXR1cm4hIXhlJiZ4ZSBpbiBlfWZ1bmN0aW9uIE0oZSx0KXtmb3IodmFyIG49ZS5sZW5ndGgscj1SZSh0Lmxlbmd0aCxuKSxhPXkoZSk7ci0tOyl7dmFyIG89dFtyXTtlW3JdPVAobyxuKT9hW29dOnZvaWQgMH1yZXR1cm4gZX1mdW5jdGlvbiBBKGUpe2lmKG51bGwhPWUpe3RyeXtyZXR1cm4gQ2UuY2FsbChlKX1jYXRjaChlKXt9dHJ5e3JldHVybiBlK1wiXCJ9Y2F0Y2goZSl7fX1yZXR1cm5cIlwifWZ1bmN0aW9uIFIoZSx0KXtyZXR1cm4gcihhZSxmdW5jdGlvbihuKXt2YXIgcj1cIl8uXCIrblswXTt0Jm5bMV0mJiFhKGUscikmJmUucHVzaChyKX0pLGUuc29ydCgpfWZ1bmN0aW9uIEYoZSx0LG4pe3Q9bj92b2lkIDA6dDt2YXIgcj1FKGUsRyx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHQpO3JldHVybiByLnBsYWNlaG9sZGVyPUYucGxhY2Vob2xkZXIscn1mdW5jdGlvbiBEKGUpe3ZhciB0PVQoZSk/UGUuY2FsbChlKTpcIlwiO3JldHVybiB0PT1vZXx8dD09aWV9ZnVuY3Rpb24gVChlKXt2YXIgdD10eXBlb2YgZTtyZXR1cm4hIWUmJihcIm9iamVjdFwiPT10fHxcImZ1bmN0aW9uXCI9PXQpfWZ1bmN0aW9uIEkoZSl7cmV0dXJuISFlJiZcIm9iamVjdFwiPT10eXBlb2YgZX1mdW5jdGlvbiBMKGUpe3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiBlfHxJKGUpJiZQZS5jYWxsKGUpPT1zZX1mdW5jdGlvbiBCKGUpe3JldHVybiBlPyhlPXooZSkpPT09ZWV8fGU9PT0tZWU/KGU8MD8tMToxKSpuZTplPT09ZT9lOjA6MD09PWU/ZTowfWZ1bmN0aW9uIE4oZSl7dmFyIHQ9QihlKSxuPXQlMTtyZXR1cm4gdD09PXQ/bj90LW46dDowfWZ1bmN0aW9uIHooZSl7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpcmV0dXJuIGU7aWYoTChlKSlyZXR1cm4gcmU7aWYoVChlKSl7dmFyIHQ9XCJmdW5jdGlvblwiPT10eXBlb2YgZS52YWx1ZU9mP2UudmFsdWVPZigpOmU7ZT1UKHQpP3QrXCJcIjp0fWlmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXJldHVybiAwPT09ZT9lOitlO2U9ZS5yZXBsYWNlKGxlLFwiXCIpO3ZhciBuPWJlLnRlc3QoZSk7cmV0dXJuIG58fHllLnRlc3QoZSk/bWUoZS5zbGljZSgyKSxuPzI6OCk6cGUudGVzdChlKT9yZTorZX1mdW5jdGlvbiBxKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlfX1mdW5jdGlvbiBWKGUpe3JldHVybiBlfXZhciBVPVwiRXhwZWN0ZWQgYSBmdW5jdGlvblwiLEs9XCJfX2xvZGFzaF9wbGFjZWhvbGRlcl9fXCIsVz0xLEg9MixKPTQsRz04LCQ9MTYsWT0zMixRPTY0LFo9MTI4LFg9NTEyLGVlPTEvMCx0ZT05MDA3MTk5MjU0NzQwOTkxLG5lPTEuNzk3NjkzMTM0ODYyMzE1N2UzMDgscmU9TmFOLGFlPVtbXCJhcnlcIixaXSxbXCJiaW5kXCIsV10sW1wiYmluZEtleVwiLEhdLFtcImN1cnJ5XCIsR10sW1wiY3VycnlSaWdodFwiLCRdLFtcImZsaXBcIixYXSxbXCJwYXJ0aWFsXCIsWV0sW1wicGFydGlhbFJpZ2h0XCIsUV0sW1wicmVhcmdcIiwyNTZdXSxvZT1cIltvYmplY3QgRnVuY3Rpb25dXCIsaWU9XCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiLHNlPVwiW29iamVjdCBTeW1ib2xdXCIsdWU9L1tcXFxcXiQuKis/KClbXFxde318XS9nLGxlPS9eXFxzK3xcXHMrJC9nLGNlPS9cXHsoPzpcXG5cXC9cXCogXFxbd3JhcHBlZCB3aXRoIC4rXFxdIFxcKlxcLyk/XFxuPy8sZmU9L1xce1xcblxcL1xcKiBcXFt3cmFwcGVkIHdpdGggKC4rKVxcXSBcXCovLGRlPS8sPyAmIC8scGU9L15bLStdMHhbMC05YS1mXSskL2ksYmU9L14wYlswMV0rJC9pLGhlPS9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC8seWU9L14wb1swLTddKyQvaSx2ZT0vXig/OjB8WzEtOV1cXGQqKSQvLG1lPXBhcnNlSW50LGdlPVwib2JqZWN0XCI9PXR5cGVvZiB0JiZ0JiZ0Lk9iamVjdD09PU9iamVjdCYmdCxfZT1cIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGYsamU9Z2V8fF9lfHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCksT2U9RnVuY3Rpb24ucHJvdG90eXBlLEVlPU9iamVjdC5wcm90b3R5cGUsd2U9amVbXCJfX2NvcmUtanNfc2hhcmVkX19cIl0seGU9ZnVuY3Rpb24oKXt2YXIgZT0vW14uXSskLy5leGVjKHdlJiZ3ZS5rZXlzJiZ3ZS5rZXlzLklFX1BST1RPfHxcIlwiKTtyZXR1cm4gZT9cIlN5bWJvbChzcmMpXzEuXCIrZTpcIlwifSgpLENlPU9lLnRvU3RyaW5nLGtlPUVlLmhhc093blByb3BlcnR5LFBlPUVlLnRvU3RyaW5nLFNlPVJlZ0V4cChcIl5cIitDZS5jYWxsKGtlKS5yZXBsYWNlKHVlLFwiXFxcXCQmXCIpLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csXCIkMS4qP1wiKStcIiRcIiksTWU9T2JqZWN0LmNyZWF0ZSxBZT1NYXRoLm1heCxSZT1NYXRoLm1pbixGZT1mdW5jdGlvbigpe3ZhciBlPXgoT2JqZWN0LFwiZGVmaW5lUHJvcGVydHlcIiksdD14Lm5hbWU7cmV0dXJuIHQmJnQubGVuZ3RoPjI/ZTp2b2lkIDB9KCksRGU9RmU/ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXQrXCJcIjtyZXR1cm4gRmUoZSxcInRvU3RyaW5nXCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOnEoayhyLFIoQyhyKSxuKSkpfSl9OlY7Ri5wbGFjZWhvbGRlcj17fSxlLmV4cG9ydHM9Rn0pLmNhbGwodCxuKDUyKSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZS5kZWZhdWx0OmV9dC5fX2VzTW9kdWxlPSEwO3ZhciBhPW4oMTEzKTt0LnRocmVlemVyb3R3b2ZvdXI9cihhKTt2YXIgbz1uKDExNCk7dC5hcGF0aHk9cihvKTt2YXIgaT1uKDExNSk7dC5hc2hlcz1yKGkpO3ZhciBzPW4oMTE2KTt0LmF0ZWxpZXJEdW5lPXIocyk7dmFyIHU9bigxMTcpO3QuYXRlbGllckZvcmVzdD1yKHUpO3ZhciBsPW4oMTE4KTt0LmF0ZWxpZXJIZWF0aD1yKGwpO3ZhciBjPW4oMTE5KTt0LmF0ZWxpZXJMYWtlc2lkZT1yKGMpO3ZhciBmPW4oMTIwKTt0LmF0ZWxpZXJTZWFzaWRlPXIoZik7dmFyIGQ9bigxMjEpO3QuYmVzcGluPXIoZCk7dmFyIHA9bigxMjIpO3QuYnJld2VyPXIocCk7dmFyIGI9bigxMjMpO3QuYnJpZ2h0PXIoYik7dmFyIGg9bigxMjQpO3QuY2hhbGs9cihoKTt2YXIgeT1uKDEyNSk7dC5jb2Rlc2Nob29sPXIoeSk7dmFyIHY9bigxMjYpO3QuY29sb3JzPXIodik7dmFyIG09bigxMjcpO3QuZGVmYXVsdD1yKG0pO3ZhciBnPW4oMTI4KTt0LmVpZ2h0aWVzPXIoZyk7dmFyIF89bigxMjkpO3QuZW1iZXJzPXIoXyk7dmFyIGo9bigxMzApO3QuZmxhdD1yKGopO3ZhciBPPW4oMTMxKTt0Lmdvb2dsZT1yKE8pO3ZhciBFPW4oMTMyKTt0LmdyYXlzY2FsZT1yKEUpO3ZhciB3PW4oMTMzKTt0LmdyZWVuc2NyZWVuPXIodyk7dmFyIHg9bigxMzQpO3QuaGFybW9uaWM9cih4KTt2YXIgQz1uKDEzNSk7dC5ob3BzY290Y2g9cihDKTt2YXIgaz1uKDEzNik7dC5pc290b3BlPXIoayk7dmFyIFA9bigxMzcpO3QubWFycmFrZXNoPXIoUCk7dmFyIFM9bigxMzgpO3QubW9jaGE9cihTKTt2YXIgTT1uKDEzOSk7dC5tb25va2FpPXIoTSk7dmFyIEE9bigxNDApO3Qub2NlYW49cihBKTt2YXIgUj1uKDE0MSk7dC5wYXJhaXNvPXIoUik7dmFyIEY9bigxNDIpO3QucG9wPXIoRik7dmFyIEQ9bigxNDMpO3QucmFpbHNjYXN0cz1yKEQpO3ZhciBUPW4oMTQ0KTt0LnNoYXBlc2hpZnRlcj1yKFQpO3ZhciBJPW4oMTQ1KTt0LnNvbGFyaXplZD1yKEkpO3ZhciBMPW4oMTQ2KTt0LnN1bW1lcmZydWl0PXIoTCk7dmFyIEI9bigxNDcpO3QudG9tb3Jyb3c9cihCKTt2YXIgTj1uKDE0OCk7dC50dWJlPXIoTik7dmFyIHo9bigxNDkpO3QudHdpbGlnaHQ9cih6KX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInRocmVlemVyb3R3b2ZvdXJcIixhdXRob3I6XCJqYW4gdC4gc290dCAoaHR0cDovL2dpdGh1Yi5jb20vaWRsZWJlcmcpXCIsYmFzZTAwOlwiIzA5MDMwMFwiLGJhc2UwMTpcIiMzYTM0MzJcIixiYXNlMDI6XCIjNGE0NTQzXCIsYmFzZTAzOlwiIzVjNTg1NVwiLGJhc2UwNDpcIiM4MDdkN2NcIixiYXNlMDU6XCIjYTVhMmEyXCIsYmFzZTA2OlwiI2Q2ZDVkNFwiLGJhc2UwNzpcIiNmN2Y3ZjdcIixiYXNlMDg6XCIjZGIyZDIwXCIsYmFzZTA5OlwiI2U4YmJkMFwiLGJhc2UwQTpcIiNmZGVkMDJcIixiYXNlMEI6XCIjMDFhMjUyXCIsYmFzZTBDOlwiI2I1ZTRmNFwiLGJhc2UwRDpcIiMwMWEwZTRcIixiYXNlMEU6XCIjYTE2YTk0XCIsYmFzZTBGOlwiI2NkYWI1M1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYXBhdGh5XCIsYXV0aG9yOlwiamFubmlrIHNpZWJlcnQgKGh0dHBzOi8vZ2l0aHViLmNvbS9qYW5uaWtzKVwiLGJhc2UwMDpcIiMwMzFBMTZcIixiYXNlMDE6XCIjMEIzNDJEXCIsYmFzZTAyOlwiIzE4NEU0NVwiLGJhc2UwMzpcIiMyQjY4NUVcIixiYXNlMDQ6XCIjNUY5QzkyXCIsYmFzZTA1OlwiIzgxQjVBQ1wiLGJhc2UwNjpcIiNBN0NFQzhcIixiYXNlMDc6XCIjRDJFN0U0XCIsYmFzZTA4OlwiIzNFOTY4OFwiLGJhc2UwOTpcIiMzRTc5OTZcIixiYXNlMEE6XCIjM0U0Qzk2XCIsYmFzZTBCOlwiIzg4M0U5NlwiLGJhc2UwQzpcIiM5NjNFNENcIixiYXNlMEQ6XCIjOTY4ODNFXCIsYmFzZTBFOlwiIzRDOTYzRVwiLGJhc2UwRjpcIiMzRTk2NUJcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImFzaGVzXCIsYXV0aG9yOlwiamFubmlrIHNpZWJlcnQgKGh0dHBzOi8vZ2l0aHViLmNvbS9qYW5uaWtzKVwiLGJhc2UwMDpcIiMxQzIwMjNcIixiYXNlMDE6XCIjMzkzRjQ1XCIsYmFzZTAyOlwiIzU2NUU2NVwiLGJhc2UwMzpcIiM3NDdDODRcIixiYXNlMDQ6XCIjQURCM0JBXCIsYmFzZTA1OlwiI0M3Q0NEMVwiLGJhc2UwNjpcIiNERkUyRTVcIixiYXNlMDc6XCIjRjNGNEY1XCIsYmFzZTA4OlwiI0M3QUU5NVwiLGJhc2UwOTpcIiNDN0M3OTVcIixiYXNlMEE6XCIjQUVDNzk1XCIsYmFzZTBCOlwiIzk1QzdBRVwiLGJhc2UwQzpcIiM5NUFFQzdcIixiYXNlMEQ6XCIjQUU5NUM3XCIsYmFzZTBFOlwiI0M3OTVBRVwiLGJhc2UwRjpcIiNDNzk1OTVcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImF0ZWxpZXIgZHVuZVwiLGF1dGhvcjpcImJyYW0gZGUgaGFhbiAoaHR0cDovL2F0ZWxpZXJicmFtLmdpdGh1Yi5pby9zeW50YXgtaGlnaGxpZ2h0aW5nL2F0ZWxpZXItc2NoZW1lcy9kdW5lKVwiLGJhc2UwMDpcIiMyMDIwMWRcIixiYXNlMDE6XCIjMjkyODI0XCIsYmFzZTAyOlwiIzZlNmI1ZVwiLGJhc2UwMzpcIiM3ZDdhNjhcIixiYXNlMDQ6XCIjOTk5NTgwXCIsYmFzZTA1OlwiI2E2YTI4Y1wiLGJhc2UwNjpcIiNlOGU0Y2ZcIixiYXNlMDc6XCIjZmVmYmVjXCIsYmFzZTA4OlwiI2Q3MzczN1wiLGJhc2UwOTpcIiNiNjU2MTFcIixiYXNlMEE6XCIjY2ZiMDE3XCIsYmFzZTBCOlwiIzYwYWMzOVwiLGJhc2UwQzpcIiMxZmFkODNcIixiYXNlMEQ6XCIjNjY4NGUxXCIsYmFzZTBFOlwiI2I4NTRkNFwiLGJhc2UwRjpcIiNkNDM1NTJcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImF0ZWxpZXIgZm9yZXN0XCIsYXV0aG9yOlwiYnJhbSBkZSBoYWFuIChodHRwOi8vYXRlbGllcmJyYW0uZ2l0aHViLmlvL3N5bnRheC1oaWdobGlnaHRpbmcvYXRlbGllci1zY2hlbWVzL2ZvcmVzdClcIixiYXNlMDA6XCIjMWIxOTE4XCIsYmFzZTAxOlwiIzJjMjQyMVwiLGJhc2UwMjpcIiM2ODYxNWVcIixiYXNlMDM6XCIjNzY2ZTZiXCIsYmFzZTA0OlwiIzljOTQ5MVwiLGJhc2UwNTpcIiNhOGExOWZcIixiYXNlMDY6XCIjZTZlMmUwXCIsYmFzZTA3OlwiI2YxZWZlZVwiLGJhc2UwODpcIiNmMjJjNDBcIixiYXNlMDk6XCIjZGY1MzIwXCIsYmFzZTBBOlwiI2Q1OTExYVwiLGJhc2UwQjpcIiM1YWI3MzhcIixiYXNlMEM6XCIjMDBhZDljXCIsYmFzZTBEOlwiIzQwN2VlN1wiLGJhc2UwRTpcIiM2NjY2ZWFcIixiYXNlMEY6XCIjYzMzZmYzXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJhdGVsaWVyIGhlYXRoXCIsYXV0aG9yOlwiYnJhbSBkZSBoYWFuIChodHRwOi8vYXRlbGllcmJyYW0uZ2l0aHViLmlvL3N5bnRheC1oaWdobGlnaHRpbmcvYXRlbGllci1zY2hlbWVzL2hlYXRoKVwiLGJhc2UwMDpcIiMxYjE4MWJcIixiYXNlMDE6XCIjMjkyMzI5XCIsYmFzZTAyOlwiIzY5NWQ2OVwiLGJhc2UwMzpcIiM3NzY5NzdcIixiYXNlMDQ6XCIjOWU4ZjllXCIsYmFzZTA1OlwiI2FiOWJhYlwiLGJhc2UwNjpcIiNkOGNhZDhcIixiYXNlMDc6XCIjZjdmM2Y3XCIsYmFzZTA4OlwiI2NhNDAyYlwiLGJhc2UwOTpcIiNhNjU5MjZcIixiYXNlMEE6XCIjYmI4YTM1XCIsYmFzZTBCOlwiIzM3OWEzN1wiLGJhc2UwQzpcIiMxNTkzOTNcIixiYXNlMEQ6XCIjNTE2YWVjXCIsYmFzZTBFOlwiIzdiNTljMFwiLGJhc2UwRjpcIiNjYzMzY2NcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImF0ZWxpZXIgbGFrZXNpZGVcIixhdXRob3I6XCJicmFtIGRlIGhhYW4gKGh0dHA6Ly9hdGVsaWVyYnJhbS5naXRodWIuaW8vc3ludGF4LWhpZ2hsaWdodGluZy9hdGVsaWVyLXNjaGVtZXMvbGFrZXNpZGUvKVwiLGJhc2UwMDpcIiMxNjFiMWRcIixiYXNlMDE6XCIjMWYyOTJlXCIsYmFzZTAyOlwiIzUxNmQ3YlwiLGJhc2UwMzpcIiM1YTdiOGNcIixiYXNlMDQ6XCIjNzE5NWE4XCIsYmFzZTA1OlwiIzdlYTJiNFwiLGJhc2UwNjpcIiNjMWU0ZjZcIixiYXNlMDc6XCIjZWJmOGZmXCIsYmFzZTA4OlwiI2QyMmQ3MlwiLGJhc2UwOTpcIiM5MzVjMjVcIixiYXNlMEE6XCIjOGE4YTBmXCIsYmFzZTBCOlwiIzU2OGMzYlwiLGJhc2UwQzpcIiMyZDhmNmZcIixiYXNlMEQ6XCIjMjU3ZmFkXCIsYmFzZTBFOlwiIzVkNWRiMVwiLGJhc2UwRjpcIiNiNzJkZDJcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImF0ZWxpZXIgc2Vhc2lkZVwiLGF1dGhvcjpcImJyYW0gZGUgaGFhbiAoaHR0cDovL2F0ZWxpZXJicmFtLmdpdGh1Yi5pby9zeW50YXgtaGlnaGxpZ2h0aW5nL2F0ZWxpZXItc2NoZW1lcy9zZWFzaWRlLylcIixiYXNlMDA6XCIjMTMxNTEzXCIsYmFzZTAxOlwiIzI0MjkyNFwiLGJhc2UwMjpcIiM1ZTZlNWVcIixiYXNlMDM6XCIjNjg3ZDY4XCIsYmFzZTA0OlwiIzgwOTk4MFwiLGJhc2UwNTpcIiM4Y2E2OGNcIixiYXNlMDY6XCIjY2ZlOGNmXCIsYmFzZTA3OlwiI2YwZmZmMFwiLGJhc2UwODpcIiNlNjE5M2NcIixiYXNlMDk6XCIjODc3MTFkXCIsYmFzZTBBOlwiI2MzYzMyMlwiLGJhc2UwQjpcIiMyOWEzMjlcIixiYXNlMEM6XCIjMTk5OWIzXCIsYmFzZTBEOlwiIzNkNjJmNVwiLGJhc2UwRTpcIiNhZDJiZWVcIixiYXNlMEY6XCIjZTYxOWMzXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJiZXNwaW5cIixhdXRob3I6XCJqYW4gdC4gc290dFwiLGJhc2UwMDpcIiMyODIxMWNcIixiYXNlMDE6XCIjMzYzMTJlXCIsYmFzZTAyOlwiIzVlNWQ1Y1wiLGJhc2UwMzpcIiM2NjY2NjZcIixiYXNlMDQ6XCIjNzk3OTc3XCIsYmFzZTA1OlwiIzhhODk4NlwiLGJhc2UwNjpcIiM5ZDliOTdcIixiYXNlMDc6XCIjYmFhZTllXCIsYmFzZTA4OlwiI2NmNmE0Y1wiLGJhc2UwOTpcIiNjZjdkMzRcIixiYXNlMEE6XCIjZjllZTk4XCIsYmFzZTBCOlwiIzU0YmUwZFwiLGJhc2UwQzpcIiNhZmM0ZGJcIixiYXNlMEQ6XCIjNWVhNmVhXCIsYmFzZTBFOlwiIzliODU5ZFwiLGJhc2UwRjpcIiM5MzcxMjFcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImJyZXdlclwiLGF1dGhvcjpcInRpbW90aMOpZSBwb2lzb3QgKGh0dHA6Ly9naXRodWIuY29tL3Rwb2lzb3QpXCIsYmFzZTAwOlwiIzBjMGQwZVwiLGJhc2UwMTpcIiMyZTJmMzBcIixiYXNlMDI6XCIjNTE1MjUzXCIsYmFzZTAzOlwiIzczNzQ3NVwiLGJhc2UwNDpcIiM5NTk2OTdcIixiYXNlMDU6XCIjYjdiOGI5XCIsYmFzZTA2OlwiI2RhZGJkY1wiLGJhc2UwNzpcIiNmY2ZkZmVcIixiYXNlMDg6XCIjZTMxYTFjXCIsYmFzZTA5OlwiI2U2NTUwZFwiLGJhc2UwQTpcIiNkY2EwNjBcIixiYXNlMEI6XCIjMzFhMzU0XCIsYmFzZTBDOlwiIzgwYjFkM1wiLGJhc2UwRDpcIiMzMTgyYmRcIixiYXNlMEU6XCIjNzU2YmIxXCIsYmFzZTBGOlwiI2IxNTkyOFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiYnJpZ2h0XCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzAwMDAwMFwiLGJhc2UwMTpcIiMzMDMwMzBcIixiYXNlMDI6XCIjNTA1MDUwXCIsYmFzZTAzOlwiI2IwYjBiMFwiLGJhc2UwNDpcIiNkMGQwZDBcIixiYXNlMDU6XCIjZTBlMGUwXCIsYmFzZTA2OlwiI2Y1ZjVmNVwiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjZmIwMTIwXCIsYmFzZTA5OlwiI2ZjNmQyNFwiLGJhc2UwQTpcIiNmZGEzMzFcIixiYXNlMEI6XCIjYTFjNjU5XCIsYmFzZTBDOlwiIzc2YzdiN1wiLGJhc2UwRDpcIiM2ZmIzZDJcIixiYXNlMEU6XCIjZDM4MWMzXCIsYmFzZTBGOlwiI2JlNjQzY1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiY2hhbGtcIixhdXRob3I6XCJjaHJpcyBrZW1wc29uIChodHRwOi8vY2hyaXNrZW1wc29uLmNvbSlcIixiYXNlMDA6XCIjMTUxNTE1XCIsYmFzZTAxOlwiIzIwMjAyMFwiLGJhc2UwMjpcIiMzMDMwMzBcIixiYXNlMDM6XCIjNTA1MDUwXCIsYmFzZTA0OlwiI2IwYjBiMFwiLGJhc2UwNTpcIiNkMGQwZDBcIixiYXNlMDY6XCIjZTBlMGUwXCIsYmFzZTA3OlwiI2Y1ZjVmNVwiLGJhc2UwODpcIiNmYjlmYjFcIixiYXNlMDk6XCIjZWRhOTg3XCIsYmFzZTBBOlwiI2RkYjI2ZlwiLGJhc2UwQjpcIiNhY2MyNjdcIixiYXNlMEM6XCIjMTJjZmMwXCIsYmFzZTBEOlwiIzZmYzJlZlwiLGJhc2UwRTpcIiNlMWEzZWVcIixiYXNlMEY6XCIjZGVhZjhmXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJjb2Rlc2Nob29sXCIsYXV0aG9yOlwiYnJldHRvZjg2XCIsYmFzZTAwOlwiIzIzMmMzMVwiLGJhc2UwMTpcIiMxYzM2NTdcIixiYXNlMDI6XCIjMmEzNDNhXCIsYmFzZTAzOlwiIzNmNDk0NFwiLGJhc2UwNDpcIiM4NDg5OGNcIixiYXNlMDU6XCIjOWVhN2E2XCIsYmFzZTA2OlwiI2E3Y2ZhM1wiLGJhc2UwNzpcIiNiNWQ4ZjZcIixiYXNlMDg6XCIjMmE1NDkxXCIsYmFzZTA5OlwiIzQzODIwZFwiLGJhc2UwQTpcIiNhMDNiMWVcIixiYXNlMEI6XCIjMjM3OTg2XCIsYmFzZTBDOlwiI2IwMmYzMFwiLGJhc2UwRDpcIiM0ODRkNzlcIixiYXNlMEU6XCIjYzU5ODIwXCIsYmFzZTBGOlwiI2M5ODM0NFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiY29sb3JzXCIsYXV0aG9yOlwibXJtcnMgKGh0dHA6Ly9jbHJzLmNjKVwiLGJhc2UwMDpcIiMxMTExMTFcIixiYXNlMDE6XCIjMzMzMzMzXCIsYmFzZTAyOlwiIzU1NTU1NVwiLGJhc2UwMzpcIiM3Nzc3NzdcIixiYXNlMDQ6XCIjOTk5OTk5XCIsYmFzZTA1OlwiI2JiYmJiYlwiLGJhc2UwNjpcIiNkZGRkZGRcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2ZmNDEzNlwiLGJhc2UwOTpcIiNmZjg1MWJcIixiYXNlMEE6XCIjZmZkYzAwXCIsYmFzZTBCOlwiIzJlY2M0MFwiLGJhc2UwQzpcIiM3ZmRiZmZcIixiYXNlMEQ6XCIjMDA3NGQ5XCIsYmFzZTBFOlwiI2IxMGRjOVwiLGJhc2UwRjpcIiM4NTE0NGJcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImRlZmF1bHRcIixhdXRob3I6XCJjaHJpcyBrZW1wc29uIChodHRwOi8vY2hyaXNrZW1wc29uLmNvbSlcIixiYXNlMDA6XCIjMTgxODE4XCIsYmFzZTAxOlwiIzI4MjgyOFwiLGJhc2UwMjpcIiMzODM4MzhcIixiYXNlMDM6XCIjNTg1ODU4XCIsYmFzZTA0OlwiI2I4YjhiOFwiLGJhc2UwNTpcIiNkOGQ4ZDhcIixiYXNlMDY6XCIjZThlOGU4XCIsYmFzZTA3OlwiI2Y4ZjhmOFwiLGJhc2UwODpcIiNhYjQ2NDJcIixiYXNlMDk6XCIjZGM5NjU2XCIsYmFzZTBBOlwiI2Y3Y2E4OFwiLGJhc2UwQjpcIiNhMWI1NmNcIixiYXNlMEM6XCIjODZjMWI5XCIsYmFzZTBEOlwiIzdjYWZjMlwiLGJhc2UwRTpcIiNiYThiYWZcIixiYXNlMEY6XCIjYTE2OTQ2XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJlaWdodGllc1wiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMyZDJkMmRcIixiYXNlMDE6XCIjMzkzOTM5XCIsYmFzZTAyOlwiIzUxNTE1MVwiLGJhc2UwMzpcIiM3NDczNjlcIixiYXNlMDQ6XCIjYTA5ZjkzXCIsYmFzZTA1OlwiI2QzZDBjOFwiLGJhc2UwNjpcIiNlOGU2ZGZcIixiYXNlMDc6XCIjZjJmMGVjXCIsYmFzZTA4OlwiI2YyNzc3YVwiLGJhc2UwOTpcIiNmOTkxNTdcIixiYXNlMEE6XCIjZmZjYzY2XCIsYmFzZTBCOlwiIzk5Y2M5OVwiLGJhc2UwQzpcIiM2NmNjY2NcIixiYXNlMEQ6XCIjNjY5OWNjXCIsYmFzZTBFOlwiI2NjOTljY1wiLGJhc2UwRjpcIiNkMjdiNTNcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImVtYmVyc1wiLGF1dGhvcjpcImphbm5payBzaWViZXJ0IChodHRwczovL2dpdGh1Yi5jb20vamFubmlrcylcIixiYXNlMDA6XCIjMTYxMzBGXCIsYmFzZTAxOlwiIzJDMjYyMFwiLGJhc2UwMjpcIiM0MzNCMzJcIixiYXNlMDM6XCIjNUE1MDQ3XCIsYmFzZTA0OlwiIzhBODA3NVwiLGJhc2UwNTpcIiNBMzlBOTBcIixiYXNlMDY6XCIjQkVCNkFFXCIsYmFzZTA3OlwiI0RCRDZEMVwiLGJhc2UwODpcIiM4MjZENTdcIixiYXNlMDk6XCIjODI4MjU3XCIsYmFzZTBBOlwiIzZEODI1N1wiLGJhc2UwQjpcIiM1NzgyNkRcIixiYXNlMEM6XCIjNTc2RDgyXCIsYmFzZTBEOlwiIzZENTc4MlwiLGJhc2UwRTpcIiM4MjU3NkRcIixiYXNlMEY6XCIjODI1NzU3XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJmbGF0XCIsYXV0aG9yOlwiY2hyaXMga2VtcHNvbiAoaHR0cDovL2Nocmlza2VtcHNvbi5jb20pXCIsYmFzZTAwOlwiIzJDM0U1MFwiLGJhc2UwMTpcIiMzNDQ5NUVcIixiYXNlMDI6XCIjN0Y4QzhEXCIsYmFzZTAzOlwiIzk1QTVBNlwiLGJhc2UwNDpcIiNCREMzQzdcIixiYXNlMDU6XCIjZTBlMGUwXCIsYmFzZTA2OlwiI2Y1ZjVmNVwiLGJhc2UwNzpcIiNFQ0YwRjFcIixiYXNlMDg6XCIjRTc0QzNDXCIsYmFzZTA5OlwiI0U2N0UyMlwiLGJhc2UwQTpcIiNGMUM0MEZcIixiYXNlMEI6XCIjMkVDQzcxXCIsYmFzZTBDOlwiIzFBQkM5Q1wiLGJhc2UwRDpcIiMzNDk4REJcIixiYXNlMEU6XCIjOUI1OUI2XCIsYmFzZTBGOlwiI2JlNjQzY1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiZ29vZ2xlXCIsYXV0aG9yOlwic2V0aCB3cmlnaHQgKGh0dHA6Ly9zZXRoYXdyaWdodC5jb20pXCIsYmFzZTAwOlwiIzFkMWYyMVwiLGJhc2UwMTpcIiMyODJhMmVcIixiYXNlMDI6XCIjMzczYjQxXCIsYmFzZTAzOlwiIzk2OTg5NlwiLGJhc2UwNDpcIiNiNGI3YjRcIixiYXNlMDU6XCIjYzVjOGM2XCIsYmFzZTA2OlwiI2UwZTBlMFwiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjQ0MzNDJCXCIsYmFzZTA5OlwiI0Y5NkEzOFwiLGJhc2UwQTpcIiNGQkE5MjJcIixiYXNlMEI6XCIjMTk4ODQ0XCIsYmFzZTBDOlwiIzM5NzFFRFwiLGJhc2UwRDpcIiMzOTcxRURcIixiYXNlMEU6XCIjQTM2QUM3XCIsYmFzZTBGOlwiIzM5NzFFRFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiZ3JheXNjYWxlXCIsYXV0aG9yOlwiYWxleGFuZHJlIGdhdmlvbGkgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4eDIvKVwiLGJhc2UwMDpcIiMxMDEwMTBcIixiYXNlMDE6XCIjMjUyNTI1XCIsYmFzZTAyOlwiIzQ2NDY0NlwiLGJhc2UwMzpcIiM1MjUyNTJcIixiYXNlMDQ6XCIjYWJhYmFiXCIsYmFzZTA1OlwiI2I5YjliOVwiLGJhc2UwNjpcIiNlM2UzZTNcIixiYXNlMDc6XCIjZjdmN2Y3XCIsYmFzZTA4OlwiIzdjN2M3Y1wiLGJhc2UwOTpcIiM5OTk5OTlcIixiYXNlMEE6XCIjYTBhMGEwXCIsYmFzZTBCOlwiIzhlOGU4ZVwiLGJhc2UwQzpcIiM4Njg2ODZcIixiYXNlMEQ6XCIjNjg2ODY4XCIsYmFzZTBFOlwiIzc0NzQ3NFwiLGJhc2UwRjpcIiM1ZTVlNWVcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImdyZWVuIHNjcmVlblwiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMwMDExMDBcIixiYXNlMDE6XCIjMDAzMzAwXCIsYmFzZTAyOlwiIzAwNTUwMFwiLGJhc2UwMzpcIiMwMDc3MDBcIixiYXNlMDQ6XCIjMDA5OTAwXCIsYmFzZTA1OlwiIzAwYmIwMFwiLGJhc2UwNjpcIiMwMGRkMDBcIixiYXNlMDc6XCIjMDBmZjAwXCIsYmFzZTA4OlwiIzAwNzcwMFwiLGJhc2UwOTpcIiMwMDk5MDBcIixiYXNlMEE6XCIjMDA3NzAwXCIsYmFzZTBCOlwiIzAwYmIwMFwiLGJhc2UwQzpcIiMwMDU1MDBcIixiYXNlMEQ6XCIjMDA5OTAwXCIsYmFzZTBFOlwiIzAwYmIwMFwiLGJhc2UwRjpcIiMwMDU1MDBcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcImhhcm1vbmljMTZcIixhdXRob3I6XCJqYW5uaWsgc2llYmVydCAoaHR0cHM6Ly9naXRodWIuY29tL2phbm5pa3MpXCIsYmFzZTAwOlwiIzBiMWMyY1wiLGJhc2UwMTpcIiMyMjNiNTRcIixiYXNlMDI6XCIjNDA1Yzc5XCIsYmFzZTAzOlwiIzYyN2U5OVwiLGJhc2UwNDpcIiNhYWJjY2VcIixiYXNlMDU6XCIjY2JkNmUyXCIsYmFzZTA2OlwiI2U1ZWJmMVwiLGJhc2UwNzpcIiNmN2Y5ZmJcIixiYXNlMDg6XCIjYmY4YjU2XCIsYmFzZTA5OlwiI2JmYmY1NlwiLGJhc2UwQTpcIiM4YmJmNTZcIixiYXNlMEI6XCIjNTZiZjhiXCIsYmFzZTBDOlwiIzU2OGJiZlwiLGJhc2UwRDpcIiM4YjU2YmZcIixiYXNlMEU6XCIjYmY1NjhiXCIsYmFzZTBGOlwiI2JmNTY1NlwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwiaG9wc2NvdGNoXCIsYXV0aG9yOlwiamFuIHQuIHNvdHRcIixiYXNlMDA6XCIjMzIyOTMxXCIsYmFzZTAxOlwiIzQzM2I0MlwiLGJhc2UwMjpcIiM1YzU0NWJcIixiYXNlMDM6XCIjNzk3Mzc5XCIsYmFzZTA0OlwiIzk4OTQ5OFwiLGJhc2UwNTpcIiNiOWI1YjhcIixiYXNlMDY6XCIjZDVkM2Q1XCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNkZDQ2NGNcIixiYXNlMDk6XCIjZmQ4YjE5XCIsYmFzZTBBOlwiI2ZkY2M1OVwiLGJhc2UwQjpcIiM4ZmMxM2VcIixiYXNlMEM6XCIjMTQ5YjkzXCIsYmFzZTBEOlwiIzEyOTBiZlwiLGJhc2UwRTpcIiNjODVlN2NcIixiYXNlMEY6XCIjYjMzNTA4XCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJpc290b3BlXCIsYXV0aG9yOlwiamFuIHQuIHNvdHRcIixiYXNlMDA6XCIjMDAwMDAwXCIsYmFzZTAxOlwiIzQwNDA0MFwiLGJhc2UwMjpcIiM2MDYwNjBcIixiYXNlMDM6XCIjODA4MDgwXCIsYmFzZTA0OlwiI2MwYzBjMFwiLGJhc2UwNTpcIiNkMGQwZDBcIixiYXNlMDY6XCIjZTBlMGUwXCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNmZjAwMDBcIixiYXNlMDk6XCIjZmY5OTAwXCIsYmFzZTBBOlwiI2ZmMDA5OVwiLGJhc2UwQjpcIiMzM2ZmMDBcIixiYXNlMEM6XCIjMDBmZmZmXCIsYmFzZTBEOlwiIzAwNjZmZlwiLGJhc2UwRTpcIiNjYzAwZmZcIixiYXNlMEY6XCIjMzMwMGZmXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJtYXJyYWtlc2hcIixhdXRob3I6XCJhbGV4YW5kcmUgZ2F2aW9saSAoaHR0cDovL2dpdGh1Yi5jb20vYWxleHgyLylcIixiYXNlMDA6XCIjMjAxNjAyXCIsYmFzZTAxOlwiIzMwMmUwMFwiLGJhc2UwMjpcIiM1ZjViMTdcIixiYXNlMDM6XCIjNmM2ODIzXCIsYmFzZTA0OlwiIzg2ODEzYlwiLGJhc2UwNTpcIiM5NDhlNDhcIixiYXNlMDY6XCIjY2NjMzdhXCIsYmFzZTA3OlwiI2ZhZjBhNVwiLGJhc2UwODpcIiNjMzUzNTlcIixiYXNlMDk6XCIjYjM2MTQ0XCIsYmFzZTBBOlwiI2E4ODMzOVwiLGJhc2UwQjpcIiMxODk3NGVcIixiYXNlMEM6XCIjNzVhNzM4XCIsYmFzZTBEOlwiIzQ3N2NhMVwiLGJhc2UwRTpcIiM4ODY4YjNcIixiYXNlMEY6XCIjYjM1ODhlXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJtb2NoYVwiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMzQjMyMjhcIixiYXNlMDE6XCIjNTM0NjM2XCIsYmFzZTAyOlwiIzY0NTI0MFwiLGJhc2UwMzpcIiM3ZTcwNWFcIixiYXNlMDQ6XCIjYjhhZmFkXCIsYmFzZTA1OlwiI2QwYzhjNlwiLGJhc2UwNjpcIiNlOWUxZGRcIixiYXNlMDc6XCIjZjVlZWViXCIsYmFzZTA4OlwiI2NiNjA3N1wiLGJhc2UwOTpcIiNkMjhiNzFcIixiYXNlMEE6XCIjZjRiYzg3XCIsYmFzZTBCOlwiI2JlYjU1YlwiLGJhc2UwQzpcIiM3YmJkYTRcIixiYXNlMEQ6XCIjOGFiM2I1XCIsYmFzZTBFOlwiI2E4OWJiOVwiLGJhc2UwRjpcIiNiYjk1ODRcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcIm1vbm9rYWlcIixhdXRob3I6XCJ3aW1lciBoYXplbmJlcmcgKGh0dHA6Ly93d3cubW9ub2thaS5ubClcIixiYXNlMDA6XCIjMjcyODIyXCIsYmFzZTAxOlwiIzM4MzgzMFwiLGJhc2UwMjpcIiM0OTQ4M2VcIixiYXNlMDM6XCIjNzU3MTVlXCIsYmFzZTA0OlwiI2E1OWY4NVwiLGJhc2UwNTpcIiNmOGY4ZjJcIixiYXNlMDY6XCIjZjVmNGYxXCIsYmFzZTA3OlwiI2Y5ZjhmNVwiLGJhc2UwODpcIiNmOTI2NzJcIixiYXNlMDk6XCIjZmQ5NzFmXCIsYmFzZTBBOlwiI2Y0YmY3NVwiLGJhc2UwQjpcIiNhNmUyMmVcIixiYXNlMEM6XCIjYTFlZmU0XCIsYmFzZTBEOlwiIzY2ZDllZlwiLGJhc2UwRTpcIiNhZTgxZmZcIixiYXNlMEY6XCIjY2M2NjMzXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJvY2VhblwiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMyYjMwM2JcIixiYXNlMDE6XCIjMzQzZDQ2XCIsYmFzZTAyOlwiIzRmNWI2NlwiLGJhc2UwMzpcIiM2NTczN2VcIixiYXNlMDQ6XCIjYTdhZGJhXCIsYmFzZTA1OlwiI2MwYzVjZVwiLGJhc2UwNjpcIiNkZmUxZThcIixiYXNlMDc6XCIjZWZmMWY1XCIsYmFzZTA4OlwiI2JmNjE2YVwiLGJhc2UwOTpcIiNkMDg3NzBcIixiYXNlMEE6XCIjZWJjYjhiXCIsYmFzZTBCOlwiI2EzYmU4Y1wiLGJhc2UwQzpcIiM5NmI1YjRcIixiYXNlMEQ6XCIjOGZhMWIzXCIsYmFzZTBFOlwiI2I0OGVhZFwiLGJhc2UwRjpcIiNhYjc5NjdcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInBhcmFpc29cIixhdXRob3I6XCJqYW4gdC4gc290dFwiLGJhc2UwMDpcIiMyZjFlMmVcIixiYXNlMDE6XCIjNDEzMjNmXCIsYmFzZTAyOlwiIzRmNDI0Y1wiLGJhc2UwMzpcIiM3NzZlNzFcIixiYXNlMDQ6XCIjOGQ4Njg3XCIsYmFzZTA1OlwiI2EzOWU5YlwiLGJhc2UwNjpcIiNiOWI2YjBcIixiYXNlMDc6XCIjZTdlOWRiXCIsYmFzZTA4OlwiI2VmNjE1NVwiLGJhc2UwOTpcIiNmOTliMTVcIixiYXNlMEE6XCIjZmVjNDE4XCIsYmFzZTBCOlwiIzQ4YjY4NVwiLGJhc2UwQzpcIiM1YmM0YmZcIixiYXNlMEQ6XCIjMDZiNmVmXCIsYmFzZTBFOlwiIzgxNWJhNFwiLGJhc2UwRjpcIiNlOTZiYThcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInBvcFwiLGF1dGhvcjpcImNocmlzIGtlbXBzb24gKGh0dHA6Ly9jaHJpc2tlbXBzb24uY29tKVwiLGJhc2UwMDpcIiMwMDAwMDBcIixiYXNlMDE6XCIjMjAyMDIwXCIsYmFzZTAyOlwiIzMwMzAzMFwiLGJhc2UwMzpcIiM1MDUwNTBcIixiYXNlMDQ6XCIjYjBiMGIwXCIsYmFzZTA1OlwiI2QwZDBkMFwiLGJhc2UwNjpcIiNlMGUwZTBcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2ViMDA4YVwiLGJhc2UwOTpcIiNmMjkzMzNcIixiYXNlMEE6XCIjZjhjYTEyXCIsYmFzZTBCOlwiIzM3YjM0OVwiLGJhc2UwQzpcIiMwMGFhYmJcIixiYXNlMEQ6XCIjMGU1YTk0XCIsYmFzZTBFOlwiI2IzMWU4ZFwiLGJhc2UwRjpcIiM3YTJkMDBcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInJhaWxzY2FzdHNcIixhdXRob3I6XCJyeWFuIGJhdGVzIChodHRwOi8vcmFpbHNjYXN0cy5jb20pXCIsYmFzZTAwOlwiIzJiMmIyYlwiLGJhc2UwMTpcIiMyNzI5MzVcIixiYXNlMDI6XCIjM2E0MDU1XCIsYmFzZTAzOlwiIzVhNjQ3ZVwiLGJhc2UwNDpcIiNkNGNmYzlcIixiYXNlMDU6XCIjZTZlMWRjXCIsYmFzZTA2OlwiI2Y0ZjFlZFwiLGJhc2UwNzpcIiNmOWY3ZjNcIixiYXNlMDg6XCIjZGE0OTM5XCIsYmFzZTA5OlwiI2NjNzgzM1wiLGJhc2UwQTpcIiNmZmM2NmRcIixiYXNlMEI6XCIjYTVjMjYxXCIsYmFzZTBDOlwiIzUxOWY1MFwiLGJhc2UwRDpcIiM2ZDljYmVcIixiYXNlMEU6XCIjYjZiM2ViXCIsYmFzZTBGOlwiI2JjOTQ1OFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwic2hhcGVzaGlmdGVyXCIsYXV0aG9yOlwidHlsZXIgYmVuemlnZXIgKGh0dHA6Ly90eWJlbnouY29tKVwiLGJhc2UwMDpcIiMwMDAwMDBcIixiYXNlMDE6XCIjMDQwNDA0XCIsYmFzZTAyOlwiIzEwMjAxNVwiLGJhc2UwMzpcIiMzNDM0MzRcIixiYXNlMDQ6XCIjNTU1NTU1XCIsYmFzZTA1OlwiI2FiYWJhYlwiLGJhc2UwNjpcIiNlMGUwZTBcIixiYXNlMDc6XCIjZjlmOWY5XCIsYmFzZTA4OlwiI2U5MmYyZlwiLGJhc2UwOTpcIiNlMDk0NDhcIixiYXNlMEE6XCIjZGRkZDEzXCIsYmFzZTBCOlwiIzBlZDgzOVwiLGJhc2UwQzpcIiMyM2VkZGFcIixiYXNlMEQ6XCIjM2I0OGUzXCIsYmFzZTBFOlwiI2Y5OTZlMlwiLGJhc2UwRjpcIiM2OTU0MmRcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9e3NjaGVtZTpcInNvbGFyaXplZFwiLGF1dGhvcjpcImV0aGFuIHNjaG9vbm92ZXIgKGh0dHA6Ly9ldGhhbnNjaG9vbm92ZXIuY29tL3NvbGFyaXplZClcIixiYXNlMDA6XCIjMDAyYjM2XCIsYmFzZTAxOlwiIzA3MzY0MlwiLGJhc2UwMjpcIiM1ODZlNzVcIixiYXNlMDM6XCIjNjU3YjgzXCIsYmFzZTA0OlwiIzgzOTQ5NlwiLGJhc2UwNTpcIiM5M2ExYTFcIixiYXNlMDY6XCIjZWVlOGQ1XCIsYmFzZTA3OlwiI2ZkZjZlM1wiLGJhc2UwODpcIiNkYzMyMmZcIixiYXNlMDk6XCIjY2I0YjE2XCIsYmFzZTBBOlwiI2I1ODkwMFwiLGJhc2UwQjpcIiM4NTk5MDBcIixiYXNlMEM6XCIjMmFhMTk4XCIsYmFzZTBEOlwiIzI2OGJkMlwiLGJhc2UwRTpcIiM2YzcxYzRcIixiYXNlMEY6XCIjZDMzNjgyXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJzdW1tZXJmcnVpdFwiLGF1dGhvcjpcImNocmlzdG9waGVyIGNvcmxleSAoaHR0cDovL2NzY29ybGV5LmdpdGh1Yi5pby8pXCIsYmFzZTAwOlwiIzE1MTUxNVwiLGJhc2UwMTpcIiMyMDIwMjBcIixiYXNlMDI6XCIjMzAzMDMwXCIsYmFzZTAzOlwiIzUwNTA1MFwiLGJhc2UwNDpcIiNCMEIwQjBcIixiYXNlMDU6XCIjRDBEMEQwXCIsYmFzZTA2OlwiI0UwRTBFMFwiLGJhc2UwNzpcIiNGRkZGRkZcIixiYXNlMDg6XCIjRkYwMDg2XCIsYmFzZTA5OlwiI0ZEODkwMFwiLGJhc2UwQTpcIiNBQkE4MDBcIixiYXNlMEI6XCIjMDBDOTE4XCIsYmFzZTBDOlwiIzFmYWFhYVwiLGJhc2UwRDpcIiMzNzc3RTZcIixiYXNlMEU6XCIjQUQwMEExXCIsYmFzZTBGOlwiI2NjNjYzM1wifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwidG9tb3Jyb3dcIixhdXRob3I6XCJjaHJpcyBrZW1wc29uIChodHRwOi8vY2hyaXNrZW1wc29uLmNvbSlcIixiYXNlMDA6XCIjMWQxZjIxXCIsYmFzZTAxOlwiIzI4MmEyZVwiLGJhc2UwMjpcIiMzNzNiNDFcIixiYXNlMDM6XCIjOTY5ODk2XCIsYmFzZTA0OlwiI2I0YjdiNFwiLGJhc2UwNTpcIiNjNWM4YzZcIixiYXNlMDY6XCIjZTBlMGUwXCIsYmFzZTA3OlwiI2ZmZmZmZlwiLGJhc2UwODpcIiNjYzY2NjZcIixiYXNlMDk6XCIjZGU5MzVmXCIsYmFzZTBBOlwiI2YwYzY3NFwiLGJhc2UwQjpcIiNiNWJkNjhcIixiYXNlMEM6XCIjOGFiZWI3XCIsYmFzZTBEOlwiIzgxYTJiZVwiLGJhc2UwRTpcIiNiMjk0YmJcIixiYXNlMEY6XCIjYTM2ODVhXCJ9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PXtzY2hlbWU6XCJsb25kb24gdHViZVwiLGF1dGhvcjpcImphbiB0LiBzb3R0XCIsYmFzZTAwOlwiIzIzMWYyMFwiLGJhc2UwMTpcIiMxYzNmOTVcIixiYXNlMDI6XCIjNWE1NzU4XCIsYmFzZTAzOlwiIzczNzE3MVwiLGJhc2UwNDpcIiM5NTljYTFcIixiYXNlMDU6XCIjZDlkOGQ4XCIsYmFzZTA2OlwiI2U3ZTdlOFwiLGJhc2UwNzpcIiNmZmZmZmZcIixiYXNlMDg6XCIjZWUyZTI0XCIsYmFzZTA5OlwiI2YzODZhMVwiLGJhc2UwQTpcIiNmZmQyMDRcIixiYXNlMEI6XCIjMDA4NTNlXCIsYmFzZTBDOlwiIzg1Y2ViY1wiLGJhc2UwRDpcIiMwMDlkZGNcIixiYXNlMEU6XCIjOTgwMDVkXCIsYmFzZTBGOlwiI2IwNjExMFwifSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD17c2NoZW1lOlwidHdpbGlnaHRcIixhdXRob3I6XCJkYXZpZCBoYXJ0IChodHRwOi8vaGFydC1kZXYuY29tKVwiLGJhc2UwMDpcIiMxZTFlMWVcIixiYXNlMDE6XCIjMzIzNTM3XCIsYmFzZTAyOlwiIzQ2NGI1MFwiLGJhc2UwMzpcIiM1ZjVhNjBcIixiYXNlMDQ6XCIjODM4MTg0XCIsYmFzZTA1OlwiI2E3YTdhN1wiLGJhc2UwNjpcIiNjM2MzYzNcIixiYXNlMDc6XCIjZmZmZmZmXCIsYmFzZTA4OlwiI2NmNmE0Y1wiLGJhc2UwOTpcIiNjZGE4NjlcIixiYXNlMEE6XCIjZjllZTk4XCIsYmFzZTBCOlwiIzhmOWQ2YVwiLGJhc2UwQzpcIiNhZmM0ZGJcIixiYXNlMEQ6XCIjNzU4N2E2XCIsYmFzZTBFOlwiIzliODU5ZFwiLGJhc2UwRjpcIiM5YjcwM2ZcIn0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9TWF0aC5yb3VuZChvKGUsMCwyNTUpKSxuPXQudG9TdHJpbmcoMTYpO3JldHVybiAxPT1uLmxlbmd0aD9cIjBcIituOm59ZnVuY3Rpb24gYShlKXt2YXIgdD00PT09ZS5sZW5ndGg/cigyNTUqZVszXSk6XCJcIjtyZXR1cm5cIiNcIityKGVbMF0pK3IoZVsxXSkrcihlWzJdKSt0fXZhciBvPW4oNDApO2UuZXhwb3J0cz1hfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlKXt2YXIgdD1vKGUpLG49dSh0KTtyZXR1cm4gND09PXQubGVuZ3RoJiZuLnB1c2godFszXSksbn1mdW5jdGlvbiBhKGUpe2Zvcih2YXIgdCBpbiBsKWlmKDA9PT1lLmluZGV4T2YodCkpcmV0dXJuIGxbdF0oZSl9dmFyIG89bigxNTIpLGk9bigxNTMpLHM9bigxNTQpLHU9bigxNTUpLGw9e1wiI1wiOmksaHNsOnIscmdiOnN9O2EucmdiPXMsYS5oc2w9byxhLmhleD1pLGUuZXhwb3J0cz1hfSxmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3N3aXRjaChlPXBhcnNlRmxvYXQoZSksdCl7Y2FzZSAwOnJldHVybiBpKGUsMCwzNjApO2Nhc2UgMTpjYXNlIDI6cmV0dXJuIGkoZSwwLDEwMCk7Y2FzZSAzOnJldHVybiBpKGUsMCwxKX19ZnVuY3Rpb24gYShlKXtyZXR1cm4gbyhlKS5tYXAocil9dmFyIG89big1MyksaT1uKDQwKTtlLmV4cG9ydHM9YX0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKGUpe2Zvcih2YXIgdD1cIiNcIixuPTE7bjxlLmxlbmd0aDtuKyspe3ZhciByPWUuY2hhckF0KG4pO3QrPXIrcn1yZXR1cm4gdH1mdW5jdGlvbiByKGUpezQhPT1lLmxlbmd0aCYmNSE9PWUubGVuZ3RofHwoZT1uKGUpKTt2YXIgdD1bcGFyc2VJbnQoZS5zdWJzdHJpbmcoMSwzKSwxNikscGFyc2VJbnQoZS5zdWJzdHJpbmcoMyw1KSwxNikscGFyc2VJbnQoZS5zdWJzdHJpbmcoNSw3KSwxNildO2lmKDk9PT1lLmxlbmd0aCl7dmFyIHI9cGFyc2VGbG9hdCgocGFyc2VJbnQoZS5zdWJzdHJpbmcoNyw5KSwxNikvMjU1KS50b0ZpeGVkKDIpKTt0LnB1c2gocil9cmV0dXJuIHR9ZS5leHBvcnRzPXJ9LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCl7cmV0dXJuIHQ8Mz8tMSE9ZS5pbmRleE9mKFwiJVwiKT9NYXRoLnJvdW5kKDI1NSppKHBhcnNlSW50KGUsMTApLDAsMTAwKS8xMDApOmkocGFyc2VJbnQoZSwxMCksMCwyNTUpOmkocGFyc2VGbG9hdChlKSwwLDEpfWZ1bmN0aW9uIGEoZSl7cmV0dXJuIG8oZSkubWFwKHIpfXZhciBvPW4oNTMpLGk9big0MCk7ZS5leHBvcnRzPWF9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlKXt2YXIgdCxuLHIsYSxvLGk9ZVswXS8zNjAscz1lWzFdLzEwMCx1PWVbMl0vMTAwO2lmKDA9PXMpcmV0dXJuIG89MjU1KnUsW28sbyxvXTtuPXU8LjU/dSooMStzKTp1K3MtdSpzLHQ9Mip1LW4sYT1bMCwwLDBdO2Zvcih2YXIgbD0wO2w8MztsKyspcj1pKzEvMyotKGwtMSkscjwwJiZyKysscj4xJiZyLS0sbz02KnI8MT90KzYqKG4tdCkqcjoyKnI8MT9uOjMqcjwyP3QrKG4tdCkqKDIvMy1yKSo2OnQsYVtsXT0yNTUqbztyZXR1cm4gYX1lLmV4cG9ydHM9bn0sZnVuY3Rpb24oZSx0LG4peyhmdW5jdGlvbih0KXtmdW5jdGlvbiBuKGUsdCxuKXtzd2l0Y2gobi5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gZS5jYWxsKHQpO2Nhc2UgMTpyZXR1cm4gZS5jYWxsKHQsblswXSk7Y2FzZSAyOnJldHVybiBlLmNhbGwodCxuWzBdLG5bMV0pO2Nhc2UgMzpyZXR1cm4gZS5jYWxsKHQsblswXSxuWzFdLG5bMl0pfXJldHVybiBlLmFwcGx5KHQsbil9ZnVuY3Rpb24gcihlLHQpe2Zvcih2YXIgbj0tMSxyPXQubGVuZ3RoLGE9ZS5sZW5ndGg7KytuPHI7KWVbYStuXT10W25dO3JldHVybiBlfWZ1bmN0aW9uIGEoZSx0LG4sbyxzKXt2YXIgdT0tMSxsPWUubGVuZ3RoO2ZvcihufHwobj1pKSxzfHwocz1bXSk7Kyt1PGw7KXt2YXIgYz1lW3VdO3Q+MCYmbihjKT90PjE/YShjLHQtMSxuLG8scyk6cihzLGMpOm98fChzW3MubGVuZ3RoXT1jKX1yZXR1cm4gc31mdW5jdGlvbiBvKGUsdCl7cmV0dXJuIHQ9ayh2b2lkIDA9PT10P2UubGVuZ3RoLTE6dCwwKSxmdW5jdGlvbigpe2Zvcih2YXIgcj1hcmd1bWVudHMsYT0tMSxvPWsoci5sZW5ndGgtdCwwKSxpPUFycmF5KG8pOysrYTxvOylpW2FdPXJbdCthXTthPS0xO2Zvcih2YXIgcz1BcnJheSh0KzEpOysrYTx0OylzW2FdPXJbYV07cmV0dXJuIHNbdF09aSxuKGUsdGhpcyxzKX19ZnVuY3Rpb24gaShlKXtyZXR1cm4gUChlKXx8cyhlKXx8ISEoQyYmZSYmZVtDXSl9ZnVuY3Rpb24gcyhlKXtyZXR1cm4gbChlKSYmTy5jYWxsKGUsXCJjYWxsZWVcIikmJigheC5jYWxsKGUsXCJjYWxsZWVcIil8fEUuY2FsbChlKT09aCl9ZnVuY3Rpb24gdShlKXtyZXR1cm4gbnVsbCE9ZSYmZihlLmxlbmd0aCkmJiFjKGUpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIHAoZSkmJnUoZSl9ZnVuY3Rpb24gYyhlKXt2YXIgdD1kKGUpP0UuY2FsbChlKTpcIlwiO3JldHVybiB0PT15fHx0PT12fWZ1bmN0aW9uIGYoZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGUmJmU+LTEmJmUlMT09MCYmZTw9Yn1mdW5jdGlvbiBkKGUpe3ZhciB0PXR5cGVvZiBlO3JldHVybiEhZSYmKFwib2JqZWN0XCI9PXR8fFwiZnVuY3Rpb25cIj09dCl9ZnVuY3Rpb24gcChlKXtyZXR1cm4hIWUmJlwib2JqZWN0XCI9PXR5cGVvZiBlfXZhciBiPTkwMDcxOTkyNTQ3NDA5OTEsaD1cIltvYmplY3QgQXJndW1lbnRzXVwiLHk9XCJbb2JqZWN0IEZ1bmN0aW9uXVwiLHY9XCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiLG09XCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuT2JqZWN0PT09T2JqZWN0JiZ0LGc9XCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYmJnNlbGYuT2JqZWN0PT09T2JqZWN0JiZzZWxmLF89bXx8Z3x8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpLGo9T2JqZWN0LnByb3RvdHlwZSxPPWouaGFzT3duUHJvcGVydHksRT1qLnRvU3RyaW5nLHc9Xy5TeW1ib2wseD1qLnByb3BlcnR5SXNFbnVtZXJhYmxlLEM9dz93LmlzQ29uY2F0U3ByZWFkYWJsZTp2b2lkIDAsaz1NYXRoLm1heCxQPUFycmF5LmlzQXJyYXksUz1mdW5jdGlvbihlKXtyZXR1cm4gbyhmdW5jdGlvbihlKXtlPWEoZSwxKTt2YXIgdD1lLmxlbmd0aCxuPXQ7Zm9yKHZvaWQgMDtuLS07KWlmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGVbbl0pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGEgZnVuY3Rpb25cIik7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBuPTAscj10P2Vbbl0uYXBwbHkodGhpcyxhcmd1bWVudHMpOmFyZ3VtZW50c1swXTsrK248dDspcj1lW25dLmNhbGwodGhpcyxyKTtyZXR1cm4gcn19KX0oKTtlLmV4cG9ydHM9U30pLmNhbGwodCxuKDUyKSl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3ZhciB0LG4scixhPWVbMF0sbz1lWzFdLGk9ZVsyXTtyZXR1cm4gdD0xKmErMCpvKzEuMTM5ODMqaSxuPTEqYSstLjM5NDY1Km8rLS41ODA2Kmkscj0xKmErMi4wMjMxMSpvKzAqaSx0PU1hdGgubWluKE1hdGgubWF4KDAsdCksMSksbj1NYXRoLm1pbihNYXRoLm1heCgwLG4pLDEpLHI9TWF0aC5taW4oTWF0aC5tYXgoMCxyKSwxKSxbMjU1KnQsMjU1Km4sMjU1KnJdfWZ1bmN0aW9uIGEoZSl7dmFyIHQ9ZVswXS8yNTUsbj1lWzFdLzI1NSxyPWVbMl0vMjU1O3JldHVyblsuMjk5KnQrLjU4NypuKy4xMTQqciwtLjE0NzEzKnQrLS4yODg4NipuKy40MzYqciwuNjE1KnQrLS41MTQ5OSpuKy0uMTAwMDEqcl19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC55dXYycmdiPXIsdC5yZ2IyeXV2PWF9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9big2KSxkPXIoZikscD1uKDEpLGI9cihwKSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PXt3ZWVrZGF5Olwic2hvcnRcIix5ZWFyOlwibnVtZXJpY1wiLG1vbnRoOlwic2hvcnRcIixkYXk6XCJudW1lcmljXCIsaG91cjpcIjItZGlnaXRcIixtaW51dGU6XCIyLWRpZ2l0XCJ9O3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGIuZGVmYXVsdCkoZS50aGVtZSxcImRhdGVcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoZC5kZWZhdWx0LHMoe3R5cGVfbmFtZTpcImRhdGVcIn0sZSkpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHMoe2NsYXNzTmFtZTpcImRhdGUtdmFsdWVcIn0sKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiZGF0ZS12YWx1ZVwiKSksZS52YWx1ZS50b0xvY2FsZVRpbWVTdHJpbmcoXCJlbi11c1wiLHQpKSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9aH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDYpLGQ9cihmKSxwPW4oMSksYj1yKHApLGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGIuZGVmYXVsdCkoZS50aGVtZSxcImZsb2F0XCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJmbG9hdFwifSxlKSksdGhpcy5wcm9wcy52YWx1ZSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9aH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDYpLGQ9cihmKSxwPW4oMSksYj1yKHApLGg9bigxMykseT1yKGgpLHY9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXthKHRoaXMsdCk7dmFyIG49byh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsKHRoaXMsZSkpO3JldHVybiBtLmNhbGwobiksbi5zdGF0ZT17Y29sbGFwc2VkOnkuZGVmYXVsdC5nZXQoZS5yanZJZCxlLm5hbWVzcGFjZSxcImNvbGxhcHNlZFwiLCEwKX0sbn1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PXRoaXMuc3RhdGUuY29sbGFwc2VkO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGIuZGVmYXVsdCkoZS50aGVtZSxcImZ1bmN0aW9uXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJmdW5jdGlvblwifSxlKSksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIscyh7fSwoMCxiLmRlZmF1bHQpKGUudGhlbWUsXCJmdW5jdGlvbi12YWx1ZVwiKSx7Y2xhc3NOYW1lOlwicmp2LWZ1bmN0aW9uLWNvbnRhaW5lclwiLG9uQ2xpY2s6dGhpcy50b2dnbGVDb2xsYXBzZWR9KSx0aGlzLmdldEZ1bmN0aW9uRGlzcGxheSh0KSkpfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCksbT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy50b2dnbGVDb2xsYXBzZWQ9ZnVuY3Rpb24oKXtlLnNldFN0YXRlKHtjb2xsYXBzZWQ6IWUuc3RhdGUuY29sbGFwc2VkfSxmdW5jdGlvbigpe3kuZGVmYXVsdC5zZXQoZS5wcm9wcy5yanZJZCxlLnByb3BzLm5hbWVzcGFjZSxcImNvbGxhcHNlZFwiLGUuc3RhdGUuY29sbGFwc2VkKX0pfSx0aGlzLmdldEZ1bmN0aW9uRGlzcGxheT1mdW5jdGlvbih0KXt2YXIgbj1lLnByb3BzO3JldHVybiB0P2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLG51bGwsZS5wcm9wcy52YWx1ZS50b1N0cmluZygpLnNsaWNlKDksLTEpLnJlcGxhY2UoL1xce1tcXHNcXFNdKy8sXCJcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcImZ1bmN0aW9uLWNvbGxhcHNlZFwiLHN0eWxlOntmb250V2VpZ2h0OlwiYm9sZFwifX0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxcIntcIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsKDAsYi5kZWZhdWx0KShuLnRoZW1lLFwiZWxsaXBzaXNcIiksXCIuLi5cIiksYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxcIn1cIikpKTplLnByb3BzLnZhbHVlLnRvU3RyaW5nKCkuc2xpY2UoOSwtMSl9fTt0LmRlZmF1bHQ9dn0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBuKCl7dGhpcy5fZXZlbnRzPXRoaXMuX2V2ZW50c3x8e30sdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfWZ1bmN0aW9uIHIoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZX1mdW5jdGlvbiBhKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfWZ1bmN0aW9uIG8oZSl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIHZvaWQgMD09PWV9ZS5leHBvcnRzPW4sbi5FdmVudEVtaXR0ZXI9bixuLnByb3RvdHlwZS5fZXZlbnRzPXZvaWQgMCxuLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzPXZvaWQgMCxuLmRlZmF1bHRNYXhMaXN0ZW5lcnM9MTAsbi5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uKGUpe2lmKCFhKGUpfHxlPDB8fGlzTmFOKGUpKXRocm93IFR5cGVFcnJvcihcIm4gbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlclwiKTtyZXR1cm4gdGhpcy5fbWF4TGlzdGVuZXJzPWUsdGhpc30sbi5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbihlKXt2YXIgdCxuLGEscyx1LGw7aWYodGhpcy5fZXZlbnRzfHwodGhpcy5fZXZlbnRzPXt9KSxcImVycm9yXCI9PT1lJiYoIXRoaXMuX2V2ZW50cy5lcnJvcnx8byh0aGlzLl9ldmVudHMuZXJyb3IpJiYhdGhpcy5fZXZlbnRzLmVycm9yLmxlbmd0aCkpe2lmKCh0PWFyZ3VtZW50c1sxXSlpbnN0YW5jZW9mIEVycm9yKXRocm93IHQ7dmFyIGM9bmV3IEVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LiAoJyt0K1wiKVwiKTt0aHJvdyBjLmNvbnRleHQ9dCxjfWlmKG49dGhpcy5fZXZlbnRzW2VdLGkobikpcmV0dXJuITE7aWYocihuKSlzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAxOm4uY2FsbCh0aGlzKTticmVhaztjYXNlIDI6bi5jYWxsKHRoaXMsYXJndW1lbnRzWzFdKTticmVhaztjYXNlIDM6bi5jYWxsKHRoaXMsYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSk7YnJlYWs7ZGVmYXVsdDpzPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxuLmFwcGx5KHRoaXMscyl9ZWxzZSBpZihvKG4pKWZvcihzPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxsPW4uc2xpY2UoKSxhPWwubGVuZ3RoLHU9MDt1PGE7dSsrKWxbdV0uYXBwbHkodGhpcyxzKTtyZXR1cm4hMH0sbi5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24oZSx0KXt2YXIgYTtpZighcih0KSl0aHJvdyBUeXBlRXJyb3IoXCJsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7cmV0dXJuIHRoaXMuX2V2ZW50c3x8KHRoaXMuX2V2ZW50cz17fSksdGhpcy5fZXZlbnRzLm5ld0xpc3RlbmVyJiZ0aGlzLmVtaXQoXCJuZXdMaXN0ZW5lclwiLGUscih0Lmxpc3RlbmVyKT90Lmxpc3RlbmVyOnQpLHRoaXMuX2V2ZW50c1tlXT9vKHRoaXMuX2V2ZW50c1tlXSk/dGhpcy5fZXZlbnRzW2VdLnB1c2godCk6dGhpcy5fZXZlbnRzW2VdPVt0aGlzLl9ldmVudHNbZV0sdF06dGhpcy5fZXZlbnRzW2VdPXQsbyh0aGlzLl9ldmVudHNbZV0pJiYhdGhpcy5fZXZlbnRzW2VdLndhcm5lZCYmKGE9aSh0aGlzLl9tYXhMaXN0ZW5lcnMpP24uZGVmYXVsdE1heExpc3RlbmVyczp0aGlzLl9tYXhMaXN0ZW5lcnMpJiZhPjAmJnRoaXMuX2V2ZW50c1tlXS5sZW5ndGg+YSYmKHRoaXMuX2V2ZW50c1tlXS53YXJuZWQ9ITAsY29uc29sZS5lcnJvcihcIihub2RlKSB3YXJuaW5nOiBwb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5IGxlYWsgZGV0ZWN0ZWQuICVkIGxpc3RlbmVycyBhZGRlZC4gVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQuXCIsdGhpcy5fZXZlbnRzW2VdLmxlbmd0aCksXCJmdW5jdGlvblwiPT10eXBlb2YgY29uc29sZS50cmFjZSYmY29uc29sZS50cmFjZSgpKSx0aGlzfSxuLnByb3RvdHlwZS5vbj1uLnByb3RvdHlwZS5hZGRMaXN0ZW5lcixuLnByb3RvdHlwZS5vbmNlPWZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbigpe3RoaXMucmVtb3ZlTGlzdGVuZXIoZSxuKSxhfHwoYT0hMCx0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9aWYoIXIodCkpdGhyb3cgVHlwZUVycm9yKFwibGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO3ZhciBhPSExO3JldHVybiBuLmxpc3RlbmVyPXQsdGhpcy5vbihlLG4pLHRoaXN9LG4ucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyPWZ1bmN0aW9uKGUsdCl7dmFyIG4sYSxpLHM7aWYoIXIodCkpdGhyb3cgVHlwZUVycm9yKFwibGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO2lmKCF0aGlzLl9ldmVudHN8fCF0aGlzLl9ldmVudHNbZV0pcmV0dXJuIHRoaXM7aWYobj10aGlzLl9ldmVudHNbZV0saT1uLmxlbmd0aCxhPS0xLG49PT10fHxyKG4ubGlzdGVuZXIpJiZuLmxpc3RlbmVyPT09dClkZWxldGUgdGhpcy5fZXZlbnRzW2VdLHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIixlLHQpO2Vsc2UgaWYobyhuKSl7Zm9yKHM9aTtzLS0gPjA7KWlmKG5bc109PT10fHxuW3NdLmxpc3RlbmVyJiZuW3NdLmxpc3RlbmVyPT09dCl7YT1zO2JyZWFrfWlmKGE8MClyZXR1cm4gdGhpczsxPT09bi5sZW5ndGg/KG4ubGVuZ3RoPTAsZGVsZXRlIHRoaXMuX2V2ZW50c1tlXSk6bi5zcGxpY2UoYSwxKSx0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXImJnRoaXMuZW1pdChcInJlbW92ZUxpc3RlbmVyXCIsZSx0KX1yZXR1cm4gdGhpc30sbi5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3ZhciB0LG47aWYoIXRoaXMuX2V2ZW50cylyZXR1cm4gdGhpcztpZighdGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKXJldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLl9ldmVudHM9e306dGhpcy5fZXZlbnRzW2VdJiZkZWxldGUgdGhpcy5fZXZlbnRzW2VdLHRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpe2Zvcih0IGluIHRoaXMuX2V2ZW50cylcInJlbW92ZUxpc3RlbmVyXCIhPT10JiZ0aGlzLnJlbW92ZUFsbExpc3RlbmVycyh0KTtyZXR1cm4gdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoXCJyZW1vdmVMaXN0ZW5lclwiKSx0aGlzLl9ldmVudHM9e30sdGhpc31pZihuPXRoaXMuX2V2ZW50c1tlXSxyKG4pKXRoaXMucmVtb3ZlTGlzdGVuZXIoZSxuKTtlbHNlIGlmKG4pZm9yKDtuLmxlbmd0aDspdGhpcy5yZW1vdmVMaXN0ZW5lcihlLG5bbi5sZW5ndGgtMV0pO3JldHVybiBkZWxldGUgdGhpcy5fZXZlbnRzW2VdLHRoaXN9LG4ucHJvdG90eXBlLmxpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHNbZV0/cih0aGlzLl9ldmVudHNbZV0pP1t0aGlzLl9ldmVudHNbZV1dOnRoaXMuX2V2ZW50c1tlXS5zbGljZSgpOltdfSxuLnByb3RvdHlwZS5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKGUpe2lmKHRoaXMuX2V2ZW50cyl7dmFyIHQ9dGhpcy5fZXZlbnRzW2VdO2lmKHIodCkpcmV0dXJuIDE7aWYodClyZXR1cm4gdC5sZW5ndGh9cmV0dXJuIDB9LG4ubGlzdGVuZXJDb3VudD1mdW5jdGlvbihlLHQpe3JldHVybiBlLmxpc3RlbmVyQ291bnQodCl9fSxmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzLkRpc3BhdGNoZXI9bigxNjMpfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9dC5fX2VzTW9kdWxlPSEwO3ZhciBhPW4oMTY0KSxvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3IodGhpcyxlKSx0aGlzLl9jYWxsYmFja3M9e30sdGhpcy5faXNEaXNwYXRjaGluZz0hMSx0aGlzLl9pc0hhbmRsZWQ9e30sdGhpcy5faXNQZW5kaW5nPXt9LHRoaXMuX2xhc3RJRD0xfXJldHVybiBlLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihlKXt2YXIgdD1cIklEX1wiK3RoaXMuX2xhc3RJRCsrO3JldHVybiB0aGlzLl9jYWxsYmFja3NbdF09ZSx0fSxlLnByb3RvdHlwZS51bnJlZ2lzdGVyPWZ1bmN0aW9uKGUpe3RoaXMuX2NhbGxiYWNrc1tlXXx8YSghMSksZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1tlXX0sZS5wcm90b3R5cGUud2FpdEZvcj1mdW5jdGlvbihlKXt0aGlzLl9pc0Rpc3BhdGNoaW5nfHxhKCExKTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7dmFyIG49ZVt0XTt0aGlzLl9pc1BlbmRpbmdbbl0/dGhpcy5faXNIYW5kbGVkW25dfHxhKCExKToodGhpcy5fY2FsbGJhY2tzW25dfHxhKCExKSx0aGlzLl9pbnZva2VDYWxsYmFjayhuKSl9fSxlLnByb3RvdHlwZS5kaXNwYXRjaD1mdW5jdGlvbihlKXt0aGlzLl9pc0Rpc3BhdGNoaW5nJiZhKCExKSx0aGlzLl9zdGFydERpc3BhdGNoaW5nKGUpO3RyeXtmb3IodmFyIHQgaW4gdGhpcy5fY2FsbGJhY2tzKXRoaXMuX2lzUGVuZGluZ1t0XXx8dGhpcy5faW52b2tlQ2FsbGJhY2sodCl9ZmluYWxseXt0aGlzLl9zdG9wRGlzcGF0Y2hpbmcoKX19LGUucHJvdG90eXBlLmlzRGlzcGF0Y2hpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNEaXNwYXRjaGluZ30sZS5wcm90b3R5cGUuX2ludm9rZUNhbGxiYWNrPWZ1bmN0aW9uKGUpe3RoaXMuX2lzUGVuZGluZ1tlXT0hMCx0aGlzLl9jYWxsYmFja3NbZV0odGhpcy5fcGVuZGluZ1BheWxvYWQpLHRoaXMuX2lzSGFuZGxlZFtlXT0hMH0sZS5wcm90b3R5cGUuX3N0YXJ0RGlzcGF0Y2hpbmc9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0IGluIHRoaXMuX2NhbGxiYWNrcyl0aGlzLl9pc1BlbmRpbmdbdF09ITEsdGhpcy5faXNIYW5kbGVkW3RdPSExO3RoaXMuX3BlbmRpbmdQYXlsb2FkPWUsdGhpcy5faXNEaXNwYXRjaGluZz0hMH0sZS5wcm90b3R5cGUuX3N0b3BEaXNwYXRjaGluZz1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9wZW5kaW5nUGF5bG9hZCx0aGlzLl9pc0Rpc3BhdGNoaW5nPSExfSxlfSgpO2UuZXhwb3J0cz1vfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlLHQsbixyLG8saSxzLHUpe2lmKGEodCksIWUpe3ZhciBsO2lmKHZvaWQgMD09PXQpbD1uZXcgRXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBjPVtuLHIsbyxpLHMsdV0sZj0wO2w9bmV3IEVycm9yKHQucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBjW2YrK119KSksbC5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifXRocm93IGwuZnJhbWVzVG9Qb3A9MSxsfX12YXIgYT1mdW5jdGlvbihlKXt9O2UuZXhwb3J0cz1yfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLHU9bigwKSxsPXIodSksYz1uKDEpLGY9cihjKSxkPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gYSh0aGlzLHQpLG8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHModCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGwuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsZi5kZWZhdWx0KSh0aGlzLnByb3BzLnRoZW1lLFwibmFuXCIpLFwiTmFOXCIpfX1dKSx0fShsLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PWR9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksdT1uKDApLGw9cih1KSxjPW4oMSksZj1yKGMpLGQ9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBhKHRoaXMsdCksbyh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSkscyh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCxmLmRlZmF1bHQpKHRoaXMucHJvcHMudGhlbWUsXCJudWxsXCIpLFwiTlVMTFwiKX19XSksdH0obC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1kfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9bigxKSxiPXIocCksaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHM7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwiaW50ZWdlclwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChkLmRlZmF1bHQscyh7dHlwZV9uYW1lOlwiaW50XCJ9LGUpKSx0aGlzLnByb3BzLnZhbHVlKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1ofSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oNiksZD1yKGYpLHA9bigxKSxiPXIocCksaD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHM7cmV0dXJuIGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAsYi5kZWZhdWx0KShlLnRoZW1lLFwicmVnZXhwXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuZGVmYXVsdCxzKHt0eXBlX25hbWU6XCJyZWdleHBcIn0sZSkpLHRoaXMucHJvcHMudmFsdWUudG9TdHJpbmcoKSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9aH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDYpLGQ9cihmKSxwPW4oNCksYj1uKDEpLGg9cihiKSx5PW4oMTMpLHY9cih5KSxtPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7YSh0aGlzLHQpO3ZhciBuPW8odGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbCh0aGlzLGUpKTtyZXR1cm4gbi50b2dnbGVDb2xsYXBzZWQ9ZnVuY3Rpb24oKXtuLnNldFN0YXRlKHtjb2xsYXBzZWQ6IW4uc3RhdGUuY29sbGFwc2VkfSxmdW5jdGlvbigpe3YuZGVmYXVsdC5zZXQobi5wcm9wcy5yanZJZCxuLnByb3BzLm5hbWVzcGFjZSxcImNvbGxhcHNlZFwiLG4uc3RhdGUuY29sbGFwc2VkKX0pfSxuLnN0YXRlPXtjb2xsYXBzZWQ6di5kZWZhdWx0LmdldChlLnJqdklkLGUubmFtZXNwYWNlLFwiY29sbGFwc2VkXCIsITApfSxufXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT0odGhpcy5zdGF0ZS5jb2xsYXBzZWQsdGhpcy5wcm9wcyksdD1lLmNvbGxhcHNlU3RyaW5nc0FmdGVyTGVuZ3RoLG49ZS50aGVtZSxyPWUudmFsdWUsYT1cImludGVnZXJcIj09PSgwLHAudG9UeXBlKSh0KSxvPXtzdHlsZTp7Y3Vyc29yOlwiZGVmYXVsdFwifX07cmV0dXJuIGEmJnIubGVuZ3RoPnQmJihvLnN0eWxlLmN1cnNvcj1cInBvaW50ZXJcIix0aGlzLnN0YXRlLmNvbGxhcHNlZCYmKHI9Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxyLnN1YnN0cmluZygwLHQpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLGguZGVmYXVsdCkobixcImVsbGlwc2lzXCIpLFwiIC4uLlwiKSkpKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGguZGVmYXVsdCkobixcInN0cmluZ1wiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChkLmRlZmF1bHQscyh7dHlwZV9uYW1lOlwic3RyaW5nXCJ9LGUpKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixzKHtjbGFzc05hbWU6XCJzdHJpbmctdmFsdWVcIn0sbyx7b25DbGljazp0aGlzLnRvZ2dsZUNvbGxhcHNlZH0pLCdcIicsciwnXCInKSl9fV0pLHR9KGMuZGVmYXVsdC5QdXJlQ29tcG9uZW50KTt0LmRlZmF1bHQ9bX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIGEoZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIG8oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSx1PW4oMCksbD1yKHUpLGM9bigxKSxmPXIoYyksZD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSxzKHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGYuZGVmYXVsdCkodGhpcy5wcm9wcy50aGVtZSxcInVuZGVmaW5lZFwiKSxcInVuZGVmaW5lZFwiKX19XSksdH0obC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1kfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxuPUFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKyluW3RdPWVbdF07cmV0dXJuIG59cmV0dXJuIEFycmF5LmZyb20oZSl9ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gaShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIHMoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgdT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksYz1uKDApLGY9cihjKSxkPW4oMTcyKSxwPXIoZCksYj0obig0KSxuKDE0KSksaD1yKGIpLHk9bigxNzYpLHY9cih5KSxtPW4oNTQpLGc9cihtKSxfPW4oNTUpLGo9cihfKSxPPW4oNDIpLEU9bigxNSksdz1uKDEpLHg9cih3KSxDPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7byh0aGlzLHQpO3ZhciBuPWkodGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbCh0aGlzLGUpKTtyZXR1cm4gay5jYWxsKG4pLG4uc3RhdGU9e2VkaXRNb2RlOiExLGVkaXRWYWx1ZTpcIlwiLHJlbmFtZUtleTohMSxwYXJzZWRJbnB1dDp7dHlwZTohMSx2YWx1ZTpudWxsfX0sbn1yZXR1cm4gcyh0LGUpLGwodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMucHJvcHMsbj10LnZhcmlhYmxlLHI9KHQuc3JjLHQuc2luZ2xlSW5kZW50KSxvPXQudHlwZSxpPXQudGhlbWUscz10Lm5hbWVzcGFjZSxsPXQuaW5kZW50V2lkdGgsYz10LmVuYWJsZUNsaXBib2FyZCxkPXQub25FZGl0LHA9dC5vbkRlbGV0ZSxiPXQub25TZWxlY3QsaD0odC5yanZJZCx0aGlzLnN0YXRlLmVkaXRNb2RlKTtyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix1KHt9LCgwLHguZGVmYXVsdCkoaSxcIm9iamVjdEtleVZhbFwiLHtwYWRkaW5nTGVmdDpsKnJ9KSx7Y2xhc3NOYW1lOlwidmFyaWFibGUtcm93XCIsa2V5Om4ubmFtZX0pLFwiYXJyYXlcIj09bz9mLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix1KHt9LCgwLHguZGVmYXVsdCkoaSxcImFycmF5LWtleVwiKSx7a2V5Om4ubmFtZStcIl9cIitzfSksbi5uYW1lLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAseC5kZWZhdWx0KShpLFwiY29sb25cIiksXCI6XCIpKTpmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHUoe30sKDAseC5kZWZhdWx0KShpLFwib2JqZWN0LW5hbWVcIikse2NsYXNzTmFtZTpcIm9iamVjdC1rZXlcIixrZXk6bi5uYW1lK1wiX1wiK3N9KSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LCdcIicpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wifX0sbi5uYW1lKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LCdcIicpKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCx4LmRlZmF1bHQpKGksXCJjb2xvblwiKSxcIjpcIikpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7Y2xhc3NOYW1lOlwidmFyaWFibGUtdmFsdWVcIixvbkNsaWNrOiExPT09YiYmITE9PT1kP251bGw6ZnVuY3Rpb24odCl7dmFyIHI9W10uY29uY2F0KGEocykpOyh0LmN0cmxLZXl8fHQubWV0YUtleSkmJiExIT09ZD9lLnByZXBvcElucHV0KG4pOiExIT09YiYmKHIuc2hpZnQoKSxiKHUoe30sbix7bmFtZXNwYWNlOnJ9KSkpfX0sKDAseC5kZWZhdWx0KShpLFwidmFyaWFibGVWYWx1ZVwiLHtjdXJzb3I6ITE9PT1iP1wiZGVmYXVsdFwiOlwicG9pbnRlclwifSkpLHRoaXMuZ2V0VmFsdWUobixoKSksYz9mLmRlZmF1bHQuY3JlYXRlRWxlbWVudChqLmRlZmF1bHQsdSh7aGlkZGVuOmgsc3JjOm4udmFsdWUsY2xpY2tDYWxsYmFjazpjfSx7dGhlbWU6aSxuYW1lc3BhY2U6c30pKTpudWxsLCExIT09ZCYmMD09aD90aGlzLmdldEVkaXRJY29uKCk6bnVsbCwhMSE9PXAmJjA9PWg/dGhpcy5nZXRSZW1vdmVJY29uKCk6bnVsbCl9fV0pLHR9KGYuZGVmYXVsdC5QdXJlQ29tcG9uZW50KSxrPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLmdldEVkaXRJY29uPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5wcm9wcyxuPXQudmFyaWFibGUscj10LnRoZW1lO3JldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJjbGljay10by1lZGl0XCIsc3R5bGU6e3ZlcnRpY2FsQWxpZ246XCJ0b3BcIn19LGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEUuRWRpdCx1KHtjbGFzc05hbWU6XCJjbGljay10by1lZGl0LWljb25cIn0sKDAseC5kZWZhdWx0KShyLFwiZWRpdFZhckljb25cIikse29uQ2xpY2s6ZnVuY3Rpb24oKXtlLnByZXBvcElucHV0KG4pfX0pKSl9LHRoaXMucHJlcG9wSW5wdXQ9ZnVuY3Rpb24odCl7aWYoITEhPT1lLnByb3BzLm9uRWRpdCl7dmFyIG49KDAsZy5kZWZhdWx0KSh0LnZhbHVlKSxyPSgwLHYuZGVmYXVsdCkobik7ZS5zZXRTdGF0ZSh7ZWRpdE1vZGU6ITAsZWRpdFZhbHVlOm4scGFyc2VkSW5wdXQ6e3R5cGU6ci50eXBlLHZhbHVlOnIudmFsdWV9fSl9fSx0aGlzLmdldFJlbW92ZUljb249ZnVuY3Rpb24oKXt2YXIgdD1lLnByb3BzLG49dC52YXJpYWJsZSxyPXQubmFtZXNwYWNlLGE9dC50aGVtZSxvPXQucmp2SWQ7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImNsaWNrLXRvLXJlbW92ZVwiLHN0eWxlOnt2ZXJ0aWNhbEFsaWduOlwidG9wXCJ9fSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChFLlJlbW92ZUNpcmNsZSx1KHtjbGFzc05hbWU6XCJjbGljay10by1yZW1vdmUtaWNvblwifSwoMCx4LmRlZmF1bHQpKGEsXCJyZW1vdmVWYXJJY29uXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKCl7aC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiVkFSSUFCTEVfUkVNT1ZFRFwiLHJqdklkOm8sZGF0YTp7bmFtZTpuLm5hbWUsbmFtZXNwYWNlOnIsZXhpc3RpbmdfdmFsdWU6bi52YWx1ZSx2YXJpYWJsZV9yZW1vdmVkOiEwfX0pfX0pKSl9LHRoaXMuZ2V0VmFsdWU9ZnVuY3Rpb24odCxuKXt2YXIgcj0hbiYmdC50eXBlLGE9ZS5wcm9wcztzd2l0Y2gocil7Y2FzZSExOnJldHVybiBlLmdldEVkaXRJbnB1dCgpO2Nhc2VcInN0cmluZ1wiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25TdHJpbmcsdSh7dmFsdWU6dC52YWx1ZX0sYSkpO2Nhc2VcImludGVnZXJcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uSW50ZWdlcix1KHt2YWx1ZTp0LnZhbHVlfSxhKSk7Y2FzZVwiZmxvYXRcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uRmxvYXQsdSh7dmFsdWU6dC52YWx1ZX0sYSkpO2Nhc2VcImJvb2xlYW5cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uQm9vbGVhbix1KHt2YWx1ZTp0LnZhbHVlfSxhKSk7Y2FzZVwiZnVuY3Rpb25cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uRnVuY3Rpb24sdSh7dmFsdWU6dC52YWx1ZX0sYSkpO2Nhc2VcIm51bGxcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uTnVsbCxhKTtjYXNlXCJuYW5cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uTmFuLGEpO2Nhc2VcInVuZGVmaW5lZFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25VbmRlZmluZWQsYSk7Y2FzZVwiZGF0ZVwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25EYXRlLHUoe3ZhbHVlOnQudmFsdWV9LGEpKTtjYXNlXCJyZWdleHBcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uUmVnZXhwLHUoe3ZhbHVlOnQudmFsdWV9LGEpKTtkZWZhdWx0OnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJvYmplY3QtdmFsdWVcIn0sSlNPTi5zdHJpbmdpZnkodC52YWx1ZSkpfX0sdGhpcy5nZXRFZGl0SW5wdXQ9ZnVuY3Rpb24oKXt2YXIgdD1lLnByb3BzLnRoZW1lLG49ZS5zdGF0ZS5lZGl0VmFsdWU7cmV0dXJuIGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChwLmRlZmF1bHQsdSh7dHlwZTpcInRleHRcIixpbnB1dFJlZjpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5mb2N1cygpfSx2YWx1ZTpuLGNsYXNzTmFtZTpcInZhcmlhYmxlLWVkaXRvclwiLG9uQ2hhbmdlOmZ1bmN0aW9uKHQpe3ZhciBuPXQudGFyZ2V0LnZhbHVlLHI9KDAsdi5kZWZhdWx0KShuKTtlLnNldFN0YXRlKHtlZGl0VmFsdWU6bixwYXJzZWRJbnB1dDp7dHlwZTpyLnR5cGUsdmFsdWU6ci52YWx1ZX19KX0sb25LZXlEb3duOmZ1bmN0aW9uKHQpe3N3aXRjaCh0LmtleSl7Y2FzZVwiRXNjYXBlXCI6ZS5zZXRTdGF0ZSh7ZWRpdE1vZGU6ITEsZWRpdFZhbHVlOlwiXCJ9KTticmVhaztjYXNlXCJFbnRlclwiOih0LmN0cmxLZXl8fHQubWV0YUtleSkmJmUuc3VibWl0RWRpdCghMCl9dC5zdG9wUHJvcGFnYXRpb24oKX0scGxhY2Vob2xkZXI6XCJ1cGRhdGUgdGhpcyB2YWx1ZVwifSwoMCx4LmRlZmF1bHQpKHQsXCJlZGl0LWlucHV0XCIpKSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwoMCx4LmRlZmF1bHQpKHQsXCJlZGl0LWljb24tY29udGFpbmVyXCIpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEUuUmVtb3ZlQ2lyY2xlLHUoe2NsYXNzTmFtZTpcImVkaXQtY2FuY2VsXCJ9LCgwLHguZGVmYXVsdCkodCxcImNhbmNlbC1pY29uXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKCl7ZS5zZXRTdGF0ZSh7ZWRpdE1vZGU6ITEsZWRpdFZhbHVlOlwiXCJ9KX19KSksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRS5DaGVja0NpcmNsZSx1KHtjbGFzc05hbWU6XCJlZGl0LWNoZWNrIHN0cmluZy12YWx1ZVwifSwoMCx4LmRlZmF1bHQpKHQsXCJjaGVjay1pY29uXCIpLHtvbkNsaWNrOmZ1bmN0aW9uKCl7ZS5zdWJtaXRFZGl0KCl9fSkpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsbnVsbCxlLnNob3dEZXRlY3RlZCgpKSkpfSx0aGlzLnN1Ym1pdEVkaXQ9ZnVuY3Rpb24odCl7dmFyIG49ZS5wcm9wcyxyPW4udmFyaWFibGUsYT1uLm5hbWVzcGFjZSxvPW4ucmp2SWQsaT1lLnN0YXRlLHM9aS5lZGl0VmFsdWUsdT1pLnBhcnNlZElucHV0LGw9czt0JiZ1LnR5cGUmJihsPXUudmFsdWUpLGUuc2V0U3RhdGUoe2VkaXRNb2RlOiExfSksaC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiVkFSSUFCTEVfVVBEQVRFRFwiLHJqdklkOm8sZGF0YTp7bmFtZTpyLm5hbWUsbmFtZXNwYWNlOmEsZXhpc3RpbmdfdmFsdWU6ci52YWx1ZSxuZXdfdmFsdWU6bCx2YXJpYWJsZV9yZW1vdmVkOiExfX0pfSx0aGlzLnNob3dEZXRlY3RlZD1mdW5jdGlvbigpe3ZhciB0PWUucHJvcHMsbj10LnRoZW1lLHI9KHQudmFyaWFibGUsdC5uYW1lc3BhY2UsdC5yanZJZCxlLnN0YXRlLnBhcnNlZElucHV0KSxhPShyLnR5cGUsci52YWx1ZSxlLmdldERldGVjdGVkSW5wdXQoKSk7aWYoYSlyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsKDAseC5kZWZhdWx0KShuLFwiZGV0ZWN0ZWQtcm93XCIpLGEsZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRS5DaGVja0NpcmNsZSx7Y2xhc3NOYW1lOlwiZWRpdC1jaGVjayBkZXRlY3RlZFwiLHN0eWxlOnUoe3ZlcnRpY2FsQWxpZ246XCJ0b3BcIixwYWRkaW5nTGVmdDpcIjNweFwifSwoMCx4LmRlZmF1bHQpKG4sXCJjaGVjay1pY29uXCIpLnN0eWxlKSxvbkNsaWNrOmZ1bmN0aW9uKCl7ZS5zdWJtaXRFZGl0KCEwKX19KSkpfSx0aGlzLmdldERldGVjdGVkSW5wdXQ9ZnVuY3Rpb24oKXt2YXIgdD1lLnN0YXRlLnBhcnNlZElucHV0LG49dC50eXBlLHI9dC52YWx1ZSxhPWUucHJvcHMsbz1hLnRoZW1lO2lmKCExIT09bilzd2l0Y2gobi50b0xvd2VyQ2FzZSgpKXtjYXNlXCJvYmplY3RcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsbnVsbCxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6dSh7fSwoMCx4LmRlZmF1bHQpKG8sXCJicmFjZVwiKS5zdHlsZSx7Y3Vyc29yOlwiZGVmYXVsdFwifSl9LFwie1wiKSxmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6dSh7fSwoMCx4LmRlZmF1bHQpKG8sXCJlbGxpcHNpc1wiKS5zdHlsZSx7Y3Vyc29yOlwiZGVmYXVsdFwifSl9LFwiLi4uXCIpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLHguZGVmYXVsdCkobyxcImJyYWNlXCIpLnN0eWxlLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KX0sXCJ9XCIpKTtjYXNlXCJhcnJheVwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLHguZGVmYXVsdCkobyxcImJyYWNlXCIpLnN0eWxlLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KX0sXCJbXCIpLGYuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtzdHlsZTp1KHt9LCgwLHguZGVmYXVsdCkobyxcImVsbGlwc2lzXCIpLnN0eWxlLHtjdXJzb3I6XCJkZWZhdWx0XCJ9KX0sXCIuLi5cIiksZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3N0eWxlOnUoe30sKDAseC5kZWZhdWx0KShvLFwiYnJhY2VcIikuc3R5bGUse2N1cnNvcjpcImRlZmF1bHRcIn0pfSxcIl1cIikpO2Nhc2VcInN0cmluZ1wiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25TdHJpbmcsdSh7dmFsdWU6cn0sYSkpO2Nhc2VcImludGVnZXJcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uSW50ZWdlcix1KHt2YWx1ZTpyfSxhKSk7Y2FzZVwiZmxvYXRcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uRmxvYXQsdSh7dmFsdWU6cn0sYSkpO2Nhc2VcImJvb2xlYW5cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uQm9vbGVhbix1KHt2YWx1ZTpyfSxhKSk7Y2FzZVwiZnVuY3Rpb25cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uRnVuY3Rpb24sdSh7dmFsdWU6cn0sYSkpO2Nhc2VcIm51bGxcIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uTnVsbCxhKTtjYXNlXCJuYW5cIjpyZXR1cm4gZi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTy5Kc29uTmFuLGEpO2Nhc2VcInVuZGVmaW5lZFwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25VbmRlZmluZWQsYSk7Y2FzZVwiZGF0ZVwiOnJldHVybiBmLmRlZmF1bHQuY3JlYXRlRWxlbWVudChPLkpzb25EYXRlLHUoe3ZhbHVlOm5ldyBEYXRlKHIpfSxhKSl9fX07dC5kZWZhdWx0PUN9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKCl7cmV0dXJuIHI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYShlLHQpe2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpLGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUsZS5fX3Byb3RvX189dH1mdW5jdGlvbiBvKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLGE9e30sbz1PYmplY3Qua2V5cyhlKTtmb3Iocj0wO3I8by5sZW5ndGg7cisrKW49b1tyXSx0LmluZGV4T2Yobik+PTB8fChhW25dPWVbbl0pO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmRleE9mKG4pPj0wfHxPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKGFbbl09ZVtuXSl9cmV0dXJuIGF9ZnVuY3Rpb24gaShlLHQsbixyLGEpe3ZvaWQgMD09PW4mJihuPSExKSx2b2lkIDA9PT1yJiYocj1udWxsKSx2b2lkIDA9PT1hJiYoYT1udWxsKSxudWxsPT09di5wYXJlbnROb2RlJiZkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHYpO3ZhciBvPXMoZSx0LG4pO2lmKG51bGw9PT1vKXJldHVybiBudWxsO3ZhciBpPW8ucGFkZGluZ1NpemUsdT1vLmJvcmRlclNpemUsbD1vLmJveFNpemluZyxjPW8uc2l6aW5nU3R5bGU7T2JqZWN0LmtleXMoYykuZm9yRWFjaChmdW5jdGlvbihlKXt2LnN0eWxlW2VdPWNbZV19KSxtKHYpLHYudmFsdWU9ZS52YWx1ZXx8ZS5wbGFjZWhvbGRlcnx8XCJ4XCI7dmFyIGY9LTEvMCxkPTEvMCxwPXYuc2Nyb2xsSGVpZ2h0O1wiYm9yZGVyLWJveFwiPT09bD9wKz11OlwiY29udGVudC1ib3hcIj09PWwmJihwLT1pKSx2LnZhbHVlPVwieFwiO3ZhciBiPXYuc2Nyb2xsSGVpZ2h0LWk7cmV0dXJuIG51bGw9PT1yJiZudWxsPT09YXx8KG51bGwhPT1yJiYoZj1iKnIsXCJib3JkZXItYm94XCI9PT1sJiYoZj1mK2krdSkscD1NYXRoLm1heChmLHApKSxudWxsIT09YSYmKGQ9YiphLFwiYm9yZGVyLWJveFwiPT09bCYmKGQ9ZCtpK3UpLHA9TWF0aC5taW4oZCxwKSkpLHtoZWlnaHQ6cCxtaW5IZWlnaHQ6ZixtYXhIZWlnaHQ6ZCxyb3dDb3VudDpNYXRoLmZsb29yKHAvYil9fWZ1bmN0aW9uIHMoZSx0LG4pe2lmKHZvaWQgMD09PW4mJihuPSExKSxuJiZ5W3RdKXJldHVybiB5W3RdO3ZhciByPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUpO2lmKG51bGw9PT1yKXJldHVybiBudWxsO3ZhciBhPWgucmVkdWNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGVbdF09ci5nZXRQcm9wZXJ0eVZhbHVlKHQpLGV9LHt9KSxvPWFbXCJib3gtc2l6aW5nXCJdO2lmKFwiXCI9PT1vKXJldHVybiBudWxsO3AmJlwiYm9yZGVyLWJveFwiPT09byYmKGEud2lkdGg9cGFyc2VGbG9hdChhLndpZHRoKStwYXJzZUZsb2F0KHJbXCJib3JkZXItcmlnaHQtd2lkdGhcIl0pK3BhcnNlRmxvYXQocltcImJvcmRlci1sZWZ0LXdpZHRoXCJdKStwYXJzZUZsb2F0KHJbXCJwYWRkaW5nLXJpZ2h0XCJdKStwYXJzZUZsb2F0KHJbXCJwYWRkaW5nLWxlZnRcIl0pK1wicHhcIik7dmFyIGk9cGFyc2VGbG9hdChhW1wicGFkZGluZy1ib3R0b21cIl0pK3BhcnNlRmxvYXQoYVtcInBhZGRpbmctdG9wXCJdKSxzPXBhcnNlRmxvYXQoYVtcImJvcmRlci1ib3R0b20td2lkdGhcIl0pK3BhcnNlRmxvYXQoYVtcImJvcmRlci10b3Atd2lkdGhcIl0pLHU9e3NpemluZ1N0eWxlOmEscGFkZGluZ1NpemU6aSxib3JkZXJTaXplOnMsYm94U2l6aW5nOm99O3JldHVybiBuJiYoeVt0XT11KSx1fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciB1PW4oMCksbD1uLm4odSksYz1uKDE3MyksZj1uLm4oYyksZD0oT2JqZWN0LnNldFByb3RvdHlwZU9mLFwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQpLHA9ISFkJiYhIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jdXJyZW50U3R5bGUsYj17XCJtaW4taGVpZ2h0XCI6XCIwXCIsXCJtYXgtaGVpZ2h0XCI6XCJub25lXCIsaGVpZ2h0OlwiMFwiLHZpc2liaWxpdHk6XCJoaWRkZW5cIixvdmVyZmxvdzpcImhpZGRlblwiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIixcInotaW5kZXhcIjpcIi0xMDAwXCIsdG9wOlwiMFwiLHJpZ2h0OlwiMFwifSxoPVtcImxldHRlci1zcGFjaW5nXCIsXCJsaW5lLWhlaWdodFwiLFwiZm9udC1mYW1pbHlcIixcImZvbnQtd2VpZ2h0XCIsXCJmb250LXNpemVcIixcImZvbnQtc3R5bGVcIixcInRhYi1zaXplXCIsXCJ0ZXh0LXJlbmRlcmluZ1wiLFwidGV4dC10cmFuc2Zvcm1cIixcIndpZHRoXCIsXCJ0ZXh0LWluZGVudFwiLFwicGFkZGluZy10b3BcIixcInBhZGRpbmctcmlnaHRcIixcInBhZGRpbmctYm90dG9tXCIsXCJwYWRkaW5nLWxlZnRcIixcImJvcmRlci10b3Atd2lkdGhcIixcImJvcmRlci1yaWdodC13aWR0aFwiLFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiLFwiYm9yZGVyLWxlZnQtd2lkdGhcIixcImJveC1zaXppbmdcIl0seT17fSx2PWQmJmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKSxtPWZ1bmN0aW9uKGUpe09iamVjdC5rZXlzKGIpLmZvckVhY2goZnVuY3Rpb24odCl7ZS5zdHlsZS5zZXRQcm9wZXJ0eSh0LGJbdF0sXCJpbXBvcnRhbnRcIil9KX07ZCYmbSh2KTt2YXIgZz1mdW5jdGlvbihlKXtyZXR1cm4gZGVsZXRlIHlbZV19LF89ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLGZ1bmN0aW9uKCl7cmV0dXJuKytlfX0oKSxqPWZ1bmN0aW9uKCl7fSxPPWQmJndpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/W3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lXTpbc2V0VGltZW91dCxjbGVhclRpbWVvdXRdLEU9T1swXSx3PU9bMV0seD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQpe3ZhciBuO3JldHVybiBuPWUuY2FsbCh0aGlzLHQpfHx0aGlzLG4uX3Jlc2l6ZUxvY2s9ITEsbi5fb25Sb290RE9NTm9kZT1mdW5jdGlvbihlKXtuLl9yb290RE9NTm9kZT1lLG4ucHJvcHMuaW5wdXRSZWYoZSl9LG4uX29uQ2hhbmdlPWZ1bmN0aW9uKGUpe24uX2NvbnRyb2xsZWR8fG4uX3Jlc2l6ZUNvbXBvbmVudCgpLG4ucHJvcHMub25DaGFuZ2UoZSl9LG4uX3Jlc2l6ZUNvbXBvbmVudD1mdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lJiYoZT1qKSx2b2lkIDA9PT1uLl9yb290RE9NTm9kZSlyZXR1cm4gdm9pZCBlKCk7dmFyIHQ9aShuLl9yb290RE9NTm9kZSxuLl91aWQsbi5wcm9wcy51c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50cyxuLnByb3BzLm1pblJvd3Msbi5wcm9wcy5tYXhSb3dzKTtpZihudWxsPT09dClyZXR1cm4gdm9pZCBlKCk7dmFyIHI9dC5oZWlnaHQsYT10Lm1pbkhlaWdodCxvPXQubWF4SGVpZ2h0LHM9dC5yb3dDb3VudDtpZihuLnJvd0NvdW50PXMsbi5zdGF0ZS5oZWlnaHQhPT1yfHxuLnN0YXRlLm1pbkhlaWdodCE9PWF8fG4uc3RhdGUubWF4SGVpZ2h0IT09bylyZXR1cm4gdm9pZCBuLnNldFN0YXRlKHtoZWlnaHQ6cixtaW5IZWlnaHQ6YSxtYXhIZWlnaHQ6b30sZSk7ZSgpfSxuLnN0YXRlPXtoZWlnaHQ6dC5zdHlsZSYmdC5zdHlsZS5oZWlnaHR8fDAsbWluSGVpZ2h0Oi0xLzAsbWF4SGVpZ2h0OjEvMH0sbi5fdWlkPV8oKSxuLl9jb250cm9sbGVkPVwic3RyaW5nXCI9PXR5cGVvZiB0LnZhbHVlLG59YSh0LGUpO3ZhciBuPXQucHJvdG90eXBlO3JldHVybiBuLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD0oZS5pbnB1dFJlZixlLm1heFJvd3MsZS5taW5Sb3dzLGUub25IZWlnaHRDaGFuZ2UsZS51c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50cyxvKGUsW1wiaW5wdXRSZWZcIixcIm1heFJvd3NcIixcIm1pblJvd3NcIixcIm9uSGVpZ2h0Q2hhbmdlXCIsXCJ1c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50c1wiXSkpO3JldHVybiB0LnN0eWxlPXIoe30sdC5zdHlsZSx7aGVpZ2h0OnRoaXMuc3RhdGUuaGVpZ2h0fSksTWF0aC5tYXgodC5zdHlsZS5tYXhIZWlnaHR8fDEvMCx0aGlzLnN0YXRlLm1heEhlaWdodCk8dGhpcy5zdGF0ZS5oZWlnaHQmJih0LnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIpLGwuYS5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIixyKHt9LHQse29uQ2hhbmdlOnRoaXMuX29uQ2hhbmdlLHJlZjp0aGlzLl9vblJvb3RET01Ob2RlfSkpfSxuLmNvbXBvbmVudERpZE1vdW50PWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLl9yZXNpemVDb21wb25lbnQoKSx0aGlzLl9yZXNpemVMaXN0ZW5lcj1mdW5jdGlvbigpe2UuX3Jlc2l6ZUxvY2t8fChlLl9yZXNpemVMb2NrPSEwLGUuX3Jlc2l6ZUNvbXBvbmVudChmdW5jdGlvbigpe3JldHVybiBlLl9yZXNpemVMb2NrPSExfSkpfSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLHRoaXMuX3Jlc2l6ZUxpc3RlbmVyKX0sbi5jb21wb25lbnREaWRVcGRhdGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO2UhPT10aGlzLnByb3BzJiYodGhpcy5fY2xlYXJOZXh0RnJhbWUoKSx0aGlzLl9vbk5leHRGcmFtZUFjdGlvbklkPUUoZnVuY3Rpb24oKXtyZXR1cm4gbi5fcmVzaXplQ29tcG9uZW50KCl9KSksdGhpcy5zdGF0ZS5oZWlnaHQhPT10LmhlaWdodCYmdGhpcy5wcm9wcy5vbkhlaWdodENoYW5nZSh0aGlzLnN0YXRlLmhlaWdodCx0aGlzKX0sbi5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe3RoaXMuX2NsZWFyTmV4dEZyYW1lKCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIix0aGlzLl9yZXNpemVMaXN0ZW5lciksZyh0aGlzLl91aWQpfSxuLl9jbGVhck5leHRGcmFtZT1mdW5jdGlvbigpe3codGhpcy5fb25OZXh0RnJhbWVBY3Rpb25JZCl9LHR9KGwuYS5Db21wb25lbnQpO3gucHJvcFR5cGVzPXtpbnB1dFJlZjpmLmEuZnVuYyxtYXhSb3dzOmYuYS5udW1iZXIsbWluUm93czpmLmEubnVtYmVyLG9uQ2hhbmdlOmYuYS5mdW5jLG9uSGVpZ2h0Q2hhbmdlOmYuYS5mdW5jLHVzZUNhY2hlRm9yRE9NTWVhc3VyZW1lbnRzOmYuYS5ib29sLHZhbHVlOmYuYS5zdHJpbmd9LHguZGVmYXVsdFByb3BzPXtpbnB1dFJlZjpqLG9uQ2hhbmdlOmosb25IZWlnaHRDaGFuZ2U6aix1c2VDYWNoZUZvckRPTU1lYXN1cmVtZW50czohMX0sdC5kZWZhdWx0PXh9LGZ1bmN0aW9uKGUsdCxuKXtlLmV4cG9ydHM9bigxNzQpKCl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKCl7fXZhciBhPW4oMTc1KTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuLHIsbyxpKXtpZihpIT09YSl7dmFyIHM9bmV3IEVycm9yKFwiQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlc1wiKTt0aHJvdyBzLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCIsc319ZnVuY3Rpb24gdCgpe3JldHVybiBlfWUuaXNSZXF1aXJlZD1lO3ZhciBuPXthcnJheTplLGJvb2w6ZSxmdW5jOmUsbnVtYmVyOmUsb2JqZWN0OmUsc3RyaW5nOmUsc3ltYm9sOmUsYW55OmUsYXJyYXlPZjp0LGVsZW1lbnQ6ZSxpbnN0YW5jZU9mOnQsbm9kZTplLG9iamVjdE9mOnQsb25lT2Y6dCxvbmVPZlR5cGU6dCxzaGFwZTp0LGV4YWN0OnR9O3JldHVybiBuLmNoZWNrUHJvcFR5cGVzPXIsbi5Qcm9wVHlwZXM9bixufX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1cIlNFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEXCJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe2U9ZS50cmltKCk7dHJ5e2lmKGU9SlNPTi5zdHJpbmdpZnkoSlNPTi5wYXJzZShlKSksXCJbXCI9PT1lWzBdKXJldHVybiBhKFwiYXJyYXlcIixKU09OLnBhcnNlKGUpKTtpZihcIntcIj09PWVbMF0pcmV0dXJuIGEoXCJvYmplY3RcIixKU09OLnBhcnNlKGUpKTtpZihlLm1hdGNoKC9cXC0/XFxkK1xcLlxcZCsvKSYmZS5tYXRjaCgvXFwtP1xcZCtcXC5cXGQrLylbMF09PT1lKXJldHVybiBhKFwiZmxvYXRcIixwYXJzZUZsb2F0KGUpKTtpZihlLm1hdGNoKC9cXC0/XFxkKy8pJiZlLm1hdGNoKC9cXC0/XFxkKy8pWzBdPT09ZSlyZXR1cm4gYShcImludGVnZXJcIixwYXJzZUludChlKSl9Y2F0Y2goZSl7fXN3aXRjaChlPWUudG9Mb3dlckNhc2UoKSl7Y2FzZVwidW5kZWZpbmVkXCI6cmV0dXJuIGEoXCJ1bmRlZmluZWRcIix2b2lkIDApO2Nhc2VcIm5hblwiOnJldHVybiBhKFwibmFuXCIsTmFOKTtjYXNlXCJudWxsXCI6cmV0dXJuIGEoXCJudWxsXCIsbnVsbCk7Y2FzZVwidHJ1ZVwiOnJldHVybiBhKFwiYm9vbGVhblwiLCEwKTtjYXNlXCJmYWxzZVwiOnJldHVybiBhKFwiYm9vbGVhblwiLCExKTtkZWZhdWx0OmlmKGU9RGF0ZS5wYXJzZShlKSlyZXR1cm4gYShcImRhdGVcIixuZXcgRGF0ZShlKSl9cmV0dXJuIGEoITEsbnVsbCl9ZnVuY3Rpb24gYShlLHQpe3JldHVybnt0eXBlOmUsdmFsdWU6dH19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PXJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBhKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBvKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxNCksZD1yKGYpLHA9bigxMyksYj1yKHApLGg9bigxNzgpLHk9cihoKSx2PW4oMSksbT0ocih2KSxmdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLGk7YSh0aGlzLHQpO2Zvcih2YXIgdT1hcmd1bWVudHMubGVuZ3RoLGw9QXJyYXkodSksYz0wO2M8dTtjKyspbFtjXT1hcmd1bWVudHNbY107cmV0dXJuIG49cj1vKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQobCkpKSxyLmlzVmFsaWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ci5wcm9wcy5yanZJZCxuPWIuZGVmYXVsdC5nZXQodCxcImFjdGlvblwiLFwibmV3LWtleS1yZXF1ZXN0XCIpO3JldHVyblwiXCIhPWUmJi0xPT09T2JqZWN0LmtleXMobi5leGlzdGluZ192YWx1ZSkuaW5kZXhPZihlKX0sci5zdWJtaXQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ci5wcm9wcy5yanZJZCxuPWIuZGVmYXVsdC5nZXQodCxcImFjdGlvblwiLFwibmV3LWtleS1yZXF1ZXN0XCIpO24ubmV3X3ZhbHVlPXMoe30sbi5leGlzdGluZ192YWx1ZSksbi5uZXdfdmFsdWVbZV09ci5wcm9wcy5kZWZhdWx0VmFsdWUsZC5kZWZhdWx0LmRpc3BhdGNoKHtuYW1lOlwiVkFSSUFCTEVfQURERURcIixyanZJZDp0LGRhdGE6bn0pfSxpPW4sbyhyLGkpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5hY3RpdmUsbj1lLnRoZW1lLHI9ZS5yanZJZDtyZXR1cm4gdD9jLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh5LmRlZmF1bHQse3JqdklkOnIsdGhlbWU6bixpc1ZhbGlkOnRoaXMuaXNWYWxpZCxzdWJtaXQ6dGhpcy5zdWJtaXR9KTpudWxsfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCkpO3QuZGVmYXVsdD1tfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMTQpLGQ9cihmKSxwPW4oMTUpLGI9bigxKSxoPXIoYikseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpe2EodGhpcyx0KTt2YXIgbj1vKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwodGhpcyxlKSk7cmV0dXJuIG4uY2xvc2VNb2RhbD1mdW5jdGlvbigpe2QuZGVmYXVsdC5kaXNwYXRjaCh7cmp2SWQ6bi5wcm9wcy5yanZJZCxuYW1lOlwiUkVTRVRcIn0pfSxuLnN1Ym1pdD1mdW5jdGlvbigpe24ucHJvcHMuc3VibWl0KG4uc3RhdGUuaW5wdXQpfSxuLnN0YXRlPXtpbnB1dDplLmlucHV0P2UuaW5wdXQ6XCJcIn0sbn1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMucHJvcHMsbj10LnRoZW1lLHI9dC5yanZJZCxhPXQuaXNWYWxpZCxvPXRoaXMuc3RhdGUuaW5wdXQsaT1hKG8pO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHMoe2NsYXNzTmFtZTpcImtleS1tb2RhbC1yZXF1ZXN0XCJ9LCgwLGguZGVmYXVsdCkobixcImtleS1tb2RhbC1yZXF1ZXN0XCIpLHtvbkNsaWNrOnRoaXMuY2xvc2VNb2RhbH0pLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIscyh7fSwoMCxoLmRlZmF1bHQpKG4sXCJrZXktbW9kYWxcIikse29uQ2xpY2s6ZnVuY3Rpb24oZSl7ZS5zdG9wUHJvcGFnYXRpb24oKX19KSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCgwLGguZGVmYXVsdCkobixcImtleS1tb2RhbC1sYWJlbFwiKSxcIktleSBOYW1lOlwiKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtzdHlsZTp7cG9zaXRpb246XCJyZWxhdGl2ZVwifX0sYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLHMoe30sKDAsaC5kZWZhdWx0KShuLFwia2V5LW1vZGFsLWlucHV0XCIpLHtjbGFzc05hbWU6XCJrZXktbW9kYWwtaW5wdXRcIixyZWY6ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuZm9jdXMoKX0sc3BlbGxDaGVjazohMSx2YWx1ZTpvLHBsYWNlaG9sZGVyOlwiLi4uXCIsb25DaGFuZ2U6ZnVuY3Rpb24odCl7ZS5zZXRTdGF0ZSh7aW5wdXQ6dC50YXJnZXQudmFsdWV9KX0sb25LZXlQcmVzczpmdW5jdGlvbih0KXtpJiZcIkVudGVyXCI9PT10LmtleT9lLnN1Ym1pdCgpOlwiRXNjYXBlXCI9PT10LmtleSYmZS5jbG9zZU1vZGFsKCl9fSkpLGk/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQocC5DaGVja0NpcmNsZSxzKHt9LCgwLGguZGVmYXVsdCkobixcImtleS1tb2RhbC1zdWJtaXRcIikse2NsYXNzTmFtZTpcImtleS1tb2RhbC1zdWJtaXRcIixvbkNsaWNrOmZ1bmN0aW9uKHQpe3JldHVybiBlLnN1Ym1pdCgpfX0pKTpudWxsKSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInNwYW5cIiwoMCxoLmRlZmF1bHQpKG4sXCJrZXktbW9kYWwtY2FuY2VsXCIpLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHAuQWRkLHMoe30sKDAsaC5kZWZhdWx0KShuLFwia2V5LW1vZGFsLWNhbmNlbC1pY29uXCIpLHtjbGFzc05hbWU6XCJrZXktbW9kYWwtY2FuY2VsXCIsb25DbGljazpmdW5jdGlvbigpe2QuZGVmYXVsdC5kaXNwYXRjaCh7cmp2SWQ6cixuYW1lOlwiUkVTRVRcIn0pfX0pKSkpKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD15fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gYShlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gbyhlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMTQpLGQ9cihmKSxwPW4oMTMpLGI9KHIocCksbigxNSkpLGg9bigxKSx5PXIoaCksdj1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGEodGhpcyx0KSxvKHRoaXMsKHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkodCxlKSx1KHQsW3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLm1lc3NhZ2Usbj1lLmFjdGl2ZSxyPWUudGhlbWUsYT1lLnJqdklkO3JldHVybiBuP2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIscyh7Y2xhc3NOYW1lOlwidmFsaWRhdGlvbi1mYWlsdXJlXCJ9LCgwLHkuZGVmYXVsdCkocixcInZhbGlkYXRpb24tZmFpbHVyZVwiKSx7b25DbGljazpmdW5jdGlvbigpe2QuZGVmYXVsdC5kaXNwYXRjaCh7cmp2SWQ6YSxuYW1lOlwiUkVTRVRcIn0pfX0pLGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCgwLHkuZGVmYXVsdCkocixcInZhbGlkYXRpb24tZmFpbHVyZS1sYWJlbFwiKSx0KSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChiLkFkZCwoMCx5LmRlZmF1bHQpKHIsXCJ2YWxpZGF0aW9uLWZhaWx1cmUtY2xlYXJcIikpKTpudWxsfX1dKSx0fShjLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7dC5kZWZhdWx0PXZ9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE4MSk7XCJzdHJpbmdcIj09dHlwZW9mIHImJihyPVtbZS5pLHIsXCJcIl1dKTt2YXIgYT17fTthLnRyYW5zZm9ybT12b2lkIDAsbigxODMpKHIsYSksci5sb2NhbHMmJihlLmV4cG9ydHM9ci5sb2NhbHMpfSxmdW5jdGlvbihlLHQsbil7dD1lLmV4cG9ydHM9bigxODIpKCExKSx0LnB1c2goW2UuaSxcIi5yZWFjdC1qc29uLXZpZXcgLmNvcHktdG8tY2xpcGJvYXJkLWNvbnRhaW5lcnt2ZXJ0aWNhbC1hbGlnbjp0b3A7ZGlzcGxheTpub25lfS5yZWFjdC1qc29uLXZpZXcgLmNsaWNrLXRvLWFkZCwucmVhY3QtanNvbi12aWV3IC5jbGljay10by1lZGl0LC5yZWFjdC1qc29uLXZpZXcgLmNsaWNrLXRvLXJlbW92ZXtkaXNwbGF5Om5vbmV9LnJlYWN0LWpzb24tdmlldyAub2JqZWN0LWNvbnRlbnQgLnZhcmlhYmxlLXJvdzpob3ZlciAuY2xpY2stdG8tZWRpdCwucmVhY3QtanNvbi12aWV3IC5vYmplY3QtY29udGVudCAudmFyaWFibGUtcm93OmhvdmVyIC5jbGljay10by1yZW1vdmUsLnJlYWN0LWpzb24tdmlldyAub2JqZWN0LWtleS12YWw6aG92ZXI+c3Bhbj4ub2JqZWN0LW1ldGEtZGF0YT4uY2xpY2stdG8tYWRkLC5yZWFjdC1qc29uLXZpZXcgLm9iamVjdC1rZXktdmFsOmhvdmVyPnNwYW4+Lm9iamVjdC1tZXRhLWRhdGE+LmNsaWNrLXRvLXJlbW92ZSwucmVhY3QtanNvbi12aWV3IC5vYmplY3Qta2V5LXZhbDpob3Zlcj5zcGFuPi5vYmplY3QtbWV0YS1kYXRhPi5jb3B5LXRvLWNsaXBib2FyZC1jb250YWluZXIsLnJlYWN0LWpzb24tdmlldyAudmFyaWFibGUtcm93OmhvdmVyIC5jb3B5LXRvLWNsaXBib2FyZC1jb250YWluZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2t9XCIsXCJcIl0pfSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSx0KXt2YXIgbj1lWzFdfHxcIlwiLGE9ZVszXTtpZighYSlyZXR1cm4gbjtpZih0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBidG9hKXt2YXIgbz1yKGEpO3JldHVybltuXS5jb25jYXQoYS5zb3VyY2VzLm1hcChmdW5jdGlvbihlKXtyZXR1cm5cIi8qIyBzb3VyY2VVUkw9XCIrYS5zb3VyY2VSb290K2UrXCIgKi9cIn0pKS5jb25jYXQoW29dKS5qb2luKFwiXFxuXCIpfXJldHVybltuXS5qb2luKFwiXFxuXCIpfWZ1bmN0aW9uIHIoZSl7cmV0dXJuXCIvKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIrYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoZSkpKSkrXCIgKi9cIn1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9W107cmV0dXJuIHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24odCl7dmFyIHI9bih0LGUpO3JldHVybiB0WzJdP1wiQG1lZGlhIFwiK3RbMl0rXCJ7XCIrcitcIn1cIjpyfSkuam9pbihcIlwiKX0sdC5pPWZ1bmN0aW9uKGUsbil7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPVtbbnVsbCxlLFwiXCJdXSk7Zm9yKHZhciByPXt9LGE9MDthPHRoaXMubGVuZ3RoO2ErKyl7dmFyIG89dGhpc1thXVswXTtcIm51bWJlclwiPT10eXBlb2YgbyYmKHJbb109ITApfWZvcihhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBpPWVbYV07XCJudW1iZXJcIj09dHlwZW9mIGlbMF0mJnJbaVswXV18fChuJiYhaVsyXT9pWzJdPW46biYmKGlbMl09XCIoXCIraVsyXStcIikgYW5kIChcIituK1wiKVwiKSx0LnB1c2goaSkpfX0sdH19LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl0sYT1iW3IuaWRdO2lmKGEpe2EucmVmcysrO2Zvcih2YXIgbz0wO288YS5wYXJ0cy5sZW5ndGg7bysrKWEucGFydHNbb10oci5wYXJ0c1tvXSk7Zm9yKDtvPHIucGFydHMubGVuZ3RoO28rKylhLnBhcnRzLnB1c2goYyhyLnBhcnRzW29dLHQpKX1lbHNle2Zvcih2YXIgaT1bXSxvPTA7bzxyLnBhcnRzLmxlbmd0aDtvKyspaS5wdXNoKGMoci5wYXJ0c1tvXSx0KSk7YltyLmlkXT17aWQ6ci5pZCxyZWZzOjEscGFydHM6aX19fX1mdW5jdGlvbiBhKGUsdCl7Zm9yKHZhciBuPVtdLHI9e30sYT0wO2E8ZS5sZW5ndGg7YSsrKXt2YXIgbz1lW2FdLGk9dC5iYXNlP29bMF0rdC5iYXNlOm9bMF0scz1vWzFdLHU9b1syXSxsPW9bM10sYz17Y3NzOnMsbWVkaWE6dSxzb3VyY2VNYXA6bH07cltpXT9yW2ldLnBhcnRzLnB1c2goYyk6bi5wdXNoKHJbaV09e2lkOmkscGFydHM6W2NdfSl9cmV0dXJuIG59ZnVuY3Rpb24gbyhlLHQpe3ZhciBuPXkoZS5pbnNlcnRJbnRvKTtpZighbil0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTt2YXIgcj1nW2cubGVuZ3RoLTFdO2lmKFwidG9wXCI9PT1lLmluc2VydEF0KXI/ci5uZXh0U2libGluZz9uLmluc2VydEJlZm9yZSh0LHIubmV4dFNpYmxpbmcpOm4uYXBwZW5kQ2hpbGQodCk6bi5pbnNlcnRCZWZvcmUodCxuLmZpcnN0Q2hpbGQpLGcucHVzaCh0KTtlbHNle2lmKFwiYm90dG9tXCIhPT1lLmluc2VydEF0KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnLiBNdXN0IGJlICd0b3AnIG9yICdib3R0b20nLlwiKTtuLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBpKGUpe2lmKG51bGw9PT1lLnBhcmVudE5vZGUpcmV0dXJuITE7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpO3ZhciB0PWcuaW5kZXhPZihlKTt0Pj0wJiZnLnNwbGljZSh0LDEpfWZ1bmN0aW9uIHMoZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO3JldHVybiBlLmF0dHJzLnR5cGU9XCJ0ZXh0L2Nzc1wiLGwodCxlLmF0dHJzKSxvKGUsdCksdH1mdW5jdGlvbiB1KGUpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO3JldHVybiBlLmF0dHJzLnR5cGU9XCJ0ZXh0L2Nzc1wiLGUuYXR0cnMucmVsPVwic3R5bGVzaGVldFwiLGwodCxlLmF0dHJzKSxvKGUsdCksdH1mdW5jdGlvbiBsKGUsdCl7T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihuKXtlLnNldEF0dHJpYnV0ZShuLHRbbl0pfSl9ZnVuY3Rpb24gYyhlLHQpe3ZhciBuLHIsYSxvO2lmKHQudHJhbnNmb3JtJiZlLmNzcyl7aWYoIShvPXQudHJhbnNmb3JtKGUuY3NzKSkpcmV0dXJuIGZ1bmN0aW9uKCl7fTtlLmNzcz1vfWlmKHQuc2luZ2xldG9uKXt2YXIgbD1tKys7bj12fHwodj1zKHQpKSxyPWYuYmluZChudWxsLG4sbCwhMSksYT1mLmJpbmQobnVsbCxuLGwsITApfWVsc2UgZS5zb3VyY2VNYXAmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFVSTCYmXCJmdW5jdGlvblwiPT10eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCYmXCJmdW5jdGlvblwiPT10eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCYmXCJmdW5jdGlvblwiPT10eXBlb2YgQmxvYiYmXCJmdW5jdGlvblwiPT10eXBlb2YgYnRvYT8obj11KHQpLHI9cC5iaW5kKG51bGwsbix0KSxhPWZ1bmN0aW9uKCl7aShuKSxuLmhyZWYmJlVSTC5yZXZva2VPYmplY3RVUkwobi5ocmVmKX0pOihuPXModCkscj1kLmJpbmQobnVsbCxuKSxhPWZ1bmN0aW9uKCl7aShuKX0pO3JldHVybiByKGUpLGZ1bmN0aW9uKHQpe2lmKHQpe2lmKHQuY3NzPT09ZS5jc3MmJnQubWVkaWE9PT1lLm1lZGlhJiZ0LnNvdXJjZU1hcD09PWUuc291cmNlTWFwKXJldHVybjtyKGU9dCl9ZWxzZSBhKCl9fWZ1bmN0aW9uIGYoZSx0LG4scil7dmFyIGE9bj9cIlwiOnIuY3NzO2lmKGUuc3R5bGVTaGVldCllLnN0eWxlU2hlZXQuY3NzVGV4dD1qKHQsYSk7ZWxzZXt2YXIgbz1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhKSxpPWUuY2hpbGROb2RlcztpW3RdJiZlLnJlbW92ZUNoaWxkKGlbdF0pLGkubGVuZ3RoP2UuaW5zZXJ0QmVmb3JlKG8saVt0XSk6ZS5hcHBlbmRDaGlsZChvKX19ZnVuY3Rpb24gZChlLHQpe3ZhciBuPXQuY3NzLHI9dC5tZWRpYTtpZihyJiZlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsciksZS5zdHlsZVNoZWV0KWUuc3R5bGVTaGVldC5jc3NUZXh0PW47ZWxzZXtmb3IoO2UuZmlyc3RDaGlsZDspZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpO2UuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobikpfX1mdW5jdGlvbiBwKGUsdCxuKXt2YXIgcj1uLmNzcyxhPW4uc291cmNlTWFwLG89dm9pZCAwPT09dC5jb252ZXJ0VG9BYnNvbHV0ZVVybHMmJmE7KHQuY29udmVydFRvQWJzb2x1dGVVcmxzfHxvKSYmKHI9XyhyKSksYSYmKHIrPVwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIitidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShhKSkpKStcIiAqL1wiKTt2YXIgaT1uZXcgQmxvYihbcl0se3R5cGU6XCJ0ZXh0L2Nzc1wifSkscz1lLmhyZWY7ZS5ocmVmPVVSTC5jcmVhdGVPYmplY3RVUkwoaSkscyYmVVJMLnJldm9rZU9iamVjdFVSTChzKX12YXIgYj17fSxoPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBmdW5jdGlvbigpe3JldHVybiB2b2lkIDA9PT10JiYodD1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksdH19KGZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdyYmZG9jdW1lbnQmJmRvY3VtZW50LmFsbCYmIXdpbmRvdy5hdG9ifSkseT1mdW5jdGlvbihlKXt2YXIgdD17fTtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHZvaWQgMD09PXRbbl0mJih0W25dPWUuY2FsbCh0aGlzLG4pKSx0W25dfX0oZnVuY3Rpb24oZSl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSl9KSx2PW51bGwsbT0wLGc9W10sXz1uKDE4NCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIERFQlVHJiZERUJVRyYmXCJvYmplY3RcIiE9dHlwZW9mIGRvY3VtZW50KXRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTt0PXR8fHt9LHQuYXR0cnM9XCJvYmplY3RcIj09dHlwZW9mIHQuYXR0cnM/dC5hdHRyczp7fSx0LnNpbmdsZXRvbnx8KHQuc2luZ2xldG9uPWgoKSksdC5pbnNlcnRJbnRvfHwodC5pbnNlcnRJbnRvPVwiaGVhZFwiKSx0Lmluc2VydEF0fHwodC5pbnNlcnRBdD1cImJvdHRvbVwiKTt2YXIgbj1hKGUsdCk7cmV0dXJuIHIobix0KSxmdW5jdGlvbihlKXtmb3IodmFyIG89W10saT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgcz1uW2ldLHU9YltzLmlkXTt1LnJlZnMtLSxvLnB1c2godSl9ZSYmcihhKGUsdCksdCk7Zm9yKHZhciBpPTA7aTxvLmxlbmd0aDtpKyspe3ZhciB1PW9baV07aWYoMD09PXUucmVmcyl7Zm9yKHZhciBsPTA7bDx1LnBhcnRzLmxlbmd0aDtsKyspdS5wYXJ0c1tsXSgpO2RlbGV0ZSBiW3UuaWRdfX19fTt2YXIgaj1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiBmdW5jdGlvbih0LG4pe3JldHVybiBlW3RdPW4sZS5maWx0ZXIoQm9vbGVhbikuam9pbihcIlxcblwiKX19KCl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5sb2NhdGlvbjtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtpZighZXx8XCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuIGU7dmFyIG49dC5wcm90b2NvbCtcIi8vXCIrdC5ob3N0LHI9bit0LnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLyxcIi9cIik7cmV0dXJuIGUucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksZnVuY3Rpb24oZSx0KXt2YXIgYT10LnRyaW0oKS5yZXBsYWNlKC9eXCIoLiopXCIkLyxmdW5jdGlvbihlLHQpe3JldHVybiB0fSkucmVwbGFjZSgvXicoLiopJyQvLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR9KTtpZigvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KGEpKXJldHVybiBlO3ZhciBvO3JldHVybiBvPTA9PT1hLmluZGV4T2YoXCIvL1wiKT9hOjA9PT1hLmluZGV4T2YoXCIvXCIpP24rYTpyK2EucmVwbGFjZSgvXlxcLlxcLy8sXCJcIiksXCJ1cmwoXCIrSlNPTi5zdHJpbmdpZnkobykrXCIpXCJ9KX19XSl9KTsiLCIhZnVuY3Rpb24oZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZShudWxsKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGUobnVsbCkpOndpbmRvdy5zdHlsaXM9ZShudWxsKX0oZnVuY3Rpb24gZShhKXtcInVzZSBzdHJpY3RcIjt2YXIgcj0vXlxcMCsvZyxjPS9bXFwwXFxyXFxmXS9nLHM9LzogKi9nLHQ9L3pvb3xncmEvLGk9LyhbLDogXSkodHJhbnNmb3JtKS9nLGY9LywrXFxzKig/IVteKF0qWyldKS9nLG49LyArXFxzKig/IVteKF0qWyldKS9nLGw9LyAqW1xcMF0gKi9nLG89LyxcXHIrPy9nLGg9LyhbXFx0XFxyXFxuIF0pKlxcZj8mL2csdT0vOmdsb2JhbFxcKCgoPzpbXlxcKFxcKVxcW1xcXV0qfFxcWy4qXFxdfFxcKFteXFwoXFwpXSpcXCkpKilcXCkvZyxkPS9cXFcrL2csYj0vQChrXFx3KylcXHMqKFxcUyopXFxzKi8scD0vOjoocGxhY2UpL2csaz0vOihyZWFkLW9ubHkpL2csZz0vXFxzKyg/PVt7XFxdOz06Pl0pL2csQT0vKFtbfT06Pl0pXFxzKy9nLEM9LyhcXHtbXntdKz8pOyg/PVxcfSkvZyx3PS9cXHN7Mix9L2csdj0vKFteXFwoXSkoOispICovZyxtPS9bc3ZoXVxcdystW3RibHJdezJ9Lyx4PS9cXChcXHMqKC4qKVxccypcXCkvZywkPS8oW1xcc1xcU10qPyk7L2cseT0vLXNlbGZ8ZmxleC0vZyxPPS9bXl0qPyg6W3JwXVtlbF1hW1xcdy1dKylbXl0qLyxqPS9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sej0vKFteLV0pKGltYWdlLXNldFxcKCkvLE49XCItd2Via2l0LVwiLFM9XCItbW96LVwiLEY9XCItbXMtXCIsVz01OSxxPTEyNSxCPTEyMyxEPTQwLEU9NDEsRz05MSxIPTkzLEk9MTAsSj0xMyxLPTksTD02NCxNPTMyLFA9MzgsUT00NSxSPTk1LFQ9NDIsVT00NCxWPTU4LFg9MzksWT0zNCxaPTQ3LF89NjIsZWU9NDMsYWU9MTI2LHJlPTAsY2U9MTIsc2U9MTEsdGU9MTA3LGllPTEwOSxmZT0xMTUsbmU9MTEyLGxlPTExMSxvZT0xMDUsaGU9OTksdWU9MTAwLGRlPTExMixiZT0xLHBlPTEsa2U9MCxnZT0xLEFlPTEsQ2U9MSx3ZT0wLHZlPTAsbWU9MCx4ZT1bXSwkZT1bXSx5ZT0wLE9lPW51bGwsamU9LTIsemU9LTEsTmU9MCxTZT0xLEZlPTIsV2U9MyxxZT0wLEJlPTEsRGU9XCJcIixFZT1cIlwiLEdlPVwiXCI7ZnVuY3Rpb24gSGUoZSxhLHMsdCxpKXtmb3IodmFyIGYsbixvPTAsaD0wLHU9MCxkPTAsZz0wLEE9MCxDPTAsdz0wLG09MCwkPTAseT0wLE89MCxqPTAsej0wLFI9MCx3ZT0wLCRlPTAsT2U9MCxqZT0wLHplPXMubGVuZ3RoLEplPXplLTEsUmU9XCJcIixUZT1cIlwiLFVlPVwiXCIsVmU9XCJcIixYZT1cIlwiLFllPVwiXCI7Ujx6ZTspe2lmKEM9cy5jaGFyQ29kZUF0KFIpLFI9PT1KZSlpZihoK2QrdStvIT09MCl7aWYoMCE9PWgpQz1oPT09Wj9JOlo7ZD11PW89MCx6ZSsrLEplKyt9aWYoaCtkK3Urbz09PTApe2lmKFI9PT1KZSl7aWYod2U+MClUZT1UZS5yZXBsYWNlKGMsXCJcIik7aWYoVGUudHJpbSgpLmxlbmd0aD4wKXtzd2l0Y2goQyl7Y2FzZSBNOmNhc2UgSzpjYXNlIFc6Y2FzZSBKOmNhc2UgSTpicmVhaztkZWZhdWx0OlRlKz1zLmNoYXJBdChSKX1DPVd9fWlmKDE9PT0kZSlzd2l0Y2goQyl7Y2FzZSBCOmNhc2UgcTpjYXNlIFc6Y2FzZSBZOmNhc2UgWDpjYXNlIEQ6Y2FzZSBFOmNhc2UgVTokZT0wO2Nhc2UgSzpjYXNlIEo6Y2FzZSBJOmNhc2UgTTpicmVhaztkZWZhdWx0OmZvcigkZT0wLGplPVIsZz1DLFItLSxDPVc7amU8emU7KXN3aXRjaChzLmNoYXJDb2RlQXQoamUrKykpe2Nhc2UgSTpjYXNlIEo6Y2FzZSBXOisrUixDPWcsamU9emU7YnJlYWs7Y2FzZSBWOmlmKHdlPjApKytSLEM9ZztjYXNlIEI6amU9emV9fXN3aXRjaChDKXtjYXNlIEI6Zm9yKGc9KFRlPVRlLnRyaW0oKSkuY2hhckNvZGVBdCgwKSx5PTEsamU9KytSO1I8emU7KXtzd2l0Y2goQz1zLmNoYXJDb2RlQXQoUikpe2Nhc2UgQjp5Kys7YnJlYWs7Y2FzZSBxOnktLTticmVhaztjYXNlIFo6c3dpdGNoKEE9cy5jaGFyQ29kZUF0KFIrMSkpe2Nhc2UgVDpjYXNlIFo6Uj1RZShBLFIsSmUscyl9YnJlYWs7Y2FzZSBHOkMrKztjYXNlIEQ6QysrO2Nhc2UgWTpjYXNlIFg6Zm9yKDtSKys8SmUmJnMuY2hhckNvZGVBdChSKSE9PUM7KTt9aWYoMD09PXkpYnJlYWs7UisrfWlmKFVlPXMuc3Vic3RyaW5nKGplLFIpLGc9PT1yZSlnPShUZT1UZS5yZXBsYWNlKHIsXCJcIikudHJpbSgpKS5jaGFyQ29kZUF0KDApO3N3aXRjaChnKXtjYXNlIEw6aWYod2U+MClUZT1UZS5yZXBsYWNlKGMsXCJcIik7c3dpdGNoKEE9VGUuY2hhckNvZGVBdCgxKSl7Y2FzZSB1ZTpjYXNlIGllOmNhc2UgZmU6Y2FzZSBROmY9YTticmVhaztkZWZhdWx0OmY9eGV9aWYoamU9KFVlPUhlKGEsZixVZSxBLGkrMSkpLmxlbmd0aCxtZT4wJiYwPT09amUpamU9VGUubGVuZ3RoO2lmKHllPjApaWYoZj1JZSh4ZSxUZSxPZSksbj1QZShXZSxVZSxmLGEscGUsYmUsamUsQSxpLHQpLFRlPWYuam9pbihcIlwiKSx2b2lkIDAhPT1uKWlmKDA9PT0oamU9KFVlPW4udHJpbSgpKS5sZW5ndGgpKUE9MCxVZT1cIlwiO2lmKGplPjApc3dpdGNoKEEpe2Nhc2UgZmU6VGU9VGUucmVwbGFjZSh4LE1lKTtjYXNlIHVlOmNhc2UgaWU6Y2FzZSBROlVlPVRlK1wie1wiK1VlK1wifVwiO2JyZWFrO2Nhc2UgdGU6aWYoVWU9KFRlPVRlLnJlcGxhY2UoYixcIiQxICQyXCIrKEJlPjA/RGU6XCJcIikpKStcIntcIitVZStcIn1cIiwxPT09QWV8fDI9PT1BZSYmTGUoXCJAXCIrVWUsMykpVWU9XCJAXCIrTitVZStcIkBcIitVZTtlbHNlIFVlPVwiQFwiK1VlO2JyZWFrO2RlZmF1bHQ6aWYoVWU9VGUrVWUsdD09PWRlKVZlKz1VZSxVZT1cIlwifWVsc2UgVWU9XCJcIjticmVhaztkZWZhdWx0OlVlPUhlKGEsSWUoYSxUZSxPZSksVWUsdCxpKzEpfVhlKz1VZSxPPTAsJGU9MCx6PTAsd2U9MCxPZT0wLGo9MCxUZT1cIlwiLFVlPVwiXCIsQz1zLmNoYXJDb2RlQXQoKytSKTticmVhaztjYXNlIHE6Y2FzZSBXOmlmKChqZT0oVGU9KHdlPjA/VGUucmVwbGFjZShjLFwiXCIpOlRlKS50cmltKCkpLmxlbmd0aCk+MSl7aWYoMD09PXopaWYoKGc9VGUuY2hhckNvZGVBdCgwKSk9PT1RfHxnPjk2JiZnPDEyMylqZT0oVGU9VGUucmVwbGFjZShcIiBcIixcIjpcIikpLmxlbmd0aDtpZih5ZT4wKWlmKHZvaWQgMCE9PShuPVBlKFNlLFRlLGEsZSxwZSxiZSxWZS5sZW5ndGgsdCxpLHQpKSlpZigwPT09KGplPShUZT1uLnRyaW0oKSkubGVuZ3RoKSlUZT1cIlxcMFxcMFwiO3N3aXRjaChnPVRlLmNoYXJDb2RlQXQoMCksQT1UZS5jaGFyQ29kZUF0KDEpLGcpe2Nhc2UgcmU6YnJlYWs7Y2FzZSBMOmlmKEE9PT1vZXx8QT09PWhlKXtZZSs9VGUrcy5jaGFyQXQoUik7YnJlYWt9ZGVmYXVsdDppZihUZS5jaGFyQ29kZUF0KGplLTEpPT09VilicmVhaztWZSs9S2UoVGUsZyxBLFRlLmNoYXJDb2RlQXQoMikpfX1PPTAsJGU9MCx6PTAsd2U9MCxPZT0wLFRlPVwiXCIsQz1zLmNoYXJDb2RlQXQoKytSKX19c3dpdGNoKEMpe2Nhc2UgSjpjYXNlIEk6aWYoaCtkK3Urbyt2ZT09PTApc3dpdGNoKCQpe2Nhc2UgRTpjYXNlIFg6Y2FzZSBZOmNhc2UgTDpjYXNlIGFlOmNhc2UgXzpjYXNlIFQ6Y2FzZSBlZTpjYXNlIFo6Y2FzZSBROmNhc2UgVjpjYXNlIFU6Y2FzZSBXOmNhc2UgQjpjYXNlIHE6YnJlYWs7ZGVmYXVsdDppZih6PjApJGU9MX1pZihoPT09WiloPTA7ZWxzZSBpZihnZStPPT09MCYmdCE9PXRlJiZUZS5sZW5ndGg+MCl3ZT0xLFRlKz1cIlxcMFwiO2lmKHllKnFlPjApUGUoTmUsVGUsYSxlLHBlLGJlLFZlLmxlbmd0aCx0LGksdCk7YmU9MSxwZSsrO2JyZWFrO2Nhc2UgVzpjYXNlIHE6aWYoaCtkK3Urbz09PTApe2JlKys7YnJlYWt9ZGVmYXVsdDpzd2l0Y2goYmUrKyxSZT1zLmNoYXJBdChSKSxDKXtjYXNlIEs6Y2FzZSBNOmlmKGQrbytoPT09MClzd2l0Y2godyl7Y2FzZSBVOmNhc2UgVjpjYXNlIEs6Y2FzZSBNOlJlPVwiXCI7YnJlYWs7ZGVmYXVsdDppZihDIT09TSlSZT1cIiBcIn1icmVhaztjYXNlIHJlOlJlPVwiXFxcXDBcIjticmVhaztjYXNlIGNlOlJlPVwiXFxcXGZcIjticmVhaztjYXNlIHNlOlJlPVwiXFxcXHZcIjticmVhaztjYXNlIFA6aWYoZCtoK289PT0wJiZnZT4wKU9lPTEsd2U9MSxSZT1cIlxcZlwiK1JlO2JyZWFrO2Nhc2UgMTA4OmlmKGQraCtvK2tlPT09MCYmej4wKXN3aXRjaChSLXope2Nhc2UgMjppZih3PT09bmUmJnMuY2hhckNvZGVBdChSLTMpPT09VilrZT13O2Nhc2UgODppZihtPT09bGUpa2U9bX1icmVhaztjYXNlIFY6aWYoZCtoK289PT0wKXo9UjticmVhaztjYXNlIFU6aWYoaCt1K2Qrbz09PTApd2U9MSxSZSs9XCJcXHJcIjticmVhaztjYXNlIFk6Y2FzZSBYOmlmKDA9PT1oKWQ9ZD09PUM/MDowPT09ZD9DOmQ7YnJlYWs7Y2FzZSBHOmlmKGQraCt1PT09MClvKys7YnJlYWs7Y2FzZSBIOmlmKGQraCt1PT09MClvLS07YnJlYWs7Y2FzZSBFOmlmKGQraCtvPT09MCl1LS07YnJlYWs7Y2FzZSBEOmlmKGQraCtvPT09MCl7aWYoMD09PU8pc3dpdGNoKDIqdyszKm0pe2Nhc2UgNTMzOmJyZWFrO2RlZmF1bHQ6eT0wLE89MX11Kyt9YnJlYWs7Y2FzZSBMOmlmKGgrdStkK28reitqPT09MClqPTE7YnJlYWs7Y2FzZSBUOmNhc2UgWjppZihkK28rdT4wKWJyZWFrO3N3aXRjaChoKXtjYXNlIDA6c3dpdGNoKDIqQyszKnMuY2hhckNvZGVBdChSKzEpKXtjYXNlIDIzNTpoPVo7YnJlYWs7Y2FzZSAyMjA6amU9UixoPVR9YnJlYWs7Y2FzZSBUOmlmKEM9PT1aJiZ3PT09VCYmamUrMiE9PVIpe2lmKDMzPT09cy5jaGFyQ29kZUF0KGplKzIpKVZlKz1zLnN1YnN0cmluZyhqZSxSKzEpO1JlPVwiXCIsaD0wfX19aWYoMD09PWgpe2lmKGdlK2QrbytqPT09MCYmdCE9PXRlJiZDIT09Vylzd2l0Y2goQyl7Y2FzZSBVOmNhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBFOmNhc2UgRDppZigwPT09Tyl7c3dpdGNoKHcpe2Nhc2UgSzpjYXNlIE06Y2FzZSBJOmNhc2UgSjpSZSs9XCJcXDBcIjticmVhaztkZWZhdWx0OlJlPVwiXFwwXCIrUmUrKEM9PT1VP1wiXCI6XCJcXDBcIil9d2U9MX1lbHNlIHN3aXRjaChDKXtjYXNlIEQ6aWYoeis3PT09UiYmMTA4PT09dyl6PTA7Tz0rK3k7YnJlYWs7Y2FzZSBFOmlmKDA9PShPPS0teSkpd2U9MSxSZSs9XCJcXDBcIn1icmVhaztjYXNlIEs6Y2FzZSBNOnN3aXRjaCh3KXtjYXNlIHJlOmNhc2UgQjpjYXNlIHE6Y2FzZSBXOmNhc2UgVTpjYXNlIGNlOmNhc2UgSzpjYXNlIE06Y2FzZSBJOmNhc2UgSjpicmVhaztkZWZhdWx0OmlmKDA9PT1PKXdlPTEsUmUrPVwiXFwwXCJ9fWlmKFRlKz1SZSxDIT09TSYmQyE9PUspJD1DfX1tPXcsdz1DLFIrK31pZihqZT1WZS5sZW5ndGgsbWU+MClpZigwPT09amUmJjA9PT1YZS5sZW5ndGgmJjA9PT1hWzBdLmxlbmd0aD09ZmFsc2UpaWYodCE9PWllfHwxPT09YS5sZW5ndGgmJihnZT4wP0VlOkdlKT09PWFbMF0pamU9YS5qb2luKFwiLFwiKS5sZW5ndGgrMjtpZihqZT4wKXtpZihmPTA9PT1nZSYmdCE9PXRlP2Z1bmN0aW9uKGUpe2Zvcih2YXIgYSxyLHM9MCx0PWUubGVuZ3RoLGk9QXJyYXkodCk7czx0Oysrcyl7Zm9yKHZhciBmPWVbc10uc3BsaXQobCksbj1cIlwiLG89MCxoPTAsdT0wLGQ9MCxiPWYubGVuZ3RoO288YjsrK28pe2lmKDA9PT0oaD0ocj1mW29dKS5sZW5ndGgpJiZiPjEpY29udGludWU7aWYodT1uLmNoYXJDb2RlQXQobi5sZW5ndGgtMSksZD1yLmNoYXJDb2RlQXQoMCksYT1cIlwiLDAhPT1vKXN3aXRjaCh1KXtjYXNlIFQ6Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIE06Y2FzZSBEOmJyZWFrO2RlZmF1bHQ6YT1cIiBcIn1zd2l0Y2goZCl7Y2FzZSBQOnI9YStFZTtjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgTTpjYXNlIEU6Y2FzZSBEOmJyZWFrO2Nhc2UgRzpyPWErcitFZTticmVhaztjYXNlIFY6c3dpdGNoKDIqci5jaGFyQ29kZUF0KDEpKzMqci5jaGFyQ29kZUF0KDIpKXtjYXNlIDUzMDppZihDZT4wKXtyPWErci5zdWJzdHJpbmcoOCxoLTEpO2JyZWFrfWRlZmF1bHQ6aWYobzwxfHxmW28tMV0ubGVuZ3RoPDEpcj1hK0VlK3J9YnJlYWs7Y2FzZSBVOmE9XCJcIjtkZWZhdWx0OmlmKGg+MSYmci5pbmRleE9mKFwiOlwiKT4wKXI9YStyLnJlcGxhY2UodixcIiQxXCIrRWUrXCIkMlwiKTtlbHNlIHI9YStyK0VlfW4rPXJ9aVtzXT1uLnJlcGxhY2UoYyxcIlwiKS50cmltKCl9cmV0dXJuIGl9KGEpOmEseWU+MClpZih2b2lkIDAhPT0obj1QZShGZSxWZSxmLGUscGUsYmUsamUsdCxpLHQpKSYmMD09PShWZT1uKS5sZW5ndGgpcmV0dXJuIFllK1ZlK1hlO2lmKFZlPWYuam9pbihcIixcIikrXCJ7XCIrVmUrXCJ9XCIsQWUqa2UhPTApe2lmKDI9PT1BZSYmIUxlKFZlLDIpKWtlPTA7c3dpdGNoKGtlKXtjYXNlIGxlOlZlPVZlLnJlcGxhY2UoayxcIjpcIitTK1wiJDFcIikrVmU7YnJlYWs7Y2FzZSBuZTpWZT1WZS5yZXBsYWNlKHAsXCI6OlwiK04rXCJpbnB1dC0kMVwiKStWZS5yZXBsYWNlKHAsXCI6OlwiK1MrXCIkMVwiKStWZS5yZXBsYWNlKHAsXCI6XCIrRitcImlucHV0LSQxXCIpK1ZlfWtlPTB9fXJldHVybiBZZStWZStYZX1mdW5jdGlvbiBJZShlLGEscil7dmFyIGM9YS50cmltKCkuc3BsaXQobykscz1jLHQ9Yy5sZW5ndGgsaT1lLmxlbmd0aDtzd2l0Y2goaSl7Y2FzZSAwOmNhc2UgMTpmb3IodmFyIGY9MCxuPTA9PT1pP1wiXCI6ZVswXStcIiBcIjtmPHQ7KytmKXNbZl09SmUobixzW2ZdLHIsaSkudHJpbSgpO2JyZWFrO2RlZmF1bHQ6Zj0wO3ZhciBsPTA7Zm9yKHM9W107Zjx0OysrZilmb3IodmFyIGg9MDtoPGk7KytoKXNbbCsrXT1KZShlW2hdK1wiIFwiLGNbZl0scixpKS50cmltKCl9cmV0dXJuIHN9ZnVuY3Rpb24gSmUoZSxhLHIsYyl7dmFyIHM9YSx0PXMuY2hhckNvZGVBdCgwKTtpZih0PDMzKXQ9KHM9cy50cmltKCkpLmNoYXJDb2RlQXQoMCk7c3dpdGNoKHQpe2Nhc2UgUDpzd2l0Y2goZ2UrYyl7Y2FzZSAwOmNhc2UgMTppZigwPT09ZS50cmltKCkubGVuZ3RoKWJyZWFrO2RlZmF1bHQ6cmV0dXJuIHMucmVwbGFjZShoLFwiJDFcIitlLnRyaW0oKSl9YnJlYWs7Y2FzZSBWOnN3aXRjaChzLmNoYXJDb2RlQXQoMSkpe2Nhc2UgMTAzOmlmKENlPjAmJmdlPjApcmV0dXJuIHMucmVwbGFjZSh1LFwiJDFcIikucmVwbGFjZShoLFwiJDFcIitHZSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gZS50cmltKCkrcy5yZXBsYWNlKGgsXCIkMVwiK2UudHJpbSgpKX1kZWZhdWx0OmlmKHIqZ2U+MCYmcy5pbmRleE9mKFwiXFxmXCIpPjApcmV0dXJuIHMucmVwbGFjZShoLChlLmNoYXJDb2RlQXQoMCk9PT1WP1wiXCI6XCIkMVwiKStlLnRyaW0oKSl9cmV0dXJuIGUrc31mdW5jdGlvbiBLZShlLGEscixjKXt2YXIgbCxvPTAsaD1lK1wiO1wiLHU9MiphKzMqcis0KmM7aWYoOTQ0PT09dSlyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIGE9ZS5sZW5ndGgscj1lLmluZGV4T2YoXCI6XCIsOSkrMSxjPWUuc3Vic3RyaW5nKDAscikudHJpbSgpLHM9ZS5zdWJzdHJpbmcocixhLTEpLnRyaW0oKTtzd2l0Y2goZS5jaGFyQ29kZUF0KDkpKkJlKXtjYXNlIDA6YnJlYWs7Y2FzZSBROmlmKDExMCE9PWUuY2hhckNvZGVBdCgxMCkpYnJlYWs7ZGVmYXVsdDpmb3IodmFyIHQ9cy5zcGxpdCgocz1cIlwiLGYpKSxpPTAscj0wLGE9dC5sZW5ndGg7aTxhO3I9MCwrK2kpe2Zvcih2YXIgbD10W2ldLG89bC5zcGxpdChuKTtsPW9bcl07KXt2YXIgaD1sLmNoYXJDb2RlQXQoMCk7aWYoMT09PUJlJiYoaD5MJiZoPDkwfHxoPjk2JiZoPDEyM3x8aD09PVJ8fGg9PT1RJiZsLmNoYXJDb2RlQXQoMSkhPT1RKSlzd2l0Y2goaXNOYU4ocGFyc2VGbG9hdChsKSkrKC0xIT09bC5pbmRleE9mKFwiKFwiKSkpe2Nhc2UgMTpzd2l0Y2gobCl7Y2FzZVwiaW5maW5pdGVcIjpjYXNlXCJhbHRlcm5hdGVcIjpjYXNlXCJiYWNrd2FyZHNcIjpjYXNlXCJydW5uaW5nXCI6Y2FzZVwibm9ybWFsXCI6Y2FzZVwiZm9yd2FyZHNcIjpjYXNlXCJib3RoXCI6Y2FzZVwibm9uZVwiOmNhc2VcImxpbmVhclwiOmNhc2VcImVhc2VcIjpjYXNlXCJlYXNlLWluXCI6Y2FzZVwiZWFzZS1vdXRcIjpjYXNlXCJlYXNlLWluLW91dFwiOmNhc2VcInBhdXNlZFwiOmNhc2VcInJldmVyc2VcIjpjYXNlXCJhbHRlcm5hdGUtcmV2ZXJzZVwiOmNhc2VcImluaGVyaXRcIjpjYXNlXCJpbml0aWFsXCI6Y2FzZVwidW5zZXRcIjpjYXNlXCJzdGVwLXN0YXJ0XCI6Y2FzZVwic3RlcC1lbmRcIjpicmVhaztkZWZhdWx0OmwrPURlfX1vW3IrK109bH1zKz0oMD09PWk/XCJcIjpcIixcIikrby5qb2luKFwiIFwiKX19aWYocz1jK3MrXCI7XCIsMT09PUFlfHwyPT09QWUmJkxlKHMsMSkpcmV0dXJuIE4rcytzO3JldHVybiBzfShoKTtlbHNlIGlmKDA9PT1BZXx8Mj09PUFlJiYhTGUoaCwxKSlyZXR1cm4gaDtzd2l0Y2godSl7Y2FzZSAxMDE1OnJldHVybiA5Nz09PWguY2hhckNvZGVBdCgxMCk/TitoK2g6aDtjYXNlIDk1MTpyZXR1cm4gMTE2PT09aC5jaGFyQ29kZUF0KDMpP04raCtoOmg7Y2FzZSA5NjM6cmV0dXJuIDExMD09PWguY2hhckNvZGVBdCg1KT9OK2graDpoO2Nhc2UgMTAwOTppZigxMDAhPT1oLmNoYXJDb2RlQXQoNCkpYnJlYWs7Y2FzZSA5Njk6Y2FzZSA5NDI6cmV0dXJuIE4raCtoO2Nhc2UgOTc4OnJldHVybiBOK2grUytoK2g7Y2FzZSAxMDE5OmNhc2UgOTgzOnJldHVybiBOK2grUytoK0YraCtoO2Nhc2UgODgzOmlmKGguY2hhckNvZGVBdCg4KT09PVEpcmV0dXJuIE4raCtoO2lmKGguaW5kZXhPZihcImltYWdlLXNldChcIiwxMSk+MClyZXR1cm4gaC5yZXBsYWNlKHosXCIkMVwiK04rXCIkMlwiKStoO3JldHVybiBoO2Nhc2UgOTMyOmlmKGguY2hhckNvZGVBdCg0KT09PVEpc3dpdGNoKGguY2hhckNvZGVBdCg1KSl7Y2FzZSAxMDM6cmV0dXJuIE4rXCJib3gtXCIraC5yZXBsYWNlKFwiLWdyb3dcIixcIlwiKStOK2grRitoLnJlcGxhY2UoXCJncm93XCIsXCJwb3NpdGl2ZVwiKStoO2Nhc2UgMTE1OnJldHVybiBOK2grRitoLnJlcGxhY2UoXCJzaHJpbmtcIixcIm5lZ2F0aXZlXCIpK2g7Y2FzZSA5ODpyZXR1cm4gTitoK0YraC5yZXBsYWNlKFwiYmFzaXNcIixcInByZWZlcnJlZC1zaXplXCIpK2h9cmV0dXJuIE4raCtGK2graDtjYXNlIDk2NDpyZXR1cm4gTitoK0YrXCJmbGV4LVwiK2graDtjYXNlIDEwMjM6aWYoOTkhPT1oLmNoYXJDb2RlQXQoOCkpYnJlYWs7cmV0dXJuIGw9aC5zdWJzdHJpbmcoaC5pbmRleE9mKFwiOlwiLDE1KSkucmVwbGFjZShcImZsZXgtXCIsXCJcIikucmVwbGFjZShcInNwYWNlLWJldHdlZW5cIixcImp1c3RpZnlcIiksTitcImJveC1wYWNrXCIrbCtOK2grRitcImZsZXgtcGFja1wiK2wraDtjYXNlIDEwMDU6cmV0dXJuIHQudGVzdChoKT9oLnJlcGxhY2UocyxcIjpcIitOKStoLnJlcGxhY2UocyxcIjpcIitTKStoOmg7Y2FzZSAxZTM6c3dpdGNoKG89KGw9aC5zdWJzdHJpbmcoMTMpLnRyaW0oKSkuaW5kZXhPZihcIi1cIikrMSxsLmNoYXJDb2RlQXQoMCkrbC5jaGFyQ29kZUF0KG8pKXtjYXNlIDIyNjpsPWgucmVwbGFjZShtLFwidGJcIik7YnJlYWs7Y2FzZSAyMzI6bD1oLnJlcGxhY2UobSxcInRiLXJsXCIpO2JyZWFrO2Nhc2UgMjIwOmw9aC5yZXBsYWNlKG0sXCJsclwiKTticmVhaztkZWZhdWx0OnJldHVybiBofXJldHVybiBOK2grRitsK2g7Y2FzZSAxMDE3OmlmKC0xPT09aC5pbmRleE9mKFwic3RpY2t5XCIsOSkpcmV0dXJuIGg7Y2FzZSA5NzU6c3dpdGNoKG89KGg9ZSkubGVuZ3RoLTEwLHU9KGw9KDMzPT09aC5jaGFyQ29kZUF0KG8pP2guc3Vic3RyaW5nKDAsbyk6aCkuc3Vic3RyaW5nKGUuaW5kZXhPZihcIjpcIiw3KSsxKS50cmltKCkpLmNoYXJDb2RlQXQoMCkrKDB8bC5jaGFyQ29kZUF0KDcpKSl7Y2FzZSAyMDM6aWYobC5jaGFyQ29kZUF0KDgpPDExMSlicmVhaztjYXNlIDExNTpoPWgucmVwbGFjZShsLE4rbCkrXCI7XCIraDticmVhaztjYXNlIDIwNzpjYXNlIDEwMjpoPWgucmVwbGFjZShsLE4rKHU+MTAyP1wiaW5saW5lLVwiOlwiXCIpK1wiYm94XCIpK1wiO1wiK2gucmVwbGFjZShsLE4rbCkrXCI7XCIraC5yZXBsYWNlKGwsRitsK1wiYm94XCIpK1wiO1wiK2h9cmV0dXJuIGgrXCI7XCI7Y2FzZSA5Mzg6aWYoaC5jaGFyQ29kZUF0KDUpPT09USlzd2l0Y2goaC5jaGFyQ29kZUF0KDYpKXtjYXNlIDEwNTpyZXR1cm4gbD1oLnJlcGxhY2UoXCItaXRlbXNcIixcIlwiKSxOK2grTitcImJveC1cIitsK0YrXCJmbGV4LVwiK2wraDtjYXNlIDExNTpyZXR1cm4gTitoK0YrXCJmbGV4LWl0ZW0tXCIraC5yZXBsYWNlKHksXCJcIikraDtkZWZhdWx0OnJldHVybiBOK2grRitcImZsZXgtbGluZS1wYWNrXCIraC5yZXBsYWNlKFwiYWxpZ24tY29udGVudFwiLFwiXCIpLnJlcGxhY2UoeSxcIlwiKStofWJyZWFrO2Nhc2UgOTczOmNhc2UgOTg5OmlmKGguY2hhckNvZGVBdCgzKSE9PVF8fDEyMj09PWguY2hhckNvZGVBdCg0KSlicmVhaztjYXNlIDkzMTpjYXNlIDk1MzppZih0cnVlPT09ai50ZXN0KGUpKWlmKDExNT09PShsPWUuc3Vic3RyaW5nKGUuaW5kZXhPZihcIjpcIikrMSkpLmNoYXJDb2RlQXQoMCkpcmV0dXJuIEtlKGUucmVwbGFjZShcInN0cmV0Y2hcIixcImZpbGwtYXZhaWxhYmxlXCIpLGEscixjKS5yZXBsYWNlKFwiOmZpbGwtYXZhaWxhYmxlXCIsXCI6c3RyZXRjaFwiKTtlbHNlIHJldHVybiBoLnJlcGxhY2UobCxOK2wpK2gucmVwbGFjZShsLFMrbC5yZXBsYWNlKFwiZmlsbC1cIixcIlwiKSkraDticmVhaztjYXNlIDk2MjppZihoPU4raCsoMTAyPT09aC5jaGFyQ29kZUF0KDUpP0YraDpcIlwiKStoLHIrYz09PTIxMSYmMTA1PT09aC5jaGFyQ29kZUF0KDEzKSYmaC5pbmRleE9mKFwidHJhbnNmb3JtXCIsMTApPjApcmV0dXJuIGguc3Vic3RyaW5nKDAsaC5pbmRleE9mKFwiO1wiLDI3KSsxKS5yZXBsYWNlKGksXCIkMVwiK04rXCIkMlwiKStofXJldHVybiBofWZ1bmN0aW9uIExlKGUsYSl7dmFyIHI9ZS5pbmRleE9mKDE9PT1hP1wiOlwiOlwie1wiKSxjPWUuc3Vic3RyaW5nKDAsMyE9PWE/cjoxMCkscz1lLnN1YnN0cmluZyhyKzEsZS5sZW5ndGgtMSk7cmV0dXJuIE9lKDIhPT1hP2M6Yy5yZXBsYWNlKE8sXCIkMVwiKSxzLGEpfWZ1bmN0aW9uIE1lKGUsYSl7dmFyIHI9S2UoYSxhLmNoYXJDb2RlQXQoMCksYS5jaGFyQ29kZUF0KDEpLGEuY2hhckNvZGVBdCgyKSk7cmV0dXJuIHIhPT1hK1wiO1wiP3IucmVwbGFjZSgkLFwiIG9yICgkMSlcIikuc3Vic3RyaW5nKDQpOlwiKFwiK2ErXCIpXCJ9ZnVuY3Rpb24gUGUoZSxhLHIsYyxzLHQsaSxmLG4sbCl7Zm9yKHZhciBvLGg9MCx1PWE7aDx5ZTsrK2gpc3dpdGNoKG89JGVbaF0uY2FsbChUZSxlLHUscixjLHMsdCxpLGYsbixsKSl7Y2FzZSB2b2lkIDA6Y2FzZSBmYWxzZTpjYXNlIHRydWU6Y2FzZSBudWxsOmJyZWFrO2RlZmF1bHQ6dT1vfWlmKHUhPT1hKXJldHVybiB1fWZ1bmN0aW9uIFFlKGUsYSxyLGMpe2Zvcih2YXIgcz1hKzE7czxyOysrcylzd2l0Y2goYy5jaGFyQ29kZUF0KHMpKXtjYXNlIFo6aWYoZT09PVQpaWYoYy5jaGFyQ29kZUF0KHMtMSk9PT1UJiZhKzIhPT1zKXJldHVybiBzKzE7YnJlYWs7Y2FzZSBJOmlmKGU9PT1aKXJldHVybiBzKzF9cmV0dXJuIHN9ZnVuY3Rpb24gUmUoZSl7Zm9yKHZhciBhIGluIGUpe3ZhciByPWVbYV07c3dpdGNoKGEpe2Nhc2VcImtleWZyYW1lXCI6QmU9MHxyO2JyZWFrO2Nhc2VcImdsb2JhbFwiOkNlPTB8cjticmVhaztjYXNlXCJjYXNjYWRlXCI6Z2U9MHxyO2JyZWFrO2Nhc2VcImNvbXByZXNzXCI6d2U9MHxyO2JyZWFrO2Nhc2VcInNlbWljb2xvblwiOnZlPTB8cjticmVhaztjYXNlXCJwcmVzZXJ2ZVwiOm1lPTB8cjticmVhaztjYXNlXCJwcmVmaXhcIjppZihPZT1udWxsLCFyKUFlPTA7ZWxzZSBpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiByKUFlPTE7ZWxzZSBBZT0yLE9lPXJ9fXJldHVybiBSZX1mdW5jdGlvbiBUZShhLHIpe2lmKHZvaWQgMCE9PXRoaXMmJnRoaXMuY29uc3RydWN0b3I9PT1UZSlyZXR1cm4gZShhKTt2YXIgcz1hLHQ9cy5jaGFyQ29kZUF0KDApO2lmKHQ8MzMpdD0ocz1zLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtpZihCZT4wKURlPXMucmVwbGFjZShkLHQ9PT1HP1wiXCI6XCItXCIpO2lmKHQ9MSwxPT09Z2UpR2U9cztlbHNlIEVlPXM7dmFyIGksZj1bR2VdO2lmKHllPjApaWYodm9pZCAwIT09KGk9UGUoemUscixmLGYscGUsYmUsMCwwLDAsMCkpJiZcInN0cmluZ1wiPT10eXBlb2YgaSlyPWk7dmFyIG49SGUoeGUsZixyLDAsMCk7aWYoeWU+MClpZih2b2lkIDAhPT0oaT1QZShqZSxuLGYsZixwZSxiZSxuLmxlbmd0aCwwLDAsMCkpJiZcInN0cmluZ1wiIT10eXBlb2Yobj1pKSl0PTA7cmV0dXJuIERlPVwiXCIsR2U9XCJcIixFZT1cIlwiLGtlPTAscGU9MSxiZT0xLHdlKnQ9PTA/bjpuLnJlcGxhY2UoYyxcIlwiKS5yZXBsYWNlKGcsXCJcIikucmVwbGFjZShBLFwiJDFcIikucmVwbGFjZShDLFwiJDFcIikucmVwbGFjZSh3LFwiIFwiKX1pZihUZS51c2U9ZnVuY3Rpb24gZShhKXtzd2l0Y2goYSl7Y2FzZSB2b2lkIDA6Y2FzZSBudWxsOnllPSRlLmxlbmd0aD0wO2JyZWFrO2RlZmF1bHQ6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYSkkZVt5ZSsrXT1hO2Vsc2UgaWYoXCJvYmplY3RcIj09dHlwZW9mIGEpZm9yKHZhciByPTAsYz1hLmxlbmd0aDtyPGM7KytyKWUoYVtyXSk7ZWxzZSBxZT0wfCEhYX1yZXR1cm4gZX0sVGUuc2V0PVJlLHZvaWQgMCE9PWEpUmUoYSk7cmV0dXJuIFRlfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsaXMubWluLmpzLm1hcCIsInZhciBzaW1wbGVJc0VxdWFsID0gZnVuY3Rpb24gc2ltcGxlSXNFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufTtcblxuZnVuY3Rpb24gaW5kZXggKHJlc3VsdEZuLCBpc0VxdWFsKSB7XG4gIGlmIChpc0VxdWFsID09PSB2b2lkIDApIHtcbiAgICBpc0VxdWFsID0gc2ltcGxlSXNFcXVhbDtcbiAgfVxuXG4gIHZhciBsYXN0VGhpcztcbiAgdmFyIGxhc3RBcmdzID0gW107XG4gIHZhciBsYXN0UmVzdWx0O1xuICB2YXIgY2FsbGVkT25jZSA9IGZhbHNlO1xuXG4gIHZhciBpc05ld0FyZ0VxdWFsVG9MYXN0ID0gZnVuY3Rpb24gaXNOZXdBcmdFcXVhbFRvTGFzdChuZXdBcmcsIGluZGV4KSB7XG4gICAgcmV0dXJuIGlzRXF1YWwobmV3QXJnLCBsYXN0QXJnc1tpbmRleF0pO1xuICB9O1xuXG4gIHZhciByZXN1bHQgPSBmdW5jdGlvbiByZXN1bHQoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG5ld0FyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBuZXdBcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGlmIChjYWxsZWRPbmNlICYmIGxhc3RUaGlzID09PSB0aGlzICYmIG5ld0FyZ3MubGVuZ3RoID09PSBsYXN0QXJncy5sZW5ndGggJiYgbmV3QXJncy5ldmVyeShpc05ld0FyZ0VxdWFsVG9MYXN0KSkge1xuICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgfVxuXG4gICAgbGFzdFJlc3VsdCA9IHJlc3VsdEZuLmFwcGx5KHRoaXMsIG5ld0FyZ3MpO1xuICAgIGNhbGxlZE9uY2UgPSB0cnVlO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0QXJncyA9IG5ld0FyZ3M7XG4gICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gIEluIHRoZVxuLy8gYnJvd3NlciB0aGlzIGlzIGEgbGl0dGxlIGNvbXBsaWNhdGVkIGR1ZSB0byB1bmtub3duIHF1YWxpdHkgb2YgTWF0aC5yYW5kb20oKVxuLy8gYW5kIGluY29uc2lzdGVudCBzdXBwb3J0IGZvciB0aGUgYGNyeXB0b2AgQVBJLiAgV2UgZG8gdGhlIGJlc3Qgd2UgY2FuIHZpYVxuLy8gZmVhdHVyZS1kZXRlY3Rpb25cblxuLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvXG4vLyBpbXBsZW1lbnRhdGlvbi4gQWxzbywgZmluZCB0aGUgY29tcGxldGUgaW1wbGVtZW50YXRpb24gb2YgY3J5cHRvIG9uIElFMTEuXG52YXIgZ2V0UmFuZG9tVmFsdWVzID0gKHR5cGVvZihjcnlwdG8pICE9ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0bykpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZihtc0NyeXB0bykgIT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMgPT0gJ2Z1bmN0aW9uJyAmJiBtc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChtc0NyeXB0bykpO1xuXG5pZiAoZ2V0UmFuZG9tVmFsdWVzKSB7XG4gIC8vIFdIQVRXRyBjcnlwdG8gUk5HIC0gaHR0cDovL3dpa2kud2hhdHdnLm9yZy93aWtpL0NyeXB0b1xuICB2YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcblxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHdoYXR3Z1JORygpIHtcbiAgICBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xuICAgIHJldHVybiBybmRzODtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIE1hdGgucmFuZG9tKCktYmFzZWQgKFJORylcbiAgLy9cbiAgLy8gSWYgYWxsIGVsc2UgZmFpbHMsIHVzZSBNYXRoLnJhbmRvbSgpLiAgSXQncyBmYXN0LCBidXQgaXMgb2YgdW5zcGVjaWZpZWRcbiAgLy8gcXVhbGl0eS5cbiAgdmFyIHJuZHMgPSBuZXcgQXJyYXkoMTYpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWF0aFJORygpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgcjsgaSA8IDE2OyBpKyspIHtcbiAgICAgIGlmICgoaSAmIDB4MDMpID09PSAwKSByID0gTWF0aC5yYW5kb20oKSAqIDB4MTAwMDAwMDAwO1xuICAgICAgcm5kc1tpXSA9IHIgPj4+ICgoaSAmIDB4MDMpIDw8IDMpICYgMHhmZjtcbiAgICB9XG5cbiAgICByZXR1cm4gcm5kcztcbiAgfTtcbn1cbiIsIi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xudmFyIGJ5dGVUb0hleCA9IFtdO1xuZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXhbaV0gPSAoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpO1xufVxuXG5mdW5jdGlvbiBieXRlc1RvVXVpZChidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IG9mZnNldCB8fCAwO1xuICB2YXIgYnRoID0gYnl0ZVRvSGV4O1xuICAvLyBqb2luIHVzZWQgdG8gZml4IG1lbW9yeSBpc3N1ZSBjYXVzZWQgYnkgY29uY2F0ZW5hdGlvbjogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzE3NSNjNFxuICByZXR1cm4gKFtidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsXG5cdGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJyxcblx0YnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLFxuXHRidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dXSkuam9pbignJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYnl0ZXNUb1V1aWQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY2hhaW5GdW5jdGlvbiA9IHJlcXVpcmUoJ2NoYWluLWZ1bmN0aW9uJyk7XG5cbnZhciBfY2hhaW5GdW5jdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFpbkZ1bmN0aW9uKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfQ2hpbGRNYXBwaW5nID0gcmVxdWlyZSgnLi91dGlscy9DaGlsZE1hcHBpbmcnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICBjb21wb25lbnQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYW55LFxuICBjaGlsZEZhY3Rvcnk6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgY2hpbGRyZW46IF9wcm9wVHlwZXMyLmRlZmF1bHQubm9kZVxufTtcblxudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgY29tcG9uZW50OiAnc3BhbicsXG4gIGNoaWxkRmFjdG9yeTogZnVuY3Rpb24gY2hpbGRGYWN0b3J5KGNoaWxkKSB7XG4gICAgcmV0dXJuIGNoaWxkO1xuICB9XG59O1xuXG52YXIgVHJhbnNpdGlvbkdyb3VwID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFRyYW5zaXRpb25Hcm91cCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVHJhbnNpdGlvbkdyb3VwKHByb3BzLCBjb250ZXh0KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYW5zaXRpb25Hcm91cCk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpKTtcblxuICAgIF90aGlzLnBlcmZvcm1BcHBlYXIgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV0gPSB0cnVlO1xuXG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudFdpbGxBcHBlYXIpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudFdpbGxBcHBlYXIoX3RoaXMuX2hhbmRsZURvbmVBcHBlYXJpbmcuYmluZChfdGhpcywga2V5LCBjb21wb25lbnQpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzLl9oYW5kbGVEb25lQXBwZWFyaW5nKGtleSwgY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMuX2hhbmRsZURvbmVBcHBlYXJpbmcgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50RGlkQXBwZWFyKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnREaWRBcHBlYXIoKTtcbiAgICAgIH1cblxuICAgICAgZGVsZXRlIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV07XG5cbiAgICAgIHZhciBjdXJyZW50Q2hpbGRNYXBwaW5nID0gKDAsIF9DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKShfdGhpcy5wcm9wcy5jaGlsZHJlbik7XG5cbiAgICAgIGlmICghY3VycmVudENoaWxkTWFwcGluZyB8fCAhY3VycmVudENoaWxkTWFwcGluZy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIC8vIFRoaXMgd2FzIHJlbW92ZWQgYmVmb3JlIGl0IGhhZCBmdWxseSBhcHBlYXJlZC4gUmVtb3ZlIGl0LlxuICAgICAgICBfdGhpcy5wZXJmb3JtTGVhdmUoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5wZXJmb3JtRW50ZXIgPSBmdW5jdGlvbiAoa2V5LCBjb21wb25lbnQpIHtcbiAgICAgIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV0gPSB0cnVlO1xuXG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudFdpbGxFbnRlcikge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50V2lsbEVudGVyKF90aGlzLl9oYW5kbGVEb25lRW50ZXJpbmcuYmluZChfdGhpcywga2V5LCBjb21wb25lbnQpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzLl9oYW5kbGVEb25lRW50ZXJpbmcoa2V5LCBjb21wb25lbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5faGFuZGxlRG9uZUVudGVyaW5nID0gZnVuY3Rpb24gKGtleSwgY29tcG9uZW50KSB7XG4gICAgICBpZiAoY29tcG9uZW50LmNvbXBvbmVudERpZEVudGVyKSB7XG4gICAgICAgIGNvbXBvbmVudC5jb21wb25lbnREaWRFbnRlcigpO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgX3RoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XTtcblxuICAgICAgdmFyIGN1cnJlbnRDaGlsZE1hcHBpbmcgPSAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKCFjdXJyZW50Q2hpbGRNYXBwaW5nIHx8ICFjdXJyZW50Q2hpbGRNYXBwaW5nLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgLy8gVGhpcyB3YXMgcmVtb3ZlZCBiZWZvcmUgaXQgaGFkIGZ1bGx5IGVudGVyZWQuIFJlbW92ZSBpdC5cbiAgICAgICAgX3RoaXMucGVyZm9ybUxlYXZlKGtleSwgY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMucGVyZm9ybUxlYXZlID0gZnVuY3Rpb24gKGtleSwgY29tcG9uZW50KSB7XG4gICAgICBfdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5c1trZXldID0gdHJ1ZTtcblxuICAgICAgaWYgKGNvbXBvbmVudC5jb21wb25lbnRXaWxsTGVhdmUpIHtcbiAgICAgICAgY29tcG9uZW50LmNvbXBvbmVudFdpbGxMZWF2ZShfdGhpcy5faGFuZGxlRG9uZUxlYXZpbmcuYmluZChfdGhpcywga2V5LCBjb21wb25lbnQpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE5vdGUgdGhhdCB0aGlzIGlzIHNvbWV3aGF0IGRhbmdlcm91cyBiL2MgaXQgY2FsbHMgc2V0U3RhdGUoKVxuICAgICAgICAvLyBhZ2FpbiwgZWZmZWN0aXZlbHkgbXV0YXRpbmcgdGhlIGNvbXBvbmVudCBiZWZvcmUgYWxsIHRoZSB3b3JrXG4gICAgICAgIC8vIGlzIGRvbmUuXG4gICAgICAgIF90aGlzLl9oYW5kbGVEb25lTGVhdmluZyhrZXksIGNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLl9oYW5kbGVEb25lTGVhdmluZyA9IGZ1bmN0aW9uIChrZXksIGNvbXBvbmVudCkge1xuICAgICAgaWYgKGNvbXBvbmVudC5jb21wb25lbnREaWRMZWF2ZSkge1xuICAgICAgICBjb21wb25lbnQuY29tcG9uZW50RGlkTGVhdmUoKTtcbiAgICAgIH1cblxuICAgICAgZGVsZXRlIF90aGlzLmN1cnJlbnRseVRyYW5zaXRpb25pbmdLZXlzW2tleV07XG5cbiAgICAgIHZhciBjdXJyZW50Q2hpbGRNYXBwaW5nID0gKDAsIF9DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKShfdGhpcy5wcm9wcy5jaGlsZHJlbik7XG5cbiAgICAgIGlmIChjdXJyZW50Q2hpbGRNYXBwaW5nICYmIGN1cnJlbnRDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAvLyBUaGlzIGVudGVyZWQgYWdhaW4gYmVmb3JlIGl0IGZ1bGx5IGxlZnQuIEFkZCBpdCBhZ2Fpbi5cbiAgICAgICAgX3RoaXMua2V5c1RvRW50ZXIucHVzaChrZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAgICAgdmFyIG5ld0NoaWxkcmVuID0gX2V4dGVuZHMoe30sIHN0YXRlLmNoaWxkcmVuKTtcbiAgICAgICAgICBkZWxldGUgbmV3Q2hpbGRyZW5ba2V5XTtcbiAgICAgICAgICByZXR1cm4geyBjaGlsZHJlbjogbmV3Q2hpbGRyZW4gfTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLmNoaWxkUmVmcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGNoaWxkcmVuOiAoMCwgX0NoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcpKHByb3BzLmNoaWxkcmVuKVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgdGhpcy5jdXJyZW50bHlUcmFuc2l0aW9uaW5nS2V5cyA9IHt9O1xuICAgIHRoaXMua2V5c1RvRW50ZXIgPSBbXTtcbiAgICB0aGlzLmtleXNUb0xlYXZlID0gW107XG4gIH07XG5cbiAgVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHZhciBpbml0aWFsQ2hpbGRNYXBwaW5nID0gdGhpcy5zdGF0ZS5jaGlsZHJlbjtcbiAgICBmb3IgKHZhciBrZXkgaW4gaW5pdGlhbENoaWxkTWFwcGluZykge1xuICAgICAgaWYgKGluaXRpYWxDaGlsZE1hcHBpbmdba2V5XSkge1xuICAgICAgICB0aGlzLnBlcmZvcm1BcHBlYXIoa2V5LCB0aGlzLmNoaWxkUmVmc1trZXldKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB2YXIgbmV4dENoaWxkTWFwcGluZyA9ICgwLCBfQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZykobmV4dFByb3BzLmNoaWxkcmVuKTtcbiAgICB2YXIgcHJldkNoaWxkTWFwcGluZyA9IHRoaXMuc3RhdGUuY2hpbGRyZW47XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNoaWxkcmVuOiAoMCwgX0NoaWxkTWFwcGluZy5tZXJnZUNoaWxkTWFwcGluZ3MpKHByZXZDaGlsZE1hcHBpbmcsIG5leHRDaGlsZE1hcHBpbmcpXG4gICAgfSk7XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gbmV4dENoaWxkTWFwcGluZykge1xuICAgICAgdmFyIGhhc1ByZXYgPSBwcmV2Q2hpbGRNYXBwaW5nICYmIHByZXZDaGlsZE1hcHBpbmcuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgICAgIGlmIChuZXh0Q2hpbGRNYXBwaW5nW2tleV0gJiYgIWhhc1ByZXYgJiYgIXRoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNba2V5XSkge1xuICAgICAgICB0aGlzLmtleXNUb0VudGVyLnB1c2goa2V5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfa2V5IGluIHByZXZDaGlsZE1hcHBpbmcpIHtcbiAgICAgIHZhciBoYXNOZXh0ID0gbmV4dENoaWxkTWFwcGluZyAmJiBuZXh0Q2hpbGRNYXBwaW5nLmhhc093blByb3BlcnR5KF9rZXkpO1xuICAgICAgaWYgKHByZXZDaGlsZE1hcHBpbmdbX2tleV0gJiYgIWhhc05leHQgJiYgIXRoaXMuY3VycmVudGx5VHJhbnNpdGlvbmluZ0tleXNbX2tleV0pIHtcbiAgICAgICAgdGhpcy5rZXlzVG9MZWF2ZS5wdXNoKF9rZXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIElmIHdlIHdhbnQgdG8gc29tZWRheSBjaGVjayBmb3IgcmVvcmRlcmluZywgd2UgY291bGQgZG8gaXQgaGVyZS5cbiAgfTtcblxuICBUcmFuc2l0aW9uR3JvdXAucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBrZXlzVG9FbnRlciA9IHRoaXMua2V5c1RvRW50ZXI7XG4gICAgdGhpcy5rZXlzVG9FbnRlciA9IFtdO1xuICAgIGtleXNUb0VudGVyLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIF90aGlzMi5wZXJmb3JtRW50ZXIoa2V5LCBfdGhpczIuY2hpbGRSZWZzW2tleV0pO1xuICAgIH0pO1xuXG4gICAgdmFyIGtleXNUb0xlYXZlID0gdGhpcy5rZXlzVG9MZWF2ZTtcbiAgICB0aGlzLmtleXNUb0xlYXZlID0gW107XG4gICAga2V5c1RvTGVhdmUuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gX3RoaXMyLnBlcmZvcm1MZWF2ZShrZXksIF90aGlzMi5jaGlsZFJlZnNba2V5XSk7XG4gICAgfSk7XG4gIH07XG5cbiAgVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAvLyBUT0RPOiB3ZSBjb3VsZCBnZXQgcmlkIG9mIHRoZSBuZWVkIGZvciB0aGUgd3JhcHBlciBub2RlXG4gICAgLy8gYnkgY2xvbmluZyBhIHNpbmdsZSBjaGlsZFxuICAgIHZhciBjaGlsZHJlblRvUmVuZGVyID0gW107XG5cbiAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChrZXkpIHtcbiAgICAgIHZhciBjaGlsZCA9IF90aGlzMy5zdGF0ZS5jaGlsZHJlbltrZXldO1xuICAgICAgaWYgKGNoaWxkKSB7XG4gICAgICAgIHZhciBpc0NhbGxiYWNrUmVmID0gdHlwZW9mIGNoaWxkLnJlZiAhPT0gJ3N0cmluZyc7XG4gICAgICAgIHZhciBmYWN0b3J5Q2hpbGQgPSBfdGhpczMucHJvcHMuY2hpbGRGYWN0b3J5KGNoaWxkKTtcbiAgICAgICAgdmFyIHJlZiA9IGZ1bmN0aW9uIHJlZihyKSB7XG4gICAgICAgICAgX3RoaXMzLmNoaWxkUmVmc1trZXldID0gcjtcbiAgICAgICAgfTtcblxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gKDAsIF93YXJuaW5nMi5kZWZhdWx0KShpc0NhbGxiYWNrUmVmLCAnc3RyaW5nIHJlZnMgYXJlIG5vdCBzdXBwb3J0ZWQgb24gY2hpbGRyZW4gb2YgVHJhbnNpdGlvbkdyb3VwIGFuZCB3aWxsIGJlIGlnbm9yZWQuICcgKyAnUGxlYXNlIHVzZSBhIGNhbGxiYWNrIHJlZiBpbnN0ZWFkOiBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL3JlZnMtYW5kLXRoZS1kb20uaHRtbCN0aGUtcmVmLWNhbGxiYWNrLWF0dHJpYnV0ZScpIDogdm9pZCAwO1xuXG4gICAgICAgIC8vIEFsd2F5cyBjaGFpbmluZyB0aGUgcmVmcyBsZWFkcyB0byBwcm9ibGVtcyB3aGVuIHRoZSBjaGlsZEZhY3RvcnlcbiAgICAgICAgLy8gd3JhcHMgdGhlIGNoaWxkLiBUaGUgY2hpbGQgcmVmIGNhbGxiYWNrIGdldHMgY2FsbGVkIHR3aWNlIHdpdGggdGhlXG4gICAgICAgIC8vIHdyYXBwZXIgYW5kIHRoZSBjaGlsZC4gU28gd2Ugb25seSBuZWVkIHRvIGNoYWluIHRoZSByZWYgaWYgdGhlXG4gICAgICAgIC8vIGZhY3RvcnlDaGlsZCBpcyBub3QgZGlmZmVyZW50IGZyb20gY2hpbGQuXG4gICAgICAgIGlmIChmYWN0b3J5Q2hpbGQgPT09IGNoaWxkICYmIGlzQ2FsbGJhY2tSZWYpIHtcbiAgICAgICAgICByZWYgPSAoMCwgX2NoYWluRnVuY3Rpb24yLmRlZmF1bHQpKGNoaWxkLnJlZiwgcmVmKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFlvdSBtYXkgbmVlZCB0byBhcHBseSByZWFjdGl2ZSB1cGRhdGVzIHRvIGEgY2hpbGQgYXMgaXQgaXMgbGVhdmluZy5cbiAgICAgICAgLy8gVGhlIG5vcm1hbCBSZWFjdCB3YXkgdG8gZG8gaXQgd29uJ3Qgd29yayBzaW5jZSB0aGUgY2hpbGQgd2lsbCBoYXZlXG4gICAgICAgIC8vIGFscmVhZHkgYmVlbiByZW1vdmVkLiBJbiBjYXNlIHlvdSBuZWVkIHRoaXMgYmVoYXZpb3IgeW91IGNhbiBwcm92aWRlXG4gICAgICAgIC8vIGEgY2hpbGRGYWN0b3J5IGZ1bmN0aW9uIHRvIHdyYXAgZXZlcnkgY2hpbGQsIGV2ZW4gdGhlIG9uZXMgdGhhdCBhcmVcbiAgICAgICAgLy8gbGVhdmluZy5cbiAgICAgICAgY2hpbGRyZW5Ub1JlbmRlci5wdXNoKF9yZWFjdDIuZGVmYXVsdC5jbG9uZUVsZW1lbnQoZmFjdG9yeUNoaWxkLCB7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgcmVmOiByZWZcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5zdGF0ZS5jaGlsZHJlbikge1xuICAgICAgX2xvb3Aoa2V5KTtcbiAgICB9XG5cbiAgICAvLyBEbyBub3QgZm9yd2FyZCBUcmFuc2l0aW9uR3JvdXAgcHJvcHMgdG8gcHJpbWl0aXZlIERPTSBub2Rlc1xuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLnByb3BzKTtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkxlYXZlO1xuICAgIGRlbGV0ZSBwcm9wcy50cmFuc2l0aW9uTmFtZTtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkFwcGVhcjtcbiAgICBkZWxldGUgcHJvcHMudHJhbnNpdGlvbkVudGVyO1xuICAgIGRlbGV0ZSBwcm9wcy5jaGlsZEZhY3Rvcnk7XG4gICAgZGVsZXRlIHByb3BzLnRyYW5zaXRpb25MZWF2ZVRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLnRyYW5zaXRpb25FbnRlclRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLnRyYW5zaXRpb25BcHBlYXJUaW1lb3V0O1xuICAgIGRlbGV0ZSBwcm9wcy5jb21wb25lbnQ7XG5cbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodGhpcy5wcm9wcy5jb21wb25lbnQsIHByb3BzLCBjaGlsZHJlblRvUmVuZGVyKTtcbiAgfTtcblxuICByZXR1cm4gVHJhbnNpdGlvbkdyb3VwO1xufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcblxuVHJhbnNpdGlvbkdyb3VwLmRpc3BsYXlOYW1lID0gJ1RyYW5zaXRpb25Hcm91cCc7XG5cblxuVHJhbnNpdGlvbkdyb3VwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHByb3BUeXBlcyA6IHt9O1xuVHJhbnNpdGlvbkdyb3VwLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0cy5kZWZhdWx0ID0gVHJhbnNpdGlvbkdyb3VwO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfZGVmYXVsdCA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLm5hbWVTaGFwZSA9IHVuZGVmaW5lZDtcbmV4cG9ydHMudHJhbnNpdGlvblRpbWVvdXQgPSB0cmFuc2l0aW9uVGltZW91dDtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdHJhbnNpdGlvblRpbWVvdXQodHJhbnNpdGlvblR5cGUpIHtcbiAgdmFyIHRpbWVvdXRQcm9wTmFtZSA9ICd0cmFuc2l0aW9uJyArIHRyYW5zaXRpb25UeXBlICsgJ1RpbWVvdXQnO1xuICB2YXIgZW5hYmxlZFByb3BOYW1lID0gJ3RyYW5zaXRpb24nICsgdHJhbnNpdGlvblR5cGU7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcykge1xuICAgIC8vIElmIHRoZSB0cmFuc2l0aW9uIGlzIGVuYWJsZWRcbiAgICBpZiAocHJvcHNbZW5hYmxlZFByb3BOYW1lXSkge1xuICAgICAgLy8gSWYgbm8gdGltZW91dCBkdXJhdGlvbiBpcyBwcm92aWRlZFxuICAgICAgaWYgKHByb3BzW3RpbWVvdXRQcm9wTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKHRpbWVvdXRQcm9wTmFtZSArICcgd2FzblxcJ3Qgc3VwcGxpZWQgdG8gQ1NTVHJhbnNpdGlvbkdyb3VwOiAnICsgJ3RoaXMgY2FuIGNhdXNlIHVucmVsaWFibGUgYW5pbWF0aW9ucyBhbmQgd29uXFwndCBiZSBzdXBwb3J0ZWQgaW4gJyArICdhIGZ1dHVyZSB2ZXJzaW9uIG9mIFJlYWN0LiBTZWUgJyArICdodHRwczovL2ZiLm1lL3JlYWN0LWFuaW1hdGlvbi10cmFuc2l0aW9uLWdyb3VwLXRpbWVvdXQgZm9yIG1vcmUgJyArICdpbmZvcm1hdGlvbi4nKTtcblxuICAgICAgICAvLyBJZiB0aGUgZHVyYXRpb24gaXNuJ3QgYSBudW1iZXJcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb3BzW3RpbWVvdXRQcm9wTmFtZV0gIT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IodGltZW91dFByb3BOYW1lICsgJyBtdXN0IGJlIGEgbnVtYmVyIChpbiBtaWxsaXNlY29uZHMpJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG59XG5cbnZhciBuYW1lU2hhcGUgPSBleHBvcnRzLm5hbWVTaGFwZSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5zaGFwZSh7XG4gIGVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgbGVhdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBhY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59KSwgX3Byb3BUeXBlczIuZGVmYXVsdC5zaGFwZSh7XG4gIGVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgZW50ZXJBY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBsZWF2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGxlYXZlQWN0aXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYXBwZWFyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYXBwZWFyQWN0aXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufSldKTsiLCIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KHJlcXVpcmUoXCJyZWFjdFwiKSxyZXF1aXJlKFwicHJvcC10eXBlc1wiKSxyZXF1aXJlKFwiZDNcIikscmVxdWlyZShcInV1aWRcIikscmVxdWlyZShcImNsb25lXCIpLHJlcXVpcmUoXCJkZWVwLWVxdWFsXCIpLHJlcXVpcmUoXCJyZWFjdC10cmFuc2l0aW9uLWdyb3VwXCIpKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwicmVhY3QtZDMtdHJlZVwiLFtcInJlYWN0XCIsXCJwcm9wLXR5cGVzXCIsXCJkM1wiLFwidXVpZFwiLFwiY2xvbmVcIixcImRlZXAtZXF1YWxcIixcInJlYWN0LXRyYW5zaXRpb24tZ3JvdXBcIl0sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0c1tcInJlYWN0LWQzLXRyZWVcIl09dChyZXF1aXJlKFwicmVhY3RcIikscmVxdWlyZShcInByb3AtdHlwZXNcIikscmVxdWlyZShcImQzXCIpLHJlcXVpcmUoXCJ1dWlkXCIpLHJlcXVpcmUoXCJjbG9uZVwiKSxyZXF1aXJlKFwiZGVlcC1lcXVhbFwiKSxyZXF1aXJlKFwicmVhY3QtdHJhbnNpdGlvbi1ncm91cFwiKSk6ZVtcInJlYWN0LWQzLXRyZWVcIl09dChlLnJlYWN0LGVbXCJwcm9wLXR5cGVzXCJdLGUuZDMsZS51dWlkLGUuY2xvbmUsZVtcImRlZXAtZXF1YWxcIl0sZVtcInJlYWN0LXRyYW5zaXRpb24tZ3JvdXBcIl0pfSh0aGlzLGZ1bmN0aW9uKGUsdCxuLHIsbyxhLGkpe3JldHVybiBmdW5jdGlvbihlKXtmdW5jdGlvbiB0KHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgbz1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyx0KSxvLmw9ITAsby5leHBvcnRzfXZhciBuPXt9O3JldHVybiB0Lm09ZSx0LmM9bix0LmQ9ZnVuY3Rpb24oZSxuLHIpe3QubyhlLG4pfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6cn0pfSx0Lm49ZnVuY3Rpb24oZSl7dmFyIG49ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIHQuZChuLFwiYVwiLG4pLG59LHQubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sdC5wPVwiXCIsdCh0LnM9Nil9KFtmdW5jdGlvbih0LG4pe3QuZXhwb3J0cz1lfSxmdW5jdGlvbihlLG4pe2UuZXhwb3J0cz10fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1ufSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1yfSxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSx0KXt2YXIgbj1lWzFdfHxcIlwiLG89ZVszXTtpZighbylyZXR1cm4gbjtpZih0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBidG9hKXt2YXIgYT1yKG8pO3JldHVybltuXS5jb25jYXQoby5zb3VyY2VzLm1hcChmdW5jdGlvbihlKXtyZXR1cm5cIi8qIyBzb3VyY2VVUkw9XCIrby5zb3VyY2VSb290K2UrXCIgKi9cIn0pKS5jb25jYXQoW2FdKS5qb2luKFwiXFxuXCIpfXJldHVybltuXS5qb2luKFwiXFxuXCIpfWZ1bmN0aW9uIHIoZSl7cmV0dXJuXCIvKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIrYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoZSkpKSkrXCIgKi9cIn1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9W107cmV0dXJuIHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24odCl7dmFyIHI9bih0LGUpO3JldHVybiB0WzJdP1wiQG1lZGlhIFwiK3RbMl0rXCJ7XCIrcitcIn1cIjpyfSkuam9pbihcIlwiKX0sdC5pPWZ1bmN0aW9uKGUsbil7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPVtbbnVsbCxlLFwiXCJdXSk7Zm9yKHZhciByPXt9LG89MDtvPHRoaXMubGVuZ3RoO28rKyl7dmFyIGE9dGhpc1tvXVswXTtcIm51bWJlclwiPT10eXBlb2YgYSYmKHJbYV09ITApfWZvcihvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWVbb107XCJudW1iZXJcIj09dHlwZW9mIGlbMF0mJnJbaVswXV18fChuJiYhaVsyXT9pWzJdPW46biYmKGlbMl09XCIoXCIraVsyXStcIikgYW5kIChcIituK1wiKVwiKSx0LnB1c2goaSkpfX0sdH19LGZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl0sbz15W3IuaWRdO2lmKG8pe28ucmVmcysrO2Zvcih2YXIgYT0wO2E8by5wYXJ0cy5sZW5ndGg7YSsrKW8ucGFydHNbYV0oci5wYXJ0c1thXSk7Zm9yKDthPHIucGFydHMubGVuZ3RoO2ErKylvLnBhcnRzLnB1c2goZihyLnBhcnRzW2FdLHQpKX1lbHNle2Zvcih2YXIgaT1bXSxhPTA7YTxyLnBhcnRzLmxlbmd0aDthKyspaS5wdXNoKGYoci5wYXJ0c1thXSx0KSk7eVtyLmlkXT17aWQ6ci5pZCxyZWZzOjEscGFydHM6aX19fX1mdW5jdGlvbiBvKGUsdCl7Zm9yKHZhciBuPVtdLHI9e30sbz0wO288ZS5sZW5ndGg7bysrKXt2YXIgYT1lW29dLGk9dC5iYXNlP2FbMF0rdC5iYXNlOmFbMF0scz1hWzFdLHU9YVsyXSxsPWFbM10sYz17Y3NzOnMsbWVkaWE6dSxzb3VyY2VNYXA6bH07cltpXT9yW2ldLnBhcnRzLnB1c2goYyk6bi5wdXNoKHJbaV09e2lkOmkscGFydHM6W2NdfSl9cmV0dXJuIG59ZnVuY3Rpb24gYShlLHQpe3ZhciBuPW0oZS5pbnNlcnRJbnRvKTtpZighbil0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTt2YXIgcj14W3gubGVuZ3RoLTFdO2lmKFwidG9wXCI9PT1lLmluc2VydEF0KXI/ci5uZXh0U2libGluZz9uLmluc2VydEJlZm9yZSh0LHIubmV4dFNpYmxpbmcpOm4uYXBwZW5kQ2hpbGQodCk6bi5pbnNlcnRCZWZvcmUodCxuLmZpcnN0Q2hpbGQpLHgucHVzaCh0KTtlbHNlIGlmKFwiYm90dG9tXCI9PT1lLmluc2VydEF0KW4uYXBwZW5kQ2hpbGQodCk7ZWxzZXtpZihcIm9iamVjdFwiIT10eXBlb2YgZS5pbnNlcnRBdHx8IWUuaW5zZXJ0QXQuYmVmb3JlKXRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO3ZhciBvPW0oZS5pbnNlcnRBdC5iZWZvcmUsbik7bi5pbnNlcnRCZWZvcmUodCxvKX19ZnVuY3Rpb24gaShlKXtpZihudWxsPT09ZS5wYXJlbnROb2RlKXJldHVybiExO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKTt2YXIgdD14LmluZGV4T2YoZSk7dD49MCYmeC5zcGxpY2UodCwxKX1mdW5jdGlvbiBzKGUpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtpZih2b2lkIDA9PT1lLmF0dHJzLnR5cGUmJihlLmF0dHJzLnR5cGU9XCJ0ZXh0L2Nzc1wiKSx2b2lkIDA9PT1lLmF0dHJzLm5vbmNlKXt2YXIgbj1jKCk7biYmKGUuYXR0cnMubm9uY2U9bil9cmV0dXJuIGwodCxlLmF0dHJzKSxhKGUsdCksdH1mdW5jdGlvbiB1KGUpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO3JldHVybiB2b2lkIDA9PT1lLmF0dHJzLnR5cGUmJihlLmF0dHJzLnR5cGU9XCJ0ZXh0L2Nzc1wiKSxlLmF0dHJzLnJlbD1cInN0eWxlc2hlZXRcIixsKHQsZS5hdHRycyksYShlLHQpLHR9ZnVuY3Rpb24gbChlLHQpe09iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24obil7ZS5zZXRBdHRyaWJ1dGUobix0W25dKX0pfWZ1bmN0aW9uIGMoKXtyZXR1cm4gbi5uY31mdW5jdGlvbiBmKGUsdCl7dmFyIG4scixvLGE7aWYodC50cmFuc2Zvcm0mJmUuY3NzKXtpZighKGE9dC50cmFuc2Zvcm0oZS5jc3MpKSlyZXR1cm4gZnVuY3Rpb24oKXt9O2UuY3NzPWF9aWYodC5zaW5nbGV0b24pe3ZhciBsPU8rKztuPWd8fChnPXModCkpLHI9ZC5iaW5kKG51bGwsbixsLCExKSxvPWQuYmluZChudWxsLG4sbCwhMCl9ZWxzZSBlLnNvdXJjZU1hcCYmXCJmdW5jdGlvblwiPT10eXBlb2YgVVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBCbG9iJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBidG9hPyhuPXUodCkscj1oLmJpbmQobnVsbCxuLHQpLG89ZnVuY3Rpb24oKXtpKG4pLG4uaHJlZiYmVVJMLnJldm9rZU9iamVjdFVSTChuLmhyZWYpfSk6KG49cyh0KSxyPXAuYmluZChudWxsLG4pLG89ZnVuY3Rpb24oKXtpKG4pfSk7cmV0dXJuIHIoZSksZnVuY3Rpb24odCl7aWYodCl7aWYodC5jc3M9PT1lLmNzcyYmdC5tZWRpYT09PWUubWVkaWEmJnQuc291cmNlTWFwPT09ZS5zb3VyY2VNYXApcmV0dXJuO3IoZT10KX1lbHNlIG8oKX19ZnVuY3Rpb24gZChlLHQsbixyKXt2YXIgbz1uP1wiXCI6ci5jc3M7aWYoZS5zdHlsZVNoZWV0KWUuc3R5bGVTaGVldC5jc3NUZXh0PXcodCxvKTtlbHNle3ZhciBhPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG8pLGk9ZS5jaGlsZE5vZGVzO2lbdF0mJmUucmVtb3ZlQ2hpbGQoaVt0XSksaS5sZW5ndGg/ZS5pbnNlcnRCZWZvcmUoYSxpW3RdKTplLmFwcGVuZENoaWxkKGEpfX1mdW5jdGlvbiBwKGUsdCl7dmFyIG49dC5jc3Mscj10Lm1lZGlhO2lmKHImJmUuc2V0QXR0cmlidXRlKFwibWVkaWFcIixyKSxlLnN0eWxlU2hlZXQpZS5zdHlsZVNoZWV0LmNzc1RleHQ9bjtlbHNle2Zvcig7ZS5maXJzdENoaWxkOyllLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCk7ZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuKSl9fWZ1bmN0aW9uIGgoZSx0LG4pe3ZhciByPW4uY3NzLG89bi5zb3VyY2VNYXAsYT12b2lkIDA9PT10LmNvbnZlcnRUb0Fic29sdXRlVXJscyYmbzsodC5jb252ZXJ0VG9BYnNvbHV0ZVVybHN8fGEpJiYocj1fKHIpKSxvJiYocis9XCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiK2J0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KG8pKSkpK1wiICovXCIpO3ZhciBpPW5ldyBCbG9iKFtyXSx7dHlwZTpcInRleHQvY3NzXCJ9KSxzPWUuaHJlZjtlLmhyZWY9VVJMLmNyZWF0ZU9iamVjdFVSTChpKSxzJiZVUkwucmV2b2tlT2JqZWN0VVJMKHMpfXZhciB5PXt9LGI9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PWUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSx0fX0oZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93JiZkb2N1bWVudCYmZG9jdW1lbnQuYWxsJiYhd2luZG93LmF0b2J9KSx2PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ/dC5xdWVyeVNlbGVjdG9yKGUpOmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSl9LG09ZnVuY3Rpb24oZSl7dmFyIHQ9e307cmV0dXJuIGZ1bmN0aW9uKGUsbil7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZSlyZXR1cm4gZSgpO2lmKHZvaWQgMD09PXRbZV0pe3ZhciByPXYuY2FsbCh0aGlzLGUsbik7aWYod2luZG93LkhUTUxJRnJhbWVFbGVtZW50JiZyIGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KXRyeXtyPXIuY29udGVudERvY3VtZW50LmhlYWR9Y2F0Y2goZSl7cj1udWxsfXRbZV09cn1yZXR1cm4gdFtlXX19KCksZz1udWxsLE89MCx4PVtdLF89bigxNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIERFQlVHJiZERUJVRyYmXCJvYmplY3RcIiE9dHlwZW9mIGRvY3VtZW50KXRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTt0PXR8fHt9LHQuYXR0cnM9XCJvYmplY3RcIj09dHlwZW9mIHQuYXR0cnM/dC5hdHRyczp7fSx0LnNpbmdsZXRvbnx8XCJib29sZWFuXCI9PXR5cGVvZiB0LnNpbmdsZXRvbnx8KHQuc2luZ2xldG9uPWIoKSksdC5pbnNlcnRJbnRvfHwodC5pbnNlcnRJbnRvPVwiaGVhZFwiKSx0Lmluc2VydEF0fHwodC5pbnNlcnRBdD1cImJvdHRvbVwiKTt2YXIgbj1vKGUsdCk7cmV0dXJuIHIobix0KSxmdW5jdGlvbihlKXtmb3IodmFyIGE9W10saT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgcz1uW2ldLHU9eVtzLmlkXTt1LnJlZnMtLSxhLnB1c2godSl9aWYoZSl7cihvKGUsdCksdCl9Zm9yKHZhciBpPTA7aTxhLmxlbmd0aDtpKyspe3ZhciB1PWFbaV07aWYoMD09PXUucmVmcyl7Zm9yKHZhciBsPTA7bDx1LnBhcnRzLmxlbmd0aDtsKyspdS5wYXJ0c1tsXSgpO2RlbGV0ZSB5W3UuaWRdfX19fTt2YXIgdz1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiBmdW5jdGlvbih0LG4pe3JldHVybiBlW3RdPW4sZS5maWx0ZXIoQm9vbGVhbikuam9pbihcIlxcblwiKX19KCl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LnRyZWVVdGlsPXQuVHJlZT12b2lkIDA7dmFyIHI9big3KSxvPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0ociksYT1uKDIzKSxpPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0oYSk7dC5UcmVlPW8uZGVmYXVsdCx0LnRyZWVVdGlsPWksdC5kZWZhdWx0PW8uZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGEoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDEpLGQ9cihmKSxwPW4oMiksaD1uKDgpLHk9cihoKSxiPW4oOSksdj1yKGIpLG09bigzKSxnPXIobSksTz1uKDEwKSx4PXIoTyksXz1uKDEyKSx3PXIoXyksaj1uKDE4KSxrPXIoaik7bigyMSk7dmFyIFM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4scixpO28odGhpcyx0KTtmb3IodmFyIHM9YXJndW1lbnRzLmxlbmd0aCx1PUFycmF5KHMpLGw9MDtsPHM7bCsrKXVbbF09YXJndW1lbnRzW2xdO3JldHVybiBuPXI9YSh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KHUpKSksci5zdGF0ZT17ZGF0YTpyLmFzc2lnbkludGVybmFsUHJvcGVydGllcygoMCx5LmRlZmF1bHQpKHIucHJvcHMuZGF0YSkpLHJkM3RTdmdDbGFzc05hbWU6XCJfXCIrZy5kZWZhdWx0LnY0KCkscmQzdEdDbGFzc05hbWU6XCJfXCIrZy5kZWZhdWx0LnY0KCl9LHIuaW50ZXJuYWxTdGF0ZT17aW5pdGlhbFJlbmRlcjohMCx0YXJnZXROb2RlOm51bGwsaXNUcmFuc2l0aW9uaW5nOiExLGQzOntzY2FsZTpyLnByb3BzLnpvb20sdHJhbnNsYXRlOnIucHJvcHMudHJhbnNsYXRlfX0sci5oYW5kbGVOb2RlVG9nZ2xlPWZ1bmN0aW9uKGUsdCl7dmFyIG49KDAseS5kZWZhdWx0KShyLnN0YXRlLmRhdGEpLG89ci5maW5kTm9kZXNCeUlkKGUsbixbXSksYT1vWzBdO3QucGVyc2lzdCgpLHIucHJvcHMuY29sbGFwc2libGUmJiFyLnN0YXRlLmlzVHJhbnNpdGlvbmluZz8oYS5fY29sbGFwc2VkPyhyLmV4cGFuZE5vZGUoYSksci5wcm9wcy5zaG91bGRDb2xsYXBzZU5laWdoYm9yTm9kZXMmJnIuY29sbGFwc2VOZWlnaGJvck5vZGVzKGEsbikpOnIuY29sbGFwc2VOb2RlKGEpLHIuc2V0U3RhdGUoe2RhdGE6bixpc1RyYW5zaXRpb25pbmc6ITB9LGZ1bmN0aW9uKCl7cmV0dXJuIHIuaGFuZGxlT25DbGlja0NiKGEsdCl9KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHIuc2V0U3RhdGUoe2lzVHJhbnNpdGlvbmluZzohMX0pfSxyLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbisxMCksci5pbnRlcm5hbFN0YXRlLnRhcmdldE5vZGU9YSk6ci5oYW5kbGVPbkNsaWNrQ2IoYSx0KX0sci5oYW5kbGVPbkNsaWNrQ2I9ZnVuY3Rpb24oZSx0KXt2YXIgbj1yLnByb3BzLm9uQ2xpY2s7biYmXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmbigoMCx5LmRlZmF1bHQpKGUpLHQpfSxyLmhhbmRsZU9uTW91c2VPdmVyQ2I9ZnVuY3Rpb24oZSx0KXt2YXIgbj1yLnByb3BzLm9uTW91c2VPdmVyO2lmKG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIG4pe3ZhciBvPSgwLHkuZGVmYXVsdCkoci5zdGF0ZS5kYXRhKSxhPXIuZmluZE5vZGVzQnlJZChlLG8sW10pLGk9YVswXTt0LnBlcnNpc3QoKSxuKCgwLHkuZGVmYXVsdCkoaSksdCl9fSxyLmhhbmRsZU9uTW91c2VPdXRDYj1mdW5jdGlvbihlLHQpe3ZhciBuPXIucHJvcHMub25Nb3VzZU91dDtpZihuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuKXt2YXIgbz0oMCx5LmRlZmF1bHQpKHIuc3RhdGUuZGF0YSksYT1yLmZpbmROb2Rlc0J5SWQoZSxvLFtdKSxpPWFbMF07dC5wZXJzaXN0KCksbigoMCx5LmRlZmF1bHQpKGkpLHQpfX0saT1uLGEocixpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcImNvbXBvbmVudFdpbGxNb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pbnRlcm5hbFN0YXRlLmQzPXRoaXMuY2FsY3VsYXRlRDNHZW9tZXRyeSh0aGlzLnByb3BzKX19LHtrZXk6XCJjb21wb25lbnREaWRNb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5iaW5kWm9vbUxpc3RlbmVyKHRoaXMucHJvcHMpLHRoaXMuaW50ZXJuYWxTdGF0ZS5pbml0aWFsUmVuZGVyPSExfX0se2tleTpcImNvbXBvbmVudERpZFVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe2UudHJhbnNpdGlvbkR1cmF0aW9uIT09dGhpcy5wcm9wcy50cmFuc2l0aW9uRHVyYXRpb24mJnRoaXMuYmluZFpvb21MaXN0ZW5lcih0aGlzLnByb3BzKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLnByb3BzLm9uVXBkYXRlJiYodGhpcy5wcm9wcy5vblVwZGF0ZSh7bm9kZTp0aGlzLmludGVybmFsU3RhdGUudGFyZ2V0Tm9kZT8oMCx5LmRlZmF1bHQpKHRoaXMuaW50ZXJuYWxTdGF0ZS50YXJnZXROb2RlKTpudWxsLHpvb206dGhpcy5pbnRlcm5hbFN0YXRlLmQzLnNjYWxlLHRyYW5zbGF0ZTp0aGlzLmludGVybmFsU3RhdGUuZDMudHJhbnNsYXRlfSksdGhpcy5pbnRlcm5hbFN0YXRlLnRhcmdldE5vZGU9bnVsbCl9fSx7a2V5OlwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMucHJvcHMuZGF0YSE9PWUuZGF0YSYmdGhpcy5zZXRTdGF0ZSh7ZGF0YTp0aGlzLmFzc2lnbkludGVybmFsUHJvcGVydGllcygoMCx5LmRlZmF1bHQpKGUuZGF0YSkpfSksdGhpcy5pbnRlcm5hbFN0YXRlLmQzPXRoaXMuY2FsY3VsYXRlRDNHZW9tZXRyeShlKSwoMCx2LmRlZmF1bHQpKHRoaXMucHJvcHMudHJhbnNsYXRlLGUudHJhbnNsYXRlKSYmKDAsdi5kZWZhdWx0KSh0aGlzLnByb3BzLnNjYWxlRXh0ZW50LGUuc2NhbGVFeHRlbnQpJiZ0aGlzLnByb3BzLnpvb209PT1lLnpvb218fHRoaXMuYmluZFpvb21MaXN0ZW5lcihlKX19LHtrZXk6XCJzZXRJbml0aWFsVHJlZURlcHRoXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtlLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5fY29sbGFwc2VkPWUuZGVwdGg+PXR9KX19LHtrZXk6XCJiaW5kWm9vbUxpc3RlbmVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWUuem9vbWFibGUscj1lLnNjYWxlRXh0ZW50LG89ZS50cmFuc2xhdGUsYT1lLnpvb20saT1lLm9uVXBkYXRlLHM9dGhpcy5zdGF0ZSx1PXMucmQzdFN2Z0NsYXNzTmFtZSxsPXMucmQzdEdDbGFzc05hbWUsYz0oMCxwLnNlbGVjdCkoXCIuXCIrdSksZj0oMCxwLnNlbGVjdCkoXCIuXCIrbCk7biYmYy5jYWxsKHAuYmVoYXZpb3Iuem9vbSgpLnNjYWxlRXh0ZW50KFtyLm1pbixyLm1heF0pLm9uKFwiem9vbVwiLGZ1bmN0aW9uKCl7Zi5hdHRyKFwidHJhbnNmb3JtXCIsXCJ0cmFuc2xhdGUoXCIrcC5ldmVudC50cmFuc2xhdGUrXCIpIHNjYWxlKFwiK3AuZXZlbnQuc2NhbGUrXCIpXCIpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGkmJihpKHtub2RlOm51bGwsem9vbTpwLmV2ZW50LnNjYWxlLHRyYW5zbGF0ZTp7eDpwLmV2ZW50LnRyYW5zbGF0ZVswXSx5OnAuZXZlbnQudHJhbnNsYXRlWzFdfX0pLHQuaW50ZXJuYWxTdGF0ZS5kMy5zY2FsZT1wLmV2ZW50LnNjYWxlLHQuaW50ZXJuYWxTdGF0ZS5kMy50cmFuc2xhdGU9e3g6cC5ldmVudC50cmFuc2xhdGVbMF0seTpwLmV2ZW50LnRyYW5zbGF0ZVsxXX0pfSkuc2NhbGUoYSkudHJhbnNsYXRlKFtvLngsby55XSkpfX0se2tleTpcImFzc2lnbkludGVybmFsUHJvcGVydGllc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuKEFycmF5LmlzQXJyYXkoZSk/ZTpbZV0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD1nLmRlZmF1bHQudjQoKSx2b2lkIDA9PT1lLl9jb2xsYXBzZWQmJihlLl9jb2xsYXBzZWQ9ITEpLGUuY2hpbGRyZW4mJmUuY2hpbGRyZW4ubGVuZ3RoPjAmJihlLmNoaWxkcmVuPXQuYXNzaWduSW50ZXJuYWxQcm9wZXJ0aWVzKGUuY2hpbGRyZW4pLGUuX2NoaWxkcmVuPWUuY2hpbGRyZW4pLGV9KX19LHtrZXk6XCJmaW5kTm9kZXNCeUlkXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXM7cmV0dXJuIG4ubGVuZ3RoPjA/bjoobj1uLmNvbmNhdCh0LmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5pZD09PWV9KSksdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QuX2NoaWxkcmVuJiZ0Ll9jaGlsZHJlbi5sZW5ndGg+MCYmKG49ci5maW5kTm9kZXNCeUlkKGUsdC5fY2hpbGRyZW4sbikpfSksbil9fSx7a2V5OlwiZmluZE5vZGVzQXREZXB0aFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzO3JldHVybiBuPW4uY29uY2F0KHQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0LmRlcHRoPT09ZX0pKSx0LmZvckVhY2goZnVuY3Rpb24odCl7dC5fY2hpbGRyZW4mJnQuX2NoaWxkcmVuLmxlbmd0aD4wJiYobj1yLmZpbmROb2Rlc0F0RGVwdGgoZSx0Ll9jaGlsZHJlbixuKSl9KSxufX0se2tleTpcImNvbGxhcHNlTm9kZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7ZS5fY29sbGFwc2VkPSEwLGUuX2NoaWxkcmVuJiZlLl9jaGlsZHJlbi5sZW5ndGg+MCYmZS5fY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihlKXt0LmNvbGxhcHNlTm9kZShlKX0pfX0se2tleTpcImV4cGFuZE5vZGVcIix2YWx1ZTpmdW5jdGlvbihlKXtlLl9jb2xsYXBzZWQ9ITF9fSx7a2V5OlwiY29sbGFwc2VOZWlnaGJvck5vZGVzXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3RoaXMuZmluZE5vZGVzQXREZXB0aChlLmRlcHRoLHQsW10pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5pZCE9PWUuaWR9KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBuLmNvbGxhcHNlTm9kZShlKX0pfX0se2tleTpcImdlbmVyYXRlVHJlZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUuaW5pdGlhbERlcHRoLG49ZS51c2VDb2xsYXBzZURhdGEscj1lLmRlcHRoRmFjdG9yLG89ZS5zZXBhcmF0aW9uLGE9ZS5ub2RlU2l6ZSxpPWUub3JpZW50YXRpb24scz1wLmxheW91dC50cmVlKCkubm9kZVNpemUoXCJob3Jpem9udGFsXCI9PT1pP1thLnksYS54XTpbYS54LGEueV0pLnNlcGFyYXRpb24oZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5wYXJlbnQuaWQ9PT10LnBhcmVudC5pZD9vLnNpYmxpbmdzOm8ubm9uU2libGluZ3N9KS5jaGlsZHJlbihmdW5jdGlvbihlKXtyZXR1cm4gZS5fY29sbGFwc2VkP251bGw6ZS5fY2hpbGRyZW59KSx1PXRoaXMuc3RhdGUuZGF0YVswXSxsPXMubm9kZXModSk7cmV0dXJuITE9PT1uJiZ2b2lkIDAhPT10JiZ0aGlzLmludGVybmFsU3RhdGUuaW5pdGlhbFJlbmRlciYmKHRoaXMuc2V0SW5pdGlhbFRyZWVEZXB0aChsLHQpLGw9cy5ub2Rlcyh1KSksciYmbC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UueT1lLmRlcHRoKnJ9KSx7bm9kZXM6bCxsaW5rczpzLmxpbmtzKGwpfX19LHtrZXk6XCJjYWxjdWxhdGVEM0dlb21ldHJ5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO3JldHVybiB0PWUuem9vbT5lLnNjYWxlRXh0ZW50Lm1heD9lLnNjYWxlRXh0ZW50Lm1heDplLnpvb208ZS5zY2FsZUV4dGVudC5taW4/ZS5zY2FsZUV4dGVudC5taW46ZS56b29tLHt0cmFuc2xhdGU6ZS50cmFuc2xhdGUsc2NhbGU6dH19fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5nZW5lcmF0ZVRyZWUoKSxuPXQubm9kZXMscj10LmxpbmtzLG89dGhpcy5zdGF0ZSxhPW8ucmQzdFN2Z0NsYXNzTmFtZSxpPW8ucmQzdEdDbGFzc05hbWUsdT10aGlzLnByb3BzLGw9dS5ub2RlU3ZnU2hhcGUsZj11Lm5vZGVMYWJlbENvbXBvbmVudCxkPXUub3JpZW50YXRpb24scD11LnBhdGhGdW5jLGg9dS50cmFuc2l0aW9uRHVyYXRpb24seT11Lnpvb21hYmxlLGI9dS50ZXh0TGF5b3V0LHY9dS5ub2RlU2l6ZSxtPXUuZGVwdGhGYWN0b3IsTz11LmluaXRpYWxEZXB0aCxfPXUuc2VwYXJhdGlvbixqPXUuY2lyY2xlUmFkaXVzLFM9dS5hbGxvd0ZvcmVpZ25PYmplY3RzLEU9dS5zdHlsZXMsTj10aGlzLmludGVybmFsU3RhdGUuZDMsUD1OLnRyYW5zbGF0ZSxEPU4uc2NhbGUsQz1zKHt9LHYsXyx7ZGVwdGhGYWN0b3I6bSxpbml0aWFsRGVwdGg6T30pO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJyZDN0LXRyZWUtY29udGFpbmVyIFwiKyh5P1wicmQzdC1ncmFiYmFibGVcIjp2b2lkIDApfSxjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLHtjbGFzc05hbWU6YSx3aWR0aDpcIjEwMCVcIixoZWlnaHQ6XCIxMDAlXCJ9LGMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHguZGVmYXVsdCx7dHJhbnNpdGlvbkR1cmF0aW9uOmgsY29tcG9uZW50OlwiZ1wiLGNsYXNzTmFtZTppLHRyYW5zZm9ybTpcInRyYW5zbGF0ZShcIitQLngrXCIsXCIrUC55K1wiKSBzY2FsZShcIitEK1wiKVwifSxyLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoay5kZWZhdWx0LHtrZXk6Zy5kZWZhdWx0LnY0KCksb3JpZW50YXRpb246ZCxwYXRoRnVuYzpwLGxpbmtEYXRhOmUsdHJhbnNpdGlvbkR1cmF0aW9uOmgsc3R5bGVzOkUubGlua3N9KX0pLG4ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudCh3LmRlZmF1bHQse2tleTp0LmlkLG5vZGVTdmdTaGFwZTpzKHt9LGwsdC5ub2RlU3ZnU2hhcGUpLG5vZGVMYWJlbENvbXBvbmVudDpmLG5vZGVTaXplOnYsb3JpZW50YXRpb246ZCx0cmFuc2l0aW9uRHVyYXRpb246aCxub2RlRGF0YTp0LG5hbWU6dC5uYW1lLGF0dHJpYnV0ZXM6dC5hdHRyaWJ1dGVzLG9uQ2xpY2s6ZS5oYW5kbGVOb2RlVG9nZ2xlLG9uTW91c2VPdmVyOmUuaGFuZGxlT25Nb3VzZU92ZXJDYixvbk1vdXNlT3V0OmUuaGFuZGxlT25Nb3VzZU91dENiLHRleHRMYXlvdXQ6YixjaXJjbGVSYWRpdXM6aixzdWJzY3JpcHRpb25zOkMsYWxsb3dGb3JlaWduT2JqZWN0czpTLHN0eWxlczpFLm5vZGVzfSl9KSkpKX19XSksdH0oYy5kZWZhdWx0LkNvbXBvbmVudCk7dC5kZWZhdWx0PVMsUy5kZWZhdWx0UHJvcHM9e25vZGVTdmdTaGFwZTp7c2hhcGU6XCJjaXJjbGVcIixzaGFwZVByb3BzOntyOjEwfX0sbm9kZUxhYmVsQ29tcG9uZW50Om51bGwsb25DbGljazp2b2lkIDAsb25Nb3VzZU92ZXI6dm9pZCAwLG9uTW91c2VPdXQ6dm9pZCAwLG9uVXBkYXRlOnZvaWQgMCxvcmllbnRhdGlvbjpcImhvcml6b250YWxcIix0cmFuc2xhdGU6e3g6MCx5OjB9LHBhdGhGdW5jOlwiZGlhZ29uYWxcIix0cmFuc2l0aW9uRHVyYXRpb246NTAwLGRlcHRoRmFjdG9yOnZvaWQgMCxjb2xsYXBzaWJsZTohMCx1c2VDb2xsYXBzZURhdGE6ITEsaW5pdGlhbERlcHRoOnZvaWQgMCx6b29tYWJsZTohMCx6b29tOjEsc2NhbGVFeHRlbnQ6e21pbjouMSxtYXg6MX0sbm9kZVNpemU6e3g6MTQwLHk6MTQwfSxzZXBhcmF0aW9uOntzaWJsaW5nczoxLG5vblNpYmxpbmdzOjJ9LHRleHRMYXlvdXQ6e3RleHRBbmNob3I6XCJzdGFydFwiLHg6MTAseTotMTAsdHJhbnNmb3JtOnZvaWQgMH0sYWxsb3dGb3JlaWduT2JqZWN0czohMSxzaG91bGRDb2xsYXBzZU5laWdoYm9yTm9kZXM6ITEsY2lyY2xlUmFkaXVzOnZvaWQgMCxzdHlsZXM6e319LFMucHJvcFR5cGVzPXtkYXRhOmQuZGVmYXVsdC5vbmVPZlR5cGUoW2QuZGVmYXVsdC5hcnJheSxkLmRlZmF1bHQub2JqZWN0XSkuaXNSZXF1aXJlZCxub2RlU3ZnU2hhcGU6ZC5kZWZhdWx0LnNoYXBlKHtzaGFwZTpkLmRlZmF1bHQuc3RyaW5nLHNoYXBlUHJvcHM6ZC5kZWZhdWx0Lm9iamVjdH0pLG5vZGVMYWJlbENvbXBvbmVudDpkLmRlZmF1bHQub2JqZWN0LG9uQ2xpY2s6ZC5kZWZhdWx0LmZ1bmMsb25Nb3VzZU92ZXI6ZC5kZWZhdWx0LmZ1bmMsb25Nb3VzZU91dDpkLmRlZmF1bHQuZnVuYyxvblVwZGF0ZTpkLmRlZmF1bHQuZnVuYyxvcmllbnRhdGlvbjpkLmRlZmF1bHQub25lT2YoW1wiaG9yaXpvbnRhbFwiLFwidmVydGljYWxcIl0pLHRyYW5zbGF0ZTpkLmRlZmF1bHQuc2hhcGUoe3g6ZC5kZWZhdWx0Lm51bWJlcix5OmQuZGVmYXVsdC5udW1iZXJ9KSxwYXRoRnVuYzpkLmRlZmF1bHQub25lT2ZUeXBlKFtkLmRlZmF1bHQub25lT2YoW1wiZGlhZ29uYWxcIixcImVsYm93XCIsXCJzdHJhaWdodFwiXSksZC5kZWZhdWx0LmZ1bmNdKSx0cmFuc2l0aW9uRHVyYXRpb246ZC5kZWZhdWx0Lm51bWJlcixkZXB0aEZhY3RvcjpkLmRlZmF1bHQubnVtYmVyLGNvbGxhcHNpYmxlOmQuZGVmYXVsdC5ib29sLHVzZUNvbGxhcHNlRGF0YTpkLmRlZmF1bHQuYm9vbCxpbml0aWFsRGVwdGg6ZC5kZWZhdWx0Lm51bWJlcix6b29tYWJsZTpkLmRlZmF1bHQuYm9vbCx6b29tOmQuZGVmYXVsdC5udW1iZXIsc2NhbGVFeHRlbnQ6ZC5kZWZhdWx0LnNoYXBlKHttaW46ZC5kZWZhdWx0Lm51bWJlcixtYXg6ZC5kZWZhdWx0Lm51bWJlcn0pLG5vZGVTaXplOmQuZGVmYXVsdC5zaGFwZSh7eDpkLmRlZmF1bHQubnVtYmVyLHk6ZC5kZWZhdWx0Lm51bWJlcn0pLHNlcGFyYXRpb246ZC5kZWZhdWx0LnNoYXBlKHtzaWJsaW5nczpkLmRlZmF1bHQubnVtYmVyLG5vblNpYmxpbmdzOmQuZGVmYXVsdC5udW1iZXJ9KSx0ZXh0TGF5b3V0OmQuZGVmYXVsdC5vYmplY3QsYWxsb3dGb3JlaWduT2JqZWN0czpkLmRlZmF1bHQuYm9vbCxzaG91bGRDb2xsYXBzZU5laWdoYm9yTm9kZXM6ZC5kZWZhdWx0LmJvb2wsY2lyY2xlUmFkaXVzOmQuZGVmYXVsdC5udW1iZXIsc3R5bGVzOmQuZGVmYXVsdC5zaGFwZSh7bm9kZXM6ZC5kZWZhdWx0Lm9iamVjdCxsaW5rczpkLmRlZmF1bHQub2JqZWN0fSl9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPW99LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWF9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBhKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksdT1uKDApLGw9cih1KSxjPW4oMSksZj1yKGMpLGQ9bigxMSkscD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIGUsbixyLGk7byh0aGlzLHQpO2Zvcih2YXIgcz1hcmd1bWVudHMubGVuZ3RoLHU9QXJyYXkocyksbD0wO2w8cztsKyspdVtsXT1hcmd1bWVudHNbbF07cmV0dXJuIG49cj1hKHRoaXMsKGU9dC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuY2FsbC5hcHBseShlLFt0aGlzXS5jb25jYXQodSkpKSxyLnN0YXRlPXtlbmFibGVUcmFuc2l0aW9uczpyLnByb3BzLnRyYW5zaXRpb25EdXJhdGlvbj4wfSxpPW4sYShyLGkpfXJldHVybiBpKHQsZSkscyh0LFt7a2V5OlwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2UudHJhbnNpdGlvbkR1cmF0aW9uIT09dGhpcy5wcm9wcy50cmFuc2l0aW9uRHVyYXRpb24mJnRoaXMuc2V0U3RhdGUoe2VuYWJsZVRyYW5zaXRpb25zOmUudHJhbnNpdGlvbkR1cmF0aW9uPjB9KX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXRlLmVuYWJsZVRyYW5zaXRpb25zP2wuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGQuVHJhbnNpdGlvbkdyb3VwLHtjb21wb25lbnQ6dGhpcy5wcm9wcy5jb21wb25lbnQsY2xhc3NOYW1lOnRoaXMucHJvcHMuY2xhc3NOYW1lLHRyYW5zZm9ybTp0aGlzLnByb3BzLnRyYW5zZm9ybX0sdGhpcy5wcm9wcy5jaGlsZHJlbik6bC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIse2NsYXNzTmFtZTp0aGlzLnByb3BzLmNsYXNzTmFtZSx0cmFuc2Zvcm06dGhpcy5wcm9wcy50cmFuc2Zvcm19LHRoaXMucHJvcHMuY2hpbGRyZW4pfX1dKSx0fShsLmRlZmF1bHQuQ29tcG9uZW50KTt0LmRlZmF1bHQ9cCxwLmRlZmF1bHRQcm9wcz17Y29tcG9uZW50OlwiZ1wifSxwLnByb3BUeXBlcz17dHJhbnNpdGlvbkR1cmF0aW9uOmYuZGVmYXVsdC5udW1iZXIuaXNSZXF1aXJlZCxjb21wb25lbnQ6Zi5kZWZhdWx0LnN0cmluZyxjbGFzc05hbWU6Zi5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkLHRyYW5zZm9ybTpmLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsY2hpbGRyZW46Zi5kZWZhdWx0LmFycmF5LmlzUmVxdWlyZWR9LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBhKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9ZnVuY3Rpb24gaShlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiB0KTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpOmUuX19wcm90b19fPXQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLHImJmUodCxyKSx0fX0oKSxsPW4oMCksYz1yKGwpLGY9bigxKSxkPXIoZikscD1uKDIpLGg9bigxMykseT1yKGgpLGI9bigxNCksdj1yKGIpO24oMTUpO3ZhciBtPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXt2YXIgZSxuLHIsaTtvKHRoaXMsdCk7Zm9yKHZhciB1PWFyZ3VtZW50cy5sZW5ndGgsbD1BcnJheSh1KSxmPTA7Zjx1O2YrKylsW2ZdPWFyZ3VtZW50c1tmXTtyZXR1cm4gbj1yPWEodGhpcywoZT10Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5jYWxsLmFwcGx5KGUsW3RoaXNdLmNvbmNhdChsKSkpLHIuc3RhdGU9e3RyYW5zZm9ybTpyLnNldFRyYW5zZm9ybShyLnByb3BzLm5vZGVEYXRhLHIucHJvcHMub3JpZW50YXRpb24sITApLGluaXRpYWxTdHlsZTp7b3BhY2l0eTowfX0sci5zaG91bGROb2RlVHJhbnNmb3JtPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuc3Vic2NyaXB0aW9ucyE9PWUuc3Vic2NyaXB0aW9uc3x8dC5ub2RlRGF0YS54IT09ZS5ub2RlRGF0YS54fHx0Lm5vZGVEYXRhLnkhPT1lLm5vZGVEYXRhLnl8fHQub3JpZW50YXRpb24hPT1lLm9yaWVudGF0aW9ufSxyLnJlbmRlck5vZGVFbGVtZW50PWZ1bmN0aW9uKGUpe3ZhciB0PXIucHJvcHMsbj10LmNpcmNsZVJhZGl1cyxvPXQubm9kZVN2Z1NoYXBlO3JldHVybiBuP2MuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiY2lyY2xlXCIse3I6bixzdHlsZTplLmNpcmNsZX0pOlwibm9uZVwiPT09by5zaGFwZT9udWxsOmMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KG8uc2hhcGUscyh7fSxlLmNpcmNsZSxvLnNoYXBlUHJvcHMpKX0sci5oYW5kbGVDbGljaz1mdW5jdGlvbihlKXtyLnByb3BzLm9uQ2xpY2soci5wcm9wcy5ub2RlRGF0YS5pZCxlKX0sci5oYW5kbGVPbk1vdXNlT3Zlcj1mdW5jdGlvbihlKXtyLnByb3BzLm9uTW91c2VPdmVyKHIucHJvcHMubm9kZURhdGEuaWQsZSl9LHIuaGFuZGxlT25Nb3VzZU91dD1mdW5jdGlvbihlKXtyLnByb3BzLm9uTW91c2VPdXQoci5wcm9wcy5ub2RlRGF0YS5pZCxlKX0saT1uLGEocixpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcImNvbXBvbmVudERpZE1vdW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5ub2RlRGF0YSxuPWUub3JpZW50YXRpb24scj1lLnRyYW5zaXRpb25EdXJhdGlvbixvPXRoaXMuc2V0VHJhbnNmb3JtKHQsbik7dGhpcy5hcHBseVRyYW5zZm9ybShvLHIpfX0se2tleTpcImNvbXBvbmVudFdpbGxVcGRhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLnNldFRyYW5zZm9ybShlLm5vZGVEYXRhLGUub3JpZW50YXRpb24pO3RoaXMuYXBwbHlUcmFuc2Zvcm0odCxlLnRyYW5zaXRpb25EdXJhdGlvbil9fSx7a2V5Olwic2hvdWxkQ29tcG9uZW50VXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc2hvdWxkTm9kZVRyYW5zZm9ybSh0aGlzLnByb3BzLGUpfX0se2tleTpcInNldFRyYW5zZm9ybVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxyPWUueCxvPWUueSxhPWUucGFyZW50O2lmKG4pe3ZhciBpPWE/YS54OjAscz1hP2EueTowO3JldHVyblwiaG9yaXpvbnRhbFwiPT09dD9cInRyYW5zbGF0ZShcIitzK1wiLFwiK2krXCIpXCI6XCJ0cmFuc2xhdGUoXCIraStcIixcIitzK1wiKVwifXJldHVyblwiaG9yaXpvbnRhbFwiPT09dD9cInRyYW5zbGF0ZShcIitvK1wiLFwiK3IrXCIpXCI6XCJ0cmFuc2xhdGUoXCIrcitcIixcIitvK1wiKVwifX0se2tleTpcImFwcGx5VHJhbnNmb3JtXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MSxyPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpmdW5jdGlvbigpe307MD09PXQ/KCgwLHAuc2VsZWN0KSh0aGlzLm5vZGUpLmF0dHIoXCJ0cmFuc2Zvcm1cIixlKS5zdHlsZShcIm9wYWNpdHlcIixuKSxyKCkpOigwLHAuc2VsZWN0KSh0aGlzLm5vZGUpLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0KS5hdHRyKFwidHJhbnNmb3JtXCIsZSkuc3R5bGUoXCJvcGFjaXR5XCIsbikuZWFjaChcImVuZFwiLHIpfX0se2tleTpcImNvbXBvbmVudFdpbGxMZWF2ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucHJvcHMsbj10Lm5vZGVEYXRhLHI9dC5vcmllbnRhdGlvbixvPXQudHJhbnNpdGlvbkR1cmF0aW9uLGE9dGhpcy5zZXRUcmFuc2Zvcm0obixyLCEwKTt0aGlzLmFwcGx5VHJhbnNmb3JtKGEsbywwLGUpfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMucHJvcHMsbj10Lm5vZGVEYXRhLHI9dC5ub2RlU2l6ZSxvPXQubm9kZUxhYmVsQ29tcG9uZW50LGE9dC5hbGxvd0ZvcmVpZ25PYmplY3RzLGk9dC5zdHlsZXMsdT1uLl9jaGlsZHJlbj9zKHt9LGkubm9kZSk6cyh7fSxpLmxlYWZOb2RlKTtyZXR1cm4gYy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIse2lkOm4uaWQscmVmOmZ1bmN0aW9uKHQpe2Uubm9kZT10fSxzdHlsZTp0aGlzLnN0YXRlLmluaXRpYWxTdHlsZSxjbGFzc05hbWU6bi5fY2hpbGRyZW4/XCJub2RlQmFzZVwiOlwibGVhZk5vZGVCYXNlXCIsdHJhbnNmb3JtOnRoaXMuc3RhdGUudHJhbnNmb3JtLG9uQ2xpY2s6dGhpcy5oYW5kbGVDbGljayxvbk1vdXNlT3Zlcjp0aGlzLmhhbmRsZU9uTW91c2VPdmVyLG9uTW91c2VPdXQ6dGhpcy5oYW5kbGVPbk1vdXNlT3V0fSx0aGlzLnJlbmRlck5vZGVFbGVtZW50KHUpLGEmJm8/Yy5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQodi5kZWZhdWx0LHMoe25vZGVEYXRhOm4sbm9kZVNpemU6cn0sbykpOmMuZGVmYXVsdC5jcmVhdGVFbGVtZW50KHkuZGVmYXVsdCxzKHt9LHRoaXMucHJvcHMse25vZGVTdHlsZTp1fSkpKX19XSksdH0oYy5kZWZhdWx0LkNvbXBvbmVudCk7dC5kZWZhdWx0PW0sbS5kZWZhdWx0UHJvcHM9e25vZGVMYWJlbENvbXBvbmVudDpudWxsLGF0dHJpYnV0ZXM6dm9pZCAwLGNpcmNsZVJhZGl1czp2b2lkIDAsc3R5bGVzOntub2RlOntjaXJjbGU6e30sbmFtZTp7fSxhdHRyaWJ1dGVzOnt9fSxsZWFmTm9kZTp7Y2lyY2xlOnt9LG5hbWU6e30sYXR0cmlidXRlczp7fX19fSxtLnByb3BUeXBlcz17bm9kZURhdGE6ZC5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLG5vZGVTdmdTaGFwZTpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsbm9kZUxhYmVsQ29tcG9uZW50OmQuZGVmYXVsdC5vYmplY3Qsbm9kZVNpemU6ZC5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLG9yaWVudGF0aW9uOmQuZGVmYXVsdC5vbmVPZihbXCJob3Jpem9udGFsXCIsXCJ2ZXJ0aWNhbFwiXSkuaXNSZXF1aXJlZCx0cmFuc2l0aW9uRHVyYXRpb246ZC5kZWZhdWx0Lm51bWJlci5pc1JlcXVpcmVkLG9uQ2xpY2s6ZC5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCxvbk1vdXNlT3ZlcjpkLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLG9uTW91c2VPdXQ6ZC5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCxuYW1lOmQuZGVmYXVsdC5zdHJpbmcuaXNSZXF1aXJlZCxhdHRyaWJ1dGVzOmQuZGVmYXVsdC5vYmplY3QsdGV4dExheW91dDpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsc3Vic2NyaXB0aW9uczpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsYWxsb3dGb3JlaWduT2JqZWN0czpkLmRlZmF1bHQuYm9vbC5pc1JlcXVpcmVkLGNpcmNsZVJhZGl1czpkLmRlZmF1bHQubnVtYmVyLHN0eWxlczpkLmRlZmF1bHQub2JqZWN0fSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gYShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLHU9bigwKSxsPXIodSksYz1uKDMpLGY9cihjKSxkPW4oMSkscD1yKGQpLGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiBvKHRoaXMsdCksYSh0aGlzLCh0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBpKHQsZSkscyh0LFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByb3BzLHQ9ZS5uYW1lLG49ZS5ub2RlU3R5bGUscj1lLnRleHRMYXlvdXQsbz1lLmF0dHJpYnV0ZXM7cmV0dXJuIGwuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLG51bGwsbC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0XCIse2NsYXNzTmFtZTpcIm5vZGVOYW1lQmFzZVwiLHN0eWxlOm4ubmFtZSx0ZXh0QW5jaG9yOnIudGV4dEFuY2hvcix4OnIueCx5OnIueSx0cmFuc2Zvcm06ci50cmFuc2Zvcm0sZHk6XCIuMzVlbVwifSx0KSxsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInRleHRcIix7Y2xhc3NOYW1lOlwibm9kZUF0dHJpYnV0ZXNCYXNlXCIseTpyLnkrMTAsdGV4dEFuY2hvcjpyLnRleHRBbmNob3IsdHJhbnNmb3JtOnIudHJhbnNmb3JtLHN0eWxlOm4uYXR0cmlidXRlc30sbyYmT2JqZWN0LmtleXMobykubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBsLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInRzcGFuXCIse3g6ci54LGR5OlwiMS4yZW1cIixrZXk6Zi5kZWZhdWx0LnY0KCl9LGUsXCI6IFwiLG9bZV0pfSkpKX19XSksdH0obC5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1oLGguZGVmYXVsdFByb3BzPXthdHRyaWJ1dGVzOnZvaWQgMH0saC5wcm9wVHlwZXM9e25hbWU6cC5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkLGF0dHJpYnV0ZXM6cC5kZWZhdWx0Lm9iamVjdCx0ZXh0TGF5b3V0OnAuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCxub2RlU3R5bGU6cC5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkfSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gbyhlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gYShlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQ/ZTp0fWZ1bmN0aW9uIGkoZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2YgdCk7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KTplLl9fcHJvdG9fXz10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJBU0VfTUFSR0lOPXZvaWQgMDt2YXIgcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLmtleSxyKX19cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbiYmZSh0LnByb3RvdHlwZSxuKSxyJiZlKHQsciksdH19KCksbD1uKDApLGM9cihsKSxmPW4oMSksZD1yKGYpLHA9dC5CQVNFX01BUkdJTj0yNCxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtyZXR1cm4gbyh0aGlzLHQpLGEodGhpcywodC5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX1yZXR1cm4gaSh0LGUpLHUodCxbe2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcm9wcyx0PWUubm9kZURhdGEsbj1lLm5vZGVTaXplLHI9ZS5yZW5kZXIsbz1lLmZvcmVpZ25PYmplY3RXcmFwcGVyO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImZvcmVpZ25PYmplY3RcIixzKHt3aWR0aDpuLngtcCxoZWlnaHQ6bi55LXB9LG8pLGMuZGVmYXVsdC5jbG9uZUVsZW1lbnQocix7bm9kZURhdGE6dH0pKX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1oLGguZGVmYXVsdFByb3BzPXtmb3JlaWduT2JqZWN0V3JhcHBlcjp7fX0saC5wcm9wVHlwZXM9e3JlbmRlcjpkLmRlZmF1bHQub25lT2ZUeXBlKFtkLmRlZmF1bHQuZWxlbWVudCxkLmRlZmF1bHQubm9kZV0pLmlzUmVxdWlyZWQsbm9kZURhdGE6ZC5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLG5vZGVTaXplOmQuZGVmYXVsdC5zaGFwZSh7eDpkLmRlZmF1bHQubnVtYmVyLHk6ZC5kZWZhdWx0Lm51bWJlcn0pLmlzUmVxdWlyZWQsZm9yZWlnbk9iamVjdFdyYXBwZXI6ZC5kZWZhdWx0Lm9iamVjdH19LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDE2KTtcInN0cmluZ1wiPT10eXBlb2YgciYmKHI9W1tlLmkscixcIlwiXV0pO3ZhciBvPXtobXI6ITB9O28udHJhbnNmb3JtPXZvaWQgMCxvLmluc2VydEludG89dm9pZCAwO24oNSkocixvKTtyLmxvY2FscyYmKGUuZXhwb3J0cz1yLmxvY2Fscyl9LGZ1bmN0aW9uKGUsdCxuKXt0PWUuZXhwb3J0cz1uKDQpKHZvaWQgMCksdC5wdXNoKFtlLmksXCIubm9kZUJhc2Uge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZmlsbDogIzc3NztcXG4gIHN0cm9rZTogIzAwMDtcXG4gIHN0cm9rZS13aWR0aDogMjtcXG59XFxuXFxuLmxlYWZOb2RlQmFzZSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmaWxsOiB0cmFuc3BhcmVudDtcXG4gIHN0cm9rZTogIzAwMDtcXG4gIHN0cm9rZS13aWR0aDogMjtcXG59XFxuXFxuLm5vZGVOYW1lQmFzZSB7XFxuICBmaWxsOiAjMDAwO1xcbiAgc3Ryb2tlOiAjMDAwO1xcbiAgc3Ryb2tlLXdpZHRoOiAxO1xcbn1cXG5cXG4ubm9kZUF0dHJpYnV0ZXNCYXNlIHtcXG4gIGZpbGw6ICM3Nzc7XFxuICBzdHJva2U6ICM3Nzc7XFxuICBzdHJva2Utd2lkdGg6IDE7XFxuICBmb250LXNpemU6IHNtYWxsZXI7XFxufVxcblwiLFwiXCJdKX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LmxvY2F0aW9uO2lmKCF0KXRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO2lmKCFlfHxcInN0cmluZ1wiIT10eXBlb2YgZSlyZXR1cm4gZTt2YXIgbj10LnByb3RvY29sK1wiLy9cIit0Lmhvc3Qscj1uK3QucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLFwiL1wiKTtyZXR1cm4gZS5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSxmdW5jdGlvbihlLHQpe3ZhciBvPXQudHJpbSgpLnJlcGxhY2UoL15cIiguKilcIiQvLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR9KS5yZXBsYWNlKC9eJyguKiknJC8sZnVuY3Rpb24oZSx0KXtyZXR1cm4gdH0pO2lmKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QobykpcmV0dXJuIGU7dmFyIGE7cmV0dXJuIGE9MD09PW8uaW5kZXhPZihcIi8vXCIpP286MD09PW8uaW5kZXhPZihcIi9cIik/bitvOnIrby5yZXBsYWNlKC9eXFwuXFwvLyxcIlwiKSxcInVybChcIitKU09OLnN0cmluZ2lmeShhKStcIilcIn0pfX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIG8oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGEoZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPXR5cGVvZiB0JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH1mdW5jdGlvbiBpKGUsdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHQpO2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCk6ZS5fX3Byb3RvX189dCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsci5rZXkscil9fXJldHVybiBmdW5jdGlvbih0LG4scil7cmV0dXJuIG4mJmUodC5wcm90b3R5cGUsbiksciYmZSh0LHIpLHR9fSgpLGw9bigwKSxjPXIobCksZj1uKDEpLGQ9cihmKSxwPW4oMik7bigxOSk7dmFyIGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3ZhciBlLG4scixpO28odGhpcyx0KTtmb3IodmFyIHM9YXJndW1lbnRzLmxlbmd0aCx1PUFycmF5KHMpLGw9MDtsPHM7bCsrKXVbbF09YXJndW1lbnRzW2xdO3JldHVybiBuPXI9YSh0aGlzLChlPXQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCkpLmNhbGwuYXBwbHkoZSxbdGhpc10uY29uY2F0KHUpKSksci5zdGF0ZT17aW5pdGlhbFN0eWxlOntvcGFjaXR5OjB9fSxpPW4sYShyLGkpfXJldHVybiBpKHQsZSksdSh0LFt7a2V5OlwiY29tcG9uZW50RGlkTW91bnRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuYXBwbHlPcGFjaXR5KDEsdGhpcy5wcm9wcy50cmFuc2l0aW9uRHVyYXRpb24pfX0se2tleTpcImNvbXBvbmVudFdpbGxMZWF2ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuYXBwbHlPcGFjaXR5KDAsdGhpcy5wcm9wcy50cmFuc2l0aW9uRHVyYXRpb24sZSl9fSx7a2V5OlwiYXBwbHlPcGFjaXR5XCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06ZnVuY3Rpb24oKXt9OzA9PT10PygoMCxwLnNlbGVjdCkodGhpcy5saW5rKS5zdHlsZShcIm9wYWNpdHlcIixlKSxuKCkpOigwLHAuc2VsZWN0KSh0aGlzLmxpbmspLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0KS5zdHlsZShcIm9wYWNpdHlcIixlKS5lYWNoKFwiZW5kXCIsbil9fSx7a2V5OlwiZHJhd0RpYWdvbmFsUGF0aFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHAuc3ZnLmRpYWdvbmFsKCkucHJvamVjdGlvbihmdW5jdGlvbihlKXtyZXR1cm5cImhvcml6b250YWxcIj09PXQ/W2UueSxlLnhdOltlLngsZS55XX0pKGUpfX0se2tleTpcImRyYXdTdHJhaWdodFBhdGhcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXAuc3ZnLmxpbmUoKS5pbnRlcnBvbGF0ZShcImJhc2lzXCIpLngoZnVuY3Rpb24oZSl7cmV0dXJuIGUueH0pLnkoZnVuY3Rpb24oZSl7cmV0dXJuIGUueX0pLHI9W3t4OmUuc291cmNlLngseTplLnNvdXJjZS55fSx7eDplLnRhcmdldC54LHk6ZS50YXJnZXQueX1dO3JldHVyblwiaG9yaXpvbnRhbFwiPT09dCYmKHI9W3t4OmUuc291cmNlLnkseTplLnNvdXJjZS54fSx7eDplLnRhcmdldC55LHk6ZS50YXJnZXQueH1dKSxuKHIpfX0se2tleTpcImRyYXdFbGJvd1BhdGhcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3JldHVyblwiaG9yaXpvbnRhbFwiPT09dD9cIk1cIitlLnNvdXJjZS55K1wiLFwiK2Uuc291cmNlLngrXCJWXCIrZS50YXJnZXQueCtcIkhcIitlLnRhcmdldC55OlwiTVwiK2Uuc291cmNlLngrXCIsXCIrZS5zb3VyY2UueStcIlZcIitlLnRhcmdldC55K1wiSFwiK2UudGFyZ2V0Lnh9fSx7a2V5OlwiZHJhd1BhdGhcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMucHJvcHMsdD1lLmxpbmtEYXRhLG49ZS5vcmllbnRhdGlvbixyPWUucGF0aEZ1bmM7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygcj9yKHQsbik6XCJlbGJvd1wiPT09cj90aGlzLmRyYXdFbGJvd1BhdGgodCxuKTpcInN0cmFpZ2h0XCI9PT1yP3RoaXMuZHJhd1N0cmFpZ2h0UGF0aCh0LG4pOnRoaXMuZHJhd0RpYWdvbmFsUGF0aCh0LG4pfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMucHJvcHMuc3R5bGVzO3JldHVybiBjLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIix7cmVmOmZ1bmN0aW9uKHQpe2UubGluaz10fSxzdHlsZTpzKHt9LHRoaXMuc3RhdGUuaW5pdGlhbFN0eWxlLHQpLGNsYXNzTmFtZTpcImxpbmtCYXNlXCIsZDp0aGlzLmRyYXdQYXRoKCl9KX19XSksdH0oYy5kZWZhdWx0LlB1cmVDb21wb25lbnQpO3QuZGVmYXVsdD1oLGguZGVmYXVsdFByb3BzPXtzdHlsZXM6e319LGgucHJvcFR5cGVzPXtsaW5rRGF0YTpkLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsb3JpZW50YXRpb246ZC5kZWZhdWx0Lm9uZU9mKFtcImhvcml6b250YWxcIixcInZlcnRpY2FsXCJdKS5pc1JlcXVpcmVkLHBhdGhGdW5jOmQuZGVmYXVsdC5vbmVPZlR5cGUoW2QuZGVmYXVsdC5vbmVPZihbXCJkaWFnb25hbFwiLFwiZWxib3dcIixcInN0cmFpZ2h0XCJdKSxkLmRlZmF1bHQuZnVuY10pLmlzUmVxdWlyZWQsdHJhbnNpdGlvbkR1cmF0aW9uOmQuZGVmYXVsdC5udW1iZXIuaXNSZXF1aXJlZCxzdHlsZXM6ZC5kZWZhdWx0Lm9iamVjdH0sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4oMjApO1wic3RyaW5nXCI9PXR5cGVvZiByJiYocj1bW2UuaSxyLFwiXCJdXSk7dmFyIG89e2htcjohMH07by50cmFuc2Zvcm09dm9pZCAwLG8uaW5zZXJ0SW50bz12b2lkIDA7big1KShyLG8pO3IubG9jYWxzJiYoZS5leHBvcnRzPXIubG9jYWxzKX0sZnVuY3Rpb24oZSx0LG4pe3Q9ZS5leHBvcnRzPW4oNCkodm9pZCAwKSx0LnB1c2goW2UuaSxcIi5saW5rQmFzZSB7XFxuICBmaWxsOiBub25lO1xcbiAgc3Ryb2tlOiAjMDAwO1xcbn1cIixcIlwiXSl9LGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1uKDIyKTtcInN0cmluZ1wiPT10eXBlb2YgciYmKHI9W1tlLmkscixcIlwiXV0pO3ZhciBvPXtobXI6ITB9O28udHJhbnNmb3JtPXZvaWQgMCxvLmluc2VydEludG89dm9pZCAwO24oNSkocixvKTtyLmxvY2FscyYmKGUuZXhwb3J0cz1yLmxvY2Fscyl9LGZ1bmN0aW9uKGUsdCxuKXt0PWUuZXhwb3J0cz1uKDQpKHZvaWQgMCksdC5wdXNoKFtlLmksXCIucmQzdC10cmVlLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXFxuLnJkM3QtZ3JhYmJhYmxlIHtcXG4gIGN1cnNvcjogbW92ZTsgLyogZmFsbGJhY2sgaWYgZ3JhYiBjdXJzb3IgaXMgdW5zdXBwb3J0ZWQgKi9cXG4gIGN1cnNvcjogZ3JhYjtcXG4gIGN1cnNvcjogLW1vei1ncmFiO1xcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XFxufVxcbi5yZDN0LWdyYWJiYWJsZTphY3RpdmUge1xcbiAgICBjdXJzb3I6IGdyYWJiaW5nO1xcbiAgICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XFxuICAgIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcXG59XFxuXCIsXCJcIl0pfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPXt9LHI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPXtuYW1lOmV9KSxuW2VdfSxvPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5bZV18fChuW2VdPXtuYW1lOmUsYXR0cmlidXRlczp0fSksbltlXX07cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXtpZih0KXt2YXIgbj17fTt0LmZvckVhY2goZnVuY3Rpb24odCl7blt0XT1lW3RdfSksZS5hdHRyaWJ1dGVzPW59ZS5zb3VyY2U9cihlLnBhcmVudCksZS50YXJnZXQ9byhlLmNoaWxkLGUuYXR0cmlidXRlcyk7dmFyIGE9ZS5zb3VyY2UsaT1lLnRhcmdldDthLmlkPWMuZGVmYXVsdC52NCgpLGkuaWQ9Yy5kZWZhdWx0LnY0KCksaS5wYXJlbnQ9YS5uYW1lfHxudWxsLGEuX2NvbGxhcHNlZD1pLl9jb2xsYXBzZWQ9ITEsYS5fY2hpbGRyZW4/YS5fY2hpbGRyZW4ucHVzaChpKTphLl9jaGlsZHJlbj1baV19KSxbZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWUuc291cmNlLnBhcmVudH0pWzBdLnNvdXJjZV19ZnVuY3Rpb24gbyhlLHQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLG8pe3RyeXsoMCx1LmNzdikoZSxmdW5jdGlvbihlKXtyZXR1cm4gbihyKGUsdCkpfSl9Y2F0Y2goZSl7byhlKX19KX1mdW5jdGlvbiBhKGUpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0LG4pe3RyeXsoMCx1Lmpzb24pKGUsZnVuY3Rpb24oZSl7cmV0dXJuIHQoW2VdKX0pfWNhdGNoKGUpe24oZSl9fSl9ZnVuY3Rpb24gaShlLHQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLG8pe3RyeXsoMCx1Lmpzb24pKGUsZnVuY3Rpb24oZSl7cmV0dXJuIG4ocihlLHQpKX0pfWNhdGNoKGUpe28oZSl9fSl9ZnVuY3Rpb24gcyhlKXtyZXR1cm4gcihlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgdT1uKDIpLGw9bigzKSxjPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0obCk7dC5kZWZhdWx0PXtwYXJzZUNTVjpvLHBhcnNlSlNPTjphLHBhcnNlRmxhdEpTT046aSxnZW5lcmF0ZUhpZXJhcmNoeTpzfSxlLmV4cG9ydHM9dC5kZWZhdWx0fV0pfSk7IiwiKGZ1bmN0aW9uIChmYWN0b3J5KSB7XG5cdHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IChtb2R1bGVbJ2V4cG9ydHMnXSA9IGZhY3RvcnkoKSkgOlxuXHRcdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lWydhbWQnXSA/IGRlZmluZShmYWN0b3J5KCkpIDpcblx0XHRcdCh3aW5kb3dbJ3N0eWxpc1J1bGVTaGVldCddID0gZmFjdG9yeSgpKVxufShmdW5jdGlvbiAoKSB7XG5cblx0J3VzZSBzdHJpY3QnXG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbnNlcnRSdWxlKSB7XG5cdFx0dmFyIGRlbGltaXRlciA9ICcvKnwqLydcblx0XHR2YXIgbmVlZGxlID0gZGVsaW1pdGVyKyd9J1xuXG5cdFx0ZnVuY3Rpb24gdG9TaGVldCAoYmxvY2spIHtcblx0XHRcdGlmIChibG9jaylcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRpbnNlcnRSdWxlKGJsb2NrICsgJ30nKVxuXHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdH1cblxuXHRcdHJldHVybiBmdW5jdGlvbiBydWxlU2hlZXQgKGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycywgcGFyZW50cywgbGluZSwgY29sdW1uLCBsZW5ndGgsIG5zLCBkZXB0aCwgYXQpIHtcblx0XHRcdHN3aXRjaCAoY29udGV4dCkge1xuXHRcdFx0XHQvLyBwcm9wZXJ0eVxuXHRcdFx0XHRjYXNlIDE6XG5cdFx0XHRcdFx0Ly8gQGltcG9ydFxuXHRcdFx0XHRcdGlmIChkZXB0aCA9PT0gMCAmJiBjb250ZW50LmNoYXJDb2RlQXQoMCkgPT09IDY0KVxuXHRcdFx0XHRcdFx0cmV0dXJuIGluc2VydFJ1bGUoY29udGVudCsnOycpLCAnJ1xuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdC8vIHNlbGVjdG9yXG5cdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRpZiAobnMgPT09IDApXG5cdFx0XHRcdFx0XHRyZXR1cm4gY29udGVudCArIGRlbGltaXRlclxuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdC8vIGF0LXJ1bGVcblx0XHRcdFx0Y2FzZSAzOlxuXHRcdFx0XHRcdHN3aXRjaCAobnMpIHtcblx0XHRcdFx0XHRcdC8vIEBmb250LWZhY2UsIEBwYWdlXG5cdFx0XHRcdFx0XHRjYXNlIDEwMjpcblx0XHRcdFx0XHRcdGNhc2UgMTEyOlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShzZWxlY3RvcnNbMF0rY29udGVudCksICcnXG5cdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gY29udGVudCArIChhdCA9PT0gMCA/IGRlbGltaXRlciA6ICcnKVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0Y2FzZSAtMjpcblx0XHRcdFx0XHRjb250ZW50LnNwbGl0KG5lZWRsZSkuZm9yRWFjaCh0b1NoZWV0KVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSkpXG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNjM4NmM5NTk3ODQ2MzhhNmQyZjFkYmM5YzViOWMyYjUucG5nXCI7IiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjAtYWxwaGEuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGg9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bD9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPWw/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPWw/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1sP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PWw/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bD9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PWw/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PWw/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bD9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsYWE9bD9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGJhPWw/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gY2EoYSxiLGQsYyxlLGcsayxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbT1bZCxjLGUsZyxrLGZdLG49MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBtW24rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZD1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZCs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixkKX12YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRD17fTtcbmZ1bmN0aW9uIEUoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9CKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7aChILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPXtjdXJyZW50Om51bGx9LEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGQpe3ZhciBjPXZvaWQgMCxlPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Zil7Zm9yKHZhciBtPUFycmF5KGYpLG49MDtuPGY7bisrKW1bbl09YXJndW1lbnRzW24rMl07ZS5jaGlsZHJlbj1tfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1lW2NdJiYoZVtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZSxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGRhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsZCxjKXt2YXIgZT10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZXx8XCJib29sZWFuXCI9PT1lKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZChjLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtlPWFba107dmFyIGY9YitUKGUsayk7Zys9UyhlLGYsZCxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxrKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGVhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGZhKGEsYixkKXt2YXIgYz1hLnJlc3VsdCxlPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1YoYSxjLGQsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9ZGEoYSxlKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStkKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBWKGEsYixkLGMsZSl7dmFyIGc9XCJcIjtudWxsIT1kJiYoZz0oXCJcIitkKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxlKTtVKGEsZmEsYik7UihiKX1mdW5jdGlvbiBXKCl7dmFyIGE9SS5jdXJyZW50O251bGw9PT1hP0IoXCIyOThcIik6dm9pZCAwO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VihhLGMsbnVsbCxiLGQpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixkKTtVKGEsZWEsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6QihcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmJhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOmFhLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixkKXtudWxsPT09YXx8dm9pZCAwPT09YT9CKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxlPWgoe30sYS5wcm9wcyksZz1hLmtleSxrPWEucmVmLGY9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbT12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobT1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bT9tW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Yyl7bT1BcnJheShjKTtmb3IodmFyIG49MDtuPGM7bisrKW1bbl09YXJndW1lbnRzW24rMl07ZS5jaGlsZHJlbj1tfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjprLHByb3BzOmUsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi44LjAtYWxwaGEuMVwiLFxudW5zdGFibGVfQ29uY3VycmVudE1vZGU6eCx1bnN0YWJsZV9Qcm9maWxlcjp1LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnREaXNwYXRjaGVyOkksUmVhY3RDdXJyZW50T3duZXI6Sixhc3NpZ246aH19O1guQ29uY3VycmVudE1vZGU9eDtYLlByb2ZpbGVyPXU7WC51bnN0YWJsZV9Db25jdXJyZW50TW9kZT12b2lkIDA7WC51bnN0YWJsZV9Qcm9maWxlcj12b2lkIDA7WC51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ2FsbGJhY2soYSxiKX07WC51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9O1gudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX07WC51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGQpfTtcblgudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307WC51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtYLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZU1lbW8oYSxiKX07WC51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfTtYLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVJlZihhKX07WC51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVN0YXRlKGEpfTt2YXIgWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjAtYWxwaGEuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLGJhPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gY2EoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgaz1bYyxkLGUsZixnLGhdLGw9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBrW2wrK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB0KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6dChcIjIyN1wiKTtmdW5jdGlvbiBkYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBlYT0hMSxmYT1udWxsLGhhPSExLGlhPW51bGwsamE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZWE9ITA7ZmE9YX19O2Z1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtlYT0hMTtmYT1udWxsO2RhLmFwcGx5KGphLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbGEoYSxiLGMsZCxlLGYsZyxoLGspe2thLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihlYSl7aWYoZWEpe3ZhciBsPWZhO2VhPSExO2ZhPW51bGx9ZWxzZSB0KFwiMTk4XCIpLGw9dm9pZCAwO2hhfHwoaGE9ITAsaWE9bCl9fXZhciBtYT1udWxsLG5hPXt9O1xuZnVuY3Rpb24gb2EoKXtpZihtYSlmb3IodmFyIGEgaW4gbmEpe3ZhciBiPW5hW2FdLGM9bWEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp0KFwiOTZcIixhKTtpZighcWFbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6dChcIjk3XCIsYSk7cWFbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtyYS5oYXNPd25Qcm9wZXJ0eShoKT90KFwiOTlcIixoKTp2b2lkIDA7cmFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmc2Eoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHNhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6dChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHNhKGEsYixjKXt0YVthXT90KFwiMTAwXCIsYSk6dm9pZCAwO3RhW2FdPWI7dWFbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgcWE9W10scmE9e30sdGE9e30sdWE9e30sdmE9bnVsbCx3YT1udWxsLHhhPW51bGw7ZnVuY3Rpb24geWEoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXhhKGMpO2xhKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24gemEoYSxiKXtudWxsPT1iP3QoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24gQWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIEJhPW51bGw7ZnVuY3Rpb24gQ2EoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXlhKGEsYltkXSxjW2RdKTtlbHNlIGImJnlhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBEYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXttYT90KFwiMTAxXCIpOnZvaWQgMDttYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtvYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bmEuaGFzT3duUHJvcGVydHkoYykmJm5hW2NdPT09ZHx8KG5hW2NdP3QoXCIxMDJcIixjKTp2b2lkIDAsbmFbY109ZCxiPSEwKX1iJiZvYSgpfX07XG5mdW5jdGlvbiBFYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXZhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBGYShhKXtudWxsIT09YSYmKEJhPXphKEJhLGEpKTthPUJhO0JhPW51bGw7aWYoYSYmKEFhKGEsQ2EpLEJhP3QoXCI5NVwiKTp2b2lkIDAsaGEpKXRocm93IGE9aWEsaGE9ITEsaWE9bnVsbCxhO312YXIgR2E9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksSGE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitHYSxJYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0dhO2Z1bmN0aW9uIEphKGEpe2lmKGFbSGFdKXJldHVybiBhW0hhXTtmb3IoOyFhW0hhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0hhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIEthKGEpe2E9YVtIYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIExhKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0KFwiMzNcIil9ZnVuY3Rpb24gTWEoYSl7cmV0dXJuIGFbSWFdfHxudWxsfWZ1bmN0aW9uIE5hKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gT2EoYSxiLGMpe2lmKGI9RWEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz16YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz16YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIFBhKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TmEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU9hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspT2EoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gUWEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9RWEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXphKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXphKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBSYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlFhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFNhKGEpe0FhKGEsUGEpfXZhciBUYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFVhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFZhPXthbmltYXRpb25lbmQ6VWEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VWEoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpVYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpVYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFdhPXt9LFhhPXt9O1xuVGEmJihYYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBWYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBWYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBWYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBWYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFlhKGEpe2lmKFdhW2FdKXJldHVybiBXYVthXTtpZighVmFbYV0pcmV0dXJuIGE7dmFyIGI9VmFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWGEpcmV0dXJuIFdhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWmE9WWEoXCJhbmltYXRpb25lbmRcIiksJGE9WWEoXCJhbmltYXRpb25pdGVyYXRpb25cIiksYWI9WWEoXCJhbmltYXRpb25zdGFydFwiKSxiYj1ZYShcInRyYW5zaXRpb25lbmRcIiksY2I9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGRiPW51bGwsZWI9bnVsbCxmYj1udWxsO1xuZnVuY3Rpb24gZ2IoKXtpZihmYilyZXR1cm4gZmI7dmFyIGEsYj1lYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBkYj9kYi52YWx1ZTpkYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBmYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGhiKCl7cmV0dXJuITB9ZnVuY3Rpb24gaWIoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHYoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2hiOmliO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9aWI7cmV0dXJuIHRoaXN9XG5uKHYucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9aGIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9aGIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9aGJ9LGlzUGVyc2lzdGVudDppYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1pYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3YuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xudi5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtqYihjKTtyZXR1cm4gY307amIodik7ZnVuY3Rpb24ga2IoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gbGIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOnQoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gamIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9a2I7YS5yZWxlYXNlPWxifXZhciBtYj12LmV4dGVuZCh7ZGF0YTpudWxsfSksbmI9di5leHRlbmQoe2RhdGE6bnVsbH0pLG9iPVs5LDEzLDI3LDMyXSxxYj1UYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3cscmI9bnVsbDtUYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYocmI9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBzYj1UYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIXJiLHRiPVRhJiYoIXFifHxyYiYmODxyYiYmMTE+PXJiKSx1Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSx2Yj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx3Yj0hMTtcbmZ1bmN0aW9uIHhiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09b2IuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB5YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB6Yj0hMTtmdW5jdGlvbiBBYihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4geWIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3diPSEwO3JldHVybiB1YjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT11YiYmd2I/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gQmIoYSxiKXtpZih6YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhcWImJnhiKGEsYik/KGE9Z2IoKSxmYj1lYj1kYj1udWxsLHpiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB0YiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgQ2I9e2V2ZW50VHlwZXM6dmIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHFiKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9dmIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9dmIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXZiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB6Yj94YihhLGMpJiYoZT12Yi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXZiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHRiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHpifHxlIT09dmIuY29tcG9zaXRpb25TdGFydD9lPT09dmIuY29tcG9zaXRpb25FbmQmJnpiJiYoZj1nYigpKTooZGI9ZCxlYj1cInZhbHVlXCJpbiBkYj9kYi52YWx1ZTpkYi50ZXh0Q29udGVudCx6Yj1cbiEwKSksZT1tYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj15YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksU2EoZSksZj1lKTpmPW51bGw7KGE9c2I/QWIoYSxjKTpCYihhLGMpKT8oYj1uYi5nZXRQb29sZWQodmIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFNhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LERiPW51bGwsRWI9bnVsbCxGYj1udWxsO2Z1bmN0aW9uIEdiKGEpe2lmKGE9d2EoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBEYj90KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj12YShhLnN0YXRlTm9kZSk7RGIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBIYihhKXtFYj9GYj9GYi5wdXNoKGEpOkZiPVthXTpFYj1hfWZ1bmN0aW9uIEliKCl7aWYoRWIpe3ZhciBhPUViLGI9RmI7RmI9RWI9bnVsbDtHYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspR2IoYlthXSl9fVxuZnVuY3Rpb24gSmIoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBLYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBMYigpe312YXIgTWI9ITE7ZnVuY3Rpb24gTmIoYSxiKXtpZihNYilyZXR1cm4gYShiKTtNYj0hMDt0cnl7cmV0dXJuIEpiKGEsYil9ZmluYWxseXtpZihNYj0hMSxudWxsIT09RWJ8fG51bGwhPT1GYilMYigpLEliKCl9fXZhciBPYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBQYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIU9iW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIFFiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBSYihhKXtpZighVGEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gU2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFViKGEpe3ZhciBiPVNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWIoYSkpfWZ1bmN0aW9uIFdiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1TYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfVxudmFyIFhiPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELFliPS9eKC4qKVtcXFxcXFwvXS8sQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFpiPUI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGI9Qj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFjPUI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJjPUI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNjPUI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRjPUI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGVjPUI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmM9Qj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdjPUI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhjPUI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOlxuNjAxMTMsaWM9Qj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxqYz1CP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGtjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBsYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9a2MmJmFba2NdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBtYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGZjOnJldHVyblwiQ29uY3VycmVudE1vZGVcIjtjYXNlIGFjOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRiOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYzpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYzpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhjOnJldHVyblwiU3VzcGVuc2VcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWM6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYzpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdjOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXG5cIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBpYzpyZXR1cm4gbWMoYS50eXBlKTtjYXNlIGpjOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gbWMoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gbmMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPW1jKGEudHlwZSk7Yz1udWxsO2QmJihjPW1jKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWIsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBvYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8scGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxxYz17fSxyYz17fTtcbmZ1bmN0aW9uIHNjKGEpe2lmKHBjLmNhbGwocmMsYSkpcmV0dXJuITA7aWYocGMuY2FsbChxYyxhKSlyZXR1cm4hMTtpZihvYy50ZXN0KGEpKXJldHVybiByY1thXT0hMDtxY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiB0YyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHRjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gRShhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEY9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RltiXT1uZXcgRShiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIHZjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gd2MoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMsXG53Yyk7RltiXT1uZXcgRShiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMsd2MpO0ZbYl09bmV3IEUoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMsd2MpO0ZbYl09bmV3IEUoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtGLnRhYkluZGV4PW5ldyBFKFwidGFiSW5kZXhcIiwxLCExLFwidGFiaW5kZXhcIixudWxsKTtcbmZ1bmN0aW9uIHhjKGEsYixjLGQpe3ZhciBlPUYuaGFzT3duUHJvcGVydHkoYik/RltiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHVjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9zYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24geWMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHpjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXljKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmMoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ4YyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2MoYSxiKXtCYyhhLGIpO3ZhciBjPXljKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRjKGEsYi50eXBlLHljKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBGYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBHYyhhLGIsYyl7YT12LmdldFBvb2xlZChGYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0hiKGMpO1NhKGEpO3JldHVybiBhfXZhciBIYz1udWxsLEljPW51bGw7ZnVuY3Rpb24gSmMoYSl7RmEoYSl9XG5mdW5jdGlvbiBLYyhhKXt2YXIgYj1MYShhKTtpZihXYihiKSlyZXR1cm4gYX1mdW5jdGlvbiBMYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBNYz0hMTtUYSYmKE1jPVJiKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIE5jKCl7SGMmJihIYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixPYyksSWM9SGM9bnVsbCl9ZnVuY3Rpb24gT2MoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJktjKEljKSYmKGE9R2MoSWMsYSxRYihhKSksTmIoSmMsYSkpfWZ1bmN0aW9uIFBjKGEsYixjKXtcImZvY3VzXCI9PT1hPyhOYygpLEhjPWIsSWM9YyxIYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixPYykpOlwiYmx1clwiPT09YSYmTmMoKX1mdW5jdGlvbiBRYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBLYyhJYyl9XG5mdW5jdGlvbiBSYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIEtjKGIpfWZ1bmN0aW9uIFNjKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIEtjKGIpfVxudmFyIFRjPXtldmVudFR5cGVzOkZjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6TWMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0xhKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1MYzpQYihlKT9NYz9mPVNjOihmPVFjLGc9UGMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPVJjKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBHYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LFVjPXYuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxWYz17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBXYyhhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPVZjW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gWGMoKXtyZXR1cm4gV2N9XG52YXIgWWM9MCxhZD0wLGJkPSExLGNkPSExLGRkPVVjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpYYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1ZYztZYz1hLnNjcmVlblg7cmV0dXJuIGJkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooYmQ9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1hZDthZD1hLnNjcmVlblk7cmV0dXJuIGNkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooY2Q9ITAsMCl9fSksZWQ9ZGQuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLGZkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxnZD17ZXZlbnRUeXBlczpmZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9KYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGs9dm9pZCAwLGw9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9ZGQsaD1mZC5tb3VzZUxlYXZlLGs9ZmQubW91c2VFbnRlcixsPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9ZWQsaD1mZC5wb2ludGVyTGVhdmUsaz1mZC5wb2ludGVyRW50ZXIsbD1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6TGEoZik7ZT1udWxsPT1iP2U6TGEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9bCtcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGssYixjLGQpO2MudHlwZT1sK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7bD0wO2ZvcihnPWI7ZztnPU5hKGcpKWwrKztnPTA7Zm9yKGs9ZTtrO2s9TmEoaykpZysrO2Zvcig7MDxsLWc7KWI9TmEoYiksbC0tO2Zvcig7MDxnLWw7KWU9TmEoZSksZy0tO2Zvcig7bC0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TmEoYik7ZT1OYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7bD1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztiLnB1c2goZik7Zj1OYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2w9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2YucHVzaChkKTtkPU5hKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspUWEoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspUWEoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fTtmdW5jdGlvbiBoZChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGlkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBqZChhLGIpe2lmKGhkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighaWQuY2FsbChiLGNbZF0pfHwhaGQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBsZChhKXsyIT09a2QoYSk/dChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBtZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj90KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBsZChlKSxhO2lmKGc9PT1kKXJldHVybiBsZChlKSxiO2c9Zy5zaWJsaW5nfXQoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp0KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/dChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3QoXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gbmQoYSl7YT1tZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBvZD12LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkscGQ9di5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxxZD1VYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIHJkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSx0ZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sdWQ9VWMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPXJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT90ZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WGMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/cmQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/cmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSx2ZD1kZC5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksd2Q9VWMuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WGN9KSx4ZD12LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx5ZD1kZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHpkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1phLFwiYW5pbWF0aW9uRW5kXCJdLFskYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbYWIsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFtiYixcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLEFkPXt9LEJkPXt9O2Z1bmN0aW9uIENkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07QWRbYV09YjtCZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITApfSk7emQuZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCExKX0pO1xudmFyIERkPXtldmVudFR5cGVzOkFkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUJkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1CZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT11ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1kZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxudmQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT13ZDticmVhaztjYXNlIFphOmNhc2UgJGE6Y2FzZSBhYjphPW9kO2JyZWFrO2Nhc2UgYmI6YT14ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1VYzticmVhaztjYXNlIFwid2hlZWxcIjphPXlkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cGQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1lZDticmVhaztkZWZhdWx0OmE9dn1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1NhKGIpO3JldHVybiBifX0sRWQ9RGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuRmQ9W107ZnVuY3Rpb24gR2QoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SmEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9UWIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8cWEubGVuZ3RoO2grKyl7dmFyIGs9cWFbaF07ayYmKGs9ay5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9emEoZyxrKSl9RmEoZyl9fXZhciBIZD0hMDtcbmZ1bmN0aW9uIEcoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBLZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIElkKGEsYil7S2IoSmQsYSxiKX1cbmZ1bmN0aW9uIEpkKGEsYil7aWYoSGQpe3ZhciBjPVFiKGIpO2M9SmEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYoRmQubGVuZ3RoKXt2YXIgZD1GZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtOYihHZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPkZkLmxlbmd0aCYmRmQucHVzaChhKX19fXZhciBMZD17fSxNZD0wLE5kPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIE9kKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLE5kKXx8KGFbTmRdPU1kKyssTGRbYVtOZF1dPXt9KTtyZXR1cm4gTGRbYVtOZF1dfWZ1bmN0aW9uIFBkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBRZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBSZChhLGIpe3ZhciBjPVFkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVFkKGMpfX1mdW5jdGlvbiBTZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP1NkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIFRkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVBkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPVBkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIFVkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVmQ9VGEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxXZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sWGQ9bnVsbCxZZD1udWxsLFpkPW51bGwsJGQ9ITE7XG5mdW5jdGlvbiBhZShhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKCRkfHxudWxsPT1YZHx8WGQhPT1QZChjKSlyZXR1cm4gbnVsbDtjPVhkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJlVkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFpkJiZqZChaZCxjKT9udWxsOihaZD1jLGE9di5nZXRQb29sZWQoV2Quc2VsZWN0LFlkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9WGQsU2EoYSksYSl9XG52YXIgYmU9e2V2ZW50VHlwZXM6V2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9T2QoZSk7Zj11YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0xhKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoUGIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWGQ9ZSxZZD1iLFpkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpaZD1ZZD1YZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjokZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuICRkPSExLGFlKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFZkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gYWUoYyxkKX1yZXR1cm4gbnVsbH19O0RhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dmE9TWE7d2E9S2E7eGE9TGE7RGEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpEZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46Z2QsQ2hhbmdlRXZlbnRQbHVnaW46VGMsU2VsZWN0RXZlbnRQbHVnaW46YmUsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpDYn0pO2Z1bmN0aW9uIGNlKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gZGUoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1jZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gZWUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3ljKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBmZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBnZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3QoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp0KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp5YyhjKX19XG5mdW5jdGlvbiBoZShhLGIpe3ZhciBjPXljKGIudmFsdWUpLGQ9eWMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBpZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgamU9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24ga2UoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBsZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/a2UoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbWU9dm9pZCAwLG5lPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWplLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21lPW1lfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21lLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPW1lLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9lKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FlLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGVbYl09cGVbYV19KX0pO2Z1bmN0aW9uIHJlKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwZS5oYXNPd25Qcm9wZXJ0eShhKSYmcGVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2UoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmUoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHVlKGEsYil7YiYmKHRlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3QoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6dChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/dChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHdlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPU9kKGEpO2I9dWFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOktkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpLZChcImZvY3VzXCIsYSk7S2QoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlJiKGUpJiZLZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1jYi5pbmRleE9mKGUpJiZHKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHhlKCl7fXZhciB5ZT1udWxsLHplPW51bGw7XG5mdW5jdGlvbiBCZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24gQ2UoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBEZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxFZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7XG5mdW5jdGlvbiBGZShhLGIsYyxkLGUpe2FbSWFdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkJjKGEsZSk7dmUoYyxkKTtkPXZlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/c2UoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP25lKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9vZShhLGgpOnhjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/ZWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2VlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmVlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBHZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEhlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBJZT1bXSxKZT0tMTtmdW5jdGlvbiBIKGEpezA+SmV8fChhLmN1cnJlbnQ9SWVbSmVdLEllW0plXT1udWxsLEplLS0pfWZ1bmN0aW9uIEkoYSxiKXtKZSsrO0llW0plXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEtlPXt9LEo9e2N1cnJlbnQ6S2V9LEs9e2N1cnJlbnQ6ITF9LExlPUtlO1xuZnVuY3Rpb24gTWUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBLZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gTmUoYSl7SChLLGEpO0goSixhKX1mdW5jdGlvbiBPZShhKXtIKEssYSk7SChKLGEpfVxuZnVuY3Rpb24gUGUoYSxiLGMpe0ouY3VycmVudCE9PUtlP3QoXCIxNjhcIik6dm9pZCAwO0koSixiLGEpO0koSyxjLGEpfWZ1bmN0aW9uIFFlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixtYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBSZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEtlO0xlPUouY3VycmVudDtJKEosYixhKTtJKEssSy5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gU2UoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOnQoXCIxNjlcIik7Yz8oYj1RZShhLGIsTGUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixIKEssYSksSChKLGEpLEkoSixiLGEpKTpIKEssYSk7SShLLGMsYSl9dmFyIFRlPW51bGwsVWU9bnVsbDtmdW5jdGlvbiBWZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gV2UoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VGU9VmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1VlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBYZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBZZShhLGIsYyxkKXtyZXR1cm4gbmV3IFhlKGEsYixjLGQpfVxuZnVuY3Rpb24gWmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiAkZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gWmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdjKXJldHVybiAxMTtpZihhPT09aWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gYWYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1ZZShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtjLnNpYmxpbmc9XG5hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gYmYoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKVplKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFjOnJldHVybiBjZihjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZjOnJldHVybiBkZihjLGV8MyxmLGIpO2Nhc2UgYmM6cmV0dXJuIGRmKGMsZXwyLGYsYik7Y2FzZSBjYzpyZXR1cm4gYT1ZZSgxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPWNjLGEudHlwZT1jYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhjOnJldHVybiBhPVllKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWhjLGEudHlwZT1oYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGM6Zz0xMDticmVhayBhO2Nhc2UgZWM6Zz05O2JyZWFrIGE7Y2FzZSBnYzpnPTExO2JyZWFrIGE7Y2FzZSBpYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGpjOmc9MTY7ZD1udWxsO2JyZWFrIGF9dChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPVllKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gY2YoYSxiLGMsZCl7YT1ZZSg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gZGYoYSxiLGMsZCl7YT1ZZSg4LGEsZCxiKTtiPTA9PT0oYiYxKT9iYzpmYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGVmKGEsYixjKXthPVllKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGZmKGEsYixjKXtiPVllKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGdmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtoZihiLGEpfVxuZnVuY3Rpb24gamYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7aGYoYixhKX1mdW5jdGlvbiBrZihhLGIpe3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTthPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2M+YiYmKGI9Yyk7YT5iJiYoYj1hKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9dmFyIGxmPSExO2Z1bmN0aW9uIG1mKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIG5mKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBvZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBwZihhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBxZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9bWYoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9bWYoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9bWYoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPW5mKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPW5mKGQpKTtudWxsPT09ZXx8ZD09PWU/cGYoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhwZihkLGIpLHBmKGUsYikpOihwZihkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHJmKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9bWYoYS5tZW1vaXplZFN0YXRlKTpzZihhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIHNmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPW5mKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHRmKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIDI6bGY9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB1ZihhLGIsYyxkLGUpe2xmPSExO2I9c2YoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbD1mO251bGwhPT1rOyl7dmFyIG09ay5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1rLGY9bCksaDxtJiYoaD1tKSk6KGw9dGYoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpKTtrPWsubmV4dH1tPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIHE9ay5leHBpcmF0aW9uVGltZTtxPGU/KG51bGw9PT1tJiYobT1rLG51bGw9PT1nJiYoZj1sKSksaDxxJiYoaD1xKSk6KGw9dGYoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWwpO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bH1cbmZ1bmN0aW9uIHZmKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTt3ZihiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7d2YoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIHdmKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIHhmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6bmMoYil9fXZhciB5Zj17Y3VycmVudDpudWxsfSx6Zj1udWxsLEFmPW51bGwsQmY9bnVsbDtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtJKHlmLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBEZihhKXt2YXIgYj15Zi5jdXJyZW50O0goeWYsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBFZihhKXt6Zj1hO0JmPUFmPW51bGw7YS5maXJzdENvbnRleHREZXBlbmRlbmN5PW51bGx9XG5mdW5jdGlvbiBGZihhLGIpe2lmKEJmIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilCZj1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09QWY/KG51bGw9PT16Zj90KFwiMjkzXCIpOnZvaWQgMCx6Zi5maXJzdENvbnRleHREZXBlbmRlbmN5PUFmPWIpOkFmPUFmLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfWZ1bmN0aW9uIEdmKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspaWYoIWhkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9dmFyIEhmPTAsTT1udWxsLElmPW51bGwsTj1udWxsLEpmPW51bGwsTz1udWxsLEtmPTAsTGY9bnVsbCxNZj0hMSxOZj0hMSxPZj1udWxsLFBmPTA7ZnVuY3Rpb24gUWYoKXtudWxsPT09TT90KFwiMjk4XCIpOnZvaWQgMDtyZXR1cm4gTX1cbmZ1bmN0aW9uIFJmKGEsYixjLGQpe2Zvcig7TmY7KU5mPSExLFBmKz0xLExmPU89Tj1udWxsLGM9YShiLGQpO09mPW51bGw7UGY9MDthPU07YS5tZW1vaXplZFN0YXRlPUpmO2EuZXhwaXJhdGlvblRpbWU9S2Y7YS51cGRhdGVRdWV1ZT1MZjthPW51bGwhPT1OJiZudWxsIT09Ti5uZXh0O0hmPTA7Tz1KZj1OPUlmPU09bnVsbDtLZj0wO0xmPW51bGw7YT90KFwiMzAwXCIpOnZvaWQgMDtyZXR1cm4gY31mdW5jdGlvbiBTZigpe0hmPTA7Tz1KZj1OPUlmPU09bnVsbDtLZj0wO0xmPW51bGw7TmY9ITE7T2Y9bnVsbDtQZj0wfWZ1bmN0aW9uIFRmKCl7cmV0dXJue21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9fVxuZnVuY3Rpb24gVWYoYSl7cmV0dXJue21lbW9pemVkU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTphLmJhc2VTdGF0ZSxxdWV1ZTphLnF1ZXVlLGJhc2VVcGRhdGU6YS5iYXNlVXBkYXRlLG5leHQ6bnVsbH19ZnVuY3Rpb24gVmYoKXtpZihudWxsPT09TyludWxsPT09SmY/KE1mPSExLE49SWYsSmY9Tz1udWxsPT09Tj9UZigpOlVmKE4pKTooTWY9ITAsTj1JZixPPUpmKTtlbHNlIGlmKG51bGw9PT1PLm5leHQpe01mPSExO2lmKG51bGw9PT1OKXZhciBhPVRmKCk7ZWxzZSBOPU4ubmV4dCxhPW51bGw9PT1OP1RmKCk6VWYoTik7Tz1PLm5leHQ9YX1lbHNlIE1mPSEwLE89Ty5uZXh0LE49bnVsbCE9PU4/Ti5uZXh0Om51bGw7cmV0dXJuIE99ZnVuY3Rpb24gV2YoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBYZihhLGIsYyl7TT1RZigpO089VmYoKTt2YXIgZD1PLnF1ZXVlO2lmKG51bGwhPT1kKXtpZihNZil7Yj1kLmRpc3BhdGNoO2lmKG51bGwhPT1PZil7dmFyIGU9T2YuZ2V0KGQpO2lmKHZvaWQgMCE9PWUpe09mLmRlbGV0ZShkKTtjPU8ubWVtb2l6ZWRTdGF0ZTtkbyBjPWEoYyxlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO08ubWVtb2l6ZWRTdGF0ZT1jO08uYmFzZVVwZGF0ZT09PWQubGFzdCYmKE8uYmFzZVN0YXRlPWMpO3JldHVybltjLGJdfX1yZXR1cm5bTy5tZW1vaXplZFN0YXRlLGJdfWI9ZC5sYXN0O3ZhciBmPU8uYmFzZVVwZGF0ZTtudWxsIT09Zj8obnVsbCE9PWImJihiLm5leHQ9bnVsbCksYj1mLm5leHQpOmI9bnVsbCE9PWI/Yi5uZXh0Om51bGw7aWYobnVsbCE9PWIpe2M9Ty5iYXNlU3RhdGU7dmFyIGc9ZT1udWxsLGg9YixrPSExO2Rve3ZhciBsPWguZXhwaXJhdGlvblRpbWU7bDxIZj8oa3x8KGs9ITAsZz1mLGU9YyksbD5LZiYmKEtmPWwpKTpcbmM9YShjLGguYWN0aW9uKTtmPWg7aD1oLm5leHR9d2hpbGUobnVsbCE9PWgmJmghPT1iKTtrfHwoZz1mLGU9Yyk7Ty5tZW1vaXplZFN0YXRlPWM7Ty5iYXNlVXBkYXRlPWc7Ty5iYXNlU3RhdGU9ZX1yZXR1cm5bTy5tZW1vaXplZFN0YXRlLGQuZGlzcGF0Y2hdfWE9PT1XZj9cImZ1bmN0aW9uXCI9PT10eXBlb2YgYiYmKGI9YigpKTp2b2lkIDAhPT1jJiZudWxsIT09YyYmKGI9YShiLGMpKTtPLm1lbW9pemVkU3RhdGU9Ty5iYXNlU3RhdGU9YjtkPU8ucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsfTthPWQuZGlzcGF0Y2g9WWYuYmluZChudWxsLE0sZCk7cmV0dXJuW08ubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFpmKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxpbnB1dHM6ZCxuZXh0Om51bGx9O251bGw9PT1MZj8oTGY9e2xhc3RFZmZlY3Q6bnVsbH0sTGYubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9TGYubGFzdEVmZmVjdCxudWxsPT09Yj9MZi5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9YyxMZi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiAkZihhLGIpe2FnKDQsMzYsYSxiKX1mdW5jdGlvbiBhZyhhLGIsYyxkKXtNPVFmKCk7Tz1WZigpO2Q9dm9pZCAwIT09ZCYmbnVsbCE9PWQ/ZDpbY107dmFyIGU9bnVsbDtpZihudWxsIT09Til7dmFyIGY9Ti5tZW1vaXplZFN0YXRlO2U9Zi5kZXN0cm95O2lmKEdmKGQsZi5pbnB1dHMpKXtaZigwLGMsZSxkKTtyZXR1cm59fU0uZWZmZWN0VGFnfD1hO08ubWVtb2l6ZWRTdGF0ZT1aZihiLGMsZSxkKX1cbmZ1bmN0aW9uIFlmKGEsYixjKXsyNT5QZj92b2lkIDA6dChcIjMwMVwiKTt2YXIgZD1hLmFsdGVybmF0ZTtpZihhPT09TXx8bnVsbCE9PWQmJmQ9PT1NKWlmKE5mPSEwLGE9e2V4cGlyYXRpb25UaW1lOkhmLGFjdGlvbjpjLG5leHQ6bnVsbH0sbnVsbD09PU9mJiYoT2Y9bmV3IE1hcCksZD1PZi5nZXQoYiksdm9pZCAwPT09ZClPZi5zZXQoYixhKTtlbHNle2ZvcihiPWQ7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXtkPWJnKCk7ZD1jZyhkLGEpO2M9e2V4cGlyYXRpb25UaW1lOmQsYWN0aW9uOmMsbmV4dDpudWxsfTtkZygpO3ZhciBlPWIubGFzdDtpZihudWxsPT09ZSljLm5leHQ9YztlbHNle3ZhciBmPWUubmV4dDtudWxsIT09ZiYmKGMubmV4dD1mKTtlLm5leHQ9Y31iLmxhc3Q9YztlZyhhLGQpfX12YXIgZmc9e30sZ2c9e2N1cnJlbnQ6Zmd9LGhnPXtjdXJyZW50OmZnfSxpZz17Y3VycmVudDpmZ307XG5mdW5jdGlvbiBqZyhhKXthPT09Zmc/dChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9ZnVuY3Rpb24ga2coYSxiKXtJKGlnLGIsYSk7SShoZyxhLGEpO0koZ2csZmcsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWxlKGIsYyl9SChnZyxhKTtJKGdnLGIsYSl9ZnVuY3Rpb24gbGcoYSl7SChnZyxhKTtIKGhnLGEpO0goaWcsYSl9ZnVuY3Rpb24gbWcoYSl7amcoaWcuY3VycmVudCk7dmFyIGI9amcoZ2cuY3VycmVudCk7dmFyIGM9bGUoYixhLnR5cGUpO2IhPT1jJiYoSShoZyxhLGEpLEkoZ2csYyxhKSl9ZnVuY3Rpb24gbmcoYSl7aGcuY3VycmVudD09PWEmJihIKGdnLGEpLEgoaGcsYSkpfVxuZnVuY3Rpb24gUShhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1mdW5jdGlvbiBvZyhhKXt2YXIgYj1hLl9yZXN1bHQ7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBiO2Nhc2UgMjp0aHJvdyBiO2Nhc2UgMDp0aHJvdyBiO2RlZmF1bHQ6dGhyb3cgYS5fc3RhdHVzPTAsYj1hLl9jdG9yLGI9YigpLGIudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSksYS5fcmVzdWx0PWIsYjt9fXZhciBwZz1YYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHFnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gcmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgc2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1rZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1iZygpO2Q9Y2coZCxhKTt2YXIgZT1vZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7ZGcoKTtxZihhLGUpO2VnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWJnKCk7ZD1jZyhkLGEpO3ZhciBlPW9mKGQpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO2RnKCk7cWYoYSxlKTtlZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1iZygpO2M9Y2coYyxhKTt2YXIgZD1vZihjKTtkLnRhZz1cbjI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO2RnKCk7cWYoYSxkKTtlZyhhLGMpfX07ZnVuY3Rpb24gdGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hamQoYyxkKXx8IWpkKGUsZik6ITB9XG5mdW5jdGlvbiB1ZyhhLGIsYyl7dmFyIGQ9ITEsZT1LZTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1wZy5jdXJyZW50LnJlYWRDb250ZXh0KGYpOihlPUwoYik/TGU6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/TWUoYSxlKTpLZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPXNnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHZnKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZzZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIHdnKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9cWc7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1wZy5jdXJyZW50LnJlYWRDb250ZXh0KGYpOihmPUwoYik/TGU6Si5jdXJyZW50LGUuY29udGV4dD1NZShhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJih1ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYocmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmc2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYodWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciB4Zz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24geWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3QoXCIyODlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOnQoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PXFnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3QoXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDp0KFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBBZyhhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmdChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gQmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1hZihhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWVmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj15ZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9YmYoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9eWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1mZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1jZihjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9ZWYoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGM9YmYoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9eWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRiOnJldHVybiBiPWZmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZih4ZyhiKXx8XG5sYyhiKSlyZXR1cm4gYj1jZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtBZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGI6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoeGcoYyl8fGxjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtBZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEEoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWM/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoeGcoZCl8fGxjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtBZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwscD1udWxsLG09Zyx1PWc9MCxyPW51bGw7bnVsbCE9PW0mJnU8aC5sZW5ndGg7dSsrKXttLmluZGV4PnU/KHI9bSxtPW51bGwpOnI9bS5zaWJsaW5nO3ZhciB3PXgoZSxtLGhbdV0sayk7aWYobnVsbD09PXcpe251bGw9PT1tJiYobT1yKTticmVha31hJiZcbm0mJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLG0pO2c9Zih3LGcsdSk7bnVsbD09PXA/bD13OnAuc2libGluZz13O3A9dzttPXJ9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihtPXEoZSxoW3VdLGspKWc9ZihtLGcsdSksbnVsbD09PXA/bD1tOnAuc2libGluZz1tLHA9bTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7dTxoLmxlbmd0aDt1KyspaWYocj1BKG0sZSx1LGhbdV0saykpYSYmbnVsbCE9PXIuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09ci5rZXk/dTpyLmtleSksZz1mKHIsZyx1KSxudWxsPT09cD9sPXI6cC5zaWJsaW5nPXIscD1yO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gVihlLGcsaCxrKXt2YXIgbD1sYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD90KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3QoXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxwPWcsdT1nPTAscj1udWxsLHc9aC5uZXh0KCk7bnVsbCE9PXAmJiF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpe3AuaW5kZXg+dT8ocj1wLHA9bnVsbCk6cj1wLnNpYmxpbmc7dmFyIHo9eChlLHAsdy52YWx1ZSxrKTtpZihudWxsPT09eil7cHx8KHA9cik7YnJlYWt9YSYmcCYmbnVsbD09PXouYWx0ZXJuYXRlJiZiKGUscCk7Zz1mKHosZyx1KTtudWxsPT09bT9sPXo6bS5zaWJsaW5nPXo7bT16O3A9cn1pZih3LmRvbmUpcmV0dXJuIGMoZSxwKSxsO2lmKG51bGw9PT1wKXtmb3IoOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1xKGUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7cmV0dXJuIGx9Zm9yKHA9ZChlLHApOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1BKHAsZSx1LHcudmFsdWUsayksbnVsbCE9PXcmJihhJiZudWxsIT09dy5hbHRlcm5hdGUmJnAuZGVsZXRlKG51bGw9PT13LmtleT91Olxudy5rZXkpLGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7YSYmcC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWMmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1hYzprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1hYz9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9eWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1hYz8oZD1jZihmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9YmYoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9eWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRiOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9ZmYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWVmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKHhnKGYpKXJldHVybiBDKGEsZCxmLGgpO2lmKGxjKGYpKXJldHVybiBWKGEsZCxmLGgpO2wmJkFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUsdChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIENnPUJnKCEwKSxEZz1CZyghMSksRWc9bnVsbCxGZz1udWxsLEdnPSExO1xuZnVuY3Rpb24gSGcoYSxiKXt2YXIgYz1ZZSg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIElnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gSmcoYSl7aWYoR2cpe3ZhciBiPUZnO2lmKGIpe3ZhciBjPWI7aWYoIUlnKGEsYikpe2I9R2UoYyk7aWYoIWJ8fCFJZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtHZz0hMTtFZz1hO3JldHVybn1IZyhFZyxjKX1FZz1hO0ZnPUhlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsR2c9ITEsRWc9YX19ZnVuY3Rpb24gS2coYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO0VnPWF9ZnVuY3Rpb24gTGcoYSl7aWYoYSE9PUVnKXJldHVybiExO2lmKCFHZylyZXR1cm4gS2coYSksR2c9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFDZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9Rmc7YjspSGcoYSxiKSxiPUdlKGIpO0tnKGEpO0ZnPUVnP0dlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIE1nKCl7Rmc9RWc9bnVsbDtHZz0hMX12YXIgTmc9WGIuUmVhY3RDdXJyZW50T3duZXI7XG5mdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RGcoYixudWxsLGMsZCk6Q2coYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gT2coYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0VmKGIsZSk7SGY9ZTtNPWI7SWY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7dmFyIGc9YyhkLGYpO2c9UmYoYyxkLGcsZik7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFBnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhWmUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsUWcoYSxiLGcsZCxlLGYpO2E9YmYoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpqZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBSZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1hZihnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gUWcoYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZTxmJiZqZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWY/UmcoYSxiLGYpOlNnKGEsYixjLGQsZil9ZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBTZyhhLGIsYyxkLGUpe3ZhciBmPUwoYyk/TGU6Si5jdXJyZW50O2Y9TWUoYixmKTtFZihiLGUpO0hmPWU7TT1iO0lmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO3ZhciBnPWMoZCxmKTtnPVJmKGMsZCxnLGYpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGcsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO1JlKGIpfWVsc2UgZj0hMTtFZihiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdWcoYixjLGQsZSksd2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9cGcuY3VycmVudC5yZWFkQ29udGV4dChsKToobD1MKGMpP0xlOkouY3VycmVudCxsPU1lKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZ2ZyhiLGcsZCxsKTtsZj0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXg7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHVmKGIsQSxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHxsZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihyZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9bGZ8fHRnKGIsYyxoLGQseCxrLGwpKT8ocXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOlEoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9cGcuY3VycmVudC5yZWFkQ29udGV4dChsKToobD1MKGMpP0xlOkouY3VycmVudCxsPU1lKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsXG4ocT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJnZnKGIsZyxkLGwpLGxmPSExLGs9Yi5tZW1vaXplZFN0YXRlLHg9Zy5zdGF0ZT1rLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHVmKGIsQSxkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHxsZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihyZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09bGZ8fHRnKGIsYyxoLGQsayx4LGwpKT8ocXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fFxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1cbmQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFZnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXtUZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmU2UoYixjLCExKSxSZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtOZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1DZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPUNnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlNlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gV2coYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9QZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZQZShhLGIuY29udGV4dCwhMSk7a2coYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gWGcoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPWNmKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1jZihoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1EZyhiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1hZihkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9YWYoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9Q2coYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9Y2YobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9Y2YoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1DZyhiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gUmcoYSxiLGMpe251bGwhPT1hJiYoYi5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeSk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3QoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1hZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1hZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBZZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSYmYS5tZW1vaXplZFByb3BzPT09Yi5wZW5kaW5nUHJvcHMmJiFLLmN1cnJlbnQmJmQ8Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6V2coYik7TWcoKTticmVhaztjYXNlIDU6bWcoYik7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmUmUoYik7YnJlYWs7Y2FzZSA0OmtnKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpDZihiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZD49YylyZXR1cm4gWGcoYSxiLGMpO2I9UmcoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH19cmV0dXJuIFJnKGEsYixjKX1iLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLmVsZW1lbnRUeXBlO251bGwhPT1cbmEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9TWUoYixKLmN1cnJlbnQpO0VmKGIsYyk7SGY9YztNPWI7SWY9bnVsbDt2YXIgZj1kKGEsZSk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYucmVuZGVyJiZ2b2lkIDA9PT1mLiQkdHlwZW9mKXtiLnRhZz0xO1NmKCk7TChkKT8oZT0hMCxSZShiKSk6ZT0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWYuc3RhdGUmJnZvaWQgMCE9PWYuc3RhdGU/Zi5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZyZyhiLGQsZyxhKTtmLnVwZGF0ZXI9c2c7Yi5zdGF0ZU5vZGU9ZjtmLl9yZWFjdEludGVybmFsRmliZXI9Yjt3ZyhiLGQsYSxjKTtiPVZnKG51bGwsYixkLCEwLGUsYyl9ZWxzZSBiLnRhZz0wLGY9UmYoZCxcbmEsZixlKSxSKG51bGwsYixmLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmY9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7ZT1iLnBlbmRpbmdQcm9wczthPW9nKGYpO2IudHlwZT1hO2Y9Yi50YWc9JGUoYSk7ZT1RKGEsZSk7Zz12b2lkIDA7c3dpdGNoKGYpe2Nhc2UgMDpnPVNnKG51bGwsYixhLGUsYyk7YnJlYWs7Y2FzZSAxOmc9VWcobnVsbCxiLGEsZSxjKTticmVhaztjYXNlIDExOmc9T2cobnVsbCxiLGEsZSxjKTticmVhaztjYXNlIDE0Omc9UGcobnVsbCxiLGEsUShhLnR5cGUsZSksZCxjKTticmVhaztkZWZhdWx0OnQoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxmPWIuZWxlbWVudFR5cGU9PT1kP2Y6UShkLGYpLFNnKGEsYixkLGYsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGY9Yi5lbGVtZW50VHlwZT09PVxuZD9mOlEoZCxmKSxVZyhhLGIsZCxmLGMpO2Nhc2UgMzpXZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/dChcIjI4MlwiKTp2b2lkIDA7Zj1iLm1lbW9pemVkU3RhdGU7Zj1udWxsIT09Zj9mLmVsZW1lbnQ6bnVsbDt1ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1mKU1nKCksYj1SZyhhLGIsYyk7ZWxzZXtmPWIuc3RhdGVOb2RlO2lmKGY9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmYuaHlkcmF0ZSlGZz1IZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxFZz1iLGY9R2c9ITA7Zj8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1EZyhiLG51bGwsZCxjKSk6KFIoYSxiLGQsYyksTWcoKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gbWcoYiksbnVsbD09PWEmJkpnKGIpLGQ9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWYuY2hpbGRyZW4sQ2UoZCxcbmYpP2c9bnVsbDpudWxsIT09ZSYmQ2UoZCxlKSYmKGIuZWZmZWN0VGFnfD0xNiksVGcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmYuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmSmcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBYZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBrZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1DZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxmPWIuZWxlbWVudFR5cGU9PT1kP2Y6UShkLGYpLE9nKGEsYixkLGYsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtmPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2U9Zi52YWx1ZTtDZihiLGUpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2U9aGQoaCxlKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxlKToxMDczNzQxODIzKXwwO2lmKDA9PT1lKXtpZihnLmNoaWxkcmVuPT09Zi5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj1SZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZz1iLmNoaWxkLG51bGwhPT1nJiYoZy5yZXR1cm49Yik7bnVsbCE9PWc7KXtoPWcuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtpZihudWxsIT09aCl7ZG97aWYoaC5jb250ZXh0PT09ZCYmMCE9PShoLm9ic2VydmVkQml0cyZlKSl7aWYoMT09PWcudGFnKXt2YXIgaz1vZihjKTtrLnRhZz0yO3FmKGcsayl9Zy5leHBpcmF0aW9uVGltZTxcbmMmJihnLmV4cGlyYXRpb25UaW1lPWMpO2s9Zy5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7Zm9yKHZhciBsPWcucmV0dXJuO251bGwhPT1sOyl7az1sLmFsdGVybmF0ZTtpZihsLmNoaWxkRXhwaXJhdGlvblRpbWU8YylsLmNoaWxkRXhwaXJhdGlvblRpbWU9YyxudWxsIT09ayYmay5jaGlsZEV4cGlyYXRpb25UaW1lPGMmJihrLmNoaWxkRXhwaXJhdGlvblRpbWU9Yyk7ZWxzZSBpZihudWxsIT09ayYmay5jaGlsZEV4cGlyYXRpb25UaW1lPGMpay5jaGlsZEV4cGlyYXRpb25UaW1lPWM7ZWxzZSBicmVhaztsPWwucmV0dXJufX1rPWcuY2hpbGQ7aD1oLm5leHR9d2hpbGUobnVsbCE9PWgpfWVsc2Ugaz0xMD09PWcudGFnP2cudHlwZT09PWIudHlwZT9udWxsOmcuY2hpbGQ6Zy5jaGlsZDtpZihudWxsIT09aylrLnJldHVybj1nO2Vsc2UgZm9yKGs9ZztudWxsIT09azspe2lmKGs9PT1iKXtrPW51bGw7YnJlYWt9Zz1rLnNpYmxpbmc7XG5pZihudWxsIT09Zyl7Zy5yZXR1cm49ay5yZXR1cm47az1nO2JyZWFrfWs9ay5yZXR1cm59Zz1rfX1SKGEsYixmLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGY9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZD1lLmNoaWxkcmVuLEVmKGIsYyksZj1GZihmLGUudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZiksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGY9Yi50eXBlLGU9UShmLGIucGVuZGluZ1Byb3BzKSxlPVEoZi50eXBlLGUpLFBnKGEsYixmLGUsZCxjKTtjYXNlIDE1OnJldHVybiBRZyhhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxmPWIuZWxlbWVudFR5cGU9PT1kP2Y6UShkLGYpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9XG4hMCxSZShiKSk6YT0hMSxFZihiLGMpLHVnKGIsZCxmLGMpLHdnKGIsZCxmLGMpLFZnKG51bGwsYixkLCEwLGEsYyk7ZGVmYXVsdDp0KFwiMTU2XCIpfX1mdW5jdGlvbiBaZyhhKXthLmVmZmVjdFRhZ3w9NH12YXIgJGc9dm9pZCAwLGFoPXZvaWQgMCxiaD12b2lkIDAsY2g9dm9pZCAwOyRnPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTthaD1mdW5jdGlvbigpe307XG5iaD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7amcoZ2cuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpjKGcsZik7ZD16YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9ZGUoZyxmKTtkPWRlKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9ZmUoZyxmKTtkPWZlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9eGUpfXVlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgaz1mW2NdO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYodGEuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBsPWRbY107az1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmwhPT1rJiYobnVsbCE9bHx8bnVsbCE9aykpaWYoXCJzdHlsZVwiPT09YylpZihrKXtmb3IoZyBpbiBrKSFrLmhhc093blByb3BlcnR5KGcpfHxsJiZsLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiZrW2ddIT09bFtnXSYmKGh8fFxuKGg9e30pLGhbZ109bFtnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGw9bD9sLl9faHRtbDp2b2lkIDAsaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1sJiZrIT09bCYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1jP2s9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goYyxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHRhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1sJiZ3ZShlLGMpLGF8fGs9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsbCkpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJlpnKGIpfX07Y2g9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJlpnKGIpfTtcbnZhciBkaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBlaChhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPW5jKGMpKTtudWxsIT09YyYmbWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmbWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gaWgoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7amgoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24ga2goYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigwIT09KGQudGFnJmEpKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PW51bGw7bnVsbCE9PWUmJmUoKX0wIT09KGQudGFnJmIpJiYoZT1kLmNyZWF0ZSxlPWUoKSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSYmKGU9bnVsbCksZC5kZXN0cm95PWUpO2Q9ZC5uZXh0fXdoaWxlKGQhPT1jKX19XG5mdW5jdGlvbiBsaChhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9cmUoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1jLnRhZyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZSl7ZD1jLmNoaWxkLnNpYmxpbmc7ZC5yZXR1cm49YztjPWQ7Y29udGludWV9ZWxzZSBpZihudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxcbmMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIG1oKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVZSYmVWUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5sYXN0RWZmZWN0LG51bGwhPT1iKSl7dmFyIGM9Yj1iLm5leHQ7ZG97dmFyIGQ9Yy5kZXN0cm95O2lmKG51bGwhPT1kKXt2YXIgZT1hO3RyeXtkKCl9Y2F0Y2goZil7amgoZSxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWIpfWJyZWFrO2Nhc2UgMTppaChhKTtiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7amgoYSxmKX1icmVhaztjYXNlIDU6aWgoYSk7YnJlYWs7Y2FzZSA0Om5oKGEpfX1cbmZ1bmN0aW9uIG9oKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gcGgoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYob2goYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXQoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0KFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYob2UoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fG9oKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhnPWIsaD1lLnN0YXRlTm9kZSw4PT09Zy5ub2RlVHlwZT8oZj1nLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoaCxnKSk6KGY9ZyxmLmFwcGVuZENoaWxkKGgpKSxnPWcuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09ZyYmdm9pZCAwIT09Z3x8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz14ZSkpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIG5oKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3QoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZihtaChnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWc/KGQ9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxlPSEwKTptaChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiBxaChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmtoKDQsOCxiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZGZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9YmcoKSkpO251bGwhPT1hJiZsaChhLGQpO2M9Yi51cGRhdGVRdWV1ZTtcbmlmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBkaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPXJoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fXZhciBzaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiB0aChhLGIsYyl7Yz1vZihjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXt1aChkKTtlaChhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIHZoKGEsYixjKXtjPW9mKGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PXdoP3doPW5ldyBTZXQoW3RoaXNdKTp3aC5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO2VoKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24geGgoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZOZShhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBsZyhhKSxPZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/dChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhO2Nhc2UgNTpyZXR1cm4gbmcoYSksbnVsbDtjYXNlIDEzOnJldHVybiBiPWEuZWZmZWN0VGFnLGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgNDpyZXR1cm4gbGcoYSksbnVsbDtjYXNlIDEwOnJldHVybiBEZihhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHloPXtyZWFkQ29udGV4dDpGZix1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe009UWYoKTtPPVZmKCk7Yj12b2lkIDAhPT1iJiZudWxsIT09Yj9iOlthXTt2YXIgYz1PLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJkdmKGIsY1sxXSkpcmV0dXJuIGNbMF07Ty5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7UWYoKTtyZXR1cm4gRmYoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7YWcoNTE2LDE5MixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6W2EsYl07JGYoZnVuY3Rpb24oKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSl7dmFyIGM9YigpO2EoYyk7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGEobnVsbCl9fWlmKG51bGwhPT1hJiZ2b2lkIDAhPT1hKXJldHVybiBjPWIoKSxhLmN1cnJlbnQ9YyxmdW5jdGlvbigpe2EuY3VycmVudD1cbm51bGx9fSxjKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe1FmKCl9LHVzZUxheW91dEVmZmVjdDokZix1c2VNZW1vOmZ1bmN0aW9uKGEsYil7TT1RZigpO089VmYoKTtiPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6W2FdO3ZhciBjPU8ubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmR2YoYixjWzFdKSlyZXR1cm4gY1swXTthPWEoKTtPLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6WGYsdXNlUmVmOmZ1bmN0aW9uKGEpe009UWYoKTtPPVZmKCk7bnVsbD09PU8ubWVtb2l6ZWRTdGF0ZT8oYT17Y3VycmVudDphfSxPLm1lbW9pemVkU3RhdGU9YSk6YT1PLm1lbW9pemVkU3RhdGU7cmV0dXJuIGF9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBYZihXZixhKX19LHpoPVhiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsQWg9WGIuUmVhY3RDdXJyZW50T3duZXIsQmg9MTA3Mzc0MTgyMixDaD0wLERoPSExLFM9bnVsbCxFaD1udWxsLFQ9MCxGaD0tMSxHaD0hMSxcblU9bnVsbCxIaD0hMSxJaD1udWxsLEpoPW51bGwsS2g9bnVsbCx3aD1udWxsO2Z1bmN0aW9uIExoKCl7aWYobnVsbCE9PVMpZm9yKHZhciBhPVMucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJk5lKGIpO2JyZWFrO2Nhc2UgMzpsZyhiKTtPZShiKTticmVhaztjYXNlIDU6bmcoYik7YnJlYWs7Y2FzZSA0OmxnKGIpO2JyZWFrO2Nhc2UgMTA6RGYoYil9YT1hLnJldHVybn1FaD1udWxsO1Q9MDtGaD0tMTtHaD0hMTtTPW51bGx9XG5mdW5jdGlvbiBNaChhLGIpe0toPUpoPUloPW51bGw7dmFyIGM9VztXPSEwO2Rve2lmKGIuZWZmZWN0VGFnJjUxMil7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e3ZhciBmPWI7a2goMTI4LDAsZik7a2goMCw2NCxmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZqaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZOaChhLGMpfWZ1bmN0aW9uIGRnKCl7bnVsbCE9PUtoJiYoYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soSmgpLEtoKCkpfVxuZnVuY3Rpb24gT2goYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1M9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1UO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmTmUoYik7YnJlYWs7Y2FzZSAzOmxnKGIpO09lKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKUxnKGIpLGIuZWZmZWN0VGFnJj0tMzthaChiKTticmVhaztjYXNlIDU6bmcoYik7dmFyIGg9amcoaWcuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKWJoKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgaz1qZyhnZy5jdXJyZW50KTtpZihMZyhiKSl7Zz1iO2U9Zy5zdGF0ZU5vZGU7dmFyIGw9Zy50eXBlLG09Zy5tZW1vaXplZFByb3BzLHE9aDtlW0hhXT1nO2VbSWFdPW07Zj12b2lkIDA7aD1sO3N3aXRjaChoKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkcoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGw9MDtsPGNiLmxlbmd0aDtsKyspRyhjYltsXSxlKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZSk7RyhcImxvYWRcIixlKTticmVhaztjYXNlIFwiZm9ybVwiOkcoXCJyZXNldFwiLGUpO0coXCJzdWJtaXRcIixlKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixlKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYyhlLG0pO0coXCJpbnZhbGlkXCIsZSk7d2UocSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGUpO3dlKHEsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpnZShlLG0pLEcoXCJpbnZhbGlkXCIsZSksd2UocSxcIm9uQ2hhbmdlXCIpfXVlKGgsbSk7bD1udWxsO2ZvcihmIGluIG0pbS5oYXNPd25Qcm9wZXJ0eShmKSYmKGs9bVtmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz9lLnRleHRDb250ZW50IT09ayYmKGw9W1wiY2hpbGRyZW5cIixrXSk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZlLnRleHRDb250ZW50IT09XCJcIitrJiYobD1bXCJjaGlsZHJlblwiLFwiXCIra10pOnRhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1rJiZ3ZShxLGYpKTtzd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6VmIoZSk7RWMoZSxtLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihlKTtpZShlLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5vbkNsaWNrJiZcbihlLm9uY2xpY2s9eGUpfWY9bDtnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZaZyhiKX1lbHNle209YjtlPWY7cT1nO2w9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7az09PWplLmh0bWwmJihrPWtlKGUpKTtrPT09amUuaHRtbD9cInNjcmlwdFwiPT09ZT8oZT1sLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixsPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBxLmlzP2w9bC5jcmVhdGVFbGVtZW50KGUse2lzOnEuaXN9KToobD1sLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJnEubXVsdGlwbGUmJihsLm11bHRpcGxlPSEwKSk6bD1sLmNyZWF0ZUVsZW1lbnROUyhrLGUpO2U9bDtlW0hhXT1tO2VbSWFdPWc7JGcoZSxiLCExLCExKTtxPWU7bD1mO209Zzt2YXIgeD1oLEE9dmUobCxtKTtzd2l0Y2gobCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpHKFwibG9hZFwiLFxucSk7aD1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxjYi5sZW5ndGg7aCsrKUcoY2JbaF0scSk7aD1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixxKTtoPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIscSk7RyhcImxvYWRcIixxKTtoPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpHKFwicmVzZXRcIixxKTtHKFwic3VibWl0XCIscSk7aD1tO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLHEpO2g9bTticmVhaztjYXNlIFwiaW5wdXRcIjpBYyhxLG0pO2g9emMocSxtKTtHKFwiaW52YWxpZFwiLHEpO3dlKHgsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1kZShxLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpxLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07aD1uKHt9LG0se3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIscSk7d2UoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmdlKHEsXG5tKTtoPWZlKHEsbSk7RyhcImludmFsaWRcIixxKTt3ZSh4LFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPW19dWUobCxoKTtrPXZvaWQgMDt2YXIgQz1sLFY9cSx3PWg7Zm9yKGsgaW4gdylpZih3Lmhhc093blByb3BlcnR5KGspKXt2YXIgcD13W2tdO1wic3R5bGVcIj09PWs/c2UoVixwKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1rPyhwPXA/cC5fX2h0bWw6dm9pZCAwLG51bGwhPXAmJm5lKFYscCkpOlwiY2hpbGRyZW5cIj09PWs/XCJzdHJpbmdcIj09PXR5cGVvZiBwPyhcInRleHRhcmVhXCIhPT1DfHxcIlwiIT09cCkmJm9lKFYscCk6XCJudW1iZXJcIj09PXR5cGVvZiBwJiZvZShWLFwiXCIrcCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWsmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1rJiZcImF1dG9Gb2N1c1wiIT09ayYmKHRhLmhhc093blByb3BlcnR5KGspP251bGwhPXAmJndlKHgsayk6bnVsbCE9cCYmeGMoVixrLHAsQSkpfXN3aXRjaChsKXtjYXNlIFwiaW5wdXRcIjpWYihxKTtcbkVjKHEsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIocSk7aWUocSxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIreWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXE7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cT1tLnZhbHVlO251bGwhPXE/ZWUoaCwhIW0ubXVsdGlwbGUscSwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmVlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihxLm9uY2xpY2s9eGUpfShnPUJlKGYsZykpJiZaZyhiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT9jaChlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XG50eXBlb2YgZyYmKG51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTY2XCIpOnZvaWQgMCksZT1qZyhpZy5jdXJyZW50KSxqZyhnZy5jdXJyZW50KSxMZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltIYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZaZyhiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tIYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7Uz1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnIT09Znx8MD09PShiLmVmZmVjdFRhZyYxKSYmZyliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OmxnKGIpO2FoKGIpO2JyZWFrO2Nhc2UgMTA6RGYoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpMKGIudHlwZSkmJk5lKGIpO2JyZWFrO2RlZmF1bHQ6dChcIjE1NlwiKX1TPW51bGx9Yj1hO2lmKDE9PT1UfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09UylyZXR1cm4gUztudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1cbmMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9eGgoYSxUKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gUGgoYSl7dmFyIGI9WWcoYS5hbHRlcm5hdGUsYSxUKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPU9oKGEpKTtBaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBRaChhLGIpe0RoP3QoXCIyNDNcIik6dm9pZCAwO2RnKCk7RGg9ITA7emguY3VycmVudD15aDt2YXIgYz1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGMhPT1UfHxhIT09RWh8fG51bGw9PT1TKUxoKCksRWg9YSxUPWMsUz1hZihFaC5jdXJyZW50LG51bGwsVCksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1TJiYhUmgoKTspUz1QaChTKTtlbHNlIGZvcig7bnVsbCE9PVM7KVM9UGgoUyl9Y2F0Y2goQyl7aWYoQmY9QWY9emY9bnVsbCxTZigpLG51bGw9PT1TKWQ9ITAsdWgoQyk7ZWxzZXtudWxsPT09Uz90KFwiMjcxXCIpOnZvaWQgMDt2YXIgZT1TLGY9ZS5yZXR1cm47aWYobnVsbD09PWYpZD0hMCx1aChDKTtlbHNle2E6e3ZhciBnPWEsaD1mLGs9ZSxsPUM7Zj1UO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWwmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBsJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbC50aGVuKXt2YXIgbT1sO2w9aDt2YXIgcT0tMSx4PS0xO2Rve2lmKDEzPT09bC50YWcpe3ZhciBBPWwuYWx0ZXJuYXRlO2lmKG51bGwhPT1BJiYoQT1BLm1lbW9pemVkU3RhdGUsbnVsbCE9PUEpKXt4PTEwKigxMDczNzQxODIyLUEudGltZWRPdXRBdCk7YnJlYWt9QT1sLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIEEpaWYoMD49QSlxPTA7ZWxzZSBpZigtMT09PXF8fEE8cSlxPUF9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1oO2Rve2lmKEE9MTM9PT1sLnRhZylBPXZvaWQgMD09PWwubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bC5tZW1vaXplZFN0YXRlO2lmKEEpe2g9bC51cGRhdGVRdWV1ZTtudWxsPT09aD8oaD1uZXcgU2V0LGguYWRkKG0pLGwudXBkYXRlUXVldWU9aCk6aC5hZGQobSk7aWYoMD09PShsLm1vZGUmMSkpe2wuZWZmZWN0VGFnfD02NDtrLmVmZmVjdFRhZyY9XG4tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGY9b2YoMTA3Mzc0MTgyMyksZi50YWc9MixxZihrLGYpKSk7ay5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9az1nLnBpbmdDYWNoZTtudWxsPT09az8oaz1nLnBpbmdDYWNoZT1uZXcgc2gsaD1uZXcgU2V0LGsuc2V0KG0saCkpOihoPWsuZ2V0KG0pLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsay5zZXQobSxoKSkpO2guaGFzKGYpfHwoaC5hZGQoZiksaz1TaC5iaW5kKG51bGwsZyxtLGYpLG0udGhlbihrLGspKTstMT09PXE/Zz0xMDczNzQxODIzOigtMT09PXgmJih4PTEwKigxMDczNzQxODIyLWtmKGcsZikpLTVFMyksZz14K3EpOzA8PWcmJkZoPGcmJihGaD1nKTtsLmVmZmVjdFRhZ3w9MjA0ODtsLmV4cGlyYXRpb25UaW1lPWY7YnJlYWsgYX1sPWwucmV0dXJufXdoaWxlKG51bGwhPT1sKTtsPUVycm9yKChtYyhrLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrXG5uYyhrKSl9R2g9ITA7bD14ZihsLGspO2c9aDtkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnLmVmZmVjdFRhZ3w9MjA0ODtnLmV4cGlyYXRpb25UaW1lPWY7Zj10aChnLGwsZik7cmYoZyxmKTticmVhayBhO2Nhc2UgMTppZihtPWwscT1nLnR5cGUseD1nLnN0YXRlTm9kZSwwPT09KGcuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PXdofHwhd2guaGFzKHgpKSkpe2cuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPXZoKGcsbSxmKTtyZihnLGYpO2JyZWFrIGF9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpfVM9T2goZSk7Y29udGludWV9fX1icmVha313aGlsZSgxKTtEaD0hMTtCZj1BZj16Zj16aC5jdXJyZW50PW51bGw7U2YoKTtpZihkKUVoPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtlbHNlIGlmKG51bGwhPT1cblMpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2Q9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09ZD90KFwiMjgxXCIpOnZvaWQgMDtFaD1udWxsO2lmKEdoKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8Y3x8MCE9PWYmJmY8Y3x8MCE9PWcmJmc8Yyl7amYoYSxjKTtUaChhLGQsYyxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7Yz1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWM7Yj1hLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7VGgoYSxkLGMsYiwtMSk7cmV0dXJufX1iJiYtMSE9PUZoPyhqZihhLGMpLGI9MTAqKDEwNzM3NDE4MjIta2YoYSxjKSksYjxGaCYmKEZoPWIpLGI9MTAqKDEwNzM3NDE4MjItYmcoKSksYj1GaC1iLFRoKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsMD5iPzA6YikpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1cbmMsYS5maW5pc2hlZFdvcms9ZCl9fWZ1bmN0aW9uIGpoKGEsYil7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDE6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PXdofHwhd2guaGFzKGQpKSl7YT14ZihiLGEpO2E9dmgoYyxhLDEwNzM3NDE4MjMpO3FmKGMsYSk7ZWcoYywxMDczNzQxODIzKTtyZXR1cm59YnJlYWs7Y2FzZSAzOmE9eGYoYixhKTthPXRoKGMsYSwxMDczNzQxODIzKTtxZihjLGEpO2VnKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz14ZihiLGEpLGM9dGgoYSxjLDEwNzM3NDE4MjMpLHFmKGEsYyksZWcoYSwxMDczNzQxODIzKSl9XG5mdW5jdGlvbiBjZyhhLGIpezAhPT1DaD9hPUNoOkRoP2E9SGg/MTA3Mzc0MTgyMzpUOmIubW9kZSYxPyhhPVVoPzEwNzM3NDE4MjItMTAqKCgoMTA3Mzc0MTgyMi1hKzE1KS8xMHwwKSsxKToxMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItYSs1MDApLzI1fDApKzEpLG51bGwhPT1FaCYmYT09PVQmJi0tYSk6YT0xMDczNzQxODIzO1VoJiYoMD09PVZofHxhPFZoKSYmKFZoPWEpO3JldHVybiBhfVxuZnVuY3Rpb24gU2goYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtpZihudWxsIT09RWgmJlQ9PT1jKUVoPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7aGYoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJk5oKGEsYyl9fWZ1bmN0aW9uIHJoKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9YmcoKTtiPWNnKGIsYSk7YT1XaChhLGIpO251bGwhPT1hJiYoZ2YoYSxiKSxiPWEuZXhwaXJhdGlvblRpbWUsMCE9PWImJk5oKGEsYikpfVxuZnVuY3Rpb24gV2goYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1yZXR1cm4gZX1cbmZ1bmN0aW9uIGVnKGEsYil7YT1XaChhLGIpO251bGwhPT1hJiYoIURoJiYwIT09VCYmYj5UJiZMaCgpLGdmKGEsYiksRGgmJiFIaCYmRWg9PT1hfHxOaChhLGEuZXhwaXJhdGlvblRpbWUpLFhoPlloJiYoWGg9MCx0KFwiMTg1XCIpKSl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXt2YXIgZj1DaDtDaD0xMDczNzQxODIzO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e0NoPWZ9fXZhciAkaD1udWxsLFg9bnVsbCxhaT0wLGJpPXZvaWQgMCxXPSExLGNpPW51bGwsWT0wLFZoPTAsZGk9ITEsZWk9bnVsbCxaPSExLGZpPSExLFVoPSExLGdpPW51bGwsaGk9YmEudW5zdGFibGVfbm93KCksaWk9MTA3Mzc0MTgyMi0oaGkvMTB8MCksamk9aWksWWg9NTAsWGg9MCxraT1udWxsO2Z1bmN0aW9uIGxpKCl7aWk9MTA3Mzc0MTgyMi0oKGJhLnVuc3RhYmxlX25vdygpLWhpKS8xMHwwKX1cbmZ1bmN0aW9uIG1pKGEsYil7aWYoMCE9PWFpKXtpZihiPGFpKXJldHVybjtudWxsIT09YmkmJmJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKGJpKX1haT1iO2E9YmEudW5zdGFibGVfbm93KCktaGk7Ymk9YmEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhuaSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gVGgoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fFJoKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPURlKG9pLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIG9pKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7bGkoKTtqaT1paTtwaShhLGMpfWZ1bmN0aW9uIGJnKCl7aWYoVylyZXR1cm4gamk7cWkoKTtpZigwPT09WXx8MT09PVkpbGkoKSxqaT1paTtyZXR1cm4gaml9XG5mdW5jdGlvbiBOaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVg/KCRoPVg9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihYPVgubmV4dFNjaGVkdWxlZFJvb3Q9YSxYLm5leHRTY2hlZHVsZWRSb290PSRoKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtXfHwoWj9maSYmKGNpPWEsWT0xMDczNzQxODIzLHJpKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP3NpKDEwNzM3NDE4MjMsITEpOm1pKGEsYikpfVxuZnVuY3Rpb24gcWkoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09WClmb3IodmFyIGM9WCxkPSRoO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1YP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXskaD1YPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT0kaCkkaD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsWC5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1YKXtYPWM7WC5uZXh0U2NoZWR1bGVkUm9vdD0kaDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1YKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Y2k9YjtZPWF9dmFyIHRpPSExO2Z1bmN0aW9uIFJoKCl7cmV0dXJuIHRpPyEwOmJhLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/dGk9ITA6ITF9ZnVuY3Rpb24gbmkoKXt0cnl7aWYoIVJoKCkmJm51bGwhPT0kaCl7bGkoKTt2YXIgYT0kaDtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZpaTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249aWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09JGgpfXNpKDAsITApfWZpbmFsbHl7dGk9ITF9fVxuZnVuY3Rpb24gc2koYSxiKXtxaSgpO2lmKGIpZm9yKGxpKCksamk9aWk7bnVsbCE9PWNpJiYwIT09WSYmYTw9WSYmISh0aSYmaWk+WSk7KXJpKGNpLFksaWk+WSkscWkoKSxsaSgpLGppPWlpO2Vsc2UgZm9yKDtudWxsIT09Y2kmJjAhPT1ZJiZhPD1ZOylyaShjaSxZLCExKSxxaSgpO2ImJihhaT0wLGJpPW51bGwpOzAhPT1ZJiZtaShjaSxZKTtYaD0wO2tpPW51bGw7aWYobnVsbCE9PWdpKWZvcihhPWdpLGdpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7ZGl8fChkaT0hMCxlaT1kKX19aWYoZGkpdGhyb3cgYT1laSxlaT1udWxsLGRpPSExLGE7fWZ1bmN0aW9uIHBpKGEsYil7Vz90KFwiMjUzXCIpOnZvaWQgMDtjaT1hO1k9YjtyaShhLGIsITEpO3NpKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gcmkoYSxiLGMpe1c/dChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD91aShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxRaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihSaCgpP2EuZmluaXNoZWRXb3JrPWQ6dWkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP3VpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRWUoZCkpLFFoKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmdWkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gdWkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09Z2k/Z2k9W2RdOmdpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09a2k/WGgrKzooa2k9YSxYaD0wKTtIaD1EaD0hMDthLmN1cnJlbnQ9PT1iP3QoXCIxNzdcIik6dm9pZCAwO2M9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/dChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDtkPWIuZXhwaXJhdGlvblRpbWU7dmFyIGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2Q9ZT5kP2U6ZDthLmRpZEVycm9yPSExOzA9PT1kPyhhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9XG4wKTooZDxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCksZT1hLmxhdGVzdFBlbmRpbmdUaW1lLDAhPT1lJiYoZT5kP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmQmJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpLGU9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsMD09PWU/Z2YoYSxkKTpkPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxnZihhLGQpKTpkPmUmJmdmKGEsZCkpO2hmKDAsYSk7QWguY3VycmVudD1udWxsOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7eWU9SGQ7ZT1UZCgpO2lmKFVkKGUpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpblxuZSl2YXIgZj17c3RhcnQ6ZS5zZWxlY3Rpb25TdGFydCxlbmQ6ZS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Zj0oZj1lLm93bmVyRG9jdW1lbnQpJiZmLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGc9Zi5nZXRTZWxlY3Rpb24mJmYuZ2V0U2VsZWN0aW9uKCk7aWYoZyYmMCE9PWcucmFuZ2VDb3VudCl7Zj1nLmFuY2hvck5vZGU7dmFyIGg9Zy5hbmNob3JPZmZzZXQsaz1nLmZvY3VzTm9kZTtnPWcuZm9jdXNPZmZzZXQ7dHJ5e2Yubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaChwYil7Zj1udWxsO2JyZWFrIGF9dmFyIGw9MCxtPS0xLHE9LTEseD0wLEE9MCxDPWUsVj1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHc7Oyl7QyE9PWZ8fDAhPT1oJiYzIT09Qy5ub2RlVHlwZXx8KG09bCtoKTtDIT09a3x8MCE9PWcmJjMhPT1DLm5vZGVUeXBlfHwocT1sK2cpOzM9PT1DLm5vZGVUeXBlJiYobCs9Qy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHc9Qy5maXJzdENoaWxkKSlicmVhaztWPUM7Qz13fWZvcig7Oyl7aWYoQz09PVxuZSlicmVhayBiO1Y9PT1mJiYrK3g9PT1oJiYobT1sKTtWPT09ayYmKytBPT09ZyYmKHE9bCk7aWYobnVsbCE9PSh3PUMubmV4dFNpYmxpbmcpKWJyZWFrO0M9VjtWPUMucGFyZW50Tm9kZX1DPXd9Zj0tMT09PW18fC0xPT09cT9udWxsOntzdGFydDptLGVuZDpxfX1lbHNlIGY9bnVsbH1mPWZ8fHtzdGFydDowLGVuZDowfX1lbHNlIGY9bnVsbDt6ZT17Zm9jdXNlZEVsZW06ZSxzZWxlY3Rpb25SYW5nZTpmfTtIZD0hMTtmb3IoVT1kO251bGwhPT1VOyl7ZT0hMTtmPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09VTspe2lmKFUuZWZmZWN0VGFnJjI1NilhOnt2YXIgcD1VLmFsdGVybmF0ZTtoPVU7c3dpdGNoKGgudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmtoKDIsMCxoKTticmVhayBhO2Nhc2UgMTppZihoLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1wKXt2YXIgdT1wLm1lbW9pemVkUHJvcHMsej1wLm1lbW9pemVkU3RhdGUsemc9aC5zdGF0ZU5vZGUseWk9emcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoaC5lbGVtZW50VHlwZT09PVxuaC50eXBlP3U6UShoLnR5cGUsdSkseik7emcuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9eWl9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19VT1VLm5leHRFZmZlY3R9fWNhdGNoKHBiKXtlPSEwLGY9cGJ9ZSYmKG51bGw9PT1VP3QoXCIxNzhcIik6dm9pZCAwLGpoKFUsZiksbnVsbCE9PVUmJihVPVUubmV4dEVmZmVjdCkpfWZvcihVPWQ7bnVsbCE9PVU7KXtwPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7dmFyIHk9VS5lZmZlY3RUYWc7eSYxNiYmb2UoVS5zdGF0ZU5vZGUsXCJcIik7aWYoeSYxMjgpe3ZhciBEPVUuYWx0ZXJuYXRlO2lmKG51bGwhPT1EKXt2YXIgcj1ELnJlZjtudWxsIT09ciYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiByP3IobnVsbCk6ci5jdXJyZW50PW51bGwpfX1zd2l0Y2goeSYxNCl7Y2FzZSAyOnBoKFUpO1UuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6cGgoVSk7XG5VLmVmZmVjdFRhZyY9LTM7cWgoVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA0OnFoKFUuYWx0ZXJuYXRlLFUpO2JyZWFrO2Nhc2UgODp6PVU7bmgoeik7ei5yZXR1cm49bnVsbDt6LmNoaWxkPW51bGw7ei5tZW1vaXplZFN0YXRlPW51bGw7ei51cGRhdGVRdWV1ZT1udWxsO3ZhciBQPXouYWx0ZXJuYXRlO251bGwhPT1QJiYoUC5yZXR1cm49bnVsbCxQLmNoaWxkPW51bGwsUC5tZW1vaXplZFN0YXRlPW51bGwsUC51cGRhdGVRdWV1ZT1udWxsKX1VPVUubmV4dEVmZmVjdH19Y2F0Y2gocGIpe3A9ITAsdT1wYn1wJiYobnVsbD09PVU/dChcIjE3OFwiKTp2b2lkIDAsamgoVSx1KSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9cj16ZTtEPVRkKCk7eT1yLmZvY3VzZWRFbGVtO3A9ci5zZWxlY3Rpb25SYW5nZTtpZihEIT09eSYmeSYmeS5vd25lckRvY3VtZW50JiZTZCh5Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHkpKXtudWxsIT09cCYmVWQoeSkmJihEPXAuc3RhcnQscj1wLmVuZCxcbnZvaWQgMD09PXImJihyPUQpLFwic2VsZWN0aW9uU3RhcnRcImluIHk/KHkuc2VsZWN0aW9uU3RhcnQ9RCx5LnNlbGVjdGlvbkVuZD1NYXRoLm1pbihyLHkudmFsdWUubGVuZ3RoKSk6KHI9KEQ9eS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkQuZGVmYXVsdFZpZXd8fHdpbmRvdyxyLmdldFNlbGVjdGlvbiYmKHI9ci5nZXRTZWxlY3Rpb24oKSx1PXkudGV4dENvbnRlbnQubGVuZ3RoLFA9TWF0aC5taW4ocC5zdGFydCx1KSxwPXZvaWQgMD09PXAuZW5kP1A6TWF0aC5taW4ocC5lbmQsdSksIXIuZXh0ZW5kJiZQPnAmJih1PXAscD1QLFA9dSksdT1SZCh5LFApLHo9UmQoeSxwKSx1JiZ6JiYoMSE9PXIucmFuZ2VDb3VudHx8ci5hbmNob3JOb2RlIT09dS5ub2RlfHxyLmFuY2hvck9mZnNldCE9PXUub2Zmc2V0fHxyLmZvY3VzTm9kZSE9PXoubm9kZXx8ci5mb2N1c09mZnNldCE9PXoub2Zmc2V0KSYmKEQ9RC5jcmVhdGVSYW5nZSgpLEQuc2V0U3RhcnQodS5ub2RlLHUub2Zmc2V0KSxyLnJlbW92ZUFsbFJhbmdlcygpLFxuUD5wPyhyLmFkZFJhbmdlKEQpLHIuZXh0ZW5kKHoubm9kZSx6Lm9mZnNldCkpOihELnNldEVuZCh6Lm5vZGUsei5vZmZzZXQpLHIuYWRkUmFuZ2UoRCkpKSkpKTtEPVtdO2ZvcihyPXk7cj1yLnBhcmVudE5vZGU7KTE9PT1yLm5vZGVUeXBlJiZELnB1c2goe2VsZW1lbnQ6cixsZWZ0OnIuc2Nyb2xsTGVmdCx0b3A6ci5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgeS5mb2N1cyYmeS5mb2N1cygpO2Zvcih5PTA7eTxELmxlbmd0aDt5Kyspcj1EW3ldLHIuZWxlbWVudC5zY3JvbGxMZWZ0PXIubGVmdCxyLmVsZW1lbnQuc2Nyb2xsVG9wPXIudG9wfXplPW51bGw7SGQ9ISF5ZTt5ZT1udWxsO2EuY3VycmVudD1iO2ZvcihVPWQ7bnVsbCE9PVU7KXt5PSExO0Q9dm9pZCAwO3RyeXtmb3Iocj1hLFA9YztudWxsIT09VTspe3ZhciBwYT1VLmVmZmVjdFRhZztpZihwYSYzNil7dmFyIFRiPVUuYWx0ZXJuYXRlO3A9VTt1PVA7c3dpdGNoKHAudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmtoKDE2LFxuMzIscCk7YnJlYWs7Y2FzZSAxOnZhciBaYz1wLnN0YXRlTm9kZTtpZihwLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1UYilaYy5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIE1pPXAuZWxlbWVudFR5cGU9PT1wLnR5cGU/VGIubWVtb2l6ZWRQcm9wczpRKHAudHlwZSxUYi5tZW1vaXplZFByb3BzKTtaYy5jb21wb25lbnREaWRVcGRhdGUoTWksVGIubWVtb2l6ZWRTdGF0ZSxaYy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGZoPXAudXBkYXRlUXVldWU7bnVsbCE9PWZoJiZ2ZihwLGZoLFpjLHUpO2JyZWFrO2Nhc2UgMzp2YXIgZ2g9cC51cGRhdGVRdWV1ZTtpZihudWxsIT09Z2gpe3o9bnVsbDtpZihudWxsIT09cC5jaGlsZClzd2l0Y2gocC5jaGlsZC50YWcpe2Nhc2UgNTp6PXAuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTp6PXAuY2hpbGQuc3RhdGVOb2RlfXZmKHAsZ2gseix1KX1icmVhaztjYXNlIDU6dmFyIE5pPXAuc3RhdGVOb2RlO251bGw9PT1cblRiJiZwLmVmZmVjdFRhZyY0JiZCZShwLnR5cGUscC5tZW1vaXplZFByb3BzKSYmTmkuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpicmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dChcIjE2M1wiKX19aWYocGEmMTI4KXt2YXIgJGM9VS5yZWY7aWYobnVsbCE9PSRjKXt2YXIgaGg9VS5zdGF0ZU5vZGU7c3dpdGNoKFUudGFnKXtjYXNlIDU6dmFyIEFlPWhoO2JyZWFrO2RlZmF1bHQ6QWU9aGh9XCJmdW5jdGlvblwiPT09dHlwZW9mICRjPyRjKEFlKTokYy5jdXJyZW50PUFlfX1wYSY1MTImJihJaD1yKTtVPVUubmV4dEVmZmVjdH19Y2F0Y2gocGIpe3k9ITAsRD1wYn15JiYobnVsbD09PVU/dChcIjE3OFwiKTp2b2lkIDAsamgoVSxEKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9bnVsbCE9PWQmJm51bGwhPT1JaCYmKHBhPU1oLmJpbmQobnVsbCxhLGQpLEpoPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2socGEpLEtoPVxucGEpO0RoPUhoPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBUZSYmVGUoYi5zdGF0ZU5vZGUpO3BhPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj1iPnBhP2I6cGE7MD09PWImJih3aD1udWxsKTthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1mdW5jdGlvbiB1aChhKXtudWxsPT09Y2k/dChcIjI0NlwiKTp2b2lkIDA7Y2kuZXhwaXJhdGlvblRpbWU9MDtkaXx8KGRpPSEwLGVpPWEpfWZ1bmN0aW9uIHZpKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxXfHxzaSgxMDczNzQxODIzLCExKX19ZnVuY3Rpb24gd2koYSxiKXtpZihaJiYhZmkpe2ZpPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e2ZpPSExfX1yZXR1cm4gYShiKX1cbmZ1bmN0aW9uIHhpKGEsYixjKXtpZihVaClyZXR1cm4gYShiLGMpO1p8fFd8fDA9PT1WaHx8KHNpKFZoLCExKSxWaD0wKTt2YXIgZD1VaCxlPVo7Wj1VaD0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e1VoPWQsKFo9ZSl8fFd8fHNpKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWtkKGMpJiYxPT09Yy50YWc/dm9pZCAwOnQoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3QoXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoTChoKSl7Yz1RZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1LZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1vZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5kZygpO3FmKGYsZSk7ZWcoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBBaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1iZygpO2U9Y2coZixlKTtyZXR1cm4gemkoYSxiLGMsZSxkKX1mdW5jdGlvbiBCaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIENpKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGIsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5EYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNjKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1NYShkKTtlP3ZvaWQgMDp0KFwiOTBcIik7V2IoZCk7Q2MoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZlZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gRGkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWJnKCkrNTAwKS8yNXwwKSsxKTtiPj1CaCYmKGI9QmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Qmg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfURpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOnQoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBFaTt6aShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5EaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5EaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6dChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD90KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO3BpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O0RpLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBFaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfUVpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5FaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIEZpKGEsYixjKXtiPVllKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cbkZpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgRWk7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO0FpKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07RmkucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IEVpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtBaShudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O0ZpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBFaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7QWkoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbkZpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBEaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIEdpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1KYj12aTtLYj14aTtMYj1mdW5jdGlvbigpe1d8fDA9PT1WaHx8KHNpKFZoLCExKSxWaD0wKX07XG5mdW5jdGlvbiBIaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IEZpKGEsITEsYil9XG5mdW5jdGlvbiBJaShhLGIsYyxkLGUpe0dpKGMpP3ZvaWQgMDp0KFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9QmkoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1IaShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1CaShmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19d2koZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIEJpKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBKaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO0dpKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiBDaShhLGIsbnVsbCxjKX1cbnZhciBMaT17Y3JlYXRlUG9ydGFsOkppLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dChcIjE4OFwiKTp0KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW5kKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIElpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBJaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP3QoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIElpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe0dpKGEpP1xudm9pZCAwOnQoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyh3aShmdW5jdGlvbigpe0lpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIEppLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczp2aSx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6eGksZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7Vz90KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBaaChhLGIpfWZpbmFsbHl7Wj1jLHNpKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpLaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9WjtaPSEwO3RyeXtaaChhKX1maW5hbGx5eyhaPWIpfHxXfHxzaSgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0thLFxuTGEsTWEsRGEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHJhLFNhLGZ1bmN0aW9uKGEpe0FhKGEsUmEpfSxIYixJYixKZCxGYV19fTtmdW5jdGlvbiBLaShhLGIpe0dpKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJjcmVhdGVSb290XCIpO3JldHVybiBuZXcgRmkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9TGkuY3JlYXRlUm9vdD1LaTtMaS51bnN0YWJsZV9jcmVhdGVSb290PXZvaWQgMDtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBXZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpYYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SmEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjAtYWxwaGEuMVwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBPaT17ZGVmYXVsdDpMaX0sUGk9T2kmJkxpfHxPaTttb2R1bGUuZXhwb3J0cz1QaS5kZWZhdWx0fHxQaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTMuMC1hbHBoYS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGM9bnVsbCxmPSExLGg9MyxrPS0xLGw9LTEsbT0hMSxuPSExO2Z1bmN0aW9uIHAoKXtpZighbSl7dmFyIGE9Yy5leHBpcmF0aW9uVGltZTtuP3EoKTpuPSEwO3IodCxhKX19XG5mdW5jdGlvbiB1KCl7dmFyIGE9YyxiPWMubmV4dDtpZihjPT09YiljPW51bGw7ZWxzZXt2YXIgZD1jLnByZXZpb3VzO2M9ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGw7ZD1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZT1oLFE9bDtoPWE7bD1iO3RyeXt2YXIgZz1kKCl9ZmluYWxseXtoPWUsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKWlmKGc9e2NhbGxiYWNrOmcscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1jKWM9Zy5uZXh0PWcucHJldmlvdXM9ZztlbHNle2Q9bnVsbDthPWM7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7ZD1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWcscCgpKTtiPWQucHJldmlvdXM7Yi5uZXh0PWQucHJldmlvdXM9ZztnLm5leHQ9ZDtnLnByZXZpb3VzPVxuYn19ZnVuY3Rpb24gdigpe2lmKC0xPT09ayYmbnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpe209ITA7dHJ5e2RvIHUoKTt3aGlsZShudWxsIT09YyYmMT09PWMucHJpb3JpdHlMZXZlbCl9ZmluYWxseXttPSExLG51bGwhPT1jP3AoKTpuPSExfX19ZnVuY3Rpb24gdChhKXttPSEwO3ZhciBiPWY7Zj1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWM7KXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGMuZXhwaXJhdGlvblRpbWU8PWQpe2RvIHUoKTt3aGlsZShudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTw9ZCl9ZWxzZSBicmVha31lbHNlIGlmKG51bGwhPT1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJiF3KCkpfX1maW5hbGx5e209ITEsZj1iLG51bGwhPT1jP3AoKTpuPSExLHYoKX19XG52YXIgeD1EYXRlLHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLEMsRDtmdW5jdGlvbiBFKGEpe0M9QShmdW5jdGlvbihiKXt6KEQpO2EoYil9KTtEPXkoZnVuY3Rpb24oKXtCKEMpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XG5pZihHJiZHLl9zY2hlZE1vY2spe3ZhciBIPUcuX3NjaGVkTW9jaztyPUhbMF07cT1IWzFdO3c9SFsyXTtleHBvcnRzLnVuc3RhYmxlX25vdz1IWzNdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIEk9bnVsbCxKPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1JKXRyeXtJKGEpfWZpbmFsbHl7ST1udWxsfX07cj1mdW5jdGlvbihhKXtudWxsIT09ST9zZXRUaW1lb3V0KHIsMCxhKTooST1hLHNldFRpbWVvdXQoSiwwLCExKSl9O3E9ZnVuY3Rpb24oKXtJPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe0w9ITE7dmFyIGE9SyxiPU07Sz1udWxsO009LTE7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxlPSExO2lmKDA+PVAtZClpZigtMSE9PWImJmI8PWQpZT0hMDtlbHNle058fChOPSEwLEUoVikpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGUpfWZpbmFsbHl7Tz0hMX19fTtcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XG5leHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBkPWgsZT1rO2g9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtoPWQsaz1lLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGQ9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWQrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGgpe2Nhc2UgMTpiPWQrLTE7YnJlYWs7Y2FzZSAyOmI9ZCsyNTA7YnJlYWs7Y2FzZSA1OmI9ZCsxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWQrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1kKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6aCxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09YyljPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7ZD1udWxsO3ZhciBlPWM7ZG97aWYoZS5leHBpcmF0aW9uVGltZT5iKXtkPWU7YnJlYWt9ZT1lLm5leHR9d2hpbGUoZSE9PWMpO251bGw9PT1kP2Q9YzpkPT09YyYmKGM9YSxwKCkpO1xuYj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWE7YS5uZXh0PWQ7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpYz1udWxsO2Vsc2V7YT09PWMmJihjPWIpO3ZhciBkPWEucHJldmlvdXM7ZC5uZXh0PWI7Yi5wcmV2aW91cz1kfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1oO3JldHVybiBmdW5jdGlvbigpe3ZhciBkPWgsZT1rO2g9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2g9ZCxrPWUsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gaH07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWYmJihudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWMmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBjfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIiFmdW5jdGlvbigpIHtcbiAgdmFyIGQzID0ge1xuICAgIHZlcnNpb246IFwiMy41LjE3XCJcbiAgfTtcbiAgdmFyIGQzX2FycmF5U2xpY2UgPSBbXS5zbGljZSwgZDNfYXJyYXkgPSBmdW5jdGlvbihsaXN0KSB7XG4gICAgcmV0dXJuIGQzX2FycmF5U2xpY2UuY2FsbChsaXN0KTtcbiAgfTtcbiAgdmFyIGQzX2RvY3VtZW50ID0gdGhpcy5kb2N1bWVudDtcbiAgZnVuY3Rpb24gZDNfZG9jdW1lbnRFbGVtZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZSAmJiAobm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUuZG9jdW1lbnQgfHwgbm9kZSkuZG9jdW1lbnRFbGVtZW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3dpbmRvdyhub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUgJiYgKG5vZGUub3duZXJEb2N1bWVudCAmJiBub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgbm9kZS5kb2N1bWVudCAmJiBub2RlIHx8IG5vZGUuZGVmYXVsdFZpZXcpO1xuICB9XG4gIGlmIChkM19kb2N1bWVudCkge1xuICAgIHRyeSB7XG4gICAgICBkM19hcnJheShkM19kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2hpbGROb2RlcylbMF0ubm9kZVR5cGU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgZDNfYXJyYXkgPSBmdW5jdGlvbihsaXN0KSB7XG4gICAgICAgIHZhciBpID0gbGlzdC5sZW5ndGgsIGFycmF5ID0gbmV3IEFycmF5KGkpO1xuICAgICAgICB3aGlsZSAoaS0tKSBhcnJheVtpXSA9IGxpc3RbaV07XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgIH07XG4gICAgfVxuICB9XG4gIGlmICghRGF0ZS5ub3cpIERhdGUubm93ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICtuZXcgRGF0ZSgpO1xuICB9O1xuICBpZiAoZDNfZG9jdW1lbnQpIHtcbiAgICB0cnkge1xuICAgICAgZDNfZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkRJVlwiKS5zdHlsZS5zZXRQcm9wZXJ0eShcIm9wYWNpdHlcIiwgMCwgXCJcIik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHZhciBkM19lbGVtZW50X3Byb3RvdHlwZSA9IHRoaXMuRWxlbWVudC5wcm90b3R5cGUsIGQzX2VsZW1lbnRfc2V0QXR0cmlidXRlID0gZDNfZWxlbWVudF9wcm90b3R5cGUuc2V0QXR0cmlidXRlLCBkM19lbGVtZW50X3NldEF0dHJpYnV0ZU5TID0gZDNfZWxlbWVudF9wcm90b3R5cGUuc2V0QXR0cmlidXRlTlMsIGQzX3N0eWxlX3Byb3RvdHlwZSA9IHRoaXMuQ1NTU3R5bGVEZWNsYXJhdGlvbi5wcm90b3R5cGUsIGQzX3N0eWxlX3NldFByb3BlcnR5ID0gZDNfc3R5bGVfcHJvdG90eXBlLnNldFByb3BlcnR5O1xuICAgICAgZDNfZWxlbWVudF9wcm90b3R5cGUuc2V0QXR0cmlidXRlID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgICAgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSArIFwiXCIpO1xuICAgICAgfTtcbiAgICAgIGQzX2VsZW1lbnRfcHJvdG90eXBlLnNldEF0dHJpYnV0ZU5TID0gZnVuY3Rpb24oc3BhY2UsIGxvY2FsLCB2YWx1ZSkge1xuICAgICAgICBkM19lbGVtZW50X3NldEF0dHJpYnV0ZU5TLmNhbGwodGhpcywgc3BhY2UsIGxvY2FsLCB2YWx1ZSArIFwiXCIpO1xuICAgICAgfTtcbiAgICAgIGQzX3N0eWxlX3Byb3RvdHlwZS5zZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICAgICAgICBkM19zdHlsZV9zZXRQcm9wZXJ0eS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlICsgXCJcIiwgcHJpb3JpdHkpO1xuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgZDMuYXNjZW5kaW5nID0gZDNfYXNjZW5kaW5nO1xuICBmdW5jdGlvbiBkM19hc2NlbmRpbmcoYSwgYikge1xuICAgIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbiAgfVxuICBkMy5kZXNjZW5kaW5nID0gZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiIDwgYSA/IC0xIDogYiA+IGEgPyAxIDogYiA+PSBhID8gMCA6IE5hTjtcbiAgfTtcbiAgZDMubWluID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBiO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBhID4gYikgYSA9IGI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGEgPiBiKSBhID0gYjtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG4gIH07XG4gIGQzLm1heCA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgYjtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGFycmF5W2ldKSAhPSBudWxsICYmIGIgPj0gYikge1xuICAgICAgICBhID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYiA+IGEpIGEgPSBiO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBiID4gYSkgYSA9IGI7XG4gICAgfVxuICAgIHJldHVybiBhO1xuICB9O1xuICBkMy5leHRlbnQgPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBpID0gLTEsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGIsIGM7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBiID49IGIpIHtcbiAgICAgICAgYSA9IGMgPSBiO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCkge1xuICAgICAgICBpZiAoYSA+IGIpIGEgPSBiO1xuICAgICAgICBpZiAoYyA8IGIpIGMgPSBiO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYiA+PSBiKSB7XG4gICAgICAgIGEgPSBjID0gYjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGEgPiBiKSBhID0gYjtcbiAgICAgICAgaWYgKGMgPCBiKSBjID0gYjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFsgYSwgYyBdO1xuICB9O1xuICBmdW5jdGlvbiBkM19udW1iZXIoeCkge1xuICAgIHJldHVybiB4ID09PSBudWxsID8gTmFOIDogK3g7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbnVtZXJpYyh4KSB7XG4gICAgcmV0dXJuICFpc05hTih4KTtcbiAgfVxuICBkMy5zdW0gPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBzID0gMCwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgaSA9IC0xO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWVyaWMoYSA9ICthcnJheVtpXSkpIHMgKz0gYTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSArZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpKSBzICs9IGE7XG4gICAgfVxuICAgIHJldHVybiBzO1xuICB9O1xuICBkMy5tZWFuID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgcyA9IDAsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGkgPSAtMSwgaiA9IG47XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGFycmF5W2ldKSkpIHMgKz0gYTsgZWxzZSAtLWo7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSkpIHMgKz0gYTsgZWxzZSAtLWo7XG4gICAgfVxuICAgIGlmIChqKSByZXR1cm4gcyAvIGo7XG4gIH07XG4gIGQzLnF1YW50aWxlID0gZnVuY3Rpb24odmFsdWVzLCBwKSB7XG4gICAgdmFyIEggPSAodmFsdWVzLmxlbmd0aCAtIDEpICogcCArIDEsIGggPSBNYXRoLmZsb29yKEgpLCB2ID0gK3ZhbHVlc1toIC0gMV0sIGUgPSBIIC0gaDtcbiAgICByZXR1cm4gZSA/IHYgKyBlICogKHZhbHVlc1toXSAtIHYpIDogdjtcbiAgfTtcbiAgZDMubWVkaWFuID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgbnVtYmVycyA9IFtdLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBpID0gLTE7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoZDNfbnVtZXJpYyhhID0gZDNfbnVtYmVyKGFycmF5W2ldKSkpIG51bWJlcnMucHVzaChhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpKSkgbnVtYmVycy5wdXNoKGEpO1xuICAgIH1cbiAgICBpZiAobnVtYmVycy5sZW5ndGgpIHJldHVybiBkMy5xdWFudGlsZShudW1iZXJzLnNvcnQoZDNfYXNjZW5kaW5nKSwgLjUpO1xuICB9O1xuICBkMy52YXJpYW5jZSA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIG4gPSBhcnJheS5sZW5ndGgsIG0gPSAwLCBhLCBkLCBzID0gMCwgaSA9IC0xLCBqID0gMDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKGQzX251bWVyaWMoYSA9IGQzX251bWJlcihhcnJheVtpXSkpKSB7XG4gICAgICAgICAgZCA9IGEgLSBtO1xuICAgICAgICAgIG0gKz0gZCAvICsrajtcbiAgICAgICAgICBzICs9IGQgKiAoYSAtIG0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChkM19udW1lcmljKGEgPSBkM19udW1iZXIoZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpKSkge1xuICAgICAgICAgIGQgPSBhIC0gbTtcbiAgICAgICAgICBtICs9IGQgLyArK2o7XG4gICAgICAgICAgcyArPSBkICogKGEgLSBtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoaiA+IDEpIHJldHVybiBzIC8gKGogLSAxKTtcbiAgfTtcbiAgZDMuZGV2aWF0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSBkMy52YXJpYW5jZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2ID8gTWF0aC5zcXJ0KHYpIDogdjtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfYmlzZWN0b3IoY29tcGFyZSkge1xuICAgIHJldHVybiB7XG4gICAgICBsZWZ0OiBmdW5jdGlvbihhLCB4LCBsbywgaGkpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBsbyA9IDA7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgNCkgaGkgPSBhLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgICBpZiAoY29tcGFyZShhW21pZF0sIHgpIDwgMCkgbG8gPSBtaWQgKyAxOyBlbHNlIGhpID0gbWlkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsbztcbiAgICAgIH0sXG4gICAgICByaWdodDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgbG8gPSAwO1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDQpIGhpID0gYS5sZW5ndGg7XG4gICAgICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA+IDApIGhpID0gbWlkOyBlbHNlIGxvID0gbWlkICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG87XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfYmlzZWN0ID0gZDNfYmlzZWN0b3IoZDNfYXNjZW5kaW5nKTtcbiAgZDMuYmlzZWN0TGVmdCA9IGQzX2Jpc2VjdC5sZWZ0O1xuICBkMy5iaXNlY3QgPSBkMy5iaXNlY3RSaWdodCA9IGQzX2Jpc2VjdC5yaWdodDtcbiAgZDMuYmlzZWN0b3IgPSBmdW5jdGlvbihmKSB7XG4gICAgcmV0dXJuIGQzX2Jpc2VjdG9yKGYubGVuZ3RoID09PSAxID8gZnVuY3Rpb24oZCwgeCkge1xuICAgICAgcmV0dXJuIGQzX2FzY2VuZGluZyhmKGQpLCB4KTtcbiAgICB9IDogZik7XG4gIH07XG4gIGQzLnNodWZmbGUgPSBmdW5jdGlvbihhcnJheSwgaTAsIGkxKSB7XG4gICAgaWYgKChtID0gYXJndW1lbnRzLmxlbmd0aCkgPCAzKSB7XG4gICAgICBpMSA9IGFycmF5Lmxlbmd0aDtcbiAgICAgIGlmIChtIDwgMikgaTAgPSAwO1xuICAgIH1cbiAgICB2YXIgbSA9IGkxIC0gaTAsIHQsIGk7XG4gICAgd2hpbGUgKG0pIHtcbiAgICAgIGkgPSBNYXRoLnJhbmRvbSgpICogbS0tIHwgMDtcbiAgICAgIHQgPSBhcnJheVttICsgaTBdLCBhcnJheVttICsgaTBdID0gYXJyYXlbaSArIGkwXSwgYXJyYXlbaSArIGkwXSA9IHQ7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbiAgfTtcbiAgZDMucGVybXV0ZSA9IGZ1bmN0aW9uKGFycmF5LCBpbmRleGVzKSB7XG4gICAgdmFyIGkgPSBpbmRleGVzLmxlbmd0aCwgcGVybXV0ZXMgPSBuZXcgQXJyYXkoaSk7XG4gICAgd2hpbGUgKGktLSkgcGVybXV0ZXNbaV0gPSBhcnJheVtpbmRleGVzW2ldXTtcbiAgICByZXR1cm4gcGVybXV0ZXM7XG4gIH07XG4gIGQzLnBhaXJzID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGggLSAxLCBwMCwgcDEgPSBhcnJheVswXSwgcGFpcnMgPSBuZXcgQXJyYXkobiA8IDAgPyAwIDogbik7XG4gICAgd2hpbGUgKGkgPCBuKSBwYWlyc1tpXSA9IFsgcDAgPSBwMSwgcDEgPSBhcnJheVsrK2ldIF07XG4gICAgcmV0dXJuIHBhaXJzO1xuICB9O1xuICBkMy50cmFuc3Bvc2UgPSBmdW5jdGlvbihtYXRyaXgpIHtcbiAgICBpZiAoIShuID0gbWF0cml4Lmxlbmd0aCkpIHJldHVybiBbXTtcbiAgICBmb3IgKHZhciBpID0gLTEsIG0gPSBkMy5taW4obWF0cml4LCBkM190cmFuc3Bvc2VMZW5ndGgpLCB0cmFuc3Bvc2UgPSBuZXcgQXJyYXkobSk7ICsraSA8IG07ICkge1xuICAgICAgZm9yICh2YXIgaiA9IC0xLCBuLCByb3cgPSB0cmFuc3Bvc2VbaV0gPSBuZXcgQXJyYXkobik7ICsraiA8IG47ICkge1xuICAgICAgICByb3dbal0gPSBtYXRyaXhbal1baV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cmFuc3Bvc2U7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zcG9zZUxlbmd0aChkKSB7XG4gICAgcmV0dXJuIGQubGVuZ3RoO1xuICB9XG4gIGQzLnppcCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy50cmFuc3Bvc2UoYXJndW1lbnRzKTtcbiAgfTtcbiAgZDMua2V5cyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG1hcCkga2V5cy5wdXNoKGtleSk7XG4gICAgcmV0dXJuIGtleXM7XG4gIH07XG4gIGQzLnZhbHVlcyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWFwKSB2YWx1ZXMucHVzaChtYXBba2V5XSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfTtcbiAgZDMuZW50cmllcyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG1hcCkgZW50cmllcy5wdXNoKHtcbiAgICAgIGtleToga2V5LFxuICAgICAgdmFsdWU6IG1hcFtrZXldXG4gICAgfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH07XG4gIGQzLm1lcmdlID0gZnVuY3Rpb24oYXJyYXlzKSB7XG4gICAgdmFyIG4gPSBhcnJheXMubGVuZ3RoLCBtLCBpID0gLTEsIGogPSAwLCBtZXJnZWQsIGFycmF5O1xuICAgIHdoaWxlICgrK2kgPCBuKSBqICs9IGFycmF5c1tpXS5sZW5ndGg7XG4gICAgbWVyZ2VkID0gbmV3IEFycmF5KGopO1xuICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgYXJyYXkgPSBhcnJheXNbbl07XG4gICAgICBtID0gYXJyYXkubGVuZ3RoO1xuICAgICAgd2hpbGUgKC0tbSA+PSAwKSB7XG4gICAgICAgIG1lcmdlZFstLWpdID0gYXJyYXlbbV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXJnZWQ7XG4gIH07XG4gIHZhciBhYnMgPSBNYXRoLmFicztcbiAgZDMucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykge1xuICAgICAgc3RlcCA9IDE7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgc3RvcCA9IHN0YXJ0O1xuICAgICAgICBzdGFydCA9IDA7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgoc3RvcCAtIHN0YXJ0KSAvIHN0ZXAgPT09IEluZmluaXR5KSB0aHJvdyBuZXcgRXJyb3IoXCJpbmZpbml0ZSByYW5nZVwiKTtcbiAgICB2YXIgcmFuZ2UgPSBbXSwgayA9IGQzX3JhbmdlX2ludGVnZXJTY2FsZShhYnMoc3RlcCkpLCBpID0gLTEsIGo7XG4gICAgc3RhcnQgKj0gaywgc3RvcCAqPSBrLCBzdGVwICo9IGs7XG4gICAgaWYgKHN0ZXAgPCAwKSB3aGlsZSAoKGogPSBzdGFydCArIHN0ZXAgKiArK2kpID4gc3RvcCkgcmFuZ2UucHVzaChqIC8gayk7IGVsc2Ugd2hpbGUgKChqID0gc3RhcnQgKyBzdGVwICogKytpKSA8IHN0b3ApIHJhbmdlLnB1c2goaiAvIGspO1xuICAgIHJldHVybiByYW5nZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmFuZ2VfaW50ZWdlclNjYWxlKHgpIHtcbiAgICB2YXIgayA9IDE7XG4gICAgd2hpbGUgKHggKiBrICUgMSkgayAqPSAxMDtcbiAgICByZXR1cm4gaztcbiAgfVxuICBmdW5jdGlvbiBkM19jbGFzcyhjdG9yLCBwcm9wZXJ0aWVzKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHByb3BlcnRpZXMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjdG9yLnByb3RvdHlwZSwga2V5LCB7XG4gICAgICAgIHZhbHVlOiBwcm9wZXJ0aWVzW2tleV0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgZDMubWFwID0gZnVuY3Rpb24ob2JqZWN0LCBmKSB7XG4gICAgdmFyIG1hcCA9IG5ldyBkM19NYXAoKTtcbiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgZDNfTWFwKSB7XG4gICAgICBvYmplY3QuZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICAgIG1hcC5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IG9iamVjdC5sZW5ndGgsIG87XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkgd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoaSwgb2JqZWN0W2ldKTsgZWxzZSB3aGlsZSAoKytpIDwgbikgbWFwLnNldChmLmNhbGwob2JqZWN0LCBvID0gb2JqZWN0W2ldLCBpKSwgbyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIG1hcC5zZXQoa2V5LCBvYmplY3Rba2V5XSk7XG4gICAgfVxuICAgIHJldHVybiBtYXA7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX01hcCgpIHtcbiAgICB0aGlzLl8gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB9XG4gIHZhciBkM19tYXBfcHJvdG8gPSBcIl9fcHJvdG9fX1wiLCBkM19tYXBfemVybyA9IFwiXFx4MDBcIjtcbiAgZDNfY2xhc3MoZDNfTWFwLCB7XG4gICAgaGFzOiBkM19tYXBfaGFzLFxuICAgIGdldDogZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gdGhpcy5fW2QzX21hcF9lc2NhcGUoa2V5KV07XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLl9bZDNfbWFwX2VzY2FwZShrZXkpXSA9IHZhbHVlO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBkM19tYXBfcmVtb3ZlLFxuICAgIGtleXM6IGQzX21hcF9rZXlzLFxuICAgIHZhbHVlczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSB2YWx1ZXMucHVzaCh0aGlzLl9ba2V5XSk7XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH0sXG4gICAgZW50cmllczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZW50cmllcyA9IFtdO1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgZW50cmllcy5wdXNoKHtcbiAgICAgICAga2V5OiBkM19tYXBfdW5lc2NhcGUoa2V5KSxcbiAgICAgICAgdmFsdWU6IHRoaXMuX1trZXldXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBlbnRyaWVzO1xuICAgIH0sXG4gICAgc2l6ZTogZDNfbWFwX3NpemUsXG4gICAgZW1wdHk6IGQzX21hcF9lbXB0eSxcbiAgICBmb3JFYWNoOiBmdW5jdGlvbihmKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSBmLmNhbGwodGhpcywgZDNfbWFwX3VuZXNjYXBlKGtleSksIHRoaXMuX1trZXldKTtcbiAgICB9XG4gIH0pO1xuICBmdW5jdGlvbiBkM19tYXBfZXNjYXBlKGtleSkge1xuICAgIHJldHVybiAoa2V5ICs9IFwiXCIpID09PSBkM19tYXBfcHJvdG8gfHwga2V5WzBdID09PSBkM19tYXBfemVybyA/IGQzX21hcF96ZXJvICsga2V5IDoga2V5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF91bmVzY2FwZShrZXkpIHtcbiAgICByZXR1cm4gKGtleSArPSBcIlwiKVswXSA9PT0gZDNfbWFwX3plcm8gPyBrZXkuc2xpY2UoMSkgOiBrZXk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbWFwX2hhcyhrZXkpIHtcbiAgICByZXR1cm4gZDNfbWFwX2VzY2FwZShrZXkpIGluIHRoaXMuXztcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfcmVtb3ZlKGtleSkge1xuICAgIHJldHVybiAoa2V5ID0gZDNfbWFwX2VzY2FwZShrZXkpKSBpbiB0aGlzLl8gJiYgZGVsZXRlIHRoaXMuX1trZXldO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9rZXlzKCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykga2V5cy5wdXNoKGQzX21hcF91bmVzY2FwZShrZXkpKTtcbiAgICByZXR1cm4ga2V5cztcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfc2l6ZSgpIHtcbiAgICB2YXIgc2l6ZSA9IDA7XG4gICAgZm9yICh2YXIga2V5IGluIHRoaXMuXykgKytzaXplO1xuICAgIHJldHVybiBzaXplO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9lbXB0eSgpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5fKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZDMubmVzdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBuZXN0ID0ge30sIGtleXMgPSBbXSwgc29ydEtleXMgPSBbXSwgc29ydFZhbHVlcywgcm9sbHVwO1xuICAgIGZ1bmN0aW9uIG1hcChtYXBUeXBlLCBhcnJheSwgZGVwdGgpIHtcbiAgICAgIGlmIChkZXB0aCA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIHJvbGx1cCA/IHJvbGx1cC5jYWxsKG5lc3QsIGFycmF5KSA6IHNvcnRWYWx1ZXMgPyBhcnJheS5zb3J0KHNvcnRWYWx1ZXMpIDogYXJyYXk7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gYXJyYXkubGVuZ3RoLCBrZXkgPSBrZXlzW2RlcHRoKytdLCBrZXlWYWx1ZSwgb2JqZWN0LCBzZXR0ZXIsIHZhbHVlc0J5S2V5ID0gbmV3IGQzX01hcCgpLCB2YWx1ZXM7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAodmFsdWVzID0gdmFsdWVzQnlLZXkuZ2V0KGtleVZhbHVlID0ga2V5KG9iamVjdCA9IGFycmF5W2ldKSkpIHtcbiAgICAgICAgICB2YWx1ZXMucHVzaChvYmplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbHVlc0J5S2V5LnNldChrZXlWYWx1ZSwgWyBvYmplY3QgXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtYXBUeXBlKSB7XG4gICAgICAgIG9iamVjdCA9IG1hcFR5cGUoKTtcbiAgICAgICAgc2V0dGVyID0gZnVuY3Rpb24oa2V5VmFsdWUsIHZhbHVlcykge1xuICAgICAgICAgIG9iamVjdC5zZXQoa2V5VmFsdWUsIG1hcChtYXBUeXBlLCB2YWx1ZXMsIGRlcHRoKSk7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvYmplY3QgPSB7fTtcbiAgICAgICAgc2V0dGVyID0gZnVuY3Rpb24oa2V5VmFsdWUsIHZhbHVlcykge1xuICAgICAgICAgIG9iamVjdFtrZXlWYWx1ZV0gPSBtYXAobWFwVHlwZSwgdmFsdWVzLCBkZXB0aCk7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICB2YWx1ZXNCeUtleS5mb3JFYWNoKHNldHRlcik7XG4gICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBlbnRyaWVzKG1hcCwgZGVwdGgpIHtcbiAgICAgIGlmIChkZXB0aCA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIG1hcDtcbiAgICAgIHZhciBhcnJheSA9IFtdLCBzb3J0S2V5ID0gc29ydEtleXNbZGVwdGgrK107XG4gICAgICBtYXAuZm9yRWFjaChmdW5jdGlvbihrZXksIGtleU1hcCkge1xuICAgICAgICBhcnJheS5wdXNoKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICB2YWx1ZXM6IGVudHJpZXMoa2V5TWFwLCBkZXB0aClcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzb3J0S2V5ID8gYXJyYXkuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIHJldHVybiBzb3J0S2V5KGEua2V5LCBiLmtleSk7XG4gICAgICB9KSA6IGFycmF5O1xuICAgIH1cbiAgICBuZXN0Lm1hcCA9IGZ1bmN0aW9uKGFycmF5LCBtYXBUeXBlKSB7XG4gICAgICByZXR1cm4gbWFwKG1hcFR5cGUsIGFycmF5LCAwKTtcbiAgICB9O1xuICAgIG5lc3QuZW50cmllcyA9IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgICByZXR1cm4gZW50cmllcyhtYXAoZDMubWFwLCBhcnJheSwgMCksIDApO1xuICAgIH07XG4gICAgbmVzdC5rZXkgPSBmdW5jdGlvbihkKSB7XG4gICAgICBrZXlzLnB1c2goZCk7XG4gICAgICByZXR1cm4gbmVzdDtcbiAgICB9O1xuICAgIG5lc3Quc29ydEtleXMgPSBmdW5jdGlvbihvcmRlcikge1xuICAgICAgc29ydEtleXNba2V5cy5sZW5ndGggLSAxXSA9IG9yZGVyO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICBuZXN0LnNvcnRWYWx1ZXMgPSBmdW5jdGlvbihvcmRlcikge1xuICAgICAgc29ydFZhbHVlcyA9IG9yZGVyO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICBuZXN0LnJvbGx1cCA9IGZ1bmN0aW9uKGYpIHtcbiAgICAgIHJvbGx1cCA9IGY7XG4gICAgICByZXR1cm4gbmVzdDtcbiAgICB9O1xuICAgIHJldHVybiBuZXN0O1xuICB9O1xuICBkMy5zZXQgPSBmdW5jdGlvbihhcnJheSkge1xuICAgIHZhciBzZXQgPSBuZXcgZDNfU2V0KCk7XG4gICAgaWYgKGFycmF5KSBmb3IgKHZhciBpID0gMCwgbiA9IGFycmF5Lmxlbmd0aDsgaSA8IG47ICsraSkgc2V0LmFkZChhcnJheVtpXSk7XG4gICAgcmV0dXJuIHNldDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfU2V0KCkge1xuICAgIHRoaXMuXyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIH1cbiAgZDNfY2xhc3MoZDNfU2V0LCB7XG4gICAgaGFzOiBkM19tYXBfaGFzLFxuICAgIGFkZDogZnVuY3Rpb24oa2V5KSB7XG4gICAgICB0aGlzLl9bZDNfbWFwX2VzY2FwZShrZXkgKz0gXCJcIildID0gdHJ1ZTtcbiAgICAgIHJldHVybiBrZXk7XG4gICAgfSxcbiAgICByZW1vdmU6IGQzX21hcF9yZW1vdmUsXG4gICAgdmFsdWVzOiBkM19tYXBfa2V5cyxcbiAgICBzaXplOiBkM19tYXBfc2l6ZSxcbiAgICBlbXB0eTogZDNfbWFwX2VtcHR5LFxuICAgIGZvckVhY2g6IGZ1bmN0aW9uKGYpIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLl8pIGYuY2FsbCh0aGlzLCBkM19tYXBfdW5lc2NhcGUoa2V5KSk7XG4gICAgfVxuICB9KTtcbiAgZDMuYmVoYXZpb3IgPSB7fTtcbiAgZnVuY3Rpb24gZDNfaWRlbnRpdHkoZCkge1xuICAgIHJldHVybiBkO1xuICB9XG4gIGQzLnJlYmluZCA9IGZ1bmN0aW9uKHRhcmdldCwgc291cmNlKSB7XG4gICAgdmFyIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aCwgbWV0aG9kO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0YXJnZXRbbWV0aG9kID0gYXJndW1lbnRzW2ldXSA9IGQzX3JlYmluZCh0YXJnZXQsIHNvdXJjZSwgc291cmNlW21ldGhvZF0pO1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3JlYmluZCh0YXJnZXQsIHNvdXJjZSwgbWV0aG9kKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHZhbHVlID0gbWV0aG9kLmFwcGx5KHNvdXJjZSwgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiB2YWx1ZSA9PT0gc291cmNlID8gdGFyZ2V0IDogdmFsdWU7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM192ZW5kb3JTeW1ib2wob2JqZWN0LCBuYW1lKSB7XG4gICAgaWYgKG5hbWUgaW4gb2JqZWN0KSByZXR1cm4gbmFtZTtcbiAgICBuYW1lID0gbmFtZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIG5hbWUuc2xpY2UoMSk7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBkM192ZW5kb3JQcmVmaXhlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBwcmVmaXhOYW1lID0gZDNfdmVuZG9yUHJlZml4ZXNbaV0gKyBuYW1lO1xuICAgICAgaWYgKHByZWZpeE5hbWUgaW4gb2JqZWN0KSByZXR1cm4gcHJlZml4TmFtZTtcbiAgICB9XG4gIH1cbiAgdmFyIGQzX3ZlbmRvclByZWZpeGVzID0gWyBcIndlYmtpdFwiLCBcIm1zXCIsIFwibW96XCIsIFwiTW96XCIsIFwib1wiLCBcIk9cIiBdO1xuICBmdW5jdGlvbiBkM19ub29wKCkge31cbiAgZDMuZGlzcGF0Y2ggPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBuZXcgZDNfZGlzcGF0Y2goKSwgaSA9IC0xLCBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgZGlzcGF0Y2hbYXJndW1lbnRzW2ldXSA9IGQzX2Rpc3BhdGNoX2V2ZW50KGRpc3BhdGNoKTtcbiAgICByZXR1cm4gZGlzcGF0Y2g7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2Rpc3BhdGNoKCkge31cbiAgZDNfZGlzcGF0Y2gucHJvdG90eXBlLm9uID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgICB2YXIgaSA9IHR5cGUuaW5kZXhPZihcIi5cIiksIG5hbWUgPSBcIlwiO1xuICAgIGlmIChpID49IDApIHtcbiAgICAgIG5hbWUgPSB0eXBlLnNsaWNlKGkgKyAxKTtcbiAgICAgIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpO1xuICAgIH1cbiAgICBpZiAodHlwZSkgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyID8gdGhpc1t0eXBlXS5vbihuYW1lKSA6IHRoaXNbdHlwZV0ub24obmFtZSwgbGlzdGVuZXIpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgICBpZiAobGlzdGVuZXIgPT0gbnVsbCkgZm9yICh0eXBlIGluIHRoaXMpIHtcbiAgICAgICAgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkodHlwZSkpIHRoaXNbdHlwZV0ub24obmFtZSwgbnVsbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2Rpc3BhdGNoX2V2ZW50KGRpc3BhdGNoKSB7XG4gICAgdmFyIGxpc3RlbmVycyA9IFtdLCBsaXN0ZW5lckJ5TmFtZSA9IG5ldyBkM19NYXAoKTtcbiAgICBmdW5jdGlvbiBldmVudCgpIHtcbiAgICAgIHZhciB6ID0gbGlzdGVuZXJzLCBpID0gLTEsIG4gPSB6Lmxlbmd0aCwgbDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAobCA9IHpbaV0ub24pIGwuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiBkaXNwYXRjaDtcbiAgICB9XG4gICAgZXZlbnQub24gPSBmdW5jdGlvbihuYW1lLCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGwgPSBsaXN0ZW5lckJ5TmFtZS5nZXQobmFtZSksIGk7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiBsICYmIGwub247XG4gICAgICBpZiAobCkge1xuICAgICAgICBsLm9uID0gbnVsbDtcbiAgICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLnNsaWNlKDAsIGkgPSBsaXN0ZW5lcnMuaW5kZXhPZihsKSkuY29uY2F0KGxpc3RlbmVycy5zbGljZShpICsgMSkpO1xuICAgICAgICBsaXN0ZW5lckJ5TmFtZS5yZW1vdmUobmFtZSk7XG4gICAgICB9XG4gICAgICBpZiAobGlzdGVuZXIpIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyQnlOYW1lLnNldChuYW1lLCB7XG4gICAgICAgIG9uOiBsaXN0ZW5lclxuICAgICAgfSkpO1xuICAgICAgcmV0dXJuIGRpc3BhdGNoO1xuICAgIH07XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG4gIGQzLmV2ZW50ID0gbnVsbDtcbiAgZnVuY3Rpb24gZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpIHtcbiAgICBkMy5ldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2V2ZW50U291cmNlKCkge1xuICAgIHZhciBlID0gZDMuZXZlbnQsIHM7XG4gICAgd2hpbGUgKHMgPSBlLnNvdXJjZUV2ZW50KSBlID0gcztcbiAgICByZXR1cm4gZTtcbiAgfVxuICBmdW5jdGlvbiBkM19ldmVudERpc3BhdGNoKHRhcmdldCkge1xuICAgIHZhciBkaXNwYXRjaCA9IG5ldyBkM19kaXNwYXRjaCgpLCBpID0gMCwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGRpc3BhdGNoW2FyZ3VtZW50c1tpXV0gPSBkM19kaXNwYXRjaF9ldmVudChkaXNwYXRjaCk7XG4gICAgZGlzcGF0Y2gub2YgPSBmdW5jdGlvbih0aGl6LCBhcmd1bWVudHopIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbihlMSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciBlMCA9IGUxLnNvdXJjZUV2ZW50ID0gZDMuZXZlbnQ7XG4gICAgICAgICAgZTEudGFyZ2V0ID0gdGFyZ2V0O1xuICAgICAgICAgIGQzLmV2ZW50ID0gZTE7XG4gICAgICAgICAgZGlzcGF0Y2hbZTEudHlwZV0uYXBwbHkodGhpeiwgYXJndW1lbnR6KTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBkMy5ldmVudCA9IGUwO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIGRpc3BhdGNoO1xuICB9XG4gIGQzLnJlcXVvdGUgPSBmdW5jdGlvbihzKSB7XG4gICAgcmV0dXJuIHMucmVwbGFjZShkM19yZXF1b3RlX3JlLCBcIlxcXFwkJlwiKTtcbiAgfTtcbiAgdmFyIGQzX3JlcXVvdGVfcmUgPSAvW1xcXFxcXF5cXCRcXCpcXCtcXD9cXHxcXFtcXF1cXChcXClcXC5cXHtcXH1dL2c7XG4gIHZhciBkM19zdWJjbGFzcyA9IHt9Ll9fcHJvdG9fXyA/IGZ1bmN0aW9uKG9iamVjdCwgcHJvdG90eXBlKSB7XG4gICAgb2JqZWN0Ll9fcHJvdG9fXyA9IHByb3RvdHlwZTtcbiAgfSA6IGZ1bmN0aW9uKG9iamVjdCwgcHJvdG90eXBlKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gcHJvdG90eXBlKSBvYmplY3RbcHJvcGVydHldID0gcHJvdG90eXBlW3Byb3BlcnR5XTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uKGdyb3Vwcykge1xuICAgIGQzX3N1YmNsYXNzKGdyb3VwcywgZDNfc2VsZWN0aW9uUHJvdG90eXBlKTtcbiAgICByZXR1cm4gZ3JvdXBzO1xuICB9XG4gIHZhciBkM19zZWxlY3QgPSBmdW5jdGlvbihzLCBuKSB7XG4gICAgcmV0dXJuIG4ucXVlcnlTZWxlY3RvcihzKTtcbiAgfSwgZDNfc2VsZWN0QWxsID0gZnVuY3Rpb24ocywgbikge1xuICAgIHJldHVybiBuLnF1ZXJ5U2VsZWN0b3JBbGwocyk7XG4gIH0sIGQzX3NlbGVjdE1hdGNoZXMgPSBmdW5jdGlvbihuLCBzKSB7XG4gICAgdmFyIGQzX3NlbGVjdE1hdGNoZXIgPSBuLm1hdGNoZXMgfHwgbltkM192ZW5kb3JTeW1ib2wobiwgXCJtYXRjaGVzU2VsZWN0b3JcIildO1xuICAgIGQzX3NlbGVjdE1hdGNoZXMgPSBmdW5jdGlvbihuLCBzKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0TWF0Y2hlci5jYWxsKG4sIHMpO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NlbGVjdE1hdGNoZXMobiwgcyk7XG4gIH07XG4gIGlmICh0eXBlb2YgU2l6emxlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBkM19zZWxlY3QgPSBmdW5jdGlvbihzLCBuKSB7XG4gICAgICByZXR1cm4gU2l6emxlKHMsIG4pWzBdIHx8IG51bGw7XG4gICAgfTtcbiAgICBkM19zZWxlY3RBbGwgPSBTaXp6bGU7XG4gICAgZDNfc2VsZWN0TWF0Y2hlcyA9IFNpenpsZS5tYXRjaGVzU2VsZWN0b3I7XG4gIH1cbiAgZDMuc2VsZWN0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNlbGVjdChkM19kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpO1xuICB9O1xuICB2YXIgZDNfc2VsZWN0aW9uUHJvdG90eXBlID0gZDMuc2VsZWN0aW9uLnByb3RvdHlwZSA9IFtdO1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBzdWJub2RlLCBncm91cCwgbm9kZTtcbiAgICBzZWxlY3RvciA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBzdWJncm91cC5wYXJlbnROb2RlID0gKGdyb3VwID0gdGhpc1tqXSkucGFyZW50Tm9kZTtcbiAgICAgIGZvciAodmFyIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKTtcbiAgICAgICAgICBpZiAoc3Vibm9kZSAmJiBcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9zZWxlY3RvcihzZWxlY3Rvcikge1xuICAgIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdG9yIDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0KHNlbGVjdG9yLCB0aGlzKTtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zZWxlY3RBbGwgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIG5vZGU7XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gZDNfYXJyYXkoc2VsZWN0b3IuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkpO1xuICAgICAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSBub2RlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiID8gc2VsZWN0b3IgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zZWxlY3RBbGwoc2VsZWN0b3IsIHRoaXMpO1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX25zWGh0bWwgPSBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcbiAgdmFyIGQzX25zUHJlZml4ID0ge1xuICAgIHN2ZzogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHhodG1sOiBkM19uc1hodG1sLFxuICAgIHhsaW5rOiBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIixcbiAgICB4bWw6IFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsXG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIlxuICB9O1xuICBkMy5ucyA9IHtcbiAgICBwcmVmaXg6IGQzX25zUHJlZml4LFxuICAgIHF1YWxpZnk6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIHZhciBpID0gbmFtZS5pbmRleE9mKFwiOlwiKSwgcHJlZml4ID0gbmFtZTtcbiAgICAgIGlmIChpID49IDAgJiYgKHByZWZpeCA9IG5hbWUuc2xpY2UoMCwgaSkpICE9PSBcInhtbG5zXCIpIG5hbWUgPSBuYW1lLnNsaWNlKGkgKyAxKTtcbiAgICAgIHJldHVybiBkM19uc1ByZWZpeC5oYXNPd25Qcm9wZXJ0eShwcmVmaXgpID8ge1xuICAgICAgICBzcGFjZTogZDNfbnNQcmVmaXhbcHJlZml4XSxcbiAgICAgICAgbG9jYWw6IG5hbWVcbiAgICAgIH0gOiBuYW1lO1xuICAgIH1cbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmF0dHIgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHZhciBub2RlID0gdGhpcy5ub2RlKCk7XG4gICAgICAgIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWUpO1xuICAgICAgICByZXR1cm4gbmFtZS5sb2NhbCA/IG5vZGUuZ2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCkgOiBub2RlLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFsdWUgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9hdHRyKHZhbHVlLCBuYW1lW3ZhbHVlXSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2F0dHIobmFtZSwgdmFsdWUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2F0dHIobmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gZDMubnMucXVhbGlmeShuYW1lKTtcbiAgICBmdW5jdGlvbiBhdHRyTnVsbCgpIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyTnVsbE5TKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ckNvbnN0YW50KCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyQ29uc3RhbnROUygpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCwgdmFsdWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyRnVuY3Rpb24oKSB7XG4gICAgICB2YXIgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoeCA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTsgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB4KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoKSB7XG4gICAgICB2YXIgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoeCA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpOyBlbHNlIHRoaXMuc2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCwgeCk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA9PSBudWxsID8gbmFtZS5sb2NhbCA/IGF0dHJOdWxsTlMgOiBhdHRyTnVsbCA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uIDogbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2NvbGxhcHNlKHMpIHtcbiAgICByZXR1cm4gcy50cmltKCkucmVwbGFjZSgvXFxzKy9nLCBcIiBcIik7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmNsYXNzZWQgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHZhciBub2RlID0gdGhpcy5ub2RlKCksIG4gPSAobmFtZSA9IGQzX3NlbGVjdGlvbl9jbGFzc2VzKG5hbWUpKS5sZW5ndGgsIGkgPSAtMTtcbiAgICAgICAgaWYgKHZhbHVlID0gbm9kZS5jbGFzc0xpc3QpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCF2YWx1ZS5jb250YWlucyhuYW1lW2ldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbHVlID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFkM19zZWxlY3Rpb25fY2xhc3NlZFJlKG5hbWVbaV0pLnRlc3QodmFsdWUpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fY2xhc3NlZCh2YWx1ZSwgbmFtZVt2YWx1ZV0pKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9jbGFzc2VkKG5hbWUsIHZhbHVlKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9jbGFzc2VkUmUobmFtZSkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKD86XnxcXFxccyspXCIgKyBkMy5yZXF1b3RlKG5hbWUpICsgXCIoPzpcXFxccyt8JClcIiwgXCJnXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9jbGFzc2VzKG5hbWUpIHtcbiAgICByZXR1cm4gKG5hbWUgKyBcIlwiKS50cmltKCkuc3BsaXQoL158XFxzKy8pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9jbGFzc2VkKG5hbWUsIHZhbHVlKSB7XG4gICAgbmFtZSA9IGQzX3NlbGVjdGlvbl9jbGFzc2VzKG5hbWUpLm1hcChkM19zZWxlY3Rpb25fY2xhc3NlZE5hbWUpO1xuICAgIHZhciBuID0gbmFtZS5sZW5ndGg7XG4gICAgZnVuY3Rpb24gY2xhc3NlZENvbnN0YW50KCkge1xuICAgICAgdmFyIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBuYW1lW2ldKHRoaXMsIHZhbHVlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2xhc3NlZEZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGkgPSAtMSwgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB3aGlsZSAoKytpIDwgbikgbmFtZVtpXSh0aGlzLCB4KTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gY2xhc3NlZEZ1bmN0aW9uIDogY2xhc3NlZENvbnN0YW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9jbGFzc2VkTmFtZShuYW1lKSB7XG4gICAgdmFyIHJlID0gZDNfc2VsZWN0aW9uX2NsYXNzZWRSZShuYW1lKTtcbiAgICByZXR1cm4gZnVuY3Rpb24obm9kZSwgdmFsdWUpIHtcbiAgICAgIGlmIChjID0gbm9kZS5jbGFzc0xpc3QpIHJldHVybiB2YWx1ZSA/IGMuYWRkKG5hbWUpIDogYy5yZW1vdmUobmFtZSk7XG4gICAgICB2YXIgYyA9IG5vZGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikgfHwgXCJcIjtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICByZS5sYXN0SW5kZXggPSAwO1xuICAgICAgICBpZiAoIXJlLnRlc3QoYykpIG5vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgZDNfY29sbGFwc2UoYyArIFwiIFwiICsgbmFtZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBkM19jb2xsYXBzZShjLnJlcGxhY2UocmUsIFwiIFwiKSkpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnN0eWxlID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGlmIChuIDwgMykge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChuIDwgMikgdmFsdWUgPSBcIlwiO1xuICAgICAgICBmb3IgKHByaW9yaXR5IGluIG5hbWUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fc3R5bGUocHJpb3JpdHksIG5hbWVbcHJpb3JpdHldLCB2YWx1ZSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGlmIChuIDwgMikge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMubm9kZSgpO1xuICAgICAgICByZXR1cm4gZDNfd2luZG93KG5vZGUpLmdldENvbXB1dGVkU3R5bGUobm9kZSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKTtcbiAgICAgIH1cbiAgICAgIHByaW9yaXR5ID0gXCJcIjtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fc3R5bGUobmFtZSwgdmFsdWUsIHByaW9yaXR5KSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9zdHlsZShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICBmdW5jdGlvbiBzdHlsZU51bGwoKSB7XG4gICAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdHlsZUNvbnN0YW50KCkge1xuICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHggPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgaWYgKHggPT0gbnVsbCkgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTsgZWxzZSB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHgsIHByaW9yaXR5KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBzdHlsZU51bGwgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHN0eWxlRnVuY3Rpb24gOiBzdHlsZUNvbnN0YW50O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5wcm9wZXJ0eSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHJldHVybiB0aGlzLm5vZGUoKVtuYW1lXTtcbiAgICAgIGZvciAodmFsdWUgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9wcm9wZXJ0eSh2YWx1ZSwgbmFtZVt2YWx1ZV0pKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9wcm9wZXJ0eShuYW1lLCB2YWx1ZSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fcHJvcGVydHkobmFtZSwgdmFsdWUpIHtcbiAgICBmdW5jdGlvbiBwcm9wZXJ0eU51bGwoKSB7XG4gICAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcHJvcGVydHlDb25zdGFudCgpIHtcbiAgICAgIHRoaXNbbmFtZV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcHJvcGVydHlGdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIGRlbGV0ZSB0aGlzW25hbWVdOyBlbHNlIHRoaXNbbmFtZV0gPSB4O1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHByb3BlcnR5TnVsbCA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gcHJvcGVydHlGdW5jdGlvbiA6IHByb3BlcnR5Q29uc3RhbnQ7XG4gIH1cbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gICAgfSA6IHZhbHVlID09IG51bGwgPyBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIH0gOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgICB9KSA6IHRoaXMubm9kZSgpLnRleHRDb250ZW50O1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaHRtbCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2godHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHRoaXMuaW5uZXJIVE1MID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gICAgfSA6IHZhbHVlID09IG51bGwgPyBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuaW5uZXJIVE1MID0gXCJcIjtcbiAgICB9IDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmlubmVySFRNTCA9IHZhbHVlO1xuICAgIH0pIDogdGhpcy5ub2RlKCkuaW5uZXJIVE1MO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuYXBwZW5kID0gZnVuY3Rpb24obmFtZSkge1xuICAgIG5hbWUgPSBkM19zZWxlY3Rpb25fY3JlYXRvcihuYW1lKTtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChuYW1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIH0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fY3JlYXRvcihuYW1lKSB7XG4gICAgZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgdmFyIGRvY3VtZW50ID0gdGhpcy5vd25lckRvY3VtZW50LCBuYW1lc3BhY2UgPSB0aGlzLm5hbWVzcGFjZVVSSTtcbiAgICAgIHJldHVybiBuYW1lc3BhY2UgPT09IGQzX25zWGh0bWwgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSA9PT0gZDNfbnNYaHRtbCA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSkgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMobmFtZXNwYWNlLCBuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlTlMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVvZiBuYW1lID09PSBcImZ1bmN0aW9uXCIgPyBuYW1lIDogKG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWUpKS5sb2NhbCA/IGNyZWF0ZU5TIDogY3JlYXRlO1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbihuYW1lLCBiZWZvcmUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSk7XG4gICAgYmVmb3JlID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yKGJlZm9yZSk7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKG5hbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgYmVmb3JlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgbnVsbCk7XG4gICAgfSk7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGQzX3NlbGVjdGlvblJlbW92ZSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvblJlbW92ZSgpIHtcbiAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZGF0YSA9IGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gdGhpcy5sZW5ndGgsIGdyb3VwLCBub2RlO1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgdmFsdWUgPSBuZXcgQXJyYXkobiA9IChncm91cCA9IHRoaXNbMF0pLmxlbmd0aCk7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgdmFsdWVbaV0gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmQoZ3JvdXAsIGdyb3VwRGF0YSkge1xuICAgICAgdmFyIGksIG4gPSBncm91cC5sZW5ndGgsIG0gPSBncm91cERhdGEubGVuZ3RoLCBuMCA9IE1hdGgubWluKG4sIG0pLCB1cGRhdGVOb2RlcyA9IG5ldyBBcnJheShtKSwgZW50ZXJOb2RlcyA9IG5ldyBBcnJheShtKSwgZXhpdE5vZGVzID0gbmV3IEFycmF5KG4pLCBub2RlLCBub2RlRGF0YTtcbiAgICAgIGlmIChrZXkpIHtcbiAgICAgICAgdmFyIG5vZGVCeUtleVZhbHVlID0gbmV3IGQzX01hcCgpLCBrZXlWYWx1ZXMgPSBuZXcgQXJyYXkobiksIGtleVZhbHVlO1xuICAgICAgICBmb3IgKGkgPSAtMTsgKytpIDwgbjsgKSB7XG4gICAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgICAgaWYgKG5vZGVCeUtleVZhbHVlLmhhcyhrZXlWYWx1ZSA9IGtleS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGkpKSkge1xuICAgICAgICAgICAgICBleGl0Tm9kZXNbaV0gPSBub2RlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbm9kZUJ5S2V5VmFsdWUuc2V0KGtleVZhbHVlLCBub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGtleVZhbHVlc1tpXSA9IGtleVZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkgPSAtMTsgKytpIDwgbTsgKSB7XG4gICAgICAgICAgaWYgKCEobm9kZSA9IG5vZGVCeUtleVZhbHVlLmdldChrZXlWYWx1ZSA9IGtleS5jYWxsKGdyb3VwRGF0YSwgbm9kZURhdGEgPSBncm91cERhdGFbaV0sIGkpKSkpIHtcbiAgICAgICAgICAgIGVudGVyTm9kZXNbaV0gPSBkM19zZWxlY3Rpb25fZGF0YU5vZGUobm9kZURhdGEpO1xuICAgICAgICAgIH0gZWxzZSBpZiAobm9kZSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgdXBkYXRlTm9kZXNbaV0gPSBub2RlO1xuICAgICAgICAgICAgbm9kZS5fX2RhdGFfXyA9IG5vZGVEYXRhO1xuICAgICAgICAgIH1cbiAgICAgICAgICBub2RlQnlLZXlWYWx1ZS5zZXQoa2V5VmFsdWUsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBuOyApIHtcbiAgICAgICAgICBpZiAoaSBpbiBrZXlWYWx1ZXMgJiYgbm9kZUJ5S2V5VmFsdWUuZ2V0KGtleVZhbHVlc1tpXSkgIT09IHRydWUpIHtcbiAgICAgICAgICAgIGV4aXROb2Rlc1tpXSA9IGdyb3VwW2ldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG4wOyApIHtcbiAgICAgICAgICBub2RlID0gZ3JvdXBbaV07XG4gICAgICAgICAgbm9kZURhdGEgPSBncm91cERhdGFbaV07XG4gICAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUuX19kYXRhX18gPSBub2RlRGF0YTtcbiAgICAgICAgICAgIHVwZGF0ZU5vZGVzW2ldID0gbm9kZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZW50ZXJOb2Rlc1tpXSA9IGQzX3NlbGVjdGlvbl9kYXRhTm9kZShub2RlRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoO2kgPCBtOyArK2kpIHtcbiAgICAgICAgICBlbnRlck5vZGVzW2ldID0gZDNfc2VsZWN0aW9uX2RhdGFOb2RlKGdyb3VwRGF0YVtpXSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICg7aSA8IG47ICsraSkge1xuICAgICAgICAgIGV4aXROb2Rlc1tpXSA9IGdyb3VwW2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbnRlck5vZGVzLnVwZGF0ZSA9IHVwZGF0ZU5vZGVzO1xuICAgICAgZW50ZXJOb2Rlcy5wYXJlbnROb2RlID0gdXBkYXRlTm9kZXMucGFyZW50Tm9kZSA9IGV4aXROb2Rlcy5wYXJlbnROb2RlID0gZ3JvdXAucGFyZW50Tm9kZTtcbiAgICAgIGVudGVyLnB1c2goZW50ZXJOb2Rlcyk7XG4gICAgICB1cGRhdGUucHVzaCh1cGRhdGVOb2Rlcyk7XG4gICAgICBleGl0LnB1c2goZXhpdE5vZGVzKTtcbiAgICB9XG4gICAgdmFyIGVudGVyID0gZDNfc2VsZWN0aW9uX2VudGVyKFtdKSwgdXBkYXRlID0gZDNfc2VsZWN0aW9uKFtdKSwgZXhpdCA9IGQzX3NlbGVjdGlvbihbXSk7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBiaW5kKGdyb3VwID0gdGhpc1tpXSwgdmFsdWUuY2FsbChncm91cCwgZ3JvdXAucGFyZW50Tm9kZS5fX2RhdGFfXywgaSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBiaW5kKGdyb3VwID0gdGhpc1tpXSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUuZW50ZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBlbnRlcjtcbiAgICB9O1xuICAgIHVwZGF0ZS5leGl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZXhpdDtcbiAgICB9O1xuICAgIHJldHVybiB1cGRhdGU7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9kYXRhTm9kZShkYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIF9fZGF0YV9fOiBkYXRhXG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZGF0dW0gPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIsIHZhbHVlKSA6IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKGZpbHRlcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIGdyb3VwLCBub2RlO1xuICAgIGlmICh0eXBlb2YgZmlsdGVyICE9PSBcImZ1bmN0aW9uXCIpIGZpbHRlciA9IGQzX3NlbGVjdGlvbl9maWx0ZXIoZmlsdGVyKTtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IHRoaXMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSAoZ3JvdXAgPSB0aGlzW2pdKS5wYXJlbnROb2RlO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIGZpbHRlci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9maWx0ZXIoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0TWF0Y2hlcyh0aGlzLCBzZWxlY3Rvcik7XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUub3JkZXIgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSBncm91cC5sZW5ndGggLSAxLCBuZXh0ID0gZ3JvdXBbaV0sIG5vZGU7IC0taSA+PSAwOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIGlmIChuZXh0ICYmIG5leHQgIT09IG5vZGUubmV4dFNpYmxpbmcpIG5leHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgbmV4dCk7XG4gICAgICAgICAgbmV4dCA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zb3J0ID0gZnVuY3Rpb24oY29tcGFyYXRvcikge1xuICAgIGNvbXBhcmF0b3IgPSBkM19zZWxlY3Rpb25fc29ydENvbXBhcmF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB0aGlzW2pdLnNvcnQoY29tcGFyYXRvcik7XG4gICAgcmV0dXJuIHRoaXMub3JkZXIoKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3NvcnRDb21wYXJhdG9yKGNvbXBhcmF0b3IpIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIGNvbXBhcmF0b3IgPSBkM19hc2NlbmRpbmc7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIHJldHVybiBhICYmIGIgPyBjb21wYXJhdG9yKGEuX19kYXRhX18sIGIuX19kYXRhX18pIDogIWEgLSAhYjtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5lYWNoID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgY2FsbGJhY2suY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKTtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2VhY2goZ3JvdXBzLCBjYWxsYmFjaykge1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrKG5vZGUsIGksIGopO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ3JvdXBzO1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB2YXIgYXJncyA9IGQzX2FycmF5KGFyZ3VtZW50cyk7XG4gICAgY2FsbGJhY2suYXBwbHkoYXJnc1swXSA9IHRoaXMsIGFyZ3MpO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gIXRoaXMubm9kZSgpO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUubm9kZSA9IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gdGhpcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgICAgaWYgKG5vZGUpIHJldHVybiBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbiA9IDA7XG4gICAgZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24oKSB7XG4gICAgICArK247XG4gICAgfSk7XG4gICAgcmV0dXJuIG47XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9lbnRlcihzZWxlY3Rpb24pIHtcbiAgICBkM19zdWJjbGFzcyhzZWxlY3Rpb24sIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZSk7XG4gICAgcmV0dXJuIHNlbGVjdGlvbjtcbiAgfVxuICB2YXIgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlID0gW107XG4gIGQzLnNlbGVjdGlvbi5lbnRlciA9IGQzX3NlbGVjdGlvbl9lbnRlcjtcbiAgZDMuc2VsZWN0aW9uLmVudGVyLnByb3RvdHlwZSA9IGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLmFwcGVuZCA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5hcHBlbmQ7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5lbXB0eSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5lbXB0eTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLm5vZGUgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUubm9kZTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLmNhbGwgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2FsbDtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLnNpemUgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2l6ZTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLnNlbGVjdCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gICAgdmFyIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgc3Vibm9kZSwgdXBncm91cCwgZ3JvdXAsIG5vZGU7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgdXBncm91cCA9IChncm91cCA9IHRoaXNbal0pLnVwZGF0ZTtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgc3ViZ3JvdXAucGFyZW50Tm9kZSA9IGdyb3VwLnBhcmVudE5vZGU7XG4gICAgICBmb3IgKHZhciBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaCh1cGdyb3VwW2ldID0gc3Vibm9kZSA9IHNlbGVjdG9yLmNhbGwoZ3JvdXAucGFyZW50Tm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpO1xuICAgICAgICAgIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihzdWJncm91cHMpO1xuICB9O1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuaW5zZXJ0ID0gZnVuY3Rpb24obmFtZSwgYmVmb3JlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBiZWZvcmUgPSBkM19zZWxlY3Rpb25fZW50ZXJJbnNlcnRCZWZvcmUodGhpcyk7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvblByb3RvdHlwZS5pbnNlcnQuY2FsbCh0aGlzLCBuYW1lLCBiZWZvcmUpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZW50ZXJJbnNlcnRCZWZvcmUoZW50ZXIpIHtcbiAgICB2YXIgaTAsIGowO1xuICAgIHJldHVybiBmdW5jdGlvbihkLCBpLCBqKSB7XG4gICAgICB2YXIgZ3JvdXAgPSBlbnRlcltqXS51cGRhdGUsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7XG4gICAgICBpZiAoaiAhPSBqMCkgajAgPSBqLCBpMCA9IDA7XG4gICAgICBpZiAoaSA+PSBpMCkgaTAgPSBpICsgMTtcbiAgICAgIHdoaWxlICghKG5vZGUgPSBncm91cFtpMF0pICYmICsraTAgPCBuKSA7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICB9XG4gIGQzLnNlbGVjdCA9IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgZ3JvdXA7XG4gICAgaWYgKHR5cGVvZiBub2RlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBncm91cCA9IFsgZDNfc2VsZWN0KG5vZGUsIGQzX2RvY3VtZW50KSBdO1xuICAgICAgZ3JvdXAucGFyZW50Tm9kZSA9IGQzX2RvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgZ3JvdXAgPSBbIG5vZGUgXTtcbiAgICAgIGdyb3VwLnBhcmVudE5vZGUgPSBkM19kb2N1bWVudEVsZW1lbnQobm9kZSk7XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oWyBncm91cCBdKTtcbiAgfTtcbiAgZDMuc2VsZWN0QWxsID0gZnVuY3Rpb24obm9kZXMpIHtcbiAgICB2YXIgZ3JvdXA7XG4gICAgaWYgKHR5cGVvZiBub2RlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgZ3JvdXAgPSBkM19hcnJheShkM19zZWxlY3RBbGwobm9kZXMsIGQzX2RvY3VtZW50KSk7XG4gICAgICBncm91cC5wYXJlbnROb2RlID0gZDNfZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICBncm91cCA9IGQzX2FycmF5KG5vZGVzKTtcbiAgICAgIGdyb3VwLnBhcmVudE5vZGUgPSBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKFsgZ3JvdXAgXSk7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XG4gICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGlmIChuIDwgMykge1xuICAgICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChuIDwgMikgbGlzdGVuZXIgPSBmYWxzZTtcbiAgICAgICAgZm9yIChjYXB0dXJlIGluIHR5cGUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fb24oY2FwdHVyZSwgdHlwZVtjYXB0dXJlXSwgbGlzdGVuZXIpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICBpZiAobiA8IDIpIHJldHVybiAobiA9IHRoaXMubm9kZSgpW1wiX19vblwiICsgdHlwZV0pICYmIG4uXztcbiAgICAgIGNhcHR1cmUgPSBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fb24odHlwZSwgbGlzdGVuZXIsIGNhcHR1cmUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX29uKHR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XG4gICAgdmFyIG5hbWUgPSBcIl9fb25cIiArIHR5cGUsIGkgPSB0eXBlLmluZGV4T2YoXCIuXCIpLCB3cmFwID0gZDNfc2VsZWN0aW9uX29uTGlzdGVuZXI7XG4gICAgaWYgKGkgPiAwKSB0eXBlID0gdHlwZS5zbGljZSgwLCBpKTtcbiAgICB2YXIgZmlsdGVyID0gZDNfc2VsZWN0aW9uX29uRmlsdGVycy5nZXQodHlwZSk7XG4gICAgaWYgKGZpbHRlcikgdHlwZSA9IGZpbHRlciwgd3JhcCA9IGQzX3NlbGVjdGlvbl9vbkZpbHRlcjtcbiAgICBmdW5jdGlvbiBvblJlbW92ZSgpIHtcbiAgICAgIHZhciBsID0gdGhpc1tuYW1lXTtcbiAgICAgIGlmIChsKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBsLCBsLiQpO1xuICAgICAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25BZGQoKSB7XG4gICAgICB2YXIgbCA9IHdyYXAobGlzdGVuZXIsIGQzX2FycmF5KGFyZ3VtZW50cykpO1xuICAgICAgb25SZW1vdmUuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCB0aGlzW25hbWVdID0gbCwgbC4kID0gY2FwdHVyZSk7XG4gICAgICBsLl8gPSBsaXN0ZW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVtb3ZlQWxsKCkge1xuICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cChcIl5fX29uKFteLl0rKVwiICsgZDMucmVxdW90ZSh0eXBlKSArIFwiJFwiKSwgbWF0Y2g7XG4gICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgaWYgKG1hdGNoID0gbmFtZS5tYXRjaChyZSkpIHtcbiAgICAgICAgICB2YXIgbCA9IHRoaXNbbmFtZV07XG4gICAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG1hdGNoWzFdLCBsLCBsLiQpO1xuICAgICAgICAgIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpID8gbGlzdGVuZXIgPyBvbkFkZCA6IG9uUmVtb3ZlIDogbGlzdGVuZXIgPyBkM19ub29wIDogcmVtb3ZlQWxsO1xuICB9XG4gIHZhciBkM19zZWxlY3Rpb25fb25GaWx0ZXJzID0gZDMubWFwKHtcbiAgICBtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuICAgIG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIlxuICB9KTtcbiAgaWYgKGQzX2RvY3VtZW50KSB7XG4gICAgZDNfc2VsZWN0aW9uX29uRmlsdGVycy5mb3JFYWNoKGZ1bmN0aW9uKGspIHtcbiAgICAgIGlmIChcIm9uXCIgKyBrIGluIGQzX2RvY3VtZW50KSBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLnJlbW92ZShrKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fb25MaXN0ZW5lcihsaXN0ZW5lciwgYXJndW1lbnR6KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBvID0gZDMuZXZlbnQ7XG4gICAgICBkMy5ldmVudCA9IGU7XG4gICAgICBhcmd1bWVudHpbMF0gPSB0aGlzLl9fZGF0YV9fO1xuICAgICAgdHJ5IHtcbiAgICAgICAgbGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnR6KTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzLmV2ZW50ID0gbztcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9vbkZpbHRlcihsaXN0ZW5lciwgYXJndW1lbnR6KSB7XG4gICAgdmFyIGwgPSBkM19zZWxlY3Rpb25fb25MaXN0ZW5lcihsaXN0ZW5lciwgYXJndW1lbnR6KTtcbiAgICByZXR1cm4gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIHRhcmdldCA9IHRoaXMsIHJlbGF0ZWQgPSBlLnJlbGF0ZWRUYXJnZXQ7XG4gICAgICBpZiAoIXJlbGF0ZWQgfHwgcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICEocmVsYXRlZC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0YXJnZXQpICYgOCkpIHtcbiAgICAgICAgbC5jYWxsKHRhcmdldCwgZSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZXZlbnRfZHJhZ1NlbGVjdCwgZDNfZXZlbnRfZHJhZ0lkID0gMDtcbiAgZnVuY3Rpb24gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKG5vZGUpIHtcbiAgICB2YXIgbmFtZSA9IFwiLmRyYWdzdXBwcmVzcy1cIiArICsrZDNfZXZlbnRfZHJhZ0lkLCBjbGljayA9IFwiY2xpY2tcIiArIG5hbWUsIHcgPSBkMy5zZWxlY3QoZDNfd2luZG93KG5vZGUpKS5vbihcInRvdWNobW92ZVwiICsgbmFtZSwgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCkub24oXCJkcmFnc3RhcnRcIiArIG5hbWUsIGQzX2V2ZW50UHJldmVudERlZmF1bHQpLm9uKFwic2VsZWN0c3RhcnRcIiArIG5hbWUsIGQzX2V2ZW50UHJldmVudERlZmF1bHQpO1xuICAgIGlmIChkM19ldmVudF9kcmFnU2VsZWN0ID09IG51bGwpIHtcbiAgICAgIGQzX2V2ZW50X2RyYWdTZWxlY3QgPSBcIm9uc2VsZWN0c3RhcnRcIiBpbiBub2RlID8gZmFsc2UgOiBkM192ZW5kb3JTeW1ib2wobm9kZS5zdHlsZSwgXCJ1c2VyU2VsZWN0XCIpO1xuICAgIH1cbiAgICBpZiAoZDNfZXZlbnRfZHJhZ1NlbGVjdCkge1xuICAgICAgdmFyIHN0eWxlID0gZDNfZG9jdW1lbnRFbGVtZW50KG5vZGUpLnN0eWxlLCBzZWxlY3QgPSBzdHlsZVtkM19ldmVudF9kcmFnU2VsZWN0XTtcbiAgICAgIHN0eWxlW2QzX2V2ZW50X2RyYWdTZWxlY3RdID0gXCJub25lXCI7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihzdXBwcmVzc0NsaWNrKSB7XG4gICAgICB3Lm9uKG5hbWUsIG51bGwpO1xuICAgICAgaWYgKGQzX2V2ZW50X2RyYWdTZWxlY3QpIHN0eWxlW2QzX2V2ZW50X2RyYWdTZWxlY3RdID0gc2VsZWN0O1xuICAgICAgaWYgKHN1cHByZXNzQ2xpY2spIHtcbiAgICAgICAgdmFyIG9mZiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHcub24oY2xpY2ssIG51bGwpO1xuICAgICAgICB9O1xuICAgICAgICB3Lm9uKGNsaWNrLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBkM19ldmVudFByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgb2ZmKCk7XG4gICAgICAgIH0sIHRydWUpO1xuICAgICAgICBzZXRUaW1lb3V0KG9mZiwgMCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBkMy5tb3VzZSA9IGZ1bmN0aW9uKGNvbnRhaW5lcikge1xuICAgIHJldHVybiBkM19tb3VzZVBvaW50KGNvbnRhaW5lciwgZDNfZXZlbnRTb3VyY2UoKSk7XG4gIH07XG4gIHZhciBkM19tb3VzZV9idWc0NDA4MyA9IHRoaXMubmF2aWdhdG9yICYmIC9XZWJLaXQvLnRlc3QodGhpcy5uYXZpZ2F0b3IudXNlckFnZW50KSA/IC0xIDogMDtcbiAgZnVuY3Rpb24gZDNfbW91c2VQb2ludChjb250YWluZXIsIGUpIHtcbiAgICBpZiAoZS5jaGFuZ2VkVG91Y2hlcykgZSA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XG4gICAgdmFyIHN2ZyA9IGNvbnRhaW5lci5vd25lclNWR0VsZW1lbnQgfHwgY29udGFpbmVyO1xuICAgIGlmIChzdmcuY3JlYXRlU1ZHUG9pbnQpIHtcbiAgICAgIHZhciBwb2ludCA9IHN2Zy5jcmVhdGVTVkdQb2ludCgpO1xuICAgICAgaWYgKGQzX21vdXNlX2J1ZzQ0MDgzIDwgMCkge1xuICAgICAgICB2YXIgd2luZG93ID0gZDNfd2luZG93KGNvbnRhaW5lcik7XG4gICAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWCB8fCB3aW5kb3cuc2Nyb2xsWSkge1xuICAgICAgICAgIHN2ZyA9IGQzLnNlbGVjdChcImJvZHlcIikuYXBwZW5kKFwic3ZnXCIpLnN0eWxlKHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgICAgIGJvcmRlcjogXCJub25lXCJcbiAgICAgICAgICB9LCBcImltcG9ydGFudFwiKTtcbiAgICAgICAgICB2YXIgY3RtID0gc3ZnWzBdWzBdLmdldFNjcmVlbkNUTSgpO1xuICAgICAgICAgIGQzX21vdXNlX2J1ZzQ0MDgzID0gIShjdG0uZiB8fCBjdG0uZSk7XG4gICAgICAgICAgc3ZnLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZDNfbW91c2VfYnVnNDQwODMpIHBvaW50LnggPSBlLnBhZ2VYLCBwb2ludC55ID0gZS5wYWdlWTsgZWxzZSBwb2ludC54ID0gZS5jbGllbnRYLCBcbiAgICAgIHBvaW50LnkgPSBlLmNsaWVudFk7XG4gICAgICBwb2ludCA9IHBvaW50Lm1hdHJpeFRyYW5zZm9ybShjb250YWluZXIuZ2V0U2NyZWVuQ1RNKCkuaW52ZXJzZSgpKTtcbiAgICAgIHJldHVybiBbIHBvaW50LngsIHBvaW50LnkgXTtcbiAgICB9XG4gICAgdmFyIHJlY3QgPSBjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmV0dXJuIFsgZS5jbGllbnRYIC0gcmVjdC5sZWZ0IC0gY29udGFpbmVyLmNsaWVudExlZnQsIGUuY2xpZW50WSAtIHJlY3QudG9wIC0gY29udGFpbmVyLmNsaWVudFRvcCBdO1xuICB9XG4gIGQzLnRvdWNoID0gZnVuY3Rpb24oY29udGFpbmVyLCB0b3VjaGVzLCBpZGVudGlmaWVyKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBpZGVudGlmaWVyID0gdG91Y2hlcywgdG91Y2hlcyA9IGQzX2V2ZW50U291cmNlKCkuY2hhbmdlZFRvdWNoZXM7XG4gICAgaWYgKHRvdWNoZXMpIGZvciAodmFyIGkgPSAwLCBuID0gdG91Y2hlcy5sZW5ndGgsIHRvdWNoOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHRvdWNoID0gdG91Y2hlc1tpXSkuaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgICByZXR1cm4gZDNfbW91c2VQb2ludChjb250YWluZXIsIHRvdWNoKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIGQzLmJlaGF2aW9yLmRyYWcgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZXZlbnQgPSBkM19ldmVudERpc3BhdGNoKGRyYWcsIFwiZHJhZ1wiLCBcImRyYWdzdGFydFwiLCBcImRyYWdlbmRcIiksIG9yaWdpbiA9IG51bGwsIG1vdXNlZG93biA9IGRyYWdzdGFydChkM19ub29wLCBkMy5tb3VzZSwgZDNfd2luZG93LCBcIm1vdXNlbW92ZVwiLCBcIm1vdXNldXBcIiksIHRvdWNoc3RhcnQgPSBkcmFnc3RhcnQoZDNfYmVoYXZpb3JfZHJhZ1RvdWNoSWQsIGQzLnRvdWNoLCBkM19pZGVudGl0eSwgXCJ0b3VjaG1vdmVcIiwgXCJ0b3VjaGVuZFwiKTtcbiAgICBmdW5jdGlvbiBkcmFnKCkge1xuICAgICAgdGhpcy5vbihcIm1vdXNlZG93bi5kcmFnXCIsIG1vdXNlZG93bikub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRyYWdzdGFydChpZCwgcG9zaXRpb24sIHN1YmplY3QsIG1vdmUsIGVuZCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXMsIHRhcmdldCA9IGQzLmV2ZW50LnRhcmdldC5jb3JyZXNwb25kaW5nRWxlbWVudCB8fCBkMy5ldmVudC50YXJnZXQsIHBhcmVudCA9IHRoYXQucGFyZW50Tm9kZSwgZGlzcGF0Y2ggPSBldmVudC5vZih0aGF0LCBhcmd1bWVudHMpLCBkcmFnZ2VkID0gMCwgZHJhZ0lkID0gaWQoKSwgZHJhZ05hbWUgPSBcIi5kcmFnXCIgKyAoZHJhZ0lkID09IG51bGwgPyBcIlwiIDogXCItXCIgKyBkcmFnSWQpLCBkcmFnT2Zmc2V0LCBkcmFnU3ViamVjdCA9IGQzLnNlbGVjdChzdWJqZWN0KHRhcmdldCkpLm9uKG1vdmUgKyBkcmFnTmFtZSwgbW92ZWQpLm9uKGVuZCArIGRyYWdOYW1lLCBlbmRlZCksIGRyYWdSZXN0b3JlID0gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKHRhcmdldCksIHBvc2l0aW9uMCA9IHBvc2l0aW9uKHBhcmVudCwgZHJhZ0lkKTtcbiAgICAgICAgaWYgKG9yaWdpbikge1xuICAgICAgICAgIGRyYWdPZmZzZXQgPSBvcmlnaW4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgICAgICAgICBkcmFnT2Zmc2V0ID0gWyBkcmFnT2Zmc2V0LnggLSBwb3NpdGlvbjBbMF0sIGRyYWdPZmZzZXQueSAtIHBvc2l0aW9uMFsxXSBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRyYWdPZmZzZXQgPSBbIDAsIDAgXTtcbiAgICAgICAgfVxuICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogXCJkcmFnc3RhcnRcIlxuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gbW92ZWQoKSB7XG4gICAgICAgICAgdmFyIHBvc2l0aW9uMSA9IHBvc2l0aW9uKHBhcmVudCwgZHJhZ0lkKSwgZHgsIGR5O1xuICAgICAgICAgIGlmICghcG9zaXRpb24xKSByZXR1cm47XG4gICAgICAgICAgZHggPSBwb3NpdGlvbjFbMF0gLSBwb3NpdGlvbjBbMF07XG4gICAgICAgICAgZHkgPSBwb3NpdGlvbjFbMV0gLSBwb3NpdGlvbjBbMV07XG4gICAgICAgICAgZHJhZ2dlZCB8PSBkeCB8IGR5O1xuICAgICAgICAgIHBvc2l0aW9uMCA9IHBvc2l0aW9uMTtcbiAgICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiBcImRyYWdcIixcbiAgICAgICAgICAgIHg6IHBvc2l0aW9uMVswXSArIGRyYWdPZmZzZXRbMF0sXG4gICAgICAgICAgICB5OiBwb3NpdGlvbjFbMV0gKyBkcmFnT2Zmc2V0WzFdLFxuICAgICAgICAgICAgZHg6IGR4LFxuICAgICAgICAgICAgZHk6IGR5XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZW5kZWQoKSB7XG4gICAgICAgICAgaWYgKCFwb3NpdGlvbihwYXJlbnQsIGRyYWdJZCkpIHJldHVybjtcbiAgICAgICAgICBkcmFnU3ViamVjdC5vbihtb3ZlICsgZHJhZ05hbWUsIG51bGwpLm9uKGVuZCArIGRyYWdOYW1lLCBudWxsKTtcbiAgICAgICAgICBkcmFnUmVzdG9yZShkcmFnZ2VkKTtcbiAgICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiBcImRyYWdlbmRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBkcmFnLm9yaWdpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yaWdpbjtcbiAgICAgIG9yaWdpbiA9IHg7XG4gICAgICByZXR1cm4gZHJhZztcbiAgICB9O1xuICAgIHJldHVybiBkMy5yZWJpbmQoZHJhZywgZXZlbnQsIFwib25cIik7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2JlaGF2aW9yX2RyYWdUb3VjaElkKCkge1xuICAgIHJldHVybiBkMy5ldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5pZGVudGlmaWVyO1xuICB9XG4gIGQzLnRvdWNoZXMgPSBmdW5jdGlvbihjb250YWluZXIsIHRvdWNoZXMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHRvdWNoZXMgPSBkM19ldmVudFNvdXJjZSgpLnRvdWNoZXM7XG4gICAgcmV0dXJuIHRvdWNoZXMgPyBkM19hcnJheSh0b3VjaGVzKS5tYXAoZnVuY3Rpb24odG91Y2gpIHtcbiAgICAgIHZhciBwb2ludCA9IGQzX21vdXNlUG9pbnQoY29udGFpbmVyLCB0b3VjaCk7XG4gICAgICBwb2ludC5pZGVudGlmaWVyID0gdG91Y2guaWRlbnRpZmllcjtcbiAgICAgIHJldHVybiBwb2ludDtcbiAgICB9KSA6IFtdO1xuICB9O1xuICB2YXIgzrUgPSAxZS02LCDOtTIgPSDOtSAqIM61LCDPgCA9IE1hdGguUEksIM+EID0gMiAqIM+ALCDPhM61ID0gz4QgLSDOtSwgaGFsZs+AID0gz4AgLyAyLCBkM19yYWRpYW5zID0gz4AgLyAxODAsIGQzX2RlZ3JlZXMgPSAxODAgLyDPgDtcbiAgZnVuY3Rpb24gZDNfc2duKHgpIHtcbiAgICByZXR1cm4geCA+IDAgPyAxIDogeCA8IDAgPyAtMSA6IDA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfY3Jvc3MyZChhLCBiLCBjKSB7XG4gICAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pIC0gKGJbMV0gLSBhWzFdKSAqIChjWzBdIC0gYVswXSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfYWNvcyh4KSB7XG4gICAgcmV0dXJuIHggPiAxID8gMCA6IHggPCAtMSA/IM+AIDogTWF0aC5hY29zKHgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2FzaW4oeCkge1xuICAgIHJldHVybiB4ID4gMSA/IGhhbGbPgCA6IHggPCAtMSA/IC1oYWxmz4AgOiBNYXRoLmFzaW4oeCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2luaCh4KSB7XG4gICAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSAtIDEgLyB4KSAvIDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfY29zaCh4KSB7XG4gICAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSArIDEgLyB4KSAvIDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGFuaCh4KSB7XG4gICAgcmV0dXJuICgoeCA9IE1hdGguZXhwKDIgKiB4KSkgLSAxKSAvICh4ICsgMSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfaGF2ZXJzaW4oeCkge1xuICAgIHJldHVybiAoeCA9IE1hdGguc2luKHggLyAyKSkgKiB4O1xuICB9XG4gIHZhciDPgSA9IE1hdGguU1FSVDIsIM+BMiA9IDIsIM+BNCA9IDQ7XG4gIGQzLmludGVycG9sYXRlWm9vbSA9IGZ1bmN0aW9uKHAwLCBwMSkge1xuICAgIHZhciB1eDAgPSBwMFswXSwgdXkwID0gcDBbMV0sIHcwID0gcDBbMl0sIHV4MSA9IHAxWzBdLCB1eTEgPSBwMVsxXSwgdzEgPSBwMVsyXSwgZHggPSB1eDEgLSB1eDAsIGR5ID0gdXkxIC0gdXkwLCBkMiA9IGR4ICogZHggKyBkeSAqIGR5LCBpLCBTO1xuICAgIGlmIChkMiA8IM61Mikge1xuICAgICAgUyA9IE1hdGgubG9nKHcxIC8gdzApIC8gz4E7XG4gICAgICBpID0gZnVuY3Rpb24odCkge1xuICAgICAgICByZXR1cm4gWyB1eDAgKyB0ICogZHgsIHV5MCArIHQgKiBkeSwgdzAgKiBNYXRoLmV4cCjPgSAqIHQgKiBTKSBdO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGQxID0gTWF0aC5zcXJ0KGQyKSwgYjAgPSAodzEgKiB3MSAtIHcwICogdzAgKyDPgTQgKiBkMikgLyAoMiAqIHcwICogz4EyICogZDEpLCBiMSA9ICh3MSAqIHcxIC0gdzAgKiB3MCAtIM+BNCAqIGQyKSAvICgyICogdzEgKiDPgTIgKiBkMSksIHIwID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIwICogYjAgKyAxKSAtIGIwKSwgcjEgPSBNYXRoLmxvZyhNYXRoLnNxcnQoYjEgKiBiMSArIDEpIC0gYjEpO1xuICAgICAgUyA9IChyMSAtIHIwKSAvIM+BO1xuICAgICAgaSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdmFyIHMgPSB0ICogUywgY29zaHIwID0gZDNfY29zaChyMCksIHUgPSB3MCAvICjPgTIgKiBkMSkgKiAoY29zaHIwICogZDNfdGFuaCjPgSAqIHMgKyByMCkgLSBkM19zaW5oKHIwKSk7XG4gICAgICAgIHJldHVybiBbIHV4MCArIHUgKiBkeCwgdXkwICsgdSAqIGR5LCB3MCAqIGNvc2hyMCAvIGQzX2Nvc2goz4EgKiBzICsgcjApIF07XG4gICAgICB9O1xuICAgIH1cbiAgICBpLmR1cmF0aW9uID0gUyAqIDFlMztcbiAgICByZXR1cm4gaTtcbiAgfTtcbiAgZDMuYmVoYXZpb3Iuem9vbSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2aWV3ID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDAsXG4gICAgICBrOiAxXG4gICAgfSwgdHJhbnNsYXRlMCwgY2VudGVyMCwgY2VudGVyLCBzaXplID0gWyA5NjAsIDUwMCBdLCBzY2FsZUV4dGVudCA9IGQzX2JlaGF2aW9yX3pvb21JbmZpbml0eSwgZHVyYXRpb24gPSAyNTAsIHpvb21pbmcgPSAwLCBtb3VzZWRvd24gPSBcIm1vdXNlZG93bi56b29tXCIsIG1vdXNlbW92ZSA9IFwibW91c2Vtb3ZlLnpvb21cIiwgbW91c2V1cCA9IFwibW91c2V1cC56b29tXCIsIG1vdXNld2hlZWxUaW1lciwgdG91Y2hzdGFydCA9IFwidG91Y2hzdGFydC56b29tXCIsIHRvdWNodGltZSwgZXZlbnQgPSBkM19ldmVudERpc3BhdGNoKHpvb20sIFwiem9vbXN0YXJ0XCIsIFwiem9vbVwiLCBcInpvb21lbmRcIiksIHgwLCB4MSwgeTAsIHkxO1xuICAgIGlmICghZDNfYmVoYXZpb3Jfem9vbVdoZWVsKSB7XG4gICAgICBkM19iZWhhdmlvcl96b29tV2hlZWwgPSBcIm9ud2hlZWxcIiBpbiBkM19kb2N1bWVudCA/IChkM19iZWhhdmlvcl96b29tRGVsdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIC1kMy5ldmVudC5kZWx0YVkgKiAoZDMuZXZlbnQuZGVsdGFNb2RlID8gMTIwIDogMSk7XG4gICAgICB9LCBcIndoZWVsXCIpIDogXCJvbm1vdXNld2hlZWxcIiBpbiBkM19kb2N1bWVudCA/IChkM19iZWhhdmlvcl96b29tRGVsdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGQzLmV2ZW50LndoZWVsRGVsdGE7XG4gICAgICB9LCBcIm1vdXNld2hlZWxcIikgOiAoZDNfYmVoYXZpb3Jfem9vbURlbHRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAtZDMuZXZlbnQuZGV0YWlsO1xuICAgICAgfSwgXCJNb3pNb3VzZVBpeGVsU2Nyb2xsXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tKGcpIHtcbiAgICAgIGcub24obW91c2Vkb3duLCBtb3VzZWRvd25lZCkub24oZDNfYmVoYXZpb3Jfem9vbVdoZWVsICsgXCIuem9vbVwiLCBtb3VzZXdoZWVsZWQpLm9uKFwiZGJsY2xpY2suem9vbVwiLCBkYmxjbGlja2VkKS5vbih0b3VjaHN0YXJ0LCB0b3VjaHN0YXJ0ZWQpO1xuICAgIH1cbiAgICB6b29tLmV2ZW50ID0gZnVuY3Rpb24oZykge1xuICAgICAgZy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZGlzcGF0Y2ggPSBldmVudC5vZih0aGlzLCBhcmd1bWVudHMpLCB2aWV3MSA9IHZpZXc7XG4gICAgICAgIGlmIChkM190cmFuc2l0aW9uSW5oZXJpdElkKSB7XG4gICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5lYWNoKFwic3RhcnQuem9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZpZXcgPSB0aGlzLl9fY2hhcnRfXyB8fCB7XG4gICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgIHk6IDAsXG4gICAgICAgICAgICAgIGs6IDFcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICAgICAgfSkudHdlZW4oXCJ6b29tOnpvb21cIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgZHggPSBzaXplWzBdLCBkeSA9IHNpemVbMV0sIGN4ID0gY2VudGVyMCA/IGNlbnRlcjBbMF0gOiBkeCAvIDIsIGN5ID0gY2VudGVyMCA/IGNlbnRlcjBbMV0gOiBkeSAvIDIsIGkgPSBkMy5pbnRlcnBvbGF0ZVpvb20oWyAoY3ggLSB2aWV3LngpIC8gdmlldy5rLCAoY3kgLSB2aWV3LnkpIC8gdmlldy5rLCBkeCAvIHZpZXcuayBdLCBbIChjeCAtIHZpZXcxLngpIC8gdmlldzEuaywgKGN5IC0gdmlldzEueSkgLyB2aWV3MS5rLCBkeCAvIHZpZXcxLmsgXSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICB2YXIgbCA9IGkodCksIGsgPSBkeCAvIGxbMl07XG4gICAgICAgICAgICAgIHRoaXMuX19jaGFydF9fID0gdmlldyA9IHtcbiAgICAgICAgICAgICAgICB4OiBjeCAtIGxbMF0gKiBrLFxuICAgICAgICAgICAgICAgIHk6IGN5IC0gbFsxXSAqIGssXG4gICAgICAgICAgICAgICAgazoga1xuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB6b29tZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KS5lYWNoKFwiaW50ZXJydXB0Lnpvb21cIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIH0pLmVhY2goXCJlbmQuem9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fX2NoYXJ0X18gPSB2aWV3O1xuICAgICAgICAgIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB6b29tZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gICAgem9vbS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIHZpZXcueCwgdmlldy55IF07XG4gICAgICB2aWV3ID0ge1xuICAgICAgICB4OiArX1swXSxcbiAgICAgICAgeTogK19bMV0sXG4gICAgICAgIGs6IHZpZXcua1xuICAgICAgfTtcbiAgICAgIHJlc2NhbGUoKTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZpZXcuaztcbiAgICAgIHZpZXcgPSB7XG4gICAgICAgIHg6IHZpZXcueCxcbiAgICAgICAgeTogdmlldy55LFxuICAgICAgICBrOiBudWxsXG4gICAgICB9O1xuICAgICAgc2NhbGVUbygrXyk7XG4gICAgICByZXNjYWxlKCk7XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uc2NhbGVFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzY2FsZUV4dGVudDtcbiAgICAgIHNjYWxlRXh0ZW50ID0gXyA9PSBudWxsID8gZDNfYmVoYXZpb3Jfem9vbUluZmluaXR5IDogWyArX1swXSwgK19bMV0gXTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjZW50ZXI7XG4gICAgICBjZW50ZXIgPSBfICYmIFsgK19bMF0sICtfWzFdIF07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uc2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0gXyAmJiBbICtfWzBdLCArX1sxXSBdO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLmR1cmF0aW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZHVyYXRpb247XG4gICAgICBkdXJhdGlvbiA9ICtfO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnggPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MTtcbiAgICAgIHgxID0gejtcbiAgICAgIHgwID0gei5jb3B5KCk7XG4gICAgICB2aWV3ID0ge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgICBrOiAxXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnkgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5MTtcbiAgICAgIHkxID0gejtcbiAgICAgIHkwID0gei5jb3B5KCk7XG4gICAgICB2aWV3ID0ge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgICBrOiAxXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICBmdW5jdGlvbiBsb2NhdGlvbihwKSB7XG4gICAgICByZXR1cm4gWyAocFswXSAtIHZpZXcueCkgLyB2aWV3LmssIChwWzFdIC0gdmlldy55KSAvIHZpZXcuayBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludChsKSB7XG4gICAgICByZXR1cm4gWyBsWzBdICogdmlldy5rICsgdmlldy54LCBsWzFdICogdmlldy5rICsgdmlldy55IF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlVG8ocykge1xuICAgICAgdmlldy5rID0gTWF0aC5tYXgoc2NhbGVFeHRlbnRbMF0sIE1hdGgubWluKHNjYWxlRXh0ZW50WzFdLCBzKSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZVRvKHAsIGwpIHtcbiAgICAgIGwgPSBwb2ludChsKTtcbiAgICAgIHZpZXcueCArPSBwWzBdIC0gbFswXTtcbiAgICAgIHZpZXcueSArPSBwWzFdIC0gbFsxXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbVRvKHRoYXQsIHAsIGwsIGspIHtcbiAgICAgIHRoYXQuX19jaGFydF9fID0ge1xuICAgICAgICB4OiB2aWV3LngsXG4gICAgICAgIHk6IHZpZXcueSxcbiAgICAgICAgazogdmlldy5rXG4gICAgICB9O1xuICAgICAgc2NhbGVUbyhNYXRoLnBvdygyLCBrKSk7XG4gICAgICB0cmFuc2xhdGVUbyhjZW50ZXIwID0gcCwgbCk7XG4gICAgICB0aGF0ID0gZDMuc2VsZWN0KHRoYXQpO1xuICAgICAgaWYgKGR1cmF0aW9uID4gMCkgdGhhdCA9IHRoYXQudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uKTtcbiAgICAgIHRoYXQuY2FsbCh6b29tLmV2ZW50KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICAgIGlmICh4MSkgeDEuZG9tYWluKHgwLnJhbmdlKCkubWFwKGZ1bmN0aW9uKHgpIHtcbiAgICAgICAgcmV0dXJuICh4IC0gdmlldy54KSAvIHZpZXcuaztcbiAgICAgIH0pLm1hcCh4MC5pbnZlcnQpKTtcbiAgICAgIGlmICh5MSkgeTEuZG9tYWluKHkwLnJhbmdlKCkubWFwKGZ1bmN0aW9uKHkpIHtcbiAgICAgICAgcmV0dXJuICh5IC0gdmlldy55KSAvIHZpZXcuaztcbiAgICAgIH0pLm1hcCh5MC5pbnZlcnQpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpIHtcbiAgICAgIGlmICghem9vbWluZysrKSBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiem9vbXN0YXJ0XCJcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tZWQoZGlzcGF0Y2gpIHtcbiAgICAgIHJlc2NhbGUoKTtcbiAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogXCJ6b29tXCIsXG4gICAgICAgIHNjYWxlOiB2aWV3LmssXG4gICAgICAgIHRyYW5zbGF0ZTogWyB2aWV3LngsIHZpZXcueSBdXG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbWVuZGVkKGRpc3BhdGNoKSB7XG4gICAgICBpZiAoIS0tem9vbWluZykgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiBcInpvb21lbmRcIlxuICAgICAgfSksIGNlbnRlcjAgPSBudWxsO1xuICAgIH1cbiAgICBmdW5jdGlvbiBtb3VzZWRvd25lZCgpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcywgZGlzcGF0Y2ggPSBldmVudC5vZih0aGF0LCBhcmd1bWVudHMpLCBkcmFnZ2VkID0gMCwgc3ViamVjdCA9IGQzLnNlbGVjdChkM193aW5kb3codGhhdCkpLm9uKG1vdXNlbW92ZSwgbW92ZWQpLm9uKG1vdXNldXAsIGVuZGVkKSwgbG9jYXRpb24wID0gbG9jYXRpb24oZDMubW91c2UodGhhdCkpLCBkcmFnUmVzdG9yZSA9IGQzX2V2ZW50X2RyYWdTdXBwcmVzcyh0aGF0KTtcbiAgICAgIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQuY2FsbCh0aGF0KTtcbiAgICAgIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgICBkcmFnZ2VkID0gMTtcbiAgICAgICAgdHJhbnNsYXRlVG8oZDMubW91c2UodGhhdCksIGxvY2F0aW9uMCk7XG4gICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgICAgc3ViamVjdC5vbihtb3VzZW1vdmUsIG51bGwpLm9uKG1vdXNldXAsIG51bGwpO1xuICAgICAgICBkcmFnUmVzdG9yZShkcmFnZ2VkKTtcbiAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdG91Y2hzdGFydGVkKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzLCBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoYXQsIGFyZ3VtZW50cyksIGxvY2F0aW9uczAgPSB7fSwgZGlzdGFuY2UwID0gMCwgc2NhbGUwLCB6b29tTmFtZSA9IFwiLnpvb20tXCIgKyBkMy5ldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5pZGVudGlmaWVyLCB0b3VjaG1vdmUgPSBcInRvdWNobW92ZVwiICsgem9vbU5hbWUsIHRvdWNoZW5kID0gXCJ0b3VjaGVuZFwiICsgem9vbU5hbWUsIHRhcmdldHMgPSBbXSwgc3ViamVjdCA9IGQzLnNlbGVjdCh0aGF0KSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3ModGhhdCk7XG4gICAgICBzdGFydGVkKCk7XG4gICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBzdWJqZWN0Lm9uKG1vdXNlZG93biwgbnVsbCkub24odG91Y2hzdGFydCwgc3RhcnRlZCk7XG4gICAgICBmdW5jdGlvbiByZWxvY2F0ZSgpIHtcbiAgICAgICAgdmFyIHRvdWNoZXMgPSBkMy50b3VjaGVzKHRoYXQpO1xuICAgICAgICBzY2FsZTAgPSB2aWV3Lms7XG4gICAgICAgIHRvdWNoZXMuZm9yRWFjaChmdW5jdGlvbih0KSB7XG4gICAgICAgICAgaWYgKHQuaWRlbnRpZmllciBpbiBsb2NhdGlvbnMwKSBsb2NhdGlvbnMwW3QuaWRlbnRpZmllcl0gPSBsb2NhdGlvbih0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0b3VjaGVzO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gc3RhcnRlZCgpIHtcbiAgICAgICAgdmFyIHRhcmdldCA9IGQzLmV2ZW50LnRhcmdldDtcbiAgICAgICAgZDMuc2VsZWN0KHRhcmdldCkub24odG91Y2htb3ZlLCBtb3ZlZCkub24odG91Y2hlbmQsIGVuZGVkKTtcbiAgICAgICAgdGFyZ2V0cy5wdXNoKHRhcmdldCk7XG4gICAgICAgIHZhciBjaGFuZ2VkID0gZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gY2hhbmdlZC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBsb2NhdGlvbnMwW2NoYW5nZWRbaV0uaWRlbnRpZmllcl0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b3VjaGVzID0gcmVsb2NhdGUoKSwgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgaWYgKHRvdWNoZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgaWYgKG5vdyAtIHRvdWNodGltZSA8IDUwMCkge1xuICAgICAgICAgICAgdmFyIHAgPSB0b3VjaGVzWzBdO1xuICAgICAgICAgICAgem9vbVRvKHRoYXQsIHAsIGxvY2F0aW9uczBbcC5pZGVudGlmaWVyXSwgTWF0aC5mbG9vcihNYXRoLmxvZyh2aWV3LmspIC8gTWF0aC5MTjIpICsgMSk7XG4gICAgICAgICAgICBkM19ldmVudFByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRvdWNodGltZSA9IG5vdztcbiAgICAgICAgfSBlbHNlIGlmICh0b3VjaGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICB2YXIgcCA9IHRvdWNoZXNbMF0sIHEgPSB0b3VjaGVzWzFdLCBkeCA9IHBbMF0gLSBxWzBdLCBkeSA9IHBbMV0gLSBxWzFdO1xuICAgICAgICAgIGRpc3RhbmNlMCA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBtb3ZlZCgpIHtcbiAgICAgICAgdmFyIHRvdWNoZXMgPSBkMy50b3VjaGVzKHRoYXQpLCBwMCwgbDAsIHAxLCBsMTtcbiAgICAgICAgZDNfc2VsZWN0aW9uX2ludGVycnVwdC5jYWxsKHRoYXQpO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMubGVuZ3RoOyBpIDwgbjsgKytpLCBsMSA9IG51bGwpIHtcbiAgICAgICAgICBwMSA9IHRvdWNoZXNbaV07XG4gICAgICAgICAgaWYgKGwxID0gbG9jYXRpb25zMFtwMS5pZGVudGlmaWVyXSkge1xuICAgICAgICAgICAgaWYgKGwwKSBicmVhaztcbiAgICAgICAgICAgIHAwID0gcDEsIGwwID0gbDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChsMSkge1xuICAgICAgICAgIHZhciBkaXN0YW5jZTEgPSAoZGlzdGFuY2UxID0gcDFbMF0gLSBwMFswXSkgKiBkaXN0YW5jZTEgKyAoZGlzdGFuY2UxID0gcDFbMV0gLSBwMFsxXSkgKiBkaXN0YW5jZTEsIHNjYWxlMSA9IGRpc3RhbmNlMCAmJiBNYXRoLnNxcnQoZGlzdGFuY2UxIC8gZGlzdGFuY2UwKTtcbiAgICAgICAgICBwMCA9IFsgKHAwWzBdICsgcDFbMF0pIC8gMiwgKHAwWzFdICsgcDFbMV0pIC8gMiBdO1xuICAgICAgICAgIGwwID0gWyAobDBbMF0gKyBsMVswXSkgLyAyLCAobDBbMV0gKyBsMVsxXSkgLyAyIF07XG4gICAgICAgICAgc2NhbGVUbyhzY2FsZTEgKiBzY2FsZTApO1xuICAgICAgICB9XG4gICAgICAgIHRvdWNodGltZSA9IG51bGw7XG4gICAgICAgIHRyYW5zbGF0ZVRvKHAwLCBsMCk7XG4gICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgICAgaWYgKGQzLmV2ZW50LnRvdWNoZXMubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGNoYW5nZWQgPSBkMy5ldmVudC5jaGFuZ2VkVG91Y2hlcztcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGNoYW5nZWQubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgICBkZWxldGUgbG9jYXRpb25zMFtjaGFuZ2VkW2ldLmlkZW50aWZpZXJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IgKHZhciBpZGVudGlmaWVyIGluIGxvY2F0aW9uczApIHtcbiAgICAgICAgICAgIHJldHVybiB2b2lkIHJlbG9jYXRlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGQzLnNlbGVjdEFsbCh0YXJnZXRzKS5vbih6b29tTmFtZSwgbnVsbCk7XG4gICAgICAgIHN1YmplY3Qub24obW91c2Vkb3duLCBtb3VzZWRvd25lZCkub24odG91Y2hzdGFydCwgdG91Y2hzdGFydGVkKTtcbiAgICAgICAgZHJhZ1Jlc3RvcmUoKTtcbiAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gbW91c2V3aGVlbGVkKCkge1xuICAgICAgdmFyIGRpc3BhdGNoID0gZXZlbnQub2YodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmIChtb3VzZXdoZWVsVGltZXIpIGNsZWFyVGltZW91dChtb3VzZXdoZWVsVGltZXIpOyBlbHNlIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQuY2FsbCh0aGlzKSwgXG4gICAgICB0cmFuc2xhdGUwID0gbG9jYXRpb24oY2VudGVyMCA9IGNlbnRlciB8fCBkMy5tb3VzZSh0aGlzKSksIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgIG1vdXNld2hlZWxUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIG1vdXNld2hlZWxUaW1lciA9IG51bGw7XG4gICAgICAgIHpvb21lbmRlZChkaXNwYXRjaCk7XG4gICAgICB9LCA1MCk7XG4gICAgICBkM19ldmVudFByZXZlbnREZWZhdWx0KCk7XG4gICAgICBzY2FsZVRvKE1hdGgucG93KDIsIGQzX2JlaGF2aW9yX3pvb21EZWx0YSgpICogLjAwMikgKiB2aWV3LmspO1xuICAgICAgdHJhbnNsYXRlVG8oY2VudGVyMCwgdHJhbnNsYXRlMCk7XG4gICAgICB6b29tZWQoZGlzcGF0Y2gpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkYmxjbGlja2VkKCkge1xuICAgICAgdmFyIHAgPSBkMy5tb3VzZSh0aGlzKSwgayA9IE1hdGgubG9nKHZpZXcuaykgLyBNYXRoLkxOMjtcbiAgICAgIHpvb21Ubyh0aGlzLCBwLCBsb2NhdGlvbihwKSwgZDMuZXZlbnQuc2hpZnRLZXkgPyBNYXRoLmNlaWwoaykgLSAxIDogTWF0aC5mbG9vcihrKSArIDEpO1xuICAgIH1cbiAgICByZXR1cm4gZDMucmViaW5kKHpvb20sIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICB2YXIgZDNfYmVoYXZpb3Jfem9vbUluZmluaXR5ID0gWyAwLCBJbmZpbml0eSBdLCBkM19iZWhhdmlvcl96b29tRGVsdGEsIGQzX2JlaGF2aW9yX3pvb21XaGVlbDtcbiAgZDMuY29sb3IgPSBkM19jb2xvcjtcbiAgZnVuY3Rpb24gZDNfY29sb3IoKSB7fVxuICBkM19jb2xvci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5yZ2IoKSArIFwiXCI7XG4gIH07XG4gIGQzLmhzbCA9IGQzX2hzbDtcbiAgZnVuY3Rpb24gZDNfaHNsKGgsIHMsIGwpIHtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGQzX2hzbCA/IHZvaWQgKHRoaXMuaCA9ICtoLCB0aGlzLnMgPSArcywgdGhpcy5sID0gK2wpIDogYXJndW1lbnRzLmxlbmd0aCA8IDIgPyBoIGluc3RhbmNlb2YgZDNfaHNsID8gbmV3IGQzX2hzbChoLmgsIGgucywgaC5sKSA6IGQzX3JnYl9wYXJzZShcIlwiICsgaCwgZDNfcmdiX2hzbCwgZDNfaHNsKSA6IG5ldyBkM19oc2woaCwgcywgbCk7XG4gIH1cbiAgdmFyIGQzX2hzbFByb3RvdHlwZSA9IGQzX2hzbC5wcm90b3R5cGUgPSBuZXcgZDNfY29sb3IoKTtcbiAgZDNfaHNsUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICByZXR1cm4gbmV3IGQzX2hzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sIC8gayk7XG4gIH07XG4gIGQzX2hzbFByb3RvdHlwZS5kYXJrZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgayA9IE1hdGgucG93KC43LCBhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpO1xuICAgIHJldHVybiBuZXcgZDNfaHNsKHRoaXMuaCwgdGhpcy5zLCBrICogdGhpcy5sKTtcbiAgfTtcbiAgZDNfaHNsUHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19oc2xfcmdiKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwpO1xuICB9O1xuICBmdW5jdGlvbiBkM19oc2xfcmdiKGgsIHMsIGwpIHtcbiAgICB2YXIgbTEsIG0yO1xuICAgIGggPSBpc05hTihoKSA/IDAgOiAoaCAlPSAzNjApIDwgMCA/IGggKyAzNjAgOiBoO1xuICAgIHMgPSBpc05hTihzKSA/IDAgOiBzIDwgMCA/IDAgOiBzID4gMSA/IDEgOiBzO1xuICAgIGwgPSBsIDwgMCA/IDAgOiBsID4gMSA/IDEgOiBsO1xuICAgIG0yID0gbCA8PSAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICBtMSA9IDIgKiBsIC0gbTI7XG4gICAgZnVuY3Rpb24gdihoKSB7XG4gICAgICBpZiAoaCA+IDM2MCkgaCAtPSAzNjA7IGVsc2UgaWYgKGggPCAwKSBoICs9IDM2MDtcbiAgICAgIGlmIChoIDwgNjApIHJldHVybiBtMSArIChtMiAtIG0xKSAqIGggLyA2MDtcbiAgICAgIGlmIChoIDwgMTgwKSByZXR1cm4gbTI7XG4gICAgICBpZiAoaCA8IDI0MCkgcmV0dXJuIG0xICsgKG0yIC0gbTEpICogKDI0MCAtIGgpIC8gNjA7XG4gICAgICByZXR1cm4gbTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHZ2KGgpIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHYoaCkgKiAyNTUpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGQzX3JnYih2dihoICsgMTIwKSwgdnYoaCksIHZ2KGggLSAxMjApKTtcbiAgfVxuICBkMy5oY2wgPSBkM19oY2w7XG4gIGZ1bmN0aW9uIGQzX2hjbChoLCBjLCBsKSB7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBkM19oY2wgPyB2b2lkICh0aGlzLmggPSAraCwgdGhpcy5jID0gK2MsIHRoaXMubCA9ICtsKSA6IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gaCBpbnN0YW5jZW9mIGQzX2hjbCA/IG5ldyBkM19oY2woaC5oLCBoLmMsIGgubCkgOiBoIGluc3RhbmNlb2YgZDNfbGFiID8gZDNfbGFiX2hjbChoLmwsIGguYSwgaC5iKSA6IGQzX2xhYl9oY2woKGggPSBkM19yZ2JfbGFiKChoID0gZDMucmdiKGgpKS5yLCBoLmcsIGguYikpLmwsIGguYSwgaC5iKSA6IG5ldyBkM19oY2woaCwgYywgbCk7XG4gIH1cbiAgdmFyIGQzX2hjbFByb3RvdHlwZSA9IGQzX2hjbC5wcm90b3R5cGUgPSBuZXcgZDNfY29sb3IoKTtcbiAgZDNfaGNsUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgZDNfaGNsKHRoaXMuaCwgdGhpcy5jLCBNYXRoLm1pbigxMDAsIHRoaXMubCArIGQzX2xhYl9LICogKGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSkpKTtcbiAgfTtcbiAgZDNfaGNsUHJvdG90eXBlLmRhcmtlciA9IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IGQzX2hjbCh0aGlzLmgsIHRoaXMuYywgTWF0aC5tYXgoMCwgdGhpcy5sIC0gZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSkpO1xuICB9O1xuICBkM19oY2xQcm90b3R5cGUucmdiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2hjbF9sYWIodGhpcy5oLCB0aGlzLmMsIHRoaXMubCkucmdiKCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2hjbF9sYWIoaCwgYywgbCkge1xuICAgIGlmIChpc05hTihoKSkgaCA9IDA7XG4gICAgaWYgKGlzTmFOKGMpKSBjID0gMDtcbiAgICByZXR1cm4gbmV3IGQzX2xhYihsLCBNYXRoLmNvcyhoICo9IGQzX3JhZGlhbnMpICogYywgTWF0aC5zaW4oaCkgKiBjKTtcbiAgfVxuICBkMy5sYWIgPSBkM19sYWI7XG4gIGZ1bmN0aW9uIGQzX2xhYihsLCBhLCBiKSB7XG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBkM19sYWIgPyB2b2lkICh0aGlzLmwgPSArbCwgdGhpcy5hID0gK2EsIHRoaXMuYiA9ICtiKSA6IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gbCBpbnN0YW5jZW9mIGQzX2xhYiA/IG5ldyBkM19sYWIobC5sLCBsLmEsIGwuYikgOiBsIGluc3RhbmNlb2YgZDNfaGNsID8gZDNfaGNsX2xhYihsLmgsIGwuYywgbC5sKSA6IGQzX3JnYl9sYWIoKGwgPSBkM19yZ2IobCkpLnIsIGwuZywgbC5iKSA6IG5ldyBkM19sYWIobCwgYSwgYik7XG4gIH1cbiAgdmFyIGQzX2xhYl9LID0gMTg7XG4gIHZhciBkM19sYWJfWCA9IC45NTA0NywgZDNfbGFiX1kgPSAxLCBkM19sYWJfWiA9IDEuMDg4ODM7XG4gIHZhciBkM19sYWJQcm90b3R5cGUgPSBkM19sYWIucHJvdG90eXBlID0gbmV3IGQzX2NvbG9yKCk7XG4gIGQzX2xhYlByb3RvdHlwZS5icmlnaHRlciA9IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IGQzX2xhYihNYXRoLm1pbigxMDAsIHRoaXMubCArIGQzX2xhYl9LICogKGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSkpLCB0aGlzLmEsIHRoaXMuYik7XG4gIH07XG4gIGQzX2xhYlByb3RvdHlwZS5kYXJrZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBkM19sYWIoTWF0aC5tYXgoMCwgdGhpcy5sIC0gZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSksIHRoaXMuYSwgdGhpcy5iKTtcbiAgfTtcbiAgZDNfbGFiUHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19sYWJfcmdiKHRoaXMubCwgdGhpcy5hLCB0aGlzLmIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYWJfcmdiKGwsIGEsIGIpIHtcbiAgICB2YXIgeSA9IChsICsgMTYpIC8gMTE2LCB4ID0geSArIGEgLyA1MDAsIHogPSB5IC0gYiAvIDIwMDtcbiAgICB4ID0gZDNfbGFiX3h5eih4KSAqIGQzX2xhYl9YO1xuICAgIHkgPSBkM19sYWJfeHl6KHkpICogZDNfbGFiX1k7XG4gICAgeiA9IGQzX2xhYl94eXooeikgKiBkM19sYWJfWjtcbiAgICByZXR1cm4gbmV3IGQzX3JnYihkM194eXpfcmdiKDMuMjQwNDU0MiAqIHggLSAxLjUzNzEzODUgKiB5IC0gLjQ5ODUzMTQgKiB6KSwgZDNfeHl6X3JnYigtLjk2OTI2NiAqIHggKyAxLjg3NjAxMDggKiB5ICsgLjA0MTU1NiAqIHopLCBkM194eXpfcmdiKC4wNTU2NDM0ICogeCAtIC4yMDQwMjU5ICogeSArIDEuMDU3MjI1MiAqIHopKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYWJfaGNsKGwsIGEsIGIpIHtcbiAgICByZXR1cm4gbCA+IDAgPyBuZXcgZDNfaGNsKE1hdGguYXRhbjIoYiwgYSkgKiBkM19kZWdyZWVzLCBNYXRoLnNxcnQoYSAqIGEgKyBiICogYiksIGwpIDogbmV3IGQzX2hjbChOYU4sIE5hTiwgbCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGFiX3h5eih4KSB7XG4gICAgcmV0dXJuIHggPiAuMjA2ODkzMDM0ID8geCAqIHggKiB4IDogKHggLSA0IC8gMjkpIC8gNy43ODcwMzc7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeHl6X2xhYih4KSB7XG4gICAgcmV0dXJuIHggPiAuMDA4ODU2ID8gTWF0aC5wb3coeCwgMSAvIDMpIDogNy43ODcwMzcgKiB4ICsgNCAvIDI5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3h5el9yZ2Iocikge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKDI1NSAqIChyIDw9IC4wMDMwNCA/IDEyLjkyICogciA6IDEuMDU1ICogTWF0aC5wb3cociwgMSAvIDIuNCkgLSAuMDU1KSk7XG4gIH1cbiAgZDMucmdiID0gZDNfcmdiO1xuICBmdW5jdGlvbiBkM19yZ2IociwgZywgYikge1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgZDNfcmdiID8gdm9pZCAodGhpcy5yID0gfn5yLCB0aGlzLmcgPSB+fmcsIHRoaXMuYiA9IH5+YikgOiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IHIgaW5zdGFuY2VvZiBkM19yZ2IgPyBuZXcgZDNfcmdiKHIuciwgci5nLCByLmIpIDogZDNfcmdiX3BhcnNlKFwiXCIgKyByLCBkM19yZ2IsIGQzX2hzbF9yZ2IpIDogbmV3IGQzX3JnYihyLCBnLCBiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JOdW1iZXIodmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IGQzX3JnYih2YWx1ZSA+PiAxNiwgdmFsdWUgPj4gOCAmIDI1NSwgdmFsdWUgJiAyNTUpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYlN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBkM19yZ2JOdW1iZXIodmFsdWUpICsgXCJcIjtcbiAgfVxuICB2YXIgZDNfcmdiUHJvdG90eXBlID0gZDNfcmdiLnByb3RvdHlwZSA9IG5ldyBkM19jb2xvcigpO1xuICBkM19yZ2JQcm90b3R5cGUuYnJpZ2h0ZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgayA9IE1hdGgucG93KC43LCBhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpO1xuICAgIHZhciByID0gdGhpcy5yLCBnID0gdGhpcy5nLCBiID0gdGhpcy5iLCBpID0gMzA7XG4gICAgaWYgKCFyICYmICFnICYmICFiKSByZXR1cm4gbmV3IGQzX3JnYihpLCBpLCBpKTtcbiAgICBpZiAociAmJiByIDwgaSkgciA9IGk7XG4gICAgaWYgKGcgJiYgZyA8IGkpIGcgPSBpO1xuICAgIGlmIChiICYmIGIgPCBpKSBiID0gaTtcbiAgICByZXR1cm4gbmV3IGQzX3JnYihNYXRoLm1pbigyNTUsIHIgLyBrKSwgTWF0aC5taW4oMjU1LCBnIC8gayksIE1hdGgubWluKDI1NSwgYiAvIGspKTtcbiAgfTtcbiAgZDNfcmdiUHJvdG90eXBlLmRhcmtlciA9IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gTWF0aC5wb3coLjcsIGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSk7XG4gICAgcmV0dXJuIG5ldyBkM19yZ2IoayAqIHRoaXMuciwgayAqIHRoaXMuZywgayAqIHRoaXMuYik7XG4gIH07XG4gIGQzX3JnYlByb3RvdHlwZS5oc2wgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfcmdiX2hzbCh0aGlzLnIsIHRoaXMuZywgdGhpcy5iKTtcbiAgfTtcbiAgZDNfcmdiUHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiI1wiICsgZDNfcmdiX2hleCh0aGlzLnIpICsgZDNfcmdiX2hleCh0aGlzLmcpICsgZDNfcmdiX2hleCh0aGlzLmIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19yZ2JfaGV4KHYpIHtcbiAgICByZXR1cm4gdiA8IDE2ID8gXCIwXCIgKyBNYXRoLm1heCgwLCB2KS50b1N0cmluZygxNikgOiBNYXRoLm1pbigyNTUsIHYpLnRvU3RyaW5nKDE2KTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfcGFyc2UoZm9ybWF0LCByZ2IsIGhzbCkge1xuICAgIHZhciByID0gMCwgZyA9IDAsIGIgPSAwLCBtMSwgbTIsIGNvbG9yO1xuICAgIG0xID0gLyhbYS16XSspXFwoKC4qKVxcKS8uZXhlYyhmb3JtYXQgPSBmb3JtYXQudG9Mb3dlckNhc2UoKSk7XG4gICAgaWYgKG0xKSB7XG4gICAgICBtMiA9IG0xWzJdLnNwbGl0KFwiLFwiKTtcbiAgICAgIHN3aXRjaCAobTFbMV0pIHtcbiAgICAgICBjYXNlIFwiaHNsXCI6XG4gICAgICAgIHtcbiAgICAgICAgICByZXR1cm4gaHNsKHBhcnNlRmxvYXQobTJbMF0pLCBwYXJzZUZsb2F0KG0yWzFdKSAvIDEwMCwgcGFyc2VGbG9hdChtMlsyXSkgLyAxMDApO1xuICAgICAgICB9XG5cbiAgICAgICBjYXNlIFwicmdiXCI6XG4gICAgICAgIHtcbiAgICAgICAgICByZXR1cm4gcmdiKGQzX3JnYl9wYXJzZU51bWJlcihtMlswXSksIGQzX3JnYl9wYXJzZU51bWJlcihtMlsxXSksIGQzX3JnYl9wYXJzZU51bWJlcihtMlsyXSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChjb2xvciA9IGQzX3JnYl9uYW1lcy5nZXQoZm9ybWF0KSkge1xuICAgICAgcmV0dXJuIHJnYihjb2xvci5yLCBjb2xvci5nLCBjb2xvci5iKTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCAhPSBudWxsICYmIGZvcm1hdC5jaGFyQXQoMCkgPT09IFwiI1wiICYmICFpc05hTihjb2xvciA9IHBhcnNlSW50KGZvcm1hdC5zbGljZSgxKSwgMTYpKSkge1xuICAgICAgaWYgKGZvcm1hdC5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgciA9IChjb2xvciAmIDM4NDApID4+IDQ7XG4gICAgICAgIHIgPSByID4+IDQgfCByO1xuICAgICAgICBnID0gY29sb3IgJiAyNDA7XG4gICAgICAgIGcgPSBnID4+IDQgfCBnO1xuICAgICAgICBiID0gY29sb3IgJiAxNTtcbiAgICAgICAgYiA9IGIgPDwgNCB8IGI7XG4gICAgICB9IGVsc2UgaWYgKGZvcm1hdC5sZW5ndGggPT09IDcpIHtcbiAgICAgICAgciA9IChjb2xvciAmIDE2NzExNjgwKSA+PiAxNjtcbiAgICAgICAgZyA9IChjb2xvciAmIDY1MjgwKSA+PiA4O1xuICAgICAgICBiID0gY29sb3IgJiAyNTU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZ2IociwgZywgYik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX2hzbChyLCBnLCBiKSB7XG4gICAgdmFyIG1pbiA9IE1hdGgubWluKHIgLz0gMjU1LCBnIC89IDI1NSwgYiAvPSAyNTUpLCBtYXggPSBNYXRoLm1heChyLCBnLCBiKSwgZCA9IG1heCAtIG1pbiwgaCwgcywgbCA9IChtYXggKyBtaW4pIC8gMjtcbiAgICBpZiAoZCkge1xuICAgICAgcyA9IGwgPCAuNSA/IGQgLyAobWF4ICsgbWluKSA6IGQgLyAoMiAtIG1heCAtIG1pbik7XG4gICAgICBpZiAociA9PSBtYXgpIGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgZWxzZSBpZiAoZyA9PSBtYXgpIGggPSAoYiAtIHIpIC8gZCArIDI7IGVsc2UgaCA9IChyIC0gZykgLyBkICsgNDtcbiAgICAgIGggKj0gNjA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGggPSBOYU47XG4gICAgICBzID0gbCA+IDAgJiYgbCA8IDEgPyAwIDogaDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBkM19oc2woaCwgcywgbCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX2xhYihyLCBnLCBiKSB7XG4gICAgciA9IGQzX3JnYl94eXoocik7XG4gICAgZyA9IGQzX3JnYl94eXooZyk7XG4gICAgYiA9IGQzX3JnYl94eXooYik7XG4gICAgdmFyIHggPSBkM194eXpfbGFiKCguNDEyNDU2NCAqIHIgKyAuMzU3NTc2MSAqIGcgKyAuMTgwNDM3NSAqIGIpIC8gZDNfbGFiX1gpLCB5ID0gZDNfeHl6X2xhYigoLjIxMjY3MjkgKiByICsgLjcxNTE1MjIgKiBnICsgLjA3MjE3NSAqIGIpIC8gZDNfbGFiX1kpLCB6ID0gZDNfeHl6X2xhYigoLjAxOTMzMzkgKiByICsgLjExOTE5MiAqIGcgKyAuOTUwMzA0MSAqIGIpIC8gZDNfbGFiX1opO1xuICAgIHJldHVybiBkM19sYWIoMTE2ICogeSAtIDE2LCA1MDAgKiAoeCAtIHkpLCAyMDAgKiAoeSAtIHopKTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfeHl6KHIpIHtcbiAgICByZXR1cm4gKHIgLz0gMjU1KSA8PSAuMDQwNDUgPyByIC8gMTIuOTIgOiBNYXRoLnBvdygociArIC4wNTUpIC8gMS4wNTUsIDIuNCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX3BhcnNlTnVtYmVyKGMpIHtcbiAgICB2YXIgZiA9IHBhcnNlRmxvYXQoYyk7XG4gICAgcmV0dXJuIGMuY2hhckF0KGMubGVuZ3RoIC0gMSkgPT09IFwiJVwiID8gTWF0aC5yb3VuZChmICogMi41NSkgOiBmO1xuICB9XG4gIHZhciBkM19yZ2JfbmFtZXMgPSBkMy5tYXAoe1xuICAgIGFsaWNlYmx1ZTogMTU3OTIzODMsXG4gICAgYW50aXF1ZXdoaXRlOiAxNjQ0NDM3NSxcbiAgICBhcXVhOiA2NTUzNSxcbiAgICBhcXVhbWFyaW5lOiA4Mzg4NTY0LFxuICAgIGF6dXJlOiAxNTc5NDE3NSxcbiAgICBiZWlnZTogMTYxMTkyNjAsXG4gICAgYmlzcXVlOiAxNjc3MDI0NCxcbiAgICBibGFjazogMCxcbiAgICBibGFuY2hlZGFsbW9uZDogMTY3NzIwNDUsXG4gICAgYmx1ZTogMjU1LFxuICAgIGJsdWV2aW9sZXQ6IDkwNTUyMDIsXG4gICAgYnJvd246IDEwODI0MjM0LFxuICAgIGJ1cmx5d29vZDogMTQ1OTYyMzEsXG4gICAgY2FkZXRibHVlOiA2MjY2NTI4LFxuICAgIGNoYXJ0cmV1c2U6IDgzODgzNTIsXG4gICAgY2hvY29sYXRlOiAxMzc4OTQ3MCxcbiAgICBjb3JhbDogMTY3NDQyNzIsXG4gICAgY29ybmZsb3dlcmJsdWU6IDY1OTE5ODEsXG4gICAgY29ybnNpbGs6IDE2Nzc1Mzg4LFxuICAgIGNyaW1zb246IDE0NDIzMTAwLFxuICAgIGN5YW46IDY1NTM1LFxuICAgIGRhcmtibHVlOiAxMzksXG4gICAgZGFya2N5YW46IDM1NzIzLFxuICAgIGRhcmtnb2xkZW5yb2Q6IDEyMDkyOTM5LFxuICAgIGRhcmtncmF5OiAxMTExOTAxNyxcbiAgICBkYXJrZ3JlZW46IDI1NjAwLFxuICAgIGRhcmtncmV5OiAxMTExOTAxNyxcbiAgICBkYXJra2hha2k6IDEyNDMzMjU5LFxuICAgIGRhcmttYWdlbnRhOiA5MTA5NjQzLFxuICAgIGRhcmtvbGl2ZWdyZWVuOiA1NTk3OTk5LFxuICAgIGRhcmtvcmFuZ2U6IDE2NzQ3NTIwLFxuICAgIGRhcmtvcmNoaWQ6IDEwMDQwMDEyLFxuICAgIGRhcmtyZWQ6IDkxMDk1MDQsXG4gICAgZGFya3NhbG1vbjogMTUzMDg0MTAsXG4gICAgZGFya3NlYWdyZWVuOiA5NDE5OTE5LFxuICAgIGRhcmtzbGF0ZWJsdWU6IDQ3MzQzNDcsXG4gICAgZGFya3NsYXRlZ3JheTogMzEwMDQ5NSxcbiAgICBkYXJrc2xhdGVncmV5OiAzMTAwNDk1LFxuICAgIGRhcmt0dXJxdW9pc2U6IDUyOTQ1LFxuICAgIGRhcmt2aW9sZXQ6IDk2OTk1MzksXG4gICAgZGVlcHBpbms6IDE2NzE2OTQ3LFxuICAgIGRlZXBza3libHVlOiA0OTE1MSxcbiAgICBkaW1ncmF5OiA2OTA4MjY1LFxuICAgIGRpbWdyZXk6IDY5MDgyNjUsXG4gICAgZG9kZ2VyYmx1ZTogMjAwMzE5OSxcbiAgICBmaXJlYnJpY2s6IDExNjc0MTQ2LFxuICAgIGZsb3JhbHdoaXRlOiAxNjc3NTkyMCxcbiAgICBmb3Jlc3RncmVlbjogMjI2Mzg0MixcbiAgICBmdWNoc2lhOiAxNjcxMTkzNSxcbiAgICBnYWluc2Jvcm86IDE0NDc0NDYwLFxuICAgIGdob3N0d2hpdGU6IDE2MzE2NjcxLFxuICAgIGdvbGQ6IDE2NzY2NzIwLFxuICAgIGdvbGRlbnJvZDogMTQzMjkxMjAsXG4gICAgZ3JheTogODQyMTUwNCxcbiAgICBncmVlbjogMzI3NjgsXG4gICAgZ3JlZW55ZWxsb3c6IDExNDAzMDU1LFxuICAgIGdyZXk6IDg0MjE1MDQsXG4gICAgaG9uZXlkZXc6IDE1Nzk0MTYwLFxuICAgIGhvdHBpbms6IDE2NzM4NzQwLFxuICAgIGluZGlhbnJlZDogMTM0NTg1MjQsXG4gICAgaW5kaWdvOiA0OTE1MzMwLFxuICAgIGl2b3J5OiAxNjc3NzIwMCxcbiAgICBraGFraTogMTU3ODc2NjAsXG4gICAgbGF2ZW5kZXI6IDE1MTMyNDEwLFxuICAgIGxhdmVuZGVyYmx1c2g6IDE2NzczMzY1LFxuICAgIGxhd25ncmVlbjogODE5MDk3NixcbiAgICBsZW1vbmNoaWZmb246IDE2Nzc1ODg1LFxuICAgIGxpZ2h0Ymx1ZTogMTEzOTMyNTQsXG4gICAgbGlnaHRjb3JhbDogMTU3NjE1MzYsXG4gICAgbGlnaHRjeWFuOiAxNDc0NTU5OSxcbiAgICBsaWdodGdvbGRlbnJvZHllbGxvdzogMTY0NDgyMTAsXG4gICAgbGlnaHRncmF5OiAxMzg4MjMyMyxcbiAgICBsaWdodGdyZWVuOiA5NDk4MjU2LFxuICAgIGxpZ2h0Z3JleTogMTM4ODIzMjMsXG4gICAgbGlnaHRwaW5rOiAxNjc1ODQ2NSxcbiAgICBsaWdodHNhbG1vbjogMTY3NTI3NjIsXG4gICAgbGlnaHRzZWFncmVlbjogMjE0Mjg5MCxcbiAgICBsaWdodHNreWJsdWU6IDg5MDAzNDYsXG4gICAgbGlnaHRzbGF0ZWdyYXk6IDc4MzM3NTMsXG4gICAgbGlnaHRzbGF0ZWdyZXk6IDc4MzM3NTMsXG4gICAgbGlnaHRzdGVlbGJsdWU6IDExNTg0NzM0LFxuICAgIGxpZ2h0eWVsbG93OiAxNjc3NzE4NCxcbiAgICBsaW1lOiA2NTI4MCxcbiAgICBsaW1lZ3JlZW46IDMzMjkzMzAsXG4gICAgbGluZW46IDE2NDQ1NjcwLFxuICAgIG1hZ2VudGE6IDE2NzExOTM1LFxuICAgIG1hcm9vbjogODM4ODYwOCxcbiAgICBtZWRpdW1hcXVhbWFyaW5lOiA2NzM3MzIyLFxuICAgIG1lZGl1bWJsdWU6IDIwNSxcbiAgICBtZWRpdW1vcmNoaWQ6IDEyMjExNjY3LFxuICAgIG1lZGl1bXB1cnBsZTogOTY2MjY4MyxcbiAgICBtZWRpdW1zZWFncmVlbjogMzk3ODA5NyxcbiAgICBtZWRpdW1zbGF0ZWJsdWU6IDgwODc3OTAsXG4gICAgbWVkaXVtc3ByaW5nZ3JlZW46IDY0MTU0LFxuICAgIG1lZGl1bXR1cnF1b2lzZTogNDc3MjMwMCxcbiAgICBtZWRpdW12aW9sZXRyZWQ6IDEzMDQ3MTczLFxuICAgIG1pZG5pZ2h0Ymx1ZTogMTY0NDkxMixcbiAgICBtaW50Y3JlYW06IDE2MTIxODUwLFxuICAgIG1pc3R5cm9zZTogMTY3NzAyNzMsXG4gICAgbW9jY2FzaW46IDE2NzcwMjI5LFxuICAgIG5hdmFqb3doaXRlOiAxNjc2ODY4NSxcbiAgICBuYXZ5OiAxMjgsXG4gICAgb2xkbGFjZTogMTY2NDM1NTgsXG4gICAgb2xpdmU6IDg0MjEzNzYsXG4gICAgb2xpdmVkcmFiOiA3MDQ4NzM5LFxuICAgIG9yYW5nZTogMTY3NTM5MjAsXG4gICAgb3JhbmdlcmVkOiAxNjcyOTM0NCxcbiAgICBvcmNoaWQ6IDE0MzE1NzM0LFxuICAgIHBhbGVnb2xkZW5yb2Q6IDE1NjU3MTMwLFxuICAgIHBhbGVncmVlbjogMTAwMjU4ODAsXG4gICAgcGFsZXR1cnF1b2lzZTogMTE1Mjk5NjYsXG4gICAgcGFsZXZpb2xldHJlZDogMTQzODEyMDMsXG4gICAgcGFwYXlhd2hpcDogMTY3NzMwNzcsXG4gICAgcGVhY2hwdWZmOiAxNjc2NzY3MyxcbiAgICBwZXJ1OiAxMzQ2ODk5MSxcbiAgICBwaW5rOiAxNjc2MTAzNSxcbiAgICBwbHVtOiAxNDUyNDYzNyxcbiAgICBwb3dkZXJibHVlOiAxMTU5MTkxMCxcbiAgICBwdXJwbGU6IDgzODg3MzYsXG4gICAgcmViZWNjYXB1cnBsZTogNjY5Nzg4MSxcbiAgICByZWQ6IDE2NzExNjgwLFxuICAgIHJvc3licm93bjogMTIzNTc1MTksXG4gICAgcm95YWxibHVlOiA0Mjg2OTQ1LFxuICAgIHNhZGRsZWJyb3duOiA5MTI3MTg3LFxuICAgIHNhbG1vbjogMTY0MTY4ODIsXG4gICAgc2FuZHlicm93bjogMTYwMzI4NjQsXG4gICAgc2VhZ3JlZW46IDMwNTAzMjcsXG4gICAgc2Vhc2hlbGw6IDE2Nzc0NjM4LFxuICAgIHNpZW5uYTogMTA1MDY3OTcsXG4gICAgc2lsdmVyOiAxMjYzMjI1NixcbiAgICBza3libHVlOiA4OTAwMzMxLFxuICAgIHNsYXRlYmx1ZTogNjk3MDA2MSxcbiAgICBzbGF0ZWdyYXk6IDczNzI5NDQsXG4gICAgc2xhdGVncmV5OiA3MzcyOTQ0LFxuICAgIHNub3c6IDE2Nzc1OTMwLFxuICAgIHNwcmluZ2dyZWVuOiA2NTQwNyxcbiAgICBzdGVlbGJsdWU6IDQ2MjA5ODAsXG4gICAgdGFuOiAxMzgwODc4MCxcbiAgICB0ZWFsOiAzMjg5NixcbiAgICB0aGlzdGxlOiAxNDIwNDg4OCxcbiAgICB0b21hdG86IDE2NzM3MDk1LFxuICAgIHR1cnF1b2lzZTogNDI1MTg1NixcbiAgICB2aW9sZXQ6IDE1NjMxMDg2LFxuICAgIHdoZWF0OiAxNjExMzMzMSxcbiAgICB3aGl0ZTogMTY3NzcyMTUsXG4gICAgd2hpdGVzbW9rZTogMTYxMTkyODUsXG4gICAgeWVsbG93OiAxNjc3Njk2MCxcbiAgICB5ZWxsb3dncmVlbjogMTAxNDUwNzRcbiAgfSk7XG4gIGQzX3JnYl9uYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICBkM19yZ2JfbmFtZXMuc2V0KGtleSwgZDNfcmdiTnVtYmVyKHZhbHVlKSk7XG4gIH0pO1xuICBmdW5jdGlvbiBkM19mdW5jdG9yKHYpIHtcbiAgICByZXR1cm4gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB2O1xuICAgIH07XG4gIH1cbiAgZDMuZnVuY3RvciA9IGQzX2Z1bmN0b3I7XG4gIGQzLnhociA9IGQzX3hoclR5cGUoZDNfaWRlbnRpdHkpO1xuICBmdW5jdGlvbiBkM194aHJUeXBlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHVybCwgbWltZVR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgbWltZVR5cGUgPT09IFwiZnVuY3Rpb25cIikgY2FsbGJhY2sgPSBtaW1lVHlwZSwgXG4gICAgICBtaW1lVHlwZSA9IG51bGw7XG4gICAgICByZXR1cm4gZDNfeGhyKHVybCwgbWltZVR5cGUsIHJlc3BvbnNlLCBjYWxsYmFjayk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM194aHIodXJsLCBtaW1lVHlwZSwgcmVzcG9uc2UsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHhociA9IHt9LCBkaXNwYXRjaCA9IGQzLmRpc3BhdGNoKFwiYmVmb3Jlc2VuZFwiLCBcInByb2dyZXNzXCIsIFwibG9hZFwiLCBcImVycm9yXCIpLCBoZWFkZXJzID0ge30sIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKSwgcmVzcG9uc2VUeXBlID0gbnVsbDtcbiAgICBpZiAodGhpcy5YRG9tYWluUmVxdWVzdCAmJiAhKFwid2l0aENyZWRlbnRpYWxzXCIgaW4gcmVxdWVzdCkgJiYgL14oaHR0cChzKT86KT9cXC9cXC8vLnRlc3QodXJsKSkgcmVxdWVzdCA9IG5ldyBYRG9tYWluUmVxdWVzdCgpO1xuICAgIFwib25sb2FkXCIgaW4gcmVxdWVzdCA/IHJlcXVlc3Qub25sb2FkID0gcmVxdWVzdC5vbmVycm9yID0gcmVzcG9uZCA6IHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXF1ZXN0LnJlYWR5U3RhdGUgPiAzICYmIHJlc3BvbmQoKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlc3BvbmQoKSB7XG4gICAgICB2YXIgc3RhdHVzID0gcmVxdWVzdC5zdGF0dXMsIHJlc3VsdDtcbiAgICAgIGlmICghc3RhdHVzICYmIGQzX3hockhhc1Jlc3BvbnNlKHJlcXVlc3QpIHx8IHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA9PT0gMzA0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzdWx0ID0gcmVzcG9uc2UuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgZGlzcGF0Y2guZXJyb3IuY2FsbCh4aHIsIGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkaXNwYXRjaC5sb2FkLmNhbGwoeGhyLCByZXN1bHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlzcGF0Y2guZXJyb3IuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXF1ZXN0Lm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIG8gPSBkMy5ldmVudDtcbiAgICAgIGQzLmV2ZW50ID0gZXZlbnQ7XG4gICAgICB0cnkge1xuICAgICAgICBkaXNwYXRjaC5wcm9ncmVzcy5jYWxsKHhociwgcmVxdWVzdCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkMy5ldmVudCA9IG87XG4gICAgICB9XG4gICAgfTtcbiAgICB4aHIuaGVhZGVyID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIG5hbWUgPSAobmFtZSArIFwiXCIpLnRvTG93ZXJDYXNlKCk7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiBoZWFkZXJzW25hbWVdO1xuICAgICAgaWYgKHZhbHVlID09IG51bGwpIGRlbGV0ZSBoZWFkZXJzW25hbWVdOyBlbHNlIGhlYWRlcnNbbmFtZV0gPSB2YWx1ZSArIFwiXCI7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgeGhyLm1pbWVUeXBlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG1pbWVUeXBlO1xuICAgICAgbWltZVR5cGUgPSB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlICsgXCJcIjtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIucmVzcG9uc2VUeXBlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJlc3BvbnNlVHlwZTtcbiAgICAgIHJlc3BvbnNlVHlwZSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIHhoci5yZXNwb25zZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXNwb25zZSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIFsgXCJnZXRcIiwgXCJwb3N0XCIgXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgeGhyW21ldGhvZF0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHhoci5zZW5kLmFwcGx5KHhociwgWyBtZXRob2QgXS5jb25jYXQoZDNfYXJyYXkoYXJndW1lbnRzKSkpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgICB4aHIuc2VuZCA9IGZ1bmN0aW9uKG1ldGhvZCwgZGF0YSwgY2FsbGJhY2spIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBkYXRhID09PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrID0gZGF0YSwgZGF0YSA9IG51bGw7XG4gICAgICByZXF1ZXN0Lm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICAgICAgaWYgKG1pbWVUeXBlICE9IG51bGwgJiYgIShcImFjY2VwdFwiIGluIGhlYWRlcnMpKSBoZWFkZXJzW1wiYWNjZXB0XCJdID0gbWltZVR5cGUgKyBcIiwqLypcIjtcbiAgICAgIGlmIChyZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIpIGZvciAodmFyIG5hbWUgaW4gaGVhZGVycykgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIGhlYWRlcnNbbmFtZV0pO1xuICAgICAgaWYgKG1pbWVUeXBlICE9IG51bGwgJiYgcmVxdWVzdC5vdmVycmlkZU1pbWVUeXBlKSByZXF1ZXN0Lm92ZXJyaWRlTWltZVR5cGUobWltZVR5cGUpO1xuICAgICAgaWYgKHJlc3BvbnNlVHlwZSAhPSBudWxsKSByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcbiAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSB4aHIub24oXCJlcnJvclwiLCBjYWxsYmFjaykub24oXCJsb2FkXCIsIGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVxdWVzdCk7XG4gICAgICB9KTtcbiAgICAgIGRpc3BhdGNoLmJlZm9yZXNlbmQuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgcmVxdWVzdC5zZW5kKGRhdGEgPT0gbnVsbCA/IG51bGwgOiBkYXRhKTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICBkMy5yZWJpbmQoeGhyLCBkaXNwYXRjaCwgXCJvblwiKTtcbiAgICByZXR1cm4gY2FsbGJhY2sgPT0gbnVsbCA/IHhociA6IHhoci5nZXQoZDNfeGhyX2ZpeENhbGxiYWNrKGNhbGxiYWNrKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeGhyX2ZpeENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmxlbmd0aCA9PT0gMSA/IGZ1bmN0aW9uKGVycm9yLCByZXF1ZXN0KSB7XG4gICAgICBjYWxsYmFjayhlcnJvciA9PSBudWxsID8gcmVxdWVzdCA6IG51bGwpO1xuICAgIH0gOiBjYWxsYmFjaztcbiAgfVxuICBmdW5jdGlvbiBkM194aHJIYXNSZXNwb25zZShyZXF1ZXN0KSB7XG4gICAgdmFyIHR5cGUgPSByZXF1ZXN0LnJlc3BvbnNlVHlwZTtcbiAgICByZXR1cm4gdHlwZSAmJiB0eXBlICE9PSBcInRleHRcIiA/IHJlcXVlc3QucmVzcG9uc2UgOiByZXF1ZXN0LnJlc3BvbnNlVGV4dDtcbiAgfVxuICBkMy5kc3YgPSBmdW5jdGlvbihkZWxpbWl0ZXIsIG1pbWVUeXBlKSB7XG4gICAgdmFyIHJlRm9ybWF0ID0gbmV3IFJlZ0V4cCgnW1wiJyArIGRlbGltaXRlciArIFwiXFxuXVwiKSwgZGVsaW1pdGVyQ29kZSA9IGRlbGltaXRlci5jaGFyQ29kZUF0KDApO1xuICAgIGZ1bmN0aW9uIGRzdih1cmwsIHJvdywgY2FsbGJhY2spIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgY2FsbGJhY2sgPSByb3csIHJvdyA9IG51bGw7XG4gICAgICB2YXIgeGhyID0gZDNfeGhyKHVybCwgbWltZVR5cGUsIHJvdyA9PSBudWxsID8gcmVzcG9uc2UgOiB0eXBlZFJlc3BvbnNlKHJvdyksIGNhbGxiYWNrKTtcbiAgICAgIHhoci5yb3cgPSBmdW5jdGlvbihfKSB7XG4gICAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8geGhyLnJlc3BvbnNlKChyb3cgPSBfKSA9PSBudWxsID8gcmVzcG9uc2UgOiB0eXBlZFJlc3BvbnNlKF8pKSA6IHJvdztcbiAgICAgIH07XG4gICAgICByZXR1cm4geGhyO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNwb25zZShyZXF1ZXN0KSB7XG4gICAgICByZXR1cm4gZHN2LnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHlwZWRSZXNwb25zZShmKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gZHN2LnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0LCBmKTtcbiAgICAgIH07XG4gICAgfVxuICAgIGRzdi5wYXJzZSA9IGZ1bmN0aW9uKHRleHQsIGYpIHtcbiAgICAgIHZhciBvO1xuICAgICAgcmV0dXJuIGRzdi5wYXJzZVJvd3ModGV4dCwgZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgICAgIGlmIChvKSByZXR1cm4gbyhyb3csIGkgLSAxKTtcbiAgICAgICAgdmFyIGEgPSBuZXcgRnVuY3Rpb24oXCJkXCIsIFwicmV0dXJuIHtcIiArIHJvdy5tYXAoZnVuY3Rpb24obmFtZSwgaSkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShuYW1lKSArIFwiOiBkW1wiICsgaSArIFwiXVwiO1xuICAgICAgICB9KS5qb2luKFwiLFwiKSArIFwifVwiKTtcbiAgICAgICAgbyA9IGYgPyBmdW5jdGlvbihyb3csIGkpIHtcbiAgICAgICAgICByZXR1cm4gZihhKHJvdyksIGkpO1xuICAgICAgICB9IDogYTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgZHN2LnBhcnNlUm93cyA9IGZ1bmN0aW9uKHRleHQsIGYpIHtcbiAgICAgIHZhciBFT0wgPSB7fSwgRU9GID0ge30sIHJvd3MgPSBbXSwgTiA9IHRleHQubGVuZ3RoLCBJID0gMCwgbiA9IDAsIHQsIGVvbDtcbiAgICAgIGZ1bmN0aW9uIHRva2VuKCkge1xuICAgICAgICBpZiAoSSA+PSBOKSByZXR1cm4gRU9GO1xuICAgICAgICBpZiAoZW9sKSByZXR1cm4gZW9sID0gZmFsc2UsIEVPTDtcbiAgICAgICAgdmFyIGogPSBJO1xuICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGopID09PSAzNCkge1xuICAgICAgICAgIHZhciBpID0gajtcbiAgICAgICAgICB3aGlsZSAoaSsrIDwgTikge1xuICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChpKSA9PT0gMzQpIHtcbiAgICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChpICsgMSkgIT09IDM0KSBicmVhaztcbiAgICAgICAgICAgICAgKytpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBJID0gaSArIDI7XG4gICAgICAgICAgdmFyIGMgPSB0ZXh0LmNoYXJDb2RlQXQoaSArIDEpO1xuICAgICAgICAgIGlmIChjID09PSAxMykge1xuICAgICAgICAgICAgZW9sID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoaSArIDIpID09PSAxMCkgKytJO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gMTApIHtcbiAgICAgICAgICAgIGVvbCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGogKyAxLCBpKS5yZXBsYWNlKC9cIlwiL2csICdcIicpO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChJIDwgTikge1xuICAgICAgICAgIHZhciBjID0gdGV4dC5jaGFyQ29kZUF0KEkrKyksIGsgPSAxO1xuICAgICAgICAgIGlmIChjID09PSAxMCkgZW9sID0gdHJ1ZTsgZWxzZSBpZiAoYyA9PT0gMTMpIHtcbiAgICAgICAgICAgIGVvbCA9IHRydWU7XG4gICAgICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KEkpID09PSAxMCkgKytJLCArK2s7XG4gICAgICAgICAgfSBlbHNlIGlmIChjICE9PSBkZWxpbWl0ZXJDb2RlKSBjb250aW51ZTtcbiAgICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqLCBJIC0gayk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRleHQuc2xpY2Uoaik7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKHQgPSB0b2tlbigpKSAhPT0gRU9GKSB7XG4gICAgICAgIHZhciBhID0gW107XG4gICAgICAgIHdoaWxlICh0ICE9PSBFT0wgJiYgdCAhPT0gRU9GKSB7XG4gICAgICAgICAgYS5wdXNoKHQpO1xuICAgICAgICAgIHQgPSB0b2tlbigpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmICYmIChhID0gZihhLCBuKyspKSA9PSBudWxsKSBjb250aW51ZTtcbiAgICAgICAgcm93cy5wdXNoKGEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvd3M7XG4gICAgfTtcbiAgICBkc3YuZm9ybWF0ID0gZnVuY3Rpb24ocm93cykge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkocm93c1swXSkpIHJldHVybiBkc3YuZm9ybWF0Um93cyhyb3dzKTtcbiAgICAgIHZhciBmaWVsZFNldCA9IG5ldyBkM19TZXQoKSwgZmllbGRzID0gW107XG4gICAgICByb3dzLmZvckVhY2goZnVuY3Rpb24ocm93KSB7XG4gICAgICAgIGZvciAodmFyIGZpZWxkIGluIHJvdykge1xuICAgICAgICAgIGlmICghZmllbGRTZXQuaGFzKGZpZWxkKSkge1xuICAgICAgICAgICAgZmllbGRzLnB1c2goZmllbGRTZXQuYWRkKGZpZWxkKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBbIGZpZWxkcy5tYXAoZm9ybWF0VmFsdWUpLmpvaW4oZGVsaW1pdGVyKSBdLmNvbmNhdChyb3dzLm1hcChmdW5jdGlvbihyb3cpIHtcbiAgICAgICAgcmV0dXJuIGZpZWxkcy5tYXAoZnVuY3Rpb24oZmllbGQpIHtcbiAgICAgICAgICByZXR1cm4gZm9ybWF0VmFsdWUocm93W2ZpZWxkXSk7XG4gICAgICAgIH0pLmpvaW4oZGVsaW1pdGVyKTtcbiAgICAgIH0pKS5qb2luKFwiXFxuXCIpO1xuICAgIH07XG4gICAgZHN2LmZvcm1hdFJvd3MgPSBmdW5jdGlvbihyb3dzKSB7XG4gICAgICByZXR1cm4gcm93cy5tYXAoZm9ybWF0Um93KS5qb2luKFwiXFxuXCIpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gZm9ybWF0Um93KHJvdykge1xuICAgICAgcmV0dXJuIHJvdy5tYXAoZm9ybWF0VmFsdWUpLmpvaW4oZGVsaW1pdGVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9ybWF0VmFsdWUodGV4dCkge1xuICAgICAgcmV0dXJuIHJlRm9ybWF0LnRlc3QodGV4dCkgPyAnXCInICsgdGV4dC5yZXBsYWNlKC9cXFwiL2csICdcIlwiJykgKyAnXCInIDogdGV4dDtcbiAgICB9XG4gICAgcmV0dXJuIGRzdjtcbiAgfTtcbiAgZDMuY3N2ID0gZDMuZHN2KFwiLFwiLCBcInRleHQvY3N2XCIpO1xuICBkMy50c3YgPSBkMy5kc3YoXCJcdFwiLCBcInRleHQvdGFiLXNlcGFyYXRlZC12YWx1ZXNcIik7XG4gIHZhciBkM190aW1lcl9xdWV1ZUhlYWQsIGQzX3RpbWVyX3F1ZXVlVGFpbCwgZDNfdGltZXJfaW50ZXJ2YWwsIGQzX3RpbWVyX3RpbWVvdXQsIGQzX3RpbWVyX2ZyYW1lID0gdGhpc1tkM192ZW5kb3JTeW1ib2wodGhpcywgXCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIildIHx8IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgMTcpO1xuICB9O1xuICBkMy50aW1lciA9IGZ1bmN0aW9uKCkge1xuICAgIGQzX3RpbWVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RpbWVyKGNhbGxiYWNrLCBkZWxheSwgdGhlbikge1xuICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobiA8IDIpIGRlbGF5ID0gMDtcbiAgICBpZiAobiA8IDMpIHRoZW4gPSBEYXRlLm5vdygpO1xuICAgIHZhciB0aW1lID0gdGhlbiArIGRlbGF5LCB0aW1lciA9IHtcbiAgICAgIGM6IGNhbGxiYWNrLFxuICAgICAgdDogdGltZSxcbiAgICAgIG46IG51bGxcbiAgICB9O1xuICAgIGlmIChkM190aW1lcl9xdWV1ZVRhaWwpIGQzX3RpbWVyX3F1ZXVlVGFpbC5uID0gdGltZXI7IGVsc2UgZDNfdGltZXJfcXVldWVIZWFkID0gdGltZXI7XG4gICAgZDNfdGltZXJfcXVldWVUYWlsID0gdGltZXI7XG4gICAgaWYgKCFkM190aW1lcl9pbnRlcnZhbCkge1xuICAgICAgZDNfdGltZXJfdGltZW91dCA9IGNsZWFyVGltZW91dChkM190aW1lcl90aW1lb3V0KTtcbiAgICAgIGQzX3RpbWVyX2ludGVydmFsID0gMTtcbiAgICAgIGQzX3RpbWVyX2ZyYW1lKGQzX3RpbWVyX3N0ZXApO1xuICAgIH1cbiAgICByZXR1cm4gdGltZXI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZXJfc3RlcCgpIHtcbiAgICB2YXIgbm93ID0gZDNfdGltZXJfbWFyaygpLCBkZWxheSA9IGQzX3RpbWVyX3N3ZWVwKCkgLSBub3c7XG4gICAgaWYgKGRlbGF5ID4gMjQpIHtcbiAgICAgIGlmIChpc0Zpbml0ZShkZWxheSkpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGQzX3RpbWVyX3RpbWVvdXQpO1xuICAgICAgICBkM190aW1lcl90aW1lb3V0ID0gc2V0VGltZW91dChkM190aW1lcl9zdGVwLCBkZWxheSk7XG4gICAgICB9XG4gICAgICBkM190aW1lcl9pbnRlcnZhbCA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGQzX3RpbWVyX2ludGVydmFsID0gMTtcbiAgICAgIGQzX3RpbWVyX2ZyYW1lKGQzX3RpbWVyX3N0ZXApO1xuICAgIH1cbiAgfVxuICBkMy50aW1lci5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIGQzX3RpbWVyX21hcmsoKTtcbiAgICBkM190aW1lcl9zd2VlcCgpO1xuICB9O1xuICBmdW5jdGlvbiBkM190aW1lcl9tYXJrKCkge1xuICAgIHZhciBub3cgPSBEYXRlLm5vdygpLCB0aW1lciA9IGQzX3RpbWVyX3F1ZXVlSGVhZDtcbiAgICB3aGlsZSAodGltZXIpIHtcbiAgICAgIGlmIChub3cgPj0gdGltZXIudCAmJiB0aW1lci5jKG5vdyAtIHRpbWVyLnQpKSB0aW1lci5jID0gbnVsbDtcbiAgICAgIHRpbWVyID0gdGltZXIubjtcbiAgICB9XG4gICAgcmV0dXJuIG5vdztcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lcl9zd2VlcCgpIHtcbiAgICB2YXIgdDAsIHQxID0gZDNfdGltZXJfcXVldWVIZWFkLCB0aW1lID0gSW5maW5pdHk7XG4gICAgd2hpbGUgKHQxKSB7XG4gICAgICBpZiAodDEuYykge1xuICAgICAgICBpZiAodDEudCA8IHRpbWUpIHRpbWUgPSB0MS50O1xuICAgICAgICB0MSA9ICh0MCA9IHQxKS5uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdDEgPSB0MCA/IHQwLm4gPSB0MS5uIDogZDNfdGltZXJfcXVldWVIZWFkID0gdDEubjtcbiAgICAgIH1cbiAgICB9XG4gICAgZDNfdGltZXJfcXVldWVUYWlsID0gdDA7XG4gICAgcmV0dXJuIHRpbWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZm9ybWF0X3ByZWNpc2lvbih4LCBwKSB7XG4gICAgcmV0dXJuIHAgLSAoeCA/IE1hdGguY2VpbChNYXRoLmxvZyh4KSAvIE1hdGguTE4xMCkgOiAxKTtcbiAgfVxuICBkMy5yb3VuZCA9IGZ1bmN0aW9uKHgsIG4pIHtcbiAgICByZXR1cm4gbiA/IE1hdGgucm91bmQoeCAqIChuID0gTWF0aC5wb3coMTAsIG4pKSkgLyBuIDogTWF0aC5yb3VuZCh4KTtcbiAgfTtcbiAgdmFyIGQzX2Zvcm1hdFByZWZpeGVzID0gWyBcInlcIiwgXCJ6XCIsIFwiYVwiLCBcImZcIiwgXCJwXCIsIFwiblwiLCBcIsK1XCIsIFwibVwiLCBcIlwiLCBcImtcIiwgXCJNXCIsIFwiR1wiLCBcIlRcIiwgXCJQXCIsIFwiRVwiLCBcIlpcIiwgXCJZXCIgXS5tYXAoZDNfZm9ybWF0UHJlZml4KTtcbiAgZDMuZm9ybWF0UHJlZml4ID0gZnVuY3Rpb24odmFsdWUsIHByZWNpc2lvbikge1xuICAgIHZhciBpID0gMDtcbiAgICBpZiAodmFsdWUgPSArdmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZSA8IDApIHZhbHVlICo9IC0xO1xuICAgICAgaWYgKHByZWNpc2lvbikgdmFsdWUgPSBkMy5yb3VuZCh2YWx1ZSwgZDNfZm9ybWF0X3ByZWNpc2lvbih2YWx1ZSwgcHJlY2lzaW9uKSk7XG4gICAgICBpID0gMSArIE1hdGguZmxvb3IoMWUtMTIgKyBNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMTApO1xuICAgICAgaSA9IE1hdGgubWF4KC0yNCwgTWF0aC5taW4oMjQsIE1hdGguZmxvb3IoKGkgLSAxKSAvIDMpICogMykpO1xuICAgIH1cbiAgICByZXR1cm4gZDNfZm9ybWF0UHJlZml4ZXNbOCArIGkgLyAzXTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZm9ybWF0UHJlZml4KGQsIGkpIHtcbiAgICB2YXIgayA9IE1hdGgucG93KDEwLCBhYnMoOCAtIGkpICogMyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjYWxlOiBpID4gOCA/IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQgLyBrO1xuICAgICAgfSA6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQgKiBrO1xuICAgICAgfSxcbiAgICAgIHN5bWJvbDogZFxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfbG9jYWxlX251bWJlckZvcm1hdChsb2NhbGUpIHtcbiAgICB2YXIgbG9jYWxlX2RlY2ltYWwgPSBsb2NhbGUuZGVjaW1hbCwgbG9jYWxlX3Rob3VzYW5kcyA9IGxvY2FsZS50aG91c2FuZHMsIGxvY2FsZV9ncm91cGluZyA9IGxvY2FsZS5ncm91cGluZywgbG9jYWxlX2N1cnJlbmN5ID0gbG9jYWxlLmN1cnJlbmN5LCBmb3JtYXRHcm91cCA9IGxvY2FsZV9ncm91cGluZyAmJiBsb2NhbGVfdGhvdXNhbmRzID8gZnVuY3Rpb24odmFsdWUsIHdpZHRoKSB7XG4gICAgICB2YXIgaSA9IHZhbHVlLmxlbmd0aCwgdCA9IFtdLCBqID0gMCwgZyA9IGxvY2FsZV9ncm91cGluZ1swXSwgbGVuZ3RoID0gMDtcbiAgICAgIHdoaWxlIChpID4gMCAmJiBnID4gMCkge1xuICAgICAgICBpZiAobGVuZ3RoICsgZyArIDEgPiB3aWR0aCkgZyA9IE1hdGgubWF4KDEsIHdpZHRoIC0gbGVuZ3RoKTtcbiAgICAgICAgdC5wdXNoKHZhbHVlLnN1YnN0cmluZyhpIC09IGcsIGkgKyBnKSk7XG4gICAgICAgIGlmICgobGVuZ3RoICs9IGcgKyAxKSA+IHdpZHRoKSBicmVhaztcbiAgICAgICAgZyA9IGxvY2FsZV9ncm91cGluZ1tqID0gKGogKyAxKSAlIGxvY2FsZV9ncm91cGluZy5sZW5ndGhdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHQucmV2ZXJzZSgpLmpvaW4obG9jYWxlX3Rob3VzYW5kcyk7XG4gICAgfSA6IGQzX2lkZW50aXR5O1xuICAgIHJldHVybiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBtYXRjaCA9IGQzX2Zvcm1hdF9yZS5leGVjKHNwZWNpZmllciksIGZpbGwgPSBtYXRjaFsxXSB8fCBcIiBcIiwgYWxpZ24gPSBtYXRjaFsyXSB8fCBcIj5cIiwgc2lnbiA9IG1hdGNoWzNdIHx8IFwiLVwiLCBzeW1ib2wgPSBtYXRjaFs0XSB8fCBcIlwiLCB6ZmlsbCA9IG1hdGNoWzVdLCB3aWR0aCA9ICttYXRjaFs2XSwgY29tbWEgPSBtYXRjaFs3XSwgcHJlY2lzaW9uID0gbWF0Y2hbOF0sIHR5cGUgPSBtYXRjaFs5XSwgc2NhbGUgPSAxLCBwcmVmaXggPSBcIlwiLCBzdWZmaXggPSBcIlwiLCBpbnRlZ2VyID0gZmFsc2UsIGV4cG9uZW50ID0gdHJ1ZTtcbiAgICAgIGlmIChwcmVjaXNpb24pIHByZWNpc2lvbiA9ICtwcmVjaXNpb24uc3Vic3RyaW5nKDEpO1xuICAgICAgaWYgKHpmaWxsIHx8IGZpbGwgPT09IFwiMFwiICYmIGFsaWduID09PSBcIj1cIikge1xuICAgICAgICB6ZmlsbCA9IGZpbGwgPSBcIjBcIjtcbiAgICAgICAgYWxpZ24gPSBcIj1cIjtcbiAgICAgIH1cbiAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgIGNhc2UgXCJuXCI6XG4gICAgICAgIGNvbW1hID0gdHJ1ZTtcbiAgICAgICAgdHlwZSA9IFwiZ1wiO1xuICAgICAgICBicmVhaztcblxuICAgICAgIGNhc2UgXCIlXCI6XG4gICAgICAgIHNjYWxlID0gMTAwO1xuICAgICAgICBzdWZmaXggPSBcIiVcIjtcbiAgICAgICAgdHlwZSA9IFwiZlwiO1xuICAgICAgICBicmVhaztcblxuICAgICAgIGNhc2UgXCJwXCI6XG4gICAgICAgIHNjYWxlID0gMTAwO1xuICAgICAgICBzdWZmaXggPSBcIiVcIjtcbiAgICAgICAgdHlwZSA9IFwiclwiO1xuICAgICAgICBicmVhaztcblxuICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgY2FzZSBcIm9cIjpcbiAgICAgICBjYXNlIFwieFwiOlxuICAgICAgIGNhc2UgXCJYXCI6XG4gICAgICAgIGlmIChzeW1ib2wgPT09IFwiI1wiKSBwcmVmaXggPSBcIjBcIiArIHR5cGUudG9Mb3dlckNhc2UoKTtcblxuICAgICAgIGNhc2UgXCJjXCI6XG4gICAgICAgIGV4cG9uZW50ID0gZmFsc2U7XG5cbiAgICAgICBjYXNlIFwiZFwiOlxuICAgICAgICBpbnRlZ2VyID0gdHJ1ZTtcbiAgICAgICAgcHJlY2lzaW9uID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICBzY2FsZSA9IC0xO1xuICAgICAgICB0eXBlID0gXCJyXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWYgKHN5bWJvbCA9PT0gXCIkXCIpIHByZWZpeCA9IGxvY2FsZV9jdXJyZW5jeVswXSwgc3VmZml4ID0gbG9jYWxlX2N1cnJlbmN5WzFdO1xuICAgICAgaWYgKHR5cGUgPT0gXCJyXCIgJiYgIXByZWNpc2lvbikgdHlwZSA9IFwiZ1wiO1xuICAgICAgaWYgKHByZWNpc2lvbiAhPSBudWxsKSB7XG4gICAgICAgIGlmICh0eXBlID09IFwiZ1wiKSBwcmVjaXNpb24gPSBNYXRoLm1heCgxLCBNYXRoLm1pbigyMSwgcHJlY2lzaW9uKSk7IGVsc2UgaWYgKHR5cGUgPT0gXCJlXCIgfHwgdHlwZSA9PSBcImZcIikgcHJlY2lzaW9uID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjAsIHByZWNpc2lvbikpO1xuICAgICAgfVxuICAgICAgdHlwZSA9IGQzX2Zvcm1hdF90eXBlcy5nZXQodHlwZSkgfHwgZDNfZm9ybWF0X3R5cGVEZWZhdWx0O1xuICAgICAgdmFyIHpjb21tYSA9IHpmaWxsICYmIGNvbW1hO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHZhciBmdWxsU3VmZml4ID0gc3VmZml4O1xuICAgICAgICBpZiAoaW50ZWdlciAmJiB2YWx1ZSAlIDEpIHJldHVybiBcIlwiO1xuICAgICAgICB2YXIgbmVnYXRpdmUgPSB2YWx1ZSA8IDAgfHwgdmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCA/ICh2YWx1ZSA9IC12YWx1ZSwgXCItXCIpIDogc2lnbiA9PT0gXCItXCIgPyBcIlwiIDogc2lnbjtcbiAgICAgICAgaWYgKHNjYWxlIDwgMCkge1xuICAgICAgICAgIHZhciB1bml0ID0gZDMuZm9ybWF0UHJlZml4KHZhbHVlLCBwcmVjaXNpb24pO1xuICAgICAgICAgIHZhbHVlID0gdW5pdC5zY2FsZSh2YWx1ZSk7XG4gICAgICAgICAgZnVsbFN1ZmZpeCA9IHVuaXQuc3ltYm9sICsgc3VmZml4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbHVlICo9IHNjYWxlO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlID0gdHlwZSh2YWx1ZSwgcHJlY2lzaW9uKTtcbiAgICAgICAgdmFyIGkgPSB2YWx1ZS5sYXN0SW5kZXhPZihcIi5cIiksIGJlZm9yZSwgYWZ0ZXI7XG4gICAgICAgIGlmIChpIDwgMCkge1xuICAgICAgICAgIHZhciBqID0gZXhwb25lbnQgPyB2YWx1ZS5sYXN0SW5kZXhPZihcImVcIikgOiAtMTtcbiAgICAgICAgICBpZiAoaiA8IDApIGJlZm9yZSA9IHZhbHVlLCBhZnRlciA9IFwiXCI7IGVsc2UgYmVmb3JlID0gdmFsdWUuc3Vic3RyaW5nKDAsIGopLCBhZnRlciA9IHZhbHVlLnN1YnN0cmluZyhqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBiZWZvcmUgPSB2YWx1ZS5zdWJzdHJpbmcoMCwgaSk7XG4gICAgICAgICAgYWZ0ZXIgPSBsb2NhbGVfZGVjaW1hbCArIHZhbHVlLnN1YnN0cmluZyhpICsgMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF6ZmlsbCAmJiBjb21tYSkgYmVmb3JlID0gZm9ybWF0R3JvdXAoYmVmb3JlLCBJbmZpbml0eSk7XG4gICAgICAgIHZhciBsZW5ndGggPSBwcmVmaXgubGVuZ3RoICsgYmVmb3JlLmxlbmd0aCArIGFmdGVyLmxlbmd0aCArICh6Y29tbWEgPyAwIDogbmVnYXRpdmUubGVuZ3RoKSwgcGFkZGluZyA9IGxlbmd0aCA8IHdpZHRoID8gbmV3IEFycmF5KGxlbmd0aCA9IHdpZHRoIC0gbGVuZ3RoICsgMSkuam9pbihmaWxsKSA6IFwiXCI7XG4gICAgICAgIGlmICh6Y29tbWEpIGJlZm9yZSA9IGZvcm1hdEdyb3VwKHBhZGRpbmcgKyBiZWZvcmUsIHBhZGRpbmcubGVuZ3RoID8gd2lkdGggLSBhZnRlci5sZW5ndGggOiBJbmZpbml0eSk7XG4gICAgICAgIG5lZ2F0aXZlICs9IHByZWZpeDtcbiAgICAgICAgdmFsdWUgPSBiZWZvcmUgKyBhZnRlcjtcbiAgICAgICAgcmV0dXJuIChhbGlnbiA9PT0gXCI8XCIgPyBuZWdhdGl2ZSArIHZhbHVlICsgcGFkZGluZyA6IGFsaWduID09PSBcIj5cIiA/IHBhZGRpbmcgKyBuZWdhdGl2ZSArIHZhbHVlIDogYWxpZ24gPT09IFwiXlwiID8gcGFkZGluZy5zdWJzdHJpbmcoMCwgbGVuZ3RoID4+PSAxKSArIG5lZ2F0aXZlICsgdmFsdWUgKyBwYWRkaW5nLnN1YnN0cmluZyhsZW5ndGgpIDogbmVnYXRpdmUgKyAoemNvbW1hID8gdmFsdWUgOiBwYWRkaW5nICsgdmFsdWUpKSArIGZ1bGxTdWZmaXg7XG4gICAgICB9O1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX2Zvcm1hdF9yZSA9IC8oPzooW157XSk/KFs8Pj1eXSkpPyhbK1xcLSBdKT8oWyQjXSk/KDApPyhcXGQrKT8oLCk/KFxcLi0/XFxkKyk/KFthLXolXSk/L2k7XG4gIHZhciBkM19mb3JtYXRfdHlwZXMgPSBkMy5tYXAoe1xuICAgIGI6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB4LnRvU3RyaW5nKDIpO1xuICAgIH0sXG4gICAgYzogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoeCk7XG4gICAgfSxcbiAgICBvOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZyg4KTtcbiAgICB9LFxuICAgIHg6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB4LnRvU3RyaW5nKDE2KTtcbiAgICB9LFxuICAgIFg6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB4LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuICAgIH0sXG4gICAgZzogZnVuY3Rpb24oeCwgcCkge1xuICAgICAgcmV0dXJuIHgudG9QcmVjaXNpb24ocCk7XG4gICAgfSxcbiAgICBlOiBmdW5jdGlvbih4LCBwKSB7XG4gICAgICByZXR1cm4geC50b0V4cG9uZW50aWFsKHApO1xuICAgIH0sXG4gICAgZjogZnVuY3Rpb24oeCwgcCkge1xuICAgICAgcmV0dXJuIHgudG9GaXhlZChwKTtcbiAgICB9LFxuICAgIHI6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiAoeCA9IGQzLnJvdW5kKHgsIGQzX2Zvcm1hdF9wcmVjaXNpb24oeCwgcCkpKS50b0ZpeGVkKE1hdGgubWF4KDAsIE1hdGgubWluKDIwLCBkM19mb3JtYXRfcHJlY2lzaW9uKHggKiAoMSArIDFlLTE1KSwgcCkpKSk7XG4gICAgfVxuICB9KTtcbiAgZnVuY3Rpb24gZDNfZm9ybWF0X3R5cGVEZWZhdWx0KHgpIHtcbiAgICByZXR1cm4geCArIFwiXCI7XG4gIH1cbiAgdmFyIGQzX3RpbWUgPSBkMy50aW1lID0ge30sIGQzX2RhdGUgPSBEYXRlO1xuICBmdW5jdGlvbiBkM19kYXRlX3V0YygpIHtcbiAgICB0aGlzLl8gPSBuZXcgRGF0ZShhcmd1bWVudHMubGVuZ3RoID4gMSA/IERhdGUuVVRDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBhcmd1bWVudHNbMF0pO1xuICB9XG4gIGQzX2RhdGVfdXRjLnByb3RvdHlwZSA9IHtcbiAgICBnZXREYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDRGF0ZSgpO1xuICAgIH0sXG4gICAgZ2V0RGF5OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDRGF5KCk7XG4gICAgfSxcbiAgICBnZXRGdWxsWWVhcjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgfSxcbiAgICBnZXRIb3VyczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0hvdXJzKCk7XG4gICAgfSxcbiAgICBnZXRNaWxsaXNlY29uZHM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgICB9LFxuICAgIGdldE1pbnV0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENNaW51dGVzKCk7XG4gICAgfSxcbiAgICBnZXRNb250aDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ01vbnRoKCk7XG4gICAgfSxcbiAgICBnZXRTZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDU2Vjb25kcygpO1xuICAgIH0sXG4gICAgZ2V0VGltZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFRpbWUoKTtcbiAgICB9LFxuICAgIGdldFRpbWV6b25lT2Zmc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH0sXG4gICAgdmFsdWVPZjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLnZhbHVlT2YoKTtcbiAgICB9LFxuICAgIHNldERhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDRGF0ZS5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXREYXk6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDRGF5LmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldEZ1bGxZZWFyOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0Z1bGxZZWFyLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldEhvdXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0hvdXJzLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldE1pbGxpc2Vjb25kczogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENNaWxsaXNlY29uZHMuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0TWludXRlczogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENNaW51dGVzLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldE1vbnRoOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ01vbnRoLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldFNlY29uZHM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDU2Vjb25kcy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFRpbWUuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfTtcbiAgdmFyIGQzX3RpbWVfcHJvdG90eXBlID0gRGF0ZS5wcm90b3R5cGU7XG4gIGZ1bmN0aW9uIGQzX3RpbWVfaW50ZXJ2YWwobG9jYWwsIHN0ZXAsIG51bWJlcikge1xuICAgIGZ1bmN0aW9uIHJvdW5kKGRhdGUpIHtcbiAgICAgIHZhciBkMCA9IGxvY2FsKGRhdGUpLCBkMSA9IG9mZnNldChkMCwgMSk7XG4gICAgICByZXR1cm4gZGF0ZSAtIGQwIDwgZDEgLSBkYXRlID8gZDAgOiBkMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2VpbChkYXRlKSB7XG4gICAgICBzdGVwKGRhdGUgPSBsb2NhbChuZXcgZDNfZGF0ZShkYXRlIC0gMSkpLCAxKTtcbiAgICAgIHJldHVybiBkYXRlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvZmZzZXQoZGF0ZSwgaykge1xuICAgICAgc3RlcChkYXRlID0gbmV3IGQzX2RhdGUoK2RhdGUpLCBrKTtcbiAgICAgIHJldHVybiBkYXRlO1xuICAgIH1cbiAgICBmdW5jdGlvbiByYW5nZSh0MCwgdDEsIGR0KSB7XG4gICAgICB2YXIgdGltZSA9IGNlaWwodDApLCB0aW1lcyA9IFtdO1xuICAgICAgaWYgKGR0ID4gMSkge1xuICAgICAgICB3aGlsZSAodGltZSA8IHQxKSB7XG4gICAgICAgICAgaWYgKCEobnVtYmVyKHRpbWUpICUgZHQpKSB0aW1lcy5wdXNoKG5ldyBEYXRlKCt0aW1lKSk7XG4gICAgICAgICAgc3RlcCh0aW1lLCAxKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2hpbGUgKHRpbWUgPCB0MSkgdGltZXMucHVzaChuZXcgRGF0ZSgrdGltZSkpLCBzdGVwKHRpbWUsIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRpbWVzO1xuICAgIH1cbiAgICBmdW5jdGlvbiByYW5nZV91dGModDAsIHQxLCBkdCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICB2YXIgdXRjID0gbmV3IGQzX2RhdGVfdXRjKCk7XG4gICAgICAgIHV0Yy5fID0gdDA7XG4gICAgICAgIHJldHVybiByYW5nZSh1dGMsIHQxLCBkdCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkM19kYXRlID0gRGF0ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgbG9jYWwuZmxvb3IgPSBsb2NhbDtcbiAgICBsb2NhbC5yb3VuZCA9IHJvdW5kO1xuICAgIGxvY2FsLmNlaWwgPSBjZWlsO1xuICAgIGxvY2FsLm9mZnNldCA9IG9mZnNldDtcbiAgICBsb2NhbC5yYW5nZSA9IHJhbmdlO1xuICAgIHZhciB1dGMgPSBsb2NhbC51dGMgPSBkM190aW1lX2ludGVydmFsX3V0Yyhsb2NhbCk7XG4gICAgdXRjLmZsb29yID0gdXRjO1xuICAgIHV0Yy5yb3VuZCA9IGQzX3RpbWVfaW50ZXJ2YWxfdXRjKHJvdW5kKTtcbiAgICB1dGMuY2VpbCA9IGQzX3RpbWVfaW50ZXJ2YWxfdXRjKGNlaWwpO1xuICAgIHV0Yy5vZmZzZXQgPSBkM190aW1lX2ludGVydmFsX3V0YyhvZmZzZXQpO1xuICAgIHV0Yy5yYW5nZSA9IHJhbmdlX3V0YztcbiAgICByZXR1cm4gbG9jYWw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9pbnRlcnZhbF91dGMobWV0aG9kKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGUsIGspIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGQzX2RhdGUgPSBkM19kYXRlX3V0YztcbiAgICAgICAgdmFyIHV0YyA9IG5ldyBkM19kYXRlX3V0YygpO1xuICAgICAgICB1dGMuXyA9IGRhdGU7XG4gICAgICAgIHJldHVybiBtZXRob2QodXRjLCBrKS5fO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBkM190aW1lLnllYXIgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlID0gZDNfdGltZS5kYXkoZGF0ZSk7XG4gICAgZGF0ZS5zZXRNb250aCgwLCAxKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkgKyBvZmZzZXQpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgfSk7XG4gIGQzX3RpbWUueWVhcnMgPSBkM190aW1lLnllYXIucmFuZ2U7XG4gIGQzX3RpbWUueWVhcnMudXRjID0gZDNfdGltZS55ZWFyLnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5kYXkgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgZGF5ID0gbmV3IGQzX2RhdGUoMmUzLCAwKTtcbiAgICBkYXkuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpKTtcbiAgICByZXR1cm4gZGF5O1xuICB9LCBmdW5jdGlvbihkYXRlLCBvZmZzZXQpIHtcbiAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBvZmZzZXQpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0RGF0ZSgpIC0gMTtcbiAgfSk7XG4gIGQzX3RpbWUuZGF5cyA9IGQzX3RpbWUuZGF5LnJhbmdlO1xuICBkM190aW1lLmRheXMudXRjID0gZDNfdGltZS5kYXkudXRjLnJhbmdlO1xuICBkM190aW1lLmRheU9mWWVhciA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgeWVhciA9IGQzX3RpbWUueWVhcihkYXRlKTtcbiAgICByZXR1cm4gTWF0aC5mbG9vcigoZGF0ZSAtIHllYXIgLSAoZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpIC0geWVhci5nZXRUaW1lem9uZU9mZnNldCgpKSAqIDZlNCkgLyA4NjRlNSk7XG4gIH07XG4gIFsgXCJzdW5kYXlcIiwgXCJtb25kYXlcIiwgXCJ0dWVzZGF5XCIsIFwid2VkbmVzZGF5XCIsIFwidGh1cnNkYXlcIiwgXCJmcmlkYXlcIiwgXCJzYXR1cmRheVwiIF0uZm9yRWFjaChmdW5jdGlvbihkYXksIGkpIHtcbiAgICBpID0gNyAtIGk7XG4gICAgdmFyIGludGVydmFsID0gZDNfdGltZVtkYXldID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgICAoZGF0ZSA9IGQzX3RpbWUuZGF5KGRhdGUpKS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gKGRhdGUuZ2V0RGF5KCkgKyBpKSAlIDcpO1xuICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBNYXRoLmZsb29yKG9mZnNldCkgKiA3KTtcbiAgICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgICB2YXIgZGF5ID0gZDNfdGltZS55ZWFyKGRhdGUpLmdldERheSgpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKGQzX3RpbWUuZGF5T2ZZZWFyKGRhdGUpICsgKGRheSArIGkpICUgNykgLyA3KSAtIChkYXkgIT09IGkpO1xuICAgIH0pO1xuICAgIGQzX3RpbWVbZGF5ICsgXCJzXCJdID0gaW50ZXJ2YWwucmFuZ2U7XG4gICAgZDNfdGltZVtkYXkgKyBcInNcIl0udXRjID0gaW50ZXJ2YWwudXRjLnJhbmdlO1xuICAgIGQzX3RpbWVbZGF5ICsgXCJPZlllYXJcIl0gPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgICB2YXIgZGF5ID0gZDNfdGltZS55ZWFyKGRhdGUpLmdldERheSgpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKGQzX3RpbWUuZGF5T2ZZZWFyKGRhdGUpICsgKGRheSArIGkpICUgNykgLyA3KTtcbiAgICB9O1xuICB9KTtcbiAgZDNfdGltZS53ZWVrID0gZDNfdGltZS5zdW5kYXk7XG4gIGQzX3RpbWUud2Vla3MgPSBkM190aW1lLnN1bmRheS5yYW5nZTtcbiAgZDNfdGltZS53ZWVrcy51dGMgPSBkM190aW1lLnN1bmRheS51dGMucmFuZ2U7XG4gIGQzX3RpbWUud2Vla09mWWVhciA9IGQzX3RpbWUuc3VuZGF5T2ZZZWFyO1xuICBmdW5jdGlvbiBkM19sb2NhbGVfdGltZUZvcm1hdChsb2NhbGUpIHtcbiAgICB2YXIgbG9jYWxlX2RhdGVUaW1lID0gbG9jYWxlLmRhdGVUaW1lLCBsb2NhbGVfZGF0ZSA9IGxvY2FsZS5kYXRlLCBsb2NhbGVfdGltZSA9IGxvY2FsZS50aW1lLCBsb2NhbGVfcGVyaW9kcyA9IGxvY2FsZS5wZXJpb2RzLCBsb2NhbGVfZGF5cyA9IGxvY2FsZS5kYXlzLCBsb2NhbGVfc2hvcnREYXlzID0gbG9jYWxlLnNob3J0RGF5cywgbG9jYWxlX21vbnRocyA9IGxvY2FsZS5tb250aHMsIGxvY2FsZV9zaG9ydE1vbnRocyA9IGxvY2FsZS5zaG9ydE1vbnRocztcbiAgICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdCh0ZW1wbGF0ZSkge1xuICAgICAgdmFyIG4gPSB0ZW1wbGF0ZS5sZW5ndGg7XG4gICAgICBmdW5jdGlvbiBmb3JtYXQoZGF0ZSkge1xuICAgICAgICB2YXIgc3RyaW5nID0gW10sIGkgPSAtMSwgaiA9IDAsIGMsIHAsIGY7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgaWYgKHRlbXBsYXRlLmNoYXJDb2RlQXQoaSkgPT09IDM3KSB7XG4gICAgICAgICAgICBzdHJpbmcucHVzaCh0ZW1wbGF0ZS5zbGljZShqLCBpKSk7XG4gICAgICAgICAgICBpZiAoKHAgPSBkM190aW1lX2Zvcm1hdFBhZHNbYyA9IHRlbXBsYXRlLmNoYXJBdCgrK2kpXSkgIT0gbnVsbCkgYyA9IHRlbXBsYXRlLmNoYXJBdCgrK2kpO1xuICAgICAgICAgICAgaWYgKGYgPSBkM190aW1lX2Zvcm1hdHNbY10pIGMgPSBmKGRhdGUsIHAgPT0gbnVsbCA/IGMgPT09IFwiZVwiID8gXCIgXCIgOiBcIjBcIiA6IHApO1xuICAgICAgICAgICAgc3RyaW5nLnB1c2goYyk7XG4gICAgICAgICAgICBqID0gaSArIDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN0cmluZy5wdXNoKHRlbXBsYXRlLnNsaWNlKGosIGkpKTtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5qb2luKFwiXCIpO1xuICAgICAgfVxuICAgICAgZm9ybWF0LnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgIHZhciBkID0ge1xuICAgICAgICAgIHk6IDE5MDAsXG4gICAgICAgICAgbTogMCxcbiAgICAgICAgICBkOiAxLFxuICAgICAgICAgIEg6IDAsXG4gICAgICAgICAgTTogMCxcbiAgICAgICAgICBTOiAwLFxuICAgICAgICAgIEw6IDAsXG4gICAgICAgICAgWjogbnVsbFxuICAgICAgICB9LCBpID0gZDNfdGltZV9wYXJzZShkLCB0ZW1wbGF0ZSwgc3RyaW5nLCAwKTtcbiAgICAgICAgaWYgKGkgIT0gc3RyaW5nLmxlbmd0aCkgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmIChcInBcIiBpbiBkKSBkLkggPSBkLkggJSAxMiArIGQucCAqIDEyO1xuICAgICAgICB2YXIgbG9jYWxaID0gZC5aICE9IG51bGwgJiYgZDNfZGF0ZSAhPT0gZDNfZGF0ZV91dGMsIGRhdGUgPSBuZXcgKGxvY2FsWiA/IGQzX2RhdGVfdXRjIDogZDNfZGF0ZSkoKTtcbiAgICAgICAgaWYgKFwialwiIGluIGQpIGRhdGUuc2V0RnVsbFllYXIoZC55LCAwLCBkLmopOyBlbHNlIGlmIChcIldcIiBpbiBkIHx8IFwiVVwiIGluIGQpIHtcbiAgICAgICAgICBpZiAoIShcIndcIiBpbiBkKSkgZC53ID0gXCJXXCIgaW4gZCA/IDEgOiAwO1xuICAgICAgICAgIGRhdGUuc2V0RnVsbFllYXIoZC55LCAwLCAxKTtcbiAgICAgICAgICBkYXRlLnNldEZ1bGxZZWFyKGQueSwgMCwgXCJXXCIgaW4gZCA/IChkLncgKyA2KSAlIDcgKyBkLlcgKiA3IC0gKGRhdGUuZ2V0RGF5KCkgKyA1KSAlIDcgOiBkLncgKyBkLlUgKiA3IC0gKGRhdGUuZ2V0RGF5KCkgKyA2KSAlIDcpO1xuICAgICAgICB9IGVsc2UgZGF0ZS5zZXRGdWxsWWVhcihkLnksIGQubSwgZC5kKTtcbiAgICAgICAgZGF0ZS5zZXRIb3VycyhkLkggKyAoZC5aIC8gMTAwIHwgMCksIGQuTSArIGQuWiAlIDEwMCwgZC5TLCBkLkwpO1xuICAgICAgICByZXR1cm4gbG9jYWxaID8gZGF0ZS5fIDogZGF0ZTtcbiAgICAgIH07XG4gICAgICBmb3JtYXQudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRlbXBsYXRlO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2UoZGF0ZSwgdGVtcGxhdGUsIHN0cmluZywgaikge1xuICAgICAgdmFyIGMsIHAsIHQsIGkgPSAwLCBuID0gdGVtcGxhdGUubGVuZ3RoLCBtID0gc3RyaW5nLmxlbmd0aDtcbiAgICAgIHdoaWxlIChpIDwgbikge1xuICAgICAgICBpZiAoaiA+PSBtKSByZXR1cm4gLTE7XG4gICAgICAgIGMgPSB0ZW1wbGF0ZS5jaGFyQ29kZUF0KGkrKyk7XG4gICAgICAgIGlmIChjID09PSAzNykge1xuICAgICAgICAgIHQgPSB0ZW1wbGF0ZS5jaGFyQXQoaSsrKTtcbiAgICAgICAgICBwID0gZDNfdGltZV9wYXJzZXJzW3QgaW4gZDNfdGltZV9mb3JtYXRQYWRzID8gdGVtcGxhdGUuY2hhckF0KGkrKykgOiB0XTtcbiAgICAgICAgICBpZiAoIXAgfHwgKGogPSBwKGRhdGUsIHN0cmluZywgaikpIDwgMCkgcmV0dXJuIC0xO1xuICAgICAgICB9IGVsc2UgaWYgKGMgIT0gc3RyaW5nLmNoYXJDb2RlQXQoaisrKSkge1xuICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGo7XG4gICAgfVxuICAgIGQzX3RpbWVfZm9ybWF0LnV0YyA9IGZ1bmN0aW9uKHRlbXBsYXRlKSB7XG4gICAgICB2YXIgbG9jYWwgPSBkM190aW1lX2Zvcm1hdCh0ZW1wbGF0ZSk7XG4gICAgICBmdW5jdGlvbiBmb3JtYXQoZGF0ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGQzX2RhdGUgPSBkM19kYXRlX3V0YztcbiAgICAgICAgICB2YXIgdXRjID0gbmV3IGQzX2RhdGUoKTtcbiAgICAgICAgICB1dGMuXyA9IGRhdGU7XG4gICAgICAgICAgcmV0dXJuIGxvY2FsKHV0Yyk7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZvcm1hdC5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGQzX2RhdGUgPSBkM19kYXRlX3V0YztcbiAgICAgICAgICB2YXIgZGF0ZSA9IGxvY2FsLnBhcnNlKHN0cmluZyk7XG4gICAgICAgICAgcmV0dXJuIGRhdGUgJiYgZGF0ZS5fO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGQzX2RhdGUgPSBEYXRlO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZm9ybWF0LnRvU3RyaW5nID0gbG9jYWwudG9TdHJpbmc7XG4gICAgICByZXR1cm4gZm9ybWF0O1xuICAgIH07XG4gICAgZDNfdGltZV9mb3JtYXQubXVsdGkgPSBkM190aW1lX2Zvcm1hdC51dGMubXVsdGkgPSBkM190aW1lX2Zvcm1hdE11bHRpO1xuICAgIHZhciBkM190aW1lX3BlcmlvZExvb2t1cCA9IGQzLm1hcCgpLCBkM190aW1lX2RheVJlID0gZDNfdGltZV9mb3JtYXRSZShsb2NhbGVfZGF5cyksIGQzX3RpbWVfZGF5TG9va3VwID0gZDNfdGltZV9mb3JtYXRMb29rdXAobG9jYWxlX2RheXMpLCBkM190aW1lX2RheUFiYnJldlJlID0gZDNfdGltZV9mb3JtYXRSZShsb2NhbGVfc2hvcnREYXlzKSwgZDNfdGltZV9kYXlBYmJyZXZMb29rdXAgPSBkM190aW1lX2Zvcm1hdExvb2t1cChsb2NhbGVfc2hvcnREYXlzKSwgZDNfdGltZV9tb250aFJlID0gZDNfdGltZV9mb3JtYXRSZShsb2NhbGVfbW9udGhzKSwgZDNfdGltZV9tb250aExvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9tb250aHMpLCBkM190aW1lX21vbnRoQWJicmV2UmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9zaG9ydE1vbnRocyksIGQzX3RpbWVfbW9udGhBYmJyZXZMb29rdXAgPSBkM190aW1lX2Zvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRNb250aHMpO1xuICAgIGxvY2FsZV9wZXJpb2RzLmZvckVhY2goZnVuY3Rpb24ocCwgaSkge1xuICAgICAgZDNfdGltZV9wZXJpb2RMb29rdXAuc2V0KHAudG9Mb3dlckNhc2UoKSwgaSk7XG4gICAgfSk7XG4gICAgdmFyIGQzX3RpbWVfZm9ybWF0cyA9IHtcbiAgICAgIGE6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZV9zaG9ydERheXNbZC5nZXREYXkoKV07XG4gICAgICB9LFxuICAgICAgQTogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX2RheXNbZC5nZXREYXkoKV07XG4gICAgICB9LFxuICAgICAgYjogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX3Nob3J0TW9udGhzW2QuZ2V0TW9udGgoKV07XG4gICAgICB9LFxuICAgICAgQjogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX21vbnRoc1tkLmdldE1vbnRoKCldO1xuICAgICAgfSxcbiAgICAgIGM6IGQzX3RpbWVfZm9ybWF0KGxvY2FsZV9kYXRlVGltZSksXG4gICAgICBkOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldERhdGUoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgZTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXREYXRlKCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIEg6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0SG91cnMoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgSTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRIb3VycygpICUgMTIgfHwgMTIsIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIGo6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKDEgKyBkM190aW1lLmRheU9mWWVhcihkKSwgcCwgMyk7XG4gICAgICB9LFxuICAgICAgTDogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRNaWxsaXNlY29uZHMoKSwgcCwgMyk7XG4gICAgICB9LFxuICAgICAgbTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRNb250aCgpICsgMSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgTTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRNaW51dGVzKCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIHA6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZV9wZXJpb2RzWysoZC5nZXRIb3VycygpID49IDEyKV07XG4gICAgICB9LFxuICAgICAgUzogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRTZWNvbmRzKCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIFU6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQzX3RpbWUuc3VuZGF5T2ZZZWFyKGQpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICB3OiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkLmdldERheSgpO1xuICAgICAgfSxcbiAgICAgIFc6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQzX3RpbWUubW9uZGF5T2ZZZWFyKGQpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICB4OiBkM190aW1lX2Zvcm1hdChsb2NhbGVfZGF0ZSksXG4gICAgICBYOiBkM190aW1lX2Zvcm1hdChsb2NhbGVfdGltZSksXG4gICAgICB5OiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldEZ1bGxZZWFyKCkgJSAxMDAsIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIFk6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RnVsbFllYXIoKSAlIDFlNCwgcCwgNCk7XG4gICAgICB9LFxuICAgICAgWjogZDNfdGltZV96b25lLFxuICAgICAgXCIlXCI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gXCIlXCI7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgZDNfdGltZV9wYXJzZXJzID0ge1xuICAgICAgYTogZDNfdGltZV9wYXJzZVdlZWtkYXlBYmJyZXYsXG4gICAgICBBOiBkM190aW1lX3BhcnNlV2Vla2RheSxcbiAgICAgIGI6IGQzX3RpbWVfcGFyc2VNb250aEFiYnJldixcbiAgICAgIEI6IGQzX3RpbWVfcGFyc2VNb250aCxcbiAgICAgIGM6IGQzX3RpbWVfcGFyc2VMb2NhbGVGdWxsLFxuICAgICAgZDogZDNfdGltZV9wYXJzZURheSxcbiAgICAgIGU6IGQzX3RpbWVfcGFyc2VEYXksXG4gICAgICBIOiBkM190aW1lX3BhcnNlSG91cjI0LFxuICAgICAgSTogZDNfdGltZV9wYXJzZUhvdXIyNCxcbiAgICAgIGo6IGQzX3RpbWVfcGFyc2VEYXlPZlllYXIsXG4gICAgICBMOiBkM190aW1lX3BhcnNlTWlsbGlzZWNvbmRzLFxuICAgICAgbTogZDNfdGltZV9wYXJzZU1vbnRoTnVtYmVyLFxuICAgICAgTTogZDNfdGltZV9wYXJzZU1pbnV0ZXMsXG4gICAgICBwOiBkM190aW1lX3BhcnNlQW1QbSxcbiAgICAgIFM6IGQzX3RpbWVfcGFyc2VTZWNvbmRzLFxuICAgICAgVTogZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJTdW5kYXksXG4gICAgICB3OiBkM190aW1lX3BhcnNlV2Vla2RheU51bWJlcixcbiAgICAgIFc6IGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyTW9uZGF5LFxuICAgICAgeDogZDNfdGltZV9wYXJzZUxvY2FsZURhdGUsXG4gICAgICBYOiBkM190aW1lX3BhcnNlTG9jYWxlVGltZSxcbiAgICAgIHk6IGQzX3RpbWVfcGFyc2VZZWFyLFxuICAgICAgWTogZDNfdGltZV9wYXJzZUZ1bGxZZWFyLFxuICAgICAgWjogZDNfdGltZV9wYXJzZVpvbmUsXG4gICAgICBcIiVcIjogZDNfdGltZV9wYXJzZUxpdGVyYWxQZXJjZW50XG4gICAgfTtcbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla2RheUFiYnJldihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIGQzX3RpbWVfZGF5QWJicmV2UmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9kYXlBYmJyZXZSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLncgPSBkM190aW1lX2RheUFiYnJldkxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla2RheShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIGQzX3RpbWVfZGF5UmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9kYXlSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLncgPSBkM190aW1lX2RheUxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTW9udGhBYmJyZXYoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICBkM190aW1lX21vbnRoQWJicmV2UmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9tb250aEFiYnJldlJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICAgIHJldHVybiBuID8gKGRhdGUubSA9IGQzX3RpbWVfbW9udGhBYmJyZXZMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1vbnRoKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9tb250aFJlLmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfbW9udGhSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLm0gPSBkM190aW1lX21vbnRoTG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VMb2NhbGVGdWxsKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfcGFyc2UoZGF0ZSwgZDNfdGltZV9mb3JtYXRzLmMudG9TdHJpbmcoKSwgc3RyaW5nLCBpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUxvY2FsZURhdGUoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9wYXJzZShkYXRlLCBkM190aW1lX2Zvcm1hdHMueC50b1N0cmluZygpLCBzdHJpbmcsIGkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTG9jYWxlVGltZShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3BhcnNlKGRhdGUsIGQzX3RpbWVfZm9ybWF0cy5YLnRvU3RyaW5nKCksIHN0cmluZywgaSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VBbVBtKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgdmFyIG4gPSBkM190aW1lX3BlcmlvZExvb2t1cC5nZXQoc3RyaW5nLnNsaWNlKGksIGkgKz0gMikudG9Mb3dlckNhc2UoKSk7XG4gICAgICByZXR1cm4gbiA9PSBudWxsID8gLTEgOiAoZGF0ZS5wID0gbiwgaSk7XG4gICAgfVxuICAgIHJldHVybiBkM190aW1lX2Zvcm1hdDtcbiAgfVxuICB2YXIgZDNfdGltZV9mb3JtYXRQYWRzID0ge1xuICAgIFwiLVwiOiBcIlwiLFxuICAgIF86IFwiIFwiLFxuICAgIFwiMFwiOiBcIjBcIlxuICB9LCBkM190aW1lX251bWJlclJlID0gL15cXHMqXFxkKy8sIGQzX3RpbWVfcGVyY2VudFJlID0gL14lLztcbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRQYWQodmFsdWUsIGZpbGwsIHdpZHRoKSB7XG4gICAgdmFyIHNpZ24gPSB2YWx1ZSA8IDAgPyBcIi1cIiA6IFwiXCIsIHN0cmluZyA9IChzaWduID8gLXZhbHVlIDogdmFsdWUpICsgXCJcIiwgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgICByZXR1cm4gc2lnbiArIChsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheSh3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oZmlsbCkgKyBzdHJpbmcgOiBzdHJpbmcpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0UmUobmFtZXMpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oPzpcIiArIG5hbWVzLm1hcChkMy5yZXF1b3RlKS5qb2luKFwifFwiKSArIFwiKVwiLCBcImlcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRMb29rdXAobmFtZXMpIHtcbiAgICB2YXIgbWFwID0gbmV3IGQzX01hcCgpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQobmFtZXNbaV0udG9Mb3dlckNhc2UoKSwgaSk7XG4gICAgcmV0dXJuIG1hcDtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla2RheU51bWJlcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS53ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla051bWJlclN1bmRheShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyTW9uZGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGRhdGUuVyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUZ1bGxZZWFyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDQpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLnkgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VZZWFyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLnkgPSBkM190aW1lX2V4cGFuZFllYXIoK25bMF0pLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVpvbmUoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIC9eWystXVxcZHs0fSQvLnRlc3Qoc3RyaW5nID0gc3RyaW5nLnNsaWNlKGksIGkgKyA1KSkgPyAoZGF0ZS5aID0gLXN0cmluZywgXG4gICAgaSArIDUpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9leHBhbmRZZWFyKGQpIHtcbiAgICByZXR1cm4gZCArIChkID4gNjggPyAxOTAwIDogMmUzKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTW9udGhOdW1iZXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUubSA9IG5bMF0gLSAxLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZURheShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5kID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlRGF5T2ZZZWFyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDMpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLmogPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VIb3VyMjQoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUuSCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1pbnV0ZXMoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUuTSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVNlY29uZHMoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUuUyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1pbGxpc2Vjb25kcyhkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAzKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5MID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3pvbmUoZCkge1xuICAgIHZhciB6ID0gZC5nZXRUaW1lem9uZU9mZnNldCgpLCB6cyA9IHogPiAwID8gXCItXCIgOiBcIitcIiwgemggPSBhYnMoeikgLyA2MCB8IDAsIHptID0gYWJzKHopICUgNjA7XG4gICAgcmV0dXJuIHpzICsgZDNfdGltZV9mb3JtYXRQYWQoemgsIFwiMFwiLCAyKSArIGQzX3RpbWVfZm9ybWF0UGFkKHptLCBcIjBcIiwgMik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUxpdGVyYWxQZXJjZW50KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfcGVyY2VudFJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX3BlcmNlbnRSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMSkpO1xuICAgIHJldHVybiBuID8gaSArIG5bMF0ubGVuZ3RoIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRNdWx0aShmb3JtYXRzKSB7XG4gICAgdmFyIG4gPSBmb3JtYXRzLmxlbmd0aCwgaSA9IC0xO1xuICAgIHdoaWxlICgrK2kgPCBuKSBmb3JtYXRzW2ldWzBdID0gdGhpcyhmb3JtYXRzW2ldWzBdKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGkgPSAwLCBmID0gZm9ybWF0c1tpXTtcbiAgICAgIHdoaWxlICghZlsxXShkYXRlKSkgZiA9IGZvcm1hdHNbKytpXTtcbiAgICAgIHJldHVybiBmWzBdKGRhdGUpO1xuICAgIH07XG4gIH1cbiAgZDMubG9jYWxlID0gZnVuY3Rpb24obG9jYWxlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG51bWJlckZvcm1hdDogZDNfbG9jYWxlX251bWJlckZvcm1hdChsb2NhbGUpLFxuICAgICAgdGltZUZvcm1hdDogZDNfbG9jYWxlX3RpbWVGb3JtYXQobG9jYWxlKVxuICAgIH07XG4gIH07XG4gIHZhciBkM19sb2NhbGVfZW5VUyA9IGQzLmxvY2FsZSh7XG4gICAgZGVjaW1hbDogXCIuXCIsXG4gICAgdGhvdXNhbmRzOiBcIixcIixcbiAgICBncm91cGluZzogWyAzIF0sXG4gICAgY3VycmVuY3k6IFsgXCIkXCIsIFwiXCIgXSxcbiAgICBkYXRlVGltZTogXCIlYSAlYiAlZSAlWCAlWVwiLFxuICAgIGRhdGU6IFwiJW0vJWQvJVlcIixcbiAgICB0aW1lOiBcIiVIOiVNOiVTXCIsXG4gICAgcGVyaW9kczogWyBcIkFNXCIsIFwiUE1cIiBdLFxuICAgIGRheXM6IFsgXCJTdW5kYXlcIiwgXCJNb25kYXlcIiwgXCJUdWVzZGF5XCIsIFwiV2VkbmVzZGF5XCIsIFwiVGh1cnNkYXlcIiwgXCJGcmlkYXlcIiwgXCJTYXR1cmRheVwiIF0sXG4gICAgc2hvcnREYXlzOiBbIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCIgXSxcbiAgICBtb250aHM6IFsgXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiIF0sXG4gICAgc2hvcnRNb250aHM6IFsgXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIiwgXCJKdWxcIiwgXCJBdWdcIiwgXCJTZXBcIiwgXCJPY3RcIiwgXCJOb3ZcIiwgXCJEZWNcIiBdXG4gIH0pO1xuICBkMy5mb3JtYXQgPSBkM19sb2NhbGVfZW5VUy5udW1iZXJGb3JtYXQ7XG4gIGQzLmdlbyA9IHt9O1xuICBmdW5jdGlvbiBkM19hZGRlcigpIHt9XG4gIGQzX2FkZGVyLnByb3RvdHlwZSA9IHtcbiAgICBzOiAwLFxuICAgIHQ6IDAsXG4gICAgYWRkOiBmdW5jdGlvbih5KSB7XG4gICAgICBkM19hZGRlclN1bSh5LCB0aGlzLnQsIGQzX2FkZGVyVGVtcCk7XG4gICAgICBkM19hZGRlclN1bShkM19hZGRlclRlbXAucywgdGhpcy5zLCB0aGlzKTtcbiAgICAgIGlmICh0aGlzLnMpIHRoaXMudCArPSBkM19hZGRlclRlbXAudDsgZWxzZSB0aGlzLnMgPSBkM19hZGRlclRlbXAudDtcbiAgICB9LFxuICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMucyA9IHRoaXMudCA9IDA7XG4gICAgfSxcbiAgICB2YWx1ZU9mOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnM7XG4gICAgfVxuICB9O1xuICB2YXIgZDNfYWRkZXJUZW1wID0gbmV3IGQzX2FkZGVyKCk7XG4gIGZ1bmN0aW9uIGQzX2FkZGVyU3VtKGEsIGIsIG8pIHtcbiAgICB2YXIgeCA9IG8ucyA9IGEgKyBiLCBidiA9IHggLSBhLCBhdiA9IHggLSBidjtcbiAgICBvLnQgPSBhIC0gYXYgKyAoYiAtIGJ2KTtcbiAgfVxuICBkMy5nZW8uc3RyZWFtID0gZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgIGlmIChvYmplY3QgJiYgZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpKSB7XG4gICAgICBkM19nZW9fc3RyZWFtT2JqZWN0VHlwZVtvYmplY3QudHlwZV0ob2JqZWN0LCBsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGQzX2dlb19zdHJlYW1HZW9tZXRyeShvYmplY3QsIGxpc3RlbmVyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19zdHJlYW1HZW9tZXRyeShnZW9tZXRyeSwgbGlzdGVuZXIpIHtcbiAgICBpZiAoZ2VvbWV0cnkgJiYgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKSkge1xuICAgICAgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuICB2YXIgZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGUgPSB7XG4gICAgRmVhdHVyZTogZnVuY3Rpb24oZmVhdHVyZSwgbGlzdGVuZXIpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1HZW9tZXRyeShmZWF0dXJlLmdlb21ldHJ5LCBsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBGZWF0dXJlQ29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBsaXN0ZW5lcik7XG4gICAgfVxuICB9O1xuICB2YXIgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZSA9IHtcbiAgICBTcGhlcmU6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyLnNwaGVyZSgpO1xuICAgIH0sXG4gICAgUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIG9iamVjdCA9IG9iamVjdC5jb29yZGluYXRlcztcbiAgICAgIGxpc3RlbmVyLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICAgIH0sXG4gICAgTXVsdGlQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgb2JqZWN0ID0gY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICAgIH0sXG4gICAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgZDNfZ2VvX3N0cmVhbUxpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBsaXN0ZW5lciwgMCk7XG4gICAgfSxcbiAgICBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lciwgMCk7XG4gICAgfSxcbiAgICBQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICBkM19nZW9fc3RyZWFtUG9seWdvbihvYmplY3QuY29vcmRpbmF0ZXMsIGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGdlb21ldHJpZXMgPSBvYmplY3QuZ2VvbWV0cmllcywgaSA9IC0xLCBuID0gZ2VvbWV0cmllcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGdlb21ldHJpZXNbaV0sIGxpc3RlbmVyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19zdHJlYW1MaW5lKGNvb3JkaW5hdGVzLCBsaXN0ZW5lciwgY2xvc2VkKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aCAtIGNsb3NlZCwgY29vcmRpbmF0ZTtcbiAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICB3aGlsZSAoKytpIDwgbikgY29vcmRpbmF0ZSA9IGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lci5wb2ludChjb29yZGluYXRlWzBdLCBjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdKTtcbiAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3N0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXMsIGxpc3RlbmVyKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKTtcbiAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLCAxKTtcbiAgICBsaXN0ZW5lci5wb2x5Z29uRW5kKCk7XG4gIH1cbiAgZDMuZ2VvLmFyZWEgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fYXJlYVN1bSA9IDA7XG4gICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGQzX2dlb19hcmVhKTtcbiAgICByZXR1cm4gZDNfZ2VvX2FyZWFTdW07XG4gIH07XG4gIHZhciBkM19nZW9fYXJlYVN1bSwgZDNfZ2VvX2FyZWFSaW5nU3VtID0gbmV3IGQzX2FkZGVyKCk7XG4gIHZhciBkM19nZW9fYXJlYSA9IHtcbiAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2FyZWFTdW0gKz0gNCAqIM+AO1xuICAgIH0sXG4gICAgcG9pbnQ6IGQzX25vb3AsXG4gICAgbGluZVN0YXJ0OiBkM19ub29wLFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19hcmVhUmluZ1N1bS5yZXNldCgpO1xuICAgICAgZDNfZ2VvX2FyZWEubGluZVN0YXJ0ID0gZDNfZ2VvX2FyZWFSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBhcmVhID0gMiAqIGQzX2dlb19hcmVhUmluZ1N1bTtcbiAgICAgIGQzX2dlb19hcmVhU3VtICs9IGFyZWEgPCAwID8gNCAqIM+AICsgYXJlYSA6IGFyZWE7XG4gICAgICBkM19nZW9fYXJlYS5saW5lU3RhcnQgPSBkM19nZW9fYXJlYS5saW5lRW5kID0gZDNfZ2VvX2FyZWEucG9pbnQgPSBkM19ub29wO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2FyZWFSaW5nU3RhcnQoKSB7XG4gICAgdmFyIM67MDAsIM+GMDAsIM67MCwgY29zz4YwLCBzaW7PhjA7XG4gICAgZDNfZ2VvX2FyZWEucG9pbnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIGQzX2dlb19hcmVhLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgzrswID0gKM67MDAgPSDOuykgKiBkM19yYWRpYW5zLCBjb3PPhjAgPSBNYXRoLmNvcyjPhiA9ICjPhjAwID0gz4YpICogZDNfcmFkaWFucyAvIDIgKyDPgCAvIDQpLCBcbiAgICAgIHNpbs+GMCA9IE1hdGguc2luKM+GKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICDPhiA9IM+GICogZDNfcmFkaWFucyAvIDIgKyDPgCAvIDQ7XG4gICAgICB2YXIgZM67ID0gzrsgLSDOuzAsIHNkzrsgPSBkzrsgPj0gMCA/IDEgOiAtMSwgYWTOuyA9IHNkzrsgKiBkzrssIGNvc8+GID0gTWF0aC5jb3Moz4YpLCBzaW7PhiA9IE1hdGguc2luKM+GKSwgayA9IHNpbs+GMCAqIHNpbs+GLCB1ID0gY29zz4YwICogY29zz4YgKyBrICogTWF0aC5jb3MoYWTOuyksIHYgPSBrICogc2TOuyAqIE1hdGguc2luKGFkzrspO1xuICAgICAgZDNfZ2VvX2FyZWFSaW5nU3VtLmFkZChNYXRoLmF0YW4yKHYsIHUpKTtcbiAgICAgIM67MCA9IM67LCBjb3PPhjAgPSBjb3PPhiwgc2luz4YwID0gc2luz4Y7XG4gICAgfVxuICAgIGQzX2dlb19hcmVhLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIG5leHRQb2ludCjOuzAwLCDPhjAwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW4oc3BoZXJpY2FsKSB7XG4gICAgdmFyIM67ID0gc3BoZXJpY2FsWzBdLCDPhiA9IHNwaGVyaWNhbFsxXSwgY29zz4YgPSBNYXRoLmNvcyjPhik7XG4gICAgcmV0dXJuIFsgY29zz4YgKiBNYXRoLmNvcyjOuyksIGNvc8+GICogTWF0aC5zaW4ozrspLCBNYXRoLnNpbijPhikgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuRG90KGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXSArIGFbMl0gKiBiWzJdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhhLCBiKSB7XG4gICAgcmV0dXJuIFsgYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXSwgYVsyXSAqIGJbMF0gLSBhWzBdICogYlsyXSwgYVswXSAqIGJbMV0gLSBhWzFdICogYlswXSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5BZGQoYSwgYikge1xuICAgIGFbMF0gKz0gYlswXTtcbiAgICBhWzFdICs9IGJbMV07XG4gICAgYVsyXSArPSBiWzJdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5TY2FsZSh2ZWN0b3IsIGspIHtcbiAgICByZXR1cm4gWyB2ZWN0b3JbMF0gKiBrLCB2ZWN0b3JbMV0gKiBrLCB2ZWN0b3JbMl0gKiBrIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShkKSB7XG4gICAgdmFyIGwgPSBNYXRoLnNxcnQoZFswXSAqIGRbMF0gKyBkWzFdICogZFsxXSArIGRbMl0gKiBkWzJdKTtcbiAgICBkWzBdIC89IGw7XG4gICAgZFsxXSAvPSBsO1xuICAgIGRbMl0gLz0gbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fc3BoZXJpY2FsKGNhcnRlc2lhbikge1xuICAgIHJldHVybiBbIE1hdGguYXRhbjIoY2FydGVzaWFuWzFdLCBjYXJ0ZXNpYW5bMF0pLCBkM19hc2luKGNhcnRlc2lhblsyXSkgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fc3BoZXJpY2FsRXF1YWwoYSwgYikge1xuICAgIHJldHVybiBhYnMoYVswXSAtIGJbMF0pIDwgzrUgJiYgYWJzKGFbMV0gLSBiWzFdKSA8IM61O1xuICB9XG4gIGQzLmdlby5ib3VuZHMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgzrswLCDPhjAsIM67MSwgz4YxLCDOu18sIM67X18sIM+GX18sIHAwLCBkzrtTdW0sIHJhbmdlcywgcmFuZ2U7XG4gICAgdmFyIGJvdW5kID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgYm91bmQucG9pbnQgPSByaW5nUG9pbnQ7XG4gICAgICAgIGJvdW5kLmxpbmVTdGFydCA9IHJpbmdTdGFydDtcbiAgICAgICAgYm91bmQubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICAgIGTOu1N1bSA9IDA7XG4gICAgICAgIGQzX2dlb19hcmVhLnBvbHlnb25TdGFydCgpO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBkM19nZW9fYXJlYS5wb2x5Z29uRW5kKCk7XG4gICAgICAgIGJvdW5kLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIGJvdW5kLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgYm91bmQubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIGlmIChkM19nZW9fYXJlYVJpbmdTdW0gPCAwKSDOuzAgPSAtKM67MSA9IDE4MCksIM+GMCA9IC0oz4YxID0gOTApOyBlbHNlIGlmIChkzrtTdW0gPiDOtSkgz4YxID0gOTA7IGVsc2UgaWYgKGTOu1N1bSA8IC3OtSkgz4YwID0gLTkwO1xuICAgICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICB9XG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCjOuywgz4YpIHtcbiAgICAgIHJhbmdlcy5wdXNoKHJhbmdlID0gWyDOuzAgPSDOuywgzrsxID0gzrsgXSk7XG4gICAgICBpZiAoz4YgPCDPhjApIM+GMCA9IM+GO1xuICAgICAgaWYgKM+GID4gz4YxKSDPhjEgPSDPhjtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZVBvaW50KM67LCDPhikge1xuICAgICAgdmFyIHAgPSBkM19nZW9fY2FydGVzaWFuKFsgzrsgKiBkM19yYWRpYW5zLCDPhiAqIGQzX3JhZGlhbnMgXSk7XG4gICAgICBpZiAocDApIHtcbiAgICAgICAgdmFyIG5vcm1hbCA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhwMCwgcCksIGVxdWF0b3JpYWwgPSBbIG5vcm1hbFsxXSwgLW5vcm1hbFswXSwgMCBdLCBpbmZsZWN0aW9uID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKGVxdWF0b3JpYWwsIG5vcm1hbCk7XG4gICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoaW5mbGVjdGlvbik7XG4gICAgICAgIGluZmxlY3Rpb24gPSBkM19nZW9fc3BoZXJpY2FsKGluZmxlY3Rpb24pO1xuICAgICAgICB2YXIgZM67ID0gzrsgLSDOu18sIHMgPSBkzrsgPiAwID8gMSA6IC0xLCDOu2kgPSBpbmZsZWN0aW9uWzBdICogZDNfZGVncmVlcyAqIHMsIGFudGltZXJpZGlhbiA9IGFicyhkzrspID4gMTgwO1xuICAgICAgICBpZiAoYW50aW1lcmlkaWFuIF4gKHMgKiDOu18gPCDOu2kgJiYgzrtpIDwgcyAqIM67KSkge1xuICAgICAgICAgIHZhciDPhmkgPSBpbmZsZWN0aW9uWzFdICogZDNfZGVncmVlcztcbiAgICAgICAgICBpZiAoz4ZpID4gz4YxKSDPhjEgPSDPhmk7XG4gICAgICAgIH0gZWxzZSBpZiAozrtpID0gKM67aSArIDM2MCkgJSAzNjAgLSAxODAsIGFudGltZXJpZGlhbiBeIChzICogzrtfIDwgzrtpICYmIM67aSA8IHMgKiDOuykpIHtcbiAgICAgICAgICB2YXIgz4ZpID0gLWluZmxlY3Rpb25bMV0gKiBkM19kZWdyZWVzO1xuICAgICAgICAgIGlmICjPhmkgPCDPhjApIM+GMCA9IM+GaTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoz4YgPCDPhjApIM+GMCA9IM+GO1xuICAgICAgICAgIGlmICjPhiA+IM+GMSkgz4YxID0gz4Y7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFudGltZXJpZGlhbikge1xuICAgICAgICAgIGlmICjOuyA8IM67Xykge1xuICAgICAgICAgICAgaWYgKGFuZ2xlKM67MCwgzrspID4gYW5nbGUozrswLCDOuzEpKSDOuzEgPSDOuztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFuZ2xlKM67LCDOuzEpID4gYW5nbGUozrswLCDOuzEpKSDOuzAgPSDOuztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKM67MSA+PSDOuzApIHtcbiAgICAgICAgICAgIGlmICjOuyA8IM67MCkgzrswID0gzrs7XG4gICAgICAgICAgICBpZiAozrsgPiDOuzEpIM67MSA9IM67O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAozrsgPiDOu18pIHtcbiAgICAgICAgICAgICAgaWYgKGFuZ2xlKM67MCwgzrspID4gYW5nbGUozrswLCDOuzEpKSDOuzEgPSDOuztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChhbmdsZSjOuywgzrsxKSA+IGFuZ2xlKM67MCwgzrsxKSkgzrswID0gzrs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwb2ludCjOuywgz4YpO1xuICAgICAgfVxuICAgICAgcDAgPSBwLCDOu18gPSDOuztcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgYm91bmQucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICBib3VuZC5wb2ludCA9IHBvaW50O1xuICAgICAgcDAgPSBudWxsO1xuICAgIH1cbiAgICBmdW5jdGlvbiByaW5nUG9pbnQozrssIM+GKSB7XG4gICAgICBpZiAocDApIHtcbiAgICAgICAgdmFyIGTOuyA9IM67IC0gzrtfO1xuICAgICAgICBkzrtTdW0gKz0gYWJzKGTOuykgPiAxODAgPyBkzrsgKyAoZM67ID4gMCA/IDM2MCA6IC0zNjApIDogZM67O1xuICAgICAgfSBlbHNlIM67X18gPSDOuywgz4ZfXyA9IM+GO1xuICAgICAgZDNfZ2VvX2FyZWEucG9pbnQozrssIM+GKTtcbiAgICAgIGxpbmVQb2ludCjOuywgz4YpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICBkM19nZW9fYXJlYS5saW5lU3RhcnQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgIHJpbmdQb2ludCjOu19fLCDPhl9fKTtcbiAgICAgIGQzX2dlb19hcmVhLmxpbmVFbmQoKTtcbiAgICAgIGlmIChhYnMoZM67U3VtKSA+IM61KSDOuzAgPSAtKM67MSA9IDE4MCk7XG4gICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICBwMCA9IG51bGw7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFuZ2xlKM67MCwgzrsxKSB7XG4gICAgICByZXR1cm4gKM67MSAtPSDOuzApIDwgMCA/IM67MSArIDM2MCA6IM67MTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY29tcGFyZVJhbmdlcyhhLCBiKSB7XG4gICAgICByZXR1cm4gYVswXSAtIGJbMF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdpdGhpblJhbmdlKHgsIHJhbmdlKSB7XG4gICAgICByZXR1cm4gcmFuZ2VbMF0gPD0gcmFuZ2VbMV0gPyByYW5nZVswXSA8PSB4ICYmIHggPD0gcmFuZ2VbMV0gOiB4IDwgcmFuZ2VbMF0gfHwgcmFuZ2VbMV0gPCB4O1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oZmVhdHVyZSkge1xuICAgICAgz4YxID0gzrsxID0gLSjOuzAgPSDPhjAgPSBJbmZpbml0eSk7XG4gICAgICByYW5nZXMgPSBbXTtcbiAgICAgIGQzLmdlby5zdHJlYW0oZmVhdHVyZSwgYm91bmQpO1xuICAgICAgdmFyIG4gPSByYW5nZXMubGVuZ3RoO1xuICAgICAgaWYgKG4pIHtcbiAgICAgICAgcmFuZ2VzLnNvcnQoY29tcGFyZVJhbmdlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBhID0gcmFuZ2VzWzBdLCBiLCBtZXJnZWQgPSBbIGEgXTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGIgPSByYW5nZXNbaV07XG4gICAgICAgICAgaWYgKHdpdGhpblJhbmdlKGJbMF0sIGEpIHx8IHdpdGhpblJhbmdlKGJbMV0sIGEpKSB7XG4gICAgICAgICAgICBpZiAoYW5nbGUoYVswXSwgYlsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVsxXSA9IGJbMV07XG4gICAgICAgICAgICBpZiAoYW5nbGUoYlswXSwgYVsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVswXSA9IGJbMF07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1lcmdlZC5wdXNoKGEgPSBiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGJlc3QgPSAtSW5maW5pdHksIGTOuztcbiAgICAgICAgZm9yICh2YXIgbiA9IG1lcmdlZC5sZW5ndGggLSAxLCBpID0gMCwgYSA9IG1lcmdlZFtuXSwgYjsgaSA8PSBuOyBhID0gYiwgKytpKSB7XG4gICAgICAgICAgYiA9IG1lcmdlZFtpXTtcbiAgICAgICAgICBpZiAoKGTOuyA9IGFuZ2xlKGFbMV0sIGJbMF0pKSA+IGJlc3QpIGJlc3QgPSBkzrssIM67MCA9IGJbMF0sIM67MSA9IGFbMV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJhbmdlcyA9IHJhbmdlID0gbnVsbDtcbiAgICAgIHJldHVybiDOuzAgPT09IEluZmluaXR5IHx8IM+GMCA9PT0gSW5maW5pdHkgPyBbIFsgTmFOLCBOYU4gXSwgWyBOYU4sIE5hTiBdIF0gOiBbIFsgzrswLCDPhjAgXSwgWyDOuzEsIM+GMSBdIF07XG4gICAgfTtcbiAgfSgpO1xuICBkMy5nZW8uY2VudHJvaWQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fY2VudHJvaWRXMCA9IGQzX2dlb19jZW50cm9pZFcxID0gZDNfZ2VvX2NlbnRyb2lkWDAgPSBkM19nZW9fY2VudHJvaWRZMCA9IGQzX2dlb19jZW50cm9pZFowID0gZDNfZ2VvX2NlbnRyb2lkWDEgPSBkM19nZW9fY2VudHJvaWRZMSA9IGQzX2dlb19jZW50cm9pZFoxID0gZDNfZ2VvX2NlbnRyb2lkWDIgPSBkM19nZW9fY2VudHJvaWRZMiA9IGQzX2dlb19jZW50cm9pZFoyID0gMDtcbiAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgZDNfZ2VvX2NlbnRyb2lkKTtcbiAgICB2YXIgeCA9IGQzX2dlb19jZW50cm9pZFgyLCB5ID0gZDNfZ2VvX2NlbnRyb2lkWTIsIHogPSBkM19nZW9fY2VudHJvaWRaMiwgbSA9IHggKiB4ICsgeSAqIHkgKyB6ICogejtcbiAgICBpZiAobSA8IM61Mikge1xuICAgICAgeCA9IGQzX2dlb19jZW50cm9pZFgxLCB5ID0gZDNfZ2VvX2NlbnRyb2lkWTEsIHogPSBkM19nZW9fY2VudHJvaWRaMTtcbiAgICAgIGlmIChkM19nZW9fY2VudHJvaWRXMSA8IM61KSB4ID0gZDNfZ2VvX2NlbnRyb2lkWDAsIHkgPSBkM19nZW9fY2VudHJvaWRZMCwgeiA9IGQzX2dlb19jZW50cm9pZFowO1xuICAgICAgbSA9IHggKiB4ICsgeSAqIHkgKyB6ICogejtcbiAgICAgIGlmIChtIDwgzrUyKSByZXR1cm4gWyBOYU4sIE5hTiBdO1xuICAgIH1cbiAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHksIHgpICogZDNfZGVncmVlcywgZDNfYXNpbih6IC8gTWF0aC5zcXJ0KG0pKSAqIGQzX2RlZ3JlZXMgXTtcbiAgfTtcbiAgdmFyIGQzX2dlb19jZW50cm9pZFcwLCBkM19nZW9fY2VudHJvaWRXMSwgZDNfZ2VvX2NlbnRyb2lkWDAsIGQzX2dlb19jZW50cm9pZFkwLCBkM19nZW9fY2VudHJvaWRaMCwgZDNfZ2VvX2NlbnRyb2lkWDEsIGQzX2dlb19jZW50cm9pZFkxLCBkM19nZW9fY2VudHJvaWRaMSwgZDNfZ2VvX2NlbnRyb2lkWDIsIGQzX2dlb19jZW50cm9pZFkyLCBkM19nZW9fY2VudHJvaWRaMjtcbiAgdmFyIGQzX2dlb19jZW50cm9pZCA9IHtcbiAgICBzcGhlcmU6IGQzX25vb3AsXG4gICAgcG9pbnQ6IGQzX2dlb19jZW50cm9pZFBvaW50LFxuICAgIGxpbmVTdGFydDogZDNfZ2VvX2NlbnRyb2lkTGluZVN0YXJ0LFxuICAgIGxpbmVFbmQ6IGQzX2dlb19jZW50cm9pZExpbmVFbmQsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fY2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRQb2ludCjOuywgz4YpIHtcbiAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpO1xuICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKGNvc8+GICogTWF0aC5jb3MozrspLCBjb3PPhiAqIE1hdGguc2luKM67KSwgTWF0aC5zaW4oz4YpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4LCB5LCB6KSB7XG4gICAgKytkM19nZW9fY2VudHJvaWRXMDtcbiAgICBkM19nZW9fY2VudHJvaWRYMCArPSAoeCAtIGQzX2dlb19jZW50cm9pZFgwKSAvIGQzX2dlb19jZW50cm9pZFcwO1xuICAgIGQzX2dlb19jZW50cm9pZFkwICs9ICh5IC0gZDNfZ2VvX2NlbnRyb2lkWTApIC8gZDNfZ2VvX2NlbnRyb2lkVzA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWjAgKz0gKHogLSBkM19nZW9fY2VudHJvaWRaMCkgLyBkM19nZW9fY2VudHJvaWRXMDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gICAgdmFyIHgwLCB5MCwgejA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyk7XG4gICAgICB4MCA9IGNvc8+GICogTWF0aC5jb3MozrspO1xuICAgICAgeTAgPSBjb3PPhiAqIE1hdGguc2luKM67KTtcbiAgICAgIHowID0gTWF0aC5zaW4oz4YpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeDAsIHkwLCB6MCk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyksIHggPSBjb3PPhiAqIE1hdGguY29zKM67KSwgeSA9IGNvc8+GICogTWF0aC5zaW4ozrspLCB6ID0gTWF0aC5zaW4oz4YpLCB3ID0gTWF0aC5hdGFuMihNYXRoLnNxcnQoKHcgPSB5MCAqIHogLSB6MCAqIHkpICogdyArICh3ID0gejAgKiB4IC0geDAgKiB6KSAqIHcgKyAodyA9IHgwICogeSAtIHkwICogeCkgKiB3KSwgeDAgKiB4ICsgeTAgKiB5ICsgejAgKiB6KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFcxICs9IHc7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkTGluZUVuZCgpIHtcbiAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBkM19nZW9fY2VudHJvaWRQb2ludDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gICAgdmFyIM67MDAsIM+GMDAsIHgwLCB5MCwgejA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuzAwID0gzrssIM+GMDAgPSDPhjtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKTtcbiAgICAgIHgwID0gY29zz4YgKiBNYXRoLmNvcyjOuyk7XG4gICAgICB5MCA9IGNvc8+GICogTWF0aC5zaW4ozrspO1xuICAgICAgejAgPSBNYXRoLnNpbijPhik7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9O1xuICAgIGQzX2dlb19jZW50cm9pZC5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBuZXh0UG9pbnQozrswMCwgz4YwMCk7XG4gICAgICBkM19nZW9fY2VudHJvaWQubGluZUVuZCA9IGQzX2dlb19jZW50cm9pZExpbmVFbmQ7XG4gICAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBkM19nZW9fY2VudHJvaWRQb2ludDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKSwgeCA9IGNvc8+GICogTWF0aC5jb3MozrspLCB5ID0gY29zz4YgKiBNYXRoLnNpbijOuyksIHogPSBNYXRoLnNpbijPhiksIGN4ID0geTAgKiB6IC0gejAgKiB5LCBjeSA9IHowICogeCAtIHgwICogeiwgY3ogPSB4MCAqIHkgLSB5MCAqIHgsIG0gPSBNYXRoLnNxcnQoY3ggKiBjeCArIGN5ICogY3kgKyBjeiAqIGN6KSwgdSA9IHgwICogeCArIHkwICogeSArIHowICogeiwgdiA9IG0gJiYgLWQzX2Fjb3ModSkgLyBtLCB3ID0gTWF0aC5hdGFuMihtLCB1KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgyICs9IHYgKiBjeDtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkyICs9IHYgKiBjeTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoyICs9IHYgKiBjejtcbiAgICAgIGQzX2dlb19jZW50cm9pZFcxICs9IHc7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbXBvc2UoYSwgYikge1xuICAgIGZ1bmN0aW9uIGNvbXBvc2UoeCwgeSkge1xuICAgICAgcmV0dXJuIHggPSBhKHgsIHkpLCBiKHhbMF0sIHhbMV0pO1xuICAgIH1cbiAgICBpZiAoYS5pbnZlcnQgJiYgYi5pbnZlcnQpIGNvbXBvc2UuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgcmV0dXJuIHggPSBiLmludmVydCh4LCB5KSwgeCAmJiBhLmludmVydCh4WzBdLCB4WzFdKTtcbiAgICB9O1xuICAgIHJldHVybiBjb21wb3NlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RydWUoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBQb2x5Z29uKHNlZ21lbnRzLCBjb21wYXJlLCBjbGlwU3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBsaXN0ZW5lcikge1xuICAgIHZhciBzdWJqZWN0ID0gW10sIGNsaXAgPSBbXTtcbiAgICBzZWdtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKHNlZ21lbnQpIHtcbiAgICAgIGlmICgobiA9IHNlZ21lbnQubGVuZ3RoIC0gMSkgPD0gMCkgcmV0dXJuO1xuICAgICAgdmFyIG4sIHAwID0gc2VnbWVudFswXSwgcDEgPSBzZWdtZW50W25dO1xuICAgICAgaWYgKGQzX2dlb19zcGhlcmljYWxFcXVhbChwMCwgcDEpKSB7XG4gICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkgbGlzdGVuZXIucG9pbnQoKHAwID0gc2VnbWVudFtpXSlbMF0sIHAwWzFdKTtcbiAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgYSA9IG5ldyBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocDAsIHNlZ21lbnQsIG51bGwsIHRydWUpLCBiID0gbmV3IGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwMCwgbnVsbCwgYSwgZmFsc2UpO1xuICAgICAgYS5vID0gYjtcbiAgICAgIHN1YmplY3QucHVzaChhKTtcbiAgICAgIGNsaXAucHVzaChiKTtcbiAgICAgIGEgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAxLCBzZWdtZW50LCBudWxsLCBmYWxzZSk7XG4gICAgICBiID0gbmV3IGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwMSwgbnVsbCwgYSwgdHJ1ZSk7XG4gICAgICBhLm8gPSBiO1xuICAgICAgc3ViamVjdC5wdXNoKGEpO1xuICAgICAgY2xpcC5wdXNoKGIpO1xuICAgIH0pO1xuICAgIGNsaXAuc29ydChjb21wYXJlKTtcbiAgICBkM19nZW9fY2xpcFBvbHlnb25MaW5rQ2lyY3VsYXIoc3ViamVjdCk7XG4gICAgZDNfZ2VvX2NsaXBQb2x5Z29uTGlua0NpcmN1bGFyKGNsaXApO1xuICAgIGlmICghc3ViamVjdC5sZW5ndGgpIHJldHVybjtcbiAgICBmb3IgKHZhciBpID0gMCwgZW50cnkgPSBjbGlwU3RhcnRJbnNpZGUsIG4gPSBjbGlwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgY2xpcFtpXS5lID0gZW50cnkgPSAhZW50cnk7XG4gICAgfVxuICAgIHZhciBzdGFydCA9IHN1YmplY3RbMF0sIHBvaW50cywgcG9pbnQ7XG4gICAgd2hpbGUgKDEpIHtcbiAgICAgIHZhciBjdXJyZW50ID0gc3RhcnQsIGlzU3ViamVjdCA9IHRydWU7XG4gICAgICB3aGlsZSAoY3VycmVudC52KSBpZiAoKGN1cnJlbnQgPSBjdXJyZW50Lm4pID09PSBzdGFydCkgcmV0dXJuO1xuICAgICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICBkbyB7XG4gICAgICAgIGN1cnJlbnQudiA9IGN1cnJlbnQuby52ID0gdHJ1ZTtcbiAgICAgICAgaWYgKGN1cnJlbnQuZSkge1xuICAgICAgICAgIGlmIChpc1N1YmplY3QpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aDsgaSA8IG47ICsraSkgbGlzdGVuZXIucG9pbnQoKHBvaW50ID0gcG9pbnRzW2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbnRlcnBvbGF0ZShjdXJyZW50LngsIGN1cnJlbnQubi54LCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGlzU3ViamVjdCkge1xuICAgICAgICAgICAgcG9pbnRzID0gY3VycmVudC5wLno7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gcG9pbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSBsaXN0ZW5lci5wb2ludCgocG9pbnQgPSBwb2ludHNbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5wLngsIC0xLCBsaXN0ZW5lcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnA7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubztcbiAgICAgICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgICAgICBpc1N1YmplY3QgPSAhaXNTdWJqZWN0O1xuICAgICAgfSB3aGlsZSAoIWN1cnJlbnQudik7XG4gICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhcihhcnJheSkge1xuICAgIGlmICghKG4gPSBhcnJheS5sZW5ndGgpKSByZXR1cm47XG4gICAgdmFyIG4sIGkgPSAwLCBhID0gYXJyYXlbMF0sIGI7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGEubiA9IGIgPSBhcnJheVtpXTtcbiAgICAgIGIucCA9IGE7XG4gICAgICBhID0gYjtcbiAgICB9XG4gICAgYS5uID0gYiA9IGFycmF5WzBdO1xuICAgIGIucCA9IGE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHBvaW50LCBwb2ludHMsIG90aGVyLCBlbnRyeSkge1xuICAgIHRoaXMueCA9IHBvaW50O1xuICAgIHRoaXMueiA9IHBvaW50cztcbiAgICB0aGlzLm8gPSBvdGhlcjtcbiAgICB0aGlzLmUgPSBlbnRyeTtcbiAgICB0aGlzLnYgPSBmYWxzZTtcbiAgICB0aGlzLm4gPSB0aGlzLnAgPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwKHBvaW50VmlzaWJsZSwgY2xpcExpbmUsIGludGVycG9sYXRlLCBjbGlwU3RhcnQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24ocm90YXRlLCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGxpbmUgPSBjbGlwTGluZShsaXN0ZW5lciksIHJvdGF0ZWRDbGlwU3RhcnQgPSByb3RhdGUuaW52ZXJ0KGNsaXBTdGFydFswXSwgY2xpcFN0YXJ0WzFdKTtcbiAgICAgIHZhciBjbGlwID0ge1xuICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsaXAucG9pbnQgPSBwb2ludFJpbmc7XG4gICAgICAgICAgY2xpcC5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgICAgY2xpcC5saW5lRW5kID0gcmluZ0VuZDtcbiAgICAgICAgICBzZWdtZW50cyA9IFtdO1xuICAgICAgICAgIHBvbHlnb24gPSBbXTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICAgIGNsaXAubGluZVN0YXJ0ID0gbGluZVN0YXJ0O1xuICAgICAgICAgIGNsaXAubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgICAgc2VnbWVudHMgPSBkMy5tZXJnZShzZWdtZW50cyk7XG4gICAgICAgICAgdmFyIGNsaXBTdGFydEluc2lkZSA9IGQzX2dlb19wb2ludEluUG9seWdvbihyb3RhdGVkQ2xpcFN0YXJ0LCBwb2x5Z29uKTtcbiAgICAgICAgICBpZiAoc2VnbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgZDNfZ2VvX2NsaXBQb2x5Z29uKHNlZ21lbnRzLCBkM19nZW9fY2xpcFNvcnQsIGNsaXBTdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNsaXBTdGFydEluc2lkZSkge1xuICAgICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocG9seWdvblN0YXJ0ZWQpIGxpc3RlbmVyLnBvbHlnb25FbmQoKSwgcG9seWdvblN0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgICAgICBzZWdtZW50cyA9IHBvbHlnb24gPSBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIGxpc3RlbmVyKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9seWdvbkVuZCgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZnVuY3Rpb24gcG9pbnQozrssIM+GKSB7XG4gICAgICAgIHZhciBwb2ludCA9IHJvdGF0ZSjOuywgz4YpO1xuICAgICAgICBpZiAocG9pbnRWaXNpYmxlKM67ID0gcG9pbnRbMF0sIM+GID0gcG9pbnRbMV0pKSBsaXN0ZW5lci5wb2ludCjOuywgz4YpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcG9pbnRMaW5lKM67LCDPhikge1xuICAgICAgICB2YXIgcG9pbnQgPSByb3RhdGUozrssIM+GKTtcbiAgICAgICAgbGluZS5wb2ludChwb2ludFswXSwgcG9pbnRbMV0pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgICAgICBsaW5lLmxpbmVTdGFydCgpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICBsaW5lLmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIHZhciBzZWdtZW50cztcbiAgICAgIHZhciBidWZmZXIgPSBkM19nZW9fY2xpcEJ1ZmZlckxpc3RlbmVyKCksIHJpbmdMaXN0ZW5lciA9IGNsaXBMaW5lKGJ1ZmZlciksIHBvbHlnb25TdGFydGVkID0gZmFsc2UsIHBvbHlnb24sIHJpbmc7XG4gICAgICBmdW5jdGlvbiBwb2ludFJpbmcozrssIM+GKSB7XG4gICAgICAgIHJpbmcucHVzaChbIM67LCDPhiBdKTtcbiAgICAgICAgdmFyIHBvaW50ID0gcm90YXRlKM67LCDPhik7XG4gICAgICAgIHJpbmdMaXN0ZW5lci5wb2ludChwb2ludFswXSwgcG9pbnRbMV0pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgICByaW5nTGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgIHJpbmcgPSBbXTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHJpbmdFbmQoKSB7XG4gICAgICAgIHBvaW50UmluZyhyaW5nWzBdWzBdLCByaW5nWzBdWzFdKTtcbiAgICAgICAgcmluZ0xpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgdmFyIGNsZWFuID0gcmluZ0xpc3RlbmVyLmNsZWFuKCksIHJpbmdTZWdtZW50cyA9IGJ1ZmZlci5idWZmZXIoKSwgc2VnbWVudCwgbiA9IHJpbmdTZWdtZW50cy5sZW5ndGg7XG4gICAgICAgIHJpbmcucG9wKCk7XG4gICAgICAgIHBvbHlnb24ucHVzaChyaW5nKTtcbiAgICAgICAgcmluZyA9IG51bGw7XG4gICAgICAgIGlmICghbikgcmV0dXJuO1xuICAgICAgICBpZiAoY2xlYW4gJiAxKSB7XG4gICAgICAgICAgc2VnbWVudCA9IHJpbmdTZWdtZW50c1swXTtcbiAgICAgICAgICB2YXIgbiA9IHNlZ21lbnQubGVuZ3RoIC0gMSwgaSA9IC0xLCBwb2ludDtcbiAgICAgICAgICBpZiAobiA+IDApIHtcbiAgICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSBsaXN0ZW5lci5wb2ludCgocG9pbnQgPSBzZWdtZW50W2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG4gPiAxICYmIGNsZWFuICYgMikgcmluZ1NlZ21lbnRzLnB1c2gocmluZ1NlZ21lbnRzLnBvcCgpLmNvbmNhdChyaW5nU2VnbWVudHMuc2hpZnQoKSkpO1xuICAgICAgICBzZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5maWx0ZXIoZDNfZ2VvX2NsaXBTZWdtZW50TGVuZ3RoMSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNsaXA7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFNlZ21lbnRMZW5ndGgxKHNlZ21lbnQpIHtcbiAgICByZXR1cm4gc2VnbWVudC5sZW5ndGggPiAxO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwQnVmZmVyTGlzdGVuZXIoKSB7XG4gICAgdmFyIGxpbmVzID0gW10sIGxpbmU7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxpbmVzLnB1c2gobGluZSA9IFtdKTtcbiAgICAgIH0sXG4gICAgICBwb2ludDogZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICAgIGxpbmUucHVzaChbIM67LCDPhiBdKTtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgICAgYnVmZmVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IGxpbmVzO1xuICAgICAgICBsaW5lcyA9IFtdO1xuICAgICAgICBsaW5lID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGJ1ZmZlcjtcbiAgICAgIH0sXG4gICAgICByZWpvaW46IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAobGluZXMubGVuZ3RoID4gMSkgbGluZXMucHVzaChsaW5lcy5wb3AoKS5jb25jYXQobGluZXMuc2hpZnQoKSkpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBTb3J0KGEsIGIpIHtcbiAgICByZXR1cm4gKChhID0gYS54KVswXSA8IDAgPyBhWzFdIC0gaGFsZs+AIC0gzrUgOiBoYWxmz4AgLSBhWzFdKSAtICgoYiA9IGIueClbMF0gPCAwID8gYlsxXSAtIGhhbGbPgCAtIM61IDogaGFsZs+AIC0gYlsxXSk7XG4gIH1cbiAgdmFyIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuID0gZDNfZ2VvX2NsaXAoZDNfdHJ1ZSwgZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5MaW5lLCBkM19nZW9fY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlLCBbIC3PgCwgLc+AIC8gMiBdKTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5MaW5lKGxpc3RlbmVyKSB7XG4gICAgdmFyIM67MCA9IE5hTiwgz4YwID0gTmFOLCBzzrswID0gTmFOLCBjbGVhbjtcbiAgICByZXR1cm4ge1xuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgIGNsZWFuID0gMTtcbiAgICAgIH0sXG4gICAgICBwb2ludDogZnVuY3Rpb24ozrsxLCDPhjEpIHtcbiAgICAgICAgdmFyIHPOuzEgPSDOuzEgPiAwID8gz4AgOiAtz4AsIGTOuyA9IGFicyjOuzEgLSDOuzApO1xuICAgICAgICBpZiAoYWJzKGTOuyAtIM+AKSA8IM61KSB7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQozrswLCDPhjAgPSAoz4YwICsgz4YxKSAvIDIgPiAwID8gaGFsZs+AIDogLWhhbGbPgCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MCwgz4YwKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MSwgz4YwKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludCjOuzEsIM+GMCk7XG4gICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKHPOuzAgIT09IHPOuzEgJiYgZM67ID49IM+AKSB7XG4gICAgICAgICAgaWYgKGFicyjOuzAgLSBzzrswKSA8IM61KSDOuzAgLT0gc867MCAqIM61O1xuICAgICAgICAgIGlmIChhYnMozrsxIC0gc867MSkgPCDOtSkgzrsxIC09IHPOuzEgKiDOtTtcbiAgICAgICAgICDPhjAgPSBkM19nZW9fY2xpcEFudGltZXJpZGlhbkludGVyc2VjdCjOuzAsIM+GMCwgzrsxLCDPhjEpO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHPOuzAsIM+GMCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHPOuzEsIM+GMCk7XG4gICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICB9XG4gICAgICAgIGxpc3RlbmVyLnBvaW50KM67MCA9IM67MSwgz4YwID0gz4YxKTtcbiAgICAgICAgc867MCA9IHPOuzE7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgzrswID0gz4YwID0gTmFOO1xuICAgICAgfSxcbiAgICAgIGNsZWFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIDIgLSBjbGVhbjtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KM67MCwgz4YwLCDOuzEsIM+GMSkge1xuICAgIHZhciBjb3PPhjAsIGNvc8+GMSwgc2luzrswX867MSA9IE1hdGguc2luKM67MCAtIM67MSk7XG4gICAgcmV0dXJuIGFicyhzaW7OuzBfzrsxKSA+IM61ID8gTWF0aC5hdGFuKChNYXRoLnNpbijPhjApICogKGNvc8+GMSA9IE1hdGguY29zKM+GMSkpICogTWF0aC5zaW4ozrsxKSAtIE1hdGguc2luKM+GMSkgKiAoY29zz4YwID0gTWF0aC5jb3Moz4YwKSkgKiBNYXRoLnNpbijOuzApKSAvIChjb3PPhjAgKiBjb3PPhjEgKiBzaW7OuzBfzrsxKSkgOiAoz4YwICsgz4YxKSAvIDI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnBvbGF0ZShmcm9tLCB0bywgZGlyZWN0aW9uLCBsaXN0ZW5lcikge1xuICAgIHZhciDPhjtcbiAgICBpZiAoZnJvbSA9PSBudWxsKSB7XG4gICAgICDPhiA9IGRpcmVjdGlvbiAqIGhhbGbPgDtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC3PgCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoMCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoz4AsIM+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KM+ALCAwKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KM+ALCAtz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoMCwgLc+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC3PgCwgLc+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC3PgCwgMCk7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtz4AsIM+GKTtcbiAgICB9IGVsc2UgaWYgKGFicyhmcm9tWzBdIC0gdG9bMF0pID4gzrUpIHtcbiAgICAgIHZhciBzID0gZnJvbVswXSA8IHRvWzBdID8gz4AgOiAtz4A7XG4gICAgICDPhiA9IGRpcmVjdGlvbiAqIHMgLyAyO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLXMsIM+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KDAsIM+GKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KHMsIM+GKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdGVuZXIucG9pbnQodG9bMF0sIHRvWzFdKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BvaW50SW5Qb2x5Z29uKHBvaW50LCBwb2x5Z29uKSB7XG4gICAgdmFyIG1lcmlkaWFuID0gcG9pbnRbMF0sIHBhcmFsbGVsID0gcG9pbnRbMV0sIG1lcmlkaWFuTm9ybWFsID0gWyBNYXRoLnNpbihtZXJpZGlhbiksIC1NYXRoLmNvcyhtZXJpZGlhbiksIDAgXSwgcG9sYXJBbmdsZSA9IDAsIHdpbmRpbmcgPSAwO1xuICAgIGQzX2dlb19hcmVhUmluZ1N1bS5yZXNldCgpO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciByaW5nID0gcG9seWdvbltpXSwgbSA9IHJpbmcubGVuZ3RoO1xuICAgICAgaWYgKCFtKSBjb250aW51ZTtcbiAgICAgIHZhciBwb2ludDAgPSByaW5nWzBdLCDOuzAgPSBwb2ludDBbMF0sIM+GMCA9IHBvaW50MFsxXSAvIDIgKyDPgCAvIDQsIHNpbs+GMCA9IE1hdGguc2luKM+GMCksIGNvc8+GMCA9IE1hdGguY29zKM+GMCksIGogPSAxO1xuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgaWYgKGogPT09IG0pIGogPSAwO1xuICAgICAgICBwb2ludCA9IHJpbmdbal07XG4gICAgICAgIHZhciDOuyA9IHBvaW50WzBdLCDPhiA9IHBvaW50WzFdIC8gMiArIM+AIC8gNCwgc2luz4YgPSBNYXRoLnNpbijPhiksIGNvc8+GID0gTWF0aC5jb3Moz4YpLCBkzrsgPSDOuyAtIM67MCwgc2TOuyA9IGTOuyA+PSAwID8gMSA6IC0xLCBhZM67ID0gc2TOuyAqIGTOuywgYW50aW1lcmlkaWFuID0gYWTOuyA+IM+ALCBrID0gc2luz4YwICogc2luz4Y7XG4gICAgICAgIGQzX2dlb19hcmVhUmluZ1N1bS5hZGQoTWF0aC5hdGFuMihrICogc2TOuyAqIE1hdGguc2luKGFkzrspLCBjb3PPhjAgKiBjb3PPhiArIGsgKiBNYXRoLmNvcyhhZM67KSkpO1xuICAgICAgICBwb2xhckFuZ2xlICs9IGFudGltZXJpZGlhbiA/IGTOuyArIHNkzrsgKiDPhCA6IGTOuztcbiAgICAgICAgaWYgKGFudGltZXJpZGlhbiBeIM67MCA+PSBtZXJpZGlhbiBeIM67ID49IG1lcmlkaWFuKSB7XG4gICAgICAgICAgdmFyIGFyYyA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhkM19nZW9fY2FydGVzaWFuKHBvaW50MCksIGQzX2dlb19jYXJ0ZXNpYW4ocG9pbnQpKTtcbiAgICAgICAgICBkM19nZW9fY2FydGVzaWFuTm9ybWFsaXplKGFyYyk7XG4gICAgICAgICAgdmFyIGludGVyc2VjdGlvbiA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhtZXJpZGlhbk5vcm1hbCwgYXJjKTtcbiAgICAgICAgICBkM19nZW9fY2FydGVzaWFuTm9ybWFsaXplKGludGVyc2VjdGlvbik7XG4gICAgICAgICAgdmFyIM+GYXJjID0gKGFudGltZXJpZGlhbiBeIGTOuyA+PSAwID8gLTEgOiAxKSAqIGQzX2FzaW4oaW50ZXJzZWN0aW9uWzJdKTtcbiAgICAgICAgICBpZiAocGFyYWxsZWwgPiDPhmFyYyB8fCBwYXJhbGxlbCA9PT0gz4ZhcmMgJiYgKGFyY1swXSB8fCBhcmNbMV0pKSB7XG4gICAgICAgICAgICB3aW5kaW5nICs9IGFudGltZXJpZGlhbiBeIGTOuyA+PSAwID8gMSA6IC0xO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWorKykgYnJlYWs7XG4gICAgICAgIM67MCA9IM67LCBzaW7PhjAgPSBzaW7PhiwgY29zz4YwID0gY29zz4YsIHBvaW50MCA9IHBvaW50O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKHBvbGFyQW5nbGUgPCAtzrUgfHwgcG9sYXJBbmdsZSA8IM61ICYmIGQzX2dlb19hcmVhUmluZ1N1bSA8IC3OtSkgXiB3aW5kaW5nICYgMTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcENpcmNsZShyYWRpdXMpIHtcbiAgICB2YXIgY3IgPSBNYXRoLmNvcyhyYWRpdXMpLCBzbWFsbFJhZGl1cyA9IGNyID4gMCwgbm90SGVtaXNwaGVyZSA9IGFicyhjcikgPiDOtSwgaW50ZXJwb2xhdGUgPSBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUocmFkaXVzLCA2ICogZDNfcmFkaWFucyk7XG4gICAgcmV0dXJuIGQzX2dlb19jbGlwKHZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgc21hbGxSYWRpdXMgPyBbIDAsIC1yYWRpdXMgXSA6IFsgLc+ALCByYWRpdXMgLSDPgCBdKTtcbiAgICBmdW5jdGlvbiB2aXNpYmxlKM67LCDPhikge1xuICAgICAgcmV0dXJuIE1hdGguY29zKM67KSAqIE1hdGguY29zKM+GKSA+IGNyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGlwTGluZShsaXN0ZW5lcikge1xuICAgICAgdmFyIHBvaW50MCwgYzAsIHYwLCB2MDAsIGNsZWFuO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2MDAgPSB2MCA9IGZhbHNlO1xuICAgICAgICAgIGNsZWFuID0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgICAgIHZhciBwb2ludDEgPSBbIM67LCDPhiBdLCBwb2ludDIsIHYgPSB2aXNpYmxlKM67LCDPhiksIGMgPSBzbWFsbFJhZGl1cyA/IHYgPyAwIDogY29kZSjOuywgz4YpIDogdiA/IGNvZGUozrsgKyAozrsgPCAwID8gz4AgOiAtz4ApLCDPhikgOiAwO1xuICAgICAgICAgIGlmICghcG9pbnQwICYmICh2MDAgPSB2MCA9IHYpKSBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgICBpZiAoZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHBvaW50MCwgcG9pbnQyKSB8fCBkM19nZW9fc3BoZXJpY2FsRXF1YWwocG9pbnQxLCBwb2ludDIpKSB7XG4gICAgICAgICAgICAgIHBvaW50MVswXSArPSDOtTtcbiAgICAgICAgICAgICAgcG9pbnQxWzFdICs9IM61O1xuICAgICAgICAgICAgICB2ID0gdmlzaWJsZShwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2ICE9PSB2MCkge1xuICAgICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcG9pbnQwID0gcG9pbnQyO1xuICAgICAgICAgIH0gZWxzZSBpZiAobm90SGVtaXNwaGVyZSAmJiBwb2ludDAgJiYgc21hbGxSYWRpdXMgXiB2KSB7XG4gICAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAgIGlmICghKGMgJiBjMCkgJiYgKHQgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDAsIHRydWUpKSkge1xuICAgICAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgICAgIGlmIChzbWFsbFJhZGl1cykge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMV1bMF0sIHRbMV1bMV0pO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0WzFdWzBdLCB0WzFdWzFdKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQodFswXVswXSwgdFswXVsxXSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHYgJiYgKCFwb2ludDAgfHwgIWQzX2dlb19zcGhlcmljYWxFcXVhbChwb2ludDAsIHBvaW50MSkpKSB7XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2ludChwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvaW50MCA9IHBvaW50MSwgdjAgPSB2LCBjMCA9IGM7XG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmICh2MCkgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIHBvaW50MCA9IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gY2xlYW4gfCAodjAwICYmIHYwKSA8PCAxO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBpbnRlcnNlY3QoYSwgYiwgdHdvKSB7XG4gICAgICB2YXIgcGEgPSBkM19nZW9fY2FydGVzaWFuKGEpLCBwYiA9IGQzX2dlb19jYXJ0ZXNpYW4oYik7XG4gICAgICB2YXIgbjEgPSBbIDEsIDAsIDAgXSwgbjIgPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MocGEsIHBiKSwgbjJuMiA9IGQzX2dlb19jYXJ0ZXNpYW5Eb3QobjIsIG4yKSwgbjFuMiA9IG4yWzBdLCBkZXRlcm1pbmFudCA9IG4ybjIgLSBuMW4yICogbjFuMjtcbiAgICAgIGlmICghZGV0ZXJtaW5hbnQpIHJldHVybiAhdHdvICYmIGE7XG4gICAgICB2YXIgYzEgPSBjciAqIG4ybjIgLyBkZXRlcm1pbmFudCwgYzIgPSAtY3IgKiBuMW4yIC8gZGV0ZXJtaW5hbnQsIG4xeG4yID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKG4xLCBuMiksIEEgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUobjEsIGMxKSwgQiA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZShuMiwgYzIpO1xuICAgICAgZDNfZ2VvX2NhcnRlc2lhbkFkZChBLCBCKTtcbiAgICAgIHZhciB1ID0gbjF4bjIsIHcgPSBkM19nZW9fY2FydGVzaWFuRG90KEEsIHUpLCB1dSA9IGQzX2dlb19jYXJ0ZXNpYW5Eb3QodSwgdSksIHQyID0gdyAqIHcgLSB1dSAqIChkM19nZW9fY2FydGVzaWFuRG90KEEsIEEpIC0gMSk7XG4gICAgICBpZiAodDIgPCAwKSByZXR1cm47XG4gICAgICB2YXIgdCA9IE1hdGguc3FydCh0MiksIHEgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUodSwgKC13IC0gdCkgLyB1dSk7XG4gICAgICBkM19nZW9fY2FydGVzaWFuQWRkKHEsIEEpO1xuICAgICAgcSA9IGQzX2dlb19zcGhlcmljYWwocSk7XG4gICAgICBpZiAoIXR3bykgcmV0dXJuIHE7XG4gICAgICB2YXIgzrswID0gYVswXSwgzrsxID0gYlswXSwgz4YwID0gYVsxXSwgz4YxID0gYlsxXSwgejtcbiAgICAgIGlmICjOuzEgPCDOuzApIHogPSDOuzAsIM67MCA9IM67MSwgzrsxID0gejtcbiAgICAgIHZhciDOtM67ID0gzrsxIC0gzrswLCBwb2xhciA9IGFicyjOtM67IC0gz4ApIDwgzrUsIG1lcmlkaWFuID0gcG9sYXIgfHwgzrTOuyA8IM61O1xuICAgICAgaWYgKCFwb2xhciAmJiDPhjEgPCDPhjApIHogPSDPhjAsIM+GMCA9IM+GMSwgz4YxID0gejtcbiAgICAgIGlmIChtZXJpZGlhbiA/IHBvbGFyID8gz4YwICsgz4YxID4gMCBeIHFbMV0gPCAoYWJzKHFbMF0gLSDOuzApIDwgzrUgPyDPhjAgOiDPhjEpIDogz4YwIDw9IHFbMV0gJiYgcVsxXSA8PSDPhjEgOiDOtM67ID4gz4AgXiAozrswIDw9IHFbMF0gJiYgcVswXSA8PSDOuzEpKSB7XG4gICAgICAgIHZhciBxMSA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZSh1LCAoLXcgKyB0KSAvIHV1KTtcbiAgICAgICAgZDNfZ2VvX2NhcnRlc2lhbkFkZChxMSwgQSk7XG4gICAgICAgIHJldHVybiBbIHEsIGQzX2dlb19zcGhlcmljYWwocTEpIF07XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvZGUozrssIM+GKSB7XG4gICAgICB2YXIgciA9IHNtYWxsUmFkaXVzID8gcmFkaXVzIDogz4AgLSByYWRpdXMsIGNvZGUgPSAwO1xuICAgICAgaWYgKM67IDwgLXIpIGNvZGUgfD0gMTsgZWxzZSBpZiAozrsgPiByKSBjb2RlIHw9IDI7XG4gICAgICBpZiAoz4YgPCAtcikgY29kZSB8PSA0OyBlbHNlIGlmICjPhiA+IHIpIGNvZGUgfD0gODtcbiAgICAgIHJldHVybiBjb2RlO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX2NsaXBMaW5lKHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgIHZhciBhID0gbGluZS5hLCBiID0gbGluZS5iLCBheCA9IGEueCwgYXkgPSBhLnksIGJ4ID0gYi54LCBieSA9IGIueSwgdDAgPSAwLCB0MSA9IDEsIGR4ID0gYnggLSBheCwgZHkgPSBieSAtIGF5LCByO1xuICAgICAgciA9IHgwIC0gYXg7XG4gICAgICBpZiAoIWR4ICYmIHIgPiAwKSByZXR1cm47XG4gICAgICByIC89IGR4O1xuICAgICAgaWYgKGR4IDwgMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfVxuICAgICAgciA9IHgxIC0gYXg7XG4gICAgICBpZiAoIWR4ICYmIHIgPCAwKSByZXR1cm47XG4gICAgICByIC89IGR4O1xuICAgICAgaWYgKGR4IDwgMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfVxuICAgICAgciA9IHkwIC0gYXk7XG4gICAgICBpZiAoIWR5ICYmIHIgPiAwKSByZXR1cm47XG4gICAgICByIC89IGR5O1xuICAgICAgaWYgKGR5IDwgMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfVxuICAgICAgciA9IHkxIC0gYXk7XG4gICAgICBpZiAoIWR5ICYmIHIgPCAwKSByZXR1cm47XG4gICAgICByIC89IGR5O1xuICAgICAgaWYgKGR5IDwgMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfVxuICAgICAgaWYgKHQwID4gMCkgbGluZS5hID0ge1xuICAgICAgICB4OiBheCArIHQwICogZHgsXG4gICAgICAgIHk6IGF5ICsgdDAgKiBkeVxuICAgICAgfTtcbiAgICAgIGlmICh0MSA8IDEpIGxpbmUuYiA9IHtcbiAgICAgICAgeDogYXggKyB0MSAqIGR4LFxuICAgICAgICB5OiBheSArIHQxICogZHlcbiAgICAgIH07XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19nZW9fY2xpcEV4dGVudE1BWCA9IDFlOTtcbiAgZDMuZ2VvLmNsaXBFeHRlbnQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgeDAsIHkwLCB4MSwgeTEsIHN0cmVhbSwgY2xpcCwgY2xpcEV4dGVudCA9IHtcbiAgICAgIHN0cmVhbTogZnVuY3Rpb24ob3V0cHV0KSB7XG4gICAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlO1xuICAgICAgICBzdHJlYW0gPSBjbGlwKG91dHB1dCk7XG4gICAgICAgIHN0cmVhbS52YWxpZCA9IHRydWU7XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICB9LFxuICAgICAgZXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgWyB4MCwgeTAgXSwgWyB4MSwgeTEgXSBdO1xuICAgICAgICBjbGlwID0gZDNfZ2VvX2NsaXBFeHRlbnQoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSk7XG4gICAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlLCBzdHJlYW0gPSBudWxsO1xuICAgICAgICByZXR1cm4gY2xpcEV4dGVudDtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBjbGlwRXh0ZW50LmV4dGVudChbIFsgMCwgMCBdLCBbIDk2MCwgNTAwIF0gXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwRXh0ZW50KHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGlzdGVuZXJfID0gbGlzdGVuZXIsIGJ1ZmZlckxpc3RlbmVyID0gZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lcigpLCBjbGlwTGluZSA9IGQzX2dlb21fY2xpcExpbmUoeDAsIHkwLCB4MSwgeTEpLCBzZWdtZW50cywgcG9seWdvbiwgcmluZztcbiAgICAgIHZhciBjbGlwID0ge1xuICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxpc3RlbmVyID0gYnVmZmVyTGlzdGVuZXI7XG4gICAgICAgICAgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgICBwb2x5Z29uID0gW107XG4gICAgICAgICAgY2xlYW4gPSB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyXztcbiAgICAgICAgICBzZWdtZW50cyA9IGQzLm1lcmdlKHNlZ21lbnRzKTtcbiAgICAgICAgICB2YXIgY2xpcFN0YXJ0SW5zaWRlID0gaW5zaWRlUG9seWdvbihbIHgwLCB5MSBdKSwgaW5zaWRlID0gY2xlYW4gJiYgY2xpcFN0YXJ0SW5zaWRlLCB2aXNpYmxlID0gc2VnbWVudHMubGVuZ3RoO1xuICAgICAgICAgIGlmIChpbnNpZGUgfHwgdmlzaWJsZSkge1xuICAgICAgICAgICAgbGlzdGVuZXIucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgICBpZiAoaW5zaWRlKSB7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgICAgIGQzX2dlb19jbGlwUG9seWdvbihzZWdtZW50cywgY29tcGFyZSwgY2xpcFN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdGVuZXIucG9seWdvbkVuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZWdtZW50cyA9IHBvbHlnb24gPSByaW5nID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIGluc2lkZVBvbHlnb24ocCkge1xuICAgICAgICB2YXIgd24gPSAwLCBuID0gcG9seWdvbi5sZW5ndGgsIHkgPSBwWzFdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAxLCB2ID0gcG9seWdvbltpXSwgbSA9IHYubGVuZ3RoLCBhID0gdlswXSwgYjsgaiA8IG07ICsraikge1xuICAgICAgICAgICAgYiA9IHZbal07XG4gICAgICAgICAgICBpZiAoYVsxXSA8PSB5KSB7XG4gICAgICAgICAgICAgIGlmIChiWzFdID4geSAmJiBkM19jcm9zczJkKGEsIGIsIHApID4gMCkgKyt3bjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChiWzFdIDw9IHkgJiYgZDNfY3Jvc3MyZChhLCBiLCBwKSA8IDApIC0td247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhID0gYjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHduICE9PSAwO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gaW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgbGlzdGVuZXIpIHtcbiAgICAgICAgdmFyIGEgPSAwLCBhMSA9IDA7XG4gICAgICAgIGlmIChmcm9tID09IG51bGwgfHwgKGEgPSBjb3JuZXIoZnJvbSwgZGlyZWN0aW9uKSkgIT09IChhMSA9IGNvcm5lcih0bywgZGlyZWN0aW9uKSkgfHwgY29tcGFyZVBvaW50cyhmcm9tLCB0bykgPCAwIF4gZGlyZWN0aW9uID4gMCkge1xuICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KGEgPT09IDAgfHwgYSA9PT0gMyA/IHgwIDogeDEsIGEgPiAxID8geTEgOiB5MCk7XG4gICAgICAgICAgfSB3aGlsZSAoKGEgPSAoYSArIGRpcmVjdGlvbiArIDQpICUgNCkgIT09IGExKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0b1swXSwgdG9bMV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwb2ludFZpc2libGUoeCwgeSkge1xuICAgICAgICByZXR1cm4geDAgPD0geCAmJiB4IDw9IHgxICYmIHkwIDw9IHkgJiYgeSA8PSB5MTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgICAgaWYgKHBvaW50VmlzaWJsZSh4LCB5KSkgbGlzdGVuZXIucG9pbnQoeCwgeSk7XG4gICAgICB9XG4gICAgICB2YXIgeF9fLCB5X18sIHZfXywgeF8sIHlfLCB2XywgZmlyc3QsIGNsZWFuO1xuICAgICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgICBjbGlwLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgICBpZiAocG9seWdvbikgcG9seWdvbi5wdXNoKHJpbmcgPSBbXSk7XG4gICAgICAgIGZpcnN0ID0gdHJ1ZTtcbiAgICAgICAgdl8gPSBmYWxzZTtcbiAgICAgICAgeF8gPSB5XyA9IE5hTjtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICAgIGlmIChzZWdtZW50cykge1xuICAgICAgICAgIGxpbmVQb2ludCh4X18sIHlfXyk7XG4gICAgICAgICAgaWYgKHZfXyAmJiB2XykgYnVmZmVyTGlzdGVuZXIucmVqb2luKCk7XG4gICAgICAgICAgc2VnbWVudHMucHVzaChidWZmZXJMaXN0ZW5lci5idWZmZXIoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICBpZiAodl8pIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVQb2ludCh4LCB5KSB7XG4gICAgICAgIHggPSBNYXRoLm1heCgtZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIE1hdGgubWluKGQzX2dlb19jbGlwRXh0ZW50TUFYLCB4KSk7XG4gICAgICAgIHkgPSBNYXRoLm1heCgtZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIE1hdGgubWluKGQzX2dlb19jbGlwRXh0ZW50TUFYLCB5KSk7XG4gICAgICAgIHZhciB2ID0gcG9pbnRWaXNpYmxlKHgsIHkpO1xuICAgICAgICBpZiAocG9seWdvbikgcmluZy5wdXNoKFsgeCwgeSBdKTtcbiAgICAgICAgaWYgKGZpcnN0KSB7XG4gICAgICAgICAgeF9fID0geCwgeV9fID0geSwgdl9fID0gdjtcbiAgICAgICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHgsIHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodiAmJiB2XykgbGlzdGVuZXIucG9pbnQoeCwgeSk7IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGwgPSB7XG4gICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICB4OiB4XyxcbiAgICAgICAgICAgICAgICB5OiB5X1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBiOiB7XG4gICAgICAgICAgICAgICAgeDogeCxcbiAgICAgICAgICAgICAgICB5OiB5XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoY2xpcExpbmUobCkpIHtcbiAgICAgICAgICAgICAgaWYgKCF2Xykge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KGwuYS54LCBsLmEueSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQobC5iLngsIGwuYi55KTtcbiAgICAgICAgICAgICAgaWYgKCF2KSBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHYpIHtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHgsIHkpO1xuICAgICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB4XyA9IHgsIHlfID0geSwgdl8gPSB2O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNsaXA7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBjb3JuZXIocCwgZGlyZWN0aW9uKSB7XG4gICAgICByZXR1cm4gYWJzKHBbMF0gLSB4MCkgPCDOtSA/IGRpcmVjdGlvbiA+IDAgPyAwIDogMyA6IGFicyhwWzBdIC0geDEpIDwgzrUgPyBkaXJlY3Rpb24gPiAwID8gMiA6IDEgOiBhYnMocFsxXSAtIHkwKSA8IM61ID8gZGlyZWN0aW9uID4gMCA/IDEgOiAwIDogZGlyZWN0aW9uID4gMCA/IDMgOiAyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgICAgIHJldHVybiBjb21wYXJlUG9pbnRzKGEueCwgYi54KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY29tcGFyZVBvaW50cyhhLCBiKSB7XG4gICAgICB2YXIgY2EgPSBjb3JuZXIoYSwgMSksIGNiID0gY29ybmVyKGIsIDEpO1xuICAgICAgcmV0dXJuIGNhICE9PSBjYiA/IGNhIC0gY2IgOiBjYSA9PT0gMCA/IGJbMV0gLSBhWzFdIDogY2EgPT09IDEgPyBhWzBdIC0gYlswXSA6IGNhID09PSAyID8gYVsxXSAtIGJbMV0gOiBiWzBdIC0gYVswXTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbmljKHByb2plY3RBdCkge1xuICAgIHZhciDPhjAgPSAwLCDPhjEgPSDPgCAvIDMsIG0gPSBkM19nZW9fcHJvamVjdGlvbk11dGF0b3IocHJvamVjdEF0KSwgcCA9IG0oz4YwLCDPhjEpO1xuICAgIHAucGFyYWxsZWxzID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyDPhjAgLyDPgCAqIDE4MCwgz4YxIC8gz4AgKiAxODAgXTtcbiAgICAgIHJldHVybiBtKM+GMCA9IF9bMF0gKiDPgCAvIDE4MCwgz4YxID0gX1sxXSAqIM+AIC8gMTgwKTtcbiAgICB9O1xuICAgIHJldHVybiBwO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pY0VxdWFsQXJlYSjPhjAsIM+GMSkge1xuICAgIHZhciBzaW7PhjAgPSBNYXRoLnNpbijPhjApLCBuID0gKHNpbs+GMCArIE1hdGguc2luKM+GMSkpIC8gMiwgQyA9IDEgKyBzaW7PhjAgKiAoMiAqIG4gLSBzaW7PhjApLCDPgTAgPSBNYXRoLnNxcnQoQykgLyBuO1xuICAgIGZ1bmN0aW9uIGZvcndhcmQozrssIM+GKSB7XG4gICAgICB2YXIgz4EgPSBNYXRoLnNxcnQoQyAtIDIgKiBuICogTWF0aC5zaW4oz4YpKSAvIG47XG4gICAgICByZXR1cm4gWyDPgSAqIE1hdGguc2luKM67ICo9IG4pLCDPgTAgLSDPgSAqIE1hdGguY29zKM67KSBdO1xuICAgIH1cbiAgICBmb3J3YXJkLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciDPgTBfeSA9IM+BMCAtIHk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHgsIM+BMF95KSAvIG4sIGQzX2FzaW4oKEMgLSAoeCAqIHggKyDPgTBfeSAqIM+BMF95KSAqIG4gKiBuKSAvICgyICogbikpIF07XG4gICAgfTtcbiAgICByZXR1cm4gZm9yd2FyZDtcbiAgfVxuICAoZDMuZ2VvLmNvbmljRXF1YWxBcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19jb25pYyhkM19nZW9fY29uaWNFcXVhbEFyZWEpO1xuICB9KS5yYXcgPSBkM19nZW9fY29uaWNFcXVhbEFyZWE7XG4gIGQzLmdlby5hbGJlcnMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuZ2VvLmNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsgOTYsIDAgXSkuY2VudGVyKFsgLS42LCAzOC43IF0pLnBhcmFsbGVscyhbIDI5LjUsIDQ1LjUgXSkuc2NhbGUoMTA3MCk7XG4gIH07XG4gIGQzLmdlby5hbGJlcnNVc2EgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbG93ZXI0OCA9IGQzLmdlby5hbGJlcnMoKTtcbiAgICB2YXIgYWxhc2thID0gZDMuZ2VvLmNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsgMTU0LCAwIF0pLmNlbnRlcihbIC0yLCA1OC41IF0pLnBhcmFsbGVscyhbIDU1LCA2NSBdKTtcbiAgICB2YXIgaGF3YWlpID0gZDMuZ2VvLmNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsgMTU3LCAwIF0pLmNlbnRlcihbIC0zLCAxOS45IF0pLnBhcmFsbGVscyhbIDgsIDE4IF0pO1xuICAgIHZhciBwb2ludCwgcG9pbnRTdHJlYW0gPSB7XG4gICAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICBwb2ludCA9IFsgeCwgeSBdO1xuICAgICAgfVxuICAgIH0sIGxvd2VyNDhQb2ludCwgYWxhc2thUG9pbnQsIGhhd2FpaVBvaW50O1xuICAgIGZ1bmN0aW9uIGFsYmVyc1VzYShjb29yZGluYXRlcykge1xuICAgICAgdmFyIHggPSBjb29yZGluYXRlc1swXSwgeSA9IGNvb3JkaW5hdGVzWzFdO1xuICAgICAgcG9pbnQgPSBudWxsO1xuICAgICAgKGxvd2VyNDhQb2ludCh4LCB5KSwgcG9pbnQpIHx8IChhbGFza2FQb2ludCh4LCB5KSwgcG9pbnQpIHx8IGhhd2FpaVBvaW50KHgsIHkpO1xuICAgICAgcmV0dXJuIHBvaW50O1xuICAgIH1cbiAgICBhbGJlcnNVc2EuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICAgIHZhciBrID0gbG93ZXI0OC5zY2FsZSgpLCB0ID0gbG93ZXI0OC50cmFuc2xhdGUoKSwgeCA9IChjb29yZGluYXRlc1swXSAtIHRbMF0pIC8gaywgeSA9IChjb29yZGluYXRlc1sxXSAtIHRbMV0pIC8gaztcbiAgICAgIHJldHVybiAoeSA+PSAuMTIgJiYgeSA8IC4yMzQgJiYgeCA+PSAtLjQyNSAmJiB4IDwgLS4yMTQgPyBhbGFza2EgOiB5ID49IC4xNjYgJiYgeSA8IC4yMzQgJiYgeCA+PSAtLjIxNCAmJiB4IDwgLS4xMTUgPyBoYXdhaWkgOiBsb3dlcjQ4KS5pbnZlcnQoY29vcmRpbmF0ZXMpO1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnN0cmVhbSA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgdmFyIGxvd2VyNDhTdHJlYW0gPSBsb3dlcjQ4LnN0cmVhbShzdHJlYW0pLCBhbGFza2FTdHJlYW0gPSBhbGFza2Euc3RyZWFtKHN0cmVhbSksIGhhd2FpaVN0cmVhbSA9IGhhd2FpaS5zdHJlYW0oc3RyZWFtKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICB9LFxuICAgICAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0uc3BoZXJlKCk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLnNwaGVyZSgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5zcGhlcmUoKTtcbiAgICAgICAgfSxcbiAgICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIGFsYmVyc1VzYS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnByZWNpc2lvbigpO1xuICAgICAgbG93ZXI0OC5wcmVjaXNpb24oXyk7XG4gICAgICBhbGFza2EucHJlY2lzaW9uKF8pO1xuICAgICAgaGF3YWlpLnByZWNpc2lvbihfKTtcbiAgICAgIHJldHVybiBhbGJlcnNVc2E7XG4gICAgfTtcbiAgICBhbGJlcnNVc2Euc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnNjYWxlKCk7XG4gICAgICBsb3dlcjQ4LnNjYWxlKF8pO1xuICAgICAgYWxhc2thLnNjYWxlKF8gKiAuMzUpO1xuICAgICAgaGF3YWlpLnNjYWxlKF8pO1xuICAgICAgcmV0dXJuIGFsYmVyc1VzYS50cmFuc2xhdGUobG93ZXI0OC50cmFuc2xhdGUoKSk7XG4gICAgfTtcbiAgICBhbGJlcnNVc2EudHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC50cmFuc2xhdGUoKTtcbiAgICAgIHZhciBrID0gbG93ZXI0OC5zY2FsZSgpLCB4ID0gK19bMF0sIHkgPSArX1sxXTtcbiAgICAgIGxvd2VyNDhQb2ludCA9IGxvd2VyNDgudHJhbnNsYXRlKF8pLmNsaXBFeHRlbnQoWyBbIHggLSAuNDU1ICogaywgeSAtIC4yMzggKiBrIF0sIFsgeCArIC40NTUgKiBrLCB5ICsgLjIzOCAqIGsgXSBdKS5zdHJlYW0ocG9pbnRTdHJlYW0pLnBvaW50O1xuICAgICAgYWxhc2thUG9pbnQgPSBhbGFza2EudHJhbnNsYXRlKFsgeCAtIC4zMDcgKiBrLCB5ICsgLjIwMSAqIGsgXSkuY2xpcEV4dGVudChbIFsgeCAtIC40MjUgKiBrICsgzrUsIHkgKyAuMTIgKiBrICsgzrUgXSwgWyB4IC0gLjIxNCAqIGsgLSDOtSwgeSArIC4yMzQgKiBrIC0gzrUgXSBdKS5zdHJlYW0ocG9pbnRTdHJlYW0pLnBvaW50O1xuICAgICAgaGF3YWlpUG9pbnQgPSBoYXdhaWkudHJhbnNsYXRlKFsgeCAtIC4yMDUgKiBrLCB5ICsgLjIxMiAqIGsgXSkuY2xpcEV4dGVudChbIFsgeCAtIC4yMTQgKiBrICsgzrUsIHkgKyAuMTY2ICogayArIM61IF0sIFsgeCAtIC4xMTUgKiBrIC0gzrUsIHkgKyAuMjM0ICogayAtIM61IF0gXSkuc3RyZWFtKHBvaW50U3RyZWFtKS5wb2ludDtcbiAgICAgIHJldHVybiBhbGJlcnNVc2E7XG4gICAgfTtcbiAgICByZXR1cm4gYWxiZXJzVXNhLnNjYWxlKDEwNzApO1xuICB9O1xuICB2YXIgZDNfZ2VvX3BhdGhBcmVhU3VtLCBkM19nZW9fcGF0aEFyZWFQb2x5Z29uLCBkM19nZW9fcGF0aEFyZWEgPSB7XG4gICAgcG9pbnQ6IGQzX25vb3AsXG4gICAgbGluZVN0YXJ0OiBkM19ub29wLFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYVBvbHlnb24gPSAwO1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhLmxpbmVTdGFydCA9IGQzX2dlb19wYXRoQXJlYVJpbmdTdGFydDtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX3BhdGhBcmVhLmxpbmVTdGFydCA9IGQzX2dlb19wYXRoQXJlYS5saW5lRW5kID0gZDNfZ2VvX3BhdGhBcmVhLnBvaW50ID0gZDNfbm9vcDtcbiAgICAgIGQzX2dlb19wYXRoQXJlYVN1bSArPSBhYnMoZDNfZ2VvX3BhdGhBcmVhUG9seWdvbiAvIDIpO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhBcmVhUmluZ1N0YXJ0KCkge1xuICAgIHZhciB4MDAsIHkwMCwgeDAsIHkwO1xuICAgIGQzX2dlb19wYXRoQXJlYS5wb2ludCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYS5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5O1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KHgsIHkpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYVBvbHlnb24gKz0geTAgKiB4IC0geDAgKiB5O1xuICAgICAgeDAgPSB4LCB5MCA9IHk7XG4gICAgfVxuICAgIGQzX2dlb19wYXRoQXJlYS5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBuZXh0UG9pbnQoeDAwLCB5MDApO1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX2dlb19wYXRoQm91bmRzWDAsIGQzX2dlb19wYXRoQm91bmRzWTAsIGQzX2dlb19wYXRoQm91bmRzWDEsIGQzX2dlb19wYXRoQm91bmRzWTE7XG4gIHZhciBkM19nZW9fcGF0aEJvdW5kcyA9IHtcbiAgICBwb2ludDogZDNfZ2VvX3BhdGhCb3VuZHNQb2ludCxcbiAgICBsaW5lU3RhcnQ6IGQzX25vb3AsXG4gICAgbGluZUVuZDogZDNfbm9vcCxcbiAgICBwb2x5Z29uU3RhcnQ6IGQzX25vb3AsXG4gICAgcG9seWdvbkVuZDogZDNfbm9vcFxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fcGF0aEJvdW5kc1BvaW50KHgsIHkpIHtcbiAgICBpZiAoeCA8IGQzX2dlb19wYXRoQm91bmRzWDApIGQzX2dlb19wYXRoQm91bmRzWDAgPSB4O1xuICAgIGlmICh4ID4gZDNfZ2VvX3BhdGhCb3VuZHNYMSkgZDNfZ2VvX3BhdGhCb3VuZHNYMSA9IHg7XG4gICAgaWYgKHkgPCBkM19nZW9fcGF0aEJvdW5kc1kwKSBkM19nZW9fcGF0aEJvdW5kc1kwID0geTtcbiAgICBpZiAoeSA+IGQzX2dlb19wYXRoQm91bmRzWTEpIGQzX2dlb19wYXRoQm91bmRzWTEgPSB5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQnVmZmVyKCkge1xuICAgIHZhciBwb2ludENpcmNsZSA9IGQzX2dlb19wYXRoQnVmZmVyQ2lyY2xlKDQuNSksIGJ1ZmZlciA9IFtdO1xuICAgIHZhciBzdHJlYW0gPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludExpbmVTdGFydDtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kUG9seWdvbjtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIH0sXG4gICAgICBwb2ludFJhZGl1czogZnVuY3Rpb24oXykge1xuICAgICAgICBwb2ludENpcmNsZSA9IGQzX2dlb19wYXRoQnVmZmVyQ2lyY2xlKF8pO1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgICAgfSxcbiAgICAgIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdCA9IGJ1ZmZlci5qb2luKFwiXCIpO1xuICAgICAgICAgIGJ1ZmZlciA9IFtdO1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKFwiTVwiLCB4LCBcIixcIiwgeSwgcG9pbnRDaXJjbGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludExpbmVTdGFydCh4LCB5KSB7XG4gICAgICBidWZmZXIucHVzaChcIk1cIiwgeCwgXCIsXCIsIHkpO1xuICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludExpbmUoeCwgeSkge1xuICAgICAgYnVmZmVyLnB1c2goXCJMXCIsIHgsIFwiLFwiLCB5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lRW5kUG9seWdvbigpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKFwiWlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cmVhbTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aEJ1ZmZlckNpcmNsZShyYWRpdXMpIHtcbiAgICByZXR1cm4gXCJtMCxcIiArIHJhZGl1cyArIFwiYVwiICsgcmFkaXVzICsgXCIsXCIgKyByYWRpdXMgKyBcIiAwIDEsMSAwLFwiICsgLTIgKiByYWRpdXMgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIDIgKiByYWRpdXMgKyBcInpcIjtcbiAgfVxuICB2YXIgZDNfZ2VvX3BhdGhDZW50cm9pZCA9IHtcbiAgICBwb2ludDogZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50LFxuICAgIGxpbmVTdGFydDogZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVTdGFydCxcbiAgICBsaW5lRW5kOiBkM19nZW9fcGF0aENlbnRyb2lkTGluZUVuZCxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fcGF0aENlbnRyb2lkUmluZ1N0YXJ0O1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5saW5lRW5kID0gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQ7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeCwgeSkge1xuICAgIGQzX2dlb19jZW50cm9pZFgwICs9IHg7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWTAgKz0geTtcbiAgICArK2QzX2dlb19jZW50cm9pZFowO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gICAgdmFyIHgwLCB5MDtcbiAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQoeCwgeSkge1xuICAgICAgdmFyIGR4ID0geCAtIHgwLCBkeSA9IHkgLSB5MCwgeiA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB6ICogKHgwICsgeCkgLyAyO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0geiAqICh5MCArIHkpIC8gMjtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHo7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkTGluZUVuZCgpIHtcbiAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gICAgdmFyIHgwMCwgeTAwLCB4MCwgeTA7XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHkpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KHgsIHkpIHtcbiAgICAgIHZhciBkeCA9IHggLSB4MCwgZHkgPSB5IC0geTAsIHogPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDEgKz0geiAqICh4MCArIHgpIC8gMjtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMSArPSB6O1xuICAgICAgeiA9IHkwICogeCAtIHgwICogeTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgyICs9IHogKiAoeDAgKyB4KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkyICs9IHogKiAoeTAgKyB5KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoyICs9IHogKiAzO1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbiAgICB9XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBuZXh0UG9pbnQoeDAwLCB5MDApO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDb250ZXh0KGNvbnRleHQpIHtcbiAgICB2YXIgcG9pbnRSYWRpdXMgPSA0LjU7XG4gICAgdmFyIHN0cmVhbSA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50TGluZVN0YXJ0O1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCA9IGxpbmVFbmRQb2x5Z29uO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgICAgfSxcbiAgICAgIHBvaW50UmFkaXVzOiBmdW5jdGlvbihfKSB7XG4gICAgICAgIHBvaW50UmFkaXVzID0gXztcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICAgIH0sXG4gICAgICByZXN1bHQ6IGQzX25vb3BcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIGNvbnRleHQubW92ZVRvKHggKyBwb2ludFJhZGl1cywgeSk7XG4gICAgICBjb250ZXh0LmFyYyh4LCB5LCBwb2ludFJhZGl1cywgMCwgz4QpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludExpbmVTdGFydCh4LCB5KSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50TGluZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lKHgsIHkpIHtcbiAgICAgIGNvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmRQb2x5Z29uKCkge1xuICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cmVhbTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcmVzYW1wbGUocHJvamVjdCkge1xuICAgIHZhciDOtDIgPSAuNSwgY29zTWluRGlzdGFuY2UgPSBNYXRoLmNvcygzMCAqIGQzX3JhZGlhbnMpLCBtYXhEZXB0aCA9IDE2O1xuICAgIGZ1bmN0aW9uIHJlc2FtcGxlKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIChtYXhEZXB0aCA/IHJlc2FtcGxlUmVjdXJzaXZlIDogcmVzYW1wbGVOb25lKShzdHJlYW0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNhbXBsZU5vbmUoc3RyZWFtKSB7XG4gICAgICByZXR1cm4gZDNfZ2VvX3RyYW5zZm9ybVBvaW50KHN0cmVhbSwgZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2FtcGxlUmVjdXJzaXZlKHN0cmVhbSkge1xuICAgICAgdmFyIM67MDAsIM+GMDAsIHgwMCwgeTAwLCBhMDAsIGIwMCwgYzAwLCDOuzAsIHgwLCB5MCwgYTAsIGIwLCBjMDtcbiAgICAgIHZhciByZXNhbXBsZSA9IHtcbiAgICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgcmVzYW1wbGUubGluZVN0YXJ0ID0gcmluZ1N0YXJ0O1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgICAgIHJlc2FtcGxlLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICAgIHN0cmVhbS5wb2ludCh4WzBdLCB4WzFdKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgICAgeDAgPSBOYU47XG4gICAgICAgIHJlc2FtcGxlLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lUG9pbnQozrssIM+GKSB7XG4gICAgICAgIHZhciBjID0gZDNfZ2VvX2NhcnRlc2lhbihbIM67LCDPhiBdKSwgcCA9IHByb2plY3QozrssIM+GKTtcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgwID0gcFswXSwgeTAgPSBwWzFdLCDOuzAgPSDOuywgYTAgPSBjWzBdLCBiMCA9IGNbMV0sIGMwID0gY1syXSwgbWF4RGVwdGgsIHN0cmVhbSk7XG4gICAgICAgIHN0cmVhbS5wb2ludCh4MCwgeTApO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSBwb2ludDtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHJpbmdTdGFydCgpIHtcbiAgICAgICAgbGluZVN0YXJ0KCk7XG4gICAgICAgIHJlc2FtcGxlLnBvaW50ID0gcmluZ1BvaW50O1xuICAgICAgICByZXNhbXBsZS5saW5lRW5kID0gcmluZ0VuZDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHJpbmdQb2ludCjOuywgz4YpIHtcbiAgICAgICAgbGluZVBvaW50KM67MDAgPSDOuywgz4YwMCA9IM+GKSwgeDAwID0geDAsIHkwMCA9IHkwLCBhMDAgPSBhMCwgYjAwID0gYjAsIGMwMCA9IGMwO1xuICAgICAgICByZXNhbXBsZS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHJpbmdFbmQoKSB7XG4gICAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgzrswLCBhMCwgYjAsIGMwLCB4MDAsIHkwMCwgzrswMCwgYTAwLCBiMDAsIGMwMCwgbWF4RGVwdGgsIHN0cmVhbSk7XG4gICAgICAgIHJlc2FtcGxlLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICBsaW5lRW5kKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzYW1wbGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgzrswLCBhMCwgYjAsIGMwLCB4MSwgeTEsIM67MSwgYTEsIGIxLCBjMSwgZGVwdGgsIHN0cmVhbSkge1xuICAgICAgdmFyIGR4ID0geDEgLSB4MCwgZHkgPSB5MSAtIHkwLCBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgaWYgKGQyID4gNCAqIM60MiAmJiBkZXB0aC0tKSB7XG4gICAgICAgIHZhciBhID0gYTAgKyBhMSwgYiA9IGIwICsgYjEsIGMgPSBjMCArIGMxLCBtID0gTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIgKyBjICogYyksIM+GMiA9IE1hdGguYXNpbihjIC89IG0pLCDOuzIgPSBhYnMoYWJzKGMpIC0gMSkgPCDOtSB8fCBhYnMozrswIC0gzrsxKSA8IM61ID8gKM67MCArIM67MSkgLyAyIDogTWF0aC5hdGFuMihiLCBhKSwgcCA9IHByb2plY3QozrsyLCDPhjIpLCB4MiA9IHBbMF0sIHkyID0gcFsxXSwgZHgyID0geDIgLSB4MCwgZHkyID0geTIgLSB5MCwgZHogPSBkeSAqIGR4MiAtIGR4ICogZHkyO1xuICAgICAgICBpZiAoZHogKiBkeiAvIGQyID4gzrQyIHx8IGFicygoZHggKiBkeDIgKyBkeSAqIGR5MikgLyBkMiAtIC41KSA+IC4zIHx8IGEwICogYTEgKyBiMCAqIGIxICsgYzAgKiBjMSA8IGNvc01pbkRpc3RhbmNlKSB7XG4gICAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgyLCB5MiwgzrsyLCBhIC89IG0sIGIgLz0gbSwgYywgZGVwdGgsIHN0cmVhbSk7XG4gICAgICAgICAgc3RyZWFtLnBvaW50KHgyLCB5Mik7XG4gICAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDIsIHkyLCDOuzIsIGEsIGIsIGMsIHgxLCB5MSwgzrsxLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXNhbXBsZS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBNYXRoLnNxcnQozrQyKTtcbiAgICAgIG1heERlcHRoID0gKM60MiA9IF8gKiBfKSA+IDAgJiYgMTY7XG4gICAgICByZXR1cm4gcmVzYW1wbGU7XG4gICAgfTtcbiAgICByZXR1cm4gcmVzYW1wbGU7XG4gIH1cbiAgZDMuZ2VvLnBhdGggPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcG9pbnRSYWRpdXMgPSA0LjUsIHByb2plY3Rpb24sIGNvbnRleHQsIHByb2plY3RTdHJlYW0sIGNvbnRleHRTdHJlYW0sIGNhY2hlU3RyZWFtO1xuICAgIGZ1bmN0aW9uIHBhdGgob2JqZWN0KSB7XG4gICAgICBpZiAob2JqZWN0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcG9pbnRSYWRpdXMgPT09IFwiZnVuY3Rpb25cIikgY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cygrcG9pbnRSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgICAgIGlmICghY2FjaGVTdHJlYW0gfHwgIWNhY2hlU3RyZWFtLnZhbGlkKSBjYWNoZVN0cmVhbSA9IHByb2plY3RTdHJlYW0oY29udGV4dFN0cmVhbSk7XG4gICAgICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBjYWNoZVN0cmVhbSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGV4dFN0cmVhbS5yZXN1bHQoKTtcbiAgICB9XG4gICAgcGF0aC5hcmVhID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWFTdW0gPSAwO1xuICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIHByb2plY3RTdHJlYW0oZDNfZ2VvX3BhdGhBcmVhKSk7XG4gICAgICByZXR1cm4gZDNfZ2VvX3BhdGhBcmVhU3VtO1xuICAgIH07XG4gICAgcGF0aC5jZW50cm9pZCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDAgPSBkM19nZW9fY2VudHJvaWRZMCA9IGQzX2dlb19jZW50cm9pZFowID0gZDNfZ2VvX2NlbnRyb2lkWDEgPSBkM19nZW9fY2VudHJvaWRZMSA9IGQzX2dlb19jZW50cm9pZFoxID0gZDNfZ2VvX2NlbnRyb2lkWDIgPSBkM19nZW9fY2VudHJvaWRZMiA9IGQzX2dlb19jZW50cm9pZFoyID0gMDtcbiAgICAgIGQzLmdlby5zdHJlYW0ob2JqZWN0LCBwcm9qZWN0U3RyZWFtKGQzX2dlb19wYXRoQ2VudHJvaWQpKTtcbiAgICAgIHJldHVybiBkM19nZW9fY2VudHJvaWRaMiA/IFsgZDNfZ2VvX2NlbnRyb2lkWDIgLyBkM19nZW9fY2VudHJvaWRaMiwgZDNfZ2VvX2NlbnRyb2lkWTIgLyBkM19nZW9fY2VudHJvaWRaMiBdIDogZDNfZ2VvX2NlbnRyb2lkWjEgPyBbIGQzX2dlb19jZW50cm9pZFgxIC8gZDNfZ2VvX2NlbnRyb2lkWjEsIGQzX2dlb19jZW50cm9pZFkxIC8gZDNfZ2VvX2NlbnRyb2lkWjEgXSA6IGQzX2dlb19jZW50cm9pZFowID8gWyBkM19nZW9fY2VudHJvaWRYMCAvIGQzX2dlb19jZW50cm9pZFowLCBkM19nZW9fY2VudHJvaWRZMCAvIGQzX2dlb19jZW50cm9pZFowIF0gOiBbIE5hTiwgTmFOIF07XG4gICAgfTtcbiAgICBwYXRoLmJvdW5kcyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgZDNfZ2VvX3BhdGhCb3VuZHNYMSA9IGQzX2dlb19wYXRoQm91bmRzWTEgPSAtKGQzX2dlb19wYXRoQm91bmRzWDAgPSBkM19nZW9fcGF0aEJvdW5kc1kwID0gSW5maW5pdHkpO1xuICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIHByb2plY3RTdHJlYW0oZDNfZ2VvX3BhdGhCb3VuZHMpKTtcbiAgICAgIHJldHVybiBbIFsgZDNfZ2VvX3BhdGhCb3VuZHNYMCwgZDNfZ2VvX3BhdGhCb3VuZHNZMCBdLCBbIGQzX2dlb19wYXRoQm91bmRzWDEsIGQzX2dlb19wYXRoQm91bmRzWTEgXSBdO1xuICAgIH07XG4gICAgcGF0aC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJvamVjdGlvbjtcbiAgICAgIHByb2plY3RTdHJlYW0gPSAocHJvamVjdGlvbiA9IF8pID8gXy5zdHJlYW0gfHwgZDNfZ2VvX3BhdGhQcm9qZWN0U3RyZWFtKF8pIDogZDNfaWRlbnRpdHk7XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIHBhdGguY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG4gICAgICBjb250ZXh0U3RyZWFtID0gKGNvbnRleHQgPSBfKSA9PSBudWxsID8gbmV3IGQzX2dlb19wYXRoQnVmZmVyKCkgOiBuZXcgZDNfZ2VvX3BhdGhDb250ZXh0KF8pO1xuICAgICAgaWYgKHR5cGVvZiBwb2ludFJhZGl1cyAhPT0gXCJmdW5jdGlvblwiKSBjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKHBvaW50UmFkaXVzKTtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcGF0aC5wb2ludFJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBvaW50UmFkaXVzO1xuICAgICAgcG9pbnRSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IChjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtfKSwgK18pO1xuICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfTtcbiAgICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIGNhY2hlU3RyZWFtID0gbnVsbDtcbiAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aC5wcm9qZWN0aW9uKGQzLmdlby5hbGJlcnNVc2EoKSkuY29udGV4dChudWxsKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhQcm9qZWN0U3RyZWFtKHByb2plY3QpIHtcbiAgICB2YXIgcmVzYW1wbGUgPSBkM19nZW9fcmVzYW1wbGUoZnVuY3Rpb24oeCwgeSkge1xuICAgICAgcmV0dXJuIHByb2plY3QoWyB4ICogZDNfZGVncmVlcywgeSAqIGQzX2RlZ3JlZXMgXSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uUmFkaWFucyhyZXNhbXBsZShzdHJlYW0pKTtcbiAgICB9O1xuICB9XG4gIGQzLmdlby50cmFuc2Zvcm0gPSBmdW5jdGlvbihtZXRob2RzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0cmVhbTogZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICAgIHZhciB0cmFuc2Zvcm0gPSBuZXcgZDNfZ2VvX3RyYW5zZm9ybShzdHJlYW0pO1xuICAgICAgICBmb3IgKHZhciBrIGluIG1ldGhvZHMpIHRyYW5zZm9ybVtrXSA9IG1ldGhvZHNba107XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm07XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3RyYW5zZm9ybShzdHJlYW0pIHtcbiAgICB0aGlzLnN0cmVhbSA9IHN0cmVhbTtcbiAgfVxuICBkM19nZW9fdHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdGhpcy5zdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgfSxcbiAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0uc3BoZXJlKCk7XG4gICAgfSxcbiAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgfSxcbiAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLmxpbmVFbmQoKTtcbiAgICB9LFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3RyYW5zZm9ybVBvaW50KHN0cmVhbSwgcG9pbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnNwaGVyZSgpO1xuICAgICAgfSxcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBkMy5nZW8ucHJvamVjdGlvbiA9IGQzX2dlb19wcm9qZWN0aW9uO1xuICBkMy5nZW8ucHJvamVjdGlvbk11dGF0b3IgPSBkM19nZW9fcHJvamVjdGlvbk11dGF0b3I7XG4gIGZ1bmN0aW9uIGQzX2dlb19wcm9qZWN0aW9uKHByb2plY3QpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHByb2plY3Q7XG4gICAgfSkoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcHJvamVjdGlvbk11dGF0b3IocHJvamVjdEF0KSB7XG4gICAgdmFyIHByb2plY3QsIHJvdGF0ZSwgcHJvamVjdFJvdGF0ZSwgcHJvamVjdFJlc2FtcGxlID0gZDNfZ2VvX3Jlc2FtcGxlKGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgcmV0dXJuIFsgeFswXSAqIGsgKyDOtHgsIM60eSAtIHhbMV0gKiBrIF07XG4gICAgfSksIGsgPSAxNTAsIHggPSA0ODAsIHkgPSAyNTAsIM67ID0gMCwgz4YgPSAwLCDOtM67ID0gMCwgzrTPhiA9IDAsIM60zrMgPSAwLCDOtHgsIM60eSwgcHJlY2xpcCA9IGQzX2dlb19jbGlwQW50aW1lcmlkaWFuLCBwb3N0Y2xpcCA9IGQzX2lkZW50aXR5LCBjbGlwQW5nbGUgPSBudWxsLCBjbGlwRXh0ZW50ID0gbnVsbCwgc3RyZWFtO1xuICAgIGZ1bmN0aW9uIHByb2plY3Rpb24ocG9pbnQpIHtcbiAgICAgIHBvaW50ID0gcHJvamVjdFJvdGF0ZShwb2ludFswXSAqIGQzX3JhZGlhbnMsIHBvaW50WzFdICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gWyBwb2ludFswXSAqIGsgKyDOtHgsIM60eSAtIHBvaW50WzFdICogayBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpbnZlcnQocG9pbnQpIHtcbiAgICAgIHBvaW50ID0gcHJvamVjdFJvdGF0ZS5pbnZlcnQoKHBvaW50WzBdIC0gzrR4KSAvIGssICjOtHkgLSBwb2ludFsxXSkgLyBrKTtcbiAgICAgIHJldHVybiBwb2ludCAmJiBbIHBvaW50WzBdICogZDNfZGVncmVlcywgcG9pbnRbMV0gKiBkM19kZWdyZWVzIF07XG4gICAgfVxuICAgIHByb2plY3Rpb24uc3RyZWFtID0gZnVuY3Rpb24ob3V0cHV0KSB7XG4gICAgICBpZiAoc3RyZWFtKSBzdHJlYW0udmFsaWQgPSBmYWxzZTtcbiAgICAgIHN0cmVhbSA9IGQzX2dlb19wcm9qZWN0aW9uUmFkaWFucyhwcmVjbGlwKHJvdGF0ZSwgcHJvamVjdFJlc2FtcGxlKHBvc3RjbGlwKG91dHB1dCkpKSk7XG4gICAgICBzdHJlYW0udmFsaWQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24uY2xpcEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xpcEFuZ2xlO1xuICAgICAgcHJlY2xpcCA9IF8gPT0gbnVsbCA/IChjbGlwQW5nbGUgPSBfLCBkM19nZW9fY2xpcEFudGltZXJpZGlhbikgOiBkM19nZW9fY2xpcENpcmNsZSgoY2xpcEFuZ2xlID0gK18pICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gaW52YWxpZGF0ZSgpO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xpcEV4dGVudDtcbiAgICAgIGNsaXBFeHRlbnQgPSBfO1xuICAgICAgcG9zdGNsaXAgPSBfID8gZDNfZ2VvX2NsaXBFeHRlbnQoX1swXVswXSwgX1swXVsxXSwgX1sxXVswXSwgX1sxXVsxXSkgOiBkM19pZGVudGl0eTtcbiAgICAgIHJldHVybiBpbnZhbGlkYXRlKCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaztcbiAgICAgIGsgPSArXztcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIHgsIHkgXTtcbiAgICAgIHggPSArX1swXTtcbiAgICAgIHkgPSArX1sxXTtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIM67ICogZDNfZGVncmVlcywgz4YgKiBkM19kZWdyZWVzIF07XG4gICAgICDOuyA9IF9bMF0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgz4YgPSBfWzFdICUgMzYwICogZDNfcmFkaWFucztcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIM60zrsgKiBkM19kZWdyZWVzLCDOtM+GICogZDNfZGVncmVlcywgzrTOsyAqIGQzX2RlZ3JlZXMgXTtcbiAgICAgIM60zrsgPSBfWzBdICUgMzYwICogZDNfcmFkaWFucztcbiAgICAgIM60z4YgPSBfWzFdICUgMzYwICogZDNfcmFkaWFucztcbiAgICAgIM60zrMgPSBfLmxlbmd0aCA+IDIgPyBfWzJdICUgMzYwICogZDNfcmFkaWFucyA6IDA7XG4gICAgICByZXR1cm4gcmVzZXQoKTtcbiAgICB9O1xuICAgIGQzLnJlYmluZChwcm9qZWN0aW9uLCBwcm9qZWN0UmVzYW1wbGUsIFwicHJlY2lzaW9uXCIpO1xuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgcHJvamVjdFJvdGF0ZSA9IGQzX2dlb19jb21wb3NlKHJvdGF0ZSA9IGQzX2dlb19yb3RhdGlvbijOtM67LCDOtM+GLCDOtM6zKSwgcHJvamVjdCk7XG4gICAgICB2YXIgY2VudGVyID0gcHJvamVjdCjOuywgz4YpO1xuICAgICAgzrR4ID0geCAtIGNlbnRlclswXSAqIGs7XG4gICAgICDOtHkgPSB5ICsgY2VudGVyWzFdICogaztcbiAgICAgIHJldHVybiBpbnZhbGlkYXRlKCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGludmFsaWRhdGUoKSB7XG4gICAgICBpZiAoc3RyZWFtKSBzdHJlYW0udmFsaWQgPSBmYWxzZSwgc3RyZWFtID0gbnVsbDtcbiAgICAgIHJldHVybiBwcm9qZWN0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBwcm9qZWN0ID0gcHJvamVjdEF0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBwcm9qZWN0aW9uLmludmVydCA9IHByb2plY3QuaW52ZXJ0ICYmIGludmVydDtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zKHN0cmVhbSkge1xuICAgIHJldHVybiBkM19nZW9fdHJhbnNmb3JtUG9pbnQoc3RyZWFtLCBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBzdHJlYW0ucG9pbnQoeCAqIGQzX3JhZGlhbnMsIHkgKiBkM19yYWRpYW5zKTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fZXF1aXJlY3Rhbmd1bGFyKM67LCDPhikge1xuICAgIHJldHVybiBbIM67LCDPhiBdO1xuICB9XG4gIChkMy5nZW8uZXF1aXJlY3Rhbmd1bGFyID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19lcXVpcmVjdGFuZ3VsYXIpO1xuICB9KS5yYXcgPSBkM19nZW9fZXF1aXJlY3Rhbmd1bGFyLmludmVydCA9IGQzX2dlb19lcXVpcmVjdGFuZ3VsYXI7XG4gIGQzLmdlby5yb3RhdGlvbiA9IGZ1bmN0aW9uKHJvdGF0ZSkge1xuICAgIHJvdGF0ZSA9IGQzX2dlb19yb3RhdGlvbihyb3RhdGVbMF0gJSAzNjAgKiBkM19yYWRpYW5zLCByb3RhdGVbMV0gKiBkM19yYWRpYW5zLCByb3RhdGUubGVuZ3RoID4gMiA/IHJvdGF0ZVsyXSAqIGQzX3JhZGlhbnMgOiAwKTtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKGNvb3JkaW5hdGVzKSB7XG4gICAgICBjb29yZGluYXRlcyA9IHJvdGF0ZShjb29yZGluYXRlc1swXSAqIGQzX3JhZGlhbnMsIGNvb3JkaW5hdGVzWzFdICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gY29vcmRpbmF0ZXNbMF0gKj0gZDNfZGVncmVlcywgY29vcmRpbmF0ZXNbMV0gKj0gZDNfZGVncmVlcywgY29vcmRpbmF0ZXM7XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICAgIGNvb3JkaW5hdGVzID0gcm90YXRlLmludmVydChjb29yZGluYXRlc1swXSAqIGQzX3JhZGlhbnMsIGNvb3JkaW5hdGVzWzFdICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gY29vcmRpbmF0ZXNbMF0gKj0gZDNfZGVncmVlcywgY29vcmRpbmF0ZXNbMV0gKj0gZDNfZGVncmVlcywgY29vcmRpbmF0ZXM7XG4gICAgfTtcbiAgICByZXR1cm4gZm9yd2FyZDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2lkZW50aXR5Um90YXRpb24ozrssIM+GKSB7XG4gICAgcmV0dXJuIFsgzrsgPiDPgCA/IM67IC0gz4QgOiDOuyA8IC3PgCA/IM67ICsgz4QgOiDOuywgz4YgXTtcbiAgfVxuICBkM19nZW9faWRlbnRpdHlSb3RhdGlvbi5pbnZlcnQgPSBkM19nZW9fZXF1aXJlY3Rhbmd1bGFyO1xuICBmdW5jdGlvbiBkM19nZW9fcm90YXRpb24ozrTOuywgzrTPhiwgzrTOsykge1xuICAgIHJldHVybiDOtM67ID8gzrTPhiB8fCDOtM6zID8gZDNfZ2VvX2NvbXBvc2UoZDNfZ2VvX3JvdGF0aW9uzrsozrTOuyksIGQzX2dlb19yb3RhdGlvbs+GzrMozrTPhiwgzrTOsykpIDogZDNfZ2VvX3JvdGF0aW9uzrsozrTOuykgOiDOtM+GIHx8IM60zrMgPyBkM19nZW9fcm90YXRpb27Phs6zKM60z4YsIM60zrMpIDogZDNfZ2VvX2lkZW50aXR5Um90YXRpb247XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2ZvcndhcmRSb3RhdGlvbs67KM60zrspIHtcbiAgICByZXR1cm4gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICByZXR1cm4gzrsgKz0gzrTOuywgWyDOuyA+IM+AID8gzrsgLSDPhCA6IM67IDwgLc+AID8gzrsgKyDPhCA6IM67LCDPhiBdO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3JvdGF0aW9uzrsozrTOuykge1xuICAgIHZhciByb3RhdGlvbiA9IGQzX2dlb19mb3J3YXJkUm90YXRpb27OuyjOtM67KTtcbiAgICByb3RhdGlvbi5pbnZlcnQgPSBkM19nZW9fZm9yd2FyZFJvdGF0aW9uzrsoLc60zrspO1xuICAgIHJldHVybiByb3RhdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcm90YXRpb27Phs6zKM60z4YsIM60zrMpIHtcbiAgICB2YXIgY29zzrTPhiA9IE1hdGguY29zKM60z4YpLCBzaW7OtM+GID0gTWF0aC5zaW4ozrTPhiksIGNvc860zrMgPSBNYXRoLmNvcyjOtM6zKSwgc2luzrTOsyA9IE1hdGguc2luKM60zrMpO1xuICAgIGZ1bmN0aW9uIHJvdGF0aW9uKM67LCDPhikge1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YpLCB4ID0gTWF0aC5jb3MozrspICogY29zz4YsIHkgPSBNYXRoLnNpbijOuykgKiBjb3PPhiwgeiA9IE1hdGguc2luKM+GKSwgayA9IHogKiBjb3POtM+GICsgeCAqIHNpbs60z4Y7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHkgKiBjb3POtM6zIC0gayAqIHNpbs60zrMsIHggKiBjb3POtM+GIC0geiAqIHNpbs60z4YpLCBkM19hc2luKGsgKiBjb3POtM6zICsgeSAqIHNpbs60zrMpIF07XG4gICAgfVxuICAgIHJvdGF0aW9uLmludmVydCA9IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YpLCB4ID0gTWF0aC5jb3MozrspICogY29zz4YsIHkgPSBNYXRoLnNpbijOuykgKiBjb3PPhiwgeiA9IE1hdGguc2luKM+GKSwgayA9IHogKiBjb3POtM6zIC0geSAqIHNpbs60zrM7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHkgKiBjb3POtM6zICsgeiAqIHNpbs60zrMsIHggKiBjb3POtM+GICsgayAqIHNpbs60z4YpLCBkM19hc2luKGsgKiBjb3POtM+GIC0geCAqIHNpbs60z4YpIF07XG4gICAgfTtcbiAgICByZXR1cm4gcm90YXRpb247XG4gIH1cbiAgZDMuZ2VvLmNpcmNsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBvcmlnaW4gPSBbIDAsIDAgXSwgYW5nbGUsIHByZWNpc2lvbiA9IDYsIGludGVycG9sYXRlO1xuICAgIGZ1bmN0aW9uIGNpcmNsZSgpIHtcbiAgICAgIHZhciBjZW50ZXIgPSB0eXBlb2Ygb3JpZ2luID09PSBcImZ1bmN0aW9uXCIgPyBvcmlnaW4uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IG9yaWdpbiwgcm90YXRlID0gZDNfZ2VvX3JvdGF0aW9uKC1jZW50ZXJbMF0gKiBkM19yYWRpYW5zLCAtY2VudGVyWzFdICogZDNfcmFkaWFucywgMCkuaW52ZXJ0LCByaW5nID0gW107XG4gICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCB7XG4gICAgICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgICAgcmluZy5wdXNoKHggPSByb3RhdGUoeCwgeSkpO1xuICAgICAgICAgIHhbMF0gKj0gZDNfZGVncmVlcywgeFsxXSAqPSBkM19kZWdyZWVzO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiUG9seWdvblwiLFxuICAgICAgICBjb29yZGluYXRlczogWyByaW5nIF1cbiAgICAgIH07XG4gICAgfVxuICAgIGNpcmNsZS5vcmlnaW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvcmlnaW47XG4gICAgICBvcmlnaW4gPSB4O1xuICAgICAgcmV0dXJuIGNpcmNsZTtcbiAgICB9O1xuICAgIGNpcmNsZS5hbmdsZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGFuZ2xlO1xuICAgICAgaW50ZXJwb2xhdGUgPSBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUoKGFuZ2xlID0gK3gpICogZDNfcmFkaWFucywgcHJlY2lzaW9uICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH07XG4gICAgY2lyY2xlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByZWNpc2lvbjtcbiAgICAgIGludGVycG9sYXRlID0gZDNfZ2VvX2NpcmNsZUludGVycG9sYXRlKGFuZ2xlICogZDNfcmFkaWFucywgKHByZWNpc2lvbiA9ICtfKSAqIGQzX3JhZGlhbnMpO1xuICAgICAgcmV0dXJuIGNpcmNsZTtcbiAgICB9O1xuICAgIHJldHVybiBjaXJjbGUuYW5nbGUoOTApO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUocmFkaXVzLCBwcmVjaXNpb24pIHtcbiAgICB2YXIgY3IgPSBNYXRoLmNvcyhyYWRpdXMpLCBzciA9IE1hdGguc2luKHJhZGl1cyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGZyb20sIHRvLCBkaXJlY3Rpb24sIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgc3RlcCA9IGRpcmVjdGlvbiAqIHByZWNpc2lvbjtcbiAgICAgIGlmIChmcm9tICE9IG51bGwpIHtcbiAgICAgICAgZnJvbSA9IGQzX2dlb19jaXJjbGVBbmdsZShjciwgZnJvbSk7XG4gICAgICAgIHRvID0gZDNfZ2VvX2NpcmNsZUFuZ2xlKGNyLCB0byk7XG4gICAgICAgIGlmIChkaXJlY3Rpb24gPiAwID8gZnJvbSA8IHRvIDogZnJvbSA+IHRvKSBmcm9tICs9IGRpcmVjdGlvbiAqIM+EO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJvbSA9IHJhZGl1cyArIGRpcmVjdGlvbiAqIM+EO1xuICAgICAgICB0byA9IHJhZGl1cyAtIC41ICogc3RlcDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIHBvaW50LCB0ID0gZnJvbTsgZGlyZWN0aW9uID4gMCA/IHQgPiB0byA6IHQgPCB0bzsgdCAtPSBzdGVwKSB7XG4gICAgICAgIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IGQzX2dlb19zcGhlcmljYWwoWyBjciwgLXNyICogTWF0aC5jb3ModCksIC1zciAqIE1hdGguc2luKHQpIF0pKVswXSwgcG9pbnRbMV0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NpcmNsZUFuZ2xlKGNyLCBwb2ludCkge1xuICAgIHZhciBhID0gZDNfZ2VvX2NhcnRlc2lhbihwb2ludCk7XG4gICAgYVswXSAtPSBjcjtcbiAgICBkM19nZW9fY2FydGVzaWFuTm9ybWFsaXplKGEpO1xuICAgIHZhciBhbmdsZSA9IGQzX2Fjb3MoLWFbMV0pO1xuICAgIHJldHVybiAoKC1hWzJdIDwgMCA/IC1hbmdsZSA6IGFuZ2xlKSArIDIgKiBNYXRoLlBJIC0gzrUpICUgKDIgKiBNYXRoLlBJKTtcbiAgfVxuICBkMy5nZW8uZGlzdGFuY2UgPSBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIM6UzrsgPSAoYlswXSAtIGFbMF0pICogZDNfcmFkaWFucywgz4YwID0gYVsxXSAqIGQzX3JhZGlhbnMsIM+GMSA9IGJbMV0gKiBkM19yYWRpYW5zLCBzaW7OlM67ID0gTWF0aC5zaW4ozpTOuyksIGNvc86UzrsgPSBNYXRoLmNvcyjOlM67KSwgc2luz4YwID0gTWF0aC5zaW4oz4YwKSwgY29zz4YwID0gTWF0aC5jb3Moz4YwKSwgc2luz4YxID0gTWF0aC5zaW4oz4YxKSwgY29zz4YxID0gTWF0aC5jb3Moz4YxKSwgdDtcbiAgICByZXR1cm4gTWF0aC5hdGFuMihNYXRoLnNxcnQoKHQgPSBjb3PPhjEgKiBzaW7OlM67KSAqIHQgKyAodCA9IGNvc8+GMCAqIHNpbs+GMSAtIHNpbs+GMCAqIGNvc8+GMSAqIGNvc86UzrspICogdCksIHNpbs+GMCAqIHNpbs+GMSArIGNvc8+GMCAqIGNvc8+GMSAqIGNvc86UzrspO1xuICB9O1xuICBkMy5nZW8uZ3JhdGljdWxlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHgxLCB4MCwgWDEsIFgwLCB5MSwgeTAsIFkxLCBZMCwgZHggPSAxMCwgZHkgPSBkeCwgRFggPSA5MCwgRFkgPSAzNjAsIHgsIHksIFgsIFksIHByZWNpc2lvbiA9IDIuNTtcbiAgICBmdW5jdGlvbiBncmF0aWN1bGUoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIk11bHRpTGluZVN0cmluZ1wiLFxuICAgICAgICBjb29yZGluYXRlczogbGluZXMoKVxuICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZXMoKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoTWF0aC5jZWlsKFgwIC8gRFgpICogRFgsIFgxLCBEWCkubWFwKFgpLmNvbmNhdChkMy5yYW5nZShNYXRoLmNlaWwoWTAgLyBEWSkgKiBEWSwgWTEsIERZKS5tYXAoWSkpLmNvbmNhdChkMy5yYW5nZShNYXRoLmNlaWwoeDAgLyBkeCkgKiBkeCwgeDEsIGR4KS5maWx0ZXIoZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gYWJzKHggJSBEWCkgPiDOtTtcbiAgICAgIH0pLm1hcCh4KSkuY29uY2F0KGQzLnJhbmdlKE1hdGguY2VpbCh5MCAvIGR5KSAqIGR5LCB5MSwgZHkpLmZpbHRlcihmdW5jdGlvbih5KSB7XG4gICAgICAgIHJldHVybiBhYnMoeSAlIERZKSA+IM61O1xuICAgICAgfSkubWFwKHkpKTtcbiAgICB9XG4gICAgZ3JhdGljdWxlLmxpbmVzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbGluZXMoKS5tYXAoZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiBcIkxpbmVTdHJpbmdcIixcbiAgICAgICAgICBjb29yZGluYXRlczogY29vcmRpbmF0ZXNcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm91dGxpbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiUG9seWdvblwiLFxuICAgICAgICBjb29yZGluYXRlczogWyBYKFgwKS5jb25jYXQoWShZMSkuc2xpY2UoMSksIFgoWDEpLnJldmVyc2UoKS5zbGljZSgxKSwgWShZMCkucmV2ZXJzZSgpLnNsaWNlKDEpKSBdXG4gICAgICB9O1xuICAgIH07XG4gICAgZ3JhdGljdWxlLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5taW5vckV4dGVudCgpO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5tYWpvckV4dGVudChfKS5taW5vckV4dGVudChfKTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5tYWpvckV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgWyBYMCwgWTAgXSwgWyBYMSwgWTEgXSBdO1xuICAgICAgWDAgPSArX1swXVswXSwgWDEgPSArX1sxXVswXTtcbiAgICAgIFkwID0gK19bMF1bMV0sIFkxID0gK19bMV1bMV07XG4gICAgICBpZiAoWDAgPiBYMSkgXyA9IFgwLCBYMCA9IFgxLCBYMSA9IF87XG4gICAgICBpZiAoWTAgPiBZMSkgXyA9IFkwLCBZMCA9IFkxLCBZMSA9IF87XG4gICAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1pbm9yRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBbIHgwLCB5MCBdLCBbIHgxLCB5MSBdIF07XG4gICAgICB4MCA9ICtfWzBdWzBdLCB4MSA9ICtfWzFdWzBdO1xuICAgICAgeTAgPSArX1swXVsxXSwgeTEgPSArX1sxXVsxXTtcbiAgICAgIGlmICh4MCA+IHgxKSBfID0geDAsIHgwID0geDEsIHgxID0gXztcbiAgICAgIGlmICh5MCA+IHkxKSBfID0geTAsIHkwID0geTEsIHkxID0gXztcbiAgICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gICAgfTtcbiAgICBncmF0aWN1bGUuc3RlcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5taW5vclN0ZXAoKTtcbiAgICAgIHJldHVybiBncmF0aWN1bGUubWFqb3JTdGVwKF8pLm1pbm9yU3RlcChfKTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5tYWpvclN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIERYLCBEWSBdO1xuICAgICAgRFggPSArX1swXSwgRFkgPSArX1sxXTtcbiAgICAgIHJldHVybiBncmF0aWN1bGU7XG4gICAgfTtcbiAgICBncmF0aWN1bGUubWlub3JTdGVwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBkeCwgZHkgXTtcbiAgICAgIGR4ID0gK19bMF0sIGR5ID0gK19bMV07XG4gICAgICByZXR1cm4gZ3JhdGljdWxlO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByZWNpc2lvbjtcbiAgICAgIHByZWNpc2lvbiA9ICtfO1xuICAgICAgeCA9IGQzX2dlb19ncmF0aWN1bGVYKHkwLCB5MSwgOTApO1xuICAgICAgeSA9IGQzX2dlb19ncmF0aWN1bGVZKHgwLCB4MSwgcHJlY2lzaW9uKTtcbiAgICAgIFggPSBkM19nZW9fZ3JhdGljdWxlWChZMCwgWTEsIDkwKTtcbiAgICAgIFkgPSBkM19nZW9fZ3JhdGljdWxlWShYMCwgWDEsIHByZWNpc2lvbik7XG4gICAgICByZXR1cm4gZ3JhdGljdWxlO1xuICAgIH07XG4gICAgcmV0dXJuIGdyYXRpY3VsZS5tYWpvckV4dGVudChbIFsgLTE4MCwgLTkwICsgzrUgXSwgWyAxODAsIDkwIC0gzrUgXSBdKS5taW5vckV4dGVudChbIFsgLTE4MCwgLTgwIC0gzrUgXSwgWyAxODAsIDgwICsgzrUgXSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2dyYXRpY3VsZVgoeTAsIHkxLCBkeSkge1xuICAgIHZhciB5ID0gZDMucmFuZ2UoeTAsIHkxIC0gzrUsIGR5KS5jb25jYXQoeTEpO1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geS5tYXAoZnVuY3Rpb24oeSkge1xuICAgICAgICByZXR1cm4gWyB4LCB5IF07XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19ncmF0aWN1bGVZKHgwLCB4MSwgZHgpIHtcbiAgICB2YXIgeCA9IGQzLnJhbmdlKHgwLCB4MSAtIM61LCBkeCkuY29uY2F0KHgxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oeSkge1xuICAgICAgcmV0dXJuIHgubWFwKGZ1bmN0aW9uKHgpIHtcbiAgICAgICAgcmV0dXJuIFsgeCwgeSBdO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19zb3VyY2UoZCkge1xuICAgIHJldHVybiBkLnNvdXJjZTtcbiAgfVxuICBmdW5jdGlvbiBkM190YXJnZXQoZCkge1xuICAgIHJldHVybiBkLnRhcmdldDtcbiAgfVxuICBkMy5nZW8uZ3JlYXRBcmMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc291cmNlID0gZDNfc291cmNlLCBzb3VyY2VfLCB0YXJnZXQgPSBkM190YXJnZXQsIHRhcmdldF87XG4gICAgZnVuY3Rpb24gZ3JlYXRBcmMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIkxpbmVTdHJpbmdcIixcbiAgICAgICAgY29vcmRpbmF0ZXM6IFsgc291cmNlXyB8fCBzb3VyY2UuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdGFyZ2V0XyB8fCB0YXJnZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKSBdXG4gICAgICB9O1xuICAgIH1cbiAgICBncmVhdEFyYy5kaXN0YW5jZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzLmdlby5kaXN0YW5jZShzb3VyY2VfIHx8IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0YXJnZXRfIHx8IHRhcmdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICB9O1xuICAgIGdyZWF0QXJjLnNvdXJjZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvdXJjZTtcbiAgICAgIHNvdXJjZSA9IF8sIHNvdXJjZV8gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gbnVsbCA6IF87XG4gICAgICByZXR1cm4gZ3JlYXRBcmM7XG4gICAgfTtcbiAgICBncmVhdEFyYy50YXJnZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gICAgICB0YXJnZXQgPSBfLCB0YXJnZXRfID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IG51bGwgOiBfO1xuICAgICAgcmV0dXJuIGdyZWF0QXJjO1xuICAgIH07XG4gICAgZ3JlYXRBcmMucHJlY2lzaW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGdyZWF0QXJjIDogMDtcbiAgICB9O1xuICAgIHJldHVybiBncmVhdEFyYztcbiAgfTtcbiAgZDMuZ2VvLmludGVycG9sYXRlID0gZnVuY3Rpb24oc291cmNlLCB0YXJnZXQpIHtcbiAgICByZXR1cm4gZDNfZ2VvX2ludGVycG9sYXRlKHNvdXJjZVswXSAqIGQzX3JhZGlhbnMsIHNvdXJjZVsxXSAqIGQzX3JhZGlhbnMsIHRhcmdldFswXSAqIGQzX3JhZGlhbnMsIHRhcmdldFsxXSAqIGQzX3JhZGlhbnMpO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9faW50ZXJwb2xhdGUoeDAsIHkwLCB4MSwgeTEpIHtcbiAgICB2YXIgY3kwID0gTWF0aC5jb3MoeTApLCBzeTAgPSBNYXRoLnNpbih5MCksIGN5MSA9IE1hdGguY29zKHkxKSwgc3kxID0gTWF0aC5zaW4oeTEpLCBreDAgPSBjeTAgKiBNYXRoLmNvcyh4MCksIGt5MCA9IGN5MCAqIE1hdGguc2luKHgwKSwga3gxID0gY3kxICogTWF0aC5jb3MoeDEpLCBreTEgPSBjeTEgKiBNYXRoLnNpbih4MSksIGQgPSAyICogTWF0aC5hc2luKE1hdGguc3FydChkM19oYXZlcnNpbih5MSAtIHkwKSArIGN5MCAqIGN5MSAqIGQzX2hhdmVyc2luKHgxIC0geDApKSksIGsgPSAxIC8gTWF0aC5zaW4oZCk7XG4gICAgdmFyIGludGVycG9sYXRlID0gZCA/IGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBCID0gTWF0aC5zaW4odCAqPSBkKSAqIGssIEEgPSBNYXRoLnNpbihkIC0gdCkgKiBrLCB4ID0gQSAqIGt4MCArIEIgKiBreDEsIHkgPSBBICoga3kwICsgQiAqIGt5MSwgeiA9IEEgKiBzeTAgKyBCICogc3kxO1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih5LCB4KSAqIGQzX2RlZ3JlZXMsIE1hdGguYXRhbjIoeiwgTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpKSAqIGQzX2RlZ3JlZXMgXTtcbiAgICB9IDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gWyB4MCAqIGQzX2RlZ3JlZXMsIHkwICogZDNfZGVncmVlcyBdO1xuICAgIH07XG4gICAgaW50ZXJwb2xhdGUuZGlzdGFuY2UgPSBkO1xuICAgIHJldHVybiBpbnRlcnBvbGF0ZTtcbiAgfVxuICBkMy5nZW8ubGVuZ3RoID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgZDNfZ2VvX2xlbmd0aFN1bSA9IDA7XG4gICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGQzX2dlb19sZW5ndGgpO1xuICAgIHJldHVybiBkM19nZW9fbGVuZ3RoU3VtO1xuICB9O1xuICB2YXIgZDNfZ2VvX2xlbmd0aFN1bTtcbiAgdmFyIGQzX2dlb19sZW5ndGggPSB7XG4gICAgc3BoZXJlOiBkM19ub29wLFxuICAgIHBvaW50OiBkM19ub29wLFxuICAgIGxpbmVTdGFydDogZDNfZ2VvX2xlbmd0aExpbmVTdGFydCxcbiAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgIHBvbHlnb25TdGFydDogZDNfbm9vcCxcbiAgICBwb2x5Z29uRW5kOiBkM19ub29wXG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19sZW5ndGhMaW5lU3RhcnQoKSB7XG4gICAgdmFyIM67MCwgc2luz4YwLCBjb3PPhjA7XG4gICAgZDNfZ2VvX2xlbmd0aC5wb2ludCA9IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgzrswID0gzrsgKiBkM19yYWRpYW5zLCBzaW7PhjAgPSBNYXRoLnNpbijPhiAqPSBkM19yYWRpYW5zKSwgY29zz4YwID0gTWF0aC5jb3Moz4YpO1xuICAgICAgZDNfZ2VvX2xlbmd0aC5wb2ludCA9IG5leHRQb2ludDtcbiAgICB9O1xuICAgIGQzX2dlb19sZW5ndGgubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2xlbmd0aC5wb2ludCA9IGQzX2dlb19sZW5ndGgubGluZUVuZCA9IGQzX25vb3A7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQozrssIM+GKSB7XG4gICAgICB2YXIgc2luz4YgPSBNYXRoLnNpbijPhiAqPSBkM19yYWRpYW5zKSwgY29zz4YgPSBNYXRoLmNvcyjPhiksIHQgPSBhYnMoKM67ICo9IGQzX3JhZGlhbnMpIC0gzrswKSwgY29zzpTOuyA9IE1hdGguY29zKHQpO1xuICAgICAgZDNfZ2VvX2xlbmd0aFN1bSArPSBNYXRoLmF0YW4yKE1hdGguc3FydCgodCA9IGNvc8+GICogTWF0aC5zaW4odCkpICogdCArICh0ID0gY29zz4YwICogc2luz4YgLSBzaW7PhjAgKiBjb3PPhiAqIGNvc86UzrspICogdCksIHNpbs+GMCAqIHNpbs+GICsgY29zz4YwICogY29zz4YgKiBjb3POlM67KTtcbiAgICAgIM67MCA9IM67LCBzaW7PhjAgPSBzaW7PhiwgY29zz4YwID0gY29zz4Y7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19hemltdXRoYWwoc2NhbGUsIGFuZ2xlKSB7XG4gICAgZnVuY3Rpb24gYXppbXV0aGFsKM67LCDPhikge1xuICAgICAgdmFyIGNvc867ID0gTWF0aC5jb3MozrspLCBjb3PPhiA9IE1hdGguY29zKM+GKSwgayA9IHNjYWxlKGNvc867ICogY29zz4YpO1xuICAgICAgcmV0dXJuIFsgayAqIGNvc8+GICogTWF0aC5zaW4ozrspLCBrICogTWF0aC5zaW4oz4YpIF07XG4gICAgfVxuICAgIGF6aW11dGhhbC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgz4EgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSksIGMgPSBhbmdsZSjPgSksIHNpbmMgPSBNYXRoLnNpbihjKSwgY29zYyA9IE1hdGguY29zKGMpO1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih4ICogc2luYywgz4EgKiBjb3NjKSwgTWF0aC5hc2luKM+BICYmIHkgKiBzaW5jIC8gz4EpIF07XG4gICAgfTtcbiAgICByZXR1cm4gYXppbXV0aGFsO1xuICB9XG4gIHZhciBkM19nZW9fYXppbXV0aGFsRXF1YWxBcmVhID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgcmV0dXJuIE1hdGguc3FydCgyIC8gKDEgKyBjb3POu2Nvc8+GKSk7XG4gIH0sIGZ1bmN0aW9uKM+BKSB7XG4gICAgcmV0dXJuIDIgKiBNYXRoLmFzaW4oz4EgLyAyKTtcbiAgfSk7XG4gIChkMy5nZW8uYXppbXV0aGFsRXF1YWxBcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19hemltdXRoYWxFcXVhbEFyZWEpO1xuICB9KS5yYXcgPSBkM19nZW9fYXppbXV0aGFsRXF1YWxBcmVhO1xuICB2YXIgZDNfZ2VvX2F6aW11dGhhbEVxdWlkaXN0YW50ID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgdmFyIGMgPSBNYXRoLmFjb3MoY29zzrtjb3PPhik7XG4gICAgcmV0dXJuIGMgJiYgYyAvIE1hdGguc2luKGMpO1xuICB9LCBkM19pZGVudGl0eSk7XG4gIChkMy5nZW8uYXppbXV0aGFsRXF1aWRpc3RhbnQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2F6aW11dGhhbEVxdWlkaXN0YW50KTtcbiAgfSkucmF3ID0gZDNfZ2VvX2F6aW11dGhhbEVxdWlkaXN0YW50O1xuICBmdW5jdGlvbiBkM19nZW9fY29uaWNDb25mb3JtYWwoz4YwLCDPhjEpIHtcbiAgICB2YXIgY29zz4YwID0gTWF0aC5jb3Moz4YwKSwgdCA9IGZ1bmN0aW9uKM+GKSB7XG4gICAgICByZXR1cm4gTWF0aC50YW4oz4AgLyA0ICsgz4YgLyAyKTtcbiAgICB9LCBuID0gz4YwID09PSDPhjEgPyBNYXRoLnNpbijPhjApIDogTWF0aC5sb2coY29zz4YwIC8gTWF0aC5jb3Moz4YxKSkgLyBNYXRoLmxvZyh0KM+GMSkgLyB0KM+GMCkpLCBGID0gY29zz4YwICogTWF0aC5wb3codCjPhjApLCBuKSAvIG47XG4gICAgaWYgKCFuKSByZXR1cm4gZDNfZ2VvX21lcmNhdG9yO1xuICAgIGZ1bmN0aW9uIGZvcndhcmQozrssIM+GKSB7XG4gICAgICBpZiAoRiA+IDApIHtcbiAgICAgICAgaWYgKM+GIDwgLWhhbGbPgCArIM61KSDPhiA9IC1oYWxmz4AgKyDOtTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICjPhiA+IGhhbGbPgCAtIM61KSDPhiA9IGhhbGbPgCAtIM61O1xuICAgICAgfVxuICAgICAgdmFyIM+BID0gRiAvIE1hdGgucG93KHQoz4YpLCBuKTtcbiAgICAgIHJldHVybiBbIM+BICogTWF0aC5zaW4obiAqIM67KSwgRiAtIM+BICogTWF0aC5jb3MobiAqIM67KSBdO1xuICAgIH1cbiAgICBmb3J3YXJkLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciDPgTBfeSA9IEYgLSB5LCDPgSA9IGQzX3NnbihuKSAqIE1hdGguc3FydCh4ICogeCArIM+BMF95ICogz4EwX3kpO1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih4LCDPgTBfeSkgLyBuLCAyICogTWF0aC5hdGFuKE1hdGgucG93KEYgLyDPgSwgMSAvIG4pKSAtIGhhbGbPgCBdO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH1cbiAgKGQzLmdlby5jb25pY0NvbmZvcm1hbCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fY29uaWMoZDNfZ2VvX2NvbmljQ29uZm9ybWFsKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2NvbmljQ29uZm9ybWFsO1xuICBmdW5jdGlvbiBkM19nZW9fY29uaWNFcXVpZGlzdGFudCjPhjAsIM+GMSkge1xuICAgIHZhciBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCBuID0gz4YwID09PSDPhjEgPyBNYXRoLnNpbijPhjApIDogKGNvc8+GMCAtIE1hdGguY29zKM+GMSkpIC8gKM+GMSAtIM+GMCksIEcgPSBjb3PPhjAgLyBuICsgz4YwO1xuICAgIGlmIChhYnMobikgPCDOtSkgcmV0dXJuIGQzX2dlb19lcXVpcmVjdGFuZ3VsYXI7XG4gICAgZnVuY3Rpb24gZm9yd2FyZCjOuywgz4YpIHtcbiAgICAgIHZhciDPgSA9IEcgLSDPhjtcbiAgICAgIHJldHVybiBbIM+BICogTWF0aC5zaW4obiAqIM67KSwgRyAtIM+BICogTWF0aC5jb3MobiAqIM67KSBdO1xuICAgIH1cbiAgICBmb3J3YXJkLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciDPgTBfeSA9IEcgLSB5O1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih4LCDPgTBfeSkgLyBuLCBHIC0gZDNfc2duKG4pICogTWF0aC5zcXJ0KHggKiB4ICsgz4EwX3kgKiDPgTBfeSkgXTtcbiAgICB9O1xuICAgIHJldHVybiBmb3J3YXJkO1xuICB9XG4gIChkMy5nZW8uY29uaWNFcXVpZGlzdGFudCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fY29uaWMoZDNfZ2VvX2NvbmljRXF1aWRpc3RhbnQpO1xuICB9KS5yYXcgPSBkM19nZW9fY29uaWNFcXVpZGlzdGFudDtcbiAgdmFyIGQzX2dlb19nbm9tb25pYyA9IGQzX2dlb19hemltdXRoYWwoZnVuY3Rpb24oY29zzrtjb3PPhikge1xuICAgIHJldHVybiAxIC8gY29zzrtjb3PPhjtcbiAgfSwgTWF0aC5hdGFuKTtcbiAgKGQzLmdlby5nbm9tb25pYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fZ25vbW9uaWMpO1xuICB9KS5yYXcgPSBkM19nZW9fZ25vbW9uaWM7XG4gIGZ1bmN0aW9uIGQzX2dlb19tZXJjYXRvcijOuywgz4YpIHtcbiAgICByZXR1cm4gWyDOuywgTWF0aC5sb2coTWF0aC50YW4oz4AgLyA0ICsgz4YgLyAyKSkgXTtcbiAgfVxuICBkM19nZW9fbWVyY2F0b3IuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiBbIHgsIDIgKiBNYXRoLmF0YW4oTWF0aC5leHAoeSkpIC0gaGFsZs+AIF07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19tZXJjYXRvclByb2plY3Rpb24ocHJvamVjdCkge1xuICAgIHZhciBtID0gZDNfZ2VvX3Byb2plY3Rpb24ocHJvamVjdCksIHNjYWxlID0gbS5zY2FsZSwgdHJhbnNsYXRlID0gbS50cmFuc2xhdGUsIGNsaXBFeHRlbnQgPSBtLmNsaXBFeHRlbnQsIGNsaXBBdXRvO1xuICAgIG0uc2NhbGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2ID0gc2NhbGUuYXBwbHkobSwgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiB2ID09PSBtID8gY2xpcEF1dG8gPyBtLmNsaXBFeHRlbnQobnVsbCkgOiBtIDogdjtcbiAgICB9O1xuICAgIG0udHJhbnNsYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdiA9IHRyYW5zbGF0ZS5hcHBseShtLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIHYgPT09IG0gPyBjbGlwQXV0byA/IG0uY2xpcEV4dGVudChudWxsKSA6IG0gOiB2O1xuICAgIH07XG4gICAgbS5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgdmFyIHYgPSBjbGlwRXh0ZW50LmFwcGx5KG0sIGFyZ3VtZW50cyk7XG4gICAgICBpZiAodiA9PT0gbSkge1xuICAgICAgICBpZiAoY2xpcEF1dG8gPSBfID09IG51bGwpIHtcbiAgICAgICAgICB2YXIgayA9IM+AICogc2NhbGUoKSwgdCA9IHRyYW5zbGF0ZSgpO1xuICAgICAgICAgIGNsaXBFeHRlbnQoWyBbIHRbMF0gLSBrLCB0WzFdIC0gayBdLCBbIHRbMF0gKyBrLCB0WzFdICsgayBdIF0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGNsaXBBdXRvKSB7XG4gICAgICAgIHYgPSBudWxsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHY7XG4gICAgfTtcbiAgICByZXR1cm4gbS5jbGlwRXh0ZW50KG51bGwpO1xuICB9XG4gIChkMy5nZW8ubWVyY2F0b3IgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX21lcmNhdG9yUHJvamVjdGlvbihkM19nZW9fbWVyY2F0b3IpO1xuICB9KS5yYXcgPSBkM19nZW9fbWVyY2F0b3I7XG4gIHZhciBkM19nZW9fb3J0aG9ncmFwaGljID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gMTtcbiAgfSwgTWF0aC5hc2luKTtcbiAgKGQzLmdlby5vcnRob2dyYXBoaWMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX29ydGhvZ3JhcGhpYyk7XG4gIH0pLnJhdyA9IGQzX2dlb19vcnRob2dyYXBoaWM7XG4gIHZhciBkM19nZW9fc3RlcmVvZ3JhcGhpYyA9IGQzX2dlb19hemltdXRoYWwoZnVuY3Rpb24oY29zzrtjb3PPhikge1xuICAgIHJldHVybiAxIC8gKDEgKyBjb3POu2Nvc8+GKTtcbiAgfSwgZnVuY3Rpb24oz4EpIHtcbiAgICByZXR1cm4gMiAqIE1hdGguYXRhbijPgSk7XG4gIH0pO1xuICAoZDMuZ2VvLnN0ZXJlb2dyYXBoaWMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX3N0ZXJlb2dyYXBoaWMpO1xuICB9KS5yYXcgPSBkM19nZW9fc3RlcmVvZ3JhcGhpYztcbiAgZnVuY3Rpb24gZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvcijOuywgz4YpIHtcbiAgICByZXR1cm4gWyBNYXRoLmxvZyhNYXRoLnRhbijPgCAvIDQgKyDPhiAvIDIpKSwgLc67IF07XG4gIH1cbiAgZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvci5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsgLXksIDIgKiBNYXRoLmF0YW4oTWF0aC5leHAoeCkpIC0gaGFsZs+AIF07XG4gIH07XG4gIChkMy5nZW8udHJhbnN2ZXJzZU1lcmNhdG9yID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHByb2plY3Rpb24gPSBkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uKGQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3IpLCBjZW50ZXIgPSBwcm9qZWN0aW9uLmNlbnRlciwgcm90YXRlID0gcHJvamVjdGlvbi5yb3RhdGU7XG4gICAgcHJvamVjdGlvbi5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gXyA/IGNlbnRlcihbIC1fWzFdLCBfWzBdIF0pIDogKF8gPSBjZW50ZXIoKSwgWyBfWzFdLCAtX1swXSBdKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24ucm90YXRlID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIF8gPyByb3RhdGUoWyBfWzBdLCBfWzFdLCBfLmxlbmd0aCA+IDIgPyBfWzJdICsgOTAgOiA5MCBdKSA6IChfID0gcm90YXRlKCksIFxuICAgICAgWyBfWzBdLCBfWzFdLCBfWzJdIC0gOTAgXSk7XG4gICAgfTtcbiAgICByZXR1cm4gcm90YXRlKFsgMCwgMCwgOTAgXSk7XG4gIH0pLnJhdyA9IGQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3I7XG4gIGQzLmdlb20gPSB7fTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2ludFgoZCkge1xuICAgIHJldHVybiBkWzBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9pbnRZKGQpIHtcbiAgICByZXR1cm4gZFsxXTtcbiAgfVxuICBkMy5nZW9tLmh1bGwgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGh1bGwodmVydGljZXMpO1xuICAgIGZ1bmN0aW9uIGh1bGwoZGF0YSkge1xuICAgICAgaWYgKGRhdGEubGVuZ3RoIDwgMykgcmV0dXJuIFtdO1xuICAgICAgdmFyIGZ4ID0gZDNfZnVuY3Rvcih4KSwgZnkgPSBkM19mdW5jdG9yKHkpLCBpLCBuID0gZGF0YS5sZW5ndGgsIHBvaW50cyA9IFtdLCBmbGlwcGVkUG9pbnRzID0gW107XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKFsgK2Z4LmNhbGwodGhpcywgZGF0YVtpXSwgaSksICtmeS5jYWxsKHRoaXMsIGRhdGFbaV0sIGkpLCBpIF0pO1xuICAgICAgfVxuICAgICAgcG9pbnRzLnNvcnQoZDNfZ2VvbV9odWxsT3JkZXIpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykgZmxpcHBlZFBvaW50cy5wdXNoKFsgcG9pbnRzW2ldWzBdLCAtcG9pbnRzW2ldWzFdIF0pO1xuICAgICAgdmFyIHVwcGVyID0gZDNfZ2VvbV9odWxsVXBwZXIocG9pbnRzKSwgbG93ZXIgPSBkM19nZW9tX2h1bGxVcHBlcihmbGlwcGVkUG9pbnRzKTtcbiAgICAgIHZhciBza2lwTGVmdCA9IGxvd2VyWzBdID09PSB1cHBlclswXSwgc2tpcFJpZ2h0ID0gbG93ZXJbbG93ZXIubGVuZ3RoIC0gMV0gPT09IHVwcGVyW3VwcGVyLmxlbmd0aCAtIDFdLCBwb2x5Z29uID0gW107XG4gICAgICBmb3IgKGkgPSB1cHBlci5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgcG9seWdvbi5wdXNoKGRhdGFbcG9pbnRzW3VwcGVyW2ldXVsyXV0pO1xuICAgICAgZm9yIChpID0gK3NraXBMZWZ0OyBpIDwgbG93ZXIubGVuZ3RoIC0gc2tpcFJpZ2h0OyArK2kpIHBvbHlnb24ucHVzaChkYXRhW3BvaW50c1tsb3dlcltpXV1bMl1dKTtcbiAgICAgIHJldHVybiBwb2x5Z29uO1xuICAgIH1cbiAgICBodWxsLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gXywgaHVsbCkgOiB4O1xuICAgIH07XG4gICAgaHVsbC55ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IF8sIGh1bGwpIDogeTtcbiAgICB9O1xuICAgIHJldHVybiBodWxsO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX2h1bGxVcHBlcihwb2ludHMpIHtcbiAgICB2YXIgbiA9IHBvaW50cy5sZW5ndGgsIGh1bGwgPSBbIDAsIDEgXSwgaHMgPSAyO1xuICAgIGZvciAodmFyIGkgPSAyOyBpIDwgbjsgaSsrKSB7XG4gICAgICB3aGlsZSAoaHMgPiAxICYmIGQzX2Nyb3NzMmQocG9pbnRzW2h1bGxbaHMgLSAyXV0sIHBvaW50c1todWxsW2hzIC0gMV1dLCBwb2ludHNbaV0pIDw9IDApIC0taHM7XG4gICAgICBodWxsW2hzKytdID0gaTtcbiAgICB9XG4gICAgcmV0dXJuIGh1bGwuc2xpY2UoMCwgaHMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21faHVsbE9yZGVyKGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAtIGJbMF0gfHwgYVsxXSAtIGJbMV07XG4gIH1cbiAgZDMuZ2VvbS5wb2x5Z29uID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICBkM19zdWJjbGFzcyhjb29yZGluYXRlcywgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlKTtcbiAgICByZXR1cm4gY29vcmRpbmF0ZXM7XG4gIH07XG4gIHZhciBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUgPSBkMy5nZW9tLnBvbHlnb24ucHJvdG90eXBlID0gW107XG4gIGQzX2dlb21fcG9seWdvblByb3RvdHlwZS5hcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCBhLCBiID0gdGhpc1tuIC0gMV0sIGFyZWEgPSAwO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBhID0gYjtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYXJlYSArPSBhWzFdICogYlswXSAtIGFbMF0gKiBiWzFdO1xuICAgIH1cbiAgICByZXR1cm4gYXJlYSAqIC41O1xuICB9O1xuICBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUuY2VudHJvaWQgPSBmdW5jdGlvbihrKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCB4ID0gMCwgeSA9IDAsIGEsIGIgPSB0aGlzW24gLSAxXSwgYztcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIGsgPSAtMSAvICg2ICogdGhpcy5hcmVhKCkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBhID0gYjtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYyA9IGFbMF0gKiBiWzFdIC0gYlswXSAqIGFbMV07XG4gICAgICB4ICs9IChhWzBdICsgYlswXSkgKiBjO1xuICAgICAgeSArPSAoYVsxXSArIGJbMV0pICogYztcbiAgICB9XG4gICAgcmV0dXJuIFsgeCAqIGssIHkgKiBrIF07XG4gIH07XG4gIGQzX2dlb21fcG9seWdvblByb3RvdHlwZS5jbGlwID0gZnVuY3Rpb24oc3ViamVjdCkge1xuICAgIHZhciBpbnB1dCwgY2xvc2VkID0gZDNfZ2VvbV9wb2x5Z29uQ2xvc2VkKHN1YmplY3QpLCBpID0gLTEsIG4gPSB0aGlzLmxlbmd0aCAtIGQzX2dlb21fcG9seWdvbkNsb3NlZCh0aGlzKSwgaiwgbSwgYSA9IHRoaXNbbiAtIDFdLCBiLCBjLCBkO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpbnB1dCA9IHN1YmplY3Quc2xpY2UoKTtcbiAgICAgIHN1YmplY3QubGVuZ3RoID0gMDtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYyA9IGlucHV0WyhtID0gaW5wdXQubGVuZ3RoIC0gY2xvc2VkKSAtIDFdO1xuICAgICAgaiA9IC0xO1xuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgZCA9IGlucHV0W2pdO1xuICAgICAgICBpZiAoZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKGQsIGEsIGIpKSB7XG4gICAgICAgICAgaWYgKCFkM19nZW9tX3BvbHlnb25JbnNpZGUoYywgYSwgYikpIHtcbiAgICAgICAgICAgIHN1YmplY3QucHVzaChkM19nZW9tX3BvbHlnb25JbnRlcnNlY3QoYywgZCwgYSwgYikpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdWJqZWN0LnB1c2goZCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKGMsIGEsIGIpKSB7XG4gICAgICAgICAgc3ViamVjdC5wdXNoKGQzX2dlb21fcG9seWdvbkludGVyc2VjdChjLCBkLCBhLCBiKSk7XG4gICAgICAgIH1cbiAgICAgICAgYyA9IGQ7XG4gICAgICB9XG4gICAgICBpZiAoY2xvc2VkKSBzdWJqZWN0LnB1c2goc3ViamVjdFswXSk7XG4gICAgICBhID0gYjtcbiAgICB9XG4gICAgcmV0dXJuIHN1YmplY3Q7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9seWdvbkluc2lkZShwLCBhLCBiKSB7XG4gICAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAocFsxXSAtIGFbMV0pIDwgKGJbMV0gLSBhWzFdKSAqIChwWzBdIC0gYVswXSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0KGMsIGQsIGEsIGIpIHtcbiAgICB2YXIgeDEgPSBjWzBdLCB4MyA9IGFbMF0sIHgyMSA9IGRbMF0gLSB4MSwgeDQzID0gYlswXSAtIHgzLCB5MSA9IGNbMV0sIHkzID0gYVsxXSwgeTIxID0gZFsxXSAtIHkxLCB5NDMgPSBiWzFdIC0geTMsIHVhID0gKHg0MyAqICh5MSAtIHkzKSAtIHk0MyAqICh4MSAtIHgzKSkgLyAoeTQzICogeDIxIC0geDQzICogeTIxKTtcbiAgICByZXR1cm4gWyB4MSArIHVhICogeDIxLCB5MSArIHVhICogeTIxIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2x5Z29uQ2xvc2VkKGNvb3JkaW5hdGVzKSB7XG4gICAgdmFyIGEgPSBjb29yZGluYXRlc1swXSwgYiA9IGNvb3JkaW5hdGVzW2Nvb3JkaW5hdGVzLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiAhKGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdKTtcbiAgfVxuICB2YXIgZDNfZ2VvbV92b3Jvbm9pRWRnZXMsIGQzX2dlb21fdm9yb25vaUNlbGxzLCBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLCBkM19nZW9tX3Zvcm9ub2lCZWFjaFBvb2wgPSBbXSwgZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUsIGQzX2dlb21fdm9yb25vaUNpcmNsZXMsIGQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wgPSBbXTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQmVhY2goKSB7XG4gICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKHRoaXMpO1xuICAgIHRoaXMuZWRnZSA9IHRoaXMuc2l0ZSA9IHRoaXMuY2lyY2xlID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaChzaXRlKSB7XG4gICAgdmFyIGJlYWNoID0gZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sLnBvcCgpIHx8IG5ldyBkM19nZW9tX3Zvcm9ub2lCZWFjaCgpO1xuICAgIGJlYWNoLnNpdGUgPSBzaXRlO1xuICAgIHJldHVybiBiZWFjaDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChiZWFjaCkge1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShiZWFjaCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5yZW1vdmUoYmVhY2gpO1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoUG9vbC5wdXNoKGJlYWNoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUoYmVhY2gpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlbW92ZUJlYWNoKGJlYWNoKSB7XG4gICAgdmFyIGNpcmNsZSA9IGJlYWNoLmNpcmNsZSwgeCA9IGNpcmNsZS54LCB5ID0gY2lyY2xlLmN5LCB2ZXJ0ZXggPSB7XG4gICAgICB4OiB4LFxuICAgICAgeTogeVxuICAgIH0sIHByZXZpb3VzID0gYmVhY2guUCwgbmV4dCA9IGJlYWNoLk4sIGRpc2FwcGVhcmluZyA9IFsgYmVhY2ggXTtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChiZWFjaCk7XG4gICAgdmFyIGxBcmMgPSBwcmV2aW91cztcbiAgICB3aGlsZSAobEFyYy5jaXJjbGUgJiYgYWJzKHggLSBsQXJjLmNpcmNsZS54KSA8IM61ICYmIGFicyh5IC0gbEFyYy5jaXJjbGUuY3kpIDwgzrUpIHtcbiAgICAgIHByZXZpb3VzID0gbEFyYy5QO1xuICAgICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChsQXJjKTtcbiAgICAgIGxBcmMgPSBwcmV2aW91cztcbiAgICB9XG4gICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIHZhciByQXJjID0gbmV4dDtcbiAgICB3aGlsZSAockFyYy5jaXJjbGUgJiYgYWJzKHggLSByQXJjLmNpcmNsZS54KSA8IM61ICYmIGFicyh5IC0gckFyYy5jaXJjbGUuY3kpIDwgzrUpIHtcbiAgICAgIG5leHQgPSByQXJjLk47XG4gICAgICBkaXNhcHBlYXJpbmcucHVzaChyQXJjKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoKHJBcmMpO1xuICAgICAgckFyYyA9IG5leHQ7XG4gICAgfVxuICAgIGRpc2FwcGVhcmluZy5wdXNoKHJBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShyQXJjKTtcbiAgICB2YXIgbkFyY3MgPSBkaXNhcHBlYXJpbmcubGVuZ3RoLCBpQXJjO1xuICAgIGZvciAoaUFyYyA9IDE7IGlBcmMgPCBuQXJjczsgKytpQXJjKSB7XG4gICAgICByQXJjID0gZGlzYXBwZWFyaW5nW2lBcmNdO1xuICAgICAgbEFyYyA9IGRpc2FwcGVhcmluZ1tpQXJjIC0gMV07XG4gICAgICBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKHJBcmMuZWRnZSwgbEFyYy5zaXRlLCByQXJjLnNpdGUsIHZlcnRleCk7XG4gICAgfVxuICAgIGxBcmMgPSBkaXNhcHBlYXJpbmdbMF07XG4gICAgckFyYyA9IGRpc2FwcGVhcmluZ1tuQXJjcyAtIDFdO1xuICAgIHJBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobEFyYy5zaXRlLCByQXJjLnNpdGUsIG51bGwsIHZlcnRleCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShyQXJjKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lBZGRCZWFjaChzaXRlKSB7XG4gICAgdmFyIHggPSBzaXRlLngsIGRpcmVjdHJpeCA9IHNpdGUueSwgbEFyYywgckFyYywgZHhsLCBkeHIsIG5vZGUgPSBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLl87XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIGR4bCA9IGQzX2dlb21fdm9yb25vaUxlZnRCcmVha1BvaW50KG5vZGUsIGRpcmVjdHJpeCkgLSB4O1xuICAgICAgaWYgKGR4bCA+IM61KSBub2RlID0gbm9kZS5MOyBlbHNlIHtcbiAgICAgICAgZHhyID0geCAtIGQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludChub2RlLCBkaXJlY3RyaXgpO1xuICAgICAgICBpZiAoZHhyID4gzrUpIHtcbiAgICAgICAgICBpZiAoIW5vZGUuUikge1xuICAgICAgICAgICAgbEFyYyA9IG5vZGU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgbm9kZSA9IG5vZGUuUjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoZHhsID4gLc61KSB7XG4gICAgICAgICAgICBsQXJjID0gbm9kZS5QO1xuICAgICAgICAgICAgckFyYyA9IG5vZGU7XG4gICAgICAgICAgfSBlbHNlIGlmIChkeHIgPiAtzrUpIHtcbiAgICAgICAgICAgIGxBcmMgPSBub2RlO1xuICAgICAgICAgICAgckFyYyA9IG5vZGUuTjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbEFyYyA9IHJBcmMgPSBub2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgbmV3QXJjID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQmVhY2goc2l0ZSk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5pbnNlcnQobEFyYywgbmV3QXJjKTtcbiAgICBpZiAoIWxBcmMgJiYgIXJBcmMpIHJldHVybjtcbiAgICBpZiAobEFyYyA9PT0gckFyYykge1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgICAgckFyYyA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUJlYWNoKGxBcmMuc2l0ZSk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLmluc2VydChuZXdBcmMsIHJBcmMpO1xuICAgICAgbmV3QXJjLmVkZ2UgPSByQXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxBcmMuc2l0ZSwgbmV3QXJjLnNpdGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKHJBcmMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXJBcmMpIHtcbiAgICAgIG5ld0FyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShyQXJjKTtcbiAgICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsIGF4ID0gbFNpdGUueCwgYXkgPSBsU2l0ZS55LCBieCA9IHNpdGUueCAtIGF4LCBieSA9IHNpdGUueSAtIGF5LCByU2l0ZSA9IHJBcmMuc2l0ZSwgY3ggPSByU2l0ZS54IC0gYXgsIGN5ID0gclNpdGUueSAtIGF5LCBkID0gMiAqIChieCAqIGN5IC0gYnkgKiBjeCksIGhiID0gYnggKiBieCArIGJ5ICogYnksIGhjID0gY3ggKiBjeCArIGN5ICogY3ksIHZlcnRleCA9IHtcbiAgICAgIHg6IChjeSAqIGhiIC0gYnkgKiBoYykgLyBkICsgYXgsXG4gICAgICB5OiAoYnggKiBoYyAtIGN4ICogaGIpIC8gZCArIGF5XG4gICAgfTtcbiAgICBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKHJBcmMuZWRnZSwgbFNpdGUsIHJTaXRlLCB2ZXJ0ZXgpO1xuICAgIG5ld0FyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsU2l0ZSwgc2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgICByQXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKHNpdGUsIHJTaXRlLCBudWxsLCB2ZXJ0ZXgpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShsQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUockFyYyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pTGVmdEJyZWFrUG9pbnQoYXJjLCBkaXJlY3RyaXgpIHtcbiAgICB2YXIgc2l0ZSA9IGFyYy5zaXRlLCByZm9jeCA9IHNpdGUueCwgcmZvY3kgPSBzaXRlLnksIHBieTIgPSByZm9jeSAtIGRpcmVjdHJpeDtcbiAgICBpZiAoIXBieTIpIHJldHVybiByZm9jeDtcbiAgICB2YXIgbEFyYyA9IGFyYy5QO1xuICAgIGlmICghbEFyYykgcmV0dXJuIC1JbmZpbml0eTtcbiAgICBzaXRlID0gbEFyYy5zaXRlO1xuICAgIHZhciBsZm9jeCA9IHNpdGUueCwgbGZvY3kgPSBzaXRlLnksIHBsYnkyID0gbGZvY3kgLSBkaXJlY3RyaXg7XG4gICAgaWYgKCFwbGJ5MikgcmV0dXJuIGxmb2N4O1xuICAgIHZhciBobCA9IGxmb2N4IC0gcmZvY3gsIGFieTIgPSAxIC8gcGJ5MiAtIDEgLyBwbGJ5MiwgYiA9IGhsIC8gcGxieTI7XG4gICAgaWYgKGFieTIpIHJldHVybiAoLWIgKyBNYXRoLnNxcnQoYiAqIGIgLSAyICogYWJ5MiAqIChobCAqIGhsIC8gKC0yICogcGxieTIpIC0gbGZvY3kgKyBwbGJ5MiAvIDIgKyByZm9jeSAtIHBieTIgLyAyKSkpIC8gYWJ5MiArIHJmb2N4O1xuICAgIHJldHVybiAocmZvY3ggKyBsZm9jeCkgLyAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludChhcmMsIGRpcmVjdHJpeCkge1xuICAgIHZhciByQXJjID0gYXJjLk47XG4gICAgaWYgKHJBcmMpIHJldHVybiBkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludChyQXJjLCBkaXJlY3RyaXgpO1xuICAgIHZhciBzaXRlID0gYXJjLnNpdGU7XG4gICAgcmV0dXJuIHNpdGUueSA9PT0gZGlyZWN0cml4ID8gc2l0ZS54IDogSW5maW5pdHk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2VsbChzaXRlKSB7XG4gICAgdGhpcy5zaXRlID0gc2l0ZTtcbiAgICB0aGlzLmVkZ2VzID0gW107XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pQ2VsbC5wcm90b3R5cGUucHJlcGFyZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoYWxmRWRnZXMgPSB0aGlzLmVkZ2VzLCBpSGFsZkVkZ2UgPSBoYWxmRWRnZXMubGVuZ3RoLCBlZGdlO1xuICAgIHdoaWxlIChpSGFsZkVkZ2UtLSkge1xuICAgICAgZWRnZSA9IGhhbGZFZGdlc1tpSGFsZkVkZ2VdLmVkZ2U7XG4gICAgICBpZiAoIWVkZ2UuYiB8fCAhZWRnZS5hKSBoYWxmRWRnZXMuc3BsaWNlKGlIYWxmRWRnZSwgMSk7XG4gICAgfVxuICAgIGhhbGZFZGdlcy5zb3J0KGQzX2dlb21fdm9yb25vaUhhbGZFZGdlT3JkZXIpO1xuICAgIHJldHVybiBoYWxmRWRnZXMubGVuZ3RoO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDbG9zZUNlbGxzKGV4dGVudCkge1xuICAgIHZhciB4MCA9IGV4dGVudFswXVswXSwgeDEgPSBleHRlbnRbMV1bMF0sIHkwID0gZXh0ZW50WzBdWzFdLCB5MSA9IGV4dGVudFsxXVsxXSwgeDIsIHkyLCB4MywgeTMsIGNlbGxzID0gZDNfZ2VvbV92b3Jvbm9pQ2VsbHMsIGlDZWxsID0gY2VsbHMubGVuZ3RoLCBjZWxsLCBpSGFsZkVkZ2UsIGhhbGZFZGdlcywgbkhhbGZFZGdlcywgc3RhcnQsIGVuZDtcbiAgICB3aGlsZSAoaUNlbGwtLSkge1xuICAgICAgY2VsbCA9IGNlbGxzW2lDZWxsXTtcbiAgICAgIGlmICghY2VsbCB8fCAhY2VsbC5wcmVwYXJlKCkpIGNvbnRpbnVlO1xuICAgICAgaGFsZkVkZ2VzID0gY2VsbC5lZGdlcztcbiAgICAgIG5IYWxmRWRnZXMgPSBoYWxmRWRnZXMubGVuZ3RoO1xuICAgICAgaUhhbGZFZGdlID0gMDtcbiAgICAgIHdoaWxlIChpSGFsZkVkZ2UgPCBuSGFsZkVkZ2VzKSB7XG4gICAgICAgIGVuZCA9IGhhbGZFZGdlc1tpSGFsZkVkZ2VdLmVuZCgpLCB4MyA9IGVuZC54LCB5MyA9IGVuZC55O1xuICAgICAgICBzdGFydCA9IGhhbGZFZGdlc1srK2lIYWxmRWRnZSAlIG5IYWxmRWRnZXNdLnN0YXJ0KCksIHgyID0gc3RhcnQueCwgeTIgPSBzdGFydC55O1xuICAgICAgICBpZiAoYWJzKHgzIC0geDIpID4gzrUgfHwgYWJzKHkzIC0geTIpID4gzrUpIHtcbiAgICAgICAgICBoYWxmRWRnZXMuc3BsaWNlKGlIYWxmRWRnZSwgMCwgbmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGQzX2dlb21fdm9yb25vaUNyZWF0ZUJvcmRlckVkZ2UoY2VsbC5zaXRlLCBlbmQsIGFicyh4MyAtIHgwKSA8IM61ICYmIHkxIC0geTMgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IHgwLFxuICAgICAgICAgICAgeTogYWJzKHgyIC0geDApIDwgzrUgPyB5MiA6IHkxXG4gICAgICAgICAgfSA6IGFicyh5MyAtIHkxKSA8IM61ICYmIHgxIC0geDMgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IGFicyh5MiAtIHkxKSA8IM61ID8geDIgOiB4MSxcbiAgICAgICAgICAgIHk6IHkxXG4gICAgICAgICAgfSA6IGFicyh4MyAtIHgxKSA8IM61ICYmIHkzIC0geTAgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogYWJzKHgyIC0geDEpIDwgzrUgPyB5MiA6IHkwXG4gICAgICAgICAgfSA6IGFicyh5MyAtIHkwKSA8IM61ICYmIHgzIC0geDAgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IGFicyh5MiAtIHkwKSA8IM61ID8geDIgOiB4MCxcbiAgICAgICAgICAgIHk6IHkwXG4gICAgICAgICAgfSA6IG51bGwpLCBjZWxsLnNpdGUsIG51bGwpKTtcbiAgICAgICAgICArK25IYWxmRWRnZXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2VPcmRlcihhLCBiKSB7XG4gICAgcmV0dXJuIGIuYW5nbGUgLSBhLmFuZ2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNpcmNsZSgpIHtcbiAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUodGhpcyk7XG4gICAgdGhpcy54ID0gdGhpcy55ID0gdGhpcy5hcmMgPSB0aGlzLnNpdGUgPSB0aGlzLmN5ID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUoYXJjKSB7XG4gICAgdmFyIGxBcmMgPSBhcmMuUCwgckFyYyA9IGFyYy5OO1xuICAgIGlmICghbEFyYyB8fCAhckFyYykgcmV0dXJuO1xuICAgIHZhciBsU2l0ZSA9IGxBcmMuc2l0ZSwgY1NpdGUgPSBhcmMuc2l0ZSwgclNpdGUgPSByQXJjLnNpdGU7XG4gICAgaWYgKGxTaXRlID09PSByU2l0ZSkgcmV0dXJuO1xuICAgIHZhciBieCA9IGNTaXRlLngsIGJ5ID0gY1NpdGUueSwgYXggPSBsU2l0ZS54IC0gYngsIGF5ID0gbFNpdGUueSAtIGJ5LCBjeCA9IHJTaXRlLnggLSBieCwgY3kgPSByU2l0ZS55IC0gYnk7XG4gICAgdmFyIGQgPSAyICogKGF4ICogY3kgLSBheSAqIGN4KTtcbiAgICBpZiAoZCA+PSAtzrUyKSByZXR1cm47XG4gICAgdmFyIGhhID0gYXggKiBheCArIGF5ICogYXksIGhjID0gY3ggKiBjeCArIGN5ICogY3ksIHggPSAoY3kgKiBoYSAtIGF5ICogaGMpIC8gZCwgeSA9IChheCAqIGhjIC0gY3ggKiBoYSkgLyBkLCBjeSA9IHkgKyBieTtcbiAgICB2YXIgY2lyY2xlID0gZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbC5wb3AoKSB8fCBuZXcgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlKCk7XG4gICAgY2lyY2xlLmFyYyA9IGFyYztcbiAgICBjaXJjbGUuc2l0ZSA9IGNTaXRlO1xuICAgIGNpcmNsZS54ID0geCArIGJ4O1xuICAgIGNpcmNsZS55ID0gY3kgKyBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG4gICAgY2lyY2xlLmN5ID0gY3k7XG4gICAgYXJjLmNpcmNsZSA9IGNpcmNsZTtcbiAgICB2YXIgYmVmb3JlID0gbnVsbCwgbm9kZSA9IGQzX2dlb21fdm9yb25vaUNpcmNsZXMuXztcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgaWYgKGNpcmNsZS55IDwgbm9kZS55IHx8IGNpcmNsZS55ID09PSBub2RlLnkgJiYgY2lyY2xlLnggPD0gbm9kZS54KSB7XG4gICAgICAgIGlmIChub2RlLkwpIG5vZGUgPSBub2RlLkw7IGVsc2Uge1xuICAgICAgICAgIGJlZm9yZSA9IG5vZGUuUDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKG5vZGUuUikgbm9kZSA9IG5vZGUuUjsgZWxzZSB7XG4gICAgICAgICAgYmVmb3JlID0gbm9kZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzLmluc2VydChiZWZvcmUsIGNpcmNsZSk7XG4gICAgaWYgKCFiZWZvcmUpIGQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlID0gY2lyY2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShhcmMpIHtcbiAgICB2YXIgY2lyY2xlID0gYXJjLmNpcmNsZTtcbiAgICBpZiAoY2lyY2xlKSB7XG4gICAgICBpZiAoIWNpcmNsZS5QKSBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZSA9IGNpcmNsZS5OO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcy5yZW1vdmUoY2lyY2xlKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wucHVzaChjaXJjbGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKGNpcmNsZSk7XG4gICAgICBhcmMuY2lyY2xlID0gbnVsbDtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2xpcEVkZ2VzKGV4dGVudCkge1xuICAgIHZhciBlZGdlcyA9IGQzX2dlb21fdm9yb25vaUVkZ2VzLCBjbGlwID0gZDNfZ2VvbV9jbGlwTGluZShleHRlbnRbMF1bMF0sIGV4dGVudFswXVsxXSwgZXh0ZW50WzFdWzBdLCBleHRlbnRbMV1bMV0pLCBpID0gZWRnZXMubGVuZ3RoLCBlO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGUgPSBlZGdlc1tpXTtcbiAgICAgIGlmICghZDNfZ2VvbV92b3Jvbm9pQ29ubmVjdEVkZ2UoZSwgZXh0ZW50KSB8fCAhY2xpcChlKSB8fCBhYnMoZS5hLnggLSBlLmIueCkgPCDOtSAmJiBhYnMoZS5hLnkgLSBlLmIueSkgPCDOtSkge1xuICAgICAgICBlLmEgPSBlLmIgPSBudWxsO1xuICAgICAgICBlZGdlcy5zcGxpY2UoaSwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNvbm5lY3RFZGdlKGVkZ2UsIGV4dGVudCkge1xuICAgIHZhciB2YiA9IGVkZ2UuYjtcbiAgICBpZiAodmIpIHJldHVybiB0cnVlO1xuICAgIHZhciB2YSA9IGVkZ2UuYSwgeDAgPSBleHRlbnRbMF1bMF0sIHgxID0gZXh0ZW50WzFdWzBdLCB5MCA9IGV4dGVudFswXVsxXSwgeTEgPSBleHRlbnRbMV1bMV0sIGxTaXRlID0gZWRnZS5sLCByU2l0ZSA9IGVkZ2UuciwgbHggPSBsU2l0ZS54LCBseSA9IGxTaXRlLnksIHJ4ID0gclNpdGUueCwgcnkgPSByU2l0ZS55LCBmeCA9IChseCArIHJ4KSAvIDIsIGZ5ID0gKGx5ICsgcnkpIC8gMiwgZm0sIGZiO1xuICAgIGlmIChyeSA9PT0gbHkpIHtcbiAgICAgIGlmIChmeCA8IHgwIHx8IGZ4ID49IHgxKSByZXR1cm47XG4gICAgICBpZiAobHggPiByeCkge1xuICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MFxuICAgICAgICB9OyBlbHNlIGlmICh2YS55ID49IHkxKSByZXR1cm47XG4gICAgICAgIHZiID0ge1xuICAgICAgICAgIHg6IGZ4LFxuICAgICAgICAgIHk6IHkxXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MVxuICAgICAgICB9OyBlbHNlIGlmICh2YS55IDwgeTApIHJldHVybjtcbiAgICAgICAgdmIgPSB7XG4gICAgICAgICAgeDogZngsXG4gICAgICAgICAgeTogeTBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm0gPSAobHggLSByeCkgLyAocnkgLSBseSk7XG4gICAgICBmYiA9IGZ5IC0gZm0gKiBmeDtcbiAgICAgIGlmIChmbSA8IC0xIHx8IGZtID4gMSkge1xuICAgICAgICBpZiAobHggPiByeCkge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogKHkwIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MFxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPj0geTEpIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6ICh5MSAtIGZiKSAvIGZtLFxuICAgICAgICAgICAgeTogeTFcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogKHkxIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MVxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPCB5MCkgcmV0dXJuO1xuICAgICAgICAgIHZiID0ge1xuICAgICAgICAgICAgeDogKHkwIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChseSA8IHJ5KSB7XG4gICAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgICB4OiB4MCxcbiAgICAgICAgICAgIHk6IGZtICogeDAgKyBmYlxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnggPj0geDEpIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogZm0gKiB4MSArIGZiXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogZm0gKiB4MSArIGZiXG4gICAgICAgICAgfTsgZWxzZSBpZiAodmEueCA8IHgwKSByZXR1cm47XG4gICAgICAgICAgdmIgPSB7XG4gICAgICAgICAgICB4OiB4MCxcbiAgICAgICAgICAgIHk6IGZtICogeDAgKyBmYlxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZWRnZS5hID0gdmE7XG4gICAgZWRnZS5iID0gdmI7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pRWRnZShsU2l0ZSwgclNpdGUpIHtcbiAgICB0aGlzLmwgPSBsU2l0ZTtcbiAgICB0aGlzLnIgPSByU2l0ZTtcbiAgICB0aGlzLmEgPSB0aGlzLmIgPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobFNpdGUsIHJTaXRlLCB2YSwgdmIpIHtcbiAgICB2YXIgZWRnZSA9IG5ldyBkM19nZW9tX3Zvcm9ub2lFZGdlKGxTaXRlLCByU2l0ZSk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRWRnZXMucHVzaChlZGdlKTtcbiAgICBpZiAodmEpIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQoZWRnZSwgbFNpdGUsIHJTaXRlLCB2YSk7XG4gICAgaWYgKHZiKSBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKGVkZ2UsIHJTaXRlLCBsU2l0ZSwgdmIpO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzW2xTaXRlLmldLmVkZ2VzLnB1c2gobmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGVkZ2UsIGxTaXRlLCByU2l0ZSkpO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzW3JTaXRlLmldLmVkZ2VzLnB1c2gobmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGVkZ2UsIHJTaXRlLCBsU2l0ZSkpO1xuICAgIHJldHVybiBlZGdlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNyZWF0ZUJvcmRlckVkZ2UobFNpdGUsIHZhLCB2Yikge1xuICAgIHZhciBlZGdlID0gbmV3IGQzX2dlb21fdm9yb25vaUVkZ2UobFNpdGUsIG51bGwpO1xuICAgIGVkZ2UuYSA9IHZhO1xuICAgIGVkZ2UuYiA9IHZiO1xuICAgIGQzX2dlb21fdm9yb25vaUVkZ2VzLnB1c2goZWRnZSk7XG4gICAgcmV0dXJuIGVkZ2U7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChlZGdlLCBsU2l0ZSwgclNpdGUsIHZlcnRleCkge1xuICAgIGlmICghZWRnZS5hICYmICFlZGdlLmIpIHtcbiAgICAgIGVkZ2UuYSA9IHZlcnRleDtcbiAgICAgIGVkZ2UubCA9IGxTaXRlO1xuICAgICAgZWRnZS5yID0gclNpdGU7XG4gICAgfSBlbHNlIGlmIChlZGdlLmwgPT09IHJTaXRlKSB7XG4gICAgICBlZGdlLmIgPSB2ZXJ0ZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVkZ2UuYSA9IHZlcnRleDtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UoZWRnZSwgbFNpdGUsIHJTaXRlKSB7XG4gICAgdmFyIHZhID0gZWRnZS5hLCB2YiA9IGVkZ2UuYjtcbiAgICB0aGlzLmVkZ2UgPSBlZGdlO1xuICAgIHRoaXMuc2l0ZSA9IGxTaXRlO1xuICAgIHRoaXMuYW5nbGUgPSByU2l0ZSA/IE1hdGguYXRhbjIoclNpdGUueSAtIGxTaXRlLnksIHJTaXRlLnggLSBsU2l0ZS54KSA6IGVkZ2UubCA9PT0gbFNpdGUgPyBNYXRoLmF0YW4yKHZiLnggLSB2YS54LCB2YS55IC0gdmIueSkgOiBNYXRoLmF0YW4yKHZhLnggLSB2Yi54LCB2Yi55IC0gdmEueSk7XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UucHJvdG90eXBlID0ge1xuICAgIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVkZ2UubCA9PT0gdGhpcy5zaXRlID8gdGhpcy5lZGdlLmEgOiB0aGlzLmVkZ2UuYjtcbiAgICB9LFxuICAgIGVuZDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5lZGdlLmwgPT09IHRoaXMuc2l0ZSA/IHRoaXMuZWRnZS5iIDogdGhpcy5lZGdlLmE7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUoKSB7XG4gICAgdGhpcy5fID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUobm9kZSkge1xuICAgIG5vZGUuVSA9IG5vZGUuQyA9IG5vZGUuTCA9IG5vZGUuUiA9IG5vZGUuUCA9IG5vZGUuTiA9IG51bGw7XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlLnByb3RvdHlwZSA9IHtcbiAgICBpbnNlcnQ6IGZ1bmN0aW9uKGFmdGVyLCBub2RlKSB7XG4gICAgICB2YXIgcGFyZW50LCBncmFuZHBhLCB1bmNsZTtcbiAgICAgIGlmIChhZnRlcikge1xuICAgICAgICBub2RlLlAgPSBhZnRlcjtcbiAgICAgICAgbm9kZS5OID0gYWZ0ZXIuTjtcbiAgICAgICAgaWYgKGFmdGVyLk4pIGFmdGVyLk4uUCA9IG5vZGU7XG4gICAgICAgIGFmdGVyLk4gPSBub2RlO1xuICAgICAgICBpZiAoYWZ0ZXIuUikge1xuICAgICAgICAgIGFmdGVyID0gYWZ0ZXIuUjtcbiAgICAgICAgICB3aGlsZSAoYWZ0ZXIuTCkgYWZ0ZXIgPSBhZnRlci5MO1xuICAgICAgICAgIGFmdGVyLkwgPSBub2RlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFmdGVyLlIgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl8pIHtcbiAgICAgICAgYWZ0ZXIgPSBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0KHRoaXMuXyk7XG4gICAgICAgIG5vZGUuUCA9IG51bGw7XG4gICAgICAgIG5vZGUuTiA9IGFmdGVyO1xuICAgICAgICBhZnRlci5QID0gYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZS5QID0gbm9kZS5OID0gbnVsbDtcbiAgICAgICAgdGhpcy5fID0gbm9kZTtcbiAgICAgICAgcGFyZW50ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIG5vZGUuTCA9IG5vZGUuUiA9IG51bGw7XG4gICAgICBub2RlLlUgPSBwYXJlbnQ7XG4gICAgICBub2RlLkMgPSB0cnVlO1xuICAgICAgYWZ0ZXIgPSBub2RlO1xuICAgICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQuQykge1xuICAgICAgICBncmFuZHBhID0gcGFyZW50LlU7XG4gICAgICAgIGlmIChwYXJlbnQgPT09IGdyYW5kcGEuTCkge1xuICAgICAgICAgIHVuY2xlID0gZ3JhbmRwYS5SO1xuICAgICAgICAgIGlmICh1bmNsZSAmJiB1bmNsZS5DKSB7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHVuY2xlLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBhZnRlciA9IGdyYW5kcGE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LlIpIHtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIGdyYW5kcGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB1bmNsZSA9IGdyYW5kcGEuTDtcbiAgICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgICAgcGFyZW50LkMgPSB1bmNsZS5DID0gZmFsc2U7XG4gICAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoYWZ0ZXIgPT09IHBhcmVudC5MKSB7XG4gICAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgICAgYWZ0ZXIgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgIHBhcmVudCA9IGFmdGVyLlU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnQuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgIH1cbiAgICAgIHRoaXMuXy5DID0gZmFsc2U7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIGlmIChub2RlLk4pIG5vZGUuTi5QID0gbm9kZS5QO1xuICAgICAgaWYgKG5vZGUuUCkgbm9kZS5QLk4gPSBub2RlLk47XG4gICAgICBub2RlLk4gPSBub2RlLlAgPSBudWxsO1xuICAgICAgdmFyIHBhcmVudCA9IG5vZGUuVSwgc2libGluZywgbGVmdCA9IG5vZGUuTCwgcmlnaHQgPSBub2RlLlIsIG5leHQsIHJlZDtcbiAgICAgIGlmICghbGVmdCkgbmV4dCA9IHJpZ2h0OyBlbHNlIGlmICghcmlnaHQpIG5leHQgPSBsZWZ0OyBlbHNlIG5leHQgPSBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0KHJpZ2h0KTtcbiAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgaWYgKHBhcmVudC5MID09PSBub2RlKSBwYXJlbnQuTCA9IG5leHQ7IGVsc2UgcGFyZW50LlIgPSBuZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fID0gbmV4dDtcbiAgICAgIH1cbiAgICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XG4gICAgICAgIHJlZCA9IG5leHQuQztcbiAgICAgICAgbmV4dC5DID0gbm9kZS5DO1xuICAgICAgICBuZXh0LkwgPSBsZWZ0O1xuICAgICAgICBsZWZ0LlUgPSBuZXh0O1xuICAgICAgICBpZiAobmV4dCAhPT0gcmlnaHQpIHtcbiAgICAgICAgICBwYXJlbnQgPSBuZXh0LlU7XG4gICAgICAgICAgbmV4dC5VID0gbm9kZS5VO1xuICAgICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICAgICAgcGFyZW50LkwgPSBub2RlO1xuICAgICAgICAgIG5leHQuUiA9IHJpZ2h0O1xuICAgICAgICAgIHJpZ2h0LlUgPSBuZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5leHQuVSA9IHBhcmVudDtcbiAgICAgICAgICBwYXJlbnQgPSBuZXh0O1xuICAgICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlZCA9IG5vZGUuQztcbiAgICAgICAgbm9kZSA9IG5leHQ7XG4gICAgICB9XG4gICAgICBpZiAobm9kZSkgbm9kZS5VID0gcGFyZW50O1xuICAgICAgaWYgKHJlZCkgcmV0dXJuO1xuICAgICAgaWYgKG5vZGUgJiYgbm9kZS5DKSB7XG4gICAgICAgIG5vZGUuQyA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBkbyB7XG4gICAgICAgIGlmIChub2RlID09PSB0aGlzLl8pIGJyZWFrO1xuICAgICAgICBpZiAobm9kZSA9PT0gcGFyZW50LkwpIHtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgICAgc2libGluZy5DID0gZmFsc2U7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNpYmxpbmcuTCAmJiBzaWJsaW5nLkwuQyB8fCBzaWJsaW5nLlIgJiYgc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgIGlmICghc2libGluZy5SIHx8ICFzaWJsaW5nLlIuQykge1xuICAgICAgICAgICAgICBzaWJsaW5nLkwuQyA9IGZhbHNlO1xuICAgICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICAgIHBhcmVudC5DID0gc2libGluZy5SLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgbm9kZSA9IHRoaXMuXztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgICAgc2libGluZy5DID0gZmFsc2U7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaWJsaW5nLkwgJiYgc2libGluZy5MLkMgfHwgc2libGluZy5SICYmIHNpYmxpbmcuUi5DKSB7XG4gICAgICAgICAgICBpZiAoIXNpYmxpbmcuTCB8fCAhc2libGluZy5MLkMpIHtcbiAgICAgICAgICAgICAgc2libGluZy5SLkMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICAgIHBhcmVudC5DID0gc2libGluZy5MLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LlU7XG4gICAgICB9IHdoaWxlICghbm9kZS5DKTtcbiAgICAgIGlmIChub2RlKSBub2RlLkMgPSBmYWxzZTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0cmVlLCBub2RlKSB7XG4gICAgdmFyIHAgPSBub2RlLCBxID0gbm9kZS5SLCBwYXJlbnQgPSBwLlU7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgaWYgKHBhcmVudC5MID09PSBwKSBwYXJlbnQuTCA9IHE7IGVsc2UgcGFyZW50LlIgPSBxO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmVlLl8gPSBxO1xuICAgIH1cbiAgICBxLlUgPSBwYXJlbnQ7XG4gICAgcC5VID0gcTtcbiAgICBwLlIgPSBxLkw7XG4gICAgaWYgKHAuUikgcC5SLlUgPSBwO1xuICAgIHEuTCA9IHA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0cmVlLCBub2RlKSB7XG4gICAgdmFyIHAgPSBub2RlLCBxID0gbm9kZS5MLCBwYXJlbnQgPSBwLlU7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgaWYgKHBhcmVudC5MID09PSBwKSBwYXJlbnQuTCA9IHE7IGVsc2UgcGFyZW50LlIgPSBxO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmVlLl8gPSBxO1xuICAgIH1cbiAgICBxLlUgPSBwYXJlbnQ7XG4gICAgcC5VID0gcTtcbiAgICBwLkwgPSBxLlI7XG4gICAgaWYgKHAuTCkgcC5MLlUgPSBwO1xuICAgIHEuUiA9IHA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdChub2RlKSB7XG4gICAgd2hpbGUgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2koc2l0ZXMsIGJib3gpIHtcbiAgICB2YXIgc2l0ZSA9IHNpdGVzLnNvcnQoZDNfZ2VvbV92b3Jvbm9pVmVydGV4T3JkZXIpLnBvcCgpLCB4MCwgeTAsIGNpcmNsZTtcbiAgICBkM19nZW9tX3Zvcm9ub2lFZGdlcyA9IFtdO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzID0gbmV3IEFycmF5KHNpdGVzLmxlbmd0aCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcyA9IG5ldyBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzID0gbmV3IGQzX2dlb21fdm9yb25vaVJlZEJsYWNrVHJlZSgpO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBjaXJjbGUgPSBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZTtcbiAgICAgIGlmIChzaXRlICYmICghY2lyY2xlIHx8IHNpdGUueSA8IGNpcmNsZS55IHx8IHNpdGUueSA9PT0gY2lyY2xlLnkgJiYgc2l0ZS54IDwgY2lyY2xlLngpKSB7XG4gICAgICAgIGlmIChzaXRlLnggIT09IHgwIHx8IHNpdGUueSAhPT0geTApIHtcbiAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lDZWxsc1tzaXRlLmldID0gbmV3IGQzX2dlb21fdm9yb25vaUNlbGwoc2l0ZSk7XG4gICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2goc2l0ZSk7XG4gICAgICAgICAgeDAgPSBzaXRlLngsIHkwID0gc2l0ZS55O1xuICAgICAgICB9XG4gICAgICAgIHNpdGUgPSBzaXRlcy5wb3AoKTtcbiAgICAgIH0gZWxzZSBpZiAoY2lyY2xlKSB7XG4gICAgICAgIGQzX2dlb21fdm9yb25vaVJlbW92ZUJlYWNoKGNpcmNsZS5hcmMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChiYm94KSBkM19nZW9tX3Zvcm9ub2lDbGlwRWRnZXMoYmJveCksIGQzX2dlb21fdm9yb25vaUNsb3NlQ2VsbHMoYmJveCk7XG4gICAgdmFyIGRpYWdyYW0gPSB7XG4gICAgICBjZWxsczogZDNfZ2VvbV92b3Jvbm9pQ2VsbHMsXG4gICAgICBlZGdlczogZDNfZ2VvbV92b3Jvbm9pRWRnZXNcbiAgICB9O1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMgPSBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzID0gZDNfZ2VvbV92b3Jvbm9pRWRnZXMgPSBkM19nZW9tX3Zvcm9ub2lDZWxscyA9IG51bGw7XG4gICAgcmV0dXJuIGRpYWdyYW07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pVmVydGV4T3JkZXIoYSwgYikge1xuICAgIHJldHVybiBiLnkgLSBhLnkgfHwgYi54IC0gYS54O1xuICB9XG4gIGQzLmdlb20udm9yb25vaSA9IGZ1bmN0aW9uKHBvaW50cykge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WSwgZnggPSB4LCBmeSA9IHksIGNsaXBFeHRlbnQgPSBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50O1xuICAgIGlmIChwb2ludHMpIHJldHVybiB2b3Jvbm9pKHBvaW50cyk7XG4gICAgZnVuY3Rpb24gdm9yb25vaShkYXRhKSB7XG4gICAgICB2YXIgcG9seWdvbnMgPSBuZXcgQXJyYXkoZGF0YS5sZW5ndGgpLCB4MCA9IGNsaXBFeHRlbnRbMF1bMF0sIHkwID0gY2xpcEV4dGVudFswXVsxXSwgeDEgPSBjbGlwRXh0ZW50WzFdWzBdLCB5MSA9IGNsaXBFeHRlbnRbMV1bMV07XG4gICAgICBkM19nZW9tX3Zvcm9ub2koc2l0ZXMoZGF0YSksIGNsaXBFeHRlbnQpLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oY2VsbCwgaSkge1xuICAgICAgICB2YXIgZWRnZXMgPSBjZWxsLmVkZ2VzLCBzaXRlID0gY2VsbC5zaXRlLCBwb2x5Z29uID0gcG9seWdvbnNbaV0gPSBlZGdlcy5sZW5ndGggPyBlZGdlcy5tYXAoZnVuY3Rpb24oZSkge1xuICAgICAgICAgIHZhciBzID0gZS5zdGFydCgpO1xuICAgICAgICAgIHJldHVybiBbIHMueCwgcy55IF07XG4gICAgICAgIH0pIDogc2l0ZS54ID49IHgwICYmIHNpdGUueCA8PSB4MSAmJiBzaXRlLnkgPj0geTAgJiYgc2l0ZS55IDw9IHkxID8gWyBbIHgwLCB5MSBdLCBbIHgxLCB5MSBdLCBbIHgxLCB5MCBdLCBbIHgwLCB5MCBdIF0gOiBbXTtcbiAgICAgICAgcG9seWdvbi5wb2ludCA9IGRhdGFbaV07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBwb2x5Z29ucztcbiAgICB9XG4gICAgZnVuY3Rpb24gc2l0ZXMoZGF0YSkge1xuICAgICAgcmV0dXJuIGRhdGEubWFwKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiBNYXRoLnJvdW5kKGZ4KGQsIGkpIC8gzrUpICogzrUsXG4gICAgICAgICAgeTogTWF0aC5yb3VuZChmeShkLCBpKSAvIM61KSAqIM61LFxuICAgICAgICAgIGk6IGlcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB2b3Jvbm9pLmxpbmtzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgcmV0dXJuIGQzX2dlb21fdm9yb25vaShzaXRlcyhkYXRhKSkuZWRnZXMuZmlsdGVyKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgICAgcmV0dXJuIGVkZ2UubCAmJiBlZGdlLnI7XG4gICAgICB9KS5tYXAoZnVuY3Rpb24oZWRnZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHNvdXJjZTogZGF0YVtlZGdlLmwuaV0sXG4gICAgICAgICAgdGFyZ2V0OiBkYXRhW2VkZ2Uuci5pXVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnRyaWFuZ2xlcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciB0cmlhbmdsZXMgPSBbXTtcbiAgICAgIGQzX2dlb21fdm9yb25vaShzaXRlcyhkYXRhKSkuY2VsbHMuZm9yRWFjaChmdW5jdGlvbihjZWxsLCBpKSB7XG4gICAgICAgIHZhciBzaXRlID0gY2VsbC5zaXRlLCBlZGdlcyA9IGNlbGwuZWRnZXMuc29ydChkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyKSwgaiA9IC0xLCBtID0gZWRnZXMubGVuZ3RoLCBlMCwgczAsIGUxID0gZWRnZXNbbSAtIDFdLmVkZ2UsIHMxID0gZTEubCA9PT0gc2l0ZSA/IGUxLnIgOiBlMS5sO1xuICAgICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICAgIGUwID0gZTE7XG4gICAgICAgICAgczAgPSBzMTtcbiAgICAgICAgICBlMSA9IGVkZ2VzW2pdLmVkZ2U7XG4gICAgICAgICAgczEgPSBlMS5sID09PSBzaXRlID8gZTEuciA6IGUxLmw7XG4gICAgICAgICAgaWYgKGkgPCBzMC5pICYmIGkgPCBzMS5pICYmIGQzX2dlb21fdm9yb25vaVRyaWFuZ2xlQXJlYShzaXRlLCBzMCwgczEpIDwgMCkge1xuICAgICAgICAgICAgdHJpYW5nbGVzLnB1c2goWyBkYXRhW2ldLCBkYXRhW3MwLmldLCBkYXRhW3MxLmldIF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdHJpYW5nbGVzO1xuICAgIH07XG4gICAgdm9yb25vaS54ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZnggPSBkM19mdW5jdG9yKHggPSBfKSwgdm9yb25vaSkgOiB4O1xuICAgIH07XG4gICAgdm9yb25vaS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZnkgPSBkM19mdW5jdG9yKHkgPSBfKSwgdm9yb25vaSkgOiB5O1xuICAgIH07XG4gICAgdm9yb25vaS5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xpcEV4dGVudCA9PT0gZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCA/IG51bGwgOiBjbGlwRXh0ZW50O1xuICAgICAgY2xpcEV4dGVudCA9IF8gPT0gbnVsbCA/IGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQgOiBfO1xuICAgICAgcmV0dXJuIHZvcm9ub2k7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwRXh0ZW50ID09PSBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50ID8gbnVsbCA6IGNsaXBFeHRlbnQgJiYgY2xpcEV4dGVudFsxXTtcbiAgICAgIHJldHVybiB2b3Jvbm9pLmNsaXBFeHRlbnQoXyAmJiBbIFsgMCwgMCBdLCBfIF0pO1xuICAgIH07XG4gICAgcmV0dXJuIHZvcm9ub2k7XG4gIH07XG4gIHZhciBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50ID0gWyBbIC0xZTYsIC0xZTYgXSwgWyAxZTYsIDFlNiBdIF07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVRyaWFuZ2xlQXJlYShhLCBiLCBjKSB7XG4gICAgcmV0dXJuIChhLnggLSBjLngpICogKGIueSAtIGEueSkgLSAoYS54IC0gYi54KSAqIChjLnkgLSBhLnkpO1xuICB9XG4gIGQzLmdlb20uZGVsYXVuYXkgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgIHJldHVybiBkMy5nZW9tLnZvcm9ub2koKS50cmlhbmdsZXModmVydGljZXMpO1xuICB9O1xuICBkMy5nZW9tLnF1YWR0cmVlID0gZnVuY3Rpb24ocG9pbnRzLCB4MSwgeTEsIHgyLCB5Mikge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WSwgY29tcGF0O1xuICAgIGlmIChjb21wYXQgPSBhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICB4ID0gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFg7XG4gICAgICB5ID0gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFk7XG4gICAgICBpZiAoY29tcGF0ID09PSAzKSB7XG4gICAgICAgIHkyID0geTE7XG4gICAgICAgIHgyID0geDE7XG4gICAgICAgIHkxID0geDEgPSAwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHF1YWR0cmVlKHBvaW50cyk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHF1YWR0cmVlKGRhdGEpIHtcbiAgICAgIHZhciBkLCBmeCA9IGQzX2Z1bmN0b3IoeCksIGZ5ID0gZDNfZnVuY3Rvcih5KSwgeHMsIHlzLCBpLCBuLCB4MV8sIHkxXywgeDJfLCB5Ml87XG4gICAgICBpZiAoeDEgIT0gbnVsbCkge1xuICAgICAgICB4MV8gPSB4MSwgeTFfID0geTEsIHgyXyA9IHgyLCB5Ml8gPSB5MjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHgyXyA9IHkyXyA9IC0oeDFfID0geTFfID0gSW5maW5pdHkpO1xuICAgICAgICB4cyA9IFtdLCB5cyA9IFtdO1xuICAgICAgICBuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGlmIChjb21wYXQpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBkID0gZGF0YVtpXTtcbiAgICAgICAgICBpZiAoZC54IDwgeDFfKSB4MV8gPSBkLng7XG4gICAgICAgICAgaWYgKGQueSA8IHkxXykgeTFfID0gZC55O1xuICAgICAgICAgIGlmIChkLnggPiB4Ml8pIHgyXyA9IGQueDtcbiAgICAgICAgICBpZiAoZC55ID4geTJfKSB5Ml8gPSBkLnk7XG4gICAgICAgICAgeHMucHVzaChkLngpO1xuICAgICAgICAgIHlzLnB1c2goZC55KTtcbiAgICAgICAgfSBlbHNlIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICB2YXIgeF8gPSArZngoZCA9IGRhdGFbaV0sIGkpLCB5XyA9ICtmeShkLCBpKTtcbiAgICAgICAgICBpZiAoeF8gPCB4MV8pIHgxXyA9IHhfO1xuICAgICAgICAgIGlmICh5XyA8IHkxXykgeTFfID0geV87XG4gICAgICAgICAgaWYgKHhfID4geDJfKSB4Ml8gPSB4XztcbiAgICAgICAgICBpZiAoeV8gPiB5Ml8pIHkyXyA9IHlfO1xuICAgICAgICAgIHhzLnB1c2goeF8pO1xuICAgICAgICAgIHlzLnB1c2goeV8pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgZHggPSB4Ml8gLSB4MV8sIGR5ID0geTJfIC0geTFfO1xuICAgICAgaWYgKGR4ID4gZHkpIHkyXyA9IHkxXyArIGR4OyBlbHNlIHgyXyA9IHgxXyArIGR5O1xuICAgICAgZnVuY3Rpb24gaW5zZXJ0KG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICAgIGlmIChpc05hTih4KSB8fCBpc05hTih5KSkgcmV0dXJuO1xuICAgICAgICBpZiAobi5sZWFmKSB7XG4gICAgICAgICAgdmFyIG54ID0gbi54LCBueSA9IG4ueTtcbiAgICAgICAgICBpZiAobnggIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKGFicyhueCAtIHgpICsgYWJzKG55IC0geSkgPCAuMDEpIHtcbiAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFyIG5Qb2ludCA9IG4ucG9pbnQ7XG4gICAgICAgICAgICAgIG4ueCA9IG4ueSA9IG4ucG9pbnQgPSBudWxsO1xuICAgICAgICAgICAgICBpbnNlcnRDaGlsZChuLCBuUG9pbnQsIG54LCBueSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICAgICAgICBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG4ueCA9IHgsIG4ueSA9IHksIG4ucG9pbnQgPSBkO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGluc2VydENoaWxkKG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICAgIHZhciB4bSA9ICh4MSArIHgyKSAqIC41LCB5bSA9ICh5MSArIHkyKSAqIC41LCByaWdodCA9IHggPj0geG0sIGJlbG93ID0geSA+PSB5bSwgaSA9IGJlbG93IDw8IDEgfCByaWdodDtcbiAgICAgICAgbi5sZWFmID0gZmFsc2U7XG4gICAgICAgIG4gPSBuLm5vZGVzW2ldIHx8IChuLm5vZGVzW2ldID0gZDNfZ2VvbV9xdWFkdHJlZU5vZGUoKSk7XG4gICAgICAgIGlmIChyaWdodCkgeDEgPSB4bTsgZWxzZSB4MiA9IHhtO1xuICAgICAgICBpZiAoYmVsb3cpIHkxID0geW07IGVsc2UgeTIgPSB5bTtcbiAgICAgICAgaW5zZXJ0KG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKTtcbiAgICAgIH1cbiAgICAgIHZhciByb290ID0gZDNfZ2VvbV9xdWFkdHJlZU5vZGUoKTtcbiAgICAgIHJvb3QuYWRkID0gZnVuY3Rpb24oZCkge1xuICAgICAgICBpbnNlcnQocm9vdCwgZCwgK2Z4KGQsICsraSksICtmeShkLCBpKSwgeDFfLCB5MV8sIHgyXywgeTJfKTtcbiAgICAgIH07XG4gICAgICByb290LnZpc2l0ID0gZnVuY3Rpb24oZikge1xuICAgICAgICBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgcm9vdCwgeDFfLCB5MV8sIHgyXywgeTJfKTtcbiAgICAgIH07XG4gICAgICByb290LmZpbmQgPSBmdW5jdGlvbihwb2ludCkge1xuICAgICAgICByZXR1cm4gZDNfZ2VvbV9xdWFkdHJlZUZpbmQocm9vdCwgcG9pbnRbMF0sIHBvaW50WzFdLCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgfTtcbiAgICAgIGkgPSAtMTtcbiAgICAgIGlmICh4MSA9PSBudWxsKSB7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgaW5zZXJ0KHJvb3QsIGRhdGFbaV0sIHhzW2ldLCB5c1tpXSwgeDFfLCB5MV8sIHgyXywgeTJfKTtcbiAgICAgICAgfVxuICAgICAgICAtLWk7XG4gICAgICB9IGVsc2UgZGF0YS5mb3JFYWNoKHJvb3QuYWRkKTtcbiAgICAgIHhzID0geXMgPSBkYXRhID0gZCA9IG51bGw7XG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gICAgcXVhZHRyZWUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSBfLCBxdWFkdHJlZSkgOiB4O1xuICAgIH07XG4gICAgcXVhZHRyZWUueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSBfLCBxdWFkdHJlZSkgOiB5O1xuICAgIH07XG4gICAgcXVhZHRyZWUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDEgPT0gbnVsbCA/IG51bGwgOiBbIFsgeDEsIHkxIF0sIFsgeDIsIHkyIF0gXTtcbiAgICAgIGlmIChfID09IG51bGwpIHgxID0geTEgPSB4MiA9IHkyID0gbnVsbDsgZWxzZSB4MSA9ICtfWzBdWzBdLCB5MSA9ICtfWzBdWzFdLCB4MiA9ICtfWzFdWzBdLCBcbiAgICAgIHkyID0gK19bMV1bMV07XG4gICAgICByZXR1cm4gcXVhZHRyZWU7XG4gICAgfTtcbiAgICBxdWFkdHJlZS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDEgPT0gbnVsbCA/IG51bGwgOiBbIHgyIC0geDEsIHkyIC0geTEgXTtcbiAgICAgIGlmIChfID09IG51bGwpIHgxID0geTEgPSB4MiA9IHkyID0gbnVsbDsgZWxzZSB4MSA9IHkxID0gMCwgeDIgPSArX1swXSwgeTIgPSArX1sxXTtcbiAgICAgIHJldHVybiBxdWFkdHJlZTtcbiAgICB9O1xuICAgIHJldHVybiBxdWFkdHJlZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFgoZCkge1xuICAgIHJldHVybiBkLng7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFkoZCkge1xuICAgIHJldHVybiBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZU5vZGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxlYWY6IHRydWUsXG4gICAgICBub2RlczogW10sXG4gICAgICBwb2ludDogbnVsbCxcbiAgICAgIHg6IG51bGwsXG4gICAgICB5OiBudWxsXG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgbm9kZSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICBpZiAoIWYobm9kZSwgeDEsIHkxLCB4MiwgeTIpKSB7XG4gICAgICB2YXIgc3ggPSAoeDEgKyB4MikgKiAuNSwgc3kgPSAoeTEgKyB5MikgKiAuNSwgY2hpbGRyZW4gPSBub2RlLm5vZGVzO1xuICAgICAgaWYgKGNoaWxkcmVuWzBdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bMF0sIHgxLCB5MSwgc3gsIHN5KTtcbiAgICAgIGlmIChjaGlsZHJlblsxXSkgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIGNoaWxkcmVuWzFdLCBzeCwgeTEsIHgyLCBzeSk7XG4gICAgICBpZiAoY2hpbGRyZW5bMl0pIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBjaGlsZHJlblsyXSwgeDEsIHN5LCBzeCwgeTIpO1xuICAgICAgaWYgKGNoaWxkcmVuWzNdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bM10sIHN4LCBzeSwgeDIsIHkyKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZUZpbmQocm9vdCwgeCwgeSwgeDAsIHkwLCB4MywgeTMpIHtcbiAgICB2YXIgbWluRGlzdGFuY2UyID0gSW5maW5pdHksIGNsb3Nlc3RQb2ludDtcbiAgICAoZnVuY3Rpb24gZmluZChub2RlLCB4MSwgeTEsIHgyLCB5Mikge1xuICAgICAgaWYgKHgxID4geDMgfHwgeTEgPiB5MyB8fCB4MiA8IHgwIHx8IHkyIDwgeTApIHJldHVybjtcbiAgICAgIGlmIChwb2ludCA9IG5vZGUucG9pbnQpIHtcbiAgICAgICAgdmFyIHBvaW50LCBkeCA9IHggLSBub2RlLngsIGR5ID0geSAtIG5vZGUueSwgZGlzdGFuY2UyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIGlmIChkaXN0YW5jZTIgPCBtaW5EaXN0YW5jZTIpIHtcbiAgICAgICAgICB2YXIgZGlzdGFuY2UgPSBNYXRoLnNxcnQobWluRGlzdGFuY2UyID0gZGlzdGFuY2UyKTtcbiAgICAgICAgICB4MCA9IHggLSBkaXN0YW5jZSwgeTAgPSB5IC0gZGlzdGFuY2U7XG4gICAgICAgICAgeDMgPSB4ICsgZGlzdGFuY2UsIHkzID0geSArIGRpc3RhbmNlO1xuICAgICAgICAgIGNsb3Nlc3RQb2ludCA9IHBvaW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLm5vZGVzLCB4bSA9ICh4MSArIHgyKSAqIC41LCB5bSA9ICh5MSArIHkyKSAqIC41LCByaWdodCA9IHggPj0geG0sIGJlbG93ID0geSA+PSB5bTtcbiAgICAgIGZvciAodmFyIGkgPSBiZWxvdyA8PCAxIHwgcmlnaHQsIGogPSBpICsgNDsgaSA8IGo7ICsraSkge1xuICAgICAgICBpZiAobm9kZSA9IGNoaWxkcmVuW2kgJiAzXSkgc3dpdGNoIChpICYgMykge1xuICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIGZpbmQobm9kZSwgeDEsIHkxLCB4bSwgeW0pO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgZmluZChub2RlLCB4bSwgeTEsIHgyLCB5bSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICBmaW5kKG5vZGUsIHgxLCB5bSwgeG0sIHkyKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIGZpbmQobm9kZSwgeG0sIHltLCB4MiwgeTIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSkocm9vdCwgeDAsIHkwLCB4MywgeTMpO1xuICAgIHJldHVybiBjbG9zZXN0UG9pbnQ7XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVSZ2IgPSBkM19pbnRlcnBvbGF0ZVJnYjtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVSZ2IoYSwgYikge1xuICAgIGEgPSBkMy5yZ2IoYSk7XG4gICAgYiA9IGQzLnJnYihiKTtcbiAgICB2YXIgYXIgPSBhLnIsIGFnID0gYS5nLCBhYiA9IGEuYiwgYnIgPSBiLnIgLSBhciwgYmcgPSBiLmcgLSBhZywgYmIgPSBiLmIgLSBhYjtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIFwiI1wiICsgZDNfcmdiX2hleChNYXRoLnJvdW5kKGFyICsgYnIgKiB0KSkgKyBkM19yZ2JfaGV4KE1hdGgucm91bmQoYWcgKyBiZyAqIHQpKSArIGQzX3JnYl9oZXgoTWF0aC5yb3VuZChhYiArIGJiICogdCkpO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVPYmplY3QgPSBkM19pbnRlcnBvbGF0ZU9iamVjdDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVPYmplY3QoYSwgYikge1xuICAgIHZhciBpID0ge30sIGMgPSB7fSwgaztcbiAgICBmb3IgKGsgaW4gYSkge1xuICAgICAgaWYgKGsgaW4gYikge1xuICAgICAgICBpW2tdID0gZDNfaW50ZXJwb2xhdGUoYVtrXSwgYltrXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjW2tdID0gYVtrXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChrIGluIGIpIHtcbiAgICAgIGlmICghKGsgaW4gYSkpIHtcbiAgICAgICAgY1trXSA9IGJba107XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBmb3IgKGsgaW4gaSkgY1trXSA9IGlba10odCk7XG4gICAgICByZXR1cm4gYztcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlTnVtYmVyID0gZDNfaW50ZXJwb2xhdGVOdW1iZXI7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlTnVtYmVyKGEsIGIpIHtcbiAgICBhID0gK2EsIGIgPSArYjtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGEgKiAoMSAtIHQpICsgYiAqIHQ7XG4gICAgfTtcbiAgfVxuICBkMy5pbnRlcnBvbGF0ZVN0cmluZyA9IGQzX2ludGVycG9sYXRlU3RyaW5nO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVN0cmluZyhhLCBiKSB7XG4gICAgdmFyIGJpID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQS5sYXN0SW5kZXggPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJCLmxhc3RJbmRleCA9IDAsIGFtLCBibSwgYnMsIGkgPSAtMSwgcyA9IFtdLCBxID0gW107XG4gICAgYSA9IGEgKyBcIlwiLCBiID0gYiArIFwiXCI7XG4gICAgd2hpbGUgKChhbSA9IGQzX2ludGVycG9sYXRlX251bWJlckEuZXhlYyhhKSkgJiYgKGJtID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQi5leGVjKGIpKSkge1xuICAgICAgaWYgKChicyA9IGJtLmluZGV4KSA+IGJpKSB7XG4gICAgICAgIGJzID0gYi5zbGljZShiaSwgYnMpO1xuICAgICAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgZWxzZSBzWysraV0gPSBicztcbiAgICAgIH1cbiAgICAgIGlmICgoYW0gPSBhbVswXSkgPT09IChibSA9IGJtWzBdKSkge1xuICAgICAgICBpZiAoc1tpXSkgc1tpXSArPSBibTsgZWxzZSBzWysraV0gPSBibTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNbKytpXSA9IG51bGw7XG4gICAgICAgIHEucHVzaCh7XG4gICAgICAgICAgaTogaSxcbiAgICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcihhbSwgYm0pXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgYmkgPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJCLmxhc3RJbmRleDtcbiAgICB9XG4gICAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICAgIGJzID0gYi5zbGljZShiaSk7XG4gICAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgZWxzZSBzWysraV0gPSBicztcbiAgICB9XG4gICAgcmV0dXJuIHMubGVuZ3RoIDwgMiA/IHFbMF0gPyAoYiA9IHFbMF0ueCwgZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGIodCkgKyBcIlwiO1xuICAgIH0pIDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYjtcbiAgICB9IDogKGIgPSBxLmxlbmd0aCwgZnVuY3Rpb24odCkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG87IGkgPCBiOyArK2kpIHNbKG8gPSBxW2ldKS5pXSA9IG8ueCh0KTtcbiAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgfSk7XG4gIH1cbiAgdmFyIGQzX2ludGVycG9sYXRlX251bWJlckEgPSAvWy0rXT8oPzpcXGQrXFwuP1xcZCp8XFwuP1xcZCspKD86W2VFXVstK10/XFxkKyk/L2csIGQzX2ludGVycG9sYXRlX251bWJlckIgPSBuZXcgUmVnRXhwKGQzX2ludGVycG9sYXRlX251bWJlckEuc291cmNlLCBcImdcIik7XG4gIGQzLmludGVycG9sYXRlID0gZDNfaW50ZXJwb2xhdGU7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlKGEsIGIpIHtcbiAgICB2YXIgaSA9IGQzLmludGVycG9sYXRvcnMubGVuZ3RoLCBmO1xuICAgIHdoaWxlICgtLWkgPj0gMCAmJiAhKGYgPSBkMy5pbnRlcnBvbGF0b3JzW2ldKGEsIGIpKSkgO1xuICAgIHJldHVybiBmO1xuICB9XG4gIGQzLmludGVycG9sYXRvcnMgPSBbIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgdCA9IHR5cGVvZiBiO1xuICAgIHJldHVybiAodCA9PT0gXCJzdHJpbmdcIiA/IGQzX3JnYl9uYW1lcy5oYXMoYi50b0xvd2VyQ2FzZSgpKSB8fCAvXigjfHJnYlxcKHxoc2xcXCgpL2kudGVzdChiKSA/IGQzX2ludGVycG9sYXRlUmdiIDogZDNfaW50ZXJwb2xhdGVTdHJpbmcgOiBiIGluc3RhbmNlb2YgZDNfY29sb3IgPyBkM19pbnRlcnBvbGF0ZVJnYiA6IEFycmF5LmlzQXJyYXkoYikgPyBkM19pbnRlcnBvbGF0ZUFycmF5IDogdCA9PT0gXCJvYmplY3RcIiAmJiBpc05hTihiKSA/IGQzX2ludGVycG9sYXRlT2JqZWN0IDogZDNfaW50ZXJwb2xhdGVOdW1iZXIpKGEsIGIpO1xuICB9IF07XG4gIGQzLmludGVycG9sYXRlQXJyYXkgPSBkM19pbnRlcnBvbGF0ZUFycmF5O1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZUFycmF5KGEsIGIpIHtcbiAgICB2YXIgeCA9IFtdLCBjID0gW10sIG5hID0gYS5sZW5ndGgsIG5iID0gYi5sZW5ndGgsIG4wID0gTWF0aC5taW4oYS5sZW5ndGgsIGIubGVuZ3RoKSwgaTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjA7ICsraSkgeC5wdXNoKGQzX2ludGVycG9sYXRlKGFbaV0sIGJbaV0pKTtcbiAgICBmb3IgKDtpIDwgbmE7ICsraSkgY1tpXSA9IGFbaV07XG4gICAgZm9yICg7aSA8IG5iOyArK2kpIGNbaV0gPSBiW2ldO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjA7ICsraSkgY1tpXSA9IHhbaV0odCk7XG4gICAgICByZXR1cm4gYztcbiAgICB9O1xuICB9XG4gIHZhciBkM19lYXNlX2RlZmF1bHQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfaWRlbnRpdHk7XG4gIH07XG4gIHZhciBkM19lYXNlID0gZDMubWFwKHtcbiAgICBsaW5lYXI6IGQzX2Vhc2VfZGVmYXVsdCxcbiAgICBwb2x5OiBkM19lYXNlX3BvbHksXG4gICAgcXVhZDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9xdWFkO1xuICAgIH0sXG4gICAgY3ViaWM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfY3ViaWM7XG4gICAgfSxcbiAgICBzaW46IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2Vfc2luO1xuICAgIH0sXG4gICAgZXhwOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX2V4cDtcbiAgICB9LFxuICAgIGNpcmNsZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9jaXJjbGU7XG4gICAgfSxcbiAgICBlbGFzdGljOiBkM19lYXNlX2VsYXN0aWMsXG4gICAgYmFjazogZDNfZWFzZV9iYWNrLFxuICAgIGJvdW5jZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9ib3VuY2U7XG4gICAgfVxuICB9KTtcbiAgdmFyIGQzX2Vhc2VfbW9kZSA9IGQzLm1hcCh7XG4gICAgXCJpblwiOiBkM19pZGVudGl0eSxcbiAgICBvdXQ6IGQzX2Vhc2VfcmV2ZXJzZSxcbiAgICBcImluLW91dFwiOiBkM19lYXNlX3JlZmxlY3QsXG4gICAgXCJvdXQtaW5cIjogZnVuY3Rpb24oZikge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfcmVmbGVjdChkM19lYXNlX3JldmVyc2UoZikpO1xuICAgIH1cbiAgfSk7XG4gIGQzLmVhc2UgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGkgPSBuYW1lLmluZGV4T2YoXCItXCIpLCB0ID0gaSA+PSAwID8gbmFtZS5zbGljZSgwLCBpKSA6IG5hbWUsIG0gPSBpID49IDAgPyBuYW1lLnNsaWNlKGkgKyAxKSA6IFwiaW5cIjtcbiAgICB0ID0gZDNfZWFzZS5nZXQodCkgfHwgZDNfZWFzZV9kZWZhdWx0O1xuICAgIG0gPSBkM19lYXNlX21vZGUuZ2V0KG0pIHx8IGQzX2lkZW50aXR5O1xuICAgIHJldHVybiBkM19lYXNlX2NsYW1wKG0odC5hcHBseShudWxsLCBkM19hcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSkpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZWFzZV9jbGFtcChmKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiB0IDw9IDAgPyAwIDogdCA+PSAxID8gMSA6IGYodCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3JldmVyc2UoZikge1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gMSAtIGYoMSAtIHQpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9yZWZsZWN0KGYpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIC41ICogKHQgPCAuNSA/IGYoMiAqIHQpIDogMiAtIGYoMiAtIDIgKiB0KSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3F1YWQodCkge1xuICAgIHJldHVybiB0ICogdDtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2N1YmljKHQpIHtcbiAgICByZXR1cm4gdCAqIHQgKiB0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfY3ViaWNJbk91dCh0KSB7XG4gICAgaWYgKHQgPD0gMCkgcmV0dXJuIDA7XG4gICAgaWYgKHQgPj0gMSkgcmV0dXJuIDE7XG4gICAgdmFyIHQyID0gdCAqIHQsIHQzID0gdDIgKiB0O1xuICAgIHJldHVybiA0ICogKHQgPCAuNSA/IHQzIDogMyAqICh0IC0gdDIpICsgdDMgLSAuNzUpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfcG9seShlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBNYXRoLnBvdyh0LCBlKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2Vfc2luKHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGguY29zKHQgKiBoYWxmz4ApO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfZXhwKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3coMiwgMTAgKiAodCAtIDEpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2NpcmNsZSh0KSB7XG4gICAgcmV0dXJuIDEgLSBNYXRoLnNxcnQoMSAtIHQgKiB0KTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2VsYXN0aWMoYSwgcCkge1xuICAgIHZhciBzO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcCA9IC40NTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkgcyA9IHAgLyDPhCAqIE1hdGguYXNpbigxIC8gYSk7IGVsc2UgYSA9IDEsIHMgPSBwIC8gNDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIDEgKyBhICogTWF0aC5wb3coMiwgLTEwICogdCkgKiBNYXRoLnNpbigodCAtIHMpICogz4QgLyBwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfYmFjayhzKSB7XG4gICAgaWYgKCFzKSBzID0gMS43MDE1ODtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIHQgKiB0ICogKChzICsgMSkgKiB0IC0gcyk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2JvdW5jZSh0KSB7XG4gICAgcmV0dXJuIHQgPCAxIC8gMi43NSA/IDcuNTYyNSAqIHQgKiB0IDogdCA8IDIgLyAyLjc1ID8gNy41NjI1ICogKHQgLT0gMS41IC8gMi43NSkgKiB0ICsgLjc1IDogdCA8IDIuNSAvIDIuNzUgPyA3LjU2MjUgKiAodCAtPSAyLjI1IC8gMi43NSkgKiB0ICsgLjkzNzUgOiA3LjU2MjUgKiAodCAtPSAyLjYyNSAvIDIuNzUpICogdCArIC45ODQzNzU7XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVIY2wgPSBkM19pbnRlcnBvbGF0ZUhjbDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVIY2woYSwgYikge1xuICAgIGEgPSBkMy5oY2woYSk7XG4gICAgYiA9IGQzLmhjbChiKTtcbiAgICB2YXIgYWggPSBhLmgsIGFjID0gYS5jLCBhbCA9IGEubCwgYmggPSBiLmggLSBhaCwgYmMgPSBiLmMgLSBhYywgYmwgPSBiLmwgLSBhbDtcbiAgICBpZiAoaXNOYU4oYmMpKSBiYyA9IDAsIGFjID0gaXNOYU4oYWMpID8gYi5jIDogYWM7XG4gICAgaWYgKGlzTmFOKGJoKSkgYmggPSAwLCBhaCA9IGlzTmFOKGFoKSA/IGIuaCA6IGFoOyBlbHNlIGlmIChiaCA+IDE4MCkgYmggLT0gMzYwOyBlbHNlIGlmIChiaCA8IC0xODApIGJoICs9IDM2MDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2hjbF9sYWIoYWggKyBiaCAqIHQsIGFjICsgYmMgKiB0LCBhbCArIGJsICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVIc2wgPSBkM19pbnRlcnBvbGF0ZUhzbDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVIc2woYSwgYikge1xuICAgIGEgPSBkMy5oc2woYSk7XG4gICAgYiA9IGQzLmhzbChiKTtcbiAgICB2YXIgYWggPSBhLmgsIGFzID0gYS5zLCBhbCA9IGEubCwgYmggPSBiLmggLSBhaCwgYnMgPSBiLnMgLSBhcywgYmwgPSBiLmwgLSBhbDtcbiAgICBpZiAoaXNOYU4oYnMpKSBicyA9IDAsIGFzID0gaXNOYU4oYXMpID8gYi5zIDogYXM7XG4gICAgaWYgKGlzTmFOKGJoKSkgYmggPSAwLCBhaCA9IGlzTmFOKGFoKSA/IGIuaCA6IGFoOyBlbHNlIGlmIChiaCA+IDE4MCkgYmggLT0gMzYwOyBlbHNlIGlmIChiaCA8IC0xODApIGJoICs9IDM2MDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2hzbF9yZ2IoYWggKyBiaCAqIHQsIGFzICsgYnMgKiB0LCBhbCArIGJsICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVMYWIgPSBkM19pbnRlcnBvbGF0ZUxhYjtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVMYWIoYSwgYikge1xuICAgIGEgPSBkMy5sYWIoYSk7XG4gICAgYiA9IGQzLmxhYihiKTtcbiAgICB2YXIgYWwgPSBhLmwsIGFhID0gYS5hLCBhYiA9IGEuYiwgYmwgPSBiLmwgLSBhbCwgYmEgPSBiLmEgLSBhYSwgYmIgPSBiLmIgLSBhYjtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2xhYl9yZ2IoYWwgKyBibCAqIHQsIGFhICsgYmEgKiB0LCBhYiArIGJiICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVSb3VuZCA9IGQzX2ludGVycG9sYXRlUm91bmQ7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlUm91bmQoYSwgYikge1xuICAgIGIgLT0gYTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQoYSArIGIgKiB0KTtcbiAgICB9O1xuICB9XG4gIGQzLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBnID0gZDNfZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGQzLm5zLnByZWZpeC5zdmcsIFwiZ1wiKTtcbiAgICByZXR1cm4gKGQzLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgaWYgKHN0cmluZyAhPSBudWxsKSB7XG4gICAgICAgIGcuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHN0cmluZyk7XG4gICAgICAgIHZhciB0ID0gZy50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBkM190cmFuc2Zvcm0odCA/IHQubWF0cml4IDogZDNfdHJhbnNmb3JtSWRlbnRpdHkpO1xuICAgIH0pKHN0cmluZyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zZm9ybShtKSB7XG4gICAgdmFyIHIwID0gWyBtLmEsIG0uYiBdLCByMSA9IFsgbS5jLCBtLmQgXSwga3ggPSBkM190cmFuc2Zvcm1Ob3JtYWxpemUocjApLCBreiA9IGQzX3RyYW5zZm9ybURvdChyMCwgcjEpLCBreSA9IGQzX3RyYW5zZm9ybU5vcm1hbGl6ZShkM190cmFuc2Zvcm1Db21iaW5lKHIxLCByMCwgLWt6KSkgfHwgMDtcbiAgICBpZiAocjBbMF0gKiByMVsxXSA8IHIxWzBdICogcjBbMV0pIHtcbiAgICAgIHIwWzBdICo9IC0xO1xuICAgICAgcjBbMV0gKj0gLTE7XG4gICAgICBreCAqPSAtMTtcbiAgICAgIGt6ICo9IC0xO1xuICAgIH1cbiAgICB0aGlzLnJvdGF0ZSA9IChreCA/IE1hdGguYXRhbjIocjBbMV0sIHIwWzBdKSA6IE1hdGguYXRhbjIoLXIxWzBdLCByMVsxXSkpICogZDNfZGVncmVlcztcbiAgICB0aGlzLnRyYW5zbGF0ZSA9IFsgbS5lLCBtLmYgXTtcbiAgICB0aGlzLnNjYWxlID0gWyBreCwga3kgXTtcbiAgICB0aGlzLnNrZXcgPSBreSA/IE1hdGguYXRhbjIoa3osIGt5KSAqIGQzX2RlZ3JlZXMgOiAwO1xuICB9XG4gIGQzX3RyYW5zZm9ybS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnRyYW5zbGF0ZSArIFwiKXJvdGF0ZShcIiArIHRoaXMucm90YXRlICsgXCIpc2tld1goXCIgKyB0aGlzLnNrZXcgKyBcIilzY2FsZShcIiArIHRoaXMuc2NhbGUgKyBcIilcIjtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtRG90KGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXTtcbiAgfVxuICBmdW5jdGlvbiBkM190cmFuc2Zvcm1Ob3JtYWxpemUoYSkge1xuICAgIHZhciBrID0gTWF0aC5zcXJ0KGQzX3RyYW5zZm9ybURvdChhLCBhKSk7XG4gICAgaWYgKGspIHtcbiAgICAgIGFbMF0gLz0gaztcbiAgICAgIGFbMV0gLz0gaztcbiAgICB9XG4gICAgcmV0dXJuIGs7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtQ29tYmluZShhLCBiLCBrKSB7XG4gICAgYVswXSArPSBrICogYlswXTtcbiAgICBhWzFdICs9IGsgKiBiWzFdO1xuICAgIHJldHVybiBhO1xuICB9XG4gIHZhciBkM190cmFuc2Zvcm1JZGVudGl0eSA9IHtcbiAgICBhOiAxLFxuICAgIGI6IDAsXG4gICAgYzogMCxcbiAgICBkOiAxLFxuICAgIGU6IDAsXG4gICAgZjogMFxuICB9O1xuICBkMy5pbnRlcnBvbGF0ZVRyYW5zZm9ybSA9IGQzX2ludGVycG9sYXRlVHJhbnNmb3JtO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSB7XG4gICAgcmV0dXJuIHMubGVuZ3RoID8gcy5wb3AoKSArIFwiLFwiIDogXCJcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVRyYW5zbGF0ZSh0YSwgdGIsIHMsIHEpIHtcbiAgICBpZiAodGFbMF0gIT09IHRiWzBdIHx8IHRhWzFdICE9PSB0YlsxXSkge1xuICAgICAgdmFyIGkgPSBzLnB1c2goXCJ0cmFuc2xhdGUoXCIsIG51bGwsIFwiLFwiLCBudWxsLCBcIilcIik7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBpIC0gNCxcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIodGFbMF0sIHRiWzBdKVxuICAgICAgfSwge1xuICAgICAgICBpOiBpIC0gMixcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIodGFbMV0sIHRiWzFdKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0YlswXSB8fCB0YlsxXSkge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiICsgdGIgKyBcIilcIik7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlUm90YXRlKHJhLCByYiwgcywgcSkge1xuICAgIGlmIChyYSAhPT0gcmIpIHtcbiAgICAgIGlmIChyYSAtIHJiID4gMTgwKSByYiArPSAzNjA7IGVsc2UgaWYgKHJiIC0gcmEgPiAxODApIHJhICs9IDM2MDtcbiAgICAgIHEucHVzaCh7XG4gICAgICAgIGk6IHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwicm90YXRlKFwiLCBudWxsLCBcIilcIikgLSAyLFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcihyYSwgcmIpXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHJiKSB7XG4gICAgICBzLnB1c2goZDNfaW50ZXJwb2xhdGVUcmFuc2Zvcm1Qb3AocykgKyBcInJvdGF0ZShcIiArIHJiICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVNrZXcod2EsIHdiLCBzLCBxKSB7XG4gICAgaWYgKHdhICE9PSB3Yikge1xuICAgICAgcS5wdXNoKHtcbiAgICAgICAgaTogcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJza2V3WChcIiwgbnVsbCwgXCIpXCIpIC0gMixcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIod2EsIHdiKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh3Yikge1xuICAgICAgcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJza2V3WChcIiArIHdiICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVNjYWxlKGthLCBrYiwgcywgcSkge1xuICAgIGlmIChrYVswXSAhPT0ga2JbMF0gfHwga2FbMV0gIT09IGtiWzFdKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybVBvcChzKSArIFwic2NhbGUoXCIsIG51bGwsIFwiLFwiLCBudWxsLCBcIilcIik7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBpIC0gNCxcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIoa2FbMF0sIGtiWzBdKVxuICAgICAgfSwge1xuICAgICAgICBpOiBpIC0gMixcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIoa2FbMV0sIGtiWzFdKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChrYlswXSAhPT0gMSB8fCBrYlsxXSAhPT0gMSkge1xuICAgICAgcy5wdXNoKGQzX2ludGVycG9sYXRlVHJhbnNmb3JtUG9wKHMpICsgXCJzY2FsZShcIiArIGtiICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybShhLCBiKSB7XG4gICAgdmFyIHMgPSBbXSwgcSA9IFtdO1xuICAgIGEgPSBkMy50cmFuc2Zvcm0oYSksIGIgPSBkMy50cmFuc2Zvcm0oYik7XG4gICAgZDNfaW50ZXJwb2xhdGVUcmFuc2xhdGUoYS50cmFuc2xhdGUsIGIudHJhbnNsYXRlLCBzLCBxKTtcbiAgICBkM19pbnRlcnBvbGF0ZVJvdGF0ZShhLnJvdGF0ZSwgYi5yb3RhdGUsIHMsIHEpO1xuICAgIGQzX2ludGVycG9sYXRlU2tldyhhLnNrZXcsIGIuc2tldywgcywgcSk7XG4gICAgZDNfaW50ZXJwb2xhdGVTY2FsZShhLnNjYWxlLCBiLnNjYWxlLCBzLCBxKTtcbiAgICBhID0gYiA9IG51bGw7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBxLmxlbmd0aCwgbztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdW5pbnRlcnBvbGF0ZU51bWJlcihhLCBiKSB7XG4gICAgYiA9IChiIC09IGEgPSArYSkgfHwgMSAvIGI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiAoeCAtIGEpIC8gYjtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3VuaW50ZXJwb2xhdGVDbGFtcChhLCBiKSB7XG4gICAgYiA9IChiIC09IGEgPSArYSkgfHwgMSAvIGI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAoeCAtIGEpIC8gYikpO1xuICAgIH07XG4gIH1cbiAgZDMubGF5b3V0ID0ge307XG4gIGQzLmxheW91dC5idW5kbGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obGlua3MpIHtcbiAgICAgIHZhciBwYXRocyA9IFtdLCBpID0gLTEsIG4gPSBsaW5rcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgcGF0aHMucHVzaChkM19sYXlvdXRfYnVuZGxlUGF0aChsaW5rc1tpXSkpO1xuICAgICAgcmV0dXJuIHBhdGhzO1xuICAgIH07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9idW5kbGVQYXRoKGxpbmspIHtcbiAgICB2YXIgc3RhcnQgPSBsaW5rLnNvdXJjZSwgZW5kID0gbGluay50YXJnZXQsIGxjYSA9IGQzX2xheW91dF9idW5kbGVMZWFzdENvbW1vbkFuY2VzdG9yKHN0YXJ0LCBlbmQpLCBwb2ludHMgPSBbIHN0YXJ0IF07XG4gICAgd2hpbGUgKHN0YXJ0ICE9PSBsY2EpIHtcbiAgICAgIHN0YXJ0ID0gc3RhcnQucGFyZW50O1xuICAgICAgcG9pbnRzLnB1c2goc3RhcnQpO1xuICAgIH1cbiAgICB2YXIgayA9IHBvaW50cy5sZW5ndGg7XG4gICAgd2hpbGUgKGVuZCAhPT0gbGNhKSB7XG4gICAgICBwb2ludHMuc3BsaWNlKGssIDAsIGVuZCk7XG4gICAgICBlbmQgPSBlbmQucGFyZW50O1xuICAgIH1cbiAgICByZXR1cm4gcG9pbnRzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9idW5kbGVBbmNlc3RvcnMobm9kZSkge1xuICAgIHZhciBhbmNlc3RvcnMgPSBbXSwgcGFyZW50ID0gbm9kZS5wYXJlbnQ7XG4gICAgd2hpbGUgKHBhcmVudCAhPSBudWxsKSB7XG4gICAgICBhbmNlc3RvcnMucHVzaChub2RlKTtcbiAgICAgIG5vZGUgPSBwYXJlbnQ7XG4gICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50O1xuICAgIH1cbiAgICBhbmNlc3RvcnMucHVzaChub2RlKTtcbiAgICByZXR1cm4gYW5jZXN0b3JzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9idW5kbGVMZWFzdENvbW1vbkFuY2VzdG9yKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikgcmV0dXJuIGE7XG4gICAgdmFyIGFOb2RlcyA9IGQzX2xheW91dF9idW5kbGVBbmNlc3RvcnMoYSksIGJOb2RlcyA9IGQzX2xheW91dF9idW5kbGVBbmNlc3RvcnMoYiksIGFOb2RlID0gYU5vZGVzLnBvcCgpLCBiTm9kZSA9IGJOb2Rlcy5wb3AoKSwgc2hhcmVkTm9kZSA9IG51bGw7XG4gICAgd2hpbGUgKGFOb2RlID09PSBiTm9kZSkge1xuICAgICAgc2hhcmVkTm9kZSA9IGFOb2RlO1xuICAgICAgYU5vZGUgPSBhTm9kZXMucG9wKCk7XG4gICAgICBiTm9kZSA9IGJOb2Rlcy5wb3AoKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoYXJlZE5vZGU7XG4gIH1cbiAgZDMubGF5b3V0LmNob3JkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNob3JkID0ge30sIGNob3JkcywgZ3JvdXBzLCBtYXRyaXgsIG4sIHBhZGRpbmcgPSAwLCBzb3J0R3JvdXBzLCBzb3J0U3ViZ3JvdXBzLCBzb3J0Q2hvcmRzO1xuICAgIGZ1bmN0aW9uIHJlbGF5b3V0KCkge1xuICAgICAgdmFyIHN1Ymdyb3VwcyA9IHt9LCBncm91cFN1bXMgPSBbXSwgZ3JvdXBJbmRleCA9IGQzLnJhbmdlKG4pLCBzdWJncm91cEluZGV4ID0gW10sIGssIHgsIHgwLCBpLCBqO1xuICAgICAgY2hvcmRzID0gW107XG4gICAgICBncm91cHMgPSBbXTtcbiAgICAgIGsgPSAwLCBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICB4ID0gMCwgaiA9IC0xO1xuICAgICAgICB3aGlsZSAoKytqIDwgbikge1xuICAgICAgICAgIHggKz0gbWF0cml4W2ldW2pdO1xuICAgICAgICB9XG4gICAgICAgIGdyb3VwU3Vtcy5wdXNoKHgpO1xuICAgICAgICBzdWJncm91cEluZGV4LnB1c2goZDMucmFuZ2UobikpO1xuICAgICAgICBrICs9IHg7XG4gICAgICB9XG4gICAgICBpZiAoc29ydEdyb3Vwcykge1xuICAgICAgICBncm91cEluZGV4LnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICAgIHJldHVybiBzb3J0R3JvdXBzKGdyb3VwU3Vtc1thXSwgZ3JvdXBTdW1zW2JdKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBpZiAoc29ydFN1Ymdyb3Vwcykge1xuICAgICAgICBzdWJncm91cEluZGV4LmZvckVhY2goZnVuY3Rpb24oZCwgaSkge1xuICAgICAgICAgIGQuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gc29ydFN1Ymdyb3VwcyhtYXRyaXhbaV1bYV0sIG1hdHJpeFtpXVtiXSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgayA9ICjPhCAtIHBhZGRpbmcgKiBuKSAvIGs7XG4gICAgICB4ID0gMCwgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgeDAgPSB4LCBqID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgICAgdmFyIGRpID0gZ3JvdXBJbmRleFtpXSwgZGogPSBzdWJncm91cEluZGV4W2RpXVtqXSwgdiA9IG1hdHJpeFtkaV1bZGpdLCBhMCA9IHgsIGExID0geCArPSB2ICogaztcbiAgICAgICAgICBzdWJncm91cHNbZGkgKyBcIi1cIiArIGRqXSA9IHtcbiAgICAgICAgICAgIGluZGV4OiBkaSxcbiAgICAgICAgICAgIHN1YmluZGV4OiBkaixcbiAgICAgICAgICAgIHN0YXJ0QW5nbGU6IGEwLFxuICAgICAgICAgICAgZW5kQW5nbGU6IGExLFxuICAgICAgICAgICAgdmFsdWU6IHZcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGdyb3Vwc1tkaV0gPSB7XG4gICAgICAgICAgaW5kZXg6IGRpLFxuICAgICAgICAgIHN0YXJ0QW5nbGU6IHgwLFxuICAgICAgICAgIGVuZEFuZ2xlOiB4LFxuICAgICAgICAgIHZhbHVlOiBncm91cFN1bXNbZGldXG4gICAgICAgIH07XG4gICAgICAgIHggKz0gcGFkZGluZztcbiAgICAgIH1cbiAgICAgIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGogPSBpIC0gMTtcbiAgICAgICAgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgICB2YXIgc291cmNlID0gc3ViZ3JvdXBzW2kgKyBcIi1cIiArIGpdLCB0YXJnZXQgPSBzdWJncm91cHNbaiArIFwiLVwiICsgaV07XG4gICAgICAgICAgaWYgKHNvdXJjZS52YWx1ZSB8fCB0YXJnZXQudmFsdWUpIHtcbiAgICAgICAgICAgIGNob3Jkcy5wdXNoKHNvdXJjZS52YWx1ZSA8IHRhcmdldC52YWx1ZSA/IHtcbiAgICAgICAgICAgICAgc291cmNlOiB0YXJnZXQsXG4gICAgICAgICAgICAgIHRhcmdldDogc291cmNlXG4gICAgICAgICAgICB9IDoge1xuICAgICAgICAgICAgICBzb3VyY2U6IHNvdXJjZSxcbiAgICAgICAgICAgICAgdGFyZ2V0OiB0YXJnZXRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHNvcnRDaG9yZHMpIHJlc29ydCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNvcnQoKSB7XG4gICAgICBjaG9yZHMuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIHJldHVybiBzb3J0Q2hvcmRzKChhLnNvdXJjZS52YWx1ZSArIGEudGFyZ2V0LnZhbHVlKSAvIDIsIChiLnNvdXJjZS52YWx1ZSArIGIudGFyZ2V0LnZhbHVlKSAvIDIpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGNob3JkLm1hdHJpeCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG1hdHJpeDtcbiAgICAgIG4gPSAobWF0cml4ID0geCkgJiYgbWF0cml4Lmxlbmd0aDtcbiAgICAgIGNob3JkcyA9IGdyb3VwcyA9IG51bGw7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkZGluZztcbiAgICAgIHBhZGRpbmcgPSB4O1xuICAgICAgY2hvcmRzID0gZ3JvdXBzID0gbnVsbDtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvcnRHcm91cHMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0R3JvdXBzO1xuICAgICAgc29ydEdyb3VwcyA9IHg7XG4gICAgICBjaG9yZHMgPSBncm91cHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc29ydFN1Ymdyb3VwcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnRTdWJncm91cHM7XG4gICAgICBzb3J0U3ViZ3JvdXBzID0geDtcbiAgICAgIGNob3JkcyA9IG51bGw7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zb3J0Q2hvcmRzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydENob3JkcztcbiAgICAgIHNvcnRDaG9yZHMgPSB4O1xuICAgICAgaWYgKGNob3JkcykgcmVzb3J0KCk7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5jaG9yZHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghY2hvcmRzKSByZWxheW91dCgpO1xuICAgICAgcmV0dXJuIGNob3JkcztcbiAgICB9O1xuICAgIGNob3JkLmdyb3VwcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFncm91cHMpIHJlbGF5b3V0KCk7XG4gICAgICByZXR1cm4gZ3JvdXBzO1xuICAgIH07XG4gICAgcmV0dXJuIGNob3JkO1xuICB9O1xuICBkMy5sYXlvdXQuZm9yY2UgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZm9yY2UgPSB7fSwgZXZlbnQgPSBkMy5kaXNwYXRjaChcInN0YXJ0XCIsIFwidGlja1wiLCBcImVuZFwiKSwgdGltZXIsIHNpemUgPSBbIDEsIDEgXSwgZHJhZywgYWxwaGEsIGZyaWN0aW9uID0gLjksIGxpbmtEaXN0YW5jZSA9IGQzX2xheW91dF9mb3JjZUxpbmtEaXN0YW5jZSwgbGlua1N0cmVuZ3RoID0gZDNfbGF5b3V0X2ZvcmNlTGlua1N0cmVuZ3RoLCBjaGFyZ2UgPSAtMzAsIGNoYXJnZURpc3RhbmNlMiA9IGQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiwgZ3Jhdml0eSA9IC4xLCB0aGV0YTIgPSAuNjQsIG5vZGVzID0gW10sIGxpbmtzID0gW10sIGRpc3RhbmNlcywgc3RyZW5ndGhzLCBjaGFyZ2VzO1xuICAgIGZ1bmN0aW9uIHJlcHVsc2Uobm9kZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHF1YWQsIHgxLCBfLCB4Mikge1xuICAgICAgICBpZiAocXVhZC5wb2ludCAhPT0gbm9kZSkge1xuICAgICAgICAgIHZhciBkeCA9IHF1YWQuY3ggLSBub2RlLngsIGR5ID0gcXVhZC5jeSAtIG5vZGUueSwgZHcgPSB4MiAtIHgxLCBkbiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICAgIGlmIChkdyAqIGR3IC8gdGhldGEyIDwgZG4pIHtcbiAgICAgICAgICAgIGlmIChkbiA8IGNoYXJnZURpc3RhbmNlMikge1xuICAgICAgICAgICAgICB2YXIgayA9IHF1YWQuY2hhcmdlIC8gZG47XG4gICAgICAgICAgICAgIG5vZGUucHggLT0gZHggKiBrO1xuICAgICAgICAgICAgICBub2RlLnB5IC09IGR5ICogaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocXVhZC5wb2ludCAmJiBkbiAmJiBkbiA8IGNoYXJnZURpc3RhbmNlMikge1xuICAgICAgICAgICAgdmFyIGsgPSBxdWFkLnBvaW50Q2hhcmdlIC8gZG47XG4gICAgICAgICAgICBub2RlLnB4IC09IGR4ICogaztcbiAgICAgICAgICAgIG5vZGUucHkgLT0gZHkgKiBrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gIXF1YWQuY2hhcmdlO1xuICAgICAgfTtcbiAgICB9XG4gICAgZm9yY2UudGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKChhbHBoYSAqPSAuOTkpIDwgLjAwNSkge1xuICAgICAgICB0aW1lciA9IG51bGw7XG4gICAgICAgIGV2ZW50LmVuZCh7XG4gICAgICAgICAgdHlwZTogXCJlbmRcIixcbiAgICAgICAgICBhbHBoYTogYWxwaGEgPSAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHZhciBuID0gbm9kZXMubGVuZ3RoLCBtID0gbGlua3MubGVuZ3RoLCBxLCBpLCBvLCBzLCB0LCBsLCBrLCB4LCB5O1xuICAgICAgZm9yIChpID0gMDsgaSA8IG07ICsraSkge1xuICAgICAgICBvID0gbGlua3NbaV07XG4gICAgICAgIHMgPSBvLnNvdXJjZTtcbiAgICAgICAgdCA9IG8udGFyZ2V0O1xuICAgICAgICB4ID0gdC54IC0gcy54O1xuICAgICAgICB5ID0gdC55IC0gcy55O1xuICAgICAgICBpZiAobCA9IHggKiB4ICsgeSAqIHkpIHtcbiAgICAgICAgICBsID0gYWxwaGEgKiBzdHJlbmd0aHNbaV0gKiAoKGwgPSBNYXRoLnNxcnQobCkpIC0gZGlzdGFuY2VzW2ldKSAvIGw7XG4gICAgICAgICAgeCAqPSBsO1xuICAgICAgICAgIHkgKj0gbDtcbiAgICAgICAgICB0LnggLT0geCAqIChrID0gcy53ZWlnaHQgKyB0LndlaWdodCA/IHMud2VpZ2h0IC8gKHMud2VpZ2h0ICsgdC53ZWlnaHQpIDogLjUpO1xuICAgICAgICAgIHQueSAtPSB5ICogaztcbiAgICAgICAgICBzLnggKz0geCAqIChrID0gMSAtIGspO1xuICAgICAgICAgIHMueSArPSB5ICogaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGsgPSBhbHBoYSAqIGdyYXZpdHkpIHtcbiAgICAgICAgeCA9IHNpemVbMF0gLyAyO1xuICAgICAgICB5ID0gc2l6ZVsxXSAvIDI7XG4gICAgICAgIGkgPSAtMTtcbiAgICAgICAgaWYgKGspIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgbyA9IG5vZGVzW2ldO1xuICAgICAgICAgIG8ueCArPSAoeCAtIG8ueCkgKiBrO1xuICAgICAgICAgIG8ueSArPSAoeSAtIG8ueSkgKiBrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoY2hhcmdlKSB7XG4gICAgICAgIGQzX2xheW91dF9mb3JjZUFjY3VtdWxhdGUocSA9IGQzLmdlb20ucXVhZHRyZWUobm9kZXMpLCBhbHBoYSwgY2hhcmdlcyk7XG4gICAgICAgIGkgPSAtMTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBpZiAoIShvID0gbm9kZXNbaV0pLmZpeGVkKSB7XG4gICAgICAgICAgICBxLnZpc2l0KHJlcHVsc2UobykpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgbyA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAoby5maXhlZCkge1xuICAgICAgICAgIG8ueCA9IG8ucHg7XG4gICAgICAgICAgby55ID0gby5weTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvLnggLT0gKG8ucHggLSAoby5weCA9IG8ueCkpICogZnJpY3Rpb247XG4gICAgICAgICAgby55IC09IChvLnB5IC0gKG8ucHkgPSBvLnkpKSAqIGZyaWN0aW9uO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBldmVudC50aWNrKHtcbiAgICAgICAgdHlwZTogXCJ0aWNrXCIsXG4gICAgICAgIGFscGhhOiBhbHBoYVxuICAgICAgfSk7XG4gICAgfTtcbiAgICBmb3JjZS5ub2RlcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVzO1xuICAgICAgbm9kZXMgPSB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UubGlua3MgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsaW5rcztcbiAgICAgIGxpbmtzID0geDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5saW5rRGlzdGFuY2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsaW5rRGlzdGFuY2U7XG4gICAgICBsaW5rRGlzdGFuY2UgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6ICt4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuZGlzdGFuY2UgPSBmb3JjZS5saW5rRGlzdGFuY2U7XG4gICAgZm9yY2UubGlua1N0cmVuZ3RoID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGlua1N0cmVuZ3RoO1xuICAgICAgbGlua1N0cmVuZ3RoID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmZyaWN0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZnJpY3Rpb247XG4gICAgICBmcmljdGlvbiA9ICt4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuY2hhcmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2hhcmdlO1xuICAgICAgY2hhcmdlID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmNoYXJnZURpc3RhbmNlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KGNoYXJnZURpc3RhbmNlMik7XG4gICAgICBjaGFyZ2VEaXN0YW5jZTIgPSB4ICogeDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmdyYXZpdHkgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBncmF2aXR5O1xuICAgICAgZ3Jhdml0eSA9ICt4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UudGhldGEgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBNYXRoLnNxcnQodGhldGEyKTtcbiAgICAgIHRoZXRhMiA9IHggKiB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UuYWxwaGEgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBhbHBoYTtcbiAgICAgIHggPSAreDtcbiAgICAgIGlmIChhbHBoYSkge1xuICAgICAgICBpZiAoeCA+IDApIHtcbiAgICAgICAgICBhbHBoYSA9IHg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGltZXIuYyA9IG51bGwsIHRpbWVyLnQgPSBOYU4sIHRpbWVyID0gbnVsbDtcbiAgICAgICAgICBldmVudC5lbmQoe1xuICAgICAgICAgICAgdHlwZTogXCJlbmRcIixcbiAgICAgICAgICAgIGFscGhhOiBhbHBoYSA9IDBcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh4ID4gMCkge1xuICAgICAgICBldmVudC5zdGFydCh7XG4gICAgICAgICAgdHlwZTogXCJzdGFydFwiLFxuICAgICAgICAgIGFscGhhOiBhbHBoYSA9IHhcbiAgICAgICAgfSk7XG4gICAgICAgIHRpbWVyID0gZDNfdGltZXIoZm9yY2UudGljayk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5zdGFydCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsIG0gPSBsaW5rcy5sZW5ndGgsIHcgPSBzaXplWzBdLCBoID0gc2l6ZVsxXSwgbmVpZ2hib3JzLCBvO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICAobyA9IG5vZGVzW2ldKS5pbmRleCA9IGk7XG4gICAgICAgIG8ud2VpZ2h0ID0gMDtcbiAgICAgIH1cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHtcbiAgICAgICAgbyA9IGxpbmtzW2ldO1xuICAgICAgICBpZiAodHlwZW9mIG8uc291cmNlID09IFwibnVtYmVyXCIpIG8uc291cmNlID0gbm9kZXNbby5zb3VyY2VdO1xuICAgICAgICBpZiAodHlwZW9mIG8udGFyZ2V0ID09IFwibnVtYmVyXCIpIG8udGFyZ2V0ID0gbm9kZXNbby50YXJnZXRdO1xuICAgICAgICArK28uc291cmNlLndlaWdodDtcbiAgICAgICAgKytvLnRhcmdldC53ZWlnaHQ7XG4gICAgICB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG8gPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKGlzTmFOKG8ueCkpIG8ueCA9IHBvc2l0aW9uKFwieFwiLCB3KTtcbiAgICAgICAgaWYgKGlzTmFOKG8ueSkpIG8ueSA9IHBvc2l0aW9uKFwieVwiLCBoKTtcbiAgICAgICAgaWYgKGlzTmFOKG8ucHgpKSBvLnB4ID0gby54O1xuICAgICAgICBpZiAoaXNOYU4oby5weSkpIG8ucHkgPSBvLnk7XG4gICAgICB9XG4gICAgICBkaXN0YW5jZXMgPSBbXTtcbiAgICAgIGlmICh0eXBlb2YgbGlua0Rpc3RhbmNlID09PSBcImZ1bmN0aW9uXCIpIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIGRpc3RhbmNlc1tpXSA9ICtsaW5rRGlzdGFuY2UuY2FsbCh0aGlzLCBsaW5rc1tpXSwgaSk7IGVsc2UgZm9yIChpID0gMDsgaSA8IG07ICsraSkgZGlzdGFuY2VzW2ldID0gbGlua0Rpc3RhbmNlO1xuICAgICAgc3RyZW5ndGhzID0gW107XG4gICAgICBpZiAodHlwZW9mIGxpbmtTdHJlbmd0aCA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBzdHJlbmd0aHNbaV0gPSArbGlua1N0cmVuZ3RoLmNhbGwodGhpcywgbGlua3NbaV0sIGkpOyBlbHNlIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHN0cmVuZ3Roc1tpXSA9IGxpbmtTdHJlbmd0aDtcbiAgICAgIGNoYXJnZXMgPSBbXTtcbiAgICAgIGlmICh0eXBlb2YgY2hhcmdlID09PSBcImZ1bmN0aW9uXCIpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoYXJnZXNbaV0gPSArY2hhcmdlLmNhbGwodGhpcywgbm9kZXNbaV0sIGkpOyBlbHNlIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoYXJnZXNbaV0gPSBjaGFyZ2U7XG4gICAgICBmdW5jdGlvbiBwb3NpdGlvbihkaW1lbnNpb24sIHNpemUpIHtcbiAgICAgICAgaWYgKCFuZWlnaGJvcnMpIHtcbiAgICAgICAgICBuZWlnaGJvcnMgPSBuZXcgQXJyYXkobik7XG4gICAgICAgICAgZm9yIChqID0gMDsgaiA8IG47ICsraikge1xuICAgICAgICAgICAgbmVpZ2hib3JzW2pdID0gW107XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgICAgIHZhciBvID0gbGlua3Nbal07XG4gICAgICAgICAgICBuZWlnaGJvcnNbby5zb3VyY2UuaW5kZXhdLnB1c2goby50YXJnZXQpO1xuICAgICAgICAgICAgbmVpZ2hib3JzW28udGFyZ2V0LmluZGV4XS5wdXNoKG8uc291cmNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNhbmRpZGF0ZXMgPSBuZWlnaGJvcnNbaV0sIGogPSAtMSwgbCA9IGNhbmRpZGF0ZXMubGVuZ3RoLCB4O1xuICAgICAgICB3aGlsZSAoKytqIDwgbCkgaWYgKCFpc05hTih4ID0gY2FuZGlkYXRlc1tqXVtkaW1lbnNpb25dKSkgcmV0dXJuIHg7XG4gICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpICogc2l6ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmb3JjZS5yZXN1bWUoKTtcbiAgICB9O1xuICAgIGZvcmNlLnJlc3VtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGZvcmNlLmFscGhhKC4xKTtcbiAgICB9O1xuICAgIGZvcmNlLnN0b3AgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmb3JjZS5hbHBoYSgwKTtcbiAgICB9O1xuICAgIGZvcmNlLmRyYWcgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghZHJhZykgZHJhZyA9IGQzLmJlaGF2aW9yLmRyYWcoKS5vcmlnaW4oZDNfaWRlbnRpdHkpLm9uKFwiZHJhZ3N0YXJ0LmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZURyYWdzdGFydCkub24oXCJkcmFnLmZvcmNlXCIsIGRyYWdtb3ZlKS5vbihcImRyYWdlbmQuZm9yY2VcIiwgZDNfbGF5b3V0X2ZvcmNlRHJhZ2VuZCk7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkcmFnO1xuICAgICAgdGhpcy5vbihcIm1vdXNlb3Zlci5mb3JjZVwiLCBkM19sYXlvdXRfZm9yY2VNb3VzZW92ZXIpLm9uKFwibW91c2VvdXQuZm9yY2VcIiwgZDNfbGF5b3V0X2ZvcmNlTW91c2VvdXQpLmNhbGwoZHJhZyk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBkcmFnbW92ZShkKSB7XG4gICAgICBkLnB4ID0gZDMuZXZlbnQueCwgZC5weSA9IGQzLmV2ZW50Lnk7XG4gICAgICBmb3JjZS5yZXN1bWUoKTtcbiAgICB9XG4gICAgcmV0dXJuIGQzLnJlYmluZChmb3JjZSwgZXZlbnQsIFwib25cIik7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZURyYWdzdGFydChkKSB7XG4gICAgZC5maXhlZCB8PSAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZURyYWdlbmQoZCkge1xuICAgIGQuZml4ZWQgJj0gfjY7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlTW91c2VvdmVyKGQpIHtcbiAgICBkLmZpeGVkIHw9IDQ7XG4gICAgZC5weCA9IGQueCwgZC5weSA9IGQueTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VNb3VzZW91dChkKSB7XG4gICAgZC5maXhlZCAmPSB+NDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VBY2N1bXVsYXRlKHF1YWQsIGFscGhhLCBjaGFyZ2VzKSB7XG4gICAgdmFyIGN4ID0gMCwgY3kgPSAwO1xuICAgIHF1YWQuY2hhcmdlID0gMDtcbiAgICBpZiAoIXF1YWQubGVhZikge1xuICAgICAgdmFyIG5vZGVzID0gcXVhZC5ub2RlcywgbiA9IG5vZGVzLmxlbmd0aCwgaSA9IC0xLCBjO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgYyA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAoYyA9PSBudWxsKSBjb250aW51ZTtcbiAgICAgICAgZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZShjLCBhbHBoYSwgY2hhcmdlcyk7XG4gICAgICAgIHF1YWQuY2hhcmdlICs9IGMuY2hhcmdlO1xuICAgICAgICBjeCArPSBjLmNoYXJnZSAqIGMuY3g7XG4gICAgICAgIGN5ICs9IGMuY2hhcmdlICogYy5jeTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHF1YWQucG9pbnQpIHtcbiAgICAgIGlmICghcXVhZC5sZWFmKSB7XG4gICAgICAgIHF1YWQucG9pbnQueCArPSBNYXRoLnJhbmRvbSgpIC0gLjU7XG4gICAgICAgIHF1YWQucG9pbnQueSArPSBNYXRoLnJhbmRvbSgpIC0gLjU7XG4gICAgICB9XG4gICAgICB2YXIgayA9IGFscGhhICogY2hhcmdlc1txdWFkLnBvaW50LmluZGV4XTtcbiAgICAgIHF1YWQuY2hhcmdlICs9IHF1YWQucG9pbnRDaGFyZ2UgPSBrO1xuICAgICAgY3ggKz0gayAqIHF1YWQucG9pbnQueDtcbiAgICAgIGN5ICs9IGsgKiBxdWFkLnBvaW50Lnk7XG4gICAgfVxuICAgIHF1YWQuY3ggPSBjeCAvIHF1YWQuY2hhcmdlO1xuICAgIHF1YWQuY3kgPSBjeSAvIHF1YWQuY2hhcmdlO1xuICB9XG4gIHZhciBkM19sYXlvdXRfZm9yY2VMaW5rRGlzdGFuY2UgPSAyMCwgZDNfbGF5b3V0X2ZvcmNlTGlua1N0cmVuZ3RoID0gMSwgZDNfbGF5b3V0X2ZvcmNlQ2hhcmdlRGlzdGFuY2UyID0gSW5maW5pdHk7XG4gIGQzLmxheW91dC5oaWVyYXJjaHkgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc29ydCA9IGQzX2xheW91dF9oaWVyYXJjaHlTb3J0LCBjaGlsZHJlbiA9IGQzX2xheW91dF9oaWVyYXJjaHlDaGlsZHJlbiwgdmFsdWUgPSBkM19sYXlvdXRfaGllcmFyY2h5VmFsdWU7XG4gICAgZnVuY3Rpb24gaGllcmFyY2h5KHJvb3QpIHtcbiAgICAgIHZhciBzdGFjayA9IFsgcm9vdCBdLCBub2RlcyA9IFtdLCBub2RlO1xuICAgICAgcm9vdC5kZXB0aCA9IDA7XG4gICAgICB3aGlsZSAoKG5vZGUgPSBzdGFjay5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICBpZiAoKGNoaWxkcyA9IGNoaWxkcmVuLmNhbGwoaGllcmFyY2h5LCBub2RlLCBub2RlLmRlcHRoKSkgJiYgKG4gPSBjaGlsZHMubGVuZ3RoKSkge1xuICAgICAgICAgIHZhciBuLCBjaGlsZHMsIGNoaWxkO1xuICAgICAgICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgICAgICAgc3RhY2sucHVzaChjaGlsZCA9IGNoaWxkc1tuXSk7XG4gICAgICAgICAgICBjaGlsZC5wYXJlbnQgPSBub2RlO1xuICAgICAgICAgICAgY2hpbGQuZGVwdGggPSBub2RlLmRlcHRoICsgMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHZhbHVlKSBub2RlLnZhbHVlID0gMDtcbiAgICAgICAgICBub2RlLmNoaWxkcmVuID0gY2hpbGRzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh2YWx1ZSkgbm9kZS52YWx1ZSA9ICt2YWx1ZS5jYWxsKGhpZXJhcmNoeSwgbm9kZSwgbm9kZS5kZXB0aCkgfHwgMDtcbiAgICAgICAgICBkZWxldGUgbm9kZS5jaGlsZHJlbjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgY2hpbGRzLCBwYXJlbnQ7XG4gICAgICAgIGlmIChzb3J0ICYmIChjaGlsZHMgPSBub2RlLmNoaWxkcmVuKSkgY2hpbGRzLnNvcnQoc29ydCk7XG4gICAgICAgIGlmICh2YWx1ZSAmJiAocGFyZW50ID0gbm9kZS5wYXJlbnQpKSBwYXJlbnQudmFsdWUgKz0gbm9kZS52YWx1ZTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBoaWVyYXJjaHkuc29ydCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnQ7XG4gICAgICBzb3J0ID0geDtcbiAgICAgIHJldHVybiBoaWVyYXJjaHk7XG4gICAgfTtcbiAgICBoaWVyYXJjaHkuY2hpbGRyZW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjaGlsZHJlbjtcbiAgICAgIGNoaWxkcmVuID0geDtcbiAgICAgIHJldHVybiBoaWVyYXJjaHk7XG4gICAgfTtcbiAgICBoaWVyYXJjaHkudmFsdWUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB2YWx1ZTtcbiAgICAgIHZhbHVlID0geDtcbiAgICAgIHJldHVybiBoaWVyYXJjaHk7XG4gICAgfTtcbiAgICBoaWVyYXJjaHkucmV2YWx1ZSA9IGZ1bmN0aW9uKHJvb3QpIHtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdCwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgIGlmIChub2RlLmNoaWxkcmVuKSBub2RlLnZhbHVlID0gMDtcbiAgICAgICAgfSk7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICB2YXIgcGFyZW50O1xuICAgICAgICAgIGlmICghbm9kZS5jaGlsZHJlbikgbm9kZS52YWx1ZSA9ICt2YWx1ZS5jYWxsKGhpZXJhcmNoeSwgbm9kZSwgbm9kZS5kZXB0aCkgfHwgMDtcbiAgICAgICAgICBpZiAocGFyZW50ID0gbm9kZS5wYXJlbnQpIHBhcmVudC52YWx1ZSArPSBub2RlLnZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByb290O1xuICAgIH07XG4gICAgcmV0dXJuIGhpZXJhcmNoeTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChvYmplY3QsIGhpZXJhcmNoeSkge1xuICAgIGQzLnJlYmluZChvYmplY3QsIGhpZXJhcmNoeSwgXCJzb3J0XCIsIFwiY2hpbGRyZW5cIiwgXCJ2YWx1ZVwiKTtcbiAgICBvYmplY3Qubm9kZXMgPSBvYmplY3Q7XG4gICAgb2JqZWN0LmxpbmtzID0gZDNfbGF5b3V0X2hpZXJhcmNoeUxpbmtzO1xuICAgIHJldHVybiBvYmplY3Q7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKG5vZGUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIG5vZGVzID0gWyBub2RlIF07XG4gICAgd2hpbGUgKChub2RlID0gbm9kZXMucG9wKCkpICE9IG51bGwpIHtcbiAgICAgIGNhbGxiYWNrKG5vZGUpO1xuICAgICAgaWYgKChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pICYmIChuID0gY2hpbGRyZW4ubGVuZ3RoKSkge1xuICAgICAgICB2YXIgbiwgY2hpbGRyZW47XG4gICAgICAgIHdoaWxlICgtLW4gPj0gMCkgbm9kZXMucHVzaChjaGlsZHJlbltuXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKG5vZGUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIG5vZGVzID0gWyBub2RlIF0sIG5vZGVzMiA9IFtdO1xuICAgIHdoaWxlICgobm9kZSA9IG5vZGVzLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICBub2RlczIucHVzaChub2RlKTtcbiAgICAgIGlmICgoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbiwgY2hpbGRyZW47XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSBub2Rlcy5wdXNoKGNoaWxkcmVuW2ldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgd2hpbGUgKChub2RlID0gbm9kZXMyLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICBjYWxsYmFjayhub2RlKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeUNoaWxkcmVuKGQpIHtcbiAgICByZXR1cm4gZC5jaGlsZHJlbjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5VmFsdWUoZCkge1xuICAgIHJldHVybiBkLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlTb3J0KGEsIGIpIHtcbiAgICByZXR1cm4gYi52YWx1ZSAtIGEudmFsdWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeUxpbmtzKG5vZGVzKSB7XG4gICAgcmV0dXJuIGQzLm1lcmdlKG5vZGVzLm1hcChmdW5jdGlvbihwYXJlbnQpIHtcbiAgICAgIHJldHVybiAocGFyZW50LmNoaWxkcmVuIHx8IFtdKS5tYXAoZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzb3VyY2U6IHBhcmVudCxcbiAgICAgICAgICB0YXJnZXQ6IGNoaWxkXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9KSk7XG4gIH1cbiAgZDMubGF5b3V0LnBhcnRpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCksIHNpemUgPSBbIDEsIDEgXTtcbiAgICBmdW5jdGlvbiBwb3NpdGlvbihub2RlLCB4LCBkeCwgZHkpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBub2RlLnggPSB4O1xuICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGR5O1xuICAgICAgbm9kZS5keCA9IGR4O1xuICAgICAgbm9kZS5keSA9IGR5O1xuICAgICAgaWYgKGNoaWxkcmVuICYmIChuID0gY2hpbGRyZW4ubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuLCBjLCBkO1xuICAgICAgICBkeCA9IG5vZGUudmFsdWUgPyBkeCAvIG5vZGUudmFsdWUgOiAwO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIHBvc2l0aW9uKGMgPSBjaGlsZHJlbltpXSwgeCwgZCA9IGMudmFsdWUgKiBkeCwgZHkpO1xuICAgICAgICAgIHggKz0gZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBkZXB0aChub2RlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLCBkID0gMDtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbjtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIGQgPSBNYXRoLm1heChkLCBkZXB0aChjaGlsZHJlbltpXSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIDEgKyBkO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJ0aXRpb24oZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSk7XG4gICAgICBwb3NpdGlvbihub2Rlc1swXSwgMCwgc2l6ZVswXSwgc2l6ZVsxXSAvIGRlcHRoKG5vZGVzWzBdKSk7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIHBhcnRpdGlvbi5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSB4O1xuICAgICAgcmV0dXJuIHBhcnRpdGlvbjtcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKHBhcnRpdGlvbiwgaGllcmFyY2h5KTtcbiAgfTtcbiAgZDMubGF5b3V0LnBpZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IE51bWJlciwgc29ydCA9IGQzX2xheW91dF9waWVTb3J0QnlWYWx1ZSwgc3RhcnRBbmdsZSA9IDAsIGVuZEFuZ2xlID0gz4QsIHBhZEFuZ2xlID0gMDtcbiAgICBmdW5jdGlvbiBwaWUoZGF0YSkge1xuICAgICAgdmFyIG4gPSBkYXRhLmxlbmd0aCwgdmFsdWVzID0gZGF0YS5tYXAoZnVuY3Rpb24oZCwgaSkge1xuICAgICAgICByZXR1cm4gK3ZhbHVlLmNhbGwocGllLCBkLCBpKTtcbiAgICAgIH0pLCBhID0gKyh0eXBlb2Ygc3RhcnRBbmdsZSA9PT0gXCJmdW5jdGlvblwiID8gc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc3RhcnRBbmdsZSksIGRhID0gKHR5cGVvZiBlbmRBbmdsZSA9PT0gXCJmdW5jdGlvblwiID8gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGVuZEFuZ2xlKSAtIGEsIHAgPSBNYXRoLm1pbihNYXRoLmFicyhkYSkgLyBuLCArKHR5cGVvZiBwYWRBbmdsZSA9PT0gXCJmdW5jdGlvblwiID8gcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHBhZEFuZ2xlKSksIHBhID0gcCAqIChkYSA8IDAgPyAtMSA6IDEpLCBzdW0gPSBkMy5zdW0odmFsdWVzKSwgayA9IHN1bSA/IChkYSAtIG4gKiBwYSkgLyBzdW0gOiAwLCBpbmRleCA9IGQzLnJhbmdlKG4pLCBhcmNzID0gW10sIHY7XG4gICAgICBpZiAoc29ydCAhPSBudWxsKSBpbmRleC5zb3J0KHNvcnQgPT09IGQzX2xheW91dF9waWVTb3J0QnlWYWx1ZSA/IGZ1bmN0aW9uKGksIGopIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlc1tqXSAtIHZhbHVlc1tpXTtcbiAgICAgIH0gOiBmdW5jdGlvbihpLCBqKSB7XG4gICAgICAgIHJldHVybiBzb3J0KGRhdGFbaV0sIGRhdGFbal0pO1xuICAgICAgfSk7XG4gICAgICBpbmRleC5mb3JFYWNoKGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgYXJjc1tpXSA9IHtcbiAgICAgICAgICBkYXRhOiBkYXRhW2ldLFxuICAgICAgICAgIHZhbHVlOiB2ID0gdmFsdWVzW2ldLFxuICAgICAgICAgIHN0YXJ0QW5nbGU6IGEsXG4gICAgICAgICAgZW5kQW5nbGU6IGEgKz0gdiAqIGsgKyBwYSxcbiAgICAgICAgICBwYWRBbmdsZTogcFxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gYXJjcztcbiAgICB9XG4gICAgcGllLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmFsdWU7XG4gICAgICB2YWx1ZSA9IF87XG4gICAgICByZXR1cm4gcGllO1xuICAgIH07XG4gICAgcGllLnNvcnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0O1xuICAgICAgc29ydCA9IF87XG4gICAgICByZXR1cm4gcGllO1xuICAgIH07XG4gICAgcGllLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGFydEFuZ2xlO1xuICAgICAgc3RhcnRBbmdsZSA9IF87XG4gICAgICByZXR1cm4gcGllO1xuICAgIH07XG4gICAgcGllLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZW5kQW5nbGU7XG4gICAgICBlbmRBbmdsZSA9IF87XG4gICAgICByZXR1cm4gcGllO1xuICAgIH07XG4gICAgcGllLnBhZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkQW5nbGU7XG4gICAgICBwYWRBbmdsZSA9IF87XG4gICAgICByZXR1cm4gcGllO1xuICAgIH07XG4gICAgcmV0dXJuIHBpZTtcbiAgfTtcbiAgdmFyIGQzX2xheW91dF9waWVTb3J0QnlWYWx1ZSA9IHt9O1xuICBkMy5sYXlvdXQuc3RhY2sgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWVzID0gZDNfaWRlbnRpdHksIG9yZGVyID0gZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0LCBvZmZzZXQgPSBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvLCBvdXQgPSBkM19sYXlvdXRfc3RhY2tPdXQsIHggPSBkM19sYXlvdXRfc3RhY2tYLCB5ID0gZDNfbGF5b3V0X3N0YWNrWTtcbiAgICBmdW5jdGlvbiBzdGFjayhkYXRhLCBpbmRleCkge1xuICAgICAgaWYgKCEobiA9IGRhdGEubGVuZ3RoKSkgcmV0dXJuIGRhdGE7XG4gICAgICB2YXIgc2VyaWVzID0gZGF0YS5tYXAoZnVuY3Rpb24oZCwgaSkge1xuICAgICAgICByZXR1cm4gdmFsdWVzLmNhbGwoc3RhY2ssIGQsIGkpO1xuICAgICAgfSk7XG4gICAgICB2YXIgcG9pbnRzID0gc2VyaWVzLm1hcChmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkLm1hcChmdW5jdGlvbih2LCBpKSB7XG4gICAgICAgICAgcmV0dXJuIFsgeC5jYWxsKHN0YWNrLCB2LCBpKSwgeS5jYWxsKHN0YWNrLCB2LCBpKSBdO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgdmFyIG9yZGVycyA9IG9yZGVyLmNhbGwoc3RhY2ssIHBvaW50cywgaW5kZXgpO1xuICAgICAgc2VyaWVzID0gZDMucGVybXV0ZShzZXJpZXMsIG9yZGVycyk7XG4gICAgICBwb2ludHMgPSBkMy5wZXJtdXRlKHBvaW50cywgb3JkZXJzKTtcbiAgICAgIHZhciBvZmZzZXRzID0gb2Zmc2V0LmNhbGwoc3RhY2ssIHBvaW50cywgaW5kZXgpO1xuICAgICAgdmFyIG0gPSBzZXJpZXNbMF0ubGVuZ3RoLCBuLCBpLCBqLCBvO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICBvdXQuY2FsbChzdGFjaywgc2VyaWVzWzBdW2pdLCBvID0gb2Zmc2V0c1tqXSwgcG9pbnRzWzBdW2pdWzFdKTtcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIG91dC5jYWxsKHN0YWNrLCBzZXJpZXNbaV1bal0sIG8gKz0gcG9pbnRzW2kgLSAxXVtqXVsxXSwgcG9pbnRzW2ldW2pdWzFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIHN0YWNrLnZhbHVlcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlcztcbiAgICAgIHZhbHVlcyA9IHg7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay5vcmRlciA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yZGVyO1xuICAgICAgb3JkZXIgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGQzX2xheW91dF9zdGFja09yZGVycy5nZXQoeCkgfHwgZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sub2Zmc2V0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb2Zmc2V0O1xuICAgICAgb2Zmc2V0ID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBkM19sYXlvdXRfc3RhY2tPZmZzZXRzLmdldCh4KSB8fCBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvO1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sueCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHg7XG4gICAgICB4ID0gejtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLnkgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5O1xuICAgICAgeSA9IHo7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay5vdXQgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvdXQ7XG4gICAgICBvdXQgPSB6O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgcmV0dXJuIHN0YWNrO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tYKGQpIHtcbiAgICByZXR1cm4gZC54O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1koZCkge1xuICAgIHJldHVybiBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrT3V0KGQsIHkwLCB5KSB7XG4gICAgZC55MCA9IHkwO1xuICAgIGQueSA9IHk7XG4gIH1cbiAgdmFyIGQzX2xheW91dF9zdGFja09yZGVycyA9IGQzLm1hcCh7XG4gICAgXCJpbnNpZGUtb3V0XCI6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIGksIGosIG1heCA9IGRhdGEubWFwKGQzX2xheW91dF9zdGFja01heEluZGV4KSwgc3VtcyA9IGRhdGEubWFwKGQzX2xheW91dF9zdGFja1JlZHVjZVN1bSksIGluZGV4ID0gZDMucmFuZ2Uobikuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIHJldHVybiBtYXhbYV0gLSBtYXhbYl07XG4gICAgICB9KSwgdG9wID0gMCwgYm90dG9tID0gMCwgdG9wcyA9IFtdLCBib3R0b21zID0gW107XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGogPSBpbmRleFtpXTtcbiAgICAgICAgaWYgKHRvcCA8IGJvdHRvbSkge1xuICAgICAgICAgIHRvcCArPSBzdW1zW2pdO1xuICAgICAgICAgIHRvcHMucHVzaChqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBib3R0b20gKz0gc3Vtc1tqXTtcbiAgICAgICAgICBib3R0b21zLnB1c2goaik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBib3R0b21zLnJldmVyc2UoKS5jb25jYXQodG9wcyk7XG4gICAgfSxcbiAgICByZXZlcnNlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoZGF0YS5sZW5ndGgpLnJldmVyc2UoKTtcbiAgICB9LFxuICAgIFwiZGVmYXVsdFwiOiBkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHRcbiAgfSk7XG4gIHZhciBkM19sYXlvdXRfc3RhY2tPZmZzZXRzID0gZDMubWFwKHtcbiAgICBzaWxob3VldHRlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCBtID0gZGF0YVswXS5sZW5ndGgsIHN1bXMgPSBbXSwgbWF4ID0gMCwgaSwgaiwgbywgeTAgPSBbXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgZm9yIChpID0gMCwgbyA9IDA7IGkgPCBuOyBpKyspIG8gKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgaWYgKG8gPiBtYXgpIG1heCA9IG87XG4gICAgICAgIHN1bXMucHVzaChvKTtcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgeTBbal0gPSAobWF4IC0gc3Vtc1tqXSkgLyAyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHkwO1xuICAgIH0sXG4gICAgd2lnZ2xlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCB4ID0gZGF0YVswXSwgbSA9IHgubGVuZ3RoLCBpLCBqLCBrLCBzMSwgczIsIHMzLCBkeCwgbywgbzAsIHkwID0gW107XG4gICAgICB5MFswXSA9IG8gPSBvMCA9IDA7XG4gICAgICBmb3IgKGogPSAxOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIHMxID0gMDsgaSA8IG47ICsraSkgczEgKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgZm9yIChpID0gMCwgczIgPSAwLCBkeCA9IHhbal1bMF0gLSB4W2ogLSAxXVswXTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGZvciAoayA9IDAsIHMzID0gKGRhdGFbaV1bal1bMV0gLSBkYXRhW2ldW2ogLSAxXVsxXSkgLyAoMiAqIGR4KTsgayA8IGk7ICsraykge1xuICAgICAgICAgICAgczMgKz0gKGRhdGFba11bal1bMV0gLSBkYXRhW2tdW2ogLSAxXVsxXSkgLyBkeDtcbiAgICAgICAgICB9XG4gICAgICAgICAgczIgKz0gczMgKiBkYXRhW2ldW2pdWzFdO1xuICAgICAgICB9XG4gICAgICAgIHkwW2pdID0gbyAtPSBzMSA/IHMyIC8gczEgKiBkeCA6IDA7XG4gICAgICAgIGlmIChvIDwgbzApIG8wID0gbztcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHkwW2pdIC09IG8wO1xuICAgICAgcmV0dXJuIHkwO1xuICAgIH0sXG4gICAgZXhwYW5kOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCBtID0gZGF0YVswXS5sZW5ndGgsIGsgPSAxIC8gbiwgaSwgaiwgbywgeTAgPSBbXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgZm9yIChpID0gMCwgbyA9IDA7IGkgPCBuOyBpKyspIG8gKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgaWYgKG8pIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIGRhdGFbaV1bal1bMV0gLz0gbzsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSBkYXRhW2ldW2pdWzFdID0gaztcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHkwW2pdID0gMDtcbiAgICAgIHJldHVybiB5MDtcbiAgICB9LFxuICAgIHplcm86IGQzX2xheW91dF9zdGFja09mZnNldFplcm9cbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdChkYXRhKSB7XG4gICAgcmV0dXJuIGQzLnJhbmdlKGRhdGEubGVuZ3RoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvKGRhdGEpIHtcbiAgICB2YXIgaiA9IC0xLCBtID0gZGF0YVswXS5sZW5ndGgsIHkwID0gW107XG4gICAgd2hpbGUgKCsraiA8IG0pIHkwW2pdID0gMDtcbiAgICByZXR1cm4geTA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgoYXJyYXkpIHtcbiAgICB2YXIgaSA9IDEsIGogPSAwLCB2ID0gYXJyYXlbMF1bMV0sIGssIG4gPSBhcnJheS5sZW5ndGg7XG4gICAgZm9yICg7aSA8IG47ICsraSkge1xuICAgICAgaWYgKChrID0gYXJyYXlbaV1bMV0pID4gdikge1xuICAgICAgICBqID0gaTtcbiAgICAgICAgdiA9IGs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBqO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1JlZHVjZVN1bShkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKGQzX2xheW91dF9zdGFja1N1bSwgMCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrU3VtKHAsIGQpIHtcbiAgICByZXR1cm4gcCArIGRbMV07XG4gIH1cbiAgZDMubGF5b3V0Lmhpc3RvZ3JhbSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBmcmVxdWVuY3kgPSB0cnVlLCB2YWx1ZXIgPSBOdW1iZXIsIHJhbmdlciA9IGQzX2xheW91dF9oaXN0b2dyYW1SYW5nZSwgYmlubmVyID0gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpblN0dXJnZXM7XG4gICAgZnVuY3Rpb24gaGlzdG9ncmFtKGRhdGEsIGkpIHtcbiAgICAgIHZhciBiaW5zID0gW10sIHZhbHVlcyA9IGRhdGEubWFwKHZhbHVlciwgdGhpcyksIHJhbmdlID0gcmFuZ2VyLmNhbGwodGhpcywgdmFsdWVzLCBpKSwgdGhyZXNob2xkcyA9IGJpbm5lci5jYWxsKHRoaXMsIHJhbmdlLCB2YWx1ZXMsIGkpLCBiaW4sIGkgPSAtMSwgbiA9IHZhbHVlcy5sZW5ndGgsIG0gPSB0aHJlc2hvbGRzLmxlbmd0aCAtIDEsIGsgPSBmcmVxdWVuY3kgPyAxIDogMSAvIG4sIHg7XG4gICAgICB3aGlsZSAoKytpIDwgbSkge1xuICAgICAgICBiaW4gPSBiaW5zW2ldID0gW107XG4gICAgICAgIGJpbi5keCA9IHRocmVzaG9sZHNbaSArIDFdIC0gKGJpbi54ID0gdGhyZXNob2xkc1tpXSk7XG4gICAgICAgIGJpbi55ID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChtID4gMCkge1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgeCA9IHZhbHVlc1tpXTtcbiAgICAgICAgICBpZiAoeCA+PSByYW5nZVswXSAmJiB4IDw9IHJhbmdlWzFdKSB7XG4gICAgICAgICAgICBiaW4gPSBiaW5zW2QzLmJpc2VjdCh0aHJlc2hvbGRzLCB4LCAxLCBtKSAtIDFdO1xuICAgICAgICAgICAgYmluLnkgKz0gaztcbiAgICAgICAgICAgIGJpbi5wdXNoKGRhdGFbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGJpbnM7XG4gICAgfVxuICAgIGhpc3RvZ3JhbS52YWx1ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlcjtcbiAgICAgIHZhbHVlciA9IHg7XG4gICAgICByZXR1cm4gaGlzdG9ncmFtO1xuICAgIH07XG4gICAgaGlzdG9ncmFtLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2VyO1xuICAgICAgcmFuZ2VyID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICBoaXN0b2dyYW0uYmlucyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGJpbm5lcjtcbiAgICAgIGJpbm5lciA9IHR5cGVvZiB4ID09PSBcIm51bWJlclwiID8gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIGQzX2xheW91dF9oaXN0b2dyYW1CaW5GaXhlZChyYW5nZSwgeCk7XG4gICAgICB9IDogZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICBoaXN0b2dyYW0uZnJlcXVlbmN5ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZnJlcXVlbmN5O1xuICAgICAgZnJlcXVlbmN5ID0gISF4O1xuICAgICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgICB9O1xuICAgIHJldHVybiBoaXN0b2dyYW07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzKHJhbmdlLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkKHJhbmdlLCBNYXRoLmNlaWwoTWF0aC5sb2codmFsdWVzLmxlbmd0aCkgLyBNYXRoLkxOMiArIDEpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGlzdG9ncmFtQmluRml4ZWQocmFuZ2UsIG4pIHtcbiAgICB2YXIgeCA9IC0xLCBiID0gK3JhbmdlWzBdLCBtID0gKHJhbmdlWzFdIC0gYikgLyBuLCBmID0gW107XG4gICAgd2hpbGUgKCsreCA8PSBuKSBmW3hdID0gbSAqIHggKyBiO1xuICAgIHJldHVybiBmO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaXN0b2dyYW1SYW5nZSh2YWx1ZXMpIHtcbiAgICByZXR1cm4gWyBkMy5taW4odmFsdWVzKSwgZDMubWF4KHZhbHVlcykgXTtcbiAgfVxuICBkMy5sYXlvdXQucGFjayA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChkM19sYXlvdXRfcGFja1NvcnQpLCBwYWRkaW5nID0gMCwgc2l6ZSA9IFsgMSwgMSBdLCByYWRpdXM7XG4gICAgZnVuY3Rpb24gcGFjayhkLCBpKSB7XG4gICAgICB2YXIgbm9kZXMgPSBoaWVyYXJjaHkuY2FsbCh0aGlzLCBkLCBpKSwgcm9vdCA9IG5vZGVzWzBdLCB3ID0gc2l6ZVswXSwgaCA9IHNpemVbMV0sIHIgPSByYWRpdXMgPT0gbnVsbCA/IE1hdGguc3FydCA6IHR5cGVvZiByYWRpdXMgPT09IFwiZnVuY3Rpb25cIiA/IHJhZGl1cyA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmFkaXVzO1xuICAgICAgfTtcbiAgICAgIHJvb3QueCA9IHJvb3QueSA9IDA7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihkKSB7XG4gICAgICAgIGQuciA9ICtyKGQudmFsdWUpO1xuICAgICAgfSk7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBkM19sYXlvdXRfcGFja1NpYmxpbmdzKTtcbiAgICAgIGlmIChwYWRkaW5nKSB7XG4gICAgICAgIHZhciBkciA9IHBhZGRpbmcgKiAocmFkaXVzID8gMSA6IE1hdGgubWF4KDIgKiByb290LnIgLyB3LCAyICogcm9vdC5yIC8gaCkpIC8gMjtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGQuciArPSBkcjtcbiAgICAgICAgfSk7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGQzX2xheW91dF9wYWNrU2libGluZ3MpO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgZC5yIC09IGRyO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGQzX2xheW91dF9wYWNrVHJhbnNmb3JtKHJvb3QsIHcgLyAyLCBoIC8gMiwgcmFkaXVzID8gMSA6IDEgLyBNYXRoLm1heCgyICogcm9vdC5yIC8gdywgMiAqIHJvb3QuciAvIGgpKTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgcGFjay5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSBfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICBwYWNrLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhZGl1cztcbiAgICAgIHJhZGl1cyA9IF8gPT0gbnVsbCB8fCB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6ICtfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICBwYWNrLnBhZGRpbmcgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRkaW5nO1xuICAgICAgcGFkZGluZyA9ICtfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChwYWNrLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1NvcnQoYSwgYikge1xuICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja0luc2VydChhLCBiKSB7XG4gICAgdmFyIGMgPSBhLl9wYWNrX25leHQ7XG4gICAgYS5fcGFja19uZXh0ID0gYjtcbiAgICBiLl9wYWNrX3ByZXYgPSBhO1xuICAgIGIuX3BhY2tfbmV4dCA9IGM7XG4gICAgYy5fcGFja19wcmV2ID0gYjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1NwbGljZShhLCBiKSB7XG4gICAgYS5fcGFja19uZXh0ID0gYjtcbiAgICBiLl9wYWNrX3ByZXYgPSBhO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhhLCBiKSB7XG4gICAgdmFyIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueSwgZHIgPSBhLnIgKyBiLnI7XG4gICAgcmV0dXJuIC45OTkgKiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tTaWJsaW5ncyhub2RlKSB7XG4gICAgaWYgKCEobm9kZXMgPSBub2RlLmNoaWxkcmVuKSB8fCAhKG4gPSBub2Rlcy5sZW5ndGgpKSByZXR1cm47XG4gICAgdmFyIG5vZGVzLCB4TWluID0gSW5maW5pdHksIHhNYXggPSAtSW5maW5pdHksIHlNaW4gPSBJbmZpbml0eSwgeU1heCA9IC1JbmZpbml0eSwgYSwgYiwgYywgaSwgaiwgaywgbjtcbiAgICBmdW5jdGlvbiBib3VuZChub2RlKSB7XG4gICAgICB4TWluID0gTWF0aC5taW4obm9kZS54IC0gbm9kZS5yLCB4TWluKTtcbiAgICAgIHhNYXggPSBNYXRoLm1heChub2RlLnggKyBub2RlLnIsIHhNYXgpO1xuICAgICAgeU1pbiA9IE1hdGgubWluKG5vZGUueSAtIG5vZGUuciwgeU1pbik7XG4gICAgICB5TWF4ID0gTWF0aC5tYXgobm9kZS55ICsgbm9kZS5yLCB5TWF4KTtcbiAgICB9XG4gICAgbm9kZXMuZm9yRWFjaChkM19sYXlvdXRfcGFja0xpbmspO1xuICAgIGEgPSBub2Rlc1swXTtcbiAgICBhLnggPSAtYS5yO1xuICAgIGEueSA9IDA7XG4gICAgYm91bmQoYSk7XG4gICAgaWYgKG4gPiAxKSB7XG4gICAgICBiID0gbm9kZXNbMV07XG4gICAgICBiLnggPSBiLnI7XG4gICAgICBiLnkgPSAwO1xuICAgICAgYm91bmQoYik7XG4gICAgICBpZiAobiA+IDIpIHtcbiAgICAgICAgYyA9IG5vZGVzWzJdO1xuICAgICAgICBkM19sYXlvdXRfcGFja1BsYWNlKGEsIGIsIGMpO1xuICAgICAgICBib3VuZChjKTtcbiAgICAgICAgZDNfbGF5b3V0X3BhY2tJbnNlcnQoYSwgYyk7XG4gICAgICAgIGEuX3BhY2tfcHJldiA9IGM7XG4gICAgICAgIGQzX2xheW91dF9wYWNrSW5zZXJ0KGMsIGIpO1xuICAgICAgICBiID0gYS5fcGFja19uZXh0O1xuICAgICAgICBmb3IgKGkgPSAzOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgZDNfbGF5b3V0X3BhY2tQbGFjZShhLCBiLCBjID0gbm9kZXNbaV0pO1xuICAgICAgICAgIHZhciBpc2VjdCA9IDAsIHMxID0gMSwgczIgPSAxO1xuICAgICAgICAgIGZvciAoaiA9IGIuX3BhY2tfbmV4dDsgaiAhPT0gYjsgaiA9IGouX3BhY2tfbmV4dCwgczErKykge1xuICAgICAgICAgICAgaWYgKGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhqLCBjKSkge1xuICAgICAgICAgICAgICBpc2VjdCA9IDE7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNlY3QgPT0gMSkge1xuICAgICAgICAgICAgZm9yIChrID0gYS5fcGFja19wcmV2OyBrICE9PSBqLl9wYWNrX3ByZXY7IGsgPSBrLl9wYWNrX3ByZXYsIHMyKyspIHtcbiAgICAgICAgICAgICAgaWYgKGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhrLCBjKSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpc2VjdCkge1xuICAgICAgICAgICAgaWYgKHMxIDwgczIgfHwgczEgPT0gczIgJiYgYi5yIDwgYS5yKSBkM19sYXlvdXRfcGFja1NwbGljZShhLCBiID0gaik7IGVsc2UgZDNfbGF5b3V0X3BhY2tTcGxpY2UoYSA9IGssIGIpO1xuICAgICAgICAgICAgaS0tO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkM19sYXlvdXRfcGFja0luc2VydChhLCBjKTtcbiAgICAgICAgICAgIGIgPSBjO1xuICAgICAgICAgICAgYm91bmQoYyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBjeCA9ICh4TWluICsgeE1heCkgLyAyLCBjeSA9ICh5TWluICsgeU1heCkgLyAyLCBjciA9IDA7XG4gICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgYyA9IG5vZGVzW2ldO1xuICAgICAgYy54IC09IGN4O1xuICAgICAgYy55IC09IGN5O1xuICAgICAgY3IgPSBNYXRoLm1heChjciwgYy5yICsgTWF0aC5zcXJ0KGMueCAqIGMueCArIGMueSAqIGMueSkpO1xuICAgIH1cbiAgICBub2RlLnIgPSBjcjtcbiAgICBub2Rlcy5mb3JFYWNoKGQzX2xheW91dF9wYWNrVW5saW5rKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja0xpbmsobm9kZSkge1xuICAgIG5vZGUuX3BhY2tfbmV4dCA9IG5vZGUuX3BhY2tfcHJldiA9IG5vZGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tVbmxpbmsobm9kZSkge1xuICAgIGRlbGV0ZSBub2RlLl9wYWNrX25leHQ7XG4gICAgZGVsZXRlIG5vZGUuX3BhY2tfcHJldjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1RyYW5zZm9ybShub2RlLCB4LCB5LCBrKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICBub2RlLnggPSB4ICs9IGsgKiBub2RlLng7XG4gICAgbm9kZS55ID0geSArPSBrICogbm9kZS55O1xuICAgIG5vZGUuciAqPSBrO1xuICAgIGlmIChjaGlsZHJlbikge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGNoaWxkcmVuLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19sYXlvdXRfcGFja1RyYW5zZm9ybShjaGlsZHJlbltpXSwgeCwgeSwgayk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrUGxhY2UoYSwgYiwgYykge1xuICAgIHZhciBkYiA9IGEuciArIGMuciwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICAgIGlmIChkYiAmJiAoZHggfHwgZHkpKSB7XG4gICAgICB2YXIgZGEgPSBiLnIgKyBjLnIsIGRjID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICBkYSAqPSBkYTtcbiAgICAgIGRiICo9IGRiO1xuICAgICAgdmFyIHggPSAuNSArIChkYiAtIGRhKSAvICgyICogZGMpLCB5ID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIDIgKiBkYSAqIChkYiArIGRjKSAtIChkYiAtPSBkYykgKiBkYiAtIGRhICogZGEpKSAvICgyICogZGMpO1xuICAgICAgYy54ID0gYS54ICsgeCAqIGR4ICsgeSAqIGR5O1xuICAgICAgYy55ID0gYS55ICsgeCAqIGR5IC0geSAqIGR4O1xuICAgIH0gZWxzZSB7XG4gICAgICBjLnggPSBhLnggKyBkYjtcbiAgICAgIGMueSA9IGEueTtcbiAgICB9XG4gIH1cbiAgZDMubGF5b3V0LnRyZWUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLnNvcnQobnVsbCkudmFsdWUobnVsbCksIHNlcGFyYXRpb24gPSBkM19sYXlvdXRfdHJlZVNlcGFyYXRpb24sIHNpemUgPSBbIDEsIDEgXSwgbm9kZVNpemUgPSBudWxsO1xuICAgIGZ1bmN0aW9uIHRyZWUoZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSksIHJvb3QwID0gbm9kZXNbMF0sIHJvb3QxID0gd3JhcFRyZWUocm9vdDApO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdDEsIGZpcnN0V2FsayksIHJvb3QxLnBhcmVudC5tID0gLXJvb3QxLno7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDEsIHNlY29uZFdhbGspO1xuICAgICAgaWYgKG5vZGVTaXplKSBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDAsIHNpemVOb2RlKTsgZWxzZSB7XG4gICAgICAgIHZhciBsZWZ0ID0gcm9vdDAsIHJpZ2h0ID0gcm9vdDAsIGJvdHRvbSA9IHJvb3QwO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDAsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICBpZiAobm9kZS54IDwgbGVmdC54KSBsZWZ0ID0gbm9kZTtcbiAgICAgICAgICBpZiAobm9kZS54ID4gcmlnaHQueCkgcmlnaHQgPSBub2RlO1xuICAgICAgICAgIGlmIChub2RlLmRlcHRoID4gYm90dG9tLmRlcHRoKSBib3R0b20gPSBub2RlO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIHR4ID0gc2VwYXJhdGlvbihsZWZ0LCByaWdodCkgLyAyIC0gbGVmdC54LCBreCA9IHNpemVbMF0gLyAocmlnaHQueCArIHNlcGFyYXRpb24ocmlnaHQsIGxlZnQpIC8gMiArIHR4KSwga3kgPSBzaXplWzFdIC8gKGJvdHRvbS5kZXB0aCB8fCAxKTtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QwLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgbm9kZS54ID0gKG5vZGUueCArIHR4KSAqIGt4O1xuICAgICAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBreTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdyYXBUcmVlKHJvb3QwKSB7XG4gICAgICB2YXIgcm9vdDEgPSB7XG4gICAgICAgIEE6IG51bGwsXG4gICAgICAgIGNoaWxkcmVuOiBbIHJvb3QwIF1cbiAgICAgIH0sIHF1ZXVlID0gWyByb290MSBdLCBub2RlMTtcbiAgICAgIHdoaWxlICgobm9kZTEgPSBxdWV1ZS5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgICBmb3IgKHZhciBjaGlsZHJlbiA9IG5vZGUxLmNoaWxkcmVuLCBjaGlsZCwgaSA9IDAsIG4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBxdWV1ZS5wdXNoKChjaGlsZHJlbltpXSA9IGNoaWxkID0ge1xuICAgICAgICAgICAgXzogY2hpbGRyZW5baV0sXG4gICAgICAgICAgICBwYXJlbnQ6IG5vZGUxLFxuICAgICAgICAgICAgY2hpbGRyZW46IChjaGlsZCA9IGNoaWxkcmVuW2ldLmNoaWxkcmVuKSAmJiBjaGlsZC5zbGljZSgpIHx8IFtdLFxuICAgICAgICAgICAgQTogbnVsbCxcbiAgICAgICAgICAgIGE6IG51bGwsXG4gICAgICAgICAgICB6OiAwLFxuICAgICAgICAgICAgbTogMCxcbiAgICAgICAgICAgIGM6IDAsXG4gICAgICAgICAgICBzOiAwLFxuICAgICAgICAgICAgdDogbnVsbCxcbiAgICAgICAgICAgIGk6IGlcbiAgICAgICAgICB9KS5hID0gY2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcm9vdDEuY2hpbGRyZW5bMF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZpcnN0V2Fsayh2KSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuLCBzaWJsaW5ncyA9IHYucGFyZW50LmNoaWxkcmVuLCB3ID0gdi5pID8gc2libGluZ3Nbdi5pIC0gMV0gOiBudWxsO1xuICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBkM19sYXlvdXRfdHJlZVNoaWZ0KHYpO1xuICAgICAgICB2YXIgbWlkcG9pbnQgPSAoY2hpbGRyZW5bMF0ueiArIGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdLnopIC8gMjtcbiAgICAgICAgaWYgKHcpIHtcbiAgICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgICAgICB2Lm0gPSB2LnogLSBtaWRwb2ludDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2LnogPSBtaWRwb2ludDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh3KSB7XG4gICAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgICAgfVxuICAgICAgdi5wYXJlbnQuQSA9IGFwcG9ydGlvbih2LCB3LCB2LnBhcmVudC5BIHx8IHNpYmxpbmdzWzBdKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2Vjb25kV2Fsayh2KSB7XG4gICAgICB2Ll8ueCA9IHYueiArIHYucGFyZW50Lm07XG4gICAgICB2Lm0gKz0gdi5wYXJlbnQubTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXBwb3J0aW9uKHYsIHcsIGFuY2VzdG9yKSB7XG4gICAgICBpZiAodykge1xuICAgICAgICB2YXIgdmlwID0gdiwgdm9wID0gdiwgdmltID0gdywgdm9tID0gdmlwLnBhcmVudC5jaGlsZHJlblswXSwgc2lwID0gdmlwLm0sIHNvcCA9IHZvcC5tLCBzaW0gPSB2aW0ubSwgc29tID0gdm9tLm0sIHNoaWZ0O1xuICAgICAgICB3aGlsZSAodmltID0gZDNfbGF5b3V0X3RyZWVSaWdodCh2aW0pLCB2aXAgPSBkM19sYXlvdXRfdHJlZUxlZnQodmlwKSwgdmltICYmIHZpcCkge1xuICAgICAgICAgIHZvbSA9IGQzX2xheW91dF90cmVlTGVmdCh2b20pO1xuICAgICAgICAgIHZvcCA9IGQzX2xheW91dF90cmVlUmlnaHQodm9wKTtcbiAgICAgICAgICB2b3AuYSA9IHY7XG4gICAgICAgICAgc2hpZnQgPSB2aW0ueiArIHNpbSAtIHZpcC56IC0gc2lwICsgc2VwYXJhdGlvbih2aW0uXywgdmlwLl8pO1xuICAgICAgICAgIGlmIChzaGlmdCA+IDApIHtcbiAgICAgICAgICAgIGQzX2xheW91dF90cmVlTW92ZShkM19sYXlvdXRfdHJlZUFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpLCB2LCBzaGlmdCk7XG4gICAgICAgICAgICBzaXAgKz0gc2hpZnQ7XG4gICAgICAgICAgICBzb3AgKz0gc2hpZnQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNpbSArPSB2aW0ubTtcbiAgICAgICAgICBzaXAgKz0gdmlwLm07XG4gICAgICAgICAgc29tICs9IHZvbS5tO1xuICAgICAgICAgIHNvcCArPSB2b3AubTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmltICYmICFkM19sYXlvdXRfdHJlZVJpZ2h0KHZvcCkpIHtcbiAgICAgICAgICB2b3AudCA9IHZpbTtcbiAgICAgICAgICB2b3AubSArPSBzaW0gLSBzb3A7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpcCAmJiAhZDNfbGF5b3V0X3RyZWVMZWZ0KHZvbSkpIHtcbiAgICAgICAgICB2b20udCA9IHZpcDtcbiAgICAgICAgICB2b20ubSArPSBzaXAgLSBzb207XG4gICAgICAgICAgYW5jZXN0b3IgPSB2O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gYW5jZXN0b3I7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNpemVOb2RlKG5vZGUpIHtcbiAgICAgIG5vZGUueCAqPSBzaXplWzBdO1xuICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIHNpemVbMV07XG4gICAgfVxuICAgIHRyZWUuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNlcGFyYXRpb247XG4gICAgICBzZXBhcmF0aW9uID0geDtcbiAgICAgIHJldHVybiB0cmVlO1xuICAgIH07XG4gICAgdHJlZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBudWxsIDogc2l6ZTtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSA9PSBudWxsID8gc2l6ZU5vZGUgOiBudWxsO1xuICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfTtcbiAgICB0cmVlLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBzaXplIDogbnVsbDtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSA9PSBudWxsID8gbnVsbCA6IHNpemVOb2RlO1xuICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZCh0cmVlLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZVNlcGFyYXRpb24oYSwgYikge1xuICAgIHJldHVybiBhLnBhcmVudCA9PSBiLnBhcmVudCA/IDEgOiAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlTGVmdCh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbjtcbiAgICByZXR1cm4gY2hpbGRyZW4ubGVuZ3RoID8gY2hpbGRyZW5bMF0gOiB2LnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVSaWdodCh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbiwgbjtcbiAgICByZXR1cm4gKG4gPSBjaGlsZHJlbi5sZW5ndGgpID8gY2hpbGRyZW5bbiAtIDFdIDogdi50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlTW92ZSh3bSwgd3AsIHNoaWZ0KSB7XG4gICAgdmFyIGNoYW5nZSA9IHNoaWZ0IC8gKHdwLmkgLSB3bS5pKTtcbiAgICB3cC5jIC09IGNoYW5nZTtcbiAgICB3cC5zICs9IHNoaWZ0O1xuICAgIHdtLmMgKz0gY2hhbmdlO1xuICAgIHdwLnogKz0gc2hpZnQ7XG4gICAgd3AubSArPSBzaGlmdDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZVNoaWZ0KHYpIHtcbiAgICB2YXIgc2hpZnQgPSAwLCBjaGFuZ2UgPSAwLCBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sIGkgPSBjaGlsZHJlbi5sZW5ndGgsIHc7XG4gICAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgICB3ID0gY2hpbGRyZW5baV07XG4gICAgICB3LnogKz0gc2hpZnQ7XG4gICAgICB3Lm0gKz0gc2hpZnQ7XG4gICAgICBzaGlmdCArPSB3LnMgKyAoY2hhbmdlICs9IHcuYyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlQW5jZXN0b3IodmltLCB2LCBhbmNlc3Rvcikge1xuICAgIHJldHVybiB2aW0uYS5wYXJlbnQgPT09IHYucGFyZW50ID8gdmltLmEgOiBhbmNlc3RvcjtcbiAgfVxuICBkMy5sYXlvdXQuY2x1c3RlciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChudWxsKS52YWx1ZShudWxsKSwgc2VwYXJhdGlvbiA9IGQzX2xheW91dF90cmVlU2VwYXJhdGlvbiwgc2l6ZSA9IFsgMSwgMSBdLCBub2RlU2l6ZSA9IGZhbHNlO1xuICAgIGZ1bmN0aW9uIGNsdXN0ZXIoZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSksIHJvb3QgPSBub2Rlc1swXSwgcHJldmlvdXNOb2RlLCB4ID0gMDtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgIG5vZGUueCA9IGQzX2xheW91dF9jbHVzdGVyWChjaGlsZHJlbik7XG4gICAgICAgICAgbm9kZS55ID0gZDNfbGF5b3V0X2NsdXN0ZXJZKGNoaWxkcmVuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlLnggPSBwcmV2aW91c05vZGUgPyB4ICs9IHNlcGFyYXRpb24obm9kZSwgcHJldmlvdXNOb2RlKSA6IDA7XG4gICAgICAgICAgbm9kZS55ID0gMDtcbiAgICAgICAgICBwcmV2aW91c05vZGUgPSBub2RlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHZhciBsZWZ0ID0gZDNfbGF5b3V0X2NsdXN0ZXJMZWZ0KHJvb3QpLCByaWdodCA9IGQzX2xheW91dF9jbHVzdGVyUmlnaHQocm9vdCksIHgwID0gbGVmdC54IC0gc2VwYXJhdGlvbihsZWZ0LCByaWdodCkgLyAyLCB4MSA9IHJpZ2h0LnggKyBzZXBhcmF0aW9uKHJpZ2h0LCBsZWZ0KSAvIDI7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBub2RlU2l6ZSA/IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHJvb3QueCkgKiBzaXplWzBdO1xuICAgICAgICBub2RlLnkgPSAocm9vdC55IC0gbm9kZS55KSAqIHNpemVbMV07XG4gICAgICB9IDogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54IC0geDApIC8gKHgxIC0geDApICogc2l6ZVswXTtcbiAgICAgICAgbm9kZS55ID0gKDEgLSAocm9vdC55ID8gbm9kZS55IC8gcm9vdC55IDogMSkpICogc2l6ZVsxXTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBjbHVzdGVyLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzZXBhcmF0aW9uO1xuICAgICAgc2VwYXJhdGlvbiA9IHg7XG4gICAgICByZXR1cm4gY2x1c3RlcjtcbiAgICB9O1xuICAgIGNsdXN0ZXIuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gbnVsbCA6IHNpemU7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgPT0gbnVsbDtcbiAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgIH07XG4gICAgY2x1c3Rlci5ub2RlU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gc2l6ZSA6IG51bGw7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgIT0gbnVsbDtcbiAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQoY2x1c3RlciwgaGllcmFyY2h5KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJZKGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIDEgKyBkMy5tYXgoY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICByZXR1cm4gY2hpbGQueTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlclgoY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gY2hpbGRyZW4ucmVkdWNlKGZ1bmN0aW9uKHgsIGNoaWxkKSB7XG4gICAgICByZXR1cm4geCArIGNoaWxkLng7XG4gICAgfSwgMCkgLyBjaGlsZHJlbi5sZW5ndGg7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJMZWZ0KG5vZGUpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIHJldHVybiBjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPyBkM19sYXlvdXRfY2x1c3RlckxlZnQoY2hpbGRyZW5bMF0pIDogbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlclJpZ2h0KG5vZGUpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLCBuO1xuICAgIHJldHVybiBjaGlsZHJlbiAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkgPyBkM19sYXlvdXRfY2x1c3RlclJpZ2h0KGNoaWxkcmVuW24gLSAxXSkgOiBub2RlO1xuICB9XG4gIGQzLmxheW91dC50cmVlbWFwID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKSwgcm91bmQgPSBNYXRoLnJvdW5kLCBzaXplID0gWyAxLCAxIF0sIHBhZGRpbmcgPSBudWxsLCBwYWQgPSBkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwsIHN0aWNreSA9IGZhbHNlLCBzdGlja2llcywgbW9kZSA9IFwic3F1YXJpZnlcIiwgcmF0aW8gPSAuNSAqICgxICsgTWF0aC5zcXJ0KDUpKTtcbiAgICBmdW5jdGlvbiBzY2FsZShjaGlsZHJlbiwgaykge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGNoaWxkcmVuLmxlbmd0aCwgY2hpbGQsIGFyZWE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBhcmVhID0gKGNoaWxkID0gY2hpbGRyZW5baV0pLnZhbHVlICogKGsgPCAwID8gMCA6IGspO1xuICAgICAgICBjaGlsZC5hcmVhID0gaXNOYU4oYXJlYSkgfHwgYXJlYSA8PSAwID8gMCA6IGFyZWE7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNxdWFyaWZ5KG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgIHZhciByZWN0ID0gcGFkKG5vZGUpLCByb3cgPSBbXSwgcmVtYWluaW5nID0gY2hpbGRyZW4uc2xpY2UoKSwgY2hpbGQsIGJlc3QgPSBJbmZpbml0eSwgc2NvcmUsIHUgPSBtb2RlID09PSBcInNsaWNlXCIgPyByZWN0LmR4IDogbW9kZSA9PT0gXCJkaWNlXCIgPyByZWN0LmR5IDogbW9kZSA9PT0gXCJzbGljZS1kaWNlXCIgPyBub2RlLmRlcHRoICYgMSA/IHJlY3QuZHkgOiByZWN0LmR4IDogTWF0aC5taW4ocmVjdC5keCwgcmVjdC5keSksIG47XG4gICAgICAgIHNjYWxlKHJlbWFpbmluZywgcmVjdC5keCAqIHJlY3QuZHkgLyBub2RlLnZhbHVlKTtcbiAgICAgICAgcm93LmFyZWEgPSAwO1xuICAgICAgICB3aGlsZSAoKG4gPSByZW1haW5pbmcubGVuZ3RoKSA+IDApIHtcbiAgICAgICAgICByb3cucHVzaChjaGlsZCA9IHJlbWFpbmluZ1tuIC0gMV0pO1xuICAgICAgICAgIHJvdy5hcmVhICs9IGNoaWxkLmFyZWE7XG4gICAgICAgICAgaWYgKG1vZGUgIT09IFwic3F1YXJpZnlcIiB8fCAoc2NvcmUgPSB3b3JzdChyb3csIHUpKSA8PSBiZXN0KSB7XG4gICAgICAgICAgICByZW1haW5pbmcucG9wKCk7XG4gICAgICAgICAgICBiZXN0ID0gc2NvcmU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJvdy5hcmVhIC09IHJvdy5wb3AoKS5hcmVhO1xuICAgICAgICAgICAgcG9zaXRpb24ocm93LCB1LCByZWN0LCBmYWxzZSk7XG4gICAgICAgICAgICB1ID0gTWF0aC5taW4ocmVjdC5keCwgcmVjdC5keSk7XG4gICAgICAgICAgICByb3cubGVuZ3RoID0gcm93LmFyZWEgPSAwO1xuICAgICAgICAgICAgYmVzdCA9IEluZmluaXR5O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocm93Lmxlbmd0aCkge1xuICAgICAgICAgIHBvc2l0aW9uKHJvdywgdSwgcmVjdCwgdHJ1ZSk7XG4gICAgICAgICAgcm93Lmxlbmd0aCA9IHJvdy5hcmVhID0gMDtcbiAgICAgICAgfVxuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKHNxdWFyaWZ5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gc3RpY2tpZnkobm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHJlY3QgPSBwYWQobm9kZSksIHJlbWFpbmluZyA9IGNoaWxkcmVuLnNsaWNlKCksIGNoaWxkLCByb3cgPSBbXTtcbiAgICAgICAgc2NhbGUocmVtYWluaW5nLCByZWN0LmR4ICogcmVjdC5keSAvIG5vZGUudmFsdWUpO1xuICAgICAgICByb3cuYXJlYSA9IDA7XG4gICAgICAgIHdoaWxlIChjaGlsZCA9IHJlbWFpbmluZy5wb3AoKSkge1xuICAgICAgICAgIHJvdy5wdXNoKGNoaWxkKTtcbiAgICAgICAgICByb3cuYXJlYSArPSBjaGlsZC5hcmVhO1xuICAgICAgICAgIGlmIChjaGlsZC56ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uKHJvdywgY2hpbGQueiA/IHJlY3QuZHggOiByZWN0LmR5LCByZWN0LCAhcmVtYWluaW5nLmxlbmd0aCk7XG4gICAgICAgICAgICByb3cubGVuZ3RoID0gcm93LmFyZWEgPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKHN0aWNraWZ5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gd29yc3Qocm93LCB1KSB7XG4gICAgICB2YXIgcyA9IHJvdy5hcmVhLCByLCBybWF4ID0gMCwgcm1pbiA9IEluZmluaXR5LCBpID0gLTEsIG4gPSByb3cubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKCEociA9IHJvd1tpXS5hcmVhKSkgY29udGludWU7XG4gICAgICAgIGlmIChyIDwgcm1pbikgcm1pbiA9IHI7XG4gICAgICAgIGlmIChyID4gcm1heCkgcm1heCA9IHI7XG4gICAgICB9XG4gICAgICBzICo9IHM7XG4gICAgICB1ICo9IHU7XG4gICAgICByZXR1cm4gcyA/IE1hdGgubWF4KHUgKiBybWF4ICogcmF0aW8gLyBzLCBzIC8gKHUgKiBybWluICogcmF0aW8pKSA6IEluZmluaXR5O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb3NpdGlvbihyb3csIHUsIHJlY3QsIGZsdXNoKSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gcm93Lmxlbmd0aCwgeCA9IHJlY3QueCwgeSA9IHJlY3QueSwgdiA9IHUgPyByb3VuZChyb3cuYXJlYSAvIHUpIDogMCwgbztcbiAgICAgIGlmICh1ID09IHJlY3QuZHgpIHtcbiAgICAgICAgaWYgKGZsdXNoIHx8IHYgPiByZWN0LmR5KSB2ID0gcmVjdC5keTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBvID0gcm93W2ldO1xuICAgICAgICAgIG8ueCA9IHg7XG4gICAgICAgICAgby55ID0geTtcbiAgICAgICAgICBvLmR5ID0gdjtcbiAgICAgICAgICB4ICs9IG8uZHggPSBNYXRoLm1pbihyZWN0LnggKyByZWN0LmR4IC0geCwgdiA/IHJvdW5kKG8uYXJlYSAvIHYpIDogMCk7XG4gICAgICAgIH1cbiAgICAgICAgby56ID0gdHJ1ZTtcbiAgICAgICAgby5keCArPSByZWN0LnggKyByZWN0LmR4IC0geDtcbiAgICAgICAgcmVjdC55ICs9IHY7XG4gICAgICAgIHJlY3QuZHkgLT0gdjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChmbHVzaCB8fCB2ID4gcmVjdC5keCkgdiA9IHJlY3QuZHg7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgbyA9IHJvd1tpXTtcbiAgICAgICAgICBvLnggPSB4O1xuICAgICAgICAgIG8ueSA9IHk7XG4gICAgICAgICAgby5keCA9IHY7XG4gICAgICAgICAgeSArPSBvLmR5ID0gTWF0aC5taW4ocmVjdC55ICsgcmVjdC5keSAtIHksIHYgPyByb3VuZChvLmFyZWEgLyB2KSA6IDApO1xuICAgICAgICB9XG4gICAgICAgIG8ueiA9IGZhbHNlO1xuICAgICAgICBvLmR5ICs9IHJlY3QueSArIHJlY3QuZHkgLSB5O1xuICAgICAgICByZWN0LnggKz0gdjtcbiAgICAgICAgcmVjdC5keCAtPSB2O1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0cmVlbWFwKGQpIHtcbiAgICAgIHZhciBub2RlcyA9IHN0aWNraWVzIHx8IGhpZXJhcmNoeShkKSwgcm9vdCA9IG5vZGVzWzBdO1xuICAgICAgcm9vdC54ID0gcm9vdC55ID0gMDtcbiAgICAgIGlmIChyb290LnZhbHVlKSByb290LmR4ID0gc2l6ZVswXSwgcm9vdC5keSA9IHNpemVbMV07IGVsc2Ugcm9vdC5keCA9IHJvb3QuZHkgPSAwO1xuICAgICAgaWYgKHN0aWNraWVzKSBoaWVyYXJjaHkucmV2YWx1ZShyb290KTtcbiAgICAgIHNjYWxlKFsgcm9vdCBdLCByb290LmR4ICogcm9vdC5keSAvIHJvb3QudmFsdWUpO1xuICAgICAgKHN0aWNraWVzID8gc3RpY2tpZnkgOiBzcXVhcmlmeSkocm9vdCk7XG4gICAgICBpZiAoc3RpY2t5KSBzdGlja2llcyA9IG5vZGVzO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICB0cmVlbWFwLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IHg7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZGRpbmc7XG4gICAgICBmdW5jdGlvbiBwYWRGdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHZhciBwID0geC5jYWxsKHRyZWVtYXAsIG5vZGUsIG5vZGUuZGVwdGgpO1xuICAgICAgICByZXR1cm4gcCA9PSBudWxsID8gZDNfbGF5b3V0X3RyZWVtYXBQYWROdWxsKG5vZGUpIDogZDNfbGF5b3V0X3RyZWVtYXBQYWQobm9kZSwgdHlwZW9mIHAgPT09IFwibnVtYmVyXCIgPyBbIHAsIHAsIHAsIHAgXSA6IHApO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcGFkQ29uc3RhbnQobm9kZSkge1xuICAgICAgICByZXR1cm4gZDNfbGF5b3V0X3RyZWVtYXBQYWQobm9kZSwgeCk7XG4gICAgICB9XG4gICAgICB2YXIgdHlwZTtcbiAgICAgIHBhZCA9IChwYWRkaW5nID0geCkgPT0gbnVsbCA/IGQzX2xheW91dF90cmVlbWFwUGFkTnVsbCA6ICh0eXBlID0gdHlwZW9mIHgpID09PSBcImZ1bmN0aW9uXCIgPyBwYWRGdW5jdGlvbiA6IHR5cGUgPT09IFwibnVtYmVyXCIgPyAoeCA9IFsgeCwgeCwgeCwgeCBdLCBcbiAgICAgIHBhZENvbnN0YW50KSA6IHBhZENvbnN0YW50O1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcm91bmQgIT0gTnVtYmVyO1xuICAgICAgcm91bmQgPSB4ID8gTWF0aC5yb3VuZCA6IE51bWJlcjtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5zdGlja3kgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGlja3k7XG4gICAgICBzdGlja3kgPSB4O1xuICAgICAgc3RpY2tpZXMgPSBudWxsO1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnJhdGlvID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmF0aW87XG4gICAgICByYXRpbyA9IHg7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAubW9kZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG1vZGU7XG4gICAgICBtb2RlID0geCArIFwiXCI7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKHRyZWVtYXAsIGhpZXJhcmNoeSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlbWFwUGFkTnVsbChub2RlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IG5vZGUueCxcbiAgICAgIHk6IG5vZGUueSxcbiAgICAgIGR4OiBub2RlLmR4LFxuICAgICAgZHk6IG5vZGUuZHlcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlbWFwUGFkKG5vZGUsIHBhZGRpbmcpIHtcbiAgICB2YXIgeCA9IG5vZGUueCArIHBhZGRpbmdbM10sIHkgPSBub2RlLnkgKyBwYWRkaW5nWzBdLCBkeCA9IG5vZGUuZHggLSBwYWRkaW5nWzFdIC0gcGFkZGluZ1szXSwgZHkgPSBub2RlLmR5IC0gcGFkZGluZ1swXSAtIHBhZGRpbmdbMl07XG4gICAgaWYgKGR4IDwgMCkge1xuICAgICAgeCArPSBkeCAvIDI7XG4gICAgICBkeCA9IDA7XG4gICAgfVxuICAgIGlmIChkeSA8IDApIHtcbiAgICAgIHkgKz0gZHkgLyAyO1xuICAgICAgZHkgPSAwO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgeDogeCxcbiAgICAgIHk6IHksXG4gICAgICBkeDogZHgsXG4gICAgICBkeTogZHlcbiAgICB9O1xuICB9XG4gIGQzLnJhbmRvbSA9IHtcbiAgICBub3JtYWw6IGZ1bmN0aW9uKMK1LCDPgykge1xuICAgICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgaWYgKG4gPCAyKSDPgyA9IDE7XG4gICAgICBpZiAobiA8IDEpIMK1ID0gMDtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHgsIHksIHI7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICB4ID0gTWF0aC5yYW5kb20oKSAqIDIgLSAxO1xuICAgICAgICAgIHkgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgICAgICAgciA9IHggKiB4ICsgeSAqIHk7XG4gICAgICAgIH0gd2hpbGUgKCFyIHx8IHIgPiAxKTtcbiAgICAgICAgcmV0dXJuIMK1ICsgz4MgKiB4ICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2cocikgLyByKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBsb2dOb3JtYWw6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHJhbmRvbSA9IGQzLnJhbmRvbS5ub3JtYWwuYXBwbHkoZDMsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmV4cChyYW5kb20oKSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgYmF0ZXM6IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHZhciByYW5kb20gPSBkMy5yYW5kb20uaXJ3aW5IYWxsKG0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmFuZG9tKCkgLyBtO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGlyd2luSGFsbDogZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciBzID0gMCwgaiA9IDA7IGogPCBtOyBqKyspIHMgKz0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgcmV0dXJuIHM7XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgZDMuc2NhbGUgPSB7fTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSB7XG4gICAgdmFyIHN0YXJ0ID0gZG9tYWluWzBdLCBzdG9wID0gZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gc3RhcnQgPCBzdG9wID8gWyBzdGFydCwgc3RvcCBdIDogWyBzdG9wLCBzdGFydCBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlUmFuZ2Uoc2NhbGUpIHtcbiAgICByZXR1cm4gc2NhbGUucmFuZ2VFeHRlbnQgPyBzY2FsZS5yYW5nZUV4dGVudCgpIDogZDNfc2NhbGVFeHRlbnQoc2NhbGUucmFuZ2UoKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfYmlsaW5lYXIoZG9tYWluLCByYW5nZSwgdW5pbnRlcnBvbGF0ZSwgaW50ZXJwb2xhdGUpIHtcbiAgICB2YXIgdSA9IHVuaW50ZXJwb2xhdGUoZG9tYWluWzBdLCBkb21haW5bMV0pLCBpID0gaW50ZXJwb2xhdGUocmFuZ2VbMF0sIHJhbmdlWzFdKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIGkodSh4KSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9uaWNlKGRvbWFpbiwgbmljZSkge1xuICAgIHZhciBpMCA9IDAsIGkxID0gZG9tYWluLmxlbmd0aCAtIDEsIHgwID0gZG9tYWluW2kwXSwgeDEgPSBkb21haW5baTFdLCBkeDtcbiAgICBpZiAoeDEgPCB4MCkge1xuICAgICAgZHggPSBpMCwgaTAgPSBpMSwgaTEgPSBkeDtcbiAgICAgIGR4ID0geDAsIHgwID0geDEsIHgxID0gZHg7XG4gICAgfVxuICAgIGRvbWFpbltpMF0gPSBuaWNlLmZsb29yKHgwKTtcbiAgICBkb21haW5baTFdID0gbmljZS5jZWlsKHgxKTtcbiAgICByZXR1cm4gZG9tYWluO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX25pY2VTdGVwKHN0ZXApIHtcbiAgICByZXR1cm4gc3RlcCA/IHtcbiAgICAgIGZsb29yOiBmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKHggLyBzdGVwKSAqIHN0ZXA7XG4gICAgICB9LFxuICAgICAgY2VpbDogZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gTWF0aC5jZWlsKHggLyBzdGVwKSAqIHN0ZXA7XG4gICAgICB9XG4gICAgfSA6IGQzX3NjYWxlX25pY2VJZGVudGl0eTtcbiAgfVxuICB2YXIgZDNfc2NhbGVfbmljZUlkZW50aXR5ID0ge1xuICAgIGZsb29yOiBkM19pZGVudGl0eSxcbiAgICBjZWlsOiBkM19pZGVudGl0eVxuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9wb2x5bGluZWFyKGRvbWFpbiwgcmFuZ2UsIHVuaW50ZXJwb2xhdGUsIGludGVycG9sYXRlKSB7XG4gICAgdmFyIHUgPSBbXSwgaSA9IFtdLCBqID0gMCwgayA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCkgLSAxO1xuICAgIGlmIChkb21haW5ba10gPCBkb21haW5bMF0pIHtcbiAgICAgIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgpLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlID0gcmFuZ2Uuc2xpY2UoKS5yZXZlcnNlKCk7XG4gICAgfVxuICAgIHdoaWxlICgrK2ogPD0gaykge1xuICAgICAgdS5wdXNoKHVuaW50ZXJwb2xhdGUoZG9tYWluW2ogLSAxXSwgZG9tYWluW2pdKSk7XG4gICAgICBpLnB1c2goaW50ZXJwb2xhdGUocmFuZ2VbaiAtIDFdLCByYW5nZVtqXSkpO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgdmFyIGogPSBkMy5iaXNlY3QoZG9tYWluLCB4LCAxLCBrKSAtIDE7XG4gICAgICByZXR1cm4gaVtqXSh1W2pdKHgpKTtcbiAgICB9O1xuICB9XG4gIGQzLnNjYWxlLmxpbmVhciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9saW5lYXIoWyAwLCAxIF0sIFsgMCwgMSBdLCBkM19pbnRlcnBvbGF0ZSwgZmFsc2UpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXIoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUsIGNsYW1wKSB7XG4gICAgdmFyIG91dHB1dCwgaW5wdXQ7XG4gICAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICAgIHZhciBsaW5lYXIgPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGgpID4gMiA/IGQzX3NjYWxlX3BvbHlsaW5lYXIgOiBkM19zY2FsZV9iaWxpbmVhciwgdW5pbnRlcnBvbGF0ZSA9IGNsYW1wID8gZDNfdW5pbnRlcnBvbGF0ZUNsYW1wIDogZDNfdW5pbnRlcnBvbGF0ZU51bWJlcjtcbiAgICAgIG91dHB1dCA9IGxpbmVhcihkb21haW4sIHJhbmdlLCB1bmludGVycG9sYXRlLCBpbnRlcnBvbGF0ZSk7XG4gICAgICBpbnB1dCA9IGxpbmVhcihyYW5nZSwgZG9tYWluLCB1bmludGVycG9sYXRlLCBkM19pbnRlcnBvbGF0ZSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBvdXRwdXQoeCk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHJldHVybiBpbnB1dCh5KTtcbiAgICB9O1xuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IHgubWFwKE51bWJlcik7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZVJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHNjYWxlLnJhbmdlKHgpLmludGVycG9sYXRlKGQzX2ludGVycG9sYXRlUm91bmQpO1xuICAgIH07XG4gICAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGFtcDtcbiAgICAgIGNsYW1wID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGludGVycG9sYXRlO1xuICAgICAgaW50ZXJwb2xhdGUgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obSwgZm9ybWF0KSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCk7XG4gICAgfTtcbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24obSkge1xuICAgICAgZDNfc2NhbGVfbGluZWFyTmljZShkb21haW4sIG0pO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXIoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUsIGNsYW1wKTtcbiAgICB9O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpIHtcbiAgICByZXR1cm4gZDMucmViaW5kKHNjYWxlLCBsaW5lYXIsIFwicmFuZ2VcIiwgXCJyYW5nZVJvdW5kXCIsIFwiaW50ZXJwb2xhdGVcIiwgXCJjbGFtcFwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJOaWNlKGRvbWFpbiwgbSkge1xuICAgIGQzX3NjYWxlX25pY2UoZG9tYWluLCBkM19zY2FsZV9uaWNlU3RlcChkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKVsyXSkpO1xuICAgIGQzX3NjYWxlX25pY2UoZG9tYWluLCBkM19zY2FsZV9uaWNlU3RlcChkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKVsyXSkpO1xuICAgIHJldHVybiBkb21haW47XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSkge1xuICAgIGlmIChtID09IG51bGwpIG0gPSAxMDtcbiAgICB2YXIgZXh0ZW50ID0gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSwgc3BhbiA9IGV4dGVudFsxXSAtIGV4dGVudFswXSwgc3RlcCA9IE1hdGgucG93KDEwLCBNYXRoLmZsb29yKE1hdGgubG9nKHNwYW4gLyBtKSAvIE1hdGguTE4xMCkpLCBlcnIgPSBtIC8gc3BhbiAqIHN0ZXA7XG4gICAgaWYgKGVyciA8PSAuMTUpIHN0ZXAgKj0gMTA7IGVsc2UgaWYgKGVyciA8PSAuMzUpIHN0ZXAgKj0gNTsgZWxzZSBpZiAoZXJyIDw9IC43NSkgc3RlcCAqPSAyO1xuICAgIGV4dGVudFswXSA9IE1hdGguY2VpbChleHRlbnRbMF0gLyBzdGVwKSAqIHN0ZXA7XG4gICAgZXh0ZW50WzFdID0gTWF0aC5mbG9vcihleHRlbnRbMV0gLyBzdGVwKSAqIHN0ZXAgKyBzdGVwICogLjU7XG4gICAgZXh0ZW50WzJdID0gc3RlcDtcbiAgICByZXR1cm4gZXh0ZW50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSkge1xuICAgIHJldHVybiBkMy5yYW5nZS5hcHBseShkMywgZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSkpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQoZG9tYWluLCBtLCBmb3JtYXQpIHtcbiAgICB2YXIgcmFuZ2UgPSBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKTtcbiAgICBpZiAoZm9ybWF0KSB7XG4gICAgICB2YXIgbWF0Y2ggPSBkM19mb3JtYXRfcmUuZXhlYyhmb3JtYXQpO1xuICAgICAgbWF0Y2guc2hpZnQoKTtcbiAgICAgIGlmIChtYXRjaFs4XSA9PT0gXCJzXCIpIHtcbiAgICAgICAgdmFyIHByZWZpeCA9IGQzLmZvcm1hdFByZWZpeChNYXRoLm1heChhYnMocmFuZ2VbMF0pLCBhYnMocmFuZ2VbMV0pKSk7XG4gICAgICAgIGlmICghbWF0Y2hbN10pIG1hdGNoWzddID0gXCIuXCIgKyBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24ocHJlZml4LnNjYWxlKHJhbmdlWzJdKSk7XG4gICAgICAgIG1hdGNoWzhdID0gXCJmXCI7XG4gICAgICAgIGZvcm1hdCA9IGQzLmZvcm1hdChtYXRjaC5qb2luKFwiXCIpKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gZm9ybWF0KHByZWZpeC5zY2FsZShkKSkgKyBwcmVmaXguc3ltYm9sO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgaWYgKCFtYXRjaFs3XSkgbWF0Y2hbN10gPSBcIi5cIiArIGQzX3NjYWxlX2xpbmVhckZvcm1hdFByZWNpc2lvbihtYXRjaFs4XSwgcmFuZ2UpO1xuICAgICAgZm9ybWF0ID0gbWF0Y2guam9pbihcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9ybWF0ID0gXCIsLlwiICsgZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKHJhbmdlWzJdKSArIFwiZlwiO1xuICAgIH1cbiAgICByZXR1cm4gZDMuZm9ybWF0KGZvcm1hdCk7XG4gIH1cbiAgdmFyIGQzX3NjYWxlX2xpbmVhckZvcm1hdFNpZ25pZmljYW50ID0ge1xuICAgIHM6IDEsXG4gICAgZzogMSxcbiAgICBwOiAxLFxuICAgIHI6IDEsXG4gICAgZTogMVxuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24odmFsdWUpIHtcbiAgICByZXR1cm4gLU1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjEwICsgLjAxKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJGb3JtYXRQcmVjaXNpb24odHlwZSwgcmFuZ2UpIHtcbiAgICB2YXIgcCA9IGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbihyYW5nZVsyXSk7XG4gICAgcmV0dXJuIHR5cGUgaW4gZDNfc2NhbGVfbGluZWFyRm9ybWF0U2lnbmlmaWNhbnQgPyBNYXRoLmFicyhwIC0gZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKE1hdGgubWF4KGFicyhyYW5nZVswXSksIGFicyhyYW5nZVsxXSkpKSkgKyArKHR5cGUgIT09IFwiZVwiKSA6IHAgLSAodHlwZSA9PT0gXCIlXCIpICogMjtcbiAgfVxuICBkMy5zY2FsZS5sb2cgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfbG9nKGQzLnNjYWxlLmxpbmVhcigpLmRvbWFpbihbIDAsIDEgXSksIDEwLCB0cnVlLCBbIDEsIDEwIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9sb2cobGluZWFyLCBiYXNlLCBwb3NpdGl2ZSwgZG9tYWluKSB7XG4gICAgZnVuY3Rpb24gbG9nKHgpIHtcbiAgICAgIHJldHVybiAocG9zaXRpdmUgPyBNYXRoLmxvZyh4IDwgMCA/IDAgOiB4KSA6IC1NYXRoLmxvZyh4ID4gMCA/IDAgOiAteCkpIC8gTWF0aC5sb2coYmFzZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvdyh4KSB7XG4gICAgICByZXR1cm4gcG9zaXRpdmUgPyBNYXRoLnBvdyhiYXNlLCB4KSA6IC1NYXRoLnBvdyhiYXNlLCAteCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBsaW5lYXIobG9nKHgpKTtcbiAgICB9XG4gICAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHBvdyhsaW5lYXIuaW52ZXJ0KHgpKTtcbiAgICB9O1xuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIHBvc2l0aXZlID0geFswXSA+PSAwO1xuICAgICAgbGluZWFyLmRvbWFpbigoZG9tYWluID0geC5tYXAoTnVtYmVyKSkubWFwKGxvZykpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUuYmFzZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGJhc2U7XG4gICAgICBiYXNlID0gK187XG4gICAgICBsaW5lYXIuZG9tYWluKGRvbWFpbi5tYXAobG9nKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbmljZWQgPSBkM19zY2FsZV9uaWNlKGRvbWFpbi5tYXAobG9nKSwgcG9zaXRpdmUgPyBNYXRoIDogZDNfc2NhbGVfbG9nTmljZU5lZ2F0aXZlKTtcbiAgICAgIGxpbmVhci5kb21haW4obmljZWQpO1xuICAgICAgZG9tYWluID0gbmljZWQubWFwKHBvdyk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGV4dGVudCA9IGQzX3NjYWxlRXh0ZW50KGRvbWFpbiksIHRpY2tzID0gW10sIHUgPSBleHRlbnRbMF0sIHYgPSBleHRlbnRbMV0sIGkgPSBNYXRoLmZsb29yKGxvZyh1KSksIGogPSBNYXRoLmNlaWwobG9nKHYpKSwgbiA9IGJhc2UgJSAxID8gMiA6IGJhc2U7XG4gICAgICBpZiAoaXNGaW5pdGUoaiAtIGkpKSB7XG4gICAgICAgIGlmIChwb3NpdGl2ZSkge1xuICAgICAgICAgIGZvciAoO2kgPCBqOyBpKyspIGZvciAodmFyIGsgPSAxOyBrIDwgbjsgaysrKSB0aWNrcy5wdXNoKHBvdyhpKSAqIGspO1xuICAgICAgICAgIHRpY2tzLnB1c2gocG93KGkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aWNrcy5wdXNoKHBvdyhpKSk7XG4gICAgICAgICAgZm9yICg7aSsrIDwgajsgKSBmb3IgKHZhciBrID0gbiAtIDE7IGsgPiAwOyBrLS0pIHRpY2tzLnB1c2gocG93KGkpICogayk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gMDsgdGlja3NbaV0gPCB1OyBpKyspIHt9XG4gICAgICAgIGZvciAoaiA9IHRpY2tzLmxlbmd0aDsgdGlja3NbaiAtIDFdID4gdjsgai0tKSB7fVxuICAgICAgICB0aWNrcyA9IHRpY2tzLnNsaWNlKGksIGopO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRpY2tzO1xuICAgIH07XG4gICAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKG4sIGZvcm1hdCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZDNfc2NhbGVfbG9nRm9ybWF0O1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBmb3JtYXQgPSBkM19zY2FsZV9sb2dGb3JtYXQ7IGVsc2UgaWYgKHR5cGVvZiBmb3JtYXQgIT09IFwiZnVuY3Rpb25cIikgZm9ybWF0ID0gZDMuZm9ybWF0KGZvcm1hdCk7XG4gICAgICB2YXIgayA9IE1hdGgubWF4KDEsIGJhc2UgKiBuIC8gc2NhbGUudGlja3MoKS5sZW5ndGgpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgdmFyIGkgPSBkIC8gcG93KE1hdGgucm91bmQobG9nKGQpKSk7XG4gICAgICAgIGlmIChpICogYmFzZSA8IGJhc2UgLSAuNSkgaSAqPSBiYXNlO1xuICAgICAgICByZXR1cm4gaSA8PSBrID8gZm9ybWF0KGQpIDogXCJcIjtcbiAgICAgIH07XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbG9nKGxpbmVhci5jb3B5KCksIGJhc2UsIHBvc2l0aXZlLCBkb21haW4pO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKTtcbiAgfVxuICB2YXIgZDNfc2NhbGVfbG9nRm9ybWF0ID0gZDMuZm9ybWF0KFwiLjBlXCIpLCBkM19zY2FsZV9sb2dOaWNlTmVnYXRpdmUgPSB7XG4gICAgZmxvb3I6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiAtTWF0aC5jZWlsKC14KTtcbiAgICB9LFxuICAgIGNlaWw6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiAtTWF0aC5mbG9vcigteCk7XG4gICAgfVxuICB9O1xuICBkMy5zY2FsZS5wb3cgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfcG93KGQzLnNjYWxlLmxpbmVhcigpLCAxLCBbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3BvdyhsaW5lYXIsIGV4cG9uZW50LCBkb21haW4pIHtcbiAgICB2YXIgcG93cCA9IGQzX3NjYWxlX3Bvd1BvdyhleHBvbmVudCksIHBvd2IgPSBkM19zY2FsZV9wb3dQb3coMSAvIGV4cG9uZW50KTtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gbGluZWFyKHBvd3AoeCkpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gcG93YihsaW5lYXIuaW52ZXJ0KHgpKTtcbiAgICB9O1xuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGxpbmVhci5kb21haW4oKGRvbWFpbiA9IHgubWFwKE51bWJlcikpLm1hcChwb3dwKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrcyhkb21haW4sIG0pO1xuICAgIH07XG4gICAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKG0sIGZvcm1hdCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQoZG9tYWluLCBtLCBmb3JtYXQpO1xuICAgIH07XG4gICAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBzY2FsZS5kb21haW4oZDNfc2NhbGVfbGluZWFyTmljZShkb21haW4sIG0pKTtcbiAgICB9O1xuICAgIHNjYWxlLmV4cG9uZW50ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZXhwb25lbnQ7XG4gICAgICBwb3dwID0gZDNfc2NhbGVfcG93UG93KGV4cG9uZW50ID0geCk7XG4gICAgICBwb3diID0gZDNfc2NhbGVfcG93UG93KDEgLyBleHBvbmVudCk7XG4gICAgICBsaW5lYXIuZG9tYWluKGRvbWFpbi5tYXAocG93cCkpO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3BvdyhsaW5lYXIuY29weSgpLCBleHBvbmVudCwgZG9tYWluKTtcbiAgICB9O1xuICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJSZWJpbmQoc2NhbGUsIGxpbmVhcik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfcG93UG93KGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHggPCAwID8gLU1hdGgucG93KC14LCBlKSA6IE1hdGgucG93KHgsIGUpO1xuICAgIH07XG4gIH1cbiAgZDMuc2NhbGUuc3FydCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5wb3coKS5leHBvbmVudCguNSk7XG4gIH07XG4gIGQzLnNjYWxlLm9yZGluYWwgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfb3JkaW5hbChbXSwge1xuICAgICAgdDogXCJyYW5nZVwiLFxuICAgICAgYTogWyBbXSBdXG4gICAgfSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX29yZGluYWwoZG9tYWluLCByYW5nZXIpIHtcbiAgICB2YXIgaW5kZXgsIHJhbmdlLCByYW5nZUJhbmQ7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIHJhbmdlWygoaW5kZXguZ2V0KHgpIHx8IChyYW5nZXIudCA9PT0gXCJyYW5nZVwiID8gaW5kZXguc2V0KHgsIGRvbWFpbi5wdXNoKHgpKSA6IE5hTikpIC0gMSkgJSByYW5nZS5sZW5ndGhdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdGVwcyhzdGFydCwgc3RlcCkge1xuICAgICAgcmV0dXJuIGQzLnJhbmdlKGRvbWFpbi5sZW5ndGgpLm1hcChmdW5jdGlvbihpKSB7XG4gICAgICAgIHJldHVybiBzdGFydCArIHN0ZXAgKiBpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IFtdO1xuICAgICAgaW5kZXggPSBuZXcgZDNfTWFwKCk7XG4gICAgICB2YXIgaSA9IC0xLCBuID0geC5sZW5ndGgsIHhpO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICghaW5kZXguaGFzKHhpID0geFtpXSkpIGluZGV4LnNldCh4aSwgZG9tYWluLnB1c2goeGkpKTtcbiAgICAgIHJldHVybiBzY2FsZVtyYW5nZXIudF0uYXBwbHkoc2NhbGUsIHJhbmdlci5hKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IHg7XG4gICAgICByYW5nZUJhbmQgPSAwO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlUG9pbnRzID0gZnVuY3Rpb24oeCwgcGFkZGluZykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBwYWRkaW5nID0gMDtcbiAgICAgIHZhciBzdGFydCA9IHhbMF0sIHN0b3AgPSB4WzFdLCBzdGVwID0gZG9tYWluLmxlbmd0aCA8IDIgPyAoc3RhcnQgPSAoc3RhcnQgKyBzdG9wKSAvIDIsIFxuICAgICAgMCkgOiAoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gMSArIHBhZGRpbmcpO1xuICAgICAgcmFuZ2UgPSBzdGVwcyhzdGFydCArIHN0ZXAgKiBwYWRkaW5nIC8gMiwgc3RlcCk7XG4gICAgICByYW5nZUJhbmQgPSAwO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlUG9pbnRzXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlUm91bmRQb2ludHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgdmFyIHN0YXJ0ID0geFswXSwgc3RvcCA9IHhbMV0sIHN0ZXAgPSBkb21haW4ubGVuZ3RoIDwgMiA/IChzdGFydCA9IHN0b3AgPSBNYXRoLnJvdW5kKChzdGFydCArIHN0b3ApIC8gMiksIFxuICAgICAgMCkgOiAoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gMSArIHBhZGRpbmcpIHwgMDtcbiAgICAgIHJhbmdlID0gc3RlcHMoc3RhcnQgKyBNYXRoLnJvdW5kKHN0ZXAgKiBwYWRkaW5nIC8gMiArIChzdG9wIC0gc3RhcnQgLSAoZG9tYWluLmxlbmd0aCAtIDEgKyBwYWRkaW5nKSAqIHN0ZXApIC8gMiksIHN0ZXApO1xuICAgICAgcmFuZ2VCYW5kID0gMDtcbiAgICAgIHJhbmdlciA9IHtcbiAgICAgICAgdDogXCJyYW5nZVJvdW5kUG9pbnRzXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlQmFuZHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nLCBvdXRlclBhZGRpbmcpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcGFkZGluZyA9IDA7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIG91dGVyUGFkZGluZyA9IHBhZGRpbmc7XG4gICAgICB2YXIgcmV2ZXJzZSA9IHhbMV0gPCB4WzBdLCBzdGFydCA9IHhbcmV2ZXJzZSAtIDBdLCBzdG9wID0geFsxIC0gcmV2ZXJzZV0sIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gcGFkZGluZyArIDIgKiBvdXRlclBhZGRpbmcpO1xuICAgICAgcmFuZ2UgPSBzdGVwcyhzdGFydCArIHN0ZXAgKiBvdXRlclBhZGRpbmcsIHN0ZXApO1xuICAgICAgaWYgKHJldmVyc2UpIHJhbmdlLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlQmFuZCA9IHN0ZXAgKiAoMSAtIHBhZGRpbmcpO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlQmFuZHNcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VSb3VuZEJhbmRzID0gZnVuY3Rpb24oeCwgcGFkZGluZywgb3V0ZXJQYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBvdXRlclBhZGRpbmcgPSBwYWRkaW5nO1xuICAgICAgdmFyIHJldmVyc2UgPSB4WzFdIDwgeFswXSwgc3RhcnQgPSB4W3JldmVyc2UgLSAwXSwgc3RvcCA9IHhbMSAtIHJldmVyc2VdLCBzdGVwID0gTWF0aC5mbG9vcigoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gcGFkZGluZyArIDIgKiBvdXRlclBhZGRpbmcpKTtcbiAgICAgIHJhbmdlID0gc3RlcHMoc3RhcnQgKyBNYXRoLnJvdW5kKChzdG9wIC0gc3RhcnQgLSAoZG9tYWluLmxlbmd0aCAtIHBhZGRpbmcpICogc3RlcCkgLyAyKSwgc3RlcCk7XG4gICAgICBpZiAocmV2ZXJzZSkgcmFuZ2UucmV2ZXJzZSgpO1xuICAgICAgcmFuZ2VCYW5kID0gTWF0aC5yb3VuZChzdGVwICogKDEgLSBwYWRkaW5nKSk7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VSb3VuZEJhbmRzXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlQmFuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmdlQmFuZDtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlRXh0ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVFeHRlbnQocmFuZ2VyLmFbMF0pO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX29yZGluYWwoZG9tYWluLCByYW5nZXIpO1xuICAgIH07XG4gICAgcmV0dXJuIHNjYWxlLmRvbWFpbihkb21haW4pO1xuICB9XG4gIGQzLnNjYWxlLmNhdGVnb3J5MTAgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2NhbGUub3JkaW5hbCgpLnJhbmdlKGQzX2NhdGVnb3J5MTApO1xuICB9O1xuICBkMy5zY2FsZS5jYXRlZ29yeTIwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTIwKTtcbiAgfTtcbiAgZDMuc2NhbGUuY2F0ZWdvcnkyMGIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2NhbGUub3JkaW5hbCgpLnJhbmdlKGQzX2NhdGVnb3J5MjBiKTtcbiAgfTtcbiAgZDMuc2NhbGUuY2F0ZWdvcnkyMGMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDMuc2NhbGUub3JkaW5hbCgpLnJhbmdlKGQzX2NhdGVnb3J5MjBjKTtcbiAgfTtcbiAgdmFyIGQzX2NhdGVnb3J5MTAgPSBbIDIwNjIyNjAsIDE2NzQ0MjA2LCAyOTI0NTg4LCAxNDAzNDcyOCwgOTcyNTg4NSwgOTE5NzEzMSwgMTQ5MDczMzAsIDgzNTU3MTEsIDEyMzY5MTg2LCAxNTU2MTc1IF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIHZhciBkM19jYXRlZ29yeTIwID0gWyAyMDYyMjYwLCAxMTQ1NDQ0MCwgMTY3NDQyMDYsIDE2NzU5NjcyLCAyOTI0NTg4LCAxMDAxODY5OCwgMTQwMzQ3MjgsIDE2NzUwNzQyLCA5NzI1ODg1LCAxMjk1NTg2MSwgOTE5NzEzMSwgMTI4ODUxNDAsIDE0OTA3MzMwLCAxNjIzNDE5NCwgODM1NTcxMSwgMTMwOTI4MDcsIDEyMzY5MTg2LCAxNDQwODU4OSwgMTU1NjE3NSwgMTA0MTA3MjUgXS5tYXAoZDNfcmdiU3RyaW5nKTtcbiAgdmFyIGQzX2NhdGVnb3J5MjBiID0gWyAzNzUwNzc3LCA1Mzk1NjE5LCA3MDQwNzE5LCAxMDI2NDI4NiwgNjUxOTA5NywgOTIxNjU5NCwgMTE5MTUxMTUsIDEzNTU2NjM2LCA5MjAyOTkzLCAxMjQyNjgwOSwgMTUxODY1MTQsIDE1MTkwOTMyLCA4NjY2MTY5LCAxMTM1NjQ5MCwgMTQwNDk2NDMsIDE1MTc3MzcyLCA4MDc3NjgzLCAxMDgzNDMyNCwgMTM1Mjg1MDksIDE0NTg5NjU0IF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIHZhciBkM19jYXRlZ29yeTIwYyA9IFsgMzI0NDczMywgNzA1NzExMCwgMTA0MDY2MjUsIDEzMDMyNDMxLCAxNTA5NTA1MywgMTY2MTY3NjQsIDE2NjI1MjU5LCAxNjYzNDAxOCwgMzI1MzA3NiwgNzY1MjQ3MCwgMTA2MDcwMDMsIDEzMTAxNTA0LCA3Njk1MjgxLCAxMDM5NDMxMiwgMTIzNjkzNzIsIDE0MzQyODkxLCA2NTEzNTA3LCA5ODY4OTUwLCAxMjQzNDg3NywgMTQyNzcwODEgXS5tYXAoZDNfcmdiU3RyaW5nKTtcbiAgZDMuc2NhbGUucXVhbnRpbGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfc2NhbGVfcXVhbnRpbGUoW10sIFtdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfcXVhbnRpbGUoZG9tYWluLCByYW5nZSkge1xuICAgIHZhciB0aHJlc2hvbGRzO1xuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICB2YXIgayA9IDAsIHEgPSByYW5nZS5sZW5ndGg7XG4gICAgICB0aHJlc2hvbGRzID0gW107XG4gICAgICB3aGlsZSAoKytrIDwgcSkgdGhyZXNob2xkc1trIC0gMV0gPSBkMy5xdWFudGlsZShkb21haW4sIGsgLyBxKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgaWYgKCFpc05hTih4ID0gK3gpKSByZXR1cm4gcmFuZ2VbZDMuYmlzZWN0KHRocmVzaG9sZHMsIHgpXTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0geC5tYXAoZDNfbnVtYmVyKS5maWx0ZXIoZDNfbnVtZXJpYykuc29ydChkM19hc2NlbmRpbmcpO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucXVhbnRpbGVzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhyZXNob2xkcztcbiAgICB9O1xuICAgIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgICAgcmV0dXJuIHkgPCAwID8gWyBOYU4sIE5hTiBdIDogWyB5ID4gMCA/IHRocmVzaG9sZHNbeSAtIDFdIDogZG9tYWluWzBdLCB5IDwgdGhyZXNob2xkcy5sZW5ndGggPyB0aHJlc2hvbGRzW3ldIDogZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXSBdO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aWxlKGRvbWFpbiwgcmFuZ2UpO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfVxuICBkMy5zY2FsZS5xdWFudGl6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9xdWFudGl6ZSgwLCAxLCBbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3F1YW50aXplKHgwLCB4MSwgcmFuZ2UpIHtcbiAgICB2YXIga3gsIGk7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIHJhbmdlW01hdGgubWF4KDAsIE1hdGgubWluKGksIE1hdGguZmxvb3Ioa3ggKiAoeCAtIHgwKSkpKV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICBreCA9IHJhbmdlLmxlbmd0aCAvICh4MSAtIHgwKTtcbiAgICAgIGkgPSByYW5nZS5sZW5ndGggLSAxO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH1cbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIHgwLCB4MSBdO1xuICAgICAgeDAgPSAreFswXTtcbiAgICAgIHgxID0gK3hbeC5sZW5ndGggLSAxXTtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgICAgeSA9IHkgPCAwID8gTmFOIDogeSAvIGt4ICsgeDA7XG4gICAgICByZXR1cm4gWyB5LCB5ICsgMSAvIGt4IF07XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfcXVhbnRpemUoeDAsIHgxLCByYW5nZSk7XG4gICAgfTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9XG4gIGQzLnNjYWxlLnRocmVzaG9sZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV90aHJlc2hvbGQoWyAuNSBdLCBbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3RocmVzaG9sZChkb21haW4sIHJhbmdlKSB7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgaWYgKHggPD0geCkgcmV0dXJuIHJhbmdlW2QzLmJpc2VjdChkb21haW4sIHgpXTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0gXztcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IF87XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgICB5ID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICAgIHJldHVybiBbIGRvbWFpblt5IC0gMV0sIGRvbWFpblt5XSBdO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3RocmVzaG9sZChkb21haW4sIHJhbmdlKTtcbiAgICB9O1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuICBkMy5zY2FsZS5pZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9pZGVudGl0eShbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2lkZW50aXR5KGRvbWFpbikge1xuICAgIGZ1bmN0aW9uIGlkZW50aXR5KHgpIHtcbiAgICAgIHJldHVybiAreDtcbiAgICB9XG4gICAgaWRlbnRpdHkuaW52ZXJ0ID0gaWRlbnRpdHk7XG4gICAgaWRlbnRpdHkuZG9tYWluID0gaWRlbnRpdHkucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSB4Lm1hcChpZGVudGl0eSk7XG4gICAgICByZXR1cm4gaWRlbnRpdHk7XG4gICAgfTtcbiAgICBpZGVudGl0eS50aWNrcyA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrcyhkb21haW4sIG0pO1xuICAgIH07XG4gICAgaWRlbnRpdHkudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKG0sIGZvcm1hdCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQoZG9tYWluLCBtLCBmb3JtYXQpO1xuICAgIH07XG4gICAgaWRlbnRpdHkuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2lkZW50aXR5KGRvbWFpbik7XG4gICAgfTtcbiAgICByZXR1cm4gaWRlbnRpdHk7XG4gIH1cbiAgZDMuc3ZnID0ge307XG4gIGZ1bmN0aW9uIGQzX3plcm8oKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgZDMuc3ZnLmFyYyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpbm5lclJhZGl1cyA9IGQzX3N2Z19hcmNJbm5lclJhZGl1cywgb3V0ZXJSYWRpdXMgPSBkM19zdmdfYXJjT3V0ZXJSYWRpdXMsIGNvcm5lclJhZGl1cyA9IGQzX3plcm8sIHBhZFJhZGl1cyA9IGQzX3N2Z19hcmNBdXRvLCBzdGFydEFuZ2xlID0gZDNfc3ZnX2FyY1N0YXJ0QW5nbGUsIGVuZEFuZ2xlID0gZDNfc3ZnX2FyY0VuZEFuZ2xlLCBwYWRBbmdsZSA9IGQzX3N2Z19hcmNQYWRBbmdsZTtcbiAgICBmdW5jdGlvbiBhcmMoKSB7XG4gICAgICB2YXIgcjAgPSBNYXRoLm1heCgwLCAraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSksIHIxID0gTWF0aC5tYXgoMCwgK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCBhMCA9IHN0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGbPgCwgYTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gaGFsZs+ALCBkYSA9IE1hdGguYWJzKGExIC0gYTApLCBjdyA9IGEwID4gYTEgPyAwIDogMTtcbiAgICAgIGlmIChyMSA8IHIwKSByYyA9IHIxLCByMSA9IHIwLCByMCA9IHJjO1xuICAgICAgaWYgKGRhID49IM+EzrUpIHJldHVybiBjaXJjbGVTZWdtZW50KHIxLCBjdykgKyAocjAgPyBjaXJjbGVTZWdtZW50KHIwLCAxIC0gY3cpIDogXCJcIikgKyBcIlpcIjtcbiAgICAgIHZhciByYywgY3IsIHJwLCBhcCwgcDAgPSAwLCBwMSA9IDAsIHgwLCB5MCwgeDEsIHkxLCB4MiwgeTIsIHgzLCB5MywgcGF0aCA9IFtdO1xuICAgICAgaWYgKGFwID0gKCtwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDApIC8gMikge1xuICAgICAgICBycCA9IHBhZFJhZGl1cyA9PT0gZDNfc3ZnX2FyY0F1dG8gPyBNYXRoLnNxcnQocjAgKiByMCArIHIxICogcjEpIDogK3BhZFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICBpZiAoIWN3KSBwMSAqPSAtMTtcbiAgICAgICAgaWYgKHIxKSBwMSA9IGQzX2FzaW4ocnAgLyByMSAqIE1hdGguc2luKGFwKSk7XG4gICAgICAgIGlmIChyMCkgcDAgPSBkM19hc2luKHJwIC8gcjAgKiBNYXRoLnNpbihhcCkpO1xuICAgICAgfVxuICAgICAgaWYgKHIxKSB7XG4gICAgICAgIHgwID0gcjEgKiBNYXRoLmNvcyhhMCArIHAxKTtcbiAgICAgICAgeTAgPSByMSAqIE1hdGguc2luKGEwICsgcDEpO1xuICAgICAgICB4MSA9IHIxICogTWF0aC5jb3MoYTEgLSBwMSk7XG4gICAgICAgIHkxID0gcjEgKiBNYXRoLnNpbihhMSAtIHAxKTtcbiAgICAgICAgdmFyIGwxID0gTWF0aC5hYnMoYTEgLSBhMCAtIDIgKiBwMSkgPD0gz4AgPyAwIDogMTtcbiAgICAgICAgaWYgKHAxICYmIGQzX3N2Z19hcmNTd2VlcCh4MCwgeTAsIHgxLCB5MSkgPT09IGN3IF4gbDEpIHtcbiAgICAgICAgICB2YXIgaDEgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgICAgIHgwID0gcjEgKiBNYXRoLmNvcyhoMSk7XG4gICAgICAgICAgeTAgPSByMSAqIE1hdGguc2luKGgxKTtcbiAgICAgICAgICB4MSA9IHkxID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeDAgPSB5MCA9IDA7XG4gICAgICB9XG4gICAgICBpZiAocjApIHtcbiAgICAgICAgeDIgPSByMCAqIE1hdGguY29zKGExIC0gcDApO1xuICAgICAgICB5MiA9IHIwICogTWF0aC5zaW4oYTEgLSBwMCk7XG4gICAgICAgIHgzID0gcjAgKiBNYXRoLmNvcyhhMCArIHAwKTtcbiAgICAgICAgeTMgPSByMCAqIE1hdGguc2luKGEwICsgcDApO1xuICAgICAgICB2YXIgbDAgPSBNYXRoLmFicyhhMCAtIGExICsgMiAqIHAwKSA8PSDPgCA/IDAgOiAxO1xuICAgICAgICBpZiAocDAgJiYgZDNfc3ZnX2FyY1N3ZWVwKHgyLCB5MiwgeDMsIHkzKSA9PT0gMSAtIGN3IF4gbDApIHtcbiAgICAgICAgICB2YXIgaDAgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgICAgIHgyID0gcjAgKiBNYXRoLmNvcyhoMCk7XG4gICAgICAgICAgeTIgPSByMCAqIE1hdGguc2luKGgwKTtcbiAgICAgICAgICB4MyA9IHkzID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeDIgPSB5MiA9IDA7XG4gICAgICB9XG4gICAgICBpZiAoZGEgPiDOtSAmJiAocmMgPSBNYXRoLm1pbihNYXRoLmFicyhyMSAtIHIwKSAvIDIsICtjb3JuZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSkpID4gLjAwMSkge1xuICAgICAgICBjciA9IHIwIDwgcjEgXiBjdyA/IDAgOiAxO1xuICAgICAgICB2YXIgcmMxID0gcmMsIHJjMCA9IHJjO1xuICAgICAgICBpZiAoZGEgPCDPgCkge1xuICAgICAgICAgIHZhciBvYyA9IHgzID09IG51bGwgPyBbIHgyLCB5MiBdIDogeDEgPT0gbnVsbCA/IFsgeDAsIHkwIF0gOiBkM19nZW9tX3BvbHlnb25JbnRlcnNlY3QoWyB4MCwgeTAgXSwgWyB4MywgeTMgXSwgWyB4MSwgeTEgXSwgWyB4MiwgeTIgXSksIGF4ID0geDAgLSBvY1swXSwgYXkgPSB5MCAtIG9jWzFdLCBieCA9IHgxIC0gb2NbMF0sIGJ5ID0geTEgLSBvY1sxXSwga2MgPSAxIC8gTWF0aC5zaW4oTWF0aC5hY29zKChheCAqIGJ4ICsgYXkgKiBieSkgLyAoTWF0aC5zcXJ0KGF4ICogYXggKyBheSAqIGF5KSAqIE1hdGguc3FydChieCAqIGJ4ICsgYnkgKiBieSkpKSAvIDIpLCBsYyA9IE1hdGguc3FydChvY1swXSAqIG9jWzBdICsgb2NbMV0gKiBvY1sxXSk7XG4gICAgICAgICAgcmMwID0gTWF0aC5taW4ocmMsIChyMCAtIGxjKSAvIChrYyAtIDEpKTtcbiAgICAgICAgICByYzEgPSBNYXRoLm1pbihyYywgKHIxIC0gbGMpIC8gKGtjICsgMSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4MSAhPSBudWxsKSB7XG4gICAgICAgICAgdmFyIHQzMCA9IGQzX3N2Z19hcmNDb3JuZXJUYW5nZW50cyh4MyA9PSBudWxsID8gWyB4MiwgeTIgXSA6IFsgeDMsIHkzIF0sIFsgeDAsIHkwIF0sIHIxLCByYzEsIGN3KSwgdDEyID0gZDNfc3ZnX2FyY0Nvcm5lclRhbmdlbnRzKFsgeDEsIHkxIF0sIFsgeDIsIHkyIF0sIHIxLCByYzEsIGN3KTtcbiAgICAgICAgICBpZiAocmMgPT09IHJjMSkge1xuICAgICAgICAgICAgcGF0aC5wdXNoKFwiTVwiLCB0MzBbMF0sIFwiQVwiLCByYzEsIFwiLFwiLCByYzEsIFwiIDAgMCxcIiwgY3IsIFwiIFwiLCB0MzBbMV0sIFwiQVwiLCByMSwgXCIsXCIsIHIxLCBcIiAwIFwiLCAxIC0gY3cgXiBkM19zdmdfYXJjU3dlZXAodDMwWzFdWzBdLCB0MzBbMV1bMV0sIHQxMlsxXVswXSwgdDEyWzFdWzFdKSwgXCIsXCIsIGN3LCBcIiBcIiwgdDEyWzFdLCBcIkFcIiwgcmMxLCBcIixcIiwgcmMxLCBcIiAwIDAsXCIsIGNyLCBcIiBcIiwgdDEyWzBdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGF0aC5wdXNoKFwiTVwiLCB0MzBbMF0sIFwiQVwiLCByYzEsIFwiLFwiLCByYzEsIFwiIDAgMSxcIiwgY3IsIFwiIFwiLCB0MTJbMF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYXRoLnB1c2goXCJNXCIsIHgwLCBcIixcIiwgeTApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4MyAhPSBudWxsKSB7XG4gICAgICAgICAgdmFyIHQwMyA9IGQzX3N2Z19hcmNDb3JuZXJUYW5nZW50cyhbIHgwLCB5MCBdLCBbIHgzLCB5MyBdLCByMCwgLXJjMCwgY3cpLCB0MjEgPSBkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMoWyB4MiwgeTIgXSwgeDEgPT0gbnVsbCA/IFsgeDAsIHkwIF0gOiBbIHgxLCB5MSBdLCByMCwgLXJjMCwgY3cpO1xuICAgICAgICAgIGlmIChyYyA9PT0gcmMwKSB7XG4gICAgICAgICAgICBwYXRoLnB1c2goXCJMXCIsIHQyMVswXSwgXCJBXCIsIHJjMCwgXCIsXCIsIHJjMCwgXCIgMCAwLFwiLCBjciwgXCIgXCIsIHQyMVsxXSwgXCJBXCIsIHIwLCBcIixcIiwgcjAsIFwiIDAgXCIsIGN3IF4gZDNfc3ZnX2FyY1N3ZWVwKHQyMVsxXVswXSwgdDIxWzFdWzFdLCB0MDNbMV1bMF0sIHQwM1sxXVsxXSksIFwiLFwiLCAxIC0gY3csIFwiIFwiLCB0MDNbMV0sIFwiQVwiLCByYzAsIFwiLFwiLCByYzAsIFwiIDAgMCxcIiwgY3IsIFwiIFwiLCB0MDNbMF0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXRoLnB1c2goXCJMXCIsIHQyMVswXSwgXCJBXCIsIHJjMCwgXCIsXCIsIHJjMCwgXCIgMCAwLFwiLCBjciwgXCIgXCIsIHQwM1swXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhdGgucHVzaChcIkxcIiwgeDIsIFwiLFwiLCB5Mik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhdGgucHVzaChcIk1cIiwgeDAsIFwiLFwiLCB5MCk7XG4gICAgICAgIGlmICh4MSAhPSBudWxsKSBwYXRoLnB1c2goXCJBXCIsIHIxLCBcIixcIiwgcjEsIFwiIDAgXCIsIGwxLCBcIixcIiwgY3csIFwiIFwiLCB4MSwgXCIsXCIsIHkxKTtcbiAgICAgICAgcGF0aC5wdXNoKFwiTFwiLCB4MiwgXCIsXCIsIHkyKTtcbiAgICAgICAgaWYgKHgzICE9IG51bGwpIHBhdGgucHVzaChcIkFcIiwgcjAsIFwiLFwiLCByMCwgXCIgMCBcIiwgbDAsIFwiLFwiLCAxIC0gY3csIFwiIFwiLCB4MywgXCIsXCIsIHkzKTtcbiAgICAgIH1cbiAgICAgIHBhdGgucHVzaChcIlpcIik7XG4gICAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjaXJjbGVTZWdtZW50KHIxLCBjdykge1xuICAgICAgcmV0dXJuIFwiTTAsXCIgKyByMSArIFwiQVwiICsgcjEgKyBcIixcIiArIHIxICsgXCIgMCAxLFwiICsgY3cgKyBcIiAwLFwiICsgLXIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsXCIgKyBjdyArIFwiIDAsXCIgKyByMTtcbiAgICB9XG4gICAgYXJjLmlubmVyUmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaW5uZXJSYWRpdXM7XG4gICAgICBpbm5lclJhZGl1cyA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLm91dGVyUmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3V0ZXJSYWRpdXM7XG4gICAgICBvdXRlclJhZGl1cyA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLmNvcm5lclJhZGl1cyA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNvcm5lclJhZGl1cztcbiAgICAgIGNvcm5lclJhZGl1cyA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLnBhZFJhZGl1cyA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZFJhZGl1cztcbiAgICAgIHBhZFJhZGl1cyA9IHYgPT0gZDNfc3ZnX2FyY0F1dG8gPyBkM19zdmdfYXJjQXV0byA6IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGFydEFuZ2xlO1xuICAgICAgc3RhcnRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLmVuZEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZW5kQW5nbGU7XG4gICAgICBlbmRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLnBhZEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcGFkQW5nbGU7XG4gICAgICBwYWRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gYXJjO1xuICAgIH07XG4gICAgYXJjLmNlbnRyb2lkID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgciA9ICgraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtvdXRlclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSAvIDIsIGEgPSAoK3N0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSAvIDIgLSBoYWxmz4A7XG4gICAgICByZXR1cm4gWyBNYXRoLmNvcyhhKSAqIHIsIE1hdGguc2luKGEpICogciBdO1xuICAgIH07XG4gICAgcmV0dXJuIGFyYztcbiAgfTtcbiAgdmFyIGQzX3N2Z19hcmNBdXRvID0gXCJhdXRvXCI7XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNJbm5lclJhZGl1cyhkKSB7XG4gICAgcmV0dXJuIGQuaW5uZXJSYWRpdXM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY091dGVyUmFkaXVzKGQpIHtcbiAgICByZXR1cm4gZC5vdXRlclJhZGl1cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjU3RhcnRBbmdsZShkKSB7XG4gICAgcmV0dXJuIGQuc3RhcnRBbmdsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjRW5kQW5nbGUoZCkge1xuICAgIHJldHVybiBkLmVuZEFuZ2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNQYWRBbmdsZShkKSB7XG4gICAgcmV0dXJuIGQgJiYgZC5wYWRBbmdsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjU3dlZXAoeDAsIHkwLCB4MSwgeTEpIHtcbiAgICByZXR1cm4gKHgwIC0geDEpICogeTAgLSAoeTAgLSB5MSkgKiB4MCA+IDAgPyAwIDogMTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJjQ29ybmVyVGFuZ2VudHMocDAsIHAxLCByMSwgcmMsIGN3KSB7XG4gICAgdmFyIHgwMSA9IHAwWzBdIC0gcDFbMF0sIHkwMSA9IHAwWzFdIC0gcDFbMV0sIGxvID0gKGN3ID8gcmMgOiAtcmMpIC8gTWF0aC5zcXJ0KHgwMSAqIHgwMSArIHkwMSAqIHkwMSksIG94ID0gbG8gKiB5MDEsIG95ID0gLWxvICogeDAxLCB4MSA9IHAwWzBdICsgb3gsIHkxID0gcDBbMV0gKyBveSwgeDIgPSBwMVswXSArIG94LCB5MiA9IHAxWzFdICsgb3ksIHgzID0gKHgxICsgeDIpIC8gMiwgeTMgPSAoeTEgKyB5MikgLyAyLCBkeCA9IHgyIC0geDEsIGR5ID0geTIgLSB5MSwgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSwgciA9IHIxIC0gcmMsIEQgPSB4MSAqIHkyIC0geDIgKiB5MSwgZCA9IChkeSA8IDAgPyAtMSA6IDEpICogTWF0aC5zcXJ0KE1hdGgubWF4KDAsIHIgKiByICogZDIgLSBEICogRCkpLCBjeDAgPSAoRCAqIGR5IC0gZHggKiBkKSAvIGQyLCBjeTAgPSAoLUQgKiBkeCAtIGR5ICogZCkgLyBkMiwgY3gxID0gKEQgKiBkeSArIGR4ICogZCkgLyBkMiwgY3kxID0gKC1EICogZHggKyBkeSAqIGQpIC8gZDIsIGR4MCA9IGN4MCAtIHgzLCBkeTAgPSBjeTAgLSB5MywgZHgxID0gY3gxIC0geDMsIGR5MSA9IGN5MSAtIHkzO1xuICAgIGlmIChkeDAgKiBkeDAgKyBkeTAgKiBkeTAgPiBkeDEgKiBkeDEgKyBkeTEgKiBkeTEpIGN4MCA9IGN4MSwgY3kwID0gY3kxO1xuICAgIHJldHVybiBbIFsgY3gwIC0gb3gsIGN5MCAtIG95IF0sIFsgY3gwICogcjEgLyByLCBjeTAgKiByMSAvIHIgXSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lKHByb2plY3Rpb24pIHtcbiAgICB2YXIgeCA9IGQzX2dlb21fcG9pbnRYLCB5ID0gZDNfZ2VvbV9wb2ludFksIGRlZmluZWQgPSBkM190cnVlLCBpbnRlcnBvbGF0ZSA9IGQzX3N2Z19saW5lTGluZWFyLCBpbnRlcnBvbGF0ZUtleSA9IGludGVycG9sYXRlLmtleSwgdGVuc2lvbiA9IC43O1xuICAgIGZ1bmN0aW9uIGxpbmUoZGF0YSkge1xuICAgICAgdmFyIHNlZ21lbnRzID0gW10sIHBvaW50cyA9IFtdLCBpID0gLTEsIG4gPSBkYXRhLmxlbmd0aCwgZCwgZnggPSBkM19mdW5jdG9yKHgpLCBmeSA9IGQzX2Z1bmN0b3IoeSk7XG4gICAgICBmdW5jdGlvbiBzZWdtZW50KCkge1xuICAgICAgICBzZWdtZW50cy5wdXNoKFwiTVwiLCBpbnRlcnBvbGF0ZShwcm9qZWN0aW9uKHBvaW50cyksIHRlbnNpb24pKTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChkZWZpbmVkLmNhbGwodGhpcywgZCA9IGRhdGFbaV0sIGkpKSB7XG4gICAgICAgICAgcG9pbnRzLnB1c2goWyArZnguY2FsbCh0aGlzLCBkLCBpKSwgK2Z5LmNhbGwodGhpcywgZCwgaSkgXSk7XG4gICAgICAgIH0gZWxzZSBpZiAocG9pbnRzLmxlbmd0aCkge1xuICAgICAgICAgIHNlZ21lbnQoKTtcbiAgICAgICAgICBwb2ludHMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBvaW50cy5sZW5ndGgpIHNlZ21lbnQoKTtcbiAgICAgIHJldHVybiBzZWdtZW50cy5sZW5ndGggPyBzZWdtZW50cy5qb2luKFwiXCIpIDogbnVsbDtcbiAgICB9XG4gICAgbGluZS54ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDtcbiAgICAgIHggPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICBsaW5lLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5O1xuICAgICAgeSA9IF87XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIGxpbmUuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRlZmluZWQ7XG4gICAgICBkZWZpbmVkID0gXztcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGludGVycG9sYXRlS2V5O1xuICAgICAgaWYgKHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIpIGludGVycG9sYXRlS2V5ID0gaW50ZXJwb2xhdGUgPSBfOyBlbHNlIGludGVycG9sYXRlS2V5ID0gKGludGVycG9sYXRlID0gZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzLmdldChfKSB8fCBkM19zdmdfbGluZUxpbmVhcikua2V5O1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICBsaW5lLnRlbnNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0ZW5zaW9uO1xuICAgICAgdGVuc2lvbiA9IF87XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIHJldHVybiBsaW5lO1xuICB9XG4gIGQzLnN2Zy5saW5lID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3N2Z19saW5lKGQzX2lkZW50aXR5KTtcbiAgfTtcbiAgdmFyIGQzX3N2Z19saW5lSW50ZXJwb2xhdG9ycyA9IGQzLm1hcCh7XG4gICAgbGluZWFyOiBkM19zdmdfbGluZUxpbmVhcixcbiAgICBcImxpbmVhci1jbG9zZWRcIjogZDNfc3ZnX2xpbmVMaW5lYXJDbG9zZWQsXG4gICAgc3RlcDogZDNfc3ZnX2xpbmVTdGVwLFxuICAgIFwic3RlcC1iZWZvcmVcIjogZDNfc3ZnX2xpbmVTdGVwQmVmb3JlLFxuICAgIFwic3RlcC1hZnRlclwiOiBkM19zdmdfbGluZVN0ZXBBZnRlcixcbiAgICBiYXNpczogZDNfc3ZnX2xpbmVCYXNpcyxcbiAgICBcImJhc2lzLW9wZW5cIjogZDNfc3ZnX2xpbmVCYXNpc09wZW4sXG4gICAgXCJiYXNpcy1jbG9zZWRcIjogZDNfc3ZnX2xpbmVCYXNpc0Nsb3NlZCxcbiAgICBidW5kbGU6IGQzX3N2Z19saW5lQnVuZGxlLFxuICAgIGNhcmRpbmFsOiBkM19zdmdfbGluZUNhcmRpbmFsLFxuICAgIFwiY2FyZGluYWwtb3BlblwiOiBkM19zdmdfbGluZUNhcmRpbmFsT3BlbixcbiAgICBcImNhcmRpbmFsLWNsb3NlZFwiOiBkM19zdmdfbGluZUNhcmRpbmFsQ2xvc2VkLFxuICAgIG1vbm90b25lOiBkM19zdmdfbGluZU1vbm90b25lXG4gIH0pO1xuICBkM19zdmdfbGluZUludGVycG9sYXRvcnMuZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgdmFsdWUua2V5ID0ga2V5O1xuICAgIHZhbHVlLmNsb3NlZCA9IC8tY2xvc2VkJC8udGVzdChrZXkpO1xuICB9KTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPiAxID8gcG9pbnRzLmpvaW4oXCJMXCIpIDogcG9pbnRzICsgXCJaXCI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVMaW5lYXJDbG9zZWQocG9pbnRzKSB7XG4gICAgcmV0dXJuIHBvaW50cy5qb2luKFwiTFwiKSArIFwiWlwiO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lU3RlcChwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoLCBwID0gcG9pbnRzWzBdLCBwYXRoID0gWyBwWzBdLCBcIixcIiwgcFsxXSBdO1xuICAgIHdoaWxlICgrK2kgPCBuKSBwYXRoLnB1c2goXCJIXCIsIChwWzBdICsgKHAgPSBwb2ludHNbaV0pWzBdKSAvIDIsIFwiVlwiLCBwWzFdKTtcbiAgICBpZiAobiA+IDEpIHBhdGgucHVzaChcIkhcIiwgcFswXSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVN0ZXBCZWZvcmUocG9pbnRzKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aCwgcCA9IHBvaW50c1swXSwgcGF0aCA9IFsgcFswXSwgXCIsXCIsIHBbMV0gXTtcbiAgICB3aGlsZSAoKytpIDwgbikgcGF0aC5wdXNoKFwiVlwiLCAocCA9IHBvaW50c1tpXSlbMV0sIFwiSFwiLCBwWzBdKTtcbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lU3RlcEFmdGVyKHBvaW50cykge1xuICAgIHZhciBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGgsIHAgPSBwb2ludHNbMF0sIHBhdGggPSBbIHBbMF0sIFwiLFwiLCBwWzFdIF07XG4gICAgd2hpbGUgKCsraSA8IG4pIHBhdGgucHVzaChcIkhcIiwgKHAgPSBwb2ludHNbaV0pWzBdLCBcIlZcIiwgcFsxXSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUNhcmRpbmFsT3Blbihwb2ludHMsIHRlbnNpb24pIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA8IDQgPyBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpIDogcG9pbnRzWzFdICsgZDNfc3ZnX2xpbmVIZXJtaXRlKHBvaW50cy5zbGljZSgxLCAtMSksIGQzX3N2Z19saW5lQ2FyZGluYWxUYW5nZW50cyhwb2ludHMsIHRlbnNpb24pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUNhcmRpbmFsQ2xvc2VkKHBvaW50cywgdGVuc2lvbikge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgMyA/IGQzX3N2Z19saW5lTGluZWFyQ2xvc2VkKHBvaW50cykgOiBwb2ludHNbMF0gKyBkM19zdmdfbGluZUhlcm1pdGUoKHBvaW50cy5wdXNoKHBvaW50c1swXSksIFxuICAgIHBvaW50cyksIGQzX3N2Z19saW5lQ2FyZGluYWxUYW5nZW50cyhbIHBvaW50c1twb2ludHMubGVuZ3RoIC0gMl0gXS5jb25jYXQocG9pbnRzLCBbIHBvaW50c1sxXSBdKSwgdGVuc2lvbikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQ2FyZGluYWwocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPCAzID8gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKSA6IHBvaW50c1swXSArIGQzX3N2Z19saW5lSGVybWl0ZShwb2ludHMsIGQzX3N2Z19saW5lQ2FyZGluYWxUYW5nZW50cyhwb2ludHMsIHRlbnNpb24pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLCB0YW5nZW50cykge1xuICAgIGlmICh0YW5nZW50cy5sZW5ndGggPCAxIHx8IHBvaW50cy5sZW5ndGggIT0gdGFuZ2VudHMubGVuZ3RoICYmIHBvaW50cy5sZW5ndGggIT0gdGFuZ2VudHMubGVuZ3RoICsgMikge1xuICAgICAgcmV0dXJuIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cyk7XG4gICAgfVxuICAgIHZhciBxdWFkID0gcG9pbnRzLmxlbmd0aCAhPSB0YW5nZW50cy5sZW5ndGgsIHBhdGggPSBcIlwiLCBwMCA9IHBvaW50c1swXSwgcCA9IHBvaW50c1sxXSwgdDAgPSB0YW5nZW50c1swXSwgdCA9IHQwLCBwaSA9IDE7XG4gICAgaWYgKHF1YWQpIHtcbiAgICAgIHBhdGggKz0gXCJRXCIgKyAocFswXSAtIHQwWzBdICogMiAvIDMpICsgXCIsXCIgKyAocFsxXSAtIHQwWzFdICogMiAvIDMpICsgXCIsXCIgKyBwWzBdICsgXCIsXCIgKyBwWzFdO1xuICAgICAgcDAgPSBwb2ludHNbMV07XG4gICAgICBwaSA9IDI7XG4gICAgfVxuICAgIGlmICh0YW5nZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICB0ID0gdGFuZ2VudHNbMV07XG4gICAgICBwID0gcG9pbnRzW3BpXTtcbiAgICAgIHBpKys7XG4gICAgICBwYXRoICs9IFwiQ1wiICsgKHAwWzBdICsgdDBbMF0pICsgXCIsXCIgKyAocDBbMV0gKyB0MFsxXSkgKyBcIixcIiArIChwWzBdIC0gdFswXSkgKyBcIixcIiArIChwWzFdIC0gdFsxXSkgKyBcIixcIiArIHBbMF0gKyBcIixcIiArIHBbMV07XG4gICAgICBmb3IgKHZhciBpID0gMjsgaSA8IHRhbmdlbnRzLmxlbmd0aDsgaSsrLCBwaSsrKSB7XG4gICAgICAgIHAgPSBwb2ludHNbcGldO1xuICAgICAgICB0ID0gdGFuZ2VudHNbaV07XG4gICAgICAgIHBhdGggKz0gXCJTXCIgKyAocFswXSAtIHRbMF0pICsgXCIsXCIgKyAocFsxXSAtIHRbMV0pICsgXCIsXCIgKyBwWzBdICsgXCIsXCIgKyBwWzFdO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocXVhZCkge1xuICAgICAgdmFyIGxwID0gcG9pbnRzW3BpXTtcbiAgICAgIHBhdGggKz0gXCJRXCIgKyAocFswXSArIHRbMF0gKiAyIC8gMykgKyBcIixcIiArIChwWzFdICsgdFsxXSAqIDIgLyAzKSArIFwiLFwiICsgbHBbMF0gKyBcIixcIiArIGxwWzFdO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aDtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgdmFyIHRhbmdlbnRzID0gW10sIGEgPSAoMSAtIHRlbnNpb24pIC8gMiwgcDAsIHAxID0gcG9pbnRzWzBdLCBwMiA9IHBvaW50c1sxXSwgaSA9IDEsIG4gPSBwb2ludHMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBwMCA9IHAxO1xuICAgICAgcDEgPSBwMjtcbiAgICAgIHAyID0gcG9pbnRzW2ldO1xuICAgICAgdGFuZ2VudHMucHVzaChbIGEgKiAocDJbMF0gLSBwMFswXSksIGEgKiAocDJbMV0gLSBwMFsxXSkgXSk7XG4gICAgfVxuICAgIHJldHVybiB0YW5nZW50cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUJhc2lzKHBvaW50cykge1xuICAgIGlmIChwb2ludHMubGVuZ3RoIDwgMykgcmV0dXJuIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cyk7XG4gICAgdmFyIGkgPSAxLCBuID0gcG9pbnRzLmxlbmd0aCwgcGkgPSBwb2ludHNbMF0sIHgwID0gcGlbMF0sIHkwID0gcGlbMV0sIHB4ID0gWyB4MCwgeDAsIHgwLCAocGkgPSBwb2ludHNbMV0pWzBdIF0sIHB5ID0gWyB5MCwgeTAsIHkwLCBwaVsxXSBdLCBwYXRoID0gWyB4MCwgXCIsXCIsIHkwLCBcIkxcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB5KSBdO1xuICAgIHBvaW50cy5wdXNoKHBvaW50c1tuIC0gMV0pO1xuICAgIHdoaWxlICgrK2kgPD0gbikge1xuICAgICAgcGkgPSBwb2ludHNbaV07XG4gICAgICBweC5zaGlmdCgpO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5zaGlmdCgpO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgICBkM19zdmdfbGluZUJhc2lzQmV6aWVyKHBhdGgsIHB4LCBweSk7XG4gICAgfVxuICAgIHBvaW50cy5wb3AoKTtcbiAgICBwYXRoLnB1c2goXCJMXCIsIHBpKTtcbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQmFzaXNPcGVuKHBvaW50cykge1xuICAgIGlmIChwb2ludHMubGVuZ3RoIDwgNCkgcmV0dXJuIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cyk7XG4gICAgdmFyIHBhdGggPSBbXSwgaSA9IC0xLCBuID0gcG9pbnRzLmxlbmd0aCwgcGksIHB4ID0gWyAwIF0sIHB5ID0gWyAwIF07XG4gICAgd2hpbGUgKCsraSA8IDMpIHtcbiAgICAgIHBpID0gcG9pbnRzW2ldO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICB9XG4gICAgcGF0aC5wdXNoKGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHgpICsgXCIsXCIgKyBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB5KSk7XG4gICAgLS1pO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBwaSA9IHBvaW50c1tpXTtcbiAgICAgIHB4LnNoaWZ0KCk7XG4gICAgICBweC5wdXNoKHBpWzBdKTtcbiAgICAgIHB5LnNoaWZ0KCk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICAgIGQzX3N2Z19saW5lQmFzaXNCZXppZXIocGF0aCwgcHgsIHB5KTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUJhc2lzQ2xvc2VkKHBvaW50cykge1xuICAgIHZhciBwYXRoLCBpID0gLTEsIG4gPSBwb2ludHMubGVuZ3RoLCBtID0gbiArIDQsIHBpLCBweCA9IFtdLCBweSA9IFtdO1xuICAgIHdoaWxlICgrK2kgPCA0KSB7XG4gICAgICBwaSA9IHBvaW50c1tpICUgbl07XG4gICAgICBweC5wdXNoKHBpWzBdKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgIH1cbiAgICBwYXRoID0gWyBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHkpIF07XG4gICAgLS1pO1xuICAgIHdoaWxlICgrK2kgPCBtKSB7XG4gICAgICBwaSA9IHBvaW50c1tpICUgbl07XG4gICAgICBweC5zaGlmdCgpO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5zaGlmdCgpO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgICBkM19zdmdfbGluZUJhc2lzQmV6aWVyKHBhdGgsIHB4LCBweSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCdW5kbGUocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgdmFyIG4gPSBwb2ludHMubGVuZ3RoIC0gMTtcbiAgICBpZiAobikge1xuICAgICAgdmFyIHgwID0gcG9pbnRzWzBdWzBdLCB5MCA9IHBvaW50c1swXVsxXSwgZHggPSBwb2ludHNbbl1bMF0gLSB4MCwgZHkgPSBwb2ludHNbbl1bMV0gLSB5MCwgaSA9IC0xLCBwLCB0O1xuICAgICAgd2hpbGUgKCsraSA8PSBuKSB7XG4gICAgICAgIHAgPSBwb2ludHNbaV07XG4gICAgICAgIHQgPSBpIC8gbjtcbiAgICAgICAgcFswXSA9IHRlbnNpb24gKiBwWzBdICsgKDEgLSB0ZW5zaW9uKSAqICh4MCArIHQgKiBkeCk7XG4gICAgICAgIHBbMV0gPSB0ZW5zaW9uICogcFsxXSArICgxIC0gdGVuc2lvbikgKiAoeTAgKyB0ICogZHkpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc3ZnX2xpbmVCYXNpcyhwb2ludHMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lRG90NChhLCBiKSB7XG4gICAgcmV0dXJuIGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV0gKyBhWzJdICogYlsyXSArIGFbM10gKiBiWzNdO1xuICB9XG4gIHZhciBkM19zdmdfbGluZUJhc2lzQmV6aWVyMSA9IFsgMCwgMiAvIDMsIDEgLyAzLCAwIF0sIGQzX3N2Z19saW5lQmFzaXNCZXppZXIyID0gWyAwLCAxIC8gMywgMiAvIDMsIDAgXSwgZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMgPSBbIDAsIDEgLyA2LCAyIC8gMywgMSAvIDYgXTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCB4LCB5KSB7XG4gICAgcGF0aC5wdXNoKFwiQ1wiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjEsIHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIxLCB5KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMiwgeCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIsIHkpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgeSkpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lU2xvcGUocDAsIHAxKSB7XG4gICAgcmV0dXJuIChwMVsxXSAtIHAwWzFdKSAvIChwMVswXSAtIHAwWzBdKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUZpbml0ZURpZmZlcmVuY2VzKHBvaW50cykge1xuICAgIHZhciBpID0gMCwgaiA9IHBvaW50cy5sZW5ndGggLSAxLCBtID0gW10sIHAwID0gcG9pbnRzWzBdLCBwMSA9IHBvaW50c1sxXSwgZCA9IG1bMF0gPSBkM19zdmdfbGluZVNsb3BlKHAwLCBwMSk7XG4gICAgd2hpbGUgKCsraSA8IGopIHtcbiAgICAgIG1baV0gPSAoZCArIChkID0gZDNfc3ZnX2xpbmVTbG9wZShwMCA9IHAxLCBwMSA9IHBvaW50c1tpICsgMV0pKSkgLyAyO1xuICAgIH1cbiAgICBtW2ldID0gZDtcbiAgICByZXR1cm4gbTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZU1vbm90b25lVGFuZ2VudHMocG9pbnRzKSB7XG4gICAgdmFyIHRhbmdlbnRzID0gW10sIGQsIGEsIGIsIHMsIG0gPSBkM19zdmdfbGluZUZpbml0ZURpZmZlcmVuY2VzKHBvaW50cyksIGkgPSAtMSwgaiA9IHBvaW50cy5sZW5ndGggLSAxO1xuICAgIHdoaWxlICgrK2kgPCBqKSB7XG4gICAgICBkID0gZDNfc3ZnX2xpbmVTbG9wZShwb2ludHNbaV0sIHBvaW50c1tpICsgMV0pO1xuICAgICAgaWYgKGFicyhkKSA8IM61KSB7XG4gICAgICAgIG1baV0gPSBtW2kgKyAxXSA9IDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhID0gbVtpXSAvIGQ7XG4gICAgICAgIGIgPSBtW2kgKyAxXSAvIGQ7XG4gICAgICAgIHMgPSBhICogYSArIGIgKiBiO1xuICAgICAgICBpZiAocyA+IDkpIHtcbiAgICAgICAgICBzID0gZCAqIDMgLyBNYXRoLnNxcnQocyk7XG4gICAgICAgICAgbVtpXSA9IHMgKiBhO1xuICAgICAgICAgIG1baSArIDFdID0gcyAqIGI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaSA9IC0xO1xuICAgIHdoaWxlICgrK2kgPD0gaikge1xuICAgICAgcyA9IChwb2ludHNbTWF0aC5taW4oaiwgaSArIDEpXVswXSAtIHBvaW50c1tNYXRoLm1heCgwLCBpIC0gMSldWzBdKSAvICg2ICogKDEgKyBtW2ldICogbVtpXSkpO1xuICAgICAgdGFuZ2VudHMucHVzaChbIHMgfHwgMCwgbVtpXSAqIHMgfHwgMCBdKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhbmdlbnRzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lTW9ub3RvbmUocG9pbnRzKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPCAzID8gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKSA6IHBvaW50c1swXSArIGQzX3N2Z19saW5lSGVybWl0ZShwb2ludHMsIGQzX3N2Z19saW5lTW9ub3RvbmVUYW5nZW50cyhwb2ludHMpKTtcbiAgfVxuICBkMy5zdmcubGluZS5yYWRpYWwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbGluZSA9IGQzX3N2Z19saW5lKGQzX3N2Z19saW5lUmFkaWFsKTtcbiAgICBsaW5lLnJhZGl1cyA9IGxpbmUueCwgZGVsZXRlIGxpbmUueDtcbiAgICBsaW5lLmFuZ2xlID0gbGluZS55LCBkZWxldGUgbGluZS55O1xuICAgIHJldHVybiBsaW5lO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfbGluZVJhZGlhbChwb2ludHMpIHtcbiAgICB2YXIgcG9pbnQsIGkgPSAtMSwgbiA9IHBvaW50cy5sZW5ndGgsIHIsIGE7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHBvaW50ID0gcG9pbnRzW2ldO1xuICAgICAgciA9IHBvaW50WzBdO1xuICAgICAgYSA9IHBvaW50WzFdIC0gaGFsZs+AO1xuICAgICAgcG9pbnRbMF0gPSByICogTWF0aC5jb3MoYSk7XG4gICAgICBwb2ludFsxXSA9IHIgKiBNYXRoLnNpbihhKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfYXJlYShwcm9qZWN0aW9uKSB7XG4gICAgdmFyIHgwID0gZDNfZ2VvbV9wb2ludFgsIHgxID0gZDNfZ2VvbV9wb2ludFgsIHkwID0gMCwgeTEgPSBkM19nZW9tX3BvaW50WSwgZGVmaW5lZCA9IGQzX3RydWUsIGludGVycG9sYXRlID0gZDNfc3ZnX2xpbmVMaW5lYXIsIGludGVycG9sYXRlS2V5ID0gaW50ZXJwb2xhdGUua2V5LCBpbnRlcnBvbGF0ZVJldmVyc2UgPSBpbnRlcnBvbGF0ZSwgTCA9IFwiTFwiLCB0ZW5zaW9uID0gLjc7XG4gICAgZnVuY3Rpb24gYXJlYShkYXRhKSB7XG4gICAgICB2YXIgc2VnbWVudHMgPSBbXSwgcG9pbnRzMCA9IFtdLCBwb2ludHMxID0gW10sIGkgPSAtMSwgbiA9IGRhdGEubGVuZ3RoLCBkLCBmeDAgPSBkM19mdW5jdG9yKHgwKSwgZnkwID0gZDNfZnVuY3Rvcih5MCksIGZ4MSA9IHgwID09PSB4MSA/IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4geDtcbiAgICAgIH0gOiBkM19mdW5jdG9yKHgxKSwgZnkxID0geTAgPT09IHkxID8gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB5O1xuICAgICAgfSA6IGQzX2Z1bmN0b3IoeTEpLCB4LCB5O1xuICAgICAgZnVuY3Rpb24gc2VnbWVudCgpIHtcbiAgICAgICAgc2VnbWVudHMucHVzaChcIk1cIiwgaW50ZXJwb2xhdGUocHJvamVjdGlvbihwb2ludHMxKSwgdGVuc2lvbiksIEwsIGludGVycG9sYXRlUmV2ZXJzZShwcm9qZWN0aW9uKHBvaW50czAucmV2ZXJzZSgpKSwgdGVuc2lvbiksIFwiWlwiKTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGlmIChkZWZpbmVkLmNhbGwodGhpcywgZCA9IGRhdGFbaV0sIGkpKSB7XG4gICAgICAgICAgcG9pbnRzMC5wdXNoKFsgeCA9ICtmeDAuY2FsbCh0aGlzLCBkLCBpKSwgeSA9ICtmeTAuY2FsbCh0aGlzLCBkLCBpKSBdKTtcbiAgICAgICAgICBwb2ludHMxLnB1c2goWyArZngxLmNhbGwodGhpcywgZCwgaSksICtmeTEuY2FsbCh0aGlzLCBkLCBpKSBdKTtcbiAgICAgICAgfSBlbHNlIGlmIChwb2ludHMwLmxlbmd0aCkge1xuICAgICAgICAgIHNlZ21lbnQoKTtcbiAgICAgICAgICBwb2ludHMwID0gW107XG4gICAgICAgICAgcG9pbnRzMSA9IFtdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocG9pbnRzMC5sZW5ndGgpIHNlZ21lbnQoKTtcbiAgICAgIHJldHVybiBzZWdtZW50cy5sZW5ndGggPyBzZWdtZW50cy5qb2luKFwiXCIpIDogbnVsbDtcbiAgICB9XG4gICAgYXJlYS54ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDE7XG4gICAgICB4MCA9IHgxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS54MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHgwO1xuICAgICAgeDAgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLngxID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDE7XG4gICAgICB4MSA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHkxO1xuICAgICAgeTAgPSB5MSA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueTAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5MDtcbiAgICAgIHkwID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS55MSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHkxO1xuICAgICAgeTEgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkZWZpbmVkO1xuICAgICAgZGVmaW5lZCA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbnRlcnBvbGF0ZUtleTtcbiAgICAgIGlmICh0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiKSBpbnRlcnBvbGF0ZUtleSA9IGludGVycG9sYXRlID0gXzsgZWxzZSBpbnRlcnBvbGF0ZUtleSA9IChpbnRlcnBvbGF0ZSA9IGQzX3N2Z19saW5lSW50ZXJwb2xhdG9ycy5nZXQoXykgfHwgZDNfc3ZnX2xpbmVMaW5lYXIpLmtleTtcbiAgICAgIGludGVycG9sYXRlUmV2ZXJzZSA9IGludGVycG9sYXRlLnJldmVyc2UgfHwgaW50ZXJwb2xhdGU7XG4gICAgICBMID0gaW50ZXJwb2xhdGUuY2xvc2VkID8gXCJNXCIgOiBcIkxcIjtcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS50ZW5zaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGVuc2lvbjtcbiAgICAgIHRlbnNpb24gPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICByZXR1cm4gYXJlYTtcbiAgfVxuICBkM19zdmdfbGluZVN0ZXBCZWZvcmUucmV2ZXJzZSA9IGQzX3N2Z19saW5lU3RlcEFmdGVyO1xuICBkM19zdmdfbGluZVN0ZXBBZnRlci5yZXZlcnNlID0gZDNfc3ZnX2xpbmVTdGVwQmVmb3JlO1xuICBkMy5zdmcuYXJlYSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zdmdfYXJlYShkM19pZGVudGl0eSk7XG4gIH07XG4gIGQzLnN2Zy5hcmVhLnJhZGlhbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmVhID0gZDNfc3ZnX2FyZWEoZDNfc3ZnX2xpbmVSYWRpYWwpO1xuICAgIGFyZWEucmFkaXVzID0gYXJlYS54LCBkZWxldGUgYXJlYS54O1xuICAgIGFyZWEuaW5uZXJSYWRpdXMgPSBhcmVhLngwLCBkZWxldGUgYXJlYS54MDtcbiAgICBhcmVhLm91dGVyUmFkaXVzID0gYXJlYS54MSwgZGVsZXRlIGFyZWEueDE7XG4gICAgYXJlYS5hbmdsZSA9IGFyZWEueSwgZGVsZXRlIGFyZWEueTtcbiAgICBhcmVhLnN0YXJ0QW5nbGUgPSBhcmVhLnkwLCBkZWxldGUgYXJlYS55MDtcbiAgICBhcmVhLmVuZEFuZ2xlID0gYXJlYS55MSwgZGVsZXRlIGFyZWEueTE7XG4gICAgcmV0dXJuIGFyZWE7XG4gIH07XG4gIGQzLnN2Zy5jaG9yZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSBkM19zb3VyY2UsIHRhcmdldCA9IGQzX3RhcmdldCwgcmFkaXVzID0gZDNfc3ZnX2Nob3JkUmFkaXVzLCBzdGFydEFuZ2xlID0gZDNfc3ZnX2FyY1N0YXJ0QW5nbGUsIGVuZEFuZ2xlID0gZDNfc3ZnX2FyY0VuZEFuZ2xlO1xuICAgIGZ1bmN0aW9uIGNob3JkKGQsIGkpIHtcbiAgICAgIHZhciBzID0gc3ViZ3JvdXAodGhpcywgc291cmNlLCBkLCBpKSwgdCA9IHN1Ymdyb3VwKHRoaXMsIHRhcmdldCwgZCwgaSk7XG4gICAgICByZXR1cm4gXCJNXCIgKyBzLnAwICsgYXJjKHMuciwgcy5wMSwgcy5hMSAtIHMuYTApICsgKGVxdWFscyhzLCB0KSA/IGN1cnZlKHMuciwgcy5wMSwgcy5yLCBzLnAwKSA6IGN1cnZlKHMuciwgcy5wMSwgdC5yLCB0LnAwKSArIGFyYyh0LnIsIHQucDEsIHQuYTEgLSB0LmEwKSArIGN1cnZlKHQuciwgdC5wMSwgcy5yLCBzLnAwKSkgKyBcIlpcIjtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3ViZ3JvdXAoc2VsZiwgZiwgZCwgaSkge1xuICAgICAgdmFyIHN1Ymdyb3VwID0gZi5jYWxsKHNlbGYsIGQsIGkpLCByID0gcmFkaXVzLmNhbGwoc2VsZiwgc3ViZ3JvdXAsIGkpLCBhMCA9IHN0YXJ0QW5nbGUuY2FsbChzZWxmLCBzdWJncm91cCwgaSkgLSBoYWxmz4AsIGExID0gZW5kQW5nbGUuY2FsbChzZWxmLCBzdWJncm91cCwgaSkgLSBoYWxmz4A7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByOiByLFxuICAgICAgICBhMDogYTAsXG4gICAgICAgIGExOiBhMSxcbiAgICAgICAgcDA6IFsgciAqIE1hdGguY29zKGEwKSwgciAqIE1hdGguc2luKGEwKSBdLFxuICAgICAgICBwMTogWyByICogTWF0aC5jb3MoYTEpLCByICogTWF0aC5zaW4oYTEpIF1cbiAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgICByZXR1cm4gYS5hMCA9PSBiLmEwICYmIGEuYTEgPT0gYi5hMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXJjKHIsIHAsIGEpIHtcbiAgICAgIHJldHVybiBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiAwIFwiICsgKyhhID4gz4ApICsgXCIsMSBcIiArIHA7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGN1cnZlKHIwLCBwMCwgcjEsIHAxKSB7XG4gICAgICByZXR1cm4gXCJRIDAsMCBcIiArIHAxO1xuICAgIH1cbiAgICBjaG9yZC5yYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYWRpdXM7XG4gICAgICByYWRpdXMgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc291cmNlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc291cmNlO1xuICAgICAgc291cmNlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnRhcmdldCA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgICAgIHRhcmdldCA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zdGFydEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc3RhcnRBbmdsZTtcbiAgICAgIHN0YXJ0QW5nbGUgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuZW5kQW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBlbmRBbmdsZTtcbiAgICAgIGVuZEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIHJldHVybiBjaG9yZDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2Nob3JkUmFkaXVzKGQpIHtcbiAgICByZXR1cm4gZC5yYWRpdXM7XG4gIH1cbiAgZDMuc3ZnLmRpYWdvbmFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvdXJjZSA9IGQzX3NvdXJjZSwgdGFyZ2V0ID0gZDNfdGFyZ2V0LCBwcm9qZWN0aW9uID0gZDNfc3ZnX2RpYWdvbmFsUHJvamVjdGlvbjtcbiAgICBmdW5jdGlvbiBkaWFnb25hbChkLCBpKSB7XG4gICAgICB2YXIgcDAgPSBzb3VyY2UuY2FsbCh0aGlzLCBkLCBpKSwgcDMgPSB0YXJnZXQuY2FsbCh0aGlzLCBkLCBpKSwgbSA9IChwMC55ICsgcDMueSkgLyAyLCBwID0gWyBwMCwge1xuICAgICAgICB4OiBwMC54LFxuICAgICAgICB5OiBtXG4gICAgICB9LCB7XG4gICAgICAgIHg6IHAzLngsXG4gICAgICAgIHk6IG1cbiAgICAgIH0sIHAzIF07XG4gICAgICBwID0gcC5tYXAocHJvamVjdGlvbik7XG4gICAgICByZXR1cm4gXCJNXCIgKyBwWzBdICsgXCJDXCIgKyBwWzFdICsgXCIgXCIgKyBwWzJdICsgXCIgXCIgKyBwWzNdO1xuICAgIH1cbiAgICBkaWFnb25hbC5zb3VyY2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3VyY2U7XG4gICAgICBzb3VyY2UgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIGRpYWdvbmFsO1xuICAgIH07XG4gICAgZGlhZ29uYWwudGFyZ2V0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGFyZ2V0O1xuICAgICAgdGFyZ2V0ID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBkaWFnb25hbDtcbiAgICB9O1xuICAgIGRpYWdvbmFsLnByb2plY3Rpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcm9qZWN0aW9uO1xuICAgICAgcHJvamVjdGlvbiA9IHg7XG4gICAgICByZXR1cm4gZGlhZ29uYWw7XG4gICAgfTtcbiAgICByZXR1cm4gZGlhZ29uYWw7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19kaWFnb25hbFByb2plY3Rpb24oZCkge1xuICAgIHJldHVybiBbIGQueCwgZC55IF07XG4gIH1cbiAgZDMuc3ZnLmRpYWdvbmFsLnJhZGlhbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkaWFnb25hbCA9IGQzLnN2Zy5kaWFnb25hbCgpLCBwcm9qZWN0aW9uID0gZDNfc3ZnX2RpYWdvbmFsUHJvamVjdGlvbiwgcHJvamVjdGlvbl8gPSBkaWFnb25hbC5wcm9qZWN0aW9uO1xuICAgIGRpYWdvbmFsLnByb2plY3Rpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHByb2plY3Rpb25fKGQzX3N2Z19kaWFnb25hbFJhZGlhbFByb2plY3Rpb24ocHJvamVjdGlvbiA9IHgpKSA6IHByb2plY3Rpb247XG4gICAgfTtcbiAgICByZXR1cm4gZGlhZ29uYWw7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19kaWFnb25hbFJhZGlhbFByb2plY3Rpb24ocHJvamVjdGlvbikge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBkID0gcHJvamVjdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCByID0gZFswXSwgYSA9IGRbMV0gLSBoYWxmz4A7XG4gICAgICByZXR1cm4gWyByICogTWF0aC5jb3MoYSksIHIgKiBNYXRoLnNpbihhKSBdO1xuICAgIH07XG4gIH1cbiAgZDMuc3ZnLnN5bWJvbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0eXBlID0gZDNfc3ZnX3N5bWJvbFR5cGUsIHNpemUgPSBkM19zdmdfc3ltYm9sU2l6ZTtcbiAgICBmdW5jdGlvbiBzeW1ib2woZCwgaSkge1xuICAgICAgcmV0dXJuIChkM19zdmdfc3ltYm9scy5nZXQodHlwZS5jYWxsKHRoaXMsIGQsIGkpKSB8fCBkM19zdmdfc3ltYm9sQ2lyY2xlKShzaXplLmNhbGwodGhpcywgZCwgaSkpO1xuICAgIH1cbiAgICBzeW1ib2wudHlwZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHR5cGU7XG4gICAgICB0eXBlID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBzeW1ib2w7XG4gICAgfTtcbiAgICBzeW1ib2wuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBzeW1ib2w7XG4gICAgfTtcbiAgICByZXR1cm4gc3ltYm9sO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfc3ltYm9sU2l6ZSgpIHtcbiAgICByZXR1cm4gNjQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX3N5bWJvbFR5cGUoKSB7XG4gICAgcmV0dXJuIFwiY2lyY2xlXCI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX3N5bWJvbENpcmNsZShzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAvIM+AKTtcbiAgICByZXR1cm4gXCJNMCxcIiArIHIgKyBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiAwIDEsMSAwLFwiICsgLXIgKyBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiAwIDEsMSAwLFwiICsgciArIFwiWlwiO1xuICB9XG4gIHZhciBkM19zdmdfc3ltYm9scyA9IGQzLm1hcCh7XG4gICAgY2lyY2xlOiBkM19zdmdfc3ltYm9sQ2lyY2xlLFxuICAgIGNyb3NzOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gNSkgLyAyO1xuICAgICAgcmV0dXJuIFwiTVwiICsgLTMgKiByICsgXCIsXCIgKyAtciArIFwiSFwiICsgLXIgKyBcIlZcIiArIC0zICogciArIFwiSFwiICsgciArIFwiVlwiICsgLXIgKyBcIkhcIiArIDMgKiByICsgXCJWXCIgKyByICsgXCJIXCIgKyByICsgXCJWXCIgKyAzICogciArIFwiSFwiICsgLXIgKyBcIlZcIiArIHIgKyBcIkhcIiArIC0zICogciArIFwiWlwiO1xuICAgIH0sXG4gICAgZGlhbW9uZDogZnVuY3Rpb24oc2l6ZSkge1xuICAgICAgdmFyIHJ5ID0gTWF0aC5zcXJ0KHNpemUgLyAoMiAqIGQzX3N2Z19zeW1ib2xUYW4zMCkpLCByeCA9IHJ5ICogZDNfc3ZnX3N5bWJvbFRhbjMwO1xuICAgICAgcmV0dXJuIFwiTTAsXCIgKyAtcnkgKyBcIkxcIiArIHJ4ICsgXCIsMFwiICsgXCIgMCxcIiArIHJ5ICsgXCIgXCIgKyAtcnggKyBcIiwwXCIgKyBcIlpcIjtcbiAgICB9LFxuICAgIHNxdWFyZTogZnVuY3Rpb24oc2l6ZSkge1xuICAgICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSkgLyAyO1xuICAgICAgcmV0dXJuIFwiTVwiICsgLXIgKyBcIixcIiArIC1yICsgXCJMXCIgKyByICsgXCIsXCIgKyAtciArIFwiIFwiICsgciArIFwiLFwiICsgciArIFwiIFwiICsgLXIgKyBcIixcIiArIHIgKyBcIlpcIjtcbiAgICB9LFxuICAgIFwidHJpYW5nbGUtZG93blwiOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgcnggPSBNYXRoLnNxcnQoc2l6ZSAvIGQzX3N2Z19zeW1ib2xTcXJ0MyksIHJ5ID0gcnggKiBkM19zdmdfc3ltYm9sU3FydDMgLyAyO1xuICAgICAgcmV0dXJuIFwiTTAsXCIgKyByeSArIFwiTFwiICsgcnggKyBcIixcIiArIC1yeSArIFwiIFwiICsgLXJ4ICsgXCIsXCIgKyAtcnkgKyBcIlpcIjtcbiAgICB9LFxuICAgIFwidHJpYW5nbGUtdXBcIjogZnVuY3Rpb24oc2l6ZSkge1xuICAgICAgdmFyIHJ4ID0gTWF0aC5zcXJ0KHNpemUgLyBkM19zdmdfc3ltYm9sU3FydDMpLCByeSA9IHJ4ICogZDNfc3ZnX3N5bWJvbFNxcnQzIC8gMjtcbiAgICAgIHJldHVybiBcIk0wLFwiICsgLXJ5ICsgXCJMXCIgKyByeCArIFwiLFwiICsgcnkgKyBcIiBcIiArIC1yeCArIFwiLFwiICsgcnkgKyBcIlpcIjtcbiAgICB9XG4gIH0pO1xuICBkMy5zdmcuc3ltYm9sVHlwZXMgPSBkM19zdmdfc3ltYm9scy5rZXlzKCk7XG4gIHZhciBkM19zdmdfc3ltYm9sU3FydDMgPSBNYXRoLnNxcnQoMyksIGQzX3N2Z19zeW1ib2xUYW4zMCA9IE1hdGgudGFuKDMwICogZDNfcmFkaWFucyk7XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS50cmFuc2l0aW9uID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpZCA9IGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgfHwgKytkM190cmFuc2l0aW9uSWQsIG5zID0gZDNfdHJhbnNpdGlvbk5hbWVzcGFjZShuYW1lKSwgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBub2RlLCB0cmFuc2l0aW9uID0gZDNfdHJhbnNpdGlvbkluaGVyaXQgfHwge1xuICAgICAgdGltZTogRGF0ZS5ub3coKSxcbiAgICAgIGVhc2U6IGQzX2Vhc2VfY3ViaWNJbk91dCxcbiAgICAgIGRlbGF5OiAwLFxuICAgICAgZHVyYXRpb246IDI1MFxuICAgIH07XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGQzX3RyYW5zaXRpb25Ob2RlKG5vZGUsIGksIG5zLCBpZCwgdHJhbnNpdGlvbik7XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgbnMsIGlkKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmludGVycnVwdCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKG5hbWUgPT0gbnVsbCA/IGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQgOiBkM19zZWxlY3Rpb25faW50ZXJydXB0TlMoZDNfdHJhbnNpdGlvbk5hbWVzcGFjZShuYW1lKSkpO1xuICB9O1xuICB2YXIgZDNfc2VsZWN0aW9uX2ludGVycnVwdCA9IGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHROUyhkM190cmFuc2l0aW9uTmFtZXNwYWNlKCkpO1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25faW50ZXJydXB0TlMobnMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbG9jaywgYWN0aXZlSWQsIGFjdGl2ZTtcbiAgICAgIGlmICgobG9jayA9IHRoaXNbbnNdKSAmJiAoYWN0aXZlID0gbG9ja1thY3RpdmVJZCA9IGxvY2suYWN0aXZlXSkpIHtcbiAgICAgICAgYWN0aXZlLnRpbWVyLmMgPSBudWxsO1xuICAgICAgICBhY3RpdmUudGltZXIudCA9IE5hTjtcbiAgICAgICAgaWYgKC0tbG9jay5jb3VudCkgZGVsZXRlIGxvY2tbYWN0aXZlSWRdOyBlbHNlIGRlbGV0ZSB0aGlzW25zXTtcbiAgICAgICAgbG9jay5hY3RpdmUgKz0gLjU7XG4gICAgICAgIGFjdGl2ZS5ldmVudCAmJiBhY3RpdmUuZXZlbnQuaW50ZXJydXB0LmNhbGwodGhpcywgdGhpcy5fX2RhdGFfXywgYWN0aXZlLmluZGV4KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RyYW5zaXRpb24oZ3JvdXBzLCBucywgaWQpIHtcbiAgICBkM19zdWJjbGFzcyhncm91cHMsIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUpO1xuICAgIGdyb3Vwcy5uYW1lc3BhY2UgPSBucztcbiAgICBncm91cHMuaWQgPSBpZDtcbiAgICByZXR1cm4gZ3JvdXBzO1xuICB9XG4gIHZhciBkM190cmFuc2l0aW9uUHJvdG90eXBlID0gW10sIGQzX3RyYW5zaXRpb25JZCA9IDAsIGQzX3RyYW5zaXRpb25Jbmhlcml0SWQsIGQzX3RyYW5zaXRpb25Jbmhlcml0O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmNhbGwgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2FsbDtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5lbXB0eSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5lbXB0eTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5ub2RlID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLm5vZGU7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2l6ZSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5zaXplO1xuICBkMy50cmFuc2l0aW9uID0gZnVuY3Rpb24oc2VsZWN0aW9uLCBuYW1lKSB7XG4gICAgcmV0dXJuIHNlbGVjdGlvbiAmJiBzZWxlY3Rpb24udHJhbnNpdGlvbiA/IGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgPyBzZWxlY3Rpb24udHJhbnNpdGlvbihuYW1lKSA6IHNlbGVjdGlvbiA6IGQzLnNlbGVjdGlvbigpLnRyYW5zaXRpb24oc2VsZWN0aW9uKTtcbiAgfTtcbiAgZDMudHJhbnNpdGlvbi5wcm90b3R5cGUgPSBkM190cmFuc2l0aW9uUHJvdG90eXBlO1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnNlbGVjdCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZSwgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBzdWJub2RlLCBub2RlO1xuICAgIHNlbGVjdG9yID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0b3IuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkpIHtcbiAgICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICAgIGQzX3RyYW5zaXRpb25Ob2RlKHN1Ym5vZGUsIGksIG5zLCBpZCwgbm9kZVtuc11baWRdKTtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCBucywgaWQpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnNlbGVjdEFsbCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZCwgbnMgPSB0aGlzLm5hbWVzcGFjZSwgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBzdWJub2Rlcywgbm9kZSwgc3Vibm9kZSwgdHJhbnNpdGlvbjtcbiAgICBzZWxlY3RvciA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgICAgdHJhbnNpdGlvbiA9IG5vZGVbbnNdW2lkXTtcbiAgICAgICAgICBzdWJub2RlcyA9IHNlbGVjdG9yLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaik7XG4gICAgICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICAgICAgZm9yICh2YXIgayA9IC0xLCBvID0gc3Vibm9kZXMubGVuZ3RoOyArK2sgPCBvOyApIHtcbiAgICAgICAgICAgIGlmIChzdWJub2RlID0gc3Vibm9kZXNba10pIGQzX3RyYW5zaXRpb25Ob2RlKHN1Ym5vZGUsIGssIG5zLCBpZCwgdHJhbnNpdGlvbik7XG4gICAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIG5zLCBpZCk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24oZmlsdGVyKSB7XG4gICAgdmFyIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgZ3JvdXAsIG5vZGU7XG4gICAgaWYgKHR5cGVvZiBmaWx0ZXIgIT09IFwiZnVuY3Rpb25cIikgZmlsdGVyID0gZDNfc2VsZWN0aW9uX2ZpbHRlcihmaWx0ZXIpO1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gdGhpcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgZmlsdGVyLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgdGhpcy5uYW1lc3BhY2UsIHRoaXMuaWQpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnR3ZWVuID0gZnVuY3Rpb24obmFtZSwgdHdlZW4pIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIHRoaXMubm9kZSgpW25zXVtpZF0udHdlZW4uZ2V0KG5hbWUpO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCB0d2VlbiA9PSBudWxsID8gZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLnR3ZWVuLnJlbW92ZShuYW1lKTtcbiAgICB9IDogZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLnR3ZWVuLnNldChuYW1lLCB0d2Vlbik7XG4gICAgfSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zaXRpb25fdHdlZW4oZ3JvdXBzLCBuYW1lLCB2YWx1ZSwgdHdlZW4pIHtcbiAgICB2YXIgaWQgPSBncm91cHMuaWQsIG5zID0gZ3JvdXBzLm5hbWVzcGFjZTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2goZ3JvdXBzLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKG5vZGUsIGksIGopIHtcbiAgICAgIG5vZGVbbnNdW2lkXS50d2Vlbi5zZXQobmFtZSwgdHdlZW4odmFsdWUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkpO1xuICAgIH0gOiAodmFsdWUgPSB0d2Vlbih2YWx1ZSksIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGVbbnNdW2lkXS50d2Vlbi5zZXQobmFtZSwgdmFsdWUpO1xuICAgIH0pKTtcbiAgfVxuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmF0dHIgPSBmdW5jdGlvbihuYW1lTlMsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWVOUykgdGhpcy5hdHRyKHZhbHVlLCBuYW1lTlNbdmFsdWVdKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICB2YXIgaW50ZXJwb2xhdGUgPSBuYW1lTlMgPT0gXCJ0cmFuc2Zvcm1cIiA/IGQzX2ludGVycG9sYXRlVHJhbnNmb3JtIDogZDNfaW50ZXJwb2xhdGUsIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWVOUyk7XG4gICAgZnVuY3Rpb24gYXR0ck51bGwoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ck51bGxOUygpIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJUd2VlbihiKSB7XG4gICAgICByZXR1cm4gYiA9PSBudWxsID8gYXR0ck51bGwgOiAoYiArPSBcIlwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGEgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKSwgaTtcbiAgICAgICAgcmV0dXJuIGEgIT09IGIgJiYgKGkgPSBpbnRlcnBvbGF0ZShhLCBiKSwgZnVuY3Rpb24odCkge1xuICAgICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIGkodCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyVHdlZW5OUyhiKSB7XG4gICAgICByZXR1cm4gYiA9PSBudWxsID8gYXR0ck51bGxOUyA6IChiICs9IFwiXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYSA9IHRoaXMuZ2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCksIGk7XG4gICAgICAgIHJldHVybiBhICE9PSBiICYmIChpID0gaW50ZXJwb2xhdGUoYSwgYiksIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwsIGkodCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbl90d2Vlbih0aGlzLCBcImF0dHIuXCIgKyBuYW1lTlMsIHZhbHVlLCBuYW1lLmxvY2FsID8gYXR0clR3ZWVuTlMgOiBhdHRyVHdlZW4pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmF0dHJUd2VlbiA9IGZ1bmN0aW9uKG5hbWVOUywgdHdlZW4pIHtcbiAgICB2YXIgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZU5TKTtcbiAgICBmdW5jdGlvbiBhdHRyVHdlZW4oZCwgaSkge1xuICAgICAgdmFyIGYgPSB0d2Vlbi5jYWxsKHRoaXMsIGQsIGksIHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpKTtcbiAgICAgIHJldHVybiBmICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgZih0KSk7XG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyVHdlZW5OUyhkLCBpKSB7XG4gICAgICB2YXIgZiA9IHR3ZWVuLmNhbGwodGhpcywgZCwgaSwgdGhpcy5nZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKSk7XG4gICAgICByZXR1cm4gZiAmJiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCwgZih0KSk7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy50d2VlbihcImF0dHIuXCIgKyBuYW1lTlMsIG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2Vlbik7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc3R5bGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAzKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKG4gPCAyKSB2YWx1ZSA9IFwiXCI7XG4gICAgICAgIGZvciAocHJpb3JpdHkgaW4gbmFtZSkgdGhpcy5zdHlsZShwcmlvcml0eSwgbmFtZVtwcmlvcml0eV0sIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICBwcmlvcml0eSA9IFwiXCI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlTnVsbCgpIHtcbiAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlU3RyaW5nKGIpIHtcbiAgICAgIHJldHVybiBiID09IG51bGwgPyBzdHlsZU51bGwgOiAoYiArPSBcIlwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGEgPSBkM193aW5kb3codGhpcykuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpLCBpO1xuICAgICAgICByZXR1cm4gYSAhPT0gYiAmJiAoaSA9IGQzX2ludGVycG9sYXRlKGEsIGIpLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBpKHQpLCBwcmlvcml0eSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uX3R3ZWVuKHRoaXMsIFwic3R5bGUuXCIgKyBuYW1lLCB2YWx1ZSwgc3R5bGVTdHJpbmcpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnN0eWxlVHdlZW4gPSBmdW5jdGlvbihuYW1lLCB0d2VlbiwgcHJpb3JpdHkpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIHByaW9yaXR5ID0gXCJcIjtcbiAgICBmdW5jdGlvbiBzdHlsZVR3ZWVuKGQsIGkpIHtcbiAgICAgIHZhciBmID0gdHdlZW4uY2FsbCh0aGlzLCBkLCBpLCBkM193aW5kb3codGhpcykuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpKTtcbiAgICAgIHJldHVybiBmICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBmKHQpLCBwcmlvcml0eSk7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy50d2VlbihcInN0eWxlLlwiICsgbmFtZSwgc3R5bGVUd2Vlbik7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb25fdHdlZW4odGhpcywgXCJ0ZXh0XCIsIHZhbHVlLCBkM190cmFuc2l0aW9uX3RleHQpO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uX3RleHQoYikge1xuICAgIGlmIChiID09IG51bGwpIGIgPSBcIlwiO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSBiO1xuICAgIH07XG4gIH1cbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbnMgPSB0aGlzLm5hbWVzcGFjZTtcbiAgICByZXR1cm4gdGhpcy5lYWNoKFwiZW5kLnRyYW5zaXRpb25cIiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcDtcbiAgICAgIGlmICh0aGlzW25zXS5jb3VudCA8IDIgJiYgKHAgPSB0aGlzLnBhcmVudE5vZGUpKSBwLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgIH0pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmVhc2UgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAxKSByZXR1cm4gdGhpcy5ub2RlKClbbnNdW2lkXS5lYXNlO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdmFsdWUgPSBkMy5lYXNlLmFwcGx5KGQzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlW25zXVtpZF0uZWFzZSA9IHZhbHVlO1xuICAgIH0pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmRlbGF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIHRoaXMubm9kZSgpW25zXVtpZF0uZGVsYXk7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgbm9kZVtuc11baWRdLmRlbGF5ID0gK3ZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaik7XG4gICAgfSA6ICh2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLmRlbGF5ID0gdmFsdWU7XG4gICAgfSkpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmR1cmF0aW9uID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBucyA9IHRoaXMubmFtZXNwYWNlO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIHRoaXMubm9kZSgpW25zXVtpZF0uZHVyYXRpb247XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgbm9kZVtuc11baWRdLmR1cmF0aW9uID0gTWF0aC5tYXgoMSwgdmFsdWUuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSk7XG4gICAgfSA6ICh2YWx1ZSA9IE1hdGgubWF4KDEsIHZhbHVlKSwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZVtuc11baWRdLmR1cmF0aW9uID0gdmFsdWU7XG4gICAgfSkpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmVhY2ggPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgIHZhciBpZCA9IHRoaXMuaWQsIG5zID0gdGhpcy5uYW1lc3BhY2U7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICB2YXIgaW5oZXJpdCA9IGQzX3RyYW5zaXRpb25Jbmhlcml0LCBpbmhlcml0SWQgPSBkM190cmFuc2l0aW9uSW5oZXJpdElkO1xuICAgICAgdHJ5IHtcbiAgICAgICAgZDNfdHJhbnNpdGlvbkluaGVyaXRJZCA9IGlkO1xuICAgICAgICBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICAgICAgZDNfdHJhbnNpdGlvbkluaGVyaXQgPSBub2RlW25zXVtpZF07XG4gICAgICAgICAgdHlwZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgICAgICB9KTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0ID0gaW5oZXJpdDtcbiAgICAgICAgZDNfdHJhbnNpdGlvbkluaGVyaXRJZCA9IGluaGVyaXRJZDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgdHJhbnNpdGlvbiA9IG5vZGVbbnNdW2lkXTtcbiAgICAgICAgKHRyYW5zaXRpb24uZXZlbnQgfHwgKHRyYW5zaXRpb24uZXZlbnQgPSBkMy5kaXNwYXRjaChcInN0YXJ0XCIsIFwiZW5kXCIsIFwiaW50ZXJydXB0XCIpKSkub24odHlwZSwgbGlzdGVuZXIpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnRyYW5zaXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaWQwID0gdGhpcy5pZCwgaWQxID0gKytkM190cmFuc2l0aW9uSWQsIG5zID0gdGhpcy5uYW1lc3BhY2UsIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgZ3JvdXAsIG5vZGUsIHRyYW5zaXRpb247XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICB0cmFuc2l0aW9uID0gbm9kZVtuc11baWQwXTtcbiAgICAgICAgICBkM190cmFuc2l0aW9uTm9kZShub2RlLCBpLCBucywgaWQxLCB7XG4gICAgICAgICAgICB0aW1lOiB0cmFuc2l0aW9uLnRpbWUsXG4gICAgICAgICAgICBlYXNlOiB0cmFuc2l0aW9uLmVhc2UsXG4gICAgICAgICAgICBkZWxheTogdHJhbnNpdGlvbi5kZWxheSArIHRyYW5zaXRpb24uZHVyYXRpb24sXG4gICAgICAgICAgICBkdXJhdGlvbjogdHJhbnNpdGlvbi5kdXJhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgbnMsIGlkMSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zaXRpb25OYW1lc3BhY2UobmFtZSkge1xuICAgIHJldHVybiBuYW1lID09IG51bGwgPyBcIl9fdHJhbnNpdGlvbl9fXCIgOiBcIl9fdHJhbnNpdGlvbl9cIiArIG5hbWUgKyBcIl9fXCI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbk5vZGUobm9kZSwgaSwgbnMsIGlkLCBpbmhlcml0KSB7XG4gICAgdmFyIGxvY2sgPSBub2RlW25zXSB8fCAobm9kZVtuc10gPSB7XG4gICAgICBhY3RpdmU6IDAsXG4gICAgICBjb3VudDogMFxuICAgIH0pLCB0cmFuc2l0aW9uID0gbG9ja1tpZF0sIHRpbWUsIHRpbWVyLCBkdXJhdGlvbiwgZWFzZSwgdHdlZW5zO1xuICAgIGZ1bmN0aW9uIHNjaGVkdWxlKGVsYXBzZWQpIHtcbiAgICAgIHZhciBkZWxheSA9IHRyYW5zaXRpb24uZGVsYXk7XG4gICAgICB0aW1lci50ID0gZGVsYXkgKyB0aW1lO1xuICAgICAgaWYgKGRlbGF5IDw9IGVsYXBzZWQpIHJldHVybiBzdGFydChlbGFwc2VkIC0gZGVsYXkpO1xuICAgICAgdGltZXIuYyA9IHN0YXJ0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdGFydChlbGFwc2VkKSB7XG4gICAgICB2YXIgYWN0aXZlSWQgPSBsb2NrLmFjdGl2ZSwgYWN0aXZlID0gbG9ja1thY3RpdmVJZF07XG4gICAgICBpZiAoYWN0aXZlKSB7XG4gICAgICAgIGFjdGl2ZS50aW1lci5jID0gbnVsbDtcbiAgICAgICAgYWN0aXZlLnRpbWVyLnQgPSBOYU47XG4gICAgICAgIC0tbG9jay5jb3VudDtcbiAgICAgICAgZGVsZXRlIGxvY2tbYWN0aXZlSWRdO1xuICAgICAgICBhY3RpdmUuZXZlbnQgJiYgYWN0aXZlLmV2ZW50LmludGVycnVwdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGFjdGl2ZS5pbmRleCk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBjYW5jZWxJZCBpbiBsb2NrKSB7XG4gICAgICAgIGlmICgrY2FuY2VsSWQgPCBpZCkge1xuICAgICAgICAgIHZhciBjYW5jZWwgPSBsb2NrW2NhbmNlbElkXTtcbiAgICAgICAgICBjYW5jZWwudGltZXIuYyA9IG51bGw7XG4gICAgICAgICAgY2FuY2VsLnRpbWVyLnQgPSBOYU47XG4gICAgICAgICAgLS1sb2NrLmNvdW50O1xuICAgICAgICAgIGRlbGV0ZSBsb2NrW2NhbmNlbElkXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGltZXIuYyA9IHRpY2s7XG4gICAgICBkM190aW1lcihmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRpbWVyLmMgJiYgdGljayhlbGFwc2VkIHx8IDEpKSB7XG4gICAgICAgICAgdGltZXIuYyA9IG51bGw7XG4gICAgICAgICAgdGltZXIudCA9IE5hTjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH0sIDAsIHRpbWUpO1xuICAgICAgbG9jay5hY3RpdmUgPSBpZDtcbiAgICAgIHRyYW5zaXRpb24uZXZlbnQgJiYgdHJhbnNpdGlvbi5ldmVudC5zdGFydC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGkpO1xuICAgICAgdHdlZW5zID0gW107XG4gICAgICB0cmFuc2l0aW9uLnR3ZWVuLmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPSB2YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGkpKSB7XG4gICAgICAgICAgdHdlZW5zLnB1c2godmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGVhc2UgPSB0cmFuc2l0aW9uLmVhc2U7XG4gICAgICBkdXJhdGlvbiA9IHRyYW5zaXRpb24uZHVyYXRpb247XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgICAgdmFyIHQgPSBlbGFwc2VkIC8gZHVyYXRpb24sIGUgPSBlYXNlKHQpLCBuID0gdHdlZW5zLmxlbmd0aDtcbiAgICAgIHdoaWxlIChuID4gMCkge1xuICAgICAgICB0d2VlbnNbLS1uXS5jYWxsKG5vZGUsIGUpO1xuICAgICAgfVxuICAgICAgaWYgKHQgPj0gMSkge1xuICAgICAgICB0cmFuc2l0aW9uLmV2ZW50ICYmIHRyYW5zaXRpb24uZXZlbnQuZW5kLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSk7XG4gICAgICAgIGlmICgtLWxvY2suY291bnQpIGRlbGV0ZSBsb2NrW2lkXTsgZWxzZSBkZWxldGUgbm9kZVtuc107XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRyYW5zaXRpb24pIHtcbiAgICAgIHRpbWUgPSBpbmhlcml0LnRpbWU7XG4gICAgICB0aW1lciA9IGQzX3RpbWVyKHNjaGVkdWxlLCAwLCB0aW1lKTtcbiAgICAgIHRyYW5zaXRpb24gPSBsb2NrW2lkXSA9IHtcbiAgICAgICAgdHdlZW46IG5ldyBkM19NYXAoKSxcbiAgICAgICAgdGltZTogdGltZSxcbiAgICAgICAgdGltZXI6IHRpbWVyLFxuICAgICAgICBkZWxheTogaW5oZXJpdC5kZWxheSxcbiAgICAgICAgZHVyYXRpb246IGluaGVyaXQuZHVyYXRpb24sXG4gICAgICAgIGVhc2U6IGluaGVyaXQuZWFzZSxcbiAgICAgICAgaW5kZXg6IGlcbiAgICAgIH07XG4gICAgICBpbmhlcml0ID0gbnVsbDtcbiAgICAgICsrbG9jay5jb3VudDtcbiAgICB9XG4gIH1cbiAgZDMuc3ZnLmF4aXMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NhbGUgPSBkMy5zY2FsZS5saW5lYXIoKSwgb3JpZW50ID0gZDNfc3ZnX2F4aXNEZWZhdWx0T3JpZW50LCBpbm5lclRpY2tTaXplID0gNiwgb3V0ZXJUaWNrU2l6ZSA9IDYsIHRpY2tQYWRkaW5nID0gMywgdGlja0FyZ3VtZW50c18gPSBbIDEwIF0sIHRpY2tWYWx1ZXMgPSBudWxsLCB0aWNrRm9ybWF0XztcbiAgICBmdW5jdGlvbiBheGlzKGcpIHtcbiAgICAgIGcuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGcgPSBkMy5zZWxlY3QodGhpcyk7XG4gICAgICAgIHZhciBzY2FsZTAgPSB0aGlzLl9fY2hhcnRfXyB8fCBzY2FsZSwgc2NhbGUxID0gdGhpcy5fX2NoYXJ0X18gPSBzY2FsZS5jb3B5KCk7XG4gICAgICAgIHZhciB0aWNrcyA9IHRpY2tWYWx1ZXMgPT0gbnVsbCA/IHNjYWxlMS50aWNrcyA/IHNjYWxlMS50aWNrcy5hcHBseShzY2FsZTEsIHRpY2tBcmd1bWVudHNfKSA6IHNjYWxlMS5kb21haW4oKSA6IHRpY2tWYWx1ZXMsIHRpY2tGb3JtYXQgPSB0aWNrRm9ybWF0XyA9PSBudWxsID8gc2NhbGUxLnRpY2tGb3JtYXQgPyBzY2FsZTEudGlja0Zvcm1hdC5hcHBseShzY2FsZTEsIHRpY2tBcmd1bWVudHNfKSA6IGQzX2lkZW50aXR5IDogdGlja0Zvcm1hdF8sIHRpY2sgPSBnLnNlbGVjdEFsbChcIi50aWNrXCIpLmRhdGEodGlja3MsIHNjYWxlMSksIHRpY2tFbnRlciA9IHRpY2suZW50ZXIoKS5pbnNlcnQoXCJnXCIsIFwiLmRvbWFpblwiKS5hdHRyKFwiY2xhc3NcIiwgXCJ0aWNrXCIpLnN0eWxlKFwib3BhY2l0eVwiLCDOtSksIHRpY2tFeGl0ID0gZDMudHJhbnNpdGlvbih0aWNrLmV4aXQoKSkuc3R5bGUoXCJvcGFjaXR5XCIsIM61KS5yZW1vdmUoKSwgdGlja1VwZGF0ZSA9IGQzLnRyYW5zaXRpb24odGljay5vcmRlcigpKS5zdHlsZShcIm9wYWNpdHlcIiwgMSksIHRpY2tTcGFjaW5nID0gTWF0aC5tYXgoaW5uZXJUaWNrU2l6ZSwgMCkgKyB0aWNrUGFkZGluZywgdGlja1RyYW5zZm9ybTtcbiAgICAgICAgdmFyIHJhbmdlID0gZDNfc2NhbGVSYW5nZShzY2FsZTEpLCBwYXRoID0gZy5zZWxlY3RBbGwoXCIuZG9tYWluXCIpLmRhdGEoWyAwIF0pLCBwYXRoVXBkYXRlID0gKHBhdGguZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJjbGFzc1wiLCBcImRvbWFpblwiKSwgXG4gICAgICAgIGQzLnRyYW5zaXRpb24ocGF0aCkpO1xuICAgICAgICB0aWNrRW50ZXIuYXBwZW5kKFwibGluZVwiKTtcbiAgICAgICAgdGlja0VudGVyLmFwcGVuZChcInRleHRcIik7XG4gICAgICAgIHZhciBsaW5lRW50ZXIgPSB0aWNrRW50ZXIuc2VsZWN0KFwibGluZVwiKSwgbGluZVVwZGF0ZSA9IHRpY2tVcGRhdGUuc2VsZWN0KFwibGluZVwiKSwgdGV4dCA9IHRpY2suc2VsZWN0KFwidGV4dFwiKS50ZXh0KHRpY2tGb3JtYXQpLCB0ZXh0RW50ZXIgPSB0aWNrRW50ZXIuc2VsZWN0KFwidGV4dFwiKSwgdGV4dFVwZGF0ZSA9IHRpY2tVcGRhdGUuc2VsZWN0KFwidGV4dFwiKSwgc2lnbiA9IG9yaWVudCA9PT0gXCJ0b3BcIiB8fCBvcmllbnQgPT09IFwibGVmdFwiID8gLTEgOiAxLCB4MSwgeDIsIHkxLCB5MjtcbiAgICAgICAgaWYgKG9yaWVudCA9PT0gXCJib3R0b21cIiB8fCBvcmllbnQgPT09IFwidG9wXCIpIHtcbiAgICAgICAgICB0aWNrVHJhbnNmb3JtID0gZDNfc3ZnX2F4aXNYLCB4MSA9IFwieFwiLCB5MSA9IFwieVwiLCB4MiA9IFwieDJcIiwgeTIgPSBcInkyXCI7XG4gICAgICAgICAgdGV4dC5hdHRyKFwiZHlcIiwgc2lnbiA8IDAgPyBcIjBlbVwiIDogXCIuNzFlbVwiKS5zdHlsZShcInRleHQtYW5jaG9yXCIsIFwibWlkZGxlXCIpO1xuICAgICAgICAgIHBhdGhVcGRhdGUuYXR0cihcImRcIiwgXCJNXCIgKyByYW5nZVswXSArIFwiLFwiICsgc2lnbiAqIG91dGVyVGlja1NpemUgKyBcIlYwSFwiICsgcmFuZ2VbMV0gKyBcIlZcIiArIHNpZ24gKiBvdXRlclRpY2tTaXplKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aWNrVHJhbnNmb3JtID0gZDNfc3ZnX2F4aXNZLCB4MSA9IFwieVwiLCB5MSA9IFwieFwiLCB4MiA9IFwieTJcIiwgeTIgPSBcIngyXCI7XG4gICAgICAgICAgdGV4dC5hdHRyKFwiZHlcIiwgXCIuMzJlbVwiKS5zdHlsZShcInRleHQtYW5jaG9yXCIsIHNpZ24gPCAwID8gXCJlbmRcIiA6IFwic3RhcnRcIik7XG4gICAgICAgICAgcGF0aFVwZGF0ZS5hdHRyKFwiZFwiLCBcIk1cIiArIHNpZ24gKiBvdXRlclRpY2tTaXplICsgXCIsXCIgKyByYW5nZVswXSArIFwiSDBWXCIgKyByYW5nZVsxXSArIFwiSFwiICsgc2lnbiAqIG91dGVyVGlja1NpemUpO1xuICAgICAgICB9XG4gICAgICAgIGxpbmVFbnRlci5hdHRyKHkyLCBzaWduICogaW5uZXJUaWNrU2l6ZSk7XG4gICAgICAgIHRleHRFbnRlci5hdHRyKHkxLCBzaWduICogdGlja1NwYWNpbmcpO1xuICAgICAgICBsaW5lVXBkYXRlLmF0dHIoeDIsIDApLmF0dHIoeTIsIHNpZ24gKiBpbm5lclRpY2tTaXplKTtcbiAgICAgICAgdGV4dFVwZGF0ZS5hdHRyKHgxLCAwKS5hdHRyKHkxLCBzaWduICogdGlja1NwYWNpbmcpO1xuICAgICAgICBpZiAoc2NhbGUxLnJhbmdlQmFuZCkge1xuICAgICAgICAgIHZhciB4ID0gc2NhbGUxLCBkeCA9IHgucmFuZ2VCYW5kKCkgLyAyO1xuICAgICAgICAgIHNjYWxlMCA9IHNjYWxlMSA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJldHVybiB4KGQpICsgZHg7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIGlmIChzY2FsZTAucmFuZ2VCYW5kKSB7XG4gICAgICAgICAgc2NhbGUwID0gc2NhbGUxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpY2tFeGl0LmNhbGwodGlja1RyYW5zZm9ybSwgc2NhbGUxLCBzY2FsZTApO1xuICAgICAgICB9XG4gICAgICAgIHRpY2tFbnRlci5jYWxsKHRpY2tUcmFuc2Zvcm0sIHNjYWxlMCwgc2NhbGUxKTtcbiAgICAgICAgdGlja1VwZGF0ZS5jYWxsKHRpY2tUcmFuc2Zvcm0sIHNjYWxlMSwgc2NhbGUxKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBheGlzLnNjYWxlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2NhbGU7XG4gICAgICBzY2FsZSA9IHg7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMub3JpZW50ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JpZW50O1xuICAgICAgb3JpZW50ID0geCBpbiBkM19zdmdfYXhpc09yaWVudHMgPyB4ICsgXCJcIiA6IGQzX3N2Z19heGlzRGVmYXVsdE9yaWVudDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja0FyZ3VtZW50c187XG4gICAgICB0aWNrQXJndW1lbnRzXyA9IGQzX2FycmF5KGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1ZhbHVlcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRpY2tWYWx1ZXM7XG4gICAgICB0aWNrVmFsdWVzID0geDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrRm9ybWF0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja0Zvcm1hdF87XG4gICAgICB0aWNrRm9ybWF0XyA9IHg7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1NpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICBpZiAoIW4pIHJldHVybiBpbm5lclRpY2tTaXplO1xuICAgICAgaW5uZXJUaWNrU2l6ZSA9ICt4O1xuICAgICAgb3V0ZXJUaWNrU2l6ZSA9ICthcmd1bWVudHNbbiAtIDFdO1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLmlubmVyVGlja1NpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbm5lclRpY2tTaXplO1xuICAgICAgaW5uZXJUaWNrU2l6ZSA9ICt4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLm91dGVyVGlja1NpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvdXRlclRpY2tTaXplO1xuICAgICAgb3V0ZXJUaWNrU2l6ZSA9ICt4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tQYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja1BhZGRpbmc7XG4gICAgICB0aWNrUGFkZGluZyA9ICt4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tTdWJkaXZpZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoICYmIGF4aXM7XG4gICAgfTtcbiAgICByZXR1cm4gYXhpcztcbiAgfTtcbiAgdmFyIGQzX3N2Z19heGlzRGVmYXVsdE9yaWVudCA9IFwiYm90dG9tXCIsIGQzX3N2Z19heGlzT3JpZW50cyA9IHtcbiAgICB0b3A6IDEsXG4gICAgcmlnaHQ6IDEsXG4gICAgYm90dG9tOiAxLFxuICAgIGxlZnQ6IDFcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2F4aXNYKHNlbGVjdGlvbiwgeDAsIHgxKSB7XG4gICAgc2VsZWN0aW9uLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIHYwID0geDAoZCk7XG4gICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyAoaXNGaW5pdGUodjApID8gdjAgOiB4MShkKSkgKyBcIiwwKVwiO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19heGlzWShzZWxlY3Rpb24sIHkwLCB5MSkge1xuICAgIHNlbGVjdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciB2MCA9IHkwKGQpO1xuICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKDAsXCIgKyAoaXNGaW5pdGUodjApID8gdjAgOiB5MShkKSkgKyBcIilcIjtcbiAgICB9KTtcbiAgfVxuICBkMy5zdmcuYnJ1c2ggPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZXZlbnQgPSBkM19ldmVudERpc3BhdGNoKGJydXNoLCBcImJydXNoc3RhcnRcIiwgXCJicnVzaFwiLCBcImJydXNoZW5kXCIpLCB4ID0gbnVsbCwgeSA9IG51bGwsIHhFeHRlbnQgPSBbIDAsIDAgXSwgeUV4dGVudCA9IFsgMCwgMCBdLCB4RXh0ZW50RG9tYWluLCB5RXh0ZW50RG9tYWluLCB4Q2xhbXAgPSB0cnVlLCB5Q2xhbXAgPSB0cnVlLCByZXNpemVzID0gZDNfc3ZnX2JydXNoUmVzaXplc1swXTtcbiAgICBmdW5jdGlvbiBicnVzaChnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBnID0gZDMuc2VsZWN0KHRoaXMpLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIikuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpLm9uKFwibW91c2Vkb3duLmJydXNoXCIsIGJydXNoc3RhcnQpLm9uKFwidG91Y2hzdGFydC5icnVzaFwiLCBicnVzaHN0YXJ0KTtcbiAgICAgICAgdmFyIGJhY2tncm91bmQgPSBnLnNlbGVjdEFsbChcIi5iYWNrZ3JvdW5kXCIpLmRhdGEoWyAwIF0pO1xuICAgICAgICBiYWNrZ3JvdW5kLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJiYWNrZ3JvdW5kXCIpLnN0eWxlKFwidmlzaWJpbGl0eVwiLCBcImhpZGRlblwiKS5zdHlsZShcImN1cnNvclwiLCBcImNyb3NzaGFpclwiKTtcbiAgICAgICAgZy5zZWxlY3RBbGwoXCIuZXh0ZW50XCIpLmRhdGEoWyAwIF0pLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwiY2xhc3NcIiwgXCJleHRlbnRcIikuc3R5bGUoXCJjdXJzb3JcIiwgXCJtb3ZlXCIpO1xuICAgICAgICB2YXIgcmVzaXplID0gZy5zZWxlY3RBbGwoXCIucmVzaXplXCIpLmRhdGEocmVzaXplcywgZDNfaWRlbnRpdHkpO1xuICAgICAgICByZXNpemUuZXhpdCgpLnJlbW92ZSgpO1xuICAgICAgICByZXNpemUuZW50ZXIoKS5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIFwicmVzaXplIFwiICsgZDtcbiAgICAgICAgfSkuc3R5bGUoXCJjdXJzb3JcIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBkM19zdmdfYnJ1c2hDdXJzb3JbZF07XG4gICAgICAgIH0pLmFwcGVuZChcInJlY3RcIikuYXR0cihcInhcIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiAvW2V3XSQvLnRlc3QoZCkgPyAtMyA6IG51bGw7XG4gICAgICAgIH0pLmF0dHIoXCJ5XCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gL15bbnNdLy50ZXN0KGQpID8gLTMgOiBudWxsO1xuICAgICAgICB9KS5hdHRyKFwid2lkdGhcIiwgNikuYXR0cihcImhlaWdodFwiLCA2KS5zdHlsZShcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIik7XG4gICAgICAgIHJlc2l6ZS5zdHlsZShcImRpc3BsYXlcIiwgYnJ1c2guZW1wdHkoKSA/IFwibm9uZVwiIDogbnVsbCk7XG4gICAgICAgIHZhciBnVXBkYXRlID0gZDMudHJhbnNpdGlvbihnKSwgYmFja2dyb3VuZFVwZGF0ZSA9IGQzLnRyYW5zaXRpb24oYmFja2dyb3VuZCksIHJhbmdlO1xuICAgICAgICBpZiAoeCkge1xuICAgICAgICAgIHJhbmdlID0gZDNfc2NhbGVSYW5nZSh4KTtcbiAgICAgICAgICBiYWNrZ3JvdW5kVXBkYXRlLmF0dHIoXCJ4XCIsIHJhbmdlWzBdKS5hdHRyKFwid2lkdGhcIiwgcmFuZ2VbMV0gLSByYW5nZVswXSk7XG4gICAgICAgICAgcmVkcmF3WChnVXBkYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeSkge1xuICAgICAgICAgIHJhbmdlID0gZDNfc2NhbGVSYW5nZSh5KTtcbiAgICAgICAgICBiYWNrZ3JvdW5kVXBkYXRlLmF0dHIoXCJ5XCIsIHJhbmdlWzBdKS5hdHRyKFwiaGVpZ2h0XCIsIHJhbmdlWzFdIC0gcmFuZ2VbMF0pO1xuICAgICAgICAgIHJlZHJhd1koZ1VwZGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVkcmF3KGdVcGRhdGUpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGJydXNoLmV2ZW50ID0gZnVuY3Rpb24oZykge1xuICAgICAgZy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZXZlbnRfID0gZXZlbnQub2YodGhpcywgYXJndW1lbnRzKSwgZXh0ZW50MSA9IHtcbiAgICAgICAgICB4OiB4RXh0ZW50LFxuICAgICAgICAgIHk6IHlFeHRlbnQsXG4gICAgICAgICAgaTogeEV4dGVudERvbWFpbixcbiAgICAgICAgICBqOiB5RXh0ZW50RG9tYWluXG4gICAgICAgIH0sIGV4dGVudDAgPSB0aGlzLl9fY2hhcnRfXyB8fCBleHRlbnQxO1xuICAgICAgICB0aGlzLl9fY2hhcnRfXyA9IGV4dGVudDE7XG4gICAgICAgIGlmIChkM190cmFuc2l0aW9uSW5oZXJpdElkKSB7XG4gICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5lYWNoKFwic3RhcnQuYnJ1c2hcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB4RXh0ZW50RG9tYWluID0gZXh0ZW50MC5pO1xuICAgICAgICAgICAgeUV4dGVudERvbWFpbiA9IGV4dGVudDAuajtcbiAgICAgICAgICAgIHhFeHRlbnQgPSBleHRlbnQwLng7XG4gICAgICAgICAgICB5RXh0ZW50ID0gZXh0ZW50MC55O1xuICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgdHlwZTogXCJicnVzaHN0YXJ0XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pLnR3ZWVuKFwiYnJ1c2g6YnJ1c2hcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgeGkgPSBkM19pbnRlcnBvbGF0ZUFycmF5KHhFeHRlbnQsIGV4dGVudDEueCksIHlpID0gZDNfaW50ZXJwb2xhdGVBcnJheSh5RXh0ZW50LCBleHRlbnQxLnkpO1xuICAgICAgICAgICAgeEV4dGVudERvbWFpbiA9IHlFeHRlbnREb21haW4gPSBudWxsO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgeEV4dGVudCA9IGV4dGVudDEueCA9IHhpKHQpO1xuICAgICAgICAgICAgICB5RXh0ZW50ID0gZXh0ZW50MS55ID0geWkodCk7XG4gICAgICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgICAgIG1vZGU6IFwicmVzaXplXCJcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pLmVhY2goXCJlbmQuYnJ1c2hcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB4RXh0ZW50RG9tYWluID0gZXh0ZW50MS5pO1xuICAgICAgICAgICAgeUV4dGVudERvbWFpbiA9IGV4dGVudDEuajtcbiAgICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hcIixcbiAgICAgICAgICAgICAgbW9kZTogXCJyZXNpemVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgICB0eXBlOiBcImJydXNoZW5kXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICB0eXBlOiBcImJydXNoc3RhcnRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICB0eXBlOiBcImJydXNoXCIsXG4gICAgICAgICAgICBtb2RlOiBcInJlc2l6ZVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hlbmRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlZHJhdyhnKSB7XG4gICAgICBnLnNlbGVjdEFsbChcIi5yZXNpemVcIikuYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIHhFeHRlbnRbKy9lJC8udGVzdChkKV0gKyBcIixcIiArIHlFeHRlbnRbKy9ecy8udGVzdChkKV0gKyBcIilcIjtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXdYKGcpIHtcbiAgICAgIGcuc2VsZWN0KFwiLmV4dGVudFwiKS5hdHRyKFwieFwiLCB4RXh0ZW50WzBdKTtcbiAgICAgIGcuc2VsZWN0QWxsKFwiLmV4dGVudCwubj5yZWN0LC5zPnJlY3RcIikuYXR0cihcIndpZHRoXCIsIHhFeHRlbnRbMV0gLSB4RXh0ZW50WzBdKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVkcmF3WShnKSB7XG4gICAgICBnLnNlbGVjdChcIi5leHRlbnRcIikuYXR0cihcInlcIiwgeUV4dGVudFswXSk7XG4gICAgICBnLnNlbGVjdEFsbChcIi5leHRlbnQsLmU+cmVjdCwudz5yZWN0XCIpLmF0dHIoXCJoZWlnaHRcIiwgeUV4dGVudFsxXSAtIHlFeHRlbnRbMF0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBicnVzaHN0YXJ0KCkge1xuICAgICAgdmFyIHRhcmdldCA9IHRoaXMsIGV2ZW50VGFyZ2V0ID0gZDMuc2VsZWN0KGQzLmV2ZW50LnRhcmdldCksIGV2ZW50XyA9IGV2ZW50Lm9mKHRhcmdldCwgYXJndW1lbnRzKSwgZyA9IGQzLnNlbGVjdCh0YXJnZXQpLCByZXNpemluZyA9IGV2ZW50VGFyZ2V0LmRhdHVtKCksIHJlc2l6aW5nWCA9ICEvXihufHMpJC8udGVzdChyZXNpemluZykgJiYgeCwgcmVzaXppbmdZID0gIS9eKGV8dykkLy50ZXN0KHJlc2l6aW5nKSAmJiB5LCBkcmFnZ2luZyA9IGV2ZW50VGFyZ2V0LmNsYXNzZWQoXCJleHRlbnRcIiksIGRyYWdSZXN0b3JlID0gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKHRhcmdldCksIGNlbnRlciwgb3JpZ2luID0gZDMubW91c2UodGFyZ2V0KSwgb2Zmc2V0O1xuICAgICAgdmFyIHcgPSBkMy5zZWxlY3QoZDNfd2luZG93KHRhcmdldCkpLm9uKFwia2V5ZG93bi5icnVzaFwiLCBrZXlkb3duKS5vbihcImtleXVwLmJydXNoXCIsIGtleXVwKTtcbiAgICAgIGlmIChkMy5ldmVudC5jaGFuZ2VkVG91Y2hlcykge1xuICAgICAgICB3Lm9uKFwidG91Y2htb3ZlLmJydXNoXCIsIGJydXNobW92ZSkub24oXCJ0b3VjaGVuZC5icnVzaFwiLCBicnVzaGVuZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3Lm9uKFwibW91c2Vtb3ZlLmJydXNoXCIsIGJydXNobW92ZSkub24oXCJtb3VzZXVwLmJydXNoXCIsIGJydXNoZW5kKTtcbiAgICAgIH1cbiAgICAgIGcuaW50ZXJydXB0KCkuc2VsZWN0QWxsKFwiKlwiKS5pbnRlcnJ1cHQoKTtcbiAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICBvcmlnaW5bMF0gPSB4RXh0ZW50WzBdIC0gb3JpZ2luWzBdO1xuICAgICAgICBvcmlnaW5bMV0gPSB5RXh0ZW50WzBdIC0gb3JpZ2luWzFdO1xuICAgICAgfSBlbHNlIGlmIChyZXNpemluZykge1xuICAgICAgICB2YXIgZXggPSArL3ckLy50ZXN0KHJlc2l6aW5nKSwgZXkgPSArL15uLy50ZXN0KHJlc2l6aW5nKTtcbiAgICAgICAgb2Zmc2V0ID0gWyB4RXh0ZW50WzEgLSBleF0gLSBvcmlnaW5bMF0sIHlFeHRlbnRbMSAtIGV5XSAtIG9yaWdpblsxXSBdO1xuICAgICAgICBvcmlnaW5bMF0gPSB4RXh0ZW50W2V4XTtcbiAgICAgICAgb3JpZ2luWzFdID0geUV4dGVudFtleV07XG4gICAgICB9IGVsc2UgaWYgKGQzLmV2ZW50LmFsdEtleSkgY2VudGVyID0gb3JpZ2luLnNsaWNlKCk7XG4gICAgICBnLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpLnNlbGVjdEFsbChcIi5yZXNpemVcIikuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpO1xuICAgICAgZDMuc2VsZWN0KFwiYm9keVwiKS5zdHlsZShcImN1cnNvclwiLCBldmVudFRhcmdldC5zdHlsZShcImN1cnNvclwiKSk7XG4gICAgICBldmVudF8oe1xuICAgICAgICB0eXBlOiBcImJydXNoc3RhcnRcIlxuICAgICAgfSk7XG4gICAgICBicnVzaG1vdmUoKTtcbiAgICAgIGZ1bmN0aW9uIGtleWRvd24oKSB7XG4gICAgICAgIGlmIChkMy5ldmVudC5rZXlDb2RlID09IDMyKSB7XG4gICAgICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICAgICAgY2VudGVyID0gbnVsbDtcbiAgICAgICAgICAgIG9yaWdpblswXSAtPSB4RXh0ZW50WzFdO1xuICAgICAgICAgICAgb3JpZ2luWzFdIC09IHlFeHRlbnRbMV07XG4gICAgICAgICAgICBkcmFnZ2luZyA9IDI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24ga2V5dXAoKSB7XG4gICAgICAgIGlmIChkMy5ldmVudC5rZXlDb2RlID09IDMyICYmIGRyYWdnaW5nID09IDIpIHtcbiAgICAgICAgICBvcmlnaW5bMF0gKz0geEV4dGVudFsxXTtcbiAgICAgICAgICBvcmlnaW5bMV0gKz0geUV4dGVudFsxXTtcbiAgICAgICAgICBkcmFnZ2luZyA9IDA7XG4gICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBicnVzaG1vdmUoKSB7XG4gICAgICAgIHZhciBwb2ludCA9IGQzLm1vdXNlKHRhcmdldCksIG1vdmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChvZmZzZXQpIHtcbiAgICAgICAgICBwb2ludFswXSArPSBvZmZzZXRbMF07XG4gICAgICAgICAgcG9pbnRbMV0gKz0gb2Zmc2V0WzFdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZHJhZ2dpbmcpIHtcbiAgICAgICAgICBpZiAoZDMuZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICBpZiAoIWNlbnRlcikgY2VudGVyID0gWyAoeEV4dGVudFswXSArIHhFeHRlbnRbMV0pIC8gMiwgKHlFeHRlbnRbMF0gKyB5RXh0ZW50WzFdKSAvIDIgXTtcbiAgICAgICAgICAgIG9yaWdpblswXSA9IHhFeHRlbnRbKyhwb2ludFswXSA8IGNlbnRlclswXSldO1xuICAgICAgICAgICAgb3JpZ2luWzFdID0geUV4dGVudFsrKHBvaW50WzFdIDwgY2VudGVyWzFdKV07XG4gICAgICAgICAgfSBlbHNlIGNlbnRlciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2l6aW5nWCAmJiBtb3ZlMShwb2ludCwgeCwgMCkpIHtcbiAgICAgICAgICByZWRyYXdYKGcpO1xuICAgICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzaXppbmdZICYmIG1vdmUxKHBvaW50LCB5LCAxKSkge1xuICAgICAgICAgIHJlZHJhd1koZyk7XG4gICAgICAgICAgbW92ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3ZlZCkge1xuICAgICAgICAgIHJlZHJhdyhnKTtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgbW9kZTogZHJhZ2dpbmcgPyBcIm1vdmVcIiA6IFwicmVzaXplXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbW92ZTEocG9pbnQsIHNjYWxlLCBpKSB7XG4gICAgICAgIHZhciByYW5nZSA9IGQzX3NjYWxlUmFuZ2Uoc2NhbGUpLCByMCA9IHJhbmdlWzBdLCByMSA9IHJhbmdlWzFdLCBwb3NpdGlvbiA9IG9yaWdpbltpXSwgZXh0ZW50ID0gaSA/IHlFeHRlbnQgOiB4RXh0ZW50LCBzaXplID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCBtaW4sIG1heDtcbiAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgcjAgLT0gcG9zaXRpb247XG4gICAgICAgICAgcjEgLT0gc2l6ZSArIHBvc2l0aW9uO1xuICAgICAgICB9XG4gICAgICAgIG1pbiA9IChpID8geUNsYW1wIDogeENsYW1wKSA/IE1hdGgubWF4KHIwLCBNYXRoLm1pbihyMSwgcG9pbnRbaV0pKSA6IHBvaW50W2ldO1xuICAgICAgICBpZiAoZHJhZ2dpbmcpIHtcbiAgICAgICAgICBtYXggPSAobWluICs9IHBvc2l0aW9uKSArIHNpemU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGNlbnRlcikgcG9zaXRpb24gPSBNYXRoLm1heChyMCwgTWF0aC5taW4ocjEsIDIgKiBjZW50ZXJbaV0gLSBtaW4pKTtcbiAgICAgICAgICBpZiAocG9zaXRpb24gPCBtaW4pIHtcbiAgICAgICAgICAgIG1heCA9IG1pbjtcbiAgICAgICAgICAgIG1pbiA9IHBvc2l0aW9uO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtYXggPSBwb3NpdGlvbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4dGVudFswXSAhPSBtaW4gfHwgZXh0ZW50WzFdICE9IG1heCkge1xuICAgICAgICAgIGlmIChpKSB5RXh0ZW50RG9tYWluID0gbnVsbDsgZWxzZSB4RXh0ZW50RG9tYWluID0gbnVsbDtcbiAgICAgICAgICBleHRlbnRbMF0gPSBtaW47XG4gICAgICAgICAgZXh0ZW50WzFdID0gbWF4O1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBicnVzaGVuZCgpIHtcbiAgICAgICAgYnJ1c2htb3ZlKCk7XG4gICAgICAgIGcuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKS5zZWxlY3RBbGwoXCIucmVzaXplXCIpLnN0eWxlKFwiZGlzcGxheVwiLCBicnVzaC5lbXB0eSgpID8gXCJub25lXCIgOiBudWxsKTtcbiAgICAgICAgZDMuc2VsZWN0KFwiYm9keVwiKS5zdHlsZShcImN1cnNvclwiLCBudWxsKTtcbiAgICAgICAgdy5vbihcIm1vdXNlbW92ZS5icnVzaFwiLCBudWxsKS5vbihcIm1vdXNldXAuYnJ1c2hcIiwgbnVsbCkub24oXCJ0b3VjaG1vdmUuYnJ1c2hcIiwgbnVsbCkub24oXCJ0b3VjaGVuZC5icnVzaFwiLCBudWxsKS5vbihcImtleWRvd24uYnJ1c2hcIiwgbnVsbCkub24oXCJrZXl1cC5icnVzaFwiLCBudWxsKTtcbiAgICAgICAgZHJhZ1Jlc3RvcmUoKTtcbiAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICB0eXBlOiBcImJydXNoZW5kXCJcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGJydXNoLnggPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4O1xuICAgICAgeCA9IHo7XG4gICAgICByZXNpemVzID0gZDNfc3ZnX2JydXNoUmVzaXplc1sheCA8PCAxIHwgIXldO1xuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2gueSA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHk7XG4gICAgICB5ID0gejtcbiAgICAgIHJlc2l6ZXMgPSBkM19zdmdfYnJ1c2hSZXNpemVzWyF4IDw8IDEgfCAheV07XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC5jbGFtcCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHggJiYgeSA/IFsgeENsYW1wLCB5Q2xhbXAgXSA6IHggPyB4Q2xhbXAgOiB5ID8geUNsYW1wIDogbnVsbDtcbiAgICAgIGlmICh4ICYmIHkpIHhDbGFtcCA9ICEhelswXSwgeUNsYW1wID0gISF6WzFdOyBlbHNlIGlmICh4KSB4Q2xhbXAgPSAhIXo7IGVsc2UgaWYgKHkpIHlDbGFtcCA9ICEhejtcbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLmV4dGVudCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIHZhciB4MCwgeDEsIHkwLCB5MSwgdDtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICBpZiAoeCkge1xuICAgICAgICAgIGlmICh4RXh0ZW50RG9tYWluKSB7XG4gICAgICAgICAgICB4MCA9IHhFeHRlbnREb21haW5bMF0sIHgxID0geEV4dGVudERvbWFpblsxXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgeDAgPSB4RXh0ZW50WzBdLCB4MSA9IHhFeHRlbnRbMV07XG4gICAgICAgICAgICBpZiAoeC5pbnZlcnQpIHgwID0geC5pbnZlcnQoeDApLCB4MSA9IHguaW52ZXJ0KHgxKTtcbiAgICAgICAgICAgIGlmICh4MSA8IHgwKSB0ID0geDAsIHgwID0geDEsIHgxID0gdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHkpIHtcbiAgICAgICAgICBpZiAoeUV4dGVudERvbWFpbikge1xuICAgICAgICAgICAgeTAgPSB5RXh0ZW50RG9tYWluWzBdLCB5MSA9IHlFeHRlbnREb21haW5bMV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHkwID0geUV4dGVudFswXSwgeTEgPSB5RXh0ZW50WzFdO1xuICAgICAgICAgICAgaWYgKHkuaW52ZXJ0KSB5MCA9IHkuaW52ZXJ0KHkwKSwgeTEgPSB5LmludmVydCh5MSk7XG4gICAgICAgICAgICBpZiAoeTEgPCB5MCkgdCA9IHkwLCB5MCA9IHkxLCB5MSA9IHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB4ICYmIHkgPyBbIFsgeDAsIHkwIF0sIFsgeDEsIHkxIF0gXSA6IHggPyBbIHgwLCB4MSBdIDogeSAmJiBbIHkwLCB5MSBdO1xuICAgICAgfVxuICAgICAgaWYgKHgpIHtcbiAgICAgICAgeDAgPSB6WzBdLCB4MSA9IHpbMV07XG4gICAgICAgIGlmICh5KSB4MCA9IHgwWzBdLCB4MSA9IHgxWzBdO1xuICAgICAgICB4RXh0ZW50RG9tYWluID0gWyB4MCwgeDEgXTtcbiAgICAgICAgaWYgKHguaW52ZXJ0KSB4MCA9IHgoeDApLCB4MSA9IHgoeDEpO1xuICAgICAgICBpZiAoeDEgPCB4MCkgdCA9IHgwLCB4MCA9IHgxLCB4MSA9IHQ7XG4gICAgICAgIGlmICh4MCAhPSB4RXh0ZW50WzBdIHx8IHgxICE9IHhFeHRlbnRbMV0pIHhFeHRlbnQgPSBbIHgwLCB4MSBdO1xuICAgICAgfVxuICAgICAgaWYgKHkpIHtcbiAgICAgICAgeTAgPSB6WzBdLCB5MSA9IHpbMV07XG4gICAgICAgIGlmICh4KSB5MCA9IHkwWzFdLCB5MSA9IHkxWzFdO1xuICAgICAgICB5RXh0ZW50RG9tYWluID0gWyB5MCwgeTEgXTtcbiAgICAgICAgaWYgKHkuaW52ZXJ0KSB5MCA9IHkoeTApLCB5MSA9IHkoeTEpO1xuICAgICAgICBpZiAoeTEgPCB5MCkgdCA9IHkwLCB5MCA9IHkxLCB5MSA9IHQ7XG4gICAgICAgIGlmICh5MCAhPSB5RXh0ZW50WzBdIHx8IHkxICE9IHlFeHRlbnRbMV0pIHlFeHRlbnQgPSBbIHkwLCB5MSBdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghYnJ1c2guZW1wdHkoKSkge1xuICAgICAgICB4RXh0ZW50ID0gWyAwLCAwIF0sIHlFeHRlbnQgPSBbIDAsIDAgXTtcbiAgICAgICAgeEV4dGVudERvbWFpbiA9IHlFeHRlbnREb21haW4gPSBudWxsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhIXggJiYgeEV4dGVudFswXSA9PSB4RXh0ZW50WzFdIHx8ICEheSAmJiB5RXh0ZW50WzBdID09IHlFeHRlbnRbMV07XG4gICAgfTtcbiAgICByZXR1cm4gZDMucmViaW5kKGJydXNoLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgdmFyIGQzX3N2Z19icnVzaEN1cnNvciA9IHtcbiAgICBuOiBcIm5zLXJlc2l6ZVwiLFxuICAgIGU6IFwiZXctcmVzaXplXCIsXG4gICAgczogXCJucy1yZXNpemVcIixcbiAgICB3OiBcImV3LXJlc2l6ZVwiLFxuICAgIG53OiBcIm53c2UtcmVzaXplXCIsXG4gICAgbmU6IFwibmVzdy1yZXNpemVcIixcbiAgICBzZTogXCJud3NlLXJlc2l6ZVwiLFxuICAgIHN3OiBcIm5lc3ctcmVzaXplXCJcbiAgfTtcbiAgdmFyIGQzX3N2Z19icnVzaFJlc2l6ZXMgPSBbIFsgXCJuXCIsIFwiZVwiLCBcInNcIiwgXCJ3XCIsIFwibndcIiwgXCJuZVwiLCBcInNlXCIsIFwic3dcIiBdLCBbIFwiZVwiLCBcIndcIiBdLCBbIFwiblwiLCBcInNcIiBdLCBbXSBdO1xuICB2YXIgZDNfdGltZV9mb3JtYXQgPSBkM190aW1lLmZvcm1hdCA9IGQzX2xvY2FsZV9lblVTLnRpbWVGb3JtYXQ7XG4gIHZhciBkM190aW1lX2Zvcm1hdFV0YyA9IGQzX3RpbWVfZm9ybWF0LnV0YztcbiAgdmFyIGQzX3RpbWVfZm9ybWF0SXNvID0gZDNfdGltZV9mb3JtYXRVdGMoXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIik7XG4gIGQzX3RpbWVfZm9ybWF0LmlzbyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nICYmICtuZXcgRGF0ZShcIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWlwiKSA/IGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlIDogZDNfdGltZV9mb3JtYXRJc287XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xuICB9XG4gIGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlLnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShzdHJpbmcpO1xuICAgIHJldHVybiBpc05hTihkYXRlKSA/IG51bGwgOiBkYXRlO1xuICB9O1xuICBkM190aW1lX2Zvcm1hdElzb05hdGl2ZS50b1N0cmluZyA9IGQzX3RpbWVfZm9ybWF0SXNvLnRvU3RyaW5nO1xuICBkM190aW1lLnNlY29uZCA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBuZXcgZDNfZGF0ZShNYXRoLmZsb29yKGRhdGUgLyAxZTMpICogMWUzKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogMWUzKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldFNlY29uZHMoKTtcbiAgfSk7XG4gIGQzX3RpbWUuc2Vjb25kcyA9IGQzX3RpbWUuc2Vjb25kLnJhbmdlO1xuICBkM190aW1lLnNlY29uZHMudXRjID0gZDNfdGltZS5zZWNvbmQudXRjLnJhbmdlO1xuICBkM190aW1lLm1pbnV0ZSA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBuZXcgZDNfZGF0ZShNYXRoLmZsb29yKGRhdGUgLyA2ZTQpICogNmU0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogNmU0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgfSk7XG4gIGQzX3RpbWUubWludXRlcyA9IGQzX3RpbWUubWludXRlLnJhbmdlO1xuICBkM190aW1lLm1pbnV0ZXMudXRjID0gZDNfdGltZS5taW51dGUudXRjLnJhbmdlO1xuICBkM190aW1lLmhvdXIgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgdGltZXpvbmUgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkgLyA2MDtcbiAgICByZXR1cm4gbmV3IGQzX2RhdGUoKE1hdGguZmxvb3IoZGF0ZSAvIDM2ZTUgLSB0aW1lem9uZSkgKyB0aW1lem9uZSkgKiAzNmU1KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogMzZlNSk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRIb3VycygpO1xuICB9KTtcbiAgZDNfdGltZS5ob3VycyA9IGQzX3RpbWUuaG91ci5yYW5nZTtcbiAgZDNfdGltZS5ob3Vycy51dGMgPSBkM190aW1lLmhvdXIudXRjLnJhbmdlO1xuICBkM190aW1lLm1vbnRoID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZSA9IGQzX3RpbWUuZGF5KGRhdGUpO1xuICAgIGRhdGUuc2V0RGF0ZSgxKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRNb250aChkYXRlLmdldE1vbnRoKCkgKyBvZmZzZXQpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0TW9udGgoKTtcbiAgfSk7XG4gIGQzX3RpbWUubW9udGhzID0gZDNfdGltZS5tb250aC5yYW5nZTtcbiAgZDNfdGltZS5tb250aHMudXRjID0gZDNfdGltZS5tb250aC51dGMucmFuZ2U7XG4gIGZ1bmN0aW9uIGQzX3RpbWVfc2NhbGUobGluZWFyLCBtZXRob2RzLCBmb3JtYXQpIHtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gbGluZWFyKHgpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9zY2FsZURhdGUobGluZWFyLmludmVydCh4KSk7XG4gICAgfTtcbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsaW5lYXIuZG9tYWluKCkubWFwKGQzX3RpbWVfc2NhbGVEYXRlKTtcbiAgICAgIGxpbmVhci5kb21haW4oeCk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBmdW5jdGlvbiB0aWNrTWV0aG9kKGV4dGVudCwgY291bnQpIHtcbiAgICAgIHZhciBzcGFuID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCB0YXJnZXQgPSBzcGFuIC8gY291bnQsIGkgPSBkMy5iaXNlY3QoZDNfdGltZV9zY2FsZVN0ZXBzLCB0YXJnZXQpO1xuICAgICAgcmV0dXJuIGkgPT0gZDNfdGltZV9zY2FsZVN0ZXBzLmxlbmd0aCA/IFsgbWV0aG9kcy55ZWFyLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZXh0ZW50Lm1hcChmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkIC8gMzE1MzZlNjtcbiAgICAgIH0pLCBjb3VudClbMl0gXSA6ICFpID8gWyBkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZXh0ZW50LCBjb3VudClbMl0gXSA6IG1ldGhvZHNbdGFyZ2V0IC8gZDNfdGltZV9zY2FsZVN0ZXBzW2kgLSAxXSA8IGQzX3RpbWVfc2NhbGVTdGVwc1tpXSAvIHRhcmdldCA/IGkgLSAxIDogaV07XG4gICAgfVxuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihpbnRlcnZhbCwgc2tpcCkge1xuICAgICAgdmFyIGRvbWFpbiA9IHNjYWxlLmRvbWFpbigpLCBleHRlbnQgPSBkM19zY2FsZUV4dGVudChkb21haW4pLCBtZXRob2QgPSBpbnRlcnZhbCA9PSBudWxsID8gdGlja01ldGhvZChleHRlbnQsIDEwKSA6IHR5cGVvZiBpbnRlcnZhbCA9PT0gXCJudW1iZXJcIiAmJiB0aWNrTWV0aG9kKGV4dGVudCwgaW50ZXJ2YWwpO1xuICAgICAgaWYgKG1ldGhvZCkgaW50ZXJ2YWwgPSBtZXRob2RbMF0sIHNraXAgPSBtZXRob2RbMV07XG4gICAgICBmdW5jdGlvbiBza2lwcGVkKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuICFpc05hTihkYXRlKSAmJiAhaW50ZXJ2YWwucmFuZ2UoZGF0ZSwgZDNfdGltZV9zY2FsZURhdGUoK2RhdGUgKyAxKSwgc2tpcCkubGVuZ3RoO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNjYWxlLmRvbWFpbihkM19zY2FsZV9uaWNlKGRvbWFpbiwgc2tpcCA+IDEgPyB7XG4gICAgICAgIGZsb29yOiBmdW5jdGlvbihkYXRlKSB7XG4gICAgICAgICAgd2hpbGUgKHNraXBwZWQoZGF0ZSA9IGludGVydmFsLmZsb29yKGRhdGUpKSkgZGF0ZSA9IGQzX3RpbWVfc2NhbGVEYXRlKGRhdGUgLSAxKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgfSxcbiAgICAgICAgY2VpbDogZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICAgIHdoaWxlIChza2lwcGVkKGRhdGUgPSBpbnRlcnZhbC5jZWlsKGRhdGUpKSkgZGF0ZSA9IGQzX3RpbWVfc2NhbGVEYXRlKCtkYXRlICsgMSk7XG4gICAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgICAgIH1cbiAgICAgIH0gOiBpbnRlcnZhbCkpO1xuICAgIH07XG4gICAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihpbnRlcnZhbCwgc2tpcCkge1xuICAgICAgdmFyIGV4dGVudCA9IGQzX3NjYWxlRXh0ZW50KHNjYWxlLmRvbWFpbigpKSwgbWV0aG9kID0gaW50ZXJ2YWwgPT0gbnVsbCA/IHRpY2tNZXRob2QoZXh0ZW50LCAxMCkgOiB0eXBlb2YgaW50ZXJ2YWwgPT09IFwibnVtYmVyXCIgPyB0aWNrTWV0aG9kKGV4dGVudCwgaW50ZXJ2YWwpIDogIWludGVydmFsLnJhbmdlICYmIFsge1xuICAgICAgICByYW5nZTogaW50ZXJ2YWxcbiAgICAgIH0sIHNraXAgXTtcbiAgICAgIGlmIChtZXRob2QpIGludGVydmFsID0gbWV0aG9kWzBdLCBza2lwID0gbWV0aG9kWzFdO1xuICAgICAgcmV0dXJuIGludGVydmFsLnJhbmdlKGV4dGVudFswXSwgZDNfdGltZV9zY2FsZURhdGUoK2V4dGVudFsxXSArIDEpLCBza2lwIDwgMSA/IDEgOiBza2lwKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9zY2FsZShsaW5lYXIuY29weSgpLCBtZXRob2RzLCBmb3JtYXQpO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3NjYWxlRGF0ZSh0KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHQpO1xuICB9XG4gIHZhciBkM190aW1lX3NjYWxlU3RlcHMgPSBbIDFlMywgNWUzLCAxNWUzLCAzZTQsIDZlNCwgM2U1LCA5ZTUsIDE4ZTUsIDM2ZTUsIDEwOGU1LCAyMTZlNSwgNDMyZTUsIDg2NGU1LCAxNzI4ZTUsIDYwNDhlNSwgMjU5MmU2LCA3Nzc2ZTYsIDMxNTM2ZTYgXTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMgPSBbIFsgZDNfdGltZS5zZWNvbmQsIDEgXSwgWyBkM190aW1lLnNlY29uZCwgNSBdLCBbIGQzX3RpbWUuc2Vjb25kLCAxNSBdLCBbIGQzX3RpbWUuc2Vjb25kLCAzMCBdLCBbIGQzX3RpbWUubWludXRlLCAxIF0sIFsgZDNfdGltZS5taW51dGUsIDUgXSwgWyBkM190aW1lLm1pbnV0ZSwgMTUgXSwgWyBkM190aW1lLm1pbnV0ZSwgMzAgXSwgWyBkM190aW1lLmhvdXIsIDEgXSwgWyBkM190aW1lLmhvdXIsIDMgXSwgWyBkM190aW1lLmhvdXIsIDYgXSwgWyBkM190aW1lLmhvdXIsIDEyIF0sIFsgZDNfdGltZS5kYXksIDEgXSwgWyBkM190aW1lLmRheSwgMiBdLCBbIGQzX3RpbWUud2VlaywgMSBdLCBbIGQzX3RpbWUubW9udGgsIDEgXSwgWyBkM190aW1lLm1vbnRoLCAzIF0sIFsgZDNfdGltZS55ZWFyLCAxIF0gXTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVMb2NhbEZvcm1hdCA9IGQzX3RpbWVfZm9ybWF0Lm11bHRpKFsgWyBcIi4lTFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0TWlsbGlzZWNvbmRzKCk7XG4gIH0gXSwgWyBcIjolU1wiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0U2Vjb25kcygpO1xuICB9IF0sIFsgXCIlSTolTVwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0TWludXRlcygpO1xuICB9IF0sIFsgXCIlSSAlcFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0SG91cnMoKTtcbiAgfSBdLCBbIFwiJWEgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldERheSgpICYmIGQuZ2V0RGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiViICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXREYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJUJcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldE1vbnRoKCk7XG4gIH0gXSwgWyBcIiVZXCIsIGQzX3RydWUgXSBdKTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVNaWxsaXNlY29uZHMgPSB7XG4gICAgcmFuZ2U6IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoTWF0aC5jZWlsKHN0YXJ0IC8gc3RlcCkgKiBzdGVwLCArc3RvcCwgc3RlcCkubWFwKGQzX3RpbWVfc2NhbGVEYXRlKTtcbiAgICB9LFxuICAgIGZsb29yOiBkM19pZGVudGl0eSxcbiAgICBjZWlsOiBkM19pZGVudGl0eVxuICB9O1xuICBkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzLnllYXIgPSBkM190aW1lLnllYXI7XG4gIGQzX3RpbWUuc2NhbGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfdGltZV9zY2FsZShkMy5zY2FsZS5saW5lYXIoKSwgZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcywgZDNfdGltZV9zY2FsZUxvY2FsRm9ybWF0KTtcbiAgfTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVVdGNNZXRob2RzID0gZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcy5tYXAoZnVuY3Rpb24obSkge1xuICAgIHJldHVybiBbIG1bMF0udXRjLCBtWzFdIF07XG4gIH0pO1xuICB2YXIgZDNfdGltZV9zY2FsZVV0Y0Zvcm1hdCA9IGQzX3RpbWVfZm9ybWF0VXRjLm11bHRpKFsgWyBcIi4lTFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIH0gXSwgWyBcIjolU1wiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDU2Vjb25kcygpO1xuICB9IF0sIFsgXCIlSTolTVwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDTWludXRlcygpO1xuICB9IF0sIFsgXCIlSSAlcFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDSG91cnMoKTtcbiAgfSBdLCBbIFwiJWEgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ0RheSgpICYmIGQuZ2V0VVRDRGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiViICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENEYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJUJcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ01vbnRoKCk7XG4gIH0gXSwgWyBcIiVZXCIsIGQzX3RydWUgXSBdKTtcbiAgZDNfdGltZV9zY2FsZVV0Y01ldGhvZHMueWVhciA9IGQzX3RpbWUueWVhci51dGM7XG4gIGQzX3RpbWUuc2NhbGUudXRjID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3RpbWVfc2NhbGUoZDMuc2NhbGUubGluZWFyKCksIGQzX3RpbWVfc2NhbGVVdGNNZXRob2RzLCBkM190aW1lX3NjYWxlVXRjRm9ybWF0KTtcbiAgfTtcbiAgZDMudGV4dCA9IGQzX3hoclR5cGUoZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgIHJldHVybiByZXF1ZXN0LnJlc3BvbnNlVGV4dDtcbiAgfSk7XG4gIGQzLmpzb24gPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGQzX3hocih1cmwsIFwiYXBwbGljYXRpb24vanNvblwiLCBkM19qc29uLCBjYWxsYmFjayk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2pzb24ocmVxdWVzdCkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgfVxuICBkMy5odG1sID0gZnVuY3Rpb24odXJsLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBkM194aHIodXJsLCBcInRleHQvaHRtbFwiLCBkM19odG1sLCBjYWxsYmFjayk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2h0bWwocmVxdWVzdCkge1xuICAgIHZhciByYW5nZSA9IGQzX2RvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgcmFuZ2Uuc2VsZWN0Tm9kZShkM19kb2N1bWVudC5ib2R5KTtcbiAgICByZXR1cm4gcmFuZ2UuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgfVxuICBkMy54bWwgPSBkM194aHJUeXBlKGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gcmVxdWVzdC5yZXNwb25zZVhNTDtcbiAgfSk7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkgdGhpcy5kMyA9IGQzLCBkZWZpbmUoZDMpOyBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIG1vZHVsZS5leHBvcnRzKSBtb2R1bGUuZXhwb3J0cyA9IGQzOyBlbHNlIHRoaXMuZDMgPSBkMztcbn0oKTsiLCJ2YXIgdjEgPSByZXF1aXJlKCcuL3YxJyk7XG52YXIgdjQgPSByZXF1aXJlKCcuL3Y0Jyk7XG5cbnZhciB1dWlkID0gdjQ7XG51dWlkLnYxID0gdjE7XG51dWlkLnY0ID0gdjQ7XG5cbm1vZHVsZS5leHBvcnRzID0gdXVpZDtcbiIsInZhciBybmcgPSByZXF1aXJlKCcuL2xpYi9ybmcnKTtcbnZhciBieXRlc1RvVXVpZCA9IHJlcXVpcmUoJy4vbGliL2J5dGVzVG9VdWlkJyk7XG5cbi8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcblxudmFyIF9ub2RlSWQ7XG52YXIgX2Nsb2Nrc2VxO1xuXG4vLyBQcmV2aW91cyB1dWlkIGNyZWF0aW9uIHRpbWVcbnZhciBfbGFzdE1TZWNzID0gMDtcbnZhciBfbGFzdE5TZWNzID0gMDtcblxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9icm9vZmEvbm9kZS11dWlkIGZvciBBUEkgZGV0YWlsc1xuZnVuY3Rpb24gdjEob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG4gIHZhciBiID0gYnVmIHx8IFtdO1xuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICB2YXIgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxO1xuXG4gIC8vIG5vZGUgYW5kIGNsb2Nrc2VxIG5lZWQgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gcmFuZG9tIHZhbHVlcyBpZiB0aGV5J3JlIG5vdFxuICAvLyBzcGVjaWZpZWQuICBXZSBkbyB0aGlzIGxhemlseSB0byBtaW5pbWl6ZSBpc3N1ZXMgcmVsYXRlZCB0byBpbnN1ZmZpY2llbnRcbiAgLy8gc3lzdGVtIGVudHJvcHkuICBTZWUgIzE4OVxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICB2YXIgc2VlZEJ5dGVzID0gcm5nKCk7XG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtcbiAgICAgICAgc2VlZEJ5dGVzWzBdIHwgMHgwMSxcbiAgICAgICAgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1cbiAgICAgIF07XG4gICAgfVxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuICB2YXIgbXNlY3MgPSBvcHRpb25zLm1zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm1zZWNzIDogbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIHVzZSBjb3VudCBvZiB1dWlkJ3MgZ2VuZXJhdGVkIGR1cmluZyB0aGUgY3VycmVudCBjbG9ja1xuICAvLyBjeWNsZSB0byBzaW11bGF0ZSBoaWdoZXIgcmVzb2x1dGlvbiBjbG9ja1xuICB2YXIgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7XG5cbiAgLy8gVGltZSBzaW5jZSBsYXN0IHV1aWQgY3JlYXRpb24gKGluIG1zZWNzKVxuICB2YXIgZHQgPSAobXNlY3MgLSBfbGFzdE1TZWNzKSArIChuc2VjcyAtIF9sYXN0TlNlY3MpLzEwMDAwO1xuXG4gIC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfVxuXG4gIC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcbiAgaWYgKChkdCA8IDAgfHwgbXNlY3MgPiBfbGFzdE1TZWNzKSAmJiBvcHRpb25zLm5zZWNzID09PSB1bmRlZmluZWQpIHtcbiAgICBuc2VjcyA9IDA7XG4gIH1cblxuICAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXVpZC52MSgpOiBDYW5cXCd0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlYycpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxO1xuXG4gIC8vIFBlciA0LjEuNCAtIENvbnZlcnQgZnJvbSB1bml4IGVwb2NoIHRvIEdyZWdvcmlhbiBlcG9jaFxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDtcblxuICAvLyBgdGltZV9sb3dgXG4gIHZhciB0bCA9ICgobXNlY3MgJiAweGZmZmZmZmYpICogMTAwMDAgKyBuc2VjcykgJSAweDEwMDAwMDAwMDtcbiAgYltpKytdID0gdGwgPj4+IDI0ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDE2ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bCAmIDB4ZmY7XG5cbiAgLy8gYHRpbWVfbWlkYFxuICB2YXIgdG1oID0gKG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCkgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7XG5cbiAgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuICBiW2krK10gPSB0bWggPj4+IDE2ICYgMHhmZjtcblxuICAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcbiAgYltpKytdID0gY2xvY2tzZXEgPj4+IDggfCAweDgwO1xuXG4gIC8vIGBjbG9ja19zZXFfbG93YFxuICBiW2krK10gPSBjbG9ja3NlcSAmIDB4ZmY7XG5cbiAgLy8gYG5vZGVgXG4gIGZvciAodmFyIG4gPSAwOyBuIDwgNjsgKytuKSB7XG4gICAgYltpICsgbl0gPSBub2RlW25dO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZiA/IGJ1ZiA6IGJ5dGVzVG9VdWlkKGIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHYxO1xuIiwidmFyIHJuZyA9IHJlcXVpcmUoJy4vbGliL3JuZycpO1xudmFyIGJ5dGVzVG9VdWlkID0gcmVxdWlyZSgnLi9saWIvYnl0ZXNUb1V1aWQnKTtcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG5cbiAgaWYgKHR5cGVvZihvcHRpb25zKSA9PSAnc3RyaW5nJykge1xuICAgIGJ1ZiA9IG9wdGlvbnMgPT09ICdiaW5hcnknID8gbmV3IEFycmF5KDE2KSA6IG51bGw7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH1cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgdmFyIHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpO1xuXG4gIC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcbiAgcm5kc1s2XSA9IChybmRzWzZdICYgMHgwZikgfCAweDQwO1xuICBybmRzWzhdID0gKHJuZHNbOF0gJiAweDNmKSB8IDB4ODA7XG5cbiAgLy8gQ29weSBieXRlcyB0byBidWZmZXIsIGlmIHByb3ZpZGVkXG4gIGlmIChidWYpIHtcbiAgICBmb3IgKHZhciBpaSA9IDA7IGlpIDwgMTY7ICsraWkpIHtcbiAgICAgIGJ1ZltpICsgaWldID0gcm5kc1tpaV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ1ZiB8fCBieXRlc1RvVXVpZChybmRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2NDtcbiIsInZhciBjbG9uZSA9IChmdW5jdGlvbigpIHtcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2luc3RhbmNlb2Yob2JqLCB0eXBlKSB7XG4gIHJldHVybiB0eXBlICE9IG51bGwgJiYgb2JqIGluc3RhbmNlb2YgdHlwZTtcbn1cblxudmFyIG5hdGl2ZU1hcDtcbnRyeSB7XG4gIG5hdGl2ZU1hcCA9IE1hcDtcbn0gY2F0Y2goXykge1xuICAvLyBtYXliZSBhIHJlZmVyZW5jZSBlcnJvciBiZWNhdXNlIG5vIGBNYXBgLiBHaXZlIGl0IGEgZHVtbXkgdmFsdWUgdGhhdCBub1xuICAvLyB2YWx1ZSB3aWxsIGV2ZXIgYmUgYW4gaW5zdGFuY2VvZi5cbiAgbmF0aXZlTWFwID0gZnVuY3Rpb24oKSB7fTtcbn1cblxudmFyIG5hdGl2ZVNldDtcbnRyeSB7XG4gIG5hdGl2ZVNldCA9IFNldDtcbn0gY2F0Y2goXykge1xuICBuYXRpdmVTZXQgPSBmdW5jdGlvbigpIHt9O1xufVxuXG52YXIgbmF0aXZlUHJvbWlzZTtcbnRyeSB7XG4gIG5hdGl2ZVByb21pc2UgPSBQcm9taXNlO1xufSBjYXRjaChfKSB7XG4gIG5hdGl2ZVByb21pc2UgPSBmdW5jdGlvbigpIHt9O1xufVxuXG4vKipcbiAqIENsb25lcyAoY29waWVzKSBhbiBPYmplY3QgdXNpbmcgZGVlcCBjb3B5aW5nLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gc3VwcG9ydHMgY2lyY3VsYXIgcmVmZXJlbmNlcyBieSBkZWZhdWx0LCBidXQgaWYgeW91IGFyZSBjZXJ0YWluXG4gKiB0aGVyZSBhcmUgbm8gY2lyY3VsYXIgcmVmZXJlbmNlcyBpbiB5b3VyIG9iamVjdCwgeW91IGNhbiBzYXZlIHNvbWUgQ1BVIHRpbWVcbiAqIGJ5IGNhbGxpbmcgY2xvbmUob2JqLCBmYWxzZSkuXG4gKlxuICogQ2F1dGlvbjogaWYgYGNpcmN1bGFyYCBpcyBmYWxzZSBhbmQgYHBhcmVudGAgY29udGFpbnMgY2lyY3VsYXIgcmVmZXJlbmNlcyxcbiAqIHlvdXIgcHJvZ3JhbSBtYXkgZW50ZXIgYW4gaW5maW5pdGUgbG9vcCBhbmQgY3Jhc2guXG4gKlxuICogQHBhcmFtIGBwYXJlbnRgIC0gdGhlIG9iamVjdCB0byBiZSBjbG9uZWRcbiAqIEBwYXJhbSBgY2lyY3VsYXJgIC0gc2V0IHRvIHRydWUgaWYgdGhlIG9iamVjdCB0byBiZSBjbG9uZWQgbWF5IGNvbnRhaW5cbiAqICAgIGNpcmN1bGFyIHJlZmVyZW5jZXMuIChvcHRpb25hbCAtIHRydWUgYnkgZGVmYXVsdClcbiAqIEBwYXJhbSBgZGVwdGhgIC0gc2V0IHRvIGEgbnVtYmVyIGlmIHRoZSBvYmplY3QgaXMgb25seSB0byBiZSBjbG9uZWQgdG9cbiAqICAgIGEgcGFydGljdWxhciBkZXB0aC4gKG9wdGlvbmFsIC0gZGVmYXVsdHMgdG8gSW5maW5pdHkpXG4gKiBAcGFyYW0gYHByb3RvdHlwZWAgLSBzZXRzIHRoZSBwcm90b3R5cGUgdG8gYmUgdXNlZCB3aGVuIGNsb25pbmcgYW4gb2JqZWN0LlxuICogICAgKG9wdGlvbmFsIC0gZGVmYXVsdHMgdG8gcGFyZW50IHByb3RvdHlwZSkuXG4gKiBAcGFyYW0gYGluY2x1ZGVOb25FbnVtZXJhYmxlYCAtIHNldCB0byB0cnVlIGlmIHRoZSBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzXG4gKiAgICBzaG91bGQgYmUgY2xvbmVkIGFzIHdlbGwuIE5vbi1lbnVtZXJhYmxlIHByb3BlcnRpZXMgb24gdGhlIHByb3RvdHlwZVxuICogICAgY2hhaW4gd2lsbCBiZSBpZ25vcmVkLiAob3B0aW9uYWwgLSBmYWxzZSBieSBkZWZhdWx0KVxuKi9cbmZ1bmN0aW9uIGNsb25lKHBhcmVudCwgY2lyY3VsYXIsIGRlcHRoLCBwcm90b3R5cGUsIGluY2x1ZGVOb25FbnVtZXJhYmxlKSB7XG4gIGlmICh0eXBlb2YgY2lyY3VsYXIgPT09ICdvYmplY3QnKSB7XG4gICAgZGVwdGggPSBjaXJjdWxhci5kZXB0aDtcbiAgICBwcm90b3R5cGUgPSBjaXJjdWxhci5wcm90b3R5cGU7XG4gICAgaW5jbHVkZU5vbkVudW1lcmFibGUgPSBjaXJjdWxhci5pbmNsdWRlTm9uRW51bWVyYWJsZTtcbiAgICBjaXJjdWxhciA9IGNpcmN1bGFyLmNpcmN1bGFyO1xuICB9XG4gIC8vIG1haW50YWluIHR3byBhcnJheXMgZm9yIGNpcmN1bGFyIHJlZmVyZW5jZXMsIHdoZXJlIGNvcnJlc3BvbmRpbmcgcGFyZW50c1xuICAvLyBhbmQgY2hpbGRyZW4gaGF2ZSB0aGUgc2FtZSBpbmRleFxuICB2YXIgYWxsUGFyZW50cyA9IFtdO1xuICB2YXIgYWxsQ2hpbGRyZW4gPSBbXTtcblxuICB2YXIgdXNlQnVmZmVyID0gdHlwZW9mIEJ1ZmZlciAhPSAndW5kZWZpbmVkJztcblxuICBpZiAodHlwZW9mIGNpcmN1bGFyID09ICd1bmRlZmluZWQnKVxuICAgIGNpcmN1bGFyID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGRlcHRoID09ICd1bmRlZmluZWQnKVxuICAgIGRlcHRoID0gSW5maW5pdHk7XG5cbiAgLy8gcmVjdXJzZSB0aGlzIGZ1bmN0aW9uIHNvIHdlIGRvbid0IHJlc2V0IGFsbFBhcmVudHMgYW5kIGFsbENoaWxkcmVuXG4gIGZ1bmN0aW9uIF9jbG9uZShwYXJlbnQsIGRlcHRoKSB7XG4gICAgLy8gY2xvbmluZyBudWxsIGFsd2F5cyByZXR1cm5zIG51bGxcbiAgICBpZiAocGFyZW50ID09PSBudWxsKVxuICAgICAgcmV0dXJuIG51bGw7XG5cbiAgICBpZiAoZGVwdGggPT09IDApXG4gICAgICByZXR1cm4gcGFyZW50O1xuXG4gICAgdmFyIGNoaWxkO1xuICAgIHZhciBwcm90bztcbiAgICBpZiAodHlwZW9mIHBhcmVudCAhPSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICB9XG5cbiAgICBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBuYXRpdmVNYXApKSB7XG4gICAgICBjaGlsZCA9IG5ldyBuYXRpdmVNYXAoKTtcbiAgICB9IGVsc2UgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgbmF0aXZlU2V0KSkge1xuICAgICAgY2hpbGQgPSBuZXcgbmF0aXZlU2V0KCk7XG4gICAgfSBlbHNlIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIG5hdGl2ZVByb21pc2UpKSB7XG4gICAgICBjaGlsZCA9IG5ldyBuYXRpdmVQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcGFyZW50LnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICByZXNvbHZlKF9jbG9uZSh2YWx1ZSwgZGVwdGggLSAxKSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIHJlamVjdChfY2xvbmUoZXJyLCBkZXB0aCAtIDEpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGNsb25lLl9faXNBcnJheShwYXJlbnQpKSB7XG4gICAgICBjaGlsZCA9IFtdO1xuICAgIH0gZWxzZSBpZiAoY2xvbmUuX19pc1JlZ0V4cChwYXJlbnQpKSB7XG4gICAgICBjaGlsZCA9IG5ldyBSZWdFeHAocGFyZW50LnNvdXJjZSwgX19nZXRSZWdFeHBGbGFncyhwYXJlbnQpKTtcbiAgICAgIGlmIChwYXJlbnQubGFzdEluZGV4KSBjaGlsZC5sYXN0SW5kZXggPSBwYXJlbnQubGFzdEluZGV4O1xuICAgIH0gZWxzZSBpZiAoY2xvbmUuX19pc0RhdGUocGFyZW50KSkge1xuICAgICAgY2hpbGQgPSBuZXcgRGF0ZShwYXJlbnQuZ2V0VGltZSgpKTtcbiAgICB9IGVsc2UgaWYgKHVzZUJ1ZmZlciAmJiBCdWZmZXIuaXNCdWZmZXIocGFyZW50KSkge1xuICAgICAgaWYgKEJ1ZmZlci5hbGxvY1Vuc2FmZSkge1xuICAgICAgICAvLyBOb2RlLmpzID49IDQuNS4wXG4gICAgICAgIGNoaWxkID0gQnVmZmVyLmFsbG9jVW5zYWZlKHBhcmVudC5sZW5ndGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT2xkZXIgTm9kZS5qcyB2ZXJzaW9uc1xuICAgICAgICBjaGlsZCA9IG5ldyBCdWZmZXIocGFyZW50Lmxlbmd0aCk7XG4gICAgICB9XG4gICAgICBwYXJlbnQuY29weShjaGlsZCk7XG4gICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfSBlbHNlIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIEVycm9yKSkge1xuICAgICAgY2hpbGQgPSBPYmplY3QuY3JlYXRlKHBhcmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcHJvdG90eXBlID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHBhcmVudCk7XG4gICAgICAgIGNoaWxkID0gT2JqZWN0LmNyZWF0ZShwcm90byk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgY2hpbGQgPSBPYmplY3QuY3JlYXRlKHByb3RvdHlwZSk7XG4gICAgICAgIHByb3RvID0gcHJvdG90eXBlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaXJjdWxhcikge1xuICAgICAgdmFyIGluZGV4ID0gYWxsUGFyZW50cy5pbmRleE9mKHBhcmVudCk7XG5cbiAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICByZXR1cm4gYWxsQ2hpbGRyZW5baW5kZXhdO1xuICAgICAgfVxuICAgICAgYWxsUGFyZW50cy5wdXNoKHBhcmVudCk7XG4gICAgICBhbGxDaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBuYXRpdmVNYXApKSB7XG4gICAgICBwYXJlbnQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgICAgIHZhciBrZXlDaGlsZCA9IF9jbG9uZShrZXksIGRlcHRoIC0gMSk7XG4gICAgICAgIHZhciB2YWx1ZUNoaWxkID0gX2Nsb25lKHZhbHVlLCBkZXB0aCAtIDEpO1xuICAgICAgICBjaGlsZC5zZXQoa2V5Q2hpbGQsIHZhbHVlQ2hpbGQpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIG5hdGl2ZVNldCkpIHtcbiAgICAgIHBhcmVudC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHZhciBlbnRyeUNoaWxkID0gX2Nsb25lKHZhbHVlLCBkZXB0aCAtIDEpO1xuICAgICAgICBjaGlsZC5hZGQoZW50cnlDaGlsZCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpIGluIHBhcmVudCkge1xuICAgICAgdmFyIGF0dHJzO1xuICAgICAgaWYgKHByb3RvKSB7XG4gICAgICAgIGF0dHJzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwcm90bywgaSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChhdHRycyAmJiBhdHRycy5zZXQgPT0gbnVsbCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGNoaWxkW2ldID0gX2Nsb25lKHBhcmVudFtpXSwgZGVwdGggLSAxKTtcbiAgICB9XG5cbiAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHBhcmVudCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gRG9uJ3QgbmVlZCB0byB3b3JyeSBhYm91dCBjbG9uaW5nIGEgc3ltYm9sIGJlY2F1c2UgaXQgaXMgYSBwcmltaXRpdmUsXG4gICAgICAgIC8vIGxpa2UgYSBudW1iZXIgb3Igc3RyaW5nLlxuICAgICAgICB2YXIgc3ltYm9sID0gc3ltYm9sc1tpXTtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHBhcmVudCwgc3ltYm9sKTtcbiAgICAgICAgaWYgKGRlc2NyaXB0b3IgJiYgIWRlc2NyaXB0b3IuZW51bWVyYWJsZSAmJiAhaW5jbHVkZU5vbkVudW1lcmFibGUpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjaGlsZFtzeW1ib2xdID0gX2Nsb25lKHBhcmVudFtzeW1ib2xdLCBkZXB0aCAtIDEpO1xuICAgICAgICBpZiAoIWRlc2NyaXB0b3IuZW51bWVyYWJsZSkge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjaGlsZCwgc3ltYm9sLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGluY2x1ZGVOb25FbnVtZXJhYmxlKSB7XG4gICAgICB2YXIgYWxsUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHBhcmVudCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbFByb3BlcnR5TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHByb3BlcnR5TmFtZSA9IGFsbFByb3BlcnR5TmFtZXNbaV07XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwYXJlbnQsIHByb3BlcnR5TmFtZSk7XG4gICAgICAgIGlmIChkZXNjcmlwdG9yICYmIGRlc2NyaXB0b3IuZW51bWVyYWJsZSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkW3Byb3BlcnR5TmFtZV0gPSBfY2xvbmUocGFyZW50W3Byb3BlcnR5TmFtZV0sIGRlcHRoIC0gMSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjaGlsZCwgcHJvcGVydHlOYW1lLCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoaWxkO1xuICB9XG5cbiAgcmV0dXJuIF9jbG9uZShwYXJlbnQsIGRlcHRoKTtcbn1cblxuLyoqXG4gKiBTaW1wbGUgZmxhdCBjbG9uZSB1c2luZyBwcm90b3R5cGUsIGFjY2VwdHMgb25seSBvYmplY3RzLCB1c2VmdWxsIGZvciBwcm9wZXJ0eVxuICogb3ZlcnJpZGUgb24gRkxBVCBjb25maWd1cmF0aW9uIG9iamVjdCAobm8gbmVzdGVkIHByb3BzKS5cbiAqXG4gKiBVU0UgV0lUSCBDQVVUSU9OISBUaGlzIG1heSBub3QgYmVoYXZlIGFzIHlvdSB3aXNoIGlmIHlvdSBkbyBub3Qga25vdyBob3cgdGhpc1xuICogd29ya3MuXG4gKi9cbmNsb25lLmNsb25lUHJvdG90eXBlID0gZnVuY3Rpb24gY2xvbmVQcm90b3R5cGUocGFyZW50KSB7XG4gIGlmIChwYXJlbnQgPT09IG51bGwpXG4gICAgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGMgPSBmdW5jdGlvbiAoKSB7fTtcbiAgYy5wcm90b3R5cGUgPSBwYXJlbnQ7XG4gIHJldHVybiBuZXcgYygpO1xufTtcblxuLy8gcHJpdmF0ZSB1dGlsaXR5IGZ1bmN0aW9uc1xuXG5mdW5jdGlvbiBfX29ialRvU3RyKG8pIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKTtcbn1cbmNsb25lLl9fb2JqVG9TdHIgPSBfX29ialRvU3RyO1xuXG5mdW5jdGlvbiBfX2lzRGF0ZShvKSB7XG4gIHJldHVybiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgX19vYmpUb1N0cihvKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuY2xvbmUuX19pc0RhdGUgPSBfX2lzRGF0ZTtcblxuZnVuY3Rpb24gX19pc0FycmF5KG8pIHtcbiAgcmV0dXJuIHR5cGVvZiBvID09PSAnb2JqZWN0JyAmJiBfX29ialRvU3RyKG8pID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuY2xvbmUuX19pc0FycmF5ID0gX19pc0FycmF5O1xuXG5mdW5jdGlvbiBfX2lzUmVnRXhwKG8pIHtcbiAgcmV0dXJuIHR5cGVvZiBvID09PSAnb2JqZWN0JyAmJiBfX29ialRvU3RyKG8pID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmNsb25lLl9faXNSZWdFeHAgPSBfX2lzUmVnRXhwO1xuXG5mdW5jdGlvbiBfX2dldFJlZ0V4cEZsYWdzKHJlKSB7XG4gIHZhciBmbGFncyA9ICcnO1xuICBpZiAocmUuZ2xvYmFsKSBmbGFncyArPSAnZyc7XG4gIGlmIChyZS5pZ25vcmVDYXNlKSBmbGFncyArPSAnaSc7XG4gIGlmIChyZS5tdWx0aWxpbmUpIGZsYWdzICs9ICdtJztcbiAgcmV0dXJuIGZsYWdzO1xufVxuY2xvbmUuX19nZXRSZWdFeHBGbGFncyA9IF9fZ2V0UmVnRXhwRmxhZ3M7XG5cbnJldHVybiBjbG9uZTtcbn0pKCk7XG5cbmlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGNsb25lO1xufVxuIiwiLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8ZmVyb3NzQGZlcm9zcy5vcmc+IDxodHRwOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbnZhciBiYXNlNjQgPSByZXF1aXJlKCdiYXNlNjQtanMnKVxudmFyIGllZWU3NTQgPSByZXF1aXJlKCdpZWVlNzU0JylcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbmV4cG9ydHMuQnVmZmVyID0gQnVmZmVyXG5leHBvcnRzLlNsb3dCdWZmZXIgPSBTbG93QnVmZmVyXG5leHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTID0gNTBcblxuLyoqXG4gKiBJZiBgQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlRgOlxuICogICA9PT0gdHJ1ZSAgICBVc2UgVWludDhBcnJheSBpbXBsZW1lbnRhdGlvbiAoZmFzdGVzdClcbiAqICAgPT09IGZhbHNlICAgVXNlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiAobW9zdCBjb21wYXRpYmxlLCBldmVuIElFNilcbiAqXG4gKiBCcm93c2VycyB0aGF0IHN1cHBvcnQgdHlwZWQgYXJyYXlzIGFyZSBJRSAxMCssIEZpcmVmb3ggNCssIENocm9tZSA3KywgU2FmYXJpIDUuMSssXG4gKiBPcGVyYSAxMS42KywgaU9TIDQuMisuXG4gKlxuICogRHVlIHRvIHZhcmlvdXMgYnJvd3NlciBidWdzLCBzb21ldGltZXMgdGhlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIHVzZWQgZXZlblxuICogd2hlbiB0aGUgYnJvd3NlciBzdXBwb3J0cyB0eXBlZCBhcnJheXMuXG4gKlxuICogTm90ZTpcbiAqXG4gKiAgIC0gRmlyZWZveCA0LTI5IGxhY2tzIHN1cHBvcnQgZm9yIGFkZGluZyBuZXcgcHJvcGVydGllcyB0byBgVWludDhBcnJheWAgaW5zdGFuY2VzLFxuICogICAgIFNlZTogaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njk1NDM4LlxuICpcbiAqICAgLSBDaHJvbWUgOS0xMCBpcyBtaXNzaW5nIHRoZSBgVHlwZWRBcnJheS5wcm90b3R5cGUuc3ViYXJyYXlgIGZ1bmN0aW9uLlxuICpcbiAqICAgLSBJRTEwIGhhcyBhIGJyb2tlbiBgVHlwZWRBcnJheS5wcm90b3R5cGUuc3ViYXJyYXlgIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYXJyYXlzIG9mXG4gKiAgICAgaW5jb3JyZWN0IGxlbmd0aCBpbiBzb21lIHNpdHVhdGlvbnMuXG5cbiAqIFdlIGRldGVjdCB0aGVzZSBidWdneSBicm93c2VycyBhbmQgc2V0IGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGAgdG8gYGZhbHNlYCBzbyB0aGV5XG4gKiBnZXQgdGhlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiwgd2hpY2ggaXMgc2xvd2VyIGJ1dCBiZWhhdmVzIGNvcnJlY3RseS5cbiAqL1xuQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgPSBnbG9iYWwuVFlQRURfQVJSQVlfU1VQUE9SVCAhPT0gdW5kZWZpbmVkXG4gID8gZ2xvYmFsLlRZUEVEX0FSUkFZX1NVUFBPUlRcbiAgOiB0eXBlZEFycmF5U3VwcG9ydCgpXG5cbi8qXG4gKiBFeHBvcnQga01heExlbmd0aCBhZnRlciB0eXBlZCBhcnJheSBzdXBwb3J0IGlzIGRldGVybWluZWQuXG4gKi9cbmV4cG9ydHMua01heExlbmd0aCA9IGtNYXhMZW5ndGgoKVxuXG5mdW5jdGlvbiB0eXBlZEFycmF5U3VwcG9ydCAoKSB7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KDEpXG4gICAgYXJyLl9fcHJvdG9fXyA9IHtfX3Byb3RvX186IFVpbnQ4QXJyYXkucHJvdG90eXBlLCBmb286IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDQyIH19XG4gICAgcmV0dXJuIGFyci5mb28oKSA9PT0gNDIgJiYgLy8gdHlwZWQgYXJyYXkgaW5zdGFuY2VzIGNhbiBiZSBhdWdtZW50ZWRcbiAgICAgICAgdHlwZW9mIGFyci5zdWJhcnJheSA9PT0gJ2Z1bmN0aW9uJyAmJiAvLyBjaHJvbWUgOS0xMCBsYWNrIGBzdWJhcnJheWBcbiAgICAgICAgYXJyLnN1YmFycmF5KDEsIDEpLmJ5dGVMZW5ndGggPT09IDAgLy8gaWUxMCBoYXMgYnJva2VuIGBzdWJhcnJheWBcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbmZ1bmN0aW9uIGtNYXhMZW5ndGggKCkge1xuICByZXR1cm4gQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlRcbiAgICA/IDB4N2ZmZmZmZmZcbiAgICA6IDB4M2ZmZmZmZmZcbn1cblxuZnVuY3Rpb24gY3JlYXRlQnVmZmVyICh0aGF0LCBsZW5ndGgpIHtcbiAgaWYgKGtNYXhMZW5ndGgoKSA8IGxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbnZhbGlkIHR5cGVkIGFycmF5IGxlbmd0aCcpXG4gIH1cbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2UsIGZvciBiZXN0IHBlcmZvcm1hbmNlXG4gICAgdGhhdCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aClcbiAgICB0aGF0Ll9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgfSBlbHNlIHtcbiAgICAvLyBGYWxsYmFjazogUmV0dXJuIGFuIG9iamVjdCBpbnN0YW5jZSBvZiB0aGUgQnVmZmVyIGNsYXNzXG4gICAgaWYgKHRoYXQgPT09IG51bGwpIHtcbiAgICAgIHRoYXQgPSBuZXcgQnVmZmVyKGxlbmd0aClcbiAgICB9XG4gICAgdGhhdC5sZW5ndGggPSBsZW5ndGhcbiAgfVxuXG4gIHJldHVybiB0aGF0XG59XG5cbi8qKlxuICogVGhlIEJ1ZmZlciBjb25zdHJ1Y3RvciByZXR1cm5zIGluc3RhbmNlcyBvZiBgVWludDhBcnJheWAgdGhhdCBoYXZlIHRoZWlyXG4gKiBwcm90b3R5cGUgY2hhbmdlZCB0byBgQnVmZmVyLnByb3RvdHlwZWAuIEZ1cnRoZXJtb3JlLCBgQnVmZmVyYCBpcyBhIHN1YmNsYXNzIG9mXG4gKiBgVWludDhBcnJheWAsIHNvIHRoZSByZXR1cm5lZCBpbnN0YW5jZXMgd2lsbCBoYXZlIGFsbCB0aGUgbm9kZSBgQnVmZmVyYCBtZXRob2RzXG4gKiBhbmQgdGhlIGBVaW50OEFycmF5YCBtZXRob2RzLiBTcXVhcmUgYnJhY2tldCBub3RhdGlvbiB3b3JrcyBhcyBleHBlY3RlZCAtLSBpdFxuICogcmV0dXJucyBhIHNpbmdsZSBvY3RldC5cbiAqXG4gKiBUaGUgYFVpbnQ4QXJyYXlgIHByb3RvdHlwZSByZW1haW5zIHVubW9kaWZpZWQuXG4gKi9cblxuZnVuY3Rpb24gQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAoIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUICYmICEodGhpcyBpbnN0YW5jZW9mIEJ1ZmZlcikpIHtcbiAgICByZXR1cm4gbmV3IEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIC8vIENvbW1vbiBjYXNlLlxuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nT3JPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdJZiBlbmNvZGluZyBpcyBzcGVjaWZpZWQgdGhlbiB0aGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZydcbiAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIGFsbG9jVW5zYWZlKHRoaXMsIGFyZylcbiAgfVxuICByZXR1cm4gZnJvbSh0aGlzLCBhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuQnVmZmVyLnBvb2xTaXplID0gODE5MiAvLyBub3QgdXNlZCBieSB0aGlzIGltcGxlbWVudGF0aW9uXG5cbi8vIFRPRE86IExlZ2FjeSwgbm90IG5lZWRlZCBhbnltb3JlLiBSZW1vdmUgaW4gbmV4dCBtYWpvciB2ZXJzaW9uLlxuQnVmZmVyLl9hdWdtZW50ID0gZnVuY3Rpb24gKGFycikge1xuICBhcnIuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIGZyb20gKHRoYXQsIHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIodGhhdCwgdmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodGhhdCwgdmFsdWUsIGVuY29kaW5nT3JPZmZzZXQpXG4gIH1cblxuICByZXR1cm4gZnJvbU9iamVjdCh0aGF0LCB2YWx1ZSlcbn1cblxuLyoqXG4gKiBGdW5jdGlvbmFsbHkgZXF1aXZhbGVudCB0byBCdWZmZXIoYXJnLCBlbmNvZGluZykgYnV0IHRocm93cyBhIFR5cGVFcnJvclxuICogaWYgdmFsdWUgaXMgYSBudW1iZXIuXG4gKiBCdWZmZXIuZnJvbShzdHJbLCBlbmNvZGluZ10pXG4gKiBCdWZmZXIuZnJvbShhcnJheSlcbiAqIEJ1ZmZlci5mcm9tKGJ1ZmZlcilcbiAqIEJ1ZmZlci5mcm9tKGFycmF5QnVmZmVyWywgYnl0ZU9mZnNldFssIGxlbmd0aF1dKVxuICoqL1xuQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gZnJvbShudWxsLCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5pZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgQnVmZmVyLnByb3RvdHlwZS5fX3Byb3RvX18gPSBVaW50OEFycmF5LnByb3RvdHlwZVxuICBCdWZmZXIuX19wcm90b19fID0gVWludDhBcnJheVxuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnNwZWNpZXMgJiZcbiAgICAgIEJ1ZmZlcltTeW1ib2wuc3BlY2llc10gPT09IEJ1ZmZlcikge1xuICAgIC8vIEZpeCBzdWJhcnJheSgpIGluIEVTMjAxNi4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2J1ZmZlci9wdWxsLzk3XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlciwgU3ltYm9sLnNwZWNpZXMsIHtcbiAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRTaXplIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfSBlbHNlIGlmIChzaXplIDwgMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBuZWdhdGl2ZScpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWxsb2MgKHRoYXQsIHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgaWYgKHNpemUgPD0gMCkge1xuICAgIHJldHVybiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSlcbiAgfVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT25seSBwYXkgYXR0ZW50aW9uIHRvIGVuY29kaW5nIGlmIGl0J3MgYSBzdHJpbmcuIFRoaXNcbiAgICAvLyBwcmV2ZW50cyBhY2NpZGVudGFsbHkgc2VuZGluZyBpbiBhIG51bWJlciB0aGF0IHdvdWxkXG4gICAgLy8gYmUgaW50ZXJwcmV0dGVkIGFzIGEgc3RhcnQgb2Zmc2V0LlxuICAgIHJldHVybiB0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnXG4gICAgICA/IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKS5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgICAgOiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSkuZmlsbChmaWxsKVxuICB9XG4gIHJldHVybiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKiBhbGxvYyhzaXplWywgZmlsbFssIGVuY29kaW5nXV0pXG4gKiovXG5CdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGFsbG9jKG51bGwsIHNpemUsIGZpbGwsIGVuY29kaW5nKVxufVxuXG5mdW5jdGlvbiBhbGxvY1Vuc2FmZSAodGhhdCwgc2l6ZSkge1xuICBhc3NlcnRTaXplKHNpemUpXG4gIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSA8IDAgPyAwIDogY2hlY2tlZChzaXplKSB8IDApXG4gIGlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpemU7ICsraSkge1xuICAgICAgdGhhdFtpXSA9IDBcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoYXRcbn1cblxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIEJ1ZmZlcihudW0pLCBieSBkZWZhdWx0IGNyZWF0ZXMgYSBub24temVyby1maWxsZWQgQnVmZmVyIGluc3RhbmNlLlxuICogKi9cbkJ1ZmZlci5hbGxvY1Vuc2FmZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShudWxsLCBzaXplKVxufVxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIFNsb3dCdWZmZXIobnVtKSwgYnkgZGVmYXVsdCBjcmVhdGVzIGEgbm9uLXplcm8tZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqL1xuQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShudWxsLCBzaXplKVxufVxuXG5mdW5jdGlvbiBmcm9tU3RyaW5nICh0aGF0LCBzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgIT09ICdzdHJpbmcnIHx8IGVuY29kaW5nID09PSAnJykge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gIH1cblxuICBpZiAoIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiZW5jb2RpbmdcIiBtdXN0IGJlIGEgdmFsaWQgc3RyaW5nIGVuY29kaW5nJylcbiAgfVxuXG4gIHZhciBsZW5ndGggPSBieXRlTGVuZ3RoKHN0cmluZywgZW5jb2RpbmcpIHwgMFxuICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbmd0aClcblxuICB2YXIgYWN0dWFsID0gdGhhdC53cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuXG4gIGlmIChhY3R1YWwgIT09IGxlbmd0aCkge1xuICAgIC8vIFdyaXRpbmcgYSBoZXggc3RyaW5nLCBmb3IgZXhhbXBsZSwgdGhhdCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgd2lsbFxuICAgIC8vIGNhdXNlIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IGludmFsaWQgY2hhcmFjdGVyIHRvIGJlIGlnbm9yZWQuIChlLmcuXG4gICAgLy8gJ2FieHhjZCcgd2lsbCBiZSB0cmVhdGVkIGFzICdhYicpXG4gICAgdGhhdCA9IHRoYXQuc2xpY2UoMCwgYWN0dWFsKVxuICB9XG5cbiAgcmV0dXJuIHRoYXRcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5TGlrZSAodGhhdCwgYXJyYXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCA8IDAgPyAwIDogY2hlY2tlZChhcnJheS5sZW5ndGgpIHwgMFxuICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbmd0aClcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgIHRoYXRbaV0gPSBhcnJheVtpXSAmIDI1NVxuICB9XG4gIHJldHVybiB0aGF0XG59XG5cbmZ1bmN0aW9uIGZyb21BcnJheUJ1ZmZlciAodGhhdCwgYXJyYXksIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICBhcnJheS5ieXRlTGVuZ3RoIC8vIHRoaXMgdGhyb3dzIGlmIGBhcnJheWAgaXMgbm90IGEgdmFsaWQgQXJyYXlCdWZmZXJcblxuICBpZiAoYnl0ZU9mZnNldCA8IDAgfHwgYXJyYXkuYnl0ZUxlbmd0aCA8IGJ5dGVPZmZzZXQpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXFwnb2Zmc2V0XFwnIGlzIG91dCBvZiBib3VuZHMnKVxuICB9XG5cbiAgaWYgKGFycmF5LmJ5dGVMZW5ndGggPCBieXRlT2Zmc2V0ICsgKGxlbmd0aCB8fCAwKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcXCdsZW5ndGhcXCcgaXMgb3V0IG9mIGJvdW5kcycpXG4gIH1cblxuICBpZiAoYnl0ZU9mZnNldCA9PT0gdW5kZWZpbmVkICYmIGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSlcbiAgfSBlbHNlIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXksIGJ5dGVPZmZzZXQpXG4gIH0gZWxzZSB7XG4gICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2UsIGZvciBiZXN0IHBlcmZvcm1hbmNlXG4gICAgdGhhdCA9IGFycmF5XG4gICAgdGhhdC5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlXG4gIH0gZWxzZSB7XG4gICAgLy8gRmFsbGJhY2s6IFJldHVybiBhbiBvYmplY3QgaW5zdGFuY2Ugb2YgdGhlIEJ1ZmZlciBjbGFzc1xuICAgIHRoYXQgPSBmcm9tQXJyYXlMaWtlKHRoYXQsIGFycmF5KVxuICB9XG4gIHJldHVybiB0aGF0XG59XG5cbmZ1bmN0aW9uIGZyb21PYmplY3QgKHRoYXQsIG9iaikge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKG9iaikpIHtcbiAgICB2YXIgbGVuID0gY2hlY2tlZChvYmoubGVuZ3RoKSB8IDBcbiAgICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbilcblxuICAgIGlmICh0aGF0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoYXRcbiAgICB9XG5cbiAgICBvYmouY29weSh0aGF0LCAwLCAwLCBsZW4pXG4gICAgcmV0dXJuIHRoYXRcbiAgfVxuXG4gIGlmIChvYmopIHtcbiAgICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgb2JqLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB8fCAnbGVuZ3RoJyBpbiBvYmopIHtcbiAgICAgIGlmICh0eXBlb2Ygb2JqLmxlbmd0aCAhPT0gJ251bWJlcicgfHwgaXNuYW4ob2JqLmxlbmd0aCkpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCAwKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZyb21BcnJheUxpa2UodGhhdCwgb2JqKVxuICAgIH1cblxuICAgIGlmIChvYmoudHlwZSA9PT0gJ0J1ZmZlcicgJiYgaXNBcnJheShvYmouZGF0YSkpIHtcbiAgICAgIHJldHVybiBmcm9tQXJyYXlMaWtlKHRoYXQsIG9iai5kYXRhKVxuICAgIH1cbiAgfVxuXG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBhcnJheS1saWtlIG9iamVjdC4nKVxufVxuXG5mdW5jdGlvbiBjaGVja2VkIChsZW5ndGgpIHtcbiAgLy8gTm90ZTogY2Fubm90IHVzZSBgbGVuZ3RoIDwga01heExlbmd0aCgpYCBoZXJlIGJlY2F1c2UgdGhhdCBmYWlscyB3aGVuXG4gIC8vIGxlbmd0aCBpcyBOYU4gKHdoaWNoIGlzIG90aGVyd2lzZSBjb2VyY2VkIHRvIHplcm8uKVxuICBpZiAobGVuZ3RoID49IGtNYXhMZW5ndGgoKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplOiAweCcgKyBrTWF4TGVuZ3RoKCkudG9TdHJpbmcoMTYpICsgJyBieXRlcycpXG4gIH1cbiAgcmV0dXJuIGxlbmd0aCB8IDBcbn1cblxuZnVuY3Rpb24gU2xvd0J1ZmZlciAobGVuZ3RoKSB7XG4gIGlmICgrbGVuZ3RoICE9IGxlbmd0aCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGVxZXFlcVxuICAgIGxlbmd0aCA9IDBcbiAgfVxuICByZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpXG59XG5cbkJ1ZmZlci5pc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyIChiKSB7XG4gIHJldHVybiAhIShiICE9IG51bGwgJiYgYi5faXNCdWZmZXIpXG59XG5cbkJ1ZmZlci5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAoYSwgYikge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihhKSB8fCAhQnVmZmVyLmlzQnVmZmVyKGIpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIG11c3QgYmUgQnVmZmVycycpXG4gIH1cblxuICBpZiAoYSA9PT0gYikgcmV0dXJuIDBcblxuICB2YXIgeCA9IGEubGVuZ3RoXG4gIHZhciB5ID0gYi5sZW5ndGhcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICB4ID0gYVtpXVxuICAgICAgeSA9IGJbaV1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgaWYgKHggPCB5KSByZXR1cm4gLTFcbiAgaWYgKHkgPCB4KSByZXR1cm4gMVxuICByZXR1cm4gMFxufVxuXG5CdWZmZXIuaXNFbmNvZGluZyA9IGZ1bmN0aW9uIGlzRW5jb2RpbmcgKGVuY29kaW5nKSB7XG4gIHN3aXRjaCAoU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgY2FzZSAnaGV4JzpcbiAgICBjYXNlICd1dGY4JzpcbiAgICBjYXNlICd1dGYtOCc6XG4gICAgY2FzZSAnYXNjaWknOlxuICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgY2FzZSAnYmluYXJ5JzpcbiAgICBjYXNlICdiYXNlNjQnOlxuICAgIGNhc2UgJ3VjczInOlxuICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICBjYXNlICd1dGYxNmxlJzpcbiAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5CdWZmZXIuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0IChsaXN0LCBsZW5ndGgpIHtcbiAgaWYgKCFpc0FycmF5KGxpc3QpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJylcbiAgfVxuXG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMClcbiAgfVxuXG4gIHZhciBpXG4gIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGxlbmd0aCA9IDBcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7ICsraSkge1xuICAgICAgbGVuZ3RoICs9IGxpc3RbaV0ubGVuZ3RoXG4gICAgfVxuICB9XG5cbiAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpXG4gIHZhciBwb3MgPSAwXG4gIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgdmFyIGJ1ZiA9IGxpc3RbaV1cbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKVxuICAgIH1cbiAgICBidWYuY29weShidWZmZXIsIHBvcylcbiAgICBwb3MgKz0gYnVmLmxlbmd0aFxuICB9XG4gIHJldHVybiBidWZmZXJcbn1cblxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoc3RyaW5nLCBlbmNvZGluZykge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHN0cmluZykpIHtcbiAgICByZXR1cm4gc3RyaW5nLmxlbmd0aFxuICB9XG4gIGlmICh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBBcnJheUJ1ZmZlci5pc1ZpZXcgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgIChBcnJheUJ1ZmZlci5pc1ZpZXcoc3RyaW5nKSB8fCBzdHJpbmcgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikpIHtcbiAgICByZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGhcbiAgfVxuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICBzdHJpbmcgPSAnJyArIHN0cmluZ1xuICB9XG5cbiAgdmFyIGxlbiA9IHN0cmluZy5sZW5ndGhcbiAgaWYgKGxlbiA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBVc2UgYSBmb3IgbG9vcCB0byBhdm9pZCByZWN1cnNpb25cbiAgdmFyIGxvd2VyZWRDYXNlID0gZmFsc2VcbiAgZm9yICg7Oykge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgICBjYXNlICdiaW5hcnknOlxuICAgICAgICByZXR1cm4gbGVuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgIGNhc2UgdW5kZWZpbmVkOlxuICAgICAgICByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGhcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiBsZW4gKiAyXG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gbGVuID4+PiAxXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICByZXR1cm4gYmFzZTY0VG9CeXRlcyhzdHJpbmcpLmxlbmd0aFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGggLy8gYXNzdW1lIHV0ZjhcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cbkJ1ZmZlci5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuXG5mdW5jdGlvbiBzbG93VG9TdHJpbmcgKGVuY29kaW5nLCBzdGFydCwgZW5kKSB7XG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG5cbiAgLy8gTm8gbmVlZCB0byB2ZXJpZnkgdGhhdCBcInRoaXMubGVuZ3RoIDw9IE1BWF9VSU5UMzJcIiBzaW5jZSBpdCdzIGEgcmVhZC1vbmx5XG4gIC8vIHByb3BlcnR5IG9mIGEgdHlwZWQgYXJyYXkuXG5cbiAgLy8gVGhpcyBiZWhhdmVzIG5laXRoZXIgbGlrZSBTdHJpbmcgbm9yIFVpbnQ4QXJyYXkgaW4gdGhhdCB3ZSBzZXQgc3RhcnQvZW5kXG4gIC8vIHRvIHRoZWlyIHVwcGVyL2xvd2VyIGJvdW5kcyBpZiB0aGUgdmFsdWUgcGFzc2VkIGlzIG91dCBvZiByYW5nZS5cbiAgLy8gdW5kZWZpbmVkIGlzIGhhbmRsZWQgc3BlY2lhbGx5IGFzIHBlciBFQ01BLTI2MiA2dGggRWRpdGlvbixcbiAgLy8gU2VjdGlvbiAxMy4zLjMuNyBSdW50aW1lIFNlbWFudGljczogS2V5ZWRCaW5kaW5nSW5pdGlhbGl6YXRpb24uXG4gIGlmIChzdGFydCA9PT0gdW5kZWZpbmVkIHx8IHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIC8vIFJldHVybiBlYXJseSBpZiBzdGFydCA+IHRoaXMubGVuZ3RoLiBEb25lIGhlcmUgdG8gcHJldmVudCBwb3RlbnRpYWwgdWludDMyXG4gIC8vIGNvZXJjaW9uIGZhaWwgYmVsb3cuXG4gIGlmIChzdGFydCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICBpZiAoZW5kID09PSB1bmRlZmluZWQgfHwgZW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICB9XG5cbiAgaWYgKGVuZCA8PSAwKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICAvLyBGb3JjZSBjb2Vyc2lvbiB0byB1aW50MzIuIFRoaXMgd2lsbCBhbHNvIGNvZXJjZSBmYWxzZXkvTmFOIHZhbHVlcyB0byAwLlxuICBlbmQgPj4+PSAwXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmICghZW5jb2RpbmcpIGVuY29kaW5nID0gJ3V0ZjgnXG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9IChlbmNvZGluZyArICcnKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG4vLyBUaGUgcHJvcGVydHkgaXMgdXNlZCBieSBgQnVmZmVyLmlzQnVmZmVyYCBhbmQgYGlzLWJ1ZmZlcmAgKGluIFNhZmFyaSA1LTcpIHRvIGRldGVjdFxuLy8gQnVmZmVyIGluc3RhbmNlcy5cbkJ1ZmZlci5wcm90b3R5cGUuX2lzQnVmZmVyID0gdHJ1ZVxuXG5mdW5jdGlvbiBzd2FwIChiLCBuLCBtKSB7XG4gIHZhciBpID0gYltuXVxuICBiW25dID0gYlttXVxuICBiW21dID0gaVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAxNiA9IGZ1bmN0aW9uIHN3YXAxNiAoKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuICUgMiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0cycpXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gMikge1xuICAgIHN3YXAodGhpcywgaSwgaSArIDEpXG4gIH1cbiAgcmV0dXJuIHRoaXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zd2FwMzIgPSBmdW5jdGlvbiBzd2FwMzIgKCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHMnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICBzd2FwKHRoaXMsIGksIGkgKyAzKVxuICAgIHN3YXAodGhpcywgaSArIDEsIGkgKyAyKVxuICB9XG4gIHJldHVybiB0aGlzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc3dhcDY0ID0gZnVuY3Rpb24gc3dhcDY0ICgpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA4ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzJylcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA4KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgNylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgNilcbiAgICBzd2FwKHRoaXMsIGkgKyAyLCBpICsgNSlcbiAgICBzd2FwKHRoaXMsIGkgKyAzLCBpICsgNClcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGggfCAwXG4gIGlmIChsZW5ndGggPT09IDApIHJldHVybiAnJ1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHV0ZjhTbGljZSh0aGlzLCAwLCBsZW5ndGgpXG4gIHJldHVybiBzbG93VG9TdHJpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIGVxdWFscyAoYikge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihiKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG4gIGlmICh0aGlzID09PSBiKSByZXR1cm4gdHJ1ZVxuICByZXR1cm4gQnVmZmVyLmNvbXBhcmUodGhpcywgYikgPT09IDBcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24gaW5zcGVjdCAoKSB7XG4gIHZhciBzdHIgPSAnJ1xuICB2YXIgbWF4ID0gZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFU1xuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgc3RyID0gdGhpcy50b1N0cmluZygnaGV4JywgMCwgbWF4KS5tYXRjaCgvLnsyfS9nKS5qb2luKCcgJylcbiAgICBpZiAodGhpcy5sZW5ndGggPiBtYXgpIHN0ciArPSAnIC4uLiAnXG4gIH1cbiAgcmV0dXJuICc8QnVmZmVyICcgKyBzdHIgKyAnPidcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAodGFyZ2V0LCBzdGFydCwgZW5kLCB0aGlzU3RhcnQsIHRoaXNFbmQpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXInKVxuICB9XG5cbiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdGFydCA9IDBcbiAgfVxuICBpZiAoZW5kID09PSB1bmRlZmluZWQpIHtcbiAgICBlbmQgPSB0YXJnZXQgPyB0YXJnZXQubGVuZ3RoIDogMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRoaXNTdGFydCA9IDBcbiAgfVxuICBpZiAodGhpc0VuZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc0VuZCA9IHRoaXMubGVuZ3RoXG4gIH1cblxuICBpZiAoc3RhcnQgPCAwIHx8IGVuZCA+IHRhcmdldC5sZW5ndGggfHwgdGhpc1N0YXJ0IDwgMCB8fCB0aGlzRW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb3V0IG9mIHJhbmdlIGluZGV4JylcbiAgfVxuXG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCAmJiBzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCkge1xuICAgIHJldHVybiAtMVxuICB9XG4gIGlmIChzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMVxuICB9XG5cbiAgc3RhcnQgPj4+PSAwXG4gIGVuZCA+Pj49IDBcbiAgdGhpc1N0YXJ0ID4+Pj0gMFxuICB0aGlzRW5kID4+Pj0gMFxuXG4gIGlmICh0aGlzID09PSB0YXJnZXQpIHJldHVybiAwXG5cbiAgdmFyIHggPSB0aGlzRW5kIC0gdGhpc1N0YXJ0XG4gIHZhciB5ID0gZW5kIC0gc3RhcnRcbiAgdmFyIGxlbiA9IE1hdGgubWluKHgsIHkpXG5cbiAgdmFyIHRoaXNDb3B5ID0gdGhpcy5zbGljZSh0aGlzU3RhcnQsIHRoaXNFbmQpXG4gIHZhciB0YXJnZXRDb3B5ID0gdGFyZ2V0LnNsaWNlKHN0YXJ0LCBlbmQpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIGlmICh0aGlzQ29weVtpXSAhPT0gdGFyZ2V0Q29weVtpXSkge1xuICAgICAgeCA9IHRoaXNDb3B5W2ldXG4gICAgICB5ID0gdGFyZ2V0Q29weVtpXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoeCA8IHkpIHJldHVybiAtMVxuICBpZiAoeSA8IHgpIHJldHVybiAxXG4gIHJldHVybiAwXG59XG5cbi8vIEZpbmRzIGVpdGhlciB0aGUgZmlyc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0ID49IGBieXRlT2Zmc2V0YCxcbi8vIE9SIHRoZSBsYXN0IGluZGV4IG9mIGB2YWxgIGluIGBidWZmZXJgIGF0IG9mZnNldCA8PSBgYnl0ZU9mZnNldGAuXG4vL1xuLy8gQXJndW1lbnRzOlxuLy8gLSBidWZmZXIgLSBhIEJ1ZmZlciB0byBzZWFyY2hcbi8vIC0gdmFsIC0gYSBzdHJpbmcsIEJ1ZmZlciwgb3IgbnVtYmVyXG4vLyAtIGJ5dGVPZmZzZXQgLSBhbiBpbmRleCBpbnRvIGBidWZmZXJgOyB3aWxsIGJlIGNsYW1wZWQgdG8gYW4gaW50MzJcbi8vIC0gZW5jb2RpbmcgLSBhbiBvcHRpb25hbCBlbmNvZGluZywgcmVsZXZhbnQgaXMgdmFsIGlzIGEgc3RyaW5nXG4vLyAtIGRpciAtIHRydWUgZm9yIGluZGV4T2YsIGZhbHNlIGZvciBsYXN0SW5kZXhPZlxuZnVuY3Rpb24gYmlkaXJlY3Rpb25hbEluZGV4T2YgKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKSB7XG4gIC8vIEVtcHR5IGJ1ZmZlciBtZWFucyBubyBtYXRjaFxuICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gMCkgcmV0dXJuIC0xXG5cbiAgLy8gTm9ybWFsaXplIGJ5dGVPZmZzZXRcbiAgaWYgKHR5cGVvZiBieXRlT2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgIGVuY29kaW5nID0gYnl0ZU9mZnNldFxuICAgIGJ5dGVPZmZzZXQgPSAwXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA+IDB4N2ZmZmZmZmYpIHtcbiAgICBieXRlT2Zmc2V0ID0gMHg3ZmZmZmZmZlxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAtMHg4MDAwMDAwMCkge1xuICAgIGJ5dGVPZmZzZXQgPSAtMHg4MDAwMDAwMFxuICB9XG4gIGJ5dGVPZmZzZXQgPSArYnl0ZU9mZnNldCAgLy8gQ29lcmNlIHRvIE51bWJlci5cbiAgaWYgKGlzTmFOKGJ5dGVPZmZzZXQpKSB7XG4gICAgLy8gYnl0ZU9mZnNldDogaXQgaXQncyB1bmRlZmluZWQsIG51bGwsIE5hTiwgXCJmb29cIiwgZXRjLCBzZWFyY2ggd2hvbGUgYnVmZmVyXG4gICAgYnl0ZU9mZnNldCA9IGRpciA/IDAgOiAoYnVmZmVyLmxlbmd0aCAtIDEpXG4gIH1cblxuICAvLyBOb3JtYWxpemUgYnl0ZU9mZnNldDogbmVnYXRpdmUgb2Zmc2V0cyBzdGFydCBmcm9tIHRoZSBlbmQgb2YgdGhlIGJ1ZmZlclxuICBpZiAoYnl0ZU9mZnNldCA8IDApIGJ5dGVPZmZzZXQgPSBidWZmZXIubGVuZ3RoICsgYnl0ZU9mZnNldFxuICBpZiAoYnl0ZU9mZnNldCA+PSBidWZmZXIubGVuZ3RoKSB7XG4gICAgaWYgKGRpcikgcmV0dXJuIC0xXG4gICAgZWxzZSBieXRlT2Zmc2V0ID0gYnVmZmVyLmxlbmd0aCAtIDFcbiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0IDwgMCkge1xuICAgIGlmIChkaXIpIGJ5dGVPZmZzZXQgPSAwXG4gICAgZWxzZSByZXR1cm4gLTFcbiAgfVxuXG4gIC8vIE5vcm1hbGl6ZSB2YWxcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFsID0gQnVmZmVyLmZyb20odmFsLCBlbmNvZGluZylcbiAgfVxuXG4gIC8vIEZpbmFsbHksIHNlYXJjaCBlaXRoZXIgaW5kZXhPZiAoaWYgZGlyIGlzIHRydWUpIG9yIGxhc3RJbmRleE9mXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIodmFsKSkge1xuICAgIC8vIFNwZWNpYWwgY2FzZTogbG9va2luZyBmb3IgZW1wdHkgc3RyaW5nL2J1ZmZlciBhbHdheXMgZmFpbHNcbiAgICBpZiAodmFsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIC0xXG4gICAgfVxuICAgIHJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpXG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICB2YWwgPSB2YWwgJiAweEZGIC8vIFNlYXJjaCBmb3IgYSBieXRlIHZhbHVlIFswLTI1NV1cbiAgICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgJiZcbiAgICAgICAgdHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2YgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGlmIChkaXIpIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChidWZmZXIsIHZhbCwgYnl0ZU9mZnNldClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0KVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYXJyYXlJbmRleE9mKGJ1ZmZlciwgWyB2YWwgXSwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfVxuXG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ3ZhbCBtdXN0IGJlIHN0cmluZywgbnVtYmVyIG9yIEJ1ZmZlcicpXG59XG5cbmZ1bmN0aW9uIGFycmF5SW5kZXhPZiAoYXJyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgdmFyIGluZGV4U2l6ZSA9IDFcbiAgdmFyIGFyckxlbmd0aCA9IGFyci5sZW5ndGhcbiAgdmFyIHZhbExlbmd0aCA9IHZhbC5sZW5ndGhcblxuICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgaWYgKGVuY29kaW5nID09PSAndWNzMicgfHwgZW5jb2RpbmcgPT09ICd1Y3MtMicgfHxcbiAgICAgICAgZW5jb2RpbmcgPT09ICd1dGYxNmxlJyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi0xNmxlJykge1xuICAgICAgaWYgKGFyci5sZW5ndGggPCAyIHx8IHZhbC5sZW5ndGggPCAyKSB7XG4gICAgICAgIHJldHVybiAtMVxuICAgICAgfVxuICAgICAgaW5kZXhTaXplID0gMlxuICAgICAgYXJyTGVuZ3RoIC89IDJcbiAgICAgIHZhbExlbmd0aCAvPSAyXG4gICAgICBieXRlT2Zmc2V0IC89IDJcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZWFkIChidWYsIGkpIHtcbiAgICBpZiAoaW5kZXhTaXplID09PSAxKSB7XG4gICAgICByZXR1cm4gYnVmW2ldXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBidWYucmVhZFVJbnQxNkJFKGkgKiBpbmRleFNpemUpXG4gICAgfVxuICB9XG5cbiAgdmFyIGlcbiAgaWYgKGRpcikge1xuICAgIHZhciBmb3VuZEluZGV4ID0gLTFcbiAgICBmb3IgKGkgPSBieXRlT2Zmc2V0OyBpIDwgYXJyTGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChyZWFkKGFyciwgaSkgPT09IHJlYWQodmFsLCBmb3VuZEluZGV4ID09PSAtMSA/IDAgOiBpIC0gZm91bmRJbmRleCkpIHtcbiAgICAgICAgaWYgKGZvdW5kSW5kZXggPT09IC0xKSBmb3VuZEluZGV4ID0gaVxuICAgICAgICBpZiAoaSAtIGZvdW5kSW5kZXggKyAxID09PSB2YWxMZW5ndGgpIHJldHVybiBmb3VuZEluZGV4ICogaW5kZXhTaXplXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZm91bmRJbmRleCAhPT0gLTEpIGkgLT0gaSAtIGZvdW5kSW5kZXhcbiAgICAgICAgZm91bmRJbmRleCA9IC0xXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChieXRlT2Zmc2V0ICsgdmFsTGVuZ3RoID4gYXJyTGVuZ3RoKSBieXRlT2Zmc2V0ID0gYXJyTGVuZ3RoIC0gdmFsTGVuZ3RoXG4gICAgZm9yIChpID0gYnl0ZU9mZnNldDsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciBmb3VuZCA9IHRydWVcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsTGVuZ3RoOyBqKyspIHtcbiAgICAgICAgaWYgKHJlYWQoYXJyLCBpICsgaikgIT09IHJlYWQodmFsLCBqKSkge1xuICAgICAgICAgIGZvdW5kID0gZmFsc2VcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZm91bmQpIHJldHVybiBpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIC0xXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5jbHVkZXMgPSBmdW5jdGlvbiBpbmNsdWRlcyAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gdGhpcy5pbmRleE9mKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpICE9PSAtMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluZGV4T2YgPSBmdW5jdGlvbiBpbmRleE9mICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCB0cnVlKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmxhc3RJbmRleE9mID0gZnVuY3Rpb24gbGFzdEluZGV4T2YgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGZhbHNlKVxufVxuXG5mdW5jdGlvbiBoZXhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIG9mZnNldCA9IE51bWJlcihvZmZzZXQpIHx8IDBcbiAgdmFyIHJlbWFpbmluZyA9IGJ1Zi5sZW5ndGggLSBvZmZzZXRcbiAgaWYgKCFsZW5ndGgpIHtcbiAgICBsZW5ndGggPSByZW1haW5pbmdcbiAgfSBlbHNlIHtcbiAgICBsZW5ndGggPSBOdW1iZXIobGVuZ3RoKVxuICAgIGlmIChsZW5ndGggPiByZW1haW5pbmcpIHtcbiAgICAgIGxlbmd0aCA9IHJlbWFpbmluZ1xuICAgIH1cbiAgfVxuXG4gIC8vIG11c3QgYmUgYW4gZXZlbiBudW1iZXIgb2YgZGlnaXRzXG4gIHZhciBzdHJMZW4gPSBzdHJpbmcubGVuZ3RoXG4gIGlmIChzdHJMZW4gJSAyICE9PSAwKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGhleCBzdHJpbmcnKVxuXG4gIGlmIChsZW5ndGggPiBzdHJMZW4gLyAyKSB7XG4gICAgbGVuZ3RoID0gc3RyTGVuIC8gMlxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgcGFyc2VkID0gcGFyc2VJbnQoc3RyaW5nLnN1YnN0cihpICogMiwgMiksIDE2KVxuICAgIGlmIChpc05hTihwYXJzZWQpKSByZXR1cm4gaVxuICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHBhcnNlZFxuICB9XG4gIHJldHVybiBpXG59XG5cbmZ1bmN0aW9uIHV0ZjhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKHV0ZjhUb0J5dGVzKHN0cmluZywgYnVmLmxlbmd0aCAtIG9mZnNldCksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGFzY2lpV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcihhc2NpaVRvQnl0ZXMoc3RyaW5nKSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gbGF0aW4xV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYXNjaWlXcml0ZShidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGJhc2U2NFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYmFzZTY0VG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiB1Y3MyV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGYxNmxlVG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKSB7XG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcpXG4gIGlmIChvZmZzZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICBvZmZzZXQgPSAwXG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBvZmZzZXRcbiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICAgIG9mZnNldCA9IDBcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgb2Zmc2V0WywgbGVuZ3RoXVssIGVuY29kaW5nXSlcbiAgfSBlbHNlIGlmIChpc0Zpbml0ZShvZmZzZXQpKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICAgIGlmIChpc0Zpbml0ZShsZW5ndGgpKSB7XG4gICAgICBsZW5ndGggPSBsZW5ndGggfCAwXG4gICAgICBpZiAoZW5jb2RpbmcgPT09IHVuZGVmaW5lZCkgZW5jb2RpbmcgPSAndXRmOCdcbiAgICB9IGVsc2Uge1xuICAgICAgZW5jb2RpbmcgPSBsZW5ndGhcbiAgICAgIGxlbmd0aCA9IHVuZGVmaW5lZFxuICAgIH1cbiAgLy8gbGVnYWN5IHdyaXRlKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldCwgbGVuZ3RoKSAtIHJlbW92ZSBpbiB2MC4xM1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdCdWZmZXIud3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0WywgbGVuZ3RoXSkgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCdcbiAgICApXG4gIH1cblxuICB2YXIgcmVtYWluaW5nID0gdGhpcy5sZW5ndGggLSBvZmZzZXRcbiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkIHx8IGxlbmd0aCA+IHJlbWFpbmluZykgbGVuZ3RoID0gcmVtYWluaW5nXG5cbiAgaWYgKChzdHJpbmcubGVuZ3RoID4gMCAmJiAobGVuZ3RoIDwgMCB8fCBvZmZzZXQgPCAwKSkgfHwgb2Zmc2V0ID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHMnKVxuICB9XG5cbiAgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSAndXRmOCdcblxuICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZVxuICBmb3IgKDs7KSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgcmV0dXJuIGhleFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ3V0ZjgnOlxuICAgICAgY2FzZSAndXRmLTgnOlxuICAgICAgICByZXR1cm4gdXRmOFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgICAgcmV0dXJuIGFzY2lpV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnbGF0aW4xJzpcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIHJldHVybiBsYXRpbjFXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICAvLyBXYXJuaW5nOiBtYXhMZW5ndGggbm90IHRha2VuIGludG8gYWNjb3VudCBpbiBiYXNlNjRXcml0ZVxuICAgICAgICByZXR1cm4gYmFzZTY0V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIHVjczJXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04gKCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6ICdCdWZmZXInLFxuICAgIGRhdGE6IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2FyciB8fCB0aGlzLCAwKVxuICB9XG59XG5cbmZ1bmN0aW9uIGJhc2U2NFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKHN0YXJ0ID09PSAwICYmIGVuZCA9PT0gYnVmLmxlbmd0aCkge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1Zi5zbGljZShzdGFydCwgZW5kKSlcbiAgfVxufVxuXG5mdW5jdGlvbiB1dGY4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpXG4gIHZhciByZXMgPSBbXVxuXG4gIHZhciBpID0gc3RhcnRcbiAgd2hpbGUgKGkgPCBlbmQpIHtcbiAgICB2YXIgZmlyc3RCeXRlID0gYnVmW2ldXG4gICAgdmFyIGNvZGVQb2ludCA9IG51bGxcbiAgICB2YXIgYnl0ZXNQZXJTZXF1ZW5jZSA9IChmaXJzdEJ5dGUgPiAweEVGKSA/IDRcbiAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4REYpID8gM1xuICAgICAgOiAoZmlyc3RCeXRlID4gMHhCRikgPyAyXG4gICAgICA6IDFcblxuICAgIGlmIChpICsgYnl0ZXNQZXJTZXF1ZW5jZSA8PSBlbmQpIHtcbiAgICAgIHZhciBzZWNvbmRCeXRlLCB0aGlyZEJ5dGUsIGZvdXJ0aEJ5dGUsIHRlbXBDb2RlUG9pbnRcblxuICAgICAgc3dpdGNoIChieXRlc1BlclNlcXVlbmNlKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBpZiAoZmlyc3RCeXRlIDwgMHg4MCkge1xuICAgICAgICAgICAgY29kZVBvaW50ID0gZmlyc3RCeXRlXG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4MUYpIDw8IDB4NiB8IChzZWNvbmRCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3Rikge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweEMgfCAoc2Vjb25kQnl0ZSAmIDB4M0YpIDw8IDB4NiB8ICh0aGlyZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGRiAmJiAodGVtcENvZGVQb2ludCA8IDB4RDgwMCB8fCB0ZW1wQ29kZVBvaW50ID4gMHhERkZGKSkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBmb3VydGhCeXRlID0gYnVmW2kgKyAzXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAoZm91cnRoQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4RikgPDwgMHgxMiB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHhDIHwgKHRoaXJkQnl0ZSAmIDB4M0YpIDw8IDB4NiB8IChmb3VydGhCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHhGRkZGICYmIHRlbXBDb2RlUG9pbnQgPCAweDExMDAwMCkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjb2RlUG9pbnQgPT09IG51bGwpIHtcbiAgICAgIC8vIHdlIGRpZCBub3QgZ2VuZXJhdGUgYSB2YWxpZCBjb2RlUG9pbnQgc28gaW5zZXJ0IGFcbiAgICAgIC8vIHJlcGxhY2VtZW50IGNoYXIgKFUrRkZGRCkgYW5kIGFkdmFuY2Ugb25seSAxIGJ5dGVcbiAgICAgIGNvZGVQb2ludCA9IDB4RkZGRFxuICAgICAgYnl0ZXNQZXJTZXF1ZW5jZSA9IDFcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA+IDB4RkZGRikge1xuICAgICAgLy8gZW5jb2RlIHRvIHV0ZjE2IChzdXJyb2dhdGUgcGFpciBkYW5jZSlcbiAgICAgIGNvZGVQb2ludCAtPSAweDEwMDAwXG4gICAgICByZXMucHVzaChjb2RlUG9pbnQgPj4+IDEwICYgMHgzRkYgfCAweEQ4MDApXG4gICAgICBjb2RlUG9pbnQgPSAweERDMDAgfCBjb2RlUG9pbnQgJiAweDNGRlxuICAgIH1cblxuICAgIHJlcy5wdXNoKGNvZGVQb2ludClcbiAgICBpICs9IGJ5dGVzUGVyU2VxdWVuY2VcbiAgfVxuXG4gIHJldHVybiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkocmVzKVxufVxuXG4vLyBCYXNlZCBvbiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMjc0NzI3Mi82ODA3NDIsIHRoZSBicm93c2VyIHdpdGhcbi8vIHRoZSBsb3dlc3QgbGltaXQgaXMgQ2hyb21lLCB3aXRoIDB4MTAwMDAgYXJncy5cbi8vIFdlIGdvIDEgbWFnbml0dWRlIGxlc3MsIGZvciBzYWZldHlcbnZhciBNQVhfQVJHVU1FTlRTX0xFTkdUSCA9IDB4MTAwMFxuXG5mdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkgKGNvZGVQb2ludHMpIHtcbiAgdmFyIGxlbiA9IGNvZGVQb2ludHMubGVuZ3RoXG4gIGlmIChsZW4gPD0gTUFYX0FSR1VNRU5UU19MRU5HVEgpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNvZGVQb2ludHMpIC8vIGF2b2lkIGV4dHJhIHNsaWNlKClcbiAgfVxuXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgdmFyIHJlcyA9ICcnXG4gIHZhciBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldICYgMHg3RilcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGxhdGluMVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHJldCA9ICcnXG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcblxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIHJldCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSlcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGhleFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxlbiA9IGJ1Zi5sZW5ndGhcblxuICBpZiAoIXN0YXJ0IHx8IHN0YXJ0IDwgMCkgc3RhcnQgPSAwXG4gIGlmICghZW5kIHx8IGVuZCA8IDAgfHwgZW5kID4gbGVuKSBlbmQgPSBsZW5cblxuICB2YXIgb3V0ID0gJydcbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICBvdXQgKz0gdG9IZXgoYnVmW2ldKVxuICB9XG4gIHJldHVybiBvdXRcbn1cblxuZnVuY3Rpb24gdXRmMTZsZVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGJ5dGVzID0gYnVmLnNsaWNlKHN0YXJ0LCBlbmQpXG4gIHZhciByZXMgPSAnJ1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0gKyBieXRlc1tpICsgMV0gKiAyNTYpXG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnNsaWNlID0gZnVuY3Rpb24gc2xpY2UgKHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIHN0YXJ0ID0gfn5zdGFydFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IH5+ZW5kXG5cbiAgaWYgKHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ICs9IGxlblxuICAgIGlmIChzdGFydCA8IDApIHN0YXJ0ID0gMFxuICB9IGVsc2UgaWYgKHN0YXJ0ID4gbGVuKSB7XG4gICAgc3RhcnQgPSBsZW5cbiAgfVxuXG4gIGlmIChlbmQgPCAwKSB7XG4gICAgZW5kICs9IGxlblxuICAgIGlmIChlbmQgPCAwKSBlbmQgPSAwXG4gIH0gZWxzZSBpZiAoZW5kID4gbGVuKSB7XG4gICAgZW5kID0gbGVuXG4gIH1cblxuICBpZiAoZW5kIDwgc3RhcnQpIGVuZCA9IHN0YXJ0XG5cbiAgdmFyIG5ld0J1ZlxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICBuZXdCdWYgPSB0aGlzLnN1YmFycmF5KHN0YXJ0LCBlbmQpXG4gICAgbmV3QnVmLl9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgfSBlbHNlIHtcbiAgICB2YXIgc2xpY2VMZW4gPSBlbmQgLSBzdGFydFxuICAgIG5ld0J1ZiA9IG5ldyBCdWZmZXIoc2xpY2VMZW4sIHVuZGVmaW5lZClcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWNlTGVuOyArK2kpIHtcbiAgICAgIG5ld0J1ZltpXSA9IHRoaXNbaSArIHN0YXJ0XVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdCdWZcbn1cblxuLypcbiAqIE5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgYnVmZmVyIGlzbid0IHRyeWluZyB0byB3cml0ZSBvdXQgb2YgYm91bmRzLlxuICovXG5mdW5jdGlvbiBjaGVja09mZnNldCAob2Zmc2V0LCBleHQsIGxlbmd0aCkge1xuICBpZiAoKG9mZnNldCAlIDEpICE9PSAwIHx8IG9mZnNldCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdvZmZzZXQgaXMgbm90IHVpbnQnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gbGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aCcpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRMRSA9IGZ1bmN0aW9uIHJlYWRVSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsXG4gIH1cblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRCRSA9IGZ1bmN0aW9uIHJlYWRVSW50QkUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG4gIH1cblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXQgKyAtLWJ5dGVMZW5ndGhdXG4gIHZhciBtdWwgPSAxXG4gIHdoaWxlIChieXRlTGVuZ3RoID4gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF0gKiBtdWxcbiAgfVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDggPSBmdW5jdGlvbiByZWFkVUludDggKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAxLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZMRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2QkUgPSBmdW5jdGlvbiByZWFkVUludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgOCkgfCB0aGlzW29mZnNldCArIDFdXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkxFID0gZnVuY3Rpb24gcmVhZFVJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICgodGhpc1tvZmZzZXRdKSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCAxNikpICtcbiAgICAgICh0aGlzW29mZnNldCArIDNdICogMHgxMDAwMDAwKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdICogMHgxMDAwMDAwKSArXG4gICAgKCh0aGlzW29mZnNldCArIDFdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgOCkgfFxuICAgIHRoaXNbb2Zmc2V0ICsgM10pXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludExFID0gZnVuY3Rpb24gcmVhZEludExFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XVxuICB2YXIgbXVsID0gMVxuICB2YXIgaSA9IDBcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyBpXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludEJFID0gZnVuY3Rpb24gcmVhZEludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoXG4gIHZhciBtdWwgPSAxXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0taV1cbiAgd2hpbGUgKGkgPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1pXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDggPSBmdW5jdGlvbiByZWFkSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDEsIHRoaXMubGVuZ3RoKVxuICBpZiAoISh0aGlzW29mZnNldF0gJiAweDgwKSkgcmV0dXJuICh0aGlzW29mZnNldF0pXG4gIHJldHVybiAoKDB4ZmYgLSB0aGlzW29mZnNldF0gKyAxKSAqIC0xKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkxFID0gZnVuY3Rpb24gcmVhZEludDE2TEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XSB8ICh0aGlzW29mZnNldCArIDFdIDw8IDgpXG4gIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRJbnQxNkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIDFdIHwgKHRoaXNbb2Zmc2V0XSA8PCA4KVxuICByZXR1cm4gKHZhbCAmIDB4ODAwMCkgPyB2YWwgfCAweEZGRkYwMDAwIDogdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyTEUgPSBmdW5jdGlvbiByZWFkSW50MzJMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdKSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOCkgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10gPDwgMjQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyQkUgPSBmdW5jdGlvbiByZWFkSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdIDw8IDI0KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10pXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0TEUgPSBmdW5jdGlvbiByZWFkRmxvYXRMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0QkUgPSBmdW5jdGlvbiByZWFkRmxvYXRCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgZmFsc2UsIDIzLCA0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWREb3VibGVMRSA9IGZ1bmN0aW9uIHJlYWREb3VibGVMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgNTIsIDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUJFID0gZnVuY3Rpb24gcmVhZERvdWJsZUJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgNTIsIDgpXG59XG5cbmZ1bmN0aW9uIGNoZWNrSW50IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJylcbiAgaWYgKHZhbHVlID4gbWF4IHx8IHZhbHVlIDwgbWluKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gYnVmLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50QkUgPSBmdW5jdGlvbiB3cml0ZVVJbnRCRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aCAtIDFcbiAgdmFyIG11bCA9IDFcbiAgdGhpc1tvZmZzZXQgKyBpXSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoLS1pID49IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50OCA9IGZ1bmN0aW9uIHdyaXRlVUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMSwgMHhmZiwgMClcbiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgdmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5mdW5jdGlvbiBvYmplY3RXcml0ZVVJbnQxNiAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4pIHtcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmYgKyB2YWx1ZSArIDFcbiAgZm9yICh2YXIgaSA9IDAsIGogPSBNYXRoLm1pbihidWYubGVuZ3RoIC0gb2Zmc2V0LCAyKTsgaSA8IGo7ICsraSkge1xuICAgIGJ1ZltvZmZzZXQgKyBpXSA9ICh2YWx1ZSAmICgweGZmIDw8ICg4ICogKGxpdHRsZUVuZGlhbiA/IGkgOiAxIC0gaSkpKSkgPj4+XG4gICAgICAobGl0dGxlRW5kaWFuID8gaSA6IDEgLSBpKSAqIDhcbiAgfVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4ZmZmZiwgMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDE2KHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkJFID0gZnVuY3Rpb24gd3JpdGVVSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5mdW5jdGlvbiBvYmplY3RXcml0ZVVJbnQzMiAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4pIHtcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmZmZmZmICsgdmFsdWUgKyAxXG4gIGZvciAodmFyIGkgPSAwLCBqID0gTWF0aC5taW4oYnVmLmxlbmd0aCAtIG9mZnNldCwgNCk7IGkgPCBqOyArK2kpIHtcbiAgICBidWZbb2Zmc2V0ICsgaV0gPSAodmFsdWUgPj4+IChsaXR0bGVFbmRpYW4gPyBpIDogMyAtIGkpICogOCkgJiAweGZmXG4gIH1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFID0gZnVuY3Rpb24gd3JpdGVVSW50MzJMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweGZmZmZmZmZmLCAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlID4+PiAyNClcbiAgICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiAxNilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4ZmZmZmZmZmYsIDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gMjQpXG4gICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gICAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQzMih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50TEUgPSBmdW5jdGlvbiB3cml0ZUludExFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbGltaXQgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCAtIDEpXG5cbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBsaW1pdCAtIDEsIC1saW1pdClcbiAgfVxuXG4gIHZhciBpID0gMFxuICB2YXIgbXVsID0gMVxuICB2YXIgc3ViID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICBpZiAodmFsdWUgPCAwICYmIHN1YiA9PT0gMCAmJiB0aGlzW29mZnNldCArIGkgLSAxXSAhPT0gMCkge1xuICAgICAgc3ViID0gMVxuICAgIH1cbiAgICB0aGlzW29mZnNldCArIGldID0gKCh2YWx1ZSAvIG11bCkgPj4gMCkgLSBzdWIgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50QkUgPSBmdW5jdGlvbiB3cml0ZUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbGltaXQgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCAtIDEpXG5cbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBsaW1pdCAtIDEsIC1saW1pdClcbiAgfVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aCAtIDFcbiAgdmFyIG11bCA9IDFcbiAgdmFyIHN1YiA9IDBcbiAgdGhpc1tvZmZzZXQgKyBpXSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoLS1pID49IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICBpZiAodmFsdWUgPCAwICYmIHN1YiA9PT0gMCAmJiB0aGlzW29mZnNldCArIGkgKyAxXSAhPT0gMCkge1xuICAgICAgc3ViID0gMVxuICAgIH1cbiAgICB0aGlzW29mZnNldCArIGldID0gKCh2YWx1ZSAvIG11bCkgPj4gMCkgLSBzdWIgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50OCA9IGZ1bmN0aW9uIHdyaXRlSW50OCAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweDdmLCAtMHg4MClcbiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgdmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlKVxuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmYgKyB2YWx1ZSArIDFcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDFcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2TEUgPSBmdW5jdGlvbiB3cml0ZUludDE2TEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHg3ZmZmLCAtMHg4MDAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MTYodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweDdmZmYsIC0weDgwMDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJMRSA9IGZ1bmN0aW9uIHdyaXRlSW50MzJMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICAgIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgPj4+IDI0KVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDMyKHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZUludDMyQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHg3ZmZmZmZmZiwgLTB4ODAwMDAwMDApXG4gIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZmZmZmZmZiArIHZhbHVlICsgMVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDI0KVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDE2KVxuICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpXG4gICAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuZnVuY3Rpb24gY2hlY2tJRUVFNzU0IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxuICBpZiAob2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRmxvYXQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tJRUVFNzU0KGJ1ZiwgdmFsdWUsIG9mZnNldCwgNCwgMy40MDI4MjM0NjYzODUyODg2ZSszOCwgLTMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgpXG4gIH1cbiAgaWVlZTc1NC53cml0ZShidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgMjMsIDQpXG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdExFID0gZnVuY3Rpb24gd3JpdGVGbG9hdExFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlLCBub0Fzc2VydClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0QkUgPSBmdW5jdGlvbiB3cml0ZUZsb2F0QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZUZsb2F0KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlLCBub0Fzc2VydClcbn1cblxuZnVuY3Rpb24gd3JpdGVEb3VibGUgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tJRUVFNzU0KGJ1ZiwgdmFsdWUsIG9mZnNldCwgOCwgMS43OTc2OTMxMzQ4NjIzMTU3RSszMDgsIC0xLjc5NzY5MzEzNDg2MjMxNTdFKzMwOClcbiAgfVxuICBpZWVlNzU0LndyaXRlKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCA1MiwgOClcbiAgcmV0dXJuIG9mZnNldCArIDhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUxFID0gZnVuY3Rpb24gd3JpdGVEb3VibGVMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUsIG5vQXNzZXJ0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlQkUgPSBmdW5jdGlvbiB3cml0ZURvdWJsZUJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVEb3VibGUodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UsIG5vQXNzZXJ0KVxufVxuXG4vLyBjb3B5KHRhcmdldEJ1ZmZlciwgdGFyZ2V0U3RhcnQ9MCwgc291cmNlU3RhcnQ9MCwgc291cmNlRW5kPWJ1ZmZlci5sZW5ndGgpXG5CdWZmZXIucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiBjb3B5ICh0YXJnZXQsIHRhcmdldFN0YXJ0LCBzdGFydCwgZW5kKSB7XG4gIGlmICghc3RhcnQpIHN0YXJ0ID0gMFxuICBpZiAoIWVuZCAmJiBlbmQgIT09IDApIGVuZCA9IHRoaXMubGVuZ3RoXG4gIGlmICh0YXJnZXRTdGFydCA+PSB0YXJnZXQubGVuZ3RoKSB0YXJnZXRTdGFydCA9IHRhcmdldC5sZW5ndGhcbiAgaWYgKCF0YXJnZXRTdGFydCkgdGFyZ2V0U3RhcnQgPSAwXG4gIGlmIChlbmQgPiAwICYmIGVuZCA8IHN0YXJ0KSBlbmQgPSBzdGFydFxuXG4gIC8vIENvcHkgMCBieXRlczsgd2UncmUgZG9uZVxuICBpZiAoZW5kID09PSBzdGFydCkgcmV0dXJuIDBcbiAgaWYgKHRhcmdldC5sZW5ndGggPT09IDAgfHwgdGhpcy5sZW5ndGggPT09IDApIHJldHVybiAwXG5cbiAgLy8gRmF0YWwgZXJyb3IgY29uZGl0aW9uc1xuICBpZiAodGFyZ2V0U3RhcnQgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3RhcmdldFN0YXJ0IG91dCBvZiBib3VuZHMnKVxuICB9XG4gIGlmIChzdGFydCA8IDAgfHwgc3RhcnQgPj0gdGhpcy5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdzb3VyY2VTdGFydCBvdXQgb2YgYm91bmRzJylcbiAgaWYgKGVuZCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdzb3VyY2VFbmQgb3V0IG9mIGJvdW5kcycpXG5cbiAgLy8gQXJlIHdlIG9vYj9cbiAgaWYgKGVuZCA+IHRoaXMubGVuZ3RoKSBlbmQgPSB0aGlzLmxlbmd0aFxuICBpZiAodGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0IDwgZW5kIC0gc3RhcnQpIHtcbiAgICBlbmQgPSB0YXJnZXQubGVuZ3RoIC0gdGFyZ2V0U3RhcnQgKyBzdGFydFxuICB9XG5cbiAgdmFyIGxlbiA9IGVuZCAtIHN0YXJ0XG4gIHZhciBpXG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCAmJiBzdGFydCA8IHRhcmdldFN0YXJ0ICYmIHRhcmdldFN0YXJ0IDwgZW5kKSB7XG4gICAgLy8gZGVzY2VuZGluZyBjb3B5IGZyb20gZW5kXG4gICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIHRhcmdldFtpICsgdGFyZ2V0U3RhcnRdID0gdGhpc1tpICsgc3RhcnRdXG4gICAgfVxuICB9IGVsc2UgaWYgKGxlbiA8IDEwMDAgfHwgIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gYXNjZW5kaW5nIGNvcHkgZnJvbSBzdGFydFxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgdGFyZ2V0W2kgKyB0YXJnZXRTdGFydF0gPSB0aGlzW2kgKyBzdGFydF1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwoXG4gICAgICB0YXJnZXQsXG4gICAgICB0aGlzLnN1YmFycmF5KHN0YXJ0LCBzdGFydCArIGxlbiksXG4gICAgICB0YXJnZXRTdGFydFxuICAgIClcbiAgfVxuXG4gIHJldHVybiBsZW5cbn1cblxuLy8gVXNhZ2U6XG4vLyAgICBidWZmZXIuZmlsbChudW1iZXJbLCBvZmZzZXRbLCBlbmRdXSlcbi8vICAgIGJ1ZmZlci5maWxsKGJ1ZmZlclssIG9mZnNldFssIGVuZF1dKVxuLy8gICAgYnVmZmVyLmZpbGwoc3RyaW5nWywgb2Zmc2V0WywgZW5kXV1bLCBlbmNvZGluZ10pXG5CdWZmZXIucHJvdG90eXBlLmZpbGwgPSBmdW5jdGlvbiBmaWxsICh2YWwsIHN0YXJ0LCBlbmQsIGVuY29kaW5nKSB7XG4gIC8vIEhhbmRsZSBzdHJpbmcgY2FzZXM6XG4gIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIGlmICh0eXBlb2Ygc3RhcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IHN0YXJ0XG4gICAgICBzdGFydCA9IDBcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZW5kID09PSAnc3RyaW5nJykge1xuICAgICAgZW5jb2RpbmcgPSBlbmRcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfVxuICAgIGlmICh2YWwubGVuZ3RoID09PSAxKSB7XG4gICAgICB2YXIgY29kZSA9IHZhbC5jaGFyQ29kZUF0KDApXG4gICAgICBpZiAoY29kZSA8IDI1Nikge1xuICAgICAgICB2YWwgPSBjb2RlXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBlbmNvZGluZyAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2VuY29kaW5nIG11c3QgYmUgYSBzdHJpbmcnKVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJyAmJiAhQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgdmFsID0gdmFsICYgMjU1XG4gIH1cblxuICAvLyBJbnZhbGlkIHJhbmdlcyBhcmUgbm90IHNldCB0byBhIGRlZmF1bHQsIHNvIGNhbiByYW5nZSBjaGVjayBlYXJseS5cbiAgaWYgKHN0YXJ0IDwgMCB8fCB0aGlzLmxlbmd0aCA8IHN0YXJ0IHx8IHRoaXMubGVuZ3RoIDwgZW5kKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ091dCBvZiByYW5nZSBpbmRleCcpXG4gIH1cblxuICBpZiAoZW5kIDw9IHN0YXJ0KSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHN0YXJ0ID0gc3RhcnQgPj4+IDBcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyB0aGlzLmxlbmd0aCA6IGVuZCA+Pj4gMFxuXG4gIGlmICghdmFsKSB2YWwgPSAwXG5cbiAgdmFyIGlcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgICAgdGhpc1tpXSA9IHZhbFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgYnl0ZXMgPSBCdWZmZXIuaXNCdWZmZXIodmFsKVxuICAgICAgPyB2YWxcbiAgICAgIDogdXRmOFRvQnl0ZXMobmV3IEJ1ZmZlcih2YWwsIGVuY29kaW5nKS50b1N0cmluZygpKVxuICAgIHZhciBsZW4gPSBieXRlcy5sZW5ndGhcbiAgICBmb3IgKGkgPSAwOyBpIDwgZW5kIC0gc3RhcnQ7ICsraSkge1xuICAgICAgdGhpc1tpICsgc3RhcnRdID0gYnl0ZXNbaSAlIGxlbl1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIRUxQRVIgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09XG5cbnZhciBJTlZBTElEX0JBU0U2NF9SRSA9IC9bXitcXC8wLTlBLVphLXotX10vZ1xuXG5mdW5jdGlvbiBiYXNlNjRjbGVhbiAoc3RyKSB7XG4gIC8vIE5vZGUgc3RyaXBzIG91dCBpbnZhbGlkIGNoYXJhY3RlcnMgbGlrZSBcXG4gYW5kIFxcdCBmcm9tIHRoZSBzdHJpbmcsIGJhc2U2NC1qcyBkb2VzIG5vdFxuICBzdHIgPSBzdHJpbmd0cmltKHN0cikucmVwbGFjZShJTlZBTElEX0JBU0U2NF9SRSwgJycpXG4gIC8vIE5vZGUgY29udmVydHMgc3RyaW5ncyB3aXRoIGxlbmd0aCA8IDIgdG8gJydcbiAgaWYgKHN0ci5sZW5ndGggPCAyKSByZXR1cm4gJydcbiAgLy8gTm9kZSBhbGxvd3MgZm9yIG5vbi1wYWRkZWQgYmFzZTY0IHN0cmluZ3MgKG1pc3NpbmcgdHJhaWxpbmcgPT09KSwgYmFzZTY0LWpzIGRvZXMgbm90XG4gIHdoaWxlIChzdHIubGVuZ3RoICUgNCAhPT0gMCkge1xuICAgIHN0ciA9IHN0ciArICc9J1xuICB9XG4gIHJldHVybiBzdHJcbn1cblxuZnVuY3Rpb24gc3RyaW5ndHJpbSAoc3RyKSB7XG4gIGlmIChzdHIudHJpbSkgcmV0dXJuIHN0ci50cmltKClcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJylcbn1cblxuZnVuY3Rpb24gdG9IZXggKG4pIHtcbiAgaWYgKG4gPCAxNikgcmV0dXJuICcwJyArIG4udG9TdHJpbmcoMTYpXG4gIHJldHVybiBuLnRvU3RyaW5nKDE2KVxufVxuXG5mdW5jdGlvbiB1dGY4VG9CeXRlcyAoc3RyaW5nLCB1bml0cykge1xuICB1bml0cyA9IHVuaXRzIHx8IEluZmluaXR5XG4gIHZhciBjb2RlUG9pbnRcbiAgdmFyIGxlbmd0aCA9IHN0cmluZy5sZW5ndGhcbiAgdmFyIGxlYWRTdXJyb2dhdGUgPSBudWxsXG4gIHZhciBieXRlcyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIGNvZGVQb2ludCA9IHN0cmluZy5jaGFyQ29kZUF0KGkpXG5cbiAgICAvLyBpcyBzdXJyb2dhdGUgY29tcG9uZW50XG4gICAgaWYgKGNvZGVQb2ludCA+IDB4RDdGRiAmJiBjb2RlUG9pbnQgPCAweEUwMDApIHtcbiAgICAgIC8vIGxhc3QgY2hhciB3YXMgYSBsZWFkXG4gICAgICBpZiAoIWxlYWRTdXJyb2dhdGUpIHtcbiAgICAgICAgLy8gbm8gbGVhZCB5ZXRcbiAgICAgICAgaWYgKGNvZGVQb2ludCA+IDB4REJGRikge1xuICAgICAgICAgIC8vIHVuZXhwZWN0ZWQgdHJhaWxcbiAgICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2UgaWYgKGkgKyAxID09PSBsZW5ndGgpIHtcbiAgICAgICAgICAvLyB1bnBhaXJlZCBsZWFkXG4gICAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHZhbGlkIGxlYWRcbiAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IGNvZGVQb2ludFxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIDIgbGVhZHMgaW4gYSByb3dcbiAgICAgIGlmIChjb2RlUG9pbnQgPCAweERDMDApIHtcbiAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgIGxlYWRTdXJyb2dhdGUgPSBjb2RlUG9pbnRcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gdmFsaWQgc3Vycm9nYXRlIHBhaXJcbiAgICAgIGNvZGVQb2ludCA9IChsZWFkU3Vycm9nYXRlIC0gMHhEODAwIDw8IDEwIHwgY29kZVBvaW50IC0gMHhEQzAwKSArIDB4MTAwMDBcbiAgICB9IGVsc2UgaWYgKGxlYWRTdXJyb2dhdGUpIHtcbiAgICAgIC8vIHZhbGlkIGJtcCBjaGFyLCBidXQgbGFzdCBjaGFyIHdhcyBhIGxlYWRcbiAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgIH1cblxuICAgIGxlYWRTdXJyb2dhdGUgPSBudWxsXG5cbiAgICAvLyBlbmNvZGUgdXRmOFxuICAgIGlmIChjb2RlUG9pbnQgPCAweDgwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDEpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goY29kZVBvaW50KVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHg4MDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMikgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiB8IDB4QzAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDEwMDAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDMpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweEMgfCAweEUwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2ICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDExMDAwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSA0KSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHgxMiB8IDB4RjAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweEMgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29kZSBwb2ludCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpVG9CeXRlcyAoc3RyKSB7XG4gIHZhciBieXRlQXJyYXkgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIC8vIE5vZGUncyBjb2RlIHNlZW1zIHRvIGJlIGRvaW5nIHRoaXMgYW5kIG5vdCAmIDB4N0YuLlxuICAgIGJ5dGVBcnJheS5wdXNoKHN0ci5jaGFyQ29kZUF0KGkpICYgMHhGRilcbiAgfVxuICByZXR1cm4gYnl0ZUFycmF5XG59XG5cbmZ1bmN0aW9uIHV0ZjE2bGVUb0J5dGVzIChzdHIsIHVuaXRzKSB7XG4gIHZhciBjLCBoaSwgbG9cbiAgdmFyIGJ5dGVBcnJheSA9IFtdXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrXG5cbiAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSlcbiAgICBoaSA9IGMgPj4gOFxuICAgIGxvID0gYyAlIDI1NlxuICAgIGJ5dGVBcnJheS5wdXNoKGxvKVxuICAgIGJ5dGVBcnJheS5wdXNoKGhpKVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiBiYXNlNjRUb0J5dGVzIChzdHIpIHtcbiAgcmV0dXJuIGJhc2U2NC50b0J5dGVBcnJheShiYXNlNjRjbGVhbihzdHIpKVxufVxuXG5mdW5jdGlvbiBibGl0QnVmZmVyIChzcmMsIGRzdCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIGlmICgoaSArIG9mZnNldCA+PSBkc3QubGVuZ3RoKSB8fCAoaSA+PSBzcmMubGVuZ3RoKSkgYnJlYWtcbiAgICBkc3RbaSArIG9mZnNldF0gPSBzcmNbaV1cbiAgfVxuICByZXR1cm4gaVxufVxuXG5mdW5jdGlvbiBpc25hbiAodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IHZhbCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNlbGYtY29tcGFyZVxufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPDwgNikgfFxuICAgICAgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDIpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAxKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildID4+IDIpXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIGFyclxufVxuXG5mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQgKG51bSkge1xuICByZXR1cm4gbG9va3VwW251bSA+PiAxOCAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtICYgMHgzRl1cbn1cblxuZnVuY3Rpb24gZW5jb2RlQ2h1bmsgKHVpbnQ4LCBzdGFydCwgZW5kKSB7XG4gIHZhciB0bXBcbiAgdmFyIG91dHB1dCA9IFtdXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSArPSAzKSB7XG4gICAgdG1wID1cbiAgICAgICgodWludDhbaV0gPDwgMTYpICYgMHhGRjAwMDApICtcbiAgICAgICgodWludDhbaSArIDFdIDw8IDgpICYgMHhGRjAwKSArXG4gICAgICAodWludDhbaSArIDJdICYgMHhGRilcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIHBhcnRzID0gW11cbiAgdmFyIG1heENodW5rTGVuZ3RoID0gMTYzODMgLy8gbXVzdCBiZSBtdWx0aXBsZSBvZiAzXG5cbiAgLy8gZ28gdGhyb3VnaCB0aGUgYXJyYXkgZXZlcnkgdGhyZWUgYnl0ZXMsIHdlJ2xsIGRlYWwgd2l0aCB0cmFpbGluZyBzdHVmZiBsYXRlclxuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XG4gICAgcGFydHMucHVzaChlbmNvZGVDaHVuayhcbiAgICAgIHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aClcbiAgICApKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iLCJleHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsInZhciBwU2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4vbGliL2tleXMuanMnKTtcbnZhciBpc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vbGliL2lzX2FyZ3VtZW50cy5qcycpO1xuXG52YXIgZGVlcEVxdWFsID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYWN0dWFsLCBleHBlY3RlZCwgb3B0cykge1xuICBpZiAoIW9wdHMpIG9wdHMgPSB7fTtcbiAgLy8gNy4xLiBBbGwgaWRlbnRpY2FsIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgYXMgZGV0ZXJtaW5lZCBieSA9PT0uXG4gIGlmIChhY3R1YWwgPT09IGV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIHRydWU7XG5cbiAgfSBlbHNlIGlmIChhY3R1YWwgaW5zdGFuY2VvZiBEYXRlICYmIGV4cGVjdGVkIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBhY3R1YWwuZ2V0VGltZSgpID09PSBleHBlY3RlZC5nZXRUaW1lKCk7XG5cbiAgLy8gNy4zLiBPdGhlciBwYWlycyB0aGF0IGRvIG5vdCBib3RoIHBhc3MgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnLFxuICAvLyBlcXVpdmFsZW5jZSBpcyBkZXRlcm1pbmVkIGJ5ID09LlxuICB9IGVsc2UgaWYgKCFhY3R1YWwgfHwgIWV4cGVjdGVkIHx8IHR5cGVvZiBhY3R1YWwgIT0gJ29iamVjdCcgJiYgdHlwZW9mIGV4cGVjdGVkICE9ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG9wdHMuc3RyaWN0ID8gYWN0dWFsID09PSBleHBlY3RlZCA6IGFjdHVhbCA9PSBleHBlY3RlZDtcblxuICAvLyA3LjQuIEZvciBhbGwgb3RoZXIgT2JqZWN0IHBhaXJzLCBpbmNsdWRpbmcgQXJyYXkgb2JqZWN0cywgZXF1aXZhbGVuY2UgaXNcbiAgLy8gZGV0ZXJtaW5lZCBieSBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGFzIHZlcmlmaWVkXG4gIC8vIHdpdGggT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKSwgdGhlIHNhbWUgc2V0IG9mIGtleXNcbiAgLy8gKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksIGVxdWl2YWxlbnQgdmFsdWVzIGZvciBldmVyeVxuICAvLyBjb3JyZXNwb25kaW5nIGtleSwgYW5kIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS4gTm90ZTogdGhpc1xuICAvLyBhY2NvdW50cyBmb3IgYm90aCBuYW1lZCBhbmQgaW5kZXhlZCBwcm9wZXJ0aWVzIG9uIEFycmF5cy5cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gb2JqRXF1aXYoYWN0dWFsLCBleHBlY3RlZCwgb3B0cyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNVbmRlZmluZWRPck51bGwodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGlzQnVmZmVyICh4KSB7XG4gIGlmICgheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcgfHwgdHlwZW9mIHgubGVuZ3RoICE9PSAnbnVtYmVyJykgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIHguY29weSAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgeC5zbGljZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoeC5sZW5ndGggPiAwICYmIHR5cGVvZiB4WzBdICE9PSAnbnVtYmVyJykgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gb2JqRXF1aXYoYSwgYiwgb3B0cykge1xuICB2YXIgaSwga2V5O1xuICBpZiAoaXNVbmRlZmluZWRPck51bGwoYSkgfHwgaXNVbmRlZmluZWRPck51bGwoYikpXG4gICAgcmV0dXJuIGZhbHNlO1xuICAvLyBhbiBpZGVudGljYWwgJ3Byb3RvdHlwZScgcHJvcGVydHkuXG4gIGlmIChhLnByb3RvdHlwZSAhPT0gYi5wcm90b3R5cGUpIHJldHVybiBmYWxzZTtcbiAgLy9+fn5JJ3ZlIG1hbmFnZWQgdG8gYnJlYWsgT2JqZWN0LmtleXMgdGhyb3VnaCBzY3Jld3kgYXJndW1lbnRzIHBhc3NpbmcuXG4gIC8vICAgQ29udmVydGluZyB0byBhcnJheSBzb2x2ZXMgdGhlIHByb2JsZW0uXG4gIGlmIChpc0FyZ3VtZW50cyhhKSkge1xuICAgIGlmICghaXNBcmd1bWVudHMoYikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgYSA9IHBTbGljZS5jYWxsKGEpO1xuICAgIGIgPSBwU2xpY2UuY2FsbChiKTtcbiAgICByZXR1cm4gZGVlcEVxdWFsKGEsIGIsIG9wdHMpO1xuICB9XG4gIGlmIChpc0J1ZmZlcihhKSkge1xuICAgIGlmICghaXNCdWZmZXIoYikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoYVtpXSAhPT0gYltpXSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB0cnkge1xuICAgIHZhciBrYSA9IG9iamVjdEtleXMoYSksXG4gICAgICAgIGtiID0gb2JqZWN0S2V5cyhiKTtcbiAgfSBjYXRjaCAoZSkgey8vaGFwcGVucyB3aGVuIG9uZSBpcyBhIHN0cmluZyBsaXRlcmFsIGFuZCB0aGUgb3RoZXIgaXNuJ3RcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gaGF2aW5nIHRoZSBzYW1lIG51bWJlciBvZiBvd25lZCBwcm9wZXJ0aWVzIChrZXlzIGluY29ycG9yYXRlc1xuICAvLyBoYXNPd25Qcm9wZXJ0eSlcbiAgaWYgKGthLmxlbmd0aCAhPSBrYi5sZW5ndGgpXG4gICAgcmV0dXJuIGZhbHNlO1xuICAvL3RoZSBzYW1lIHNldCBvZiBrZXlzIChhbHRob3VnaCBub3QgbmVjZXNzYXJpbHkgdGhlIHNhbWUgb3JkZXIpLFxuICBrYS5zb3J0KCk7XG4gIGtiLnNvcnQoKTtcbiAgLy9+fn5jaGVhcCBrZXkgdGVzdFxuICBmb3IgKGkgPSBrYS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGlmIChrYVtpXSAhPSBrYltpXSlcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvL2VxdWl2YWxlbnQgdmFsdWVzIGZvciBldmVyeSBjb3JyZXNwb25kaW5nIGtleSwgYW5kXG4gIC8vfn5+cG9zc2libHkgZXhwZW5zaXZlIGRlZXAgdGVzdFxuICBmb3IgKGkgPSBrYS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGtleSA9IGthW2ldO1xuICAgIGlmICghZGVlcEVxdWFsKGFba2V5XSwgYltrZXldLCBvcHRzKSkgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0eXBlb2YgYSA9PT0gdHlwZW9mIGI7XG59XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgT2JqZWN0LmtleXMgPT09ICdmdW5jdGlvbidcbiAgPyBPYmplY3Qua2V5cyA6IHNoaW07XG5cbmV4cG9ydHMuc2hpbSA9IHNoaW07XG5mdW5jdGlvbiBzaGltIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikga2V5cy5wdXNoKGtleSk7XG4gIHJldHVybiBrZXlzO1xufVxuIiwidmFyIHN1cHBvcnRzQXJndW1lbnRzQ2xhc3MgPSAoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudHMpXG59KSgpID09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBzdXBwb3J0c0FyZ3VtZW50c0NsYXNzID8gc3VwcG9ydGVkIDogdW5zdXBwb3J0ZWQ7XG5cbmV4cG9ydHMuc3VwcG9ydGVkID0gc3VwcG9ydGVkO1xuZnVuY3Rpb24gc3VwcG9ydGVkKG9iamVjdCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iamVjdCkgPT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG59O1xuXG5leHBvcnRzLnVuc3VwcG9ydGVkID0gdW5zdXBwb3J0ZWQ7XG5mdW5jdGlvbiB1bnN1cHBvcnRlZChvYmplY3Qpe1xuICByZXR1cm4gb2JqZWN0ICYmXG4gICAgdHlwZW9mIG9iamVjdCA9PSAnb2JqZWN0JyAmJlxuICAgIHR5cGVvZiBvYmplY3QubGVuZ3RoID09ICdudW1iZXInICYmXG4gICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgJ2NhbGxlZScpICYmXG4gICAgIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmplY3QsICdjYWxsZWUnKSB8fFxuICAgIGZhbHNlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9DU1NUcmFuc2l0aW9uR3JvdXAgPSByZXF1aXJlKCcuL0NTU1RyYW5zaXRpb25Hcm91cCcpO1xuXG52YXIgX0NTU1RyYW5zaXRpb25Hcm91cDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DU1NUcmFuc2l0aW9uR3JvdXApO1xuXG52YXIgX1RyYW5zaXRpb25Hcm91cCA9IHJlcXVpcmUoJy4vVHJhbnNpdGlvbkdyb3VwJyk7XG5cbnZhciBfVHJhbnNpdGlvbkdyb3VwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1RyYW5zaXRpb25Hcm91cCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBUcmFuc2l0aW9uR3JvdXA6IF9UcmFuc2l0aW9uR3JvdXAyLmRlZmF1bHQsXG4gIENTU1RyYW5zaXRpb25Hcm91cDogX0NTU1RyYW5zaXRpb25Hcm91cDIuZGVmYXVsdFxufTsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfVHJhbnNpdGlvbkdyb3VwID0gcmVxdWlyZSgnLi9UcmFuc2l0aW9uR3JvdXAnKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVHJhbnNpdGlvbkdyb3VwKTtcblxudmFyIF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCA9IHJlcXVpcmUoJy4vQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQnKTtcblxudmFyIF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCk7XG5cbnZhciBfUHJvcFR5cGVzID0gcmVxdWlyZSgnLi91dGlscy9Qcm9wVHlwZXMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICB0cmFuc2l0aW9uTmFtZTogX1Byb3BUeXBlcy5uYW1lU2hhcGUuaXNSZXF1aXJlZCxcblxuICB0cmFuc2l0aW9uQXBwZWFyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHRyYW5zaXRpb25FbnRlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICB0cmFuc2l0aW9uTGVhdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgdHJhbnNpdGlvbkFwcGVhclRpbWVvdXQ6ICgwLCBfUHJvcFR5cGVzLnRyYW5zaXRpb25UaW1lb3V0KSgnQXBwZWFyJyksXG4gIHRyYW5zaXRpb25FbnRlclRpbWVvdXQ6ICgwLCBfUHJvcFR5cGVzLnRyYW5zaXRpb25UaW1lb3V0KSgnRW50ZXInKSxcbiAgdHJhbnNpdGlvbkxlYXZlVGltZW91dDogKDAsIF9Qcm9wVHlwZXMudHJhbnNpdGlvblRpbWVvdXQpKCdMZWF2ZScpXG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0cmFuc2l0aW9uQXBwZWFyOiBmYWxzZSxcbiAgdHJhbnNpdGlvbkVudGVyOiB0cnVlLFxuICB0cmFuc2l0aW9uTGVhdmU6IHRydWVcbn07XG5cbnZhciBDU1NUcmFuc2l0aW9uR3JvdXAgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ1NTVHJhbnNpdGlvbkdyb3VwLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBDU1NUcmFuc2l0aW9uR3JvdXAoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDU1NUcmFuc2l0aW9uR3JvdXApO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLl93cmFwQ2hpbGQgPSBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQyLmRlZmF1bHQsIHtcbiAgICAgICAgbmFtZTogX3RoaXMucHJvcHMudHJhbnNpdGlvbk5hbWUsXG4gICAgICAgIGFwcGVhcjogX3RoaXMucHJvcHMudHJhbnNpdGlvbkFwcGVhcixcbiAgICAgICAgZW50ZXI6IF90aGlzLnByb3BzLnRyYW5zaXRpb25FbnRlcixcbiAgICAgICAgbGVhdmU6IF90aGlzLnByb3BzLnRyYW5zaXRpb25MZWF2ZSxcbiAgICAgICAgYXBwZWFyVGltZW91dDogX3RoaXMucHJvcHMudHJhbnNpdGlvbkFwcGVhclRpbWVvdXQsXG4gICAgICAgIGVudGVyVGltZW91dDogX3RoaXMucHJvcHMudHJhbnNpdGlvbkVudGVyVGltZW91dCxcbiAgICAgICAgbGVhdmVUaW1lb3V0OiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uTGVhdmVUaW1lb3V0XG4gICAgICB9LCBjaGlsZCk7XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICAvLyBXZSBuZWVkIHRvIHByb3ZpZGUgdGhpcyBjaGlsZEZhY3Rvcnkgc28gdGhhdFxuICAvLyBSZWFjdENTU1RyYW5zaXRpb25Hcm91cENoaWxkIGNhbiByZWNlaXZlIHVwZGF0ZXMgdG8gbmFtZSwgZW50ZXIsIGFuZFxuICAvLyBsZWF2ZSB3aGlsZSBpdCBpcyBsZWF2aW5nLlxuXG5cbiAgQ1NTVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UcmFuc2l0aW9uR3JvdXAyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7IGNoaWxkRmFjdG9yeTogdGhpcy5fd3JhcENoaWxkIH0pKTtcbiAgfTtcblxuICByZXR1cm4gQ1NTVHJhbnNpdGlvbkdyb3VwO1xufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcblxuQ1NTVHJhbnNpdGlvbkdyb3VwLmRpc3BsYXlOYW1lID0gJ0NTU1RyYW5zaXRpb25Hcm91cCc7XG5cblxuQ1NTVHJhbnNpdGlvbkdyb3VwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHByb3BUeXBlcyA6IHt9O1xuQ1NTVHJhbnNpdGlvbkdyb3VwLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ1NTVHJhbnNpdGlvbkdyb3VwO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNoYWluKCl7XG4gIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gIHZhciBhcmdzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKylcbiAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldXG5cbiAgYXJncyA9IGFyZ3MuZmlsdGVyKGZ1bmN0aW9uKGZuKXsgcmV0dXJuIGZuICE9IG51bGwgfSlcblxuICBpZiAoYXJncy5sZW5ndGggPT09IDApIHJldHVybiB1bmRlZmluZWRcbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxKSByZXR1cm4gYXJnc1swXVxuXG4gIHJldHVybiBhcmdzLnJlZHVjZShmdW5jdGlvbihjdXJyZW50LCBuZXh0KXtcbiAgICByZXR1cm4gZnVuY3Rpb24gY2hhaW5lZEZ1bmN0aW9uKCkge1xuICAgICAgY3VycmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgbmV4dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH0pXG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZ2V0Q2hpbGRNYXBwaW5nID0gZ2V0Q2hpbGRNYXBwaW5nO1xuZXhwb3J0cy5tZXJnZUNoaWxkTWFwcGluZ3MgPSBtZXJnZUNoaWxkTWFwcGluZ3M7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG4vKipcbiAqIEdpdmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYCwgcmV0dXJuIGFuIG9iamVjdCBtYXBwaW5nIGtleSB0byBjaGlsZC5cbiAqXG4gKiBAcGFyYW0geyp9IGNoaWxkcmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYFxuICogQHJldHVybiB7b2JqZWN0fSBNYXBwaW5nIG9mIGtleSB0byBjaGlsZFxuICovXG5mdW5jdGlvbiBnZXRDaGlsZE1hcHBpbmcoY2hpbGRyZW4pIHtcbiAgaWYgKCFjaGlsZHJlbikge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuICB2YXIgcmVzdWx0ID0ge307XG4gIF9yZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZDtcbiAgfSkuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICByZXN1bHRbY2hpbGQua2V5XSA9IGNoaWxkO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBXaGVuIHlvdSdyZSBhZGRpbmcgb3IgcmVtb3ZpbmcgY2hpbGRyZW4gc29tZSBtYXkgYmUgYWRkZWQgb3IgcmVtb3ZlZCBpbiB0aGVcbiAqIHNhbWUgcmVuZGVyIHBhc3MuIFdlIHdhbnQgdG8gc2hvdyAqYm90aCogc2luY2Ugd2Ugd2FudCB0byBzaW11bHRhbmVvdXNseVxuICogYW5pbWF0ZSBlbGVtZW50cyBpbiBhbmQgb3V0LiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgcHJldmlvdXMgc2V0IG9mIGtleXNcbiAqIGFuZCBhIG5ldyBzZXQgb2Yga2V5cyBhbmQgbWVyZ2VzIHRoZW0gd2l0aCBpdHMgYmVzdCBndWVzcyBvZiB0aGUgY29ycmVjdFxuICogb3JkZXJpbmcuIEluIHRoZSBmdXR1cmUgd2UgbWF5IGV4cG9zZSBzb21lIG9mIHRoZSB1dGlsaXRpZXMgaW5cbiAqIFJlYWN0TXVsdGlDaGlsZCB0byBtYWtlIHRoaXMgZWFzeSwgYnV0IGZvciBub3cgUmVhY3QgaXRzZWxmIGRvZXMgbm90XG4gKiBkaXJlY3RseSBoYXZlIHRoaXMgY29uY2VwdCBvZiB0aGUgdW5pb24gb2YgcHJldkNoaWxkcmVuIGFuZCBuZXh0Q2hpbGRyZW5cbiAqIHNvIHdlIGltcGxlbWVudCBpdCBoZXJlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2IHByZXYgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcGFyYW0ge29iamVjdH0gbmV4dCBuZXh0IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHJldHVybiB7b2JqZWN0fSBhIGtleSBzZXQgdGhhdCBjb250YWlucyBhbGwga2V5cyBpbiBgcHJldmAgYW5kIGFsbCBrZXlzXG4gKiBpbiBgbmV4dGAgaW4gYSByZWFzb25hYmxlIG9yZGVyLlxuICovXG5mdW5jdGlvbiBtZXJnZUNoaWxkTWFwcGluZ3MocHJldiwgbmV4dCkge1xuICBwcmV2ID0gcHJldiB8fCB7fTtcbiAgbmV4dCA9IG5leHQgfHwge307XG5cbiAgZnVuY3Rpb24gZ2V0VmFsdWVGb3JLZXkoa2V5KSB7XG4gICAgaWYgKG5leHQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIG5leHRba2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJldltrZXldO1xuICB9XG5cbiAgLy8gRm9yIGVhY2gga2V5IG9mIGBuZXh0YCwgdGhlIGxpc3Qgb2Yga2V5cyB0byBpbnNlcnQgYmVmb3JlIHRoYXQga2V5IGluXG4gIC8vIHRoZSBjb21iaW5lZCBsaXN0XG4gIHZhciBuZXh0S2V5c1BlbmRpbmcgPSB7fTtcblxuICB2YXIgcGVuZGluZ0tleXMgPSBbXTtcbiAgZm9yICh2YXIgcHJldktleSBpbiBwcmV2KSB7XG4gICAgaWYgKG5leHQuaGFzT3duUHJvcGVydHkocHJldktleSkpIHtcbiAgICAgIGlmIChwZW5kaW5nS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgbmV4dEtleXNQZW5kaW5nW3ByZXZLZXldID0gcGVuZGluZ0tleXM7XG4gICAgICAgIHBlbmRpbmdLZXlzID0gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBlbmRpbmdLZXlzLnB1c2gocHJldktleSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGkgPSB2b2lkIDA7XG4gIHZhciBjaGlsZE1hcHBpbmcgPSB7fTtcbiAgZm9yICh2YXIgbmV4dEtleSBpbiBuZXh0KSB7XG4gICAgaWYgKG5leHRLZXlzUGVuZGluZy5oYXNPd25Qcm9wZXJ0eShuZXh0S2V5KSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGVuZGluZ05leHRLZXkgPSBuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV07XG4gICAgICAgIGNoaWxkTWFwcGluZ1tuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ05leHRLZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBjaGlsZE1hcHBpbmdbbmV4dEtleV0gPSBnZXRWYWx1ZUZvcktleShuZXh0S2V5KTtcbiAgfVxuXG4gIC8vIEZpbmFsbHksIGFkZCB0aGUga2V5cyB3aGljaCBkaWRuJ3QgYXBwZWFyIGJlZm9yZSBhbnkga2V5IGluIGBuZXh0YFxuICBmb3IgKGkgPSAwOyBpIDwgcGVuZGluZ0tleXMubGVuZ3RoOyBpKyspIHtcbiAgICBjaGlsZE1hcHBpbmdbcGVuZGluZ0tleXNbaV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ0tleXNbaV0pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkTWFwcGluZztcbn0iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfYWRkQ2xhc3MgPSByZXF1aXJlKCdkb20taGVscGVycy9jbGFzcy9hZGRDbGFzcycpO1xuXG52YXIgX2FkZENsYXNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FkZENsYXNzKTtcblxudmFyIF9yZW1vdmVDbGFzcyA9IHJlcXVpcmUoJ2RvbS1oZWxwZXJzL2NsYXNzL3JlbW92ZUNsYXNzJyk7XG5cbnZhciBfcmVtb3ZlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVtb3ZlQ2xhc3MpO1xuXG52YXIgX3JlcXVlc3RBbmltYXRpb25GcmFtZSA9IHJlcXVpcmUoJ2RvbS1oZWxwZXJzL3V0aWwvcmVxdWVzdEFuaW1hdGlvbkZyYW1lJyk7XG5cbnZhciBfcmVxdWVzdEFuaW1hdGlvbkZyYW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlcXVlc3RBbmltYXRpb25GcmFtZSk7XG5cbnZhciBfcHJvcGVydGllcyA9IHJlcXVpcmUoJ2RvbS1oZWxwZXJzL3RyYW5zaXRpb24vcHJvcGVydGllcycpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0RG9tID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5cbnZhciBfUHJvcFR5cGVzID0gcmVxdWlyZSgnLi91dGlscy9Qcm9wVHlwZXMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgZXZlbnRzID0gW107XG5pZiAoX3Byb3BlcnRpZXMudHJhbnNpdGlvbkVuZCkgZXZlbnRzLnB1c2goX3Byb3BlcnRpZXMudHJhbnNpdGlvbkVuZCk7XG5pZiAoX3Byb3BlcnRpZXMuYW5pbWF0aW9uRW5kKSBldmVudHMucHVzaChfcHJvcGVydGllcy5hbmltYXRpb25FbmQpO1xuXG5mdW5jdGlvbiBhZGRFbmRMaXN0ZW5lcihub2RlLCBsaXN0ZW5lcikge1xuICBpZiAoZXZlbnRzLmxlbmd0aCkge1xuICAgIGV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gbm9kZS5hZGRFdmVudExpc3RlbmVyKGUsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc2V0VGltZW91dChsaXN0ZW5lciwgMCk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmICghZXZlbnRzLmxlbmd0aCkgcmV0dXJuO1xuICAgIGV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGUsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSk7XG4gIH07XG59XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm5vZGUsXG4gIG5hbWU6IF9Qcm9wVHlwZXMubmFtZVNoYXBlLmlzUmVxdWlyZWQsXG5cbiAgLy8gT25jZSB3ZSByZXF1aXJlIHRpbWVvdXRzIHRvIGJlIHNwZWNpZmllZCwgd2UgY2FuIHJlbW92ZSB0aGVcbiAgLy8gYm9vbGVhbiBmbGFncyAoYXBwZWFyIGV0Yy4pIGFuZCBqdXN0IGFjY2VwdCBhIG51bWJlclxuICAvLyBvciBhIGJvb2wgZm9yIHRoZSB0aW1lb3V0IGZsYWdzIChhcHBlYXJUaW1lb3V0IGV0Yy4pXG4gIGFwcGVhcjogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBlbnRlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBsZWF2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBhcHBlYXJUaW1lb3V0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcixcbiAgZW50ZXJUaW1lb3V0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcixcbiAgbGVhdmVUaW1lb3V0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlclxufTtcblxudmFyIENTU1RyYW5zaXRpb25Hcm91cENoaWxkID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENTU1RyYW5zaXRpb25Hcm91cENoaWxkLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENTU1RyYW5zaXRpb25Hcm91cENoaWxkKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5jb21wb25lbnRXaWxsQXBwZWFyID0gZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5hcHBlYXIpIHtcbiAgICAgICAgX3RoaXMudHJhbnNpdGlvbignYXBwZWFyJywgZG9uZSwgX3RoaXMucHJvcHMuYXBwZWFyVGltZW91dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkb25lKCk7XG4gICAgICB9XG4gICAgfSwgX3RoaXMuY29tcG9uZW50V2lsbEVudGVyID0gZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5lbnRlcikge1xuICAgICAgICBfdGhpcy50cmFuc2l0aW9uKCdlbnRlcicsIGRvbmUsIF90aGlzLnByb3BzLmVudGVyVGltZW91dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkb25lKCk7XG4gICAgICB9XG4gICAgfSwgX3RoaXMuY29tcG9uZW50V2lsbExlYXZlID0gZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5sZWF2ZSkge1xuICAgICAgICBfdGhpcy50cmFuc2l0aW9uKCdsZWF2ZScsIGRvbmUsIF90aGlzLnByb3BzLmxlYXZlVGltZW91dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkb25lKCk7XG4gICAgICB9XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHRoaXMuY2xhc3NOYW1lQW5kTm9kZVF1ZXVlID0gW107XG4gICAgdGhpcy50cmFuc2l0aW9uVGltZW91dHMgPSBbXTtcbiAgfTtcblxuICBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnVubW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy50aW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KTtcbiAgICB9XG4gICAgdGhpcy50cmFuc2l0aW9uVGltZW91dHMuZm9yRWFjaChmdW5jdGlvbiAodGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5jbGFzc05hbWVBbmROb2RlUXVldWUubGVuZ3RoID0gMDtcbiAgfTtcblxuICBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZC5wcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uIHRyYW5zaXRpb24oYW5pbWF0aW9uVHlwZSwgZmluaXNoQ2FsbGJhY2ssIHRpbWVvdXQpIHtcbiAgICB2YXIgbm9kZSA9ICgwLCBfcmVhY3REb20uZmluZERPTU5vZGUpKHRoaXMpO1xuXG4gICAgaWYgKCFub2RlKSB7XG4gICAgICBpZiAoZmluaXNoQ2FsbGJhY2spIHtcbiAgICAgICAgZmluaXNoQ2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgY2xhc3NOYW1lID0gdGhpcy5wcm9wcy5uYW1lW2FuaW1hdGlvblR5cGVdIHx8IHRoaXMucHJvcHMubmFtZSArICctJyArIGFuaW1hdGlvblR5cGU7XG4gICAgdmFyIGFjdGl2ZUNsYXNzTmFtZSA9IHRoaXMucHJvcHMubmFtZVthbmltYXRpb25UeXBlICsgJ0FjdGl2ZSddIHx8IGNsYXNzTmFtZSArICctYWN0aXZlJztcbiAgICB2YXIgdGltZXIgPSBudWxsO1xuICAgIHZhciByZW1vdmVMaXN0ZW5lcnMgPSB2b2lkIDA7XG5cbiAgICAoMCwgX2FkZENsYXNzMi5kZWZhdWx0KShub2RlLCBjbGFzc05hbWUpO1xuXG4gICAgLy8gTmVlZCB0byBkbyB0aGlzIHRvIGFjdHVhbGx5IHRyaWdnZXIgYSB0cmFuc2l0aW9uLlxuICAgIHRoaXMucXVldWVDbGFzc0FuZE5vZGUoYWN0aXZlQ2xhc3NOYW1lLCBub2RlKTtcblxuICAgIC8vIENsZWFuLXVwIHRoZSBhbmltYXRpb24gYWZ0ZXIgdGhlIHNwZWNpZmllZCBkZWxheVxuICAgIHZhciBmaW5pc2ggPSBmdW5jdGlvbiBmaW5pc2goZSkge1xuICAgICAgaWYgKGUgJiYgZS50YXJnZXQgIT09IG5vZGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgaWYgKHJlbW92ZUxpc3RlbmVycykgcmVtb3ZlTGlzdGVuZXJzKCk7XG5cbiAgICAgICgwLCBfcmVtb3ZlQ2xhc3MyLmRlZmF1bHQpKG5vZGUsIGNsYXNzTmFtZSk7XG4gICAgICAoMCwgX3JlbW92ZUNsYXNzMi5kZWZhdWx0KShub2RlLCBhY3RpdmVDbGFzc05hbWUpO1xuXG4gICAgICBpZiAocmVtb3ZlTGlzdGVuZXJzKSByZW1vdmVMaXN0ZW5lcnMoKTtcblxuICAgICAgLy8gVXN1YWxseSB0aGlzIG9wdGlvbmFsIGNhbGxiYWNrIGlzIHVzZWQgZm9yIGluZm9ybWluZyBhbiBvd25lciBvZlxuICAgICAgLy8gYSBsZWF2ZSBhbmltYXRpb24gYW5kIHRlbGxpbmcgaXQgdG8gcmVtb3ZlIHRoZSBjaGlsZC5cbiAgICAgIGlmIChmaW5pc2hDYWxsYmFjaykge1xuICAgICAgICBmaW5pc2hDYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAodGltZW91dCkge1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZpbmlzaCwgdGltZW91dCk7XG4gICAgICB0aGlzLnRyYW5zaXRpb25UaW1lb3V0cy5wdXNoKHRpbWVyKTtcbiAgICB9IGVsc2UgaWYgKF9wcm9wZXJ0aWVzLnRyYW5zaXRpb25FbmQpIHtcbiAgICAgIHJlbW92ZUxpc3RlbmVycyA9IGFkZEVuZExpc3RlbmVyKG5vZGUsIGZpbmlzaCk7XG4gICAgfVxuICB9O1xuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS5xdWV1ZUNsYXNzQW5kTm9kZSA9IGZ1bmN0aW9uIHF1ZXVlQ2xhc3NBbmROb2RlKGNsYXNzTmFtZSwgbm9kZSkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdGhpcy5jbGFzc05hbWVBbmROb2RlUXVldWUucHVzaCh7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIG5vZGU6IG5vZGVcbiAgICB9KTtcblxuICAgIGlmICghdGhpcy5yYWZIYW5kbGUpIHtcbiAgICAgIHRoaXMucmFmSGFuZGxlID0gKDAsIF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUyLmRlZmF1bHQpKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5mbHVzaENsYXNzTmFtZUFuZE5vZGVRdWV1ZSgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIENTU1RyYW5zaXRpb25Hcm91cENoaWxkLnByb3RvdHlwZS5mbHVzaENsYXNzTmFtZUFuZE5vZGVRdWV1ZSA9IGZ1bmN0aW9uIGZsdXNoQ2xhc3NOYW1lQW5kTm9kZVF1ZXVlKCkge1xuICAgIGlmICghdGhpcy51bm1vdW50ZWQpIHtcbiAgICAgIHRoaXMuY2xhc3NOYW1lQW5kTm9kZVF1ZXVlLmZvckVhY2goZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAvLyBUaGlzIGlzIGZvciB0byBmb3JjZSBhIHJlcGFpbnQsXG4gICAgICAgIC8vIHdoaWNoIGlzIG5lY2Vzc2FyeSBpbiBvcmRlciB0byB0cmFuc2l0aW9uIHN0eWxlcyB3aGVuIGFkZGluZyBhIGNsYXNzIG5hbWUuXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC1leHByZXNzaW9ucyAqL1xuICAgICAgICBvYmoubm9kZS5zY3JvbGxUb3A7XG4gICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLWV4cHJlc3Npb25zICovXG4gICAgICAgICgwLCBfYWRkQ2xhc3MyLmRlZmF1bHQpKG9iai5ub2RlLCBvYmouY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB0aGlzLmNsYXNzTmFtZUFuZE5vZGVRdWV1ZS5sZW5ndGggPSAwO1xuICAgIHRoaXMucmFmSGFuZGxlID0gbnVsbDtcbiAgfTtcblxuICBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLnByb3BzKTtcbiAgICBkZWxldGUgcHJvcHMubmFtZTtcbiAgICBkZWxldGUgcHJvcHMuYXBwZWFyO1xuICAgIGRlbGV0ZSBwcm9wcy5lbnRlcjtcbiAgICBkZWxldGUgcHJvcHMubGVhdmU7XG4gICAgZGVsZXRlIHByb3BzLmFwcGVhclRpbWVvdXQ7XG4gICAgZGVsZXRlIHByb3BzLmVudGVyVGltZW91dDtcbiAgICBkZWxldGUgcHJvcHMubGVhdmVUaW1lb3V0O1xuICAgIGRlbGV0ZSBwcm9wcy5jaGlsZHJlbjtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNsb25lRWxlbWVudChfcmVhY3QyLmRlZmF1bHQuQ2hpbGRyZW4ub25seSh0aGlzLnByb3BzLmNoaWxkcmVuKSwgcHJvcHMpO1xuICB9O1xuXG4gIHJldHVybiBDU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDtcbn0oX3JlYWN0Mi5kZWZhdWx0LkNvbXBvbmVudCk7XG5cbkNTU1RyYW5zaXRpb25Hcm91cENoaWxkLmRpc3BsYXlOYW1lID0gJ0NTU1RyYW5zaXRpb25Hcm91cENoaWxkJztcblxuXG5DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZC5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBwcm9wVHlwZXMgOiB7fTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGRDbGFzcztcblxudmFyIF9oYXNDbGFzcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGFzQ2xhc3NcIikpO1xuXG5mdW5jdGlvbiBhZGRDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSBlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtlbHNlIGlmICghKDAsIF9oYXNDbGFzcy5kZWZhdWx0KShlbGVtZW50LCBjbGFzc05hbWUpKSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArICcgJyArIGNsYXNzTmFtZTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIChlbGVtZW50LmNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTmFtZS5iYXNlVmFsIHx8ICcnKSArICcgJyArIGNsYXNzTmFtZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBoYXNDbGFzcztcblxuZnVuY3Rpb24gaGFzQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkgcmV0dXJuICEhY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7ZWxzZSByZXR1cm4gKFwiIFwiICsgKGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgZWxlbWVudC5jbGFzc05hbWUpICsgXCIgXCIpLmluZGV4T2YoXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIikgIT09IC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gcmVwbGFjZUNsYXNzTmFtZShvcmlnQ2xhc3MsIGNsYXNzVG9SZW1vdmUpIHtcbiAgcmV0dXJuIG9yaWdDbGFzcy5yZXBsYWNlKG5ldyBSZWdFeHAoJyhefFxcXFxzKScgKyBjbGFzc1RvUmVtb3ZlICsgJyg/OlxcXFxzfCQpJywgJ2cnKSwgJyQxJykucmVwbGFjZSgvXFxzKy9nLCAnICcpLnJlcGxhY2UoL15cXHMqfFxccyokL2csICcnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtlbHNlIGlmICh0eXBlb2YgZWxlbWVudC5jbGFzc05hbWUgPT09ICdzdHJpbmcnKSBlbGVtZW50LmNsYXNzTmFtZSA9IHJlcGxhY2VDbGFzc05hbWUoZWxlbWVudC5jbGFzc05hbWUsIGNsYXNzTmFtZSk7ZWxzZSBlbGVtZW50LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCByZXBsYWNlQ2xhc3NOYW1lKGVsZW1lbnQuY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgJycsIGNsYXNzTmFtZSkpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfaW5ET00gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2luRE9NXCIpKTtcblxudmFyIHZlbmRvcnMgPSBbJycsICd3ZWJraXQnLCAnbW96JywgJ28nLCAnbXMnXTtcbnZhciBjYW5jZWwgPSAnY2xlYXJUaW1lb3V0JztcbnZhciByYWYgPSBmYWxsYmFjaztcbnZhciBjb21wYXRSYWY7XG5cbnZhciBnZXRLZXkgPSBmdW5jdGlvbiBnZXRLZXkodmVuZG9yLCBrKSB7XG4gIHJldHVybiB2ZW5kb3IgKyAoIXZlbmRvciA/IGsgOiBrWzBdLnRvVXBwZXJDYXNlKCkgKyBrLnN1YnN0cigxKSkgKyAnQW5pbWF0aW9uRnJhbWUnO1xufTtcblxuaWYgKF9pbkRPTS5kZWZhdWx0KSB7XG4gIHZlbmRvcnMuc29tZShmdW5jdGlvbiAodmVuZG9yKSB7XG4gICAgdmFyIHJhZktleSA9IGdldEtleSh2ZW5kb3IsICdyZXF1ZXN0Jyk7XG5cbiAgICBpZiAocmFmS2V5IGluIHdpbmRvdykge1xuICAgICAgY2FuY2VsID0gZ2V0S2V5KHZlbmRvciwgJ2NhbmNlbCcpO1xuICAgICAgcmV0dXJuIHJhZiA9IGZ1bmN0aW9uIHJhZihjYikge1xuICAgICAgICByZXR1cm4gd2luZG93W3JhZktleV0oY2IpO1xuICAgICAgfTtcbiAgICB9XG4gIH0pO1xufVxuLyogaHR0cHM6Ly9naXRodWIuY29tL2NvbXBvbmVudC9yYWYgKi9cblxuXG52YXIgcHJldiA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuXG5mdW5jdGlvbiBmYWxsYmFjayhmbikge1xuICB2YXIgY3VyciA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgbXMgPSBNYXRoLm1heCgwLCAxNiAtIChjdXJyIC0gcHJldikpLFxuICAgICAgcmVxID0gc2V0VGltZW91dChmbiwgbXMpO1xuICBwcmV2ID0gY3VycjtcbiAgcmV0dXJuIHJlcTtcbn1cblxuY29tcGF0UmFmID0gZnVuY3Rpb24gY29tcGF0UmFmKGNiKSB7XG4gIHJldHVybiByYWYoY2IpO1xufTtcblxuY29tcGF0UmFmLmNhbmNlbCA9IGZ1bmN0aW9uIChpZCkge1xuICB3aW5kb3dbY2FuY2VsXSAmJiB0eXBlb2Ygd2luZG93W2NhbmNlbF0gPT09ICdmdW5jdGlvbicgJiYgd2luZG93W2NhbmNlbF0oaWQpO1xufTtcblxudmFyIF9kZWZhdWx0ID0gY29tcGF0UmFmO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuYW5pbWF0aW9uRW5kID0gZXhwb3J0cy5hbmltYXRpb25EZWxheSA9IGV4cG9ydHMuYW5pbWF0aW9uVGltaW5nID0gZXhwb3J0cy5hbmltYXRpb25EdXJhdGlvbiA9IGV4cG9ydHMuYW5pbWF0aW9uTmFtZSA9IGV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IGV4cG9ydHMudHJhbnNpdGlvbkR1cmF0aW9uID0gZXhwb3J0cy50cmFuc2l0aW9uRGVsYXkgPSBleHBvcnRzLnRyYW5zaXRpb25UaW1pbmcgPSBleHBvcnRzLnRyYW5zaXRpb25Qcm9wZXJ0eSA9IGV4cG9ydHMudHJhbnNmb3JtID0gdm9pZCAwO1xuXG52YXIgX2luRE9NID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdXRpbC9pbkRPTVwiKSk7XG5cbnZhciB0cmFuc2Zvcm0gPSAndHJhbnNmb3JtJztcbmV4cG9ydHMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xudmFyIHByZWZpeCwgdHJhbnNpdGlvbkVuZCwgYW5pbWF0aW9uRW5kO1xuZXhwb3J0cy5hbmltYXRpb25FbmQgPSBhbmltYXRpb25FbmQ7XG5leHBvcnRzLnRyYW5zaXRpb25FbmQgPSB0cmFuc2l0aW9uRW5kO1xudmFyIHRyYW5zaXRpb25Qcm9wZXJ0eSwgdHJhbnNpdGlvbkR1cmF0aW9uLCB0cmFuc2l0aW9uVGltaW5nLCB0cmFuc2l0aW9uRGVsYXk7XG5leHBvcnRzLnRyYW5zaXRpb25EZWxheSA9IHRyYW5zaXRpb25EZWxheTtcbmV4cG9ydHMudHJhbnNpdGlvblRpbWluZyA9IHRyYW5zaXRpb25UaW1pbmc7XG5leHBvcnRzLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbjtcbmV4cG9ydHMudHJhbnNpdGlvblByb3BlcnR5ID0gdHJhbnNpdGlvblByb3BlcnR5O1xudmFyIGFuaW1hdGlvbk5hbWUsIGFuaW1hdGlvbkR1cmF0aW9uLCBhbmltYXRpb25UaW1pbmcsIGFuaW1hdGlvbkRlbGF5O1xuZXhwb3J0cy5hbmltYXRpb25EZWxheSA9IGFuaW1hdGlvbkRlbGF5O1xuZXhwb3J0cy5hbmltYXRpb25UaW1pbmcgPSBhbmltYXRpb25UaW1pbmc7XG5leHBvcnRzLmFuaW1hdGlvbkR1cmF0aW9uID0gYW5pbWF0aW9uRHVyYXRpb247XG5leHBvcnRzLmFuaW1hdGlvbk5hbWUgPSBhbmltYXRpb25OYW1lO1xuXG5pZiAoX2luRE9NLmRlZmF1bHQpIHtcbiAgdmFyIF9nZXRUcmFuc2l0aW9uUHJvcGVydCA9IGdldFRyYW5zaXRpb25Qcm9wZXJ0aWVzKCk7XG5cbiAgcHJlZml4ID0gX2dldFRyYW5zaXRpb25Qcm9wZXJ0LnByZWZpeDtcbiAgZXhwb3J0cy50cmFuc2l0aW9uRW5kID0gdHJhbnNpdGlvbkVuZCA9IF9nZXRUcmFuc2l0aW9uUHJvcGVydC50cmFuc2l0aW9uRW5kO1xuICBleHBvcnRzLmFuaW1hdGlvbkVuZCA9IGFuaW1hdGlvbkVuZCA9IF9nZXRUcmFuc2l0aW9uUHJvcGVydC5hbmltYXRpb25FbmQ7XG4gIGV4cG9ydHMudHJhbnNmb3JtID0gdHJhbnNmb3JtID0gcHJlZml4ICsgXCItXCIgKyB0cmFuc2Zvcm07XG4gIGV4cG9ydHMudHJhbnNpdGlvblByb3BlcnR5ID0gdHJhbnNpdGlvblByb3BlcnR5ID0gcHJlZml4ICsgXCItdHJhbnNpdGlvbi1wcm9wZXJ0eVwiO1xuICBleHBvcnRzLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbiA9IHByZWZpeCArIFwiLXRyYW5zaXRpb24tZHVyYXRpb25cIjtcbiAgZXhwb3J0cy50cmFuc2l0aW9uRGVsYXkgPSB0cmFuc2l0aW9uRGVsYXkgPSBwcmVmaXggKyBcIi10cmFuc2l0aW9uLWRlbGF5XCI7XG4gIGV4cG9ydHMudHJhbnNpdGlvblRpbWluZyA9IHRyYW5zaXRpb25UaW1pbmcgPSBwcmVmaXggKyBcIi10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvblwiO1xuICBleHBvcnRzLmFuaW1hdGlvbk5hbWUgPSBhbmltYXRpb25OYW1lID0gcHJlZml4ICsgXCItYW5pbWF0aW9uLW5hbWVcIjtcbiAgZXhwb3J0cy5hbmltYXRpb25EdXJhdGlvbiA9IGFuaW1hdGlvbkR1cmF0aW9uID0gcHJlZml4ICsgXCItYW5pbWF0aW9uLWR1cmF0aW9uXCI7XG4gIGV4cG9ydHMuYW5pbWF0aW9uVGltaW5nID0gYW5pbWF0aW9uVGltaW5nID0gcHJlZml4ICsgXCItYW5pbWF0aW9uLWRlbGF5XCI7XG4gIGV4cG9ydHMuYW5pbWF0aW9uRGVsYXkgPSBhbmltYXRpb25EZWxheSA9IHByZWZpeCArIFwiLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb25cIjtcbn1cblxudmFyIF9kZWZhdWx0ID0ge1xuICB0cmFuc2Zvcm06IHRyYW5zZm9ybSxcbiAgZW5kOiB0cmFuc2l0aW9uRW5kLFxuICBwcm9wZXJ0eTogdHJhbnNpdGlvblByb3BlcnR5LFxuICB0aW1pbmc6IHRyYW5zaXRpb25UaW1pbmcsXG4gIGRlbGF5OiB0cmFuc2l0aW9uRGVsYXksXG4gIGR1cmF0aW9uOiB0cmFuc2l0aW9uRHVyYXRpb25cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcblxuZnVuY3Rpb24gZ2V0VHJhbnNpdGlvblByb3BlcnRpZXMoKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLnN0eWxlO1xuICB2YXIgdmVuZG9yTWFwID0ge1xuICAgIE86IGZ1bmN0aW9uIE8oZSkge1xuICAgICAgcmV0dXJuIFwib1wiICsgZS50b0xvd2VyQ2FzZSgpO1xuICAgIH0sXG4gICAgTW96OiBmdW5jdGlvbiBNb3ooZSkge1xuICAgICAgcmV0dXJuIGUudG9Mb3dlckNhc2UoKTtcbiAgICB9LFxuICAgIFdlYmtpdDogZnVuY3Rpb24gV2Via2l0KGUpIHtcbiAgICAgIHJldHVybiBcIndlYmtpdFwiICsgZTtcbiAgICB9LFxuICAgIG1zOiBmdW5jdGlvbiBtcyhlKSB7XG4gICAgICByZXR1cm4gXCJNU1wiICsgZTtcbiAgICB9XG4gIH07XG4gIHZhciB2ZW5kb3JzID0gT2JqZWN0LmtleXModmVuZG9yTWFwKTtcbiAgdmFyIHRyYW5zaXRpb25FbmQsIGFuaW1hdGlvbkVuZDtcbiAgdmFyIHByZWZpeCA9ICcnO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmVuZG9ycy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB2ZW5kb3IgPSB2ZW5kb3JzW2ldO1xuXG4gICAgaWYgKHZlbmRvciArIFwiVHJhbnNpdGlvblByb3BlcnR5XCIgaW4gc3R5bGUpIHtcbiAgICAgIHByZWZpeCA9IFwiLVwiICsgdmVuZG9yLnRvTG93ZXJDYXNlKCk7XG4gICAgICB0cmFuc2l0aW9uRW5kID0gdmVuZG9yTWFwW3ZlbmRvcl0oJ1RyYW5zaXRpb25FbmQnKTtcbiAgICAgIGFuaW1hdGlvbkVuZCA9IHZlbmRvck1hcFt2ZW5kb3JdKCdBbmltYXRpb25FbmQnKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmICghdHJhbnNpdGlvbkVuZCAmJiAndHJhbnNpdGlvblByb3BlcnR5JyBpbiBzdHlsZSkgdHJhbnNpdGlvbkVuZCA9ICd0cmFuc2l0aW9uZW5kJztcbiAgaWYgKCFhbmltYXRpb25FbmQgJiYgJ2FuaW1hdGlvbk5hbWUnIGluIHN0eWxlKSBhbmltYXRpb25FbmQgPSAnYW5pbWF0aW9uZW5kJztcbiAgc3R5bGUgPSBudWxsO1xuICByZXR1cm4ge1xuICAgIGFuaW1hdGlvbkVuZDogYW5pbWF0aW9uRW5kLFxuICAgIHRyYW5zaXRpb25FbmQ6IHRyYW5zaXRpb25FbmQsXG4gICAgcHJlZml4OiBwcmVmaXhcbiAgfTtcbn0iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi43LjBcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xudmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxyPWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7ZnVuY3Rpb24gdChhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIHI6Y2FzZSBxOmNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIHYoYSl7cmV0dXJuIHQoYSk9PT1tfWV4cG9ydHMudHlwZU9mPXQ7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO1xuZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT1yO2V4cG9ydHMuTWVtbz1xO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PXF8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW4pfTtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpfHx0KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPXY7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWt9O1xuZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cn07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1xfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1mfTtcbmV4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmNvbnN0IElucHV0U3R5bGVkID0gc3R5bGVkLmlucHV0YFxuICB3aWR0aDogMTAlO1xuICBvdXRsaW5lOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmU7XG5gO1xuXG5cbmNsYXNzIFBlcmNlbnRDb2xvcklucHV0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZ3JlZW46IDAuMDA1LFxuICAgICAgbGlnaHRHcmVlbjogMC4wMDEsXG4gICAgICB5ZWxsb3c6IDAuMDUsXG4gICAgICBvcmFuZ2U6IDAuMDEsXG4gICAgfVxuICAgIHRoaXMuY2xvbmVUcmVlID0gdGhpcy5jbG9uZVRyZWUuYmluZCh0aGlzKTtcbiAgICB0aGlzLnVwZGF0ZVRyZWUgPSB0aGlzLnVwZGF0ZVRyZWUuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNoYW5nZVRlbXBQZXJjZW50YWdlcyA9IHRoaXMuY2hhbmdlVGVtcFBlcmNlbnRhZ2VzLmJpbmQodGhpcyk7XG4gIH1cblxuICBhZGRDb2xvcih0cmVlRGF0YUFyciwgZ3JlZW4sIGxpZ2h0R3JlZW4sIHllbGxvdywgb3JhbmdlKSB7XG4gICAgbGV0IHRvdGFsVGltZSA9IHRyZWVEYXRhQXJyWzBdLnJlbmRlclRpbWU7XG4gICAgbGV0IHdvcmtUb0JlRG9uZSA9IFt0cmVlRGF0YUFyclswXV07XG4gICAgd2hpbGUgKHdvcmtUb0JlRG9uZS5sZW5ndGggPiAwKSB7XG4gICAgICBsZXQgcGVyY2VudFRpbWUgPSB3b3JrVG9CZURvbmVbMF0uaW5kaXZpZHVhbFRpbWUgLyB0b3RhbFRpbWU7XG4gICAgICBpZiAocGVyY2VudFRpbWUgPCBncmVlbikge1xuICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnIzgwYjc0YycgfSB9O1xuICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IGxpZ2h0R3JlZW4pIHtcbiAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNhMWM5NGYnIH0gfTtcbiAgICAgIH0gZWxzZSBpZiAocGVyY2VudFRpbWUgPCB5ZWxsb3cpIHtcbiAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNlNmNjMzgnIH0gfTtcbiAgICAgIH0gZWxzZSBpZiAocGVyY2VudFRpbWUgPCBvcmFuZ2UpIHtcbiAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNmNjlkMjcnIH0gfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdvcmtUb0JlRG9uZVswXS5ub2RlU3ZnU2hhcGUgPSB7IHNoYXBlOiAnZWxsaXBzZScsIHNoYXBlUHJvcHM6IHsgcng6IDIwLCByeTogMjAsIGZpbGw6ICcjZTc0ZTJjJyB9IH07XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHdvcmtUb0JlRG9uZVswXS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICB3b3JrVG9CZURvbmUucHVzaCh3b3JrVG9CZURvbmVbMF0uY2hpbGRyZW5baV0pO1xuICAgICAgfVxuICAgICAgd29ya1RvQmVEb25lLnNoaWZ0KCk7XG4gICAgfVxuICAgIHJldHVybiB0cmVlRGF0YUFycjtcbiAgfVxuXG4gIC8vZGVlcCBjbG9uZSBvZiB0cmVlIGRhdGFcbiAgY2xvbmVUcmVlKHRyZWVEYXRhQXJyKSB7XG4gICAgbGV0IG5ld1RyZWUgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRyZWVEYXRhQXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgbmV3Tm9kZSA9IHt9O1xuICAgICAgZm9yIChsZXQgayBpbiB0cmVlRGF0YUFycltpXSkge1xuICAgICAgICBpZiAodHJlZURhdGFBcnJbaV0uaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICBpZiAoayA9PT0gJ2NoaWxkcmVuJykge1xuICAgICAgICAgICAgbmV3Tm9kZVtrXSA9IHRoaXMuY2xvbmVUcmVlKHRyZWVEYXRhQXJyW2ldW2tdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3Tm9kZVtrXSA9IHRyZWVEYXRhQXJyW2ldW2tdXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBuZXdUcmVlLnB1c2gobmV3Tm9kZSk7XG4gICAgfVxuICAgIHJldHVybiBuZXdUcmVlXG4gIH1cblxuICAvL3Rha2VzIGNsb25lIG9mIHRyZWUgZGF0ZSBpbiBzdGF0ZSBvZiBBcHAsIHVwZGF0ZXMgY29sb3IgYmFzZWQgb24gdXNlciBpbnB1dCBhbmQgdXBkYXRlcyB0cmVlXG4gIHVwZGF0ZVRyZWUoKSB7XG4gICAgbGV0IGNsb25lID0gdGhpcy5jbG9uZVRyZWUodGhpcy5wcm9wcy50cmVlRGF0YSk7XG4gICAgdGhpcy5hZGRDb2xvcihjbG9uZSwgdGhpcy5zdGF0ZS5ncmVlbiwgdGhpcy5zdGF0ZS5saWdodEdyZWVuLCB0aGlzLnN0YXRlLnllbGxvdywgdGhpcy5zdGF0ZS5vcmFuZ2UpXG4gICAgdGhpcy5wcm9wcy51cGRhdGVUcmVlU3RhdGUoY2xvbmUpO1xuXG4gIH1cblxuICBjaGFuZ2VUZW1wUGVyY2VudGFnZXMoZSkge1xuICAgIGxldCB0ZW1wID0ge307XG4gICAgdGVtcFtlLnRhcmdldC5pZF0gPSBlLnRhcmdldC52YWx1ZSAvIDEwMDtcbiAgICB0aGlzLnNldFN0YXRlKHRlbXApO1xuICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdGUpO1xuICB9XG5cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxmb3JtIHN0eWxlPXt7IGJvcmRlckJvdHRvbTogJzAuNXB4IHNvbGlkICNhYmFiYWInLCBib3hTaGFkb3c6ICcwIDRweCAycHggLTJweCAjYWJhYmFiJywgcGFkZGluZ0JvdHRvbTogJzVweCcgfX0+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6ICc5OCUnLCBkaXNwbGF5OiAnaW5saW5lJywganVzdGlmeUNvbnRlbnQ6ICdsZWZ0JyB9fT5cbiAgICAgICAgICA8cD5Ob2RlIGNvbG9ycyBhcmUgZGV0ZXJtaW5lZCBieSBsb3dlc3QgaW5wdXQgcGVyY2VudGFnZSBhYm92ZSBpbmRpdmlkdWFsIHJlbmRlciB0aW1lIGRpdmlkZWQgYnkgdG90YWwgcmVuZGVyIHRpbWUgb2YgYXBwLiBOb2RlcyBhcmUgYmUgcmVkIG90aGVyd2lzZS48L3A+XG4gICAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYXJvdW5kJywgcGFkZGluZzogJzVweCd9fT5cbiAgICAgICAgICAgIDxzcGFuPjxpbnB1dCB0eXBlPVwibnVtYmVyXCIgc3RlcD1cIjAuMVwiIHN0eWxlPXt7IHdpZHRoOiAnNDVweCcsIHBhZGRpbmc6ICczcHgnIH19IHZhbHVlPXt0aGlzLnN0YXRlLmdyZWVuICogMTAwfSBwbGFjZWhvbGRlcj1cInBlcmNlbnRGb3JHcmVlblwiIGlkPSdncmVlbicgb25DaGFuZ2U9e3RoaXMuY2hhbmdlVGVtcFBlcmNlbnRhZ2VzfSAvPiU8YnIvPjxsYWJlbD5HcmVlbjwvbGFiZWw+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4+PGlucHV0IHR5cGU9XCJudW1iZXJcIiBzdGVwPVwiMC4xXCIgc3R5bGU9e3sgd2lkdGg6ICc0NXB4JywgcGFkZGluZzogJzNweCcgfX0gdmFsdWU9e3RoaXMuc3RhdGUubGlnaHRHcmVlbiAqIDEwMH0gcGxhY2Vob2xkZXI9XCJwZXJjZW50Rm9yTGlnaHRHcmVlblwiIGlkPSdsaWdodEdyZWVuJyBvbkNoYW5nZT17dGhpcy5jaGFuZ2VUZW1wUGVyY2VudGFnZXN9IC8+JTxici8+PGxhYmVsPkxpZ2h0IEdyZWVuPC9sYWJlbD48L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj48aW5wdXQgdHlwZT1cIm51bWJlclwiIHN0ZXA9XCIwLjFcIiBzdHlsZT17eyB3aWR0aDogJzQ1cHgnLCBwYWRkaW5nOiAnM3B4JyB9fSB2YWx1ZT17dGhpcy5zdGF0ZS55ZWxsb3cgKiAxMDB9IHBsYWNlaG9sZGVyPVwicGVyY2VudEZvclllbGxvd1wiIGlkPSd5ZWxsb3cnIG9uQ2hhbmdlPXt0aGlzLmNoYW5nZVRlbXBQZXJjZW50YWdlc30gLz4lPGJyLz48bGFiZWw+WWVsbG93PC9sYWJlbD48L3NwYW4+XG4gICAgICAgICAgICA8c3Bhbj48aW5wdXQgdHlwZT1cIm51bWJlclwiIHN0ZXA9XCIwLjFcIiBzdHlsZT17eyB3aWR0aDogJzQ1cHgnLCBwYWRkaW5nOiAnM3B4JyB9fSB2YWx1ZT17dGhpcy5zdGF0ZS5vcmFuZ2UgKiAxMDB9IHBsYWNlaG9sZGVyPVwicGVyY2VudEZvck9yYW5nZVwiIGlkPSdvcmFuZ2UnIG9uQ2hhbmdlPXt0aGlzLmNoYW5nZVRlbXBQZXJjZW50YWdlc30gLz4lPGJyLz48bGFiZWw+T3JhbmdlPC9sYWJlbD48L3NwYW4+XG4gICAgICAgICAgICA8aW5wdXQgc3R5bGU9e3toZWlnaHQ6ICc0MHB4Jywgd2lkdGg6ICc2MHB4J319IHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLnVwZGF0ZVRyZWV9IHZhbHVlPVwiU3VibWl0XCI+PC9pbnB1dD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBlcmNlbnRDb2xvcklucHV0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUcmVlIGZyb20gJ3JlYWN0LWQzLXRyZWUnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgUGVyY2VudENvbG9ySW5wdXQgZnJvbSAnLi9QZXJjZW50Q29sb3JJbnB1dCc7XG5cblxuY29uc3QgT3JpZW50YXRpb25CdXR0b25TdHlsZWQgPSBzdHlsZWQuZGl2YFxuLW1vei1ib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcbi13ZWJraXQtYm94LXNoYWRvdzogM3B4IDRweCAwcHggMHB4ICMzZGMyMWI7XG5ib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcbmJhY2tncm91bmQtY29sb3I6IzQ0Yzc2Nztcbi1tb3otYm9yZGVyLXJhZGl1czo0MnB4O1xuLXdlYmtpdC1ib3JkZXItcmFkaXVzOjQycHg7XG5ib3JkZXItcmFkaXVzOjQycHg7XG5ib3JkZXI6MXB4IHNvbGlkICMxOGFiMjk7XG5kaXNwbGF5OiBmbGV4O1xuanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5jdXJzb3I6cG9pbnRlcjtcbmNvbG9yOiNmZmZmZmY7XG5mb250LWZhbWlseTogVHJlYnVjaGV0IE1TO1xuZm9udC1zaXplOiAxMXB4O1xuZm9udC13ZWlnaHQ6Ym9sZDtcbnBhZGRpbmc6IDNweCA4cHg7XG50ZXh0LWRlY29yYXRpb246bm9uZTtcbnRleHQtc2hhZG93OjJweCAxcHggM3B4ICMyZjY2Mjc7XG50ZXh0LWFsaWduOiBjZW50ZXI7XG53aWR0aDogMjAlO1xubWFyZ2luOiA4cHg7XG5cbiY6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO1xufVxuXG4mOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZThlNDE7XG4gIGJveC1zaGFkb3c6IDAgNXB4ICM2NjY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg0cHgpO1xufVxuYDtcblxuXG5jb25zdCBzdmdTcXVhcmUgPSB7XG4gIHNoYXBlOiAncmVjdCcsXG4gIHNoYXBlUHJvcHM6IHtcbiAgICB3aWR0aDogMjAsXG4gICAgaGVpZ2h0OiAyMCxcbiAgICB4OiAtMTAsXG4gICAgeTogLTEwLFxuICAgIGZpbGw6ICdibHVlJ1xuICB9XG59XG5cbmNvbnN0IHN2Z0VsbGlwc2UgPSB7XG4gIHNoYXBlOidlbGxpcHNlJyxcbiAgc2hhcGVQcm9wczoge1xuICAgIHJ4OiAyMCxcbiAgICByeTogMjBcbiAgfVxufVxuXG5cbmNsYXNzIFRyZWVDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLm1vdXNlT3ZlciA9IHRoaXMubW91c2VPdmVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxuICAgIH07XG5cbiAgICB0aGlzLmNoYW5nZU9yaWVudGF0aW9uID0gdGhpcy5jaGFuZ2VPcmllbnRhdGlvbi5iaW5kKHRoaXMpO1xuICB9XG5cbiAgbW91c2VPdmVyKGUpIHtcbiAgICBjb25zdCBzdGF0cyA9IHtcbiAgICAgIG5hbWU6IGUubmFtZSwgdGltZTogZS5yZW5kZXJUaW1lLCBpbmRpdmlkdWFsVGltZTogZS5pbmRpdmlkdWFsVGltZSwgbWVtb2l6ZWRQcm9wczogZS5tZW1vaXplZFByb3BzLCBtZW1vaXplZFN0YXRlOiBlLm1lbW9pemVkU3RhdGUsXG4gICAgfTtcbiAgICBjb25zdCB7IGdyYWJOb2RlU3RhdHMgfSA9IHRoaXMucHJvcHM7XG4gICAgZ3JhYk5vZGVTdGF0cyhzdGF0cyk7XG4gIH1cblxuICBjaGFuZ2VPcmllbnRhdGlvbigpIHtcbiAgICBjb25zdCB7IG9yaWVudGF0aW9uIH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmIChvcmllbnRhdGlvbiA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBvcmllbnRhdGlvbjogJ3ZlcnRpY2FsJyB9KTtcbiAgICB9XG4gIH1cblxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IG9yaWVudGF0aW9uLCBzaGFwZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7IHRyZWVEYXRhIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGlkPVwidHJlZVdyYXBwZXJcIiBzdHlsZT17e3dpZHRoOiAnMTAwJScsIGhlaWdodDogJzYwZW0nLCBmbG9hdDogJ3JpZ2h0JywgYm9yZGVyOiAnMC41cHggc29saWQgI2FiYWJhYicsIG1hcmdpbjogJzEwcHgnLCBib3hTaGFkb3c6ICcxLjVweCAxLjVweCAxLjVweCAxLjVweCAjYWJhYmFiJ319PlxuICAgICAgICA8UGVyY2VudENvbG9ySW5wdXQgdXBkYXRlVHJlZVN0YXRlPXt0aGlzLnByb3BzLnVwZGF0ZVRyZWVTdGF0ZX0gdHJlZURhdGE9e3RoaXMucHJvcHMudHJlZURhdGF9Lz5cbiAgICAgICAgPE9yaWVudGF0aW9uQnV0dG9uU3R5bGVkXG4gICAgICAgICAgICAgIGlkPXsnYnV0dG9uMid9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY2hhbmdlT3JpZW50YXRpb259XG4gICAgICAgICAgICAgIGNvdW50ZXI9J09yaWVudGF0aW9uJz5cbiAgICAgICAgICAgICAgQ2hhbmdlIE9yaWVudGF0aW9uXG4gICAgICAgICAgPC9PcmllbnRhdGlvbkJ1dHRvblN0eWxlZD5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogJzk4JScsIGhlaWdodDogJzQ1ZW0nfX0+XG5cbiAgICAgICAgICAgIDxUcmVlXG4gICAgICAgICAgICAgIHRyYW5zbGF0ZT17e3g6IDEwMCwgeTogMTAwfX1cbiAgICAgICAgICAgICAgb3JpZW50YXRpb249e3RoaXMuc3RhdGUub3JpZW50YXRpb259XG4gICAgICAgICAgICAgIG9uTW91c2VPdmVyPXt0aGlzLm1vdXNlT3Zlcn1cbiAgICAgICAgICAgICAgbm9kZVN2Z1NoYXBlPXt0aGlzLnN0YXRlLnNoYXBlfVxuICAgICAgICAgICAgICBzZXBhcmF0aW9uPXt7c2libGluZ3M6IC42LG5vblNpYmxpbmdzOiAuNn19XG4gICAgICAgICAgICAgIGRhdGE9e3RoaXMucHJvcHMudHJlZURhdGF9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICApO1xuICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgVHJlZUNvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5jb25zdCBCdXR0b25TdHlsZWQgPSBzdHlsZWQuYnV0dG9uYFxuICAtbW96LWJveC1zaGFkb3c6IDNweCA0cHggMHB4IDBweCAjM2RjMjFiO1xuXHQtd2Via2l0LWJveC1zaGFkb3c6IDNweCA0cHggMHB4IDBweCAjM2RjMjFiO1xuXHRib3gtc2hhZG93OiAzcHggNHB4IDBweCAwcHggIzNkYzIxYjtcblx0YmFja2dyb3VuZC1jb2xvcjojNDRjNzY3O1xuXHQtbW96LWJvcmRlci1yYWRpdXM6NDJweDtcblx0LXdlYmtpdC1ib3JkZXItcmFkaXVzOjQycHg7XG5cdGJvcmRlci1yYWRpdXM6NDJweDtcblx0Ym9yZGVyOjFweCBzb2xpZCAjMThhYjI5O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0Y3Vyc29yOnBvaW50ZXI7XG5cdGNvbG9yOiNmZmZmZmY7XG5cdGZvbnQtZmFtaWx5OiBUcmVidWNoZXQgTVM7XG5cdGZvbnQtc2l6ZTogMjRweDtcblx0Zm9udC13ZWlnaHQ6Ym9sZDtcbiAgcGFkZGluZzogMTVweCAyNXB4O1xuXHR0ZXh0LWRlY29yYXRpb246bm9uZTtcbiAgdGV4dC1zaGFkb3c6MnB4IDFweCAzcHggIzJmNjYyNztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogYXV0bztcblxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U4ZTQxO1xuICB9XG5cbiAgJjphY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZThlNDE7XG4gICAgYm94LXNoYWRvdzogMCA1cHggIzY2NjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNHB4KTtcbiAgfVxuXG4gIGA7XG5cbmNsYXNzIEJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8QnV0dG9uU3R5bGVkIGlkPXt0aGlzLnByb3BzLmlkfSBvbkNsaWNrPXt0aGlzLnByb3BzLmNsaWNrZWR9ID5cbiAgICAgICAge3RoaXMucHJvcHMuY291bnRlcn1cbiAgICAgIDwvQnV0dG9uU3R5bGVkPlxuICAgIClcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuY29uc3QgU3RhdHNTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICBjb2xvcjogIzU5NTk1OTtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4ICNhM2EzYTM7XG4gIGZvbnQtc2l6ZTogOHB4O1xuICBmb250LWZhbWlseTogXCJUcmVidWNoZXQgTVNcIjtcbiAgbWFyZ2luOiAxZW07XG4gIHBhZGRpbmc6IDAuMjVlbSAxZW07XG4gIHdpZHRoOiA0NSU7XG4gIGhlaWdodDogYXV0bztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZmxvYXQ6IGxlZnQ7XG5gO1xuXG5cbmNsYXNzIFN0YXRzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgc3VwZXIocHJvcHMpO1xuICAgfVxuXG5cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8U3RhdHNTdHlsZWQ+XG4gICAgICAgICAgICAgIDxoMT5Db21wb25lbnQgTmFtZTo8YnIvPnt0aGlzLnByb3BzLnN0YXRzLm5hbWV9PC9oMT5cbiAgICAgICAgICAgICAgPGgxPlRvdGFsIFJlbmRlciBUaW1lOjxici8+e3RoaXMucHJvcHMuc3RhdHMudG90YWxUaW1lfTwvaDE+XG4gICAgICAgICAgICAgIDxoMT5JbmRpdmlkdWFsIFJlbmRlciBUaW1lOjxici8+e3RoaXMucHJvcHMuc3RhdHMuaW5kaXZpZHVhbFRpbWV9PC9oMT5cbiAgICAgICAgICA8L1N0YXRzU3R5bGVkPlxuICAgICAgKVxuXG4gICAgfVxuICB9XG5cbiAgZXhwb3J0IHsgU3RhdHNTdHlsZWQsIFN0YXRzIH07XG5cbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgUmVhY3RKc29uIGZyb20gJ3JlYWN0LWpzb24tdmlldyc7XG5pbXBvcnQgVHJlZUNvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudHMvVHJlZUNvbXBvbmVudC5qc3gnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL2NvbXBvbmVudHMvQnV0dG9uJztcbmltcG9ydCBQZXJjZW50Q29sb3JJbnB1dCBmcm9tICcuL2NvbXBvbmVudHMvUGVyY2VudENvbG9ySW5wdXQnO1xuaW1wb3J0IHsgU3RhdHMsIFN0YXRzU3R5bGVkIH0gZnJvbSAnLi9jb21wb25lbnRzL1N0YXRzJztcbmltcG9ydCBpbWFnZSBmcm9tICcuL2Fzc2V0cy9SZWFjdFF1YW50dW1Mb2dvLnBuZyc7XG5cbmNvbnN0IFdyYXBwZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuYDtcblxuY29uc3QgQ29udGVudFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuYDtcblxuY29uc3QgU3RhdHNQYW5lbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYm9yZGVyOiAwLjVweCBzb2xpZCAjYWJhYmFiO1xuICBtYXJnaW46IDEwcHg7XG4gIGJveC1zaGFkb3c6IDEuNXB4IDEuNXB4IDEuNXB4IDEuNXB4ICNhYmFiYWI7XG4gIHdpZHRoOiAzNWVtO1xuICBoZWlnaHQ6IDYwZW07XG5gO1xuXG5jb25zdCBTdGF0c1dpbmRvd1N0eWxlZCA9IHN0eWxlZC5kaXZgXG4gIGJvcmRlcjogbm9uZTtcbiAgaGVpZ2h0OiAyMGVtO1xuICB3aWR0aDogOTUlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICM1OTU5NTk7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDJweCAjYTNhM2EzO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlRyZWJ1Y2hldCBNU1wiO1xuICBtYXJnaW46IDFlbTtcbiAgcGFkZGluZzogMC4yNWVtIDFlbTtcbiAgZmxvYXQ6IGxlZnQ7XG5gO1xuXG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIC8vIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxuICAgICAgbm9kZWluZm86IDUsXG4gICAgICBzdGFydFF1YW50dW06IGZhbHNlLFxuICAgICAgdHJlZURhdGE6IHtcbiAgICAgICAgbmFtZTogJ1BMRUFTRSBSRUZSRVNIIFBBR0UnLFxuICAgICAgICBub2RlU3ZnU2hhcGU6IHsgc2hhcGVQcm9wczogeyBmaWxsOiAnd2hpdGUnIH0gfSxcbiAgICAgIH0sXG4gICAgICBncmVlbjogMC4wMDUsXG4gICAgICBsaWdodEdyZWVuOiAwLjAxLFxuICAgICAgeWVsbG93OiAwLjA1LFxuICAgICAgb3JhbmdlOiAwLjEsXG4gICAgfTtcblxuICAgIHRoaXMudXBkYXRlVHJlZVN0YXRlID0gdGhpcy51cGRhdGVUcmVlU3RhdGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLmdyYWJOb2RlU3RhdHMgPSB0aGlzLmdyYWJOb2RlU3RhdHMuYmluZCh0aGlzKTtcbiAgICAvLyB0aGlzLmNoYW5nZU9yaWVudGF0aW9uID0gdGhpcy5jaGFuZ2VPcmllbnRhdGlvbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuY2xpY2tlZCA9IHRoaXMuY2xpY2tlZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc3RhcnRRdWFudHVtID0gdGhpcy5zdGFydFF1YW50dW0uYmluZCh0aGlzKTtcbiAgICBjaHJvbWUuZGV2dG9vbHMucGFuZWxzLmNyZWF0ZSgnUmVhY3QgUXVhbnR1bScsIG51bGwsICdkZXZ0b29scy5odG1sJyk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCBwb3J0ID0gY2hyb21lLnJ1bnRpbWUuY29ubmVjdChudWxsLCB7IG5hbWU6ICdkZXZUb29scycgfSk7XG4gICAgY29uc3QgeyB0YWJJZCB9ID0gY2hyb21lLmRldnRvb2xzLmluc3BlY3RlZFdpbmRvdztcblxuICAgIGZ1bmN0aW9uIHBvc3QobWVzc2FnZSkge1xuICAgICAgY29uc3QgbmV3TWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICBuZXdNZXNzYWdlLnRhYklkID0gdGFiSWQ7XG4gICAgICBwb3J0LnBvc3RNZXNzYWdlKG1lc3NhZ2UpO1xuICAgIH1cbiAgICBwb3N0KHsgbWVzc2FnZTogJ2luaXRpYWxpemUnIH0pO1xuICAgIHBvcnQub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlKSA9PiB7XG4gICAgICAvLyBmdW5jdGlvbiBzdWJ0cmFjdHMgY2hpbGRyZW4gcmVuZGVyIHRpbWUgZnJvbSBpdHMgb3duIHJlbmRlciB0aW1lIHRvIGdldCBpbmRpdmlkdWFsIHJlbmRlciB0aW1lXG4gICAgICBmdW5jdGlvbiBhZGRJbmRpdmlkdWFsVGltZSh0cmVlRGF0YUFycikge1xuICAgICAgICBjb25zdCB0cmVlRGF0YUFyckNvcHkgPSB0cmVlRGF0YUFycjtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmVlRGF0YUFyckNvcHkubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICBpZiAodHJlZURhdGFBcnJDb3B5W2ldLm1lbW9pemVkUHJvcHMpIHtcbiAgICAgICAgICAgIHRyZWVEYXRhQXJyQ29weVtpXS5tZW1vaXplZFByb3BzID0gSlNPTi5wYXJzZSh0cmVlRGF0YUFyckNvcHlbaV0ubWVtb2l6ZWRQcm9wcyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0cmVlRGF0YUFyckNvcHlbaV0ucmVuZGVyVGltZSA9PT0gMCkge1xuICAgICAgICAgICAgdHJlZURhdGFBcnJDb3B5W2ldLmluZGl2aWR1YWxUaW1lID0gMDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHN1bUNoaWxkcmVuVGltZSA9IDA7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRyZWVEYXRhQXJyQ29weVtpXS5jaGlsZHJlbi5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgICAgICBjb25zdCBjdXJyZW50Tm9kZSA9IHRyZWVEYXRhQXJyQ29weVtpXS5jaGlsZHJlbltqXTtcbiAgICAgICAgICAgICAgaWYgKGN1cnJlbnROb2RlLnJlbmRlclRpbWUgPT09IDAgJiYgY3VycmVudE5vZGUuY2hpbGRyZW4gPiAwKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBjdXJyZW50Tm9kZS5jaGlsZHJlbi5sZW5ndGg7IGsgKz0gMSkge1xuICAgICAgICAgICAgICAgICAgc3VtQ2hpbGRyZW5UaW1lICs9IGN1cnJlbnROb2RlLmNoaWxkcmVuW2tdLnJlbmRlclRpbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN1bUNoaWxkcmVuVGltZSArPSB0cmVlRGF0YUFyckNvcHlbaV0uY2hpbGRyZW5bal0ucmVuZGVyVGltZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJlZURhdGFBcnJDb3B5W2ldLmluZGl2aWR1YWxUaW1lID0gdHJlZURhdGFBcnJDb3B5W2ldLnJlbmRlclRpbWUgLSBzdW1DaGlsZHJlblRpbWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdHJlZURhdGFBcnJDb3B5Lmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgaWYgKHRyZWVEYXRhQXJyQ29weVtpXS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhZGRJbmRpdmlkdWFsVGltZSh0cmVlRGF0YUFyckNvcHlbaV0uY2hpbGRyZW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBhZGRzIGNvbG9yIGJhc2VkIG9uIHJlbmRlciB0aW1lIG9mIG5vZGUgcmVsYXRpdmUgdG8gdG90YWwgcmVuZGVyIHRpbWUgb2YgYXBwXG4gICAgICBmdW5jdGlvbiBhZGRDb2xvcih0cmVlRGF0YUFyciwgZ3JlZW4sIGxpZ2h0R3JlZW4sIHllbGxvdywgb3JhbmdlKSB7XG4gICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IHRyZWVEYXRhQXJyWzBdLnJlbmRlclRpbWU7XG4gICAgICAgIGNvbnN0IHdvcmtUb0JlRG9uZSA9IFt0cmVlRGF0YUFyclswXV07XG4gICAgICAgIHdoaWxlICh3b3JrVG9CZURvbmUubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGNvbnN0IHBlcmNlbnRUaW1lID0gd29ya1RvQmVEb25lWzBdLmluZGl2aWR1YWxUaW1lIC8gdG90YWxUaW1lO1xuICAgICAgICAgIGlmIChwZXJjZW50VGltZSA8IGdyZWVuKSB7XG4gICAgICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnIzgwYjc0YycgfSB9O1xuICAgICAgICAgIH0gZWxzZSBpZiAocGVyY2VudFRpbWUgPCBsaWdodEdyZWVuKSB7XG4gICAgICAgICAgICB3b3JrVG9CZURvbmVbMF0ubm9kZVN2Z1NoYXBlID0geyBzaGFwZTogJ2VsbGlwc2UnLCBzaGFwZVByb3BzOiB7IHJ4OiAyMCwgcnk6IDIwLCBmaWxsOiAnI2ExYzk0ZicgfSB9O1xuICAgICAgICAgIH0gZWxzZSBpZiAocGVyY2VudFRpbWUgPCB5ZWxsb3cpIHtcbiAgICAgICAgICAgIHdvcmtUb0JlRG9uZVswXS5ub2RlU3ZnU2hhcGUgPSB7IHNoYXBlOiAnZWxsaXBzZScsIHNoYXBlUHJvcHM6IHsgcng6IDIwLCByeTogMjAsIGZpbGw6ICcjZTZjYzM4JyB9IH07XG4gICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50VGltZSA8IG9yYW5nZSkge1xuICAgICAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNmNjlkMjcnIH0gfTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgd29ya1RvQmVEb25lWzBdLm5vZGVTdmdTaGFwZSA9IHsgc2hhcGU6ICdlbGxpcHNlJywgc2hhcGVQcm9wczogeyByeDogMjAsIHJ5OiAyMCwgZmlsbDogJyNlNzRlMmMnIH0gfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3b3JrVG9CZURvbmVbMF0uY2hpbGRyZW4ubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHdvcmtUb0JlRG9uZS5wdXNoKHdvcmtUb0JlRG9uZVswXS5jaGlsZHJlbltpXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHdvcmtUb0JlRG9uZS5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmVlRGF0YUFycjtcbiAgICAgIH1cblxuICAgICAgY29uc3Qge1xuICAgICAgICBncmVlbiwgbGlnaHRHcmVlbiwgeWVsbG93LCBvcmFuZ2UsXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgbGV0IHRlbXBUcmVlRGF0YSA9IEpTT04ucGFyc2UobWVzc2FnZS5tZXNzYWdlKTtcbiAgICAgIGNvbnNvbGUubG9nKCd0ZW1wVHJlZURhdGEnLCB0ZW1wVHJlZURhdGEpO1xuICAgICAgdGVtcFRyZWVEYXRhID0gdGVtcFRyZWVEYXRhWzBdLmNoaWxkcmVuO1xuICAgICAgYWRkSW5kaXZpZHVhbFRpbWUodGVtcFRyZWVEYXRhKTtcbiAgICAgIGFkZENvbG9yKHRlbXBUcmVlRGF0YSwgZ3JlZW4sIGxpZ2h0R3JlZW4sIHllbGxvdywgb3JhbmdlKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyB0cmVlRGF0YTogdGVtcFRyZWVEYXRhIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhcnRRdWFudHVtKCkge1xuICAgIGNvbnN0IHsgdGFiSWQgfSA9IGNocm9tZS5kZXZ0b29scy5pbnNwZWN0ZWRXaW5kb3c7XG4gICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgbmFtZTogJ3N0YXJ0UXVhbnR1bScsXG4gICAgICB0YXJnZXQ6ICdjb250ZW50JyxcbiAgICAgIHRhYklkLFxuICAgIH0pO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzdGFydFF1YW50dW06IHRydWUsXG4gICAgfSk7XG4gIH1cblxuICB1cGRhdGVUcmVlU3RhdGUodHJlZURhdGFBcnIpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgdHJlZURhdGE6IHRyZWVEYXRhQXJyIH0pO1xuICB9XG5cbiAgZ3JhYk5vZGVTdGF0cyhzdGF0cykge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbm9kZWluZm86IHtcbiAgICAgICAgdG90YWxUaW1lOiBzdGF0cy50aW1lLCBpbmRpdmlkdWFsVGltZTogc3RhdHMuaW5kaXZpZHVhbFRpbWUsIG5hbWU6IHN0YXRzLm5hbWUsIG1lbW9pemVkUHJvcHM6IHN0YXRzLm1lbW9pemVkUHJvcHMsIG1lbW9pemVkU3RhdGU6IHN0YXRzLm1lbW9pemVkU3RhdGUsXG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgY2xpY2tlZChlKSB7XG4gICAgY29uc3QgY291bnRlckkgPSBgJHtlLnRhcmdldC5pZH1jb3VudGVyYDtcbiAgICBjb25zdCB7IGNvdW50ZXJJZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBjb3VudGVyID0gY291bnRlcklkICsgMTtcbiAgICBjb25zdCB1cGRhdGVDb3VudGVyID0ge307XG5cbiAgICB1cGRhdGVDb3VudGVyW2NvdW50ZXJJXSA9IGNvdW50ZXI7XG4gICAgdGhpcy5zZXRTdGF0ZSh1cGRhdGVDb3VudGVyKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBub2RlaW5mbywgdHJlZURhdGEsIGdyZWVuLCBsaWdodEdyZWVuLCB5ZWxsb3csIG9yYW5nZSwgb3JpZW50YXRpb24sIHN0YXJ0UXVhbnR1bSxcbiAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICByZXR1cm4gKFxuICAgICAgPFdyYXBwZXJTdHlsZWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0UXVhbnR1bS9SZWFjdFF1YW50dW1cIiBhbHQ9XCJcIiAvPlxuXG4gICAgICAgICAge1xuICAgICAgICAgICAgKHN0YXJ0UXVhbnR1bSA9PT0gZmFsc2UpXG4gICAgICAgICAgICAgID8gKFxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsIGFsaWduQ29udGVudDogJ2NlbnRlcicsIGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBpZD1cInN0YXJ0UXVhbnR1bVwiXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrZWQ9e3RoaXMuc3RhcnRRdWFudHVtfVxuICAgICAgICAgICAgICAgICAgICBjb3VudGVyPVwiU3RhcnQgUXVhbnR1bVwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIDogKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgPENvbnRlbnRTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgIDxTdGF0c1BhbmVsU3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICAgIDxTdGF0cyBzdGF0cz17bm9kZWluZm99IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPFN0YXRzU3R5bGVkIHN0eWxlPXt7IG1hcmdpblRvcDogJy0xMHB4JyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5DdXJyZW50IFN0YXRlOjwvaDE+XG4gICAgICAgICAgICAgICAgICAgICAgPC9TdGF0c1N0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgICA8U3RhdHNXaW5kb3dTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RKc29uIHNyYz17bm9kZWluZm8ubWVtb2l6ZWRTdGF0ZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L1N0YXRzV2luZG93U3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICAgIDxTdGF0c1N0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5Qcm9wczo8L2gxPlxuICAgICAgICAgICAgICAgICAgICAgIDwvU3RhdHNTdHlsZWQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFN0YXRzV2luZG93U3R5bGVkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJlYWN0SnNvbiBzcmM9e25vZGVpbmZvLm1lbW9pemVkUHJvcHN9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9TdGF0c1dpbmRvd1N0eWxlZD5cbiAgICAgICAgICAgICAgICAgICAgPC9TdGF0c1BhbmVsU3R5bGVkPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6ICc0NSUnLCBoZWlnaHQ6ICc2MGVtJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICB7LyogPFBlcmNlbnRDb2xvcklucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmVlRGF0YT17dHJlZURhdGF9XG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50Rm9yR3JlZW49e2dyZWVufVxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyY2VudEZvckxpZ2h0R3JlZW49e2xpZ2h0R3JlZW59XG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50Rm9yWWVsbG93PXt5ZWxsb3d9XG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50Rm9yT3JhbmdlPXtvcmFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUcmVlU3RhdGU9e3RoaXMudXBkYXRlVHJlZVN0YXRlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+ICovfVxuICAgICAgICAgICAgICAgICAgICAgIDxUcmVlQ29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUcmVlU3RhdGU9e3RoaXMudXBkYXRlVHJlZVN0YXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgdHJlZURhdGE9e3RyZWVEYXRhfVxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JhYk5vZGVTdGF0cz17dGhpcy5ncmFiTm9kZVN0YXRzfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9Db250ZW50U3R5bGVkPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgfVxuXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9XcmFwcGVyU3R5bGVkPlxuXG4gICAgKTtcbiAgfVxufVxuXG5cbnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=