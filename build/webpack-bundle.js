!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=52)}([function(e,t,n){"use strict";e.exports=n(21)},function(e,t,n){"use strict";(function(e){var r=n(6),o=n.n(r),i=n(17),a=n.n(i),u=n(0),l=n.n(u),c=n(18),s=n(4),f=n(7),p=(n(2),n(3),n(20)),h=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},v=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},w=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},x=function(e){return"object"===(void 0===e?"undefined":d(e))&&e.constructor===Object},k=Object.freeze([]),_=Object.freeze({});function E(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function M(e){return e&&"string"==typeof e.styledComponentId}var T=void 0!==e&&e.env.SC_ATTR||"data-styled",C="undefined"!=typeof window&&"HTMLElement"in window,O="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1;var N=function(e){function t(n){g(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];var a=w(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#"+n+" for more information. "+(o?"Additional arguments: "+o.join(", "):"")));return w(a)}return m(t,e),t}(Error),P=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,A=function(e){var t=""+(e||""),n=[];return t.replace(P,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,i=e.matchIndex,a=n[r+1];return{componentId:o,cssFromDOM:a?t.slice(i,a.matchIndex):t.slice(i)}})},j=/^\s*\/\/.*$/gm,R=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),D=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),I=[],L=function(e){if(-2===e){var t=I;return I=[],t}},z=a()(function(e){I.push(e)}),U=void 0,F=void 0,B=void 0,q=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(F)&&n.slice(t-F.length,t)!==F?"."+U:e};D.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(F)>0&&(n[0]=n[0].replace(B,q))},z,L]),R.use([z,L]);function W(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(j,""),i=t&&n?n+" "+t+" { "+o+" }":o;return U=r,F=t,B=new RegExp("\\"+F+"\\b","g"),D(n||!t?"":t,i)}var $=function(){return n.nc},H=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},Y=function(e,t){e[t]=Object.create(null)},V=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},Q=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},G=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new N(10)},K=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},X=function(e){return"\n/* sc-component-id: "+e+" */\n"},Z=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},J=function(e,t){return function(n){var r=$();return"<style "+[r&&'nonce="'+r+'"',T+'="'+Q(t)+'"','data-styled-version="4.1.3"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},ee=function(e,t){return function(){var n,r=((n={})[T]=Q(t),n["data-styled-version"]="4.1.3",n),o=$();return o&&(r.nonce=o),l.a.createElement("style",y({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},te=function(e){return function(){return Object.keys(e)}},ne=function(e){return document.createTextNode(X(e))},re=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,i=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},a=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=X(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=y({},e[n]);return t}(r),n=Object.create(null);for(var i in o)n[i]=[o[i][0]];return e(t,n)},css:a,getIds:te(o),hasNameForId:V(r),insertMarker:i,insertRules:function(e,t,n){i(e)[0]+=t.join(" "),H(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",Y(r,e))},sealed:!1,styleTag:null,toElement:ee(a,r),toHTML:J(a,r)}},oe=function(e,t,n,r,o){if(C&&!n){var i=function(e,t,n){var r=document.createElement("style");r.setAttribute(T,""),r.setAttribute("data-styled-version","4.1.3");var o=$();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new N(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return O?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,i=!1,a=function(t){var o=r[t];return void 0!==o?o:(r[t]=ne(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},u=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new N(5)},css:u,getIds:te(r),hasNameForId:V(n),insertMarker:a,insertRules:function(e,r,u){for(var l=a(e),c=[],s=r.length,f=0;f<s;f+=1){var p=r[f],h=o;if(h&&-1!==p.indexOf("@import"))c.push(p);else{h=!1;var d=f===s-1?"":" ";l.appendData(""+p+d)}}H(n,e,u),o&&c.length>0&&(i=!0,t().insertRules(e+"-import",c))},removeRules:function(a){var u=r[a];if(void 0!==u){var l=ne(a);e.replaceChild(l,u),r[a]=l,Y(n,a),o&&i&&t().removeRules(a+"-import")}},sealed:!1,styleTag:e,toElement:ee(u,n),toHTML:J(u,n)}}(i,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],i=void 0!==t,a=!1,u=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),Y(n,e),r[e])},l=function(){var t=G(e).cssRules,n="";for(var i in r){n+=X(i);for(var a=r[i],u=Z(o,a),l=u-o[a];l<u;l+=1){var c=t[l];void 0!==c&&(n+=c.cssText)}}return n};return{clone:function(){throw new N(5)},css:l,getIds:te(r),hasNameForId:V(n),insertMarker:u,insertRules:function(r,l,c){for(var s=u(r),f=G(e),p=Z(o,s),h=0,d=[],g=l.length,v=0;v<g;v+=1){var y=l[v],m=i;m&&-1!==y.indexOf("@import")?d.push(y):K(f,y,p+h)&&(m=!1,h+=1)}i&&d.length>0&&(a=!0,t().insertRules(r+"-import",d)),o[s]+=h,H(n,r,c)},removeRules:function(u){var l=r[u];if(void 0!==l){var c=o[l];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(G(e),Z(o,l)-1,c),o[l]=0,Y(n,u),i&&a&&t().removeRules(u+"-import")}},sealed:!1,styleTag:e,toElement:ee(l,n),toHTML:J(l,n)}}(i,o)}return re()},ie=/\s+/,ae=void 0;ae=C?O?40:1e3:-1;var ue=0,le=void 0,ce=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:C?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];g(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},ue+=1,this.id=ue,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!C||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+T+'][data-styled-version="4.1.3"]'),o=r.length;if(!o)return this;for(var i=0;i<o;i+=1){var a=r[i];n||(n=!!a.getAttribute("data-styled-streamed"));for(var u,l=(a.getAttribute(T)||"").trim().split(ie),c=l.length,s=0;s<c;s+=1)u=l[s],this.rehydratedNames[u]=!0;t.push.apply(t,A(a.textContent)),e.push(a)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var i=n[r],a=i.componentId,u=i.cssFromDOM,l=R("",u);e.insertRules(a,l)}for(var c=0,s=t.length;c<s;c+=1){var f=t[c];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ae-f),this.tags.push(p);for(var h=0;h<f;h+=1)this.tagMap[t[h].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];le=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=y({},this.rehydratedNames),t.deferred=y({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ae,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var i=this.getTagForId(e);if(void 0!==this.deferred[e]){var a=this.deferred[e].concat(t);i.insertRules(e,a,n),this.deferred[e]=void 0}else i.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(u.cloneElement)(t.toElement(),{key:r})})},v(e,null,[{key:"master",get:function(){return le||(le=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),se=function(){function e(t,n){var r=this;g(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new N(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),fe=/([A-Z])/g,pe=/^ms-/;var he=function(e){return null==e||!1===e||""===e},de=function e(t,n){var r=Object.keys(t).filter(function(e){return!he(t[e])}).map(function(n){return x(t[n])?e(t[n],n):n.replace(fe,"-$1").toLowerCase().replace(pe,"-ms-")+": "+(r=n,null==(o=t[n])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in c.a?String(o).trim():o+"px")+";";var r,o}).join(" ");return n?n+" {\n  "+r+"\n}":r};function ge(e,t,n){if(Array.isArray(e)){for(var r,o=[],i=0,a=e.length;i<a;i+=1)null!==(r=ge(e[i],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}if(he(e))return null;if(M(e))return"."+e.styledComponentId;if(E(e)){if(t){var u=!1;try{Object(s.isElement)(new e(t))&&(u=!0)}catch(e){}if(u)throw new N(13,S(e));return ge(e(t),t,n)}return e}return e instanceof se?n?(e.inject(n),e.getName()):e:x(e)?de(e):e.toString()}function ve(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return E(e)||x(e)?ge(h(k,[e].concat(n))):ge(h(e,n))}function ye(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var me=52,be=function(e){return String.fromCharCode(e+(e>25?39:97))};function we(e){var t="",n=void 0;for(n=e;n>me;n=Math.floor(n/me))t=be(n%me)+t;return be(n%me)+t}function xe(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!xe(r,t))return!1;if(E(r)&&!M(r))return!1}return!t.some(function(e){return E(e)||function(e){for(var t in e)if(E(e[t]))return!0;return!1}(e)})}var ke,_e=!1,Ee=function(e){return we(ye(e))},Se=function(){function e(t,n,r){g(this,e),this.rules=t,this.isStatic=!_e&&xe(t,n),this.componentId=r,ce.master.hasId(r)||ce.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(C&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var i=ge(this.rules,e,t),a=Ee(this.componentId+i.join(""));return t.hasNameForId(r,a)||t.inject(this.componentId,W(i,"."+a,void 0,r),a),this.lastClassName=a,a},e.generateName=function(e){return Ee(e)},e}(),Me=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Te=/[[\].#*$><+~=|^:(),"'`-]+/g,Ce=/(^-|-$)/g;function Oe(e){return e.replace(Te,"-").replace(Ce,"")}function Ne(e){return"string"==typeof e&&!0}var Pe={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Ae={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},je=((ke={})[s.ForwardRef]={$$typeof:!0,render:!0},ke),Re=Object.defineProperty,De=Object.getOwnPropertyNames,Ie=Object.getOwnPropertySymbols,Le=void 0===Ie?function(){return[]}:Ie,ze=Object.getOwnPropertyDescriptor,Ue=Object.getPrototypeOf,Fe=Object.prototype,Be=Array.prototype;function qe(e,t,n){if("string"!=typeof t){var r=Ue(t);r&&r!==Fe&&qe(e,r,n);for(var o=Be.concat(De(t),Le(t)),i=je[e.$$typeof]||Pe,a=je[t.$$typeof]||Pe,u=o.length,l=void 0,c=void 0;u--;)if(c=o[u],!(Ae[c]||n&&n[c]||a&&a[c]||i&&i[c])&&(l=ze(t,c)))try{Re(e,c,l)}catch(e){}return e}return e}var We=Object(u.createContext)(),$e=We.Consumer,He=(function(e){function t(n){g(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}m(t,e),t.prototype.render=function(){return this.props.children?l.a.createElement(We.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return l.a.createElement(We.Provider,{value:t},l.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(E(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":d(e)))throw new N(8);return y({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(u.Component),function(){function e(){g(this,e),this.masterSheet=ce.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new N(2);return l.a.createElement(Ve,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new N(3)}}(),Object(u.createContext)()),Ye=He.Consumer,Ve=function(e){function t(n){g(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return m(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new ce(t);throw new N(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return l.a.createElement(He.Provider,{value:this.getContext(n,r)},t)},t}(u.Component),Qe=(new Set,{});var Ge=function(e){function t(){g(this,t);var n=w(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return m(t,e),t.prototype.render=function(){return l.a.createElement(Ye,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ce.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():l.a.createElement($e,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),i=t.styledComponentId,a=t.target,l=void 0;l=n.isStatic?this.generateAndInjectStyles(_,this.props):void 0!==e?this.generateAndInjectStyles(Me(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||_,this.props);var c=this.props.as||this.attrs.as||a,s=Ne(c),f={},h=y({},this.attrs,this.props),d=void 0;for(d in h)"forwardedComponent"!==d&&"as"!==d&&("forwardedRef"===d?f.ref=h[d]:s&&!Object(p.a)(d)||(f[d]=h[d]));return this.props.style&&this.attrs.style&&(f.style=y({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(o,this.props.className,i,this.attrs.className,l).filter(Boolean).join(" "),Object(u.createElement)(c,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=y({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,i=!1,a=void 0,u=void 0;for(u in E(n)&&(n=n(o),i=!0),n)a=n[u],i||!E(a)||(t=a)&&t.prototype&&t.prototype.isReactComponent||M(a)||(a=a(o)),r.attrs[u]=a,o[u]=a}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(_,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(u.Component);function Ke(e,t,n){var r=M(e),o=!Ne(e),i=t.displayName,a=void 0===i?function(e){return Ne(e)?"styled."+e:"Styled("+S(e)+")"}(e):i,u=t.componentId,c=void 0===u?function(e,t,n){var r="string"!=typeof t?"sc":Oe(t),o=(Qe[r]||0)+1;Qe[r]=o;var i=r+"-"+e.generateName(r+o);return n?n+"-"+i:i}(Se,t.displayName,t.parentComponentId):u,s=t.ParentComponent,f=void 0===s?Ge:s,p=t.attrs,h=void 0===p?k:p,d=t.displayName&&t.componentId?Oe(t.displayName)+"-"+t.componentId:t.componentId||c,g=r&&e.attrs?Array.prototype.concat(e.attrs,h).filter(Boolean):h,v=new Se(r?e.componentStyle.rules.concat(n):n,g,d),m=l.a.forwardRef(function(e,t){return l.a.createElement(f,y({},e,{forwardedComponent:m,forwardedRef:t}))});return m.attrs=g,m.componentStyle=v,m.displayName=a,m.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):k,m.styledComponentId=d,m.target=r?e.target:e,m.withComponent=function(e){var r=t.componentId,o=b(t,["componentId"]),i=r&&r+"-"+(Ne(e)?e:Oe(S(e)));return Ke(e,y({},o,{attrs:g,componentId:i,ParentComponent:f}),n)},m.toString=function(){return"."+m.styledComponentId},o&&qe(m,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),m}var Xe=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_;if(!Object(s.isValidElementType)(n))throw new N(1,String(n));var o=function(){return t(n,r,ve.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,y({},r,o))},o.attrs=function(o){return e(t,n,y({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Ke,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Xe[e]=Xe(e)});!function(){function e(t,n){g(this,e),this.rules=t,this.componentId=n,this.isStatic=xe(t,k),ce.master.hasId(n)||ce.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=W(ge(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();C&&(window.scCGSHMRCache={});t.a=Xe}).call(this,n(15))},function(e,t,n){e.exports=n(25)()},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(22)},function(e,t,n){"use strict";e.exports=n(50)},function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,i=/zoo|gra/,a=/([,: ])(transform)/g,u=/,+\s*(?![^(]*[)])/g,l=/ +\s*(?![^(]*[)])/g,c=/ *[\0] */g,s=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,h=/\W+/g,d=/@(k\w+)\s*(\S*)\s*/,g=/::(place)/g,v=/:(read-only)/g,y=/\s+(?=[{\];=:>])/g,m=/([[}=:>])\s+/g,b=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,x=/([^\(])(:+) */g,k=/[svh]\w+-[tblr]{2}/,_=/\(\s*(.*)\s*\)/g,E=/([\s\S]*?);/g,S=/-self|flex-/g,M=/[^]*?(:[rp][el]a[\w-]+)[^]*/,T=/stretch|:\s*\w+\-(?:conte|avail)/,C=/([^-])(image-set\()/,O="-webkit-",N="-moz-",P="-ms-",A=59,j=125,R=123,D=40,I=41,L=91,z=93,U=10,F=13,B=9,q=64,W=32,$=38,H=45,Y=95,V=42,Q=44,G=58,K=39,X=34,Z=47,J=62,ee=43,te=126,ne=0,re=12,oe=11,ie=107,ae=109,ue=115,le=112,ce=111,se=105,fe=99,pe=100,he=112,de=1,ge=1,ve=0,ye=1,me=1,be=1,we=0,xe=0,ke=0,_e=[],Ee=[],Se=0,Me=null,Te=-2,Ce=-1,Oe=0,Ne=1,Pe=2,Ae=3,je=0,Re=1,De="",Ie="",Le="";function ze(e,t,o,i,a){for(var u,l,s=0,f=0,p=0,h=0,y=0,m=0,b=0,w=0,k=0,E=0,S=0,M=0,T=0,C=0,Y=0,we=0,Ee=0,Me=0,Te=0,Ce=o.length,Fe=Ce-1,Ye="",Ve="",Qe="",Ge="",Ke="",Xe="";Y<Ce;){if(b=o.charCodeAt(Y),Y===Fe&&f+h+p+s!==0&&(0!==f&&(b=f===Z?U:Z),h=p=s=0,Ce++,Fe++),f+h+p+s===0){if(Y===Fe&&(we>0&&(Ve=Ve.replace(r,"")),Ve.trim().length>0)){switch(b){case W:case B:case A:case F:case U:break;default:Ve+=o.charAt(Y)}b=A}if(1===Ee)switch(b){case R:case j:case A:case X:case K:case D:case I:case Q:Ee=0;case B:case F:case U:case W:break;default:for(Ee=0,Te=Y,y=b,Y--,b=A;Te<Ce;)switch(o.charCodeAt(Te++)){case U:case F:case A:++Y,b=y,Te=Ce;break;case G:we>0&&(++Y,b=y);case R:Te=Ce}}switch(b){case R:for(y=(Ve=Ve.trim()).charCodeAt(0),S=1,Te=++Y;Y<Ce;){switch(b=o.charCodeAt(Y)){case R:S++;break;case j:S--;break;case Z:switch(m=o.charCodeAt(Y+1)){case V:case Z:Y=He(m,Y,Fe,o)}break;case L:b++;case D:b++;case X:case K:for(;Y++<Fe&&o.charCodeAt(Y)!==b;);}if(0===S)break;Y++}switch(Qe=o.substring(Te,Y),y===ne&&(y=(Ve=Ve.replace(n,"").trim()).charCodeAt(0)),y){case q:switch(we>0&&(Ve=Ve.replace(r,"")),m=Ve.charCodeAt(1)){case pe:case ae:case ue:case H:u=t;break;default:u=_e}if(Te=(Qe=ze(t,u,Qe,m,a+1)).length,ke>0&&0===Te&&(Te=Ve.length),Se>0&&(u=Ue(_e,Ve,Me),l=$e(Ae,Qe,u,t,ge,de,Te,m,a,i),Ve=u.join(""),void 0!==l&&0===(Te=(Qe=l.trim()).length)&&(m=0,Qe="")),Te>0)switch(m){case ue:Ve=Ve.replace(_,We);case pe:case ae:case H:Qe=Ve+"{"+Qe+"}";break;case ie:Qe=(Ve=Ve.replace(d,"$1 $2"+(Re>0?De:"")))+"{"+Qe+"}",Qe=1===me||2===me&&qe("@"+Qe,3)?"@"+O+Qe+"@"+Qe:"@"+Qe;break;default:Qe=Ve+Qe,i===he&&(Ge+=Qe,Qe="")}else Qe="";break;default:Qe=ze(t,Ue(t,Ve,Me),Qe,i,a+1)}Ke+=Qe,M=0,Ee=0,C=0,we=0,Me=0,T=0,Ve="",Qe="",b=o.charCodeAt(++Y);break;case j:case A:if((Te=(Ve=(we>0?Ve.replace(r,""):Ve).trim()).length)>1)switch(0===C&&((y=Ve.charCodeAt(0))===H||y>96&&y<123)&&(Te=(Ve=Ve.replace(" ",":")).length),Se>0&&void 0!==(l=$e(Ne,Ve,t,e,ge,de,Ge.length,i,a,i))&&0===(Te=(Ve=l.trim()).length)&&(Ve="\0\0"),y=Ve.charCodeAt(0),m=Ve.charCodeAt(1),y){case ne:break;case q:if(m===se||m===fe){Xe+=Ve+o.charAt(Y);break}default:if(Ve.charCodeAt(Te-1)===G)break;Ge+=Be(Ve,y,m,Ve.charCodeAt(2))}M=0,Ee=0,C=0,we=0,Me=0,Ve="",b=o.charCodeAt(++Y)}}switch(b){case F:case U:if(f+h+p+s+xe===0)switch(E){case I:case K:case X:case q:case te:case J:case V:case ee:case Z:case H:case G:case Q:case A:case R:case j:break;default:C>0&&(Ee=1)}f===Z?f=0:ye+M===0&&i!==ie&&Ve.length>0&&(we=1,Ve+="\0"),Se*je>0&&$e(Oe,Ve,t,e,ge,de,Ge.length,i,a,i),de=1,ge++;break;case A:case j:if(f+h+p+s===0){de++;break}default:switch(de++,Ye=o.charAt(Y),b){case B:case W:if(h+s+f===0)switch(w){case Q:case G:case B:case W:Ye="";break;default:b!==W&&(Ye=" ")}break;case ne:Ye="\\0";break;case re:Ye="\\f";break;case oe:Ye="\\v";break;case $:h+f+s===0&&ye>0&&(Me=1,we=1,Ye="\f"+Ye);break;case 108:if(h+f+s+ve===0&&C>0)switch(Y-C){case 2:w===le&&o.charCodeAt(Y-3)===G&&(ve=w);case 8:k===ce&&(ve=k)}break;case G:h+f+s===0&&(C=Y);break;case Q:f+p+h+s===0&&(we=1,Ye+="\r");break;case X:case K:0===f&&(h=h===b?0:0===h?b:h);break;case L:h+f+p===0&&s++;break;case z:h+f+p===0&&s--;break;case I:h+f+s===0&&p--;break;case D:if(h+f+s===0){if(0===M)switch(2*w+3*k){case 533:break;default:S=0,M=1}p++}break;case q:f+p+h+s+C+T===0&&(T=1);break;case V:case Z:if(h+s+p>0)break;switch(f){case 0:switch(2*b+3*o.charCodeAt(Y+1)){case 235:f=Z;break;case 220:Te=Y,f=V}break;case V:b===Z&&w===V&&Te+2!==Y&&(33===o.charCodeAt(Te+2)&&(Ge+=o.substring(Te,Y+1)),Ye="",f=0)}}if(0===f){if(ye+h+s+T===0&&i!==ie&&b!==A)switch(b){case Q:case te:case J:case ee:case I:case D:if(0===M){switch(w){case B:case W:case U:case F:Ye+="\0";break;default:Ye="\0"+Ye+(b===Q?"":"\0")}we=1}else switch(b){case D:C+7===Y&&108===w&&(C=0),M=++S;break;case I:0==(M=--S)&&(we=1,Ye+="\0")}break;case B:case W:switch(w){case ne:case R:case j:case A:case Q:case re:case B:case W:case U:case F:break;default:0===M&&(we=1,Ye+="\0")}}Ve+=Ye,b!==W&&b!==B&&(E=b)}}k=w,w=b,Y++}if(Te=Ge.length,ke>0&&0===Te&&0===Ke.length&&0===t[0].length==0&&(i!==ae||1===t.length&&(ye>0?Ie:Le)===t[0])&&(Te=t.join(",").length+2),Te>0){if(u=0===ye&&i!==ie?function(e){for(var t,n,o=0,i=e.length,a=Array(i);o<i;++o){for(var u=e[o].split(c),l="",s=0,f=0,p=0,h=0,d=u.length;s<d;++s)if(!(0===(f=(n=u[s]).length)&&d>1)){if(p=l.charCodeAt(l.length-1),h=n.charCodeAt(0),t="",0!==s)switch(p){case V:case te:case J:case ee:case W:case D:break;default:t=" "}switch(h){case $:n=t+Ie;case te:case J:case ee:case W:case I:case D:break;case L:n=t+n+Ie;break;case G:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(be>0){n=t+n.substring(8,f-1);break}default:(s<1||u[s-1].length<1)&&(n=t+Ie+n)}break;case Q:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(x,"$1"+Ie+"$2"):t+n+Ie}l+=n}a[o]=l.replace(r,"").trim()}return a}(t):t,Se>0&&void 0!==(l=$e(Pe,Ge,u,e,ge,de,Te,i,a,i))&&0===(Ge=l).length)return Xe+Ge+Ke;if(Ge=u.join(",")+"{"+Ge+"}",me*ve!=0){switch(2!==me||qe(Ge,2)||(ve=0),ve){case ce:Ge=Ge.replace(v,":"+N+"$1")+Ge;break;case le:Ge=Ge.replace(g,"::"+O+"input-$1")+Ge.replace(g,"::"+N+"$1")+Ge.replace(g,":"+P+"input-$1")+Ge}ve=0}}return Xe+Ge+Ke}function Ue(e,t,n){var r=t.trim().split(s),o=r,i=r.length,a=e.length;switch(a){case 0:case 1:for(var u=0,l=0===a?"":e[0]+" ";u<i;++u)o[u]=Fe(l,o[u],n,a).trim();break;default:u=0;var c=0;for(o=[];u<i;++u)for(var f=0;f<a;++f)o[c++]=Fe(e[f]+" ",r[u],n,a).trim()}return o}function Fe(e,t,n,r){var o=t,i=o.charCodeAt(0);switch(i<33&&(i=(o=o.trim()).charCodeAt(0)),i){case $:switch(ye+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(f,"$1"+e.trim())}break;case G:switch(o.charCodeAt(1)){case 103:if(be>0&&ye>0)return o.replace(p,"$1").replace(f,"$1"+Le);break;default:return e.trim()+o.replace(f,"$1"+e.trim())}default:if(n*ye>0&&o.indexOf("\f")>0)return o.replace(f,(e.charCodeAt(0)===G?"":"$1")+e.trim())}return e+o}function Be(e,t,n,r){var c,s=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Re){case 0:break;case H:if(110!==e.charCodeAt(10))break;default:for(var i=o.split((o="",u)),a=0,n=0,t=i.length;a<t;n=0,++a){for(var c=i[a],s=c.split(l);c=s[n];){var f=c.charCodeAt(0);if(1===Re&&(f>q&&f<90||f>96&&f<123||f===Y||f===H&&c.charCodeAt(1)!==H))switch(isNaN(parseFloat(c))+(-1!==c.indexOf("("))){case 1:switch(c){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:c+=De}}s[n++]=c}o+=(0===a?"":",")+s.join(" ")}}return o=r+o+";",1===me||2===me&&qe(o,1)?O+o+o:o}(f);if(0===me||2===me&&!qe(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?O+f+f:f;case 951:return 116===f.charCodeAt(3)?O+f+f:f;case 963:return 110===f.charCodeAt(5)?O+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return O+f+f;case 978:return O+f+N+f+f;case 1019:case 983:return O+f+N+f+P+f+f;case 883:return f.charCodeAt(8)===H?O+f+f:f.indexOf("image-set(",11)>0?f.replace(C,"$1"+O+"$2")+f:f;case 932:if(f.charCodeAt(4)===H)switch(f.charCodeAt(5)){case 103:return O+"box-"+f.replace("-grow","")+O+f+P+f.replace("grow","positive")+f;case 115:return O+f+P+f.replace("shrink","negative")+f;case 98:return O+f+P+f.replace("basis","preferred-size")+f}return O+f+P+f+f;case 964:return O+f+P+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return c=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),O+"box-pack"+c+O+f+P+"flex-pack"+c+f;case 1005:return i.test(f)?f.replace(o,":"+O)+f.replace(o,":"+N)+f:f;case 1e3:switch(s=(c=f.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(s)){case 226:c=f.replace(k,"tb");break;case 232:c=f.replace(k,"tb-rl");break;case 220:c=f.replace(k,"lr");break;default:return f}return O+f+P+c+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(s=(f=e).length-10,p=(c=(33===f.charCodeAt(s)?f.substring(0,s):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(c.charCodeAt(8)<111)break;case 115:f=f.replace(c,O+c)+";"+f;break;case 207:case 102:f=f.replace(c,O+(p>102?"inline-":"")+"box")+";"+f.replace(c,O+c)+";"+f.replace(c,P+c+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===H)switch(f.charCodeAt(6)){case 105:return c=f.replace("-items",""),O+f+O+"box-"+c+P+"flex-"+c+f;case 115:return O+f+P+"flex-item-"+f.replace(S,"")+f;default:return O+f+P+"flex-line-pack"+f.replace("align-content","").replace(S,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==H||122===f.charCodeAt(4))break;case 931:case 953:if(!0===T.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?Be(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(c,O+c)+f.replace(c,N+c.replace("fill-",""))+f;break;case 962:if(f=O+f+(102===f.charCodeAt(5)?P+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(a,"$1"+O+"$2")+f}return f}function qe(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Me(2!==t?r:r.replace(M,"$1"),o,t)}function We(e,t){var n=Be(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(E," or ($1)").substring(4):"("+t+")"}function $e(e,t,n,r,o,i,a,u,l,c){for(var s,f=0,p=t;f<Se;++f)switch(s=Ee[f].call(Ve,e,p,n,r,o,i,a,u,l,c)){case void 0:case!1:case!0:case null:break;default:p=s}if(p!==t)return p}function He(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case Z:if(e===V&&r.charCodeAt(o-1)===V&&t+2!==o)return o+1;break;case U:if(e===Z)return o+1}return o}function Ye(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Re=0|n;break;case"global":be=0|n;break;case"cascade":ye=0|n;break;case"compress":we=0|n;break;case"semicolon":xe=0|n;break;case"preserve":ke=0|n;break;case"prefix":Me=null,n?"function"!=typeof n?me=1:(me=2,Me=n):me=0}}return Ye}function Ve(t,n){if(void 0!==this&&this.constructor===Ve)return e(t);var o=t,i=o.charCodeAt(0);i<33&&(i=(o=o.trim()).charCodeAt(0)),Re>0&&(De=o.replace(h,i===L?"":"-")),i=1,1===ye?Le=o:Ie=o;var a,u=[Le];Se>0&&void 0!==(a=$e(Ce,n,u,u,ge,de,0,0,0,0))&&"string"==typeof a&&(n=a);var l=ze(_e,u,n,0,0);return Se>0&&void 0!==(a=$e(Te,l,u,u,ge,de,l.length,0,0,0))&&"string"!=typeof(l=a)&&(i=0),De="",Le="",Ie="",ve=0,ge=1,de=1,we*i==0?l:l.replace(r,"").replace(y,"").replace(m,"$1").replace(b,"$1").replace(w," ")}return Ve.use=function e(t){switch(t){case void 0:case null:Se=Ee.length=0;break;default:if("function"==typeof t)Ee[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else je=0|!!t}return e},Ve.set=Ye,void 0!==t&&Ye(t),Ve}(null)},function(e,t,n){"use strict";var r=function(e,t){return e===t};t.a=function(e,t){var n;void 0===t&&(t=r);var o,i=[],a=!1,u=function(e,n){return t(e,i[n])};return function(){for(var t=arguments.length,r=new Array(t),l=0;l<t;l++)r[l]=arguments[l];return a&&n===this&&r.length===i.length&&r.every(u)?o:(o=e.apply(this,r),a=!0,n=this,i=r,o)}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))o.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(n){var r=new Uint8Array(16);e.exports=function(){return n(r),r}}else{var o=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),o[t]=e>>>((3&t)<<3)&255;return o}}},function(e,t){for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);e.exports=function(e,t){var r=t||0,o=n;return[o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]]].join("")}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=l(n(41)),i=l(n(0)),a=l(n(2)),u=(l(n(42)),n(43));function l(e){return e&&e.__esModule?e:{default:e}}a.default.any,a.default.func,a.default.node;var c=function(e){function t(n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,n,o));return i.performAppear=function(e,t){i.currentlyTransitioningKeys[e]=!0,t.componentWillAppear?t.componentWillAppear(i._handleDoneAppearing.bind(i,e,t)):i._handleDoneAppearing(e,t)},i._handleDoneAppearing=function(e,t){t.componentDidAppear&&t.componentDidAppear(),delete i.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(i.props.children);n&&n.hasOwnProperty(e)||i.performLeave(e,t)},i.performEnter=function(e,t){i.currentlyTransitioningKeys[e]=!0,t.componentWillEnter?t.componentWillEnter(i._handleDoneEntering.bind(i,e,t)):i._handleDoneEntering(e,t)},i._handleDoneEntering=function(e,t){t.componentDidEnter&&t.componentDidEnter(),delete i.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(i.props.children);n&&n.hasOwnProperty(e)||i.performLeave(e,t)},i.performLeave=function(e,t){i.currentlyTransitioningKeys[e]=!0,t.componentWillLeave?t.componentWillLeave(i._handleDoneLeaving.bind(i,e,t)):i._handleDoneLeaving(e,t)},i._handleDoneLeaving=function(e,t){t.componentDidLeave&&t.componentDidLeave(),delete i.currentlyTransitioningKeys[e];var n=(0,u.getChildMapping)(i.props.children);n&&n.hasOwnProperty(e)?i.keysToEnter.push(e):i.setState(function(t){var n=r({},t.children);return delete n[e],{children:n}})},i.childRefs=Object.create(null),i.state={children:(0,u.getChildMapping)(n.children)},i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.currentlyTransitioningKeys={},this.keysToEnter=[],this.keysToLeave=[]},t.prototype.componentDidMount=function(){var e=this.state.children;for(var t in e)e[t]&&this.performAppear(t,this.childRefs[t])},t.prototype.componentWillReceiveProps=function(e){var t=(0,u.getChildMapping)(e.children),n=this.state.children;for(var r in this.setState({children:(0,u.mergeChildMappings)(n,t)}),t){var o=n&&n.hasOwnProperty(r);!t[r]||o||this.currentlyTransitioningKeys[r]||this.keysToEnter.push(r)}for(var i in n){var a=t&&t.hasOwnProperty(i);!n[i]||a||this.currentlyTransitioningKeys[i]||this.keysToLeave.push(i)}},t.prototype.componentDidUpdate=function(){var e=this,t=this.keysToEnter;this.keysToEnter=[],t.forEach(function(t){return e.performEnter(t,e.childRefs[t])});var n=this.keysToLeave;this.keysToLeave=[],n.forEach(function(t){return e.performLeave(t,e.childRefs[t])})},t.prototype.render=function(){var e=this,t=[],n=function(n){var r=e.state.children[n];if(r){var a="string"!=typeof r.ref,u=e.props.childFactory(r),l=function(t){e.childRefs[n]=t};u===r&&a&&(l=(0,o.default)(r.ref,l)),t.push(i.default.cloneElement(u,{key:n,ref:l}))}};for(var a in this.state.children)n(a);var u=r({},this.props);return delete u.transitionLeave,delete u.transitionName,delete u.transitionAppear,delete u.transitionEnter,delete u.childFactory,delete u.transitionLeaveTimeout,delete u.transitionEnterTimeout,delete u.transitionAppearTimeout,delete u.component,i.default.createElement(this.props.component,u,t)},t}(i.default.Component);c.displayName="TransitionGroup",c.propTypes={},c.defaultProps={component:"span",childFactory:function(e){return e}},t.default=c,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=r,e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.nameShape=void 0,t.transitionTimeout=function(e){var t="transition"+e+"Timeout",n="transition"+e;return function(e){if(e[n]){if(null==e[t])return new Error(t+" wasn't supplied to CSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!=typeof e[t])return new Error(t+" must be a number (in milliseconds)")}return null}};o(n(0));var r=o(n(2));function o(e){return e&&e.__esModule?e:{default:e}}t.nameShape=r.default.oneOfType([r.default.string,r.default.shape({enter:r.default.string,leave:r.default.string,active:r.default.string}),r.default.shape({enter:r.default.string,enterActive:r.default.string,leave:r.default.string,leaveActive:r.default.string,appear:r.default.string,appearActive:r.default.string})])},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,c=[],s=!1,f=-1;function p(){s&&l&&(s=!1,l.length?c=l.concat(c):f=-1,c.length&&h())}function h(){if(!s){var e=u(p);s=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new d(e,t)),1!==c.length||s||u(h)},d.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){var r,o,i,a,u,l,c;e.exports=(r=n(0),o=n(2),i=n(27),a=n(28),u=n(31),l=n(36),c=n(39),function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=6)}([function(e,t){e.exports=r},function(e,t){e.exports=o},function(e,t){e.exports=i},function(e,t){e.exports=a},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"})).concat([o]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=h[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(f(r.parts[i],t))}else{for(var a=[],i=0;i<r.parts.length;i++)a.push(f(r.parts[i],t));h[r.id]={id:r.id,refs:1,parts:a}}}}function o(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],u=i[1],l=i[2],c=i[3],s={css:u,media:l,sourceMap:c};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function i(e,t){var n=g(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=m[m.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),m.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=g(e.insertAt.before,n);n.insertBefore(t,o)}}function a(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=m.indexOf(e);t>=0&&m.splice(t,1)}function u(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var n=s();n&&(e.attrs.nonce=n)}return c(t,e.attrs),i(e,t),t}function l(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",c(t,e.attrs),i(e,t),t}function c(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function s(){return n.nc}function f(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var c=y++;n=v||(v=u(t)),r=p.bind(null,n,c,!1),o=p.bind(null,n,c,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=b(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(a),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=u(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){a(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function p(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}var h={},d=function(e){var t;return function(){return void 0===t&&(t=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),t}}(),g=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),v=null,y=0,m=[],b=n(17);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=d()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=o(e,t);return r(n,t),function(e){for(var i=[],a=0;a<n.length;a++){var u=n[a],l=h[u.id];l.refs--,i.push(l)}e&&r(o(e,t),t);for(var a=0;a<i.length;a++){var l=i[a];if(0===l.refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var w=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.treeUtil=t.Tree=void 0;var r=n(7),o=function(e){return e&&e.__esModule?e:{default:e}}(r),i=n(23),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(i);t.Tree=o.default,t.treeUtil=a,t.default=o.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),c=n(1),s=r(c),f=n(2),p=n(8),h=r(p),d=n(9),g=r(d),v=n(3),y=r(v),m=n(10),b=r(m),w=n(12),x=r(w),k=n(18),_=r(k);n(21);var E=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),u=0;u<i;u++)a[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(a))),r.state={data:r.assignInternalProperties((0,h.default)(r.props.data)),rd3tSvgClassName:"_"+y.default.v4(),rd3tGClassName:"_"+y.default.v4()},r.internalState={initialRender:!0,targetNode:null,isTransitioning:!1,d3:{scale:r.props.zoom,translate:r.props.translate}},r.handleNodeToggle=function(e,t){var n=(0,h.default)(r.state.data),o=r.findNodesById(e,n,[]),i=o[0];t.persist(),r.props.collapsible&&!r.state.isTransitioning?(i._collapsed?(r.expandNode(i),r.props.shouldCollapseNeighborNodes&&r.collapseNeighborNodes(i,n)):r.collapseNode(i),r.setState({data:n,isTransitioning:!0},function(){return r.handleOnClickCb(i,t)}),setTimeout(function(){return r.setState({isTransitioning:!1})},r.props.transitionDuration+10),r.internalState.targetNode=i):r.handleOnClickCb(i,t)},r.handleOnClickCb=function(e,t){var n=r.props.onClick;n&&"function"==typeof n&&n((0,h.default)(e),t)},r.handleOnMouseOverCb=function(e,t){var n=r.props.onMouseOver;if(n&&"function"==typeof n){var o=(0,h.default)(r.state.data),i=r.findNodesById(e,o,[]),a=i[0];t.persist(),n((0,h.default)(a),t)}},r.handleOnMouseOutCb=function(e,t){var n=r.props.onMouseOut;if(n&&"function"==typeof n){var o=(0,h.default)(r.state.data),i=r.findNodesById(e,o,[]),a=i[0];t.persist(),n((0,h.default)(a),t)}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentWillMount",value:function(){this.internalState.d3=this.calculateD3Geometry(this.props)}},{key:"componentDidMount",value:function(){this.bindZoomListener(this.props),this.internalState.initialRender=!1}},{key:"componentDidUpdate",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.bindZoomListener(this.props),"function"==typeof this.props.onUpdate&&(this.props.onUpdate({node:this.internalState.targetNode?(0,h.default)(this.internalState.targetNode):null,zoom:this.internalState.d3.scale,translate:this.internalState.d3.translate}),this.internalState.targetNode=null)}},{key:"componentWillReceiveProps",value:function(e){this.props.data!==e.data&&this.setState({data:this.assignInternalProperties((0,h.default)(e.data))}),this.internalState.d3=this.calculateD3Geometry(e),(0,g.default)(this.props.translate,e.translate)&&(0,g.default)(this.props.scaleExtent,e.scaleExtent)&&this.props.zoom===e.zoom||this.bindZoomListener(e)}},{key:"setInitialTreeDepth",value:function(e,t){e.forEach(function(e){e._collapsed=e.depth>=t})}},{key:"bindZoomListener",value:function(e){var t=this,n=e.zoomable,r=e.scaleExtent,o=e.translate,i=e.zoom,a=e.onUpdate,u=this.state,l=u.rd3tSvgClassName,c=u.rd3tGClassName,s=(0,f.select)("."+l),p=(0,f.select)("."+c);n&&s.call(f.behavior.zoom().scaleExtent([r.min,r.max]).on("zoom",function(){p.attr("transform","translate("+f.event.translate+") scale("+f.event.scale+")"),"function"==typeof a&&(a({node:null,zoom:f.event.scale,translate:{x:f.event.translate[0],y:f.event.translate[1]}}),t.internalState.d3.scale=f.event.scale,t.internalState.d3.translate={x:f.event.translate[0],y:f.event.translate[1]})}).scale(i).translate([o.x,o.y]))}},{key:"assignInternalProperties",value:function(e){var t=this;return(Array.isArray(e)?e:[e]).map(function(e){return e.id=y.default.v4(),void 0===e._collapsed&&(e._collapsed=!1),e.children&&e.children.length>0&&(e.children=t.assignInternalProperties(e.children),e._children=e.children),e})}},{key:"findNodesById",value:function(e,t,n){var r=this;return n.length>0?n:(n=n.concat(t.filter(function(t){return t.id===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesById(e,t._children,n))}),n)}},{key:"findNodesAtDepth",value:function(e,t,n){var r=this;return n=n.concat(t.filter(function(t){return t.depth===e})),t.forEach(function(t){t._children&&t._children.length>0&&(n=r.findNodesAtDepth(e,t._children,n))}),n}},{key:"collapseNode",value:function(e){var t=this;e._collapsed=!0,e._children&&e._children.length>0&&e._children.forEach(function(e){t.collapseNode(e)})}},{key:"expandNode",value:function(e){e._collapsed=!1}},{key:"collapseNeighborNodes",value:function(e,t){var n=this;this.findNodesAtDepth(e.depth,t,[]).filter(function(t){return t.id!==e.id}).forEach(function(e){return n.collapseNode(e)})}},{key:"generateTree",value:function(){var e=this.props,t=e.initialDepth,n=e.useCollapseData,r=e.depthFactor,o=e.separation,i=e.nodeSize,a=e.orientation,u=f.layout.tree().nodeSize("horizontal"===a?[i.y,i.x]:[i.x,i.y]).separation(function(e,t){return e.parent.id===t.parent.id?o.siblings:o.nonSiblings}).children(function(e){return e._collapsed?null:e._children}),l=this.state.data[0],c=u.nodes(l);return!1===n&&void 0!==t&&this.internalState.initialRender&&(this.setInitialTreeDepth(c,t),c=u.nodes(l)),r&&c.forEach(function(e){e.y=e.depth*r}),{nodes:c,links:u.links(c)}}},{key:"calculateD3Geometry",value:function(e){var t=void 0;return t=e.zoom>e.scaleExtent.max?e.scaleExtent.max:e.zoom<e.scaleExtent.min?e.scaleExtent.min:e.zoom,{translate:e.translate,scale:t}}},{key:"render",value:function(){var e=this,t=this.generateTree(),n=t.nodes,r=t.links,o=this.state,a=o.rd3tSvgClassName,u=o.rd3tGClassName,c=this.props,s=c.nodeSvgShape,f=c.nodeLabelComponent,p=c.orientation,h=c.pathFunc,d=c.transitionDuration,g=c.zoomable,v=c.textLayout,m=c.nodeSize,w=c.depthFactor,k=c.initialDepth,E=c.separation,S=c.circleRadius,M=c.allowForeignObjects,T=c.styles,C=this.internalState.d3,O=C.translate,N=C.scale,P=i({},m,E,{depthFactor:w,initialDepth:k});return l.default.createElement("div",{className:"rd3t-tree-container "+(g?"rd3t-grabbable":void 0)},l.default.createElement("svg",{className:a,width:"100%",height:"100%"},l.default.createElement(b.default,{transitionDuration:d,component:"g",className:u,transform:"translate("+O.x+","+O.y+") scale("+N+")"},r.map(function(e){return l.default.createElement(_.default,{key:y.default.v4(),orientation:p,pathFunc:h,linkData:e,transitionDuration:d,styles:T.links})}),n.map(function(t){return l.default.createElement(x.default,{key:t.id,nodeSvgShape:i({},s,t.nodeSvgShape),nodeLabelComponent:f,nodeSize:m,orientation:p,transitionDuration:d,nodeData:t,name:t.name,attributes:t.attributes,onClick:e.handleNodeToggle,onMouseOver:e.handleOnMouseOverCb,onMouseOut:e.handleOnMouseOutCb,textLayout:v,circleRadius:S,subscriptions:P,allowForeignObjects:M,styles:T.nodes})}))))}}]),t}(l.default.Component);t.default=E,E.defaultProps={nodeSvgShape:{shape:"circle",shapeProps:{r:10}},nodeLabelComponent:null,onClick:void 0,onMouseOver:void 0,onMouseOut:void 0,onUpdate:void 0,orientation:"horizontal",translate:{x:0,y:0},pathFunc:"diagonal",transitionDuration:500,depthFactor:void 0,collapsible:!0,useCollapseData:!1,initialDepth:void 0,zoomable:!0,zoom:1,scaleExtent:{min:.1,max:1},nodeSize:{x:140,y:140},separation:{siblings:1,nonSiblings:2},textLayout:{textAnchor:"start",x:10,y:-10,transform:void 0},allowForeignObjects:!1,shouldCollapseNeighborNodes:!1,circleRadius:void 0,styles:{}},E.propTypes={data:s.default.oneOfType([s.default.array,s.default.object]).isRequired,nodeSvgShape:s.default.shape({shape:s.default.string,shapeProps:s.default.object}),nodeLabelComponent:s.default.object,onClick:s.default.func,onMouseOver:s.default.func,onMouseOut:s.default.func,onUpdate:s.default.func,orientation:s.default.oneOf(["horizontal","vertical"]),translate:s.default.shape({x:s.default.number,y:s.default.number}),pathFunc:s.default.oneOfType([s.default.oneOf(["diagonal","elbow","straight"]),s.default.func]),transitionDuration:s.default.number,depthFactor:s.default.number,collapsible:s.default.bool,useCollapseData:s.default.bool,initialDepth:s.default.number,zoomable:s.default.bool,zoom:s.default.number,scaleExtent:s.default.shape({min:s.default.number,max:s.default.number}),nodeSize:s.default.shape({x:s.default.number,y:s.default.number}),separation:s.default.shape({siblings:s.default.number,nonSiblings:s.default.number}),textLayout:s.default.object,allowForeignObjects:s.default.bool,shouldCollapseNeighborNodes:s.default.bool,circleRadius:s.default.number,styles:s.default.shape({nodes:s.default.object,links:s.default.object})},e.exports=t.default},function(e,t){e.exports=u},function(e,t){e.exports=l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),u=r(a),l=n(1),c=r(l),s=n(11),f=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),u=0;u<i;u++)a[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(a))),r.state={enableTransitions:r.props.transitionDuration>0},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentWillReceiveProps",value:function(e){e.transitionDuration!==this.props.transitionDuration&&this.setState({enableTransitions:e.transitionDuration>0})}},{key:"render",value:function(){return this.state.enableTransitions?u.default.createElement(s.TransitionGroup,{component:this.props.component,className:this.props.className,transform:this.props.transform},this.props.children):u.default.createElement("g",{className:this.props.className,transform:this.props.transform},this.props.children)}}]),t}(u.default.Component);t.default=f,f.defaultProps={component:"g"},f.propTypes={transitionDuration:c.default.number.isRequired,component:c.default.string,className:c.default.string.isRequired,transform:c.default.string.isRequired,children:c.default.array.isRequired},e.exports=t.default},function(e,t){e.exports=c},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),c=n(1),s=r(c),f=n(2),p=n(13),h=r(p),d=n(14),g=r(d);n(15);var v=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,u=Array(a),c=0;c<a;c++)u[c]=arguments[c];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.state={transform:r.setTransform(r.props.nodeData,r.props.orientation,!0),initialStyle:{opacity:0}},r.shouldNodeTransform=function(e,t){return t.subscriptions!==e.subscriptions||t.nodeData.x!==e.nodeData.x||t.nodeData.y!==e.nodeData.y||t.orientation!==e.orientation},r.renderNodeElement=function(e){var t=r.props,n=t.circleRadius,o=t.nodeSvgShape;return n?l.default.createElement("circle",{r:n,style:e.circle}):"none"===o.shape?null:l.default.createElement(o.shape,i({},e.circle,o.shapeProps))},r.handleClick=function(e){r.props.onClick(r.props.nodeData.id,e)},r.handleOnMouseOver=function(e){r.props.onMouseOver(r.props.nodeData.id,e)},r.handleOnMouseOut=function(e){r.props.onMouseOut(r.props.nodeData.id,e)},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){var e=this.props,t=e.nodeData,n=e.orientation,r=e.transitionDuration,o=this.setTransform(t,n);this.applyTransform(o,r)}},{key:"componentWillUpdate",value:function(e){var t=this.setTransform(e.nodeData,e.orientation);this.applyTransform(t,e.transitionDuration)}},{key:"shouldComponentUpdate",value:function(e){return this.shouldNodeTransform(this.props,e)}},{key:"setTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.x,o=e.y,i=e.parent;if(n){var a=i?i.x:0,u=i?i.y:0;return"horizontal"===t?"translate("+u+","+a+")":"translate("+a+","+u+")"}return"horizontal"===t?"translate("+o+","+r+")":"translate("+r+","+o+")"}},{key:"applyTransform",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){};0===t?((0,f.select)(this.node).attr("transform",e).style("opacity",n),r()):(0,f.select)(this.node).transition().duration(t).attr("transform",e).style("opacity",n).each("end",r)}},{key:"componentWillLeave",value:function(e){var t=this.props,n=t.nodeData,r=t.orientation,o=t.transitionDuration,i=this.setTransform(n,r,!0);this.applyTransform(i,o,0,e)}},{key:"render",value:function(){var e=this,t=this.props,n=t.nodeData,r=t.nodeSize,o=t.nodeLabelComponent,a=t.allowForeignObjects,u=t.styles,c=n._children?i({},u.node):i({},u.leafNode);return l.default.createElement("g",{id:n.id,ref:function(t){e.node=t},style:this.state.initialStyle,className:n._children?"nodeBase":"leafNodeBase",transform:this.state.transform,onClick:this.handleClick,onMouseOver:this.handleOnMouseOver,onMouseOut:this.handleOnMouseOut},this.renderNodeElement(c),a&&o?l.default.createElement(g.default,i({nodeData:n,nodeSize:r},o)):l.default.createElement(h.default,i({},this.props,{nodeStyle:c})))}}]),t}(l.default.Component);t.default=v,v.defaultProps={nodeLabelComponent:null,attributes:void 0,circleRadius:void 0,styles:{node:{circle:{},name:{},attributes:{}},leafNode:{circle:{},name:{},attributes:{}}}},v.propTypes={nodeData:s.default.object.isRequired,nodeSvgShape:s.default.object.isRequired,nodeLabelComponent:s.default.object,nodeSize:s.default.object.isRequired,orientation:s.default.oneOf(["horizontal","vertical"]).isRequired,transitionDuration:s.default.number.isRequired,onClick:s.default.func.isRequired,onMouseOver:s.default.func.isRequired,onMouseOut:s.default.func.isRequired,name:s.default.string.isRequired,attributes:s.default.object,textLayout:s.default.object.isRequired,subscriptions:s.default.object.isRequired,allowForeignObjects:s.default.bool.isRequired,circleRadius:s.default.number,styles:s.default.object},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),a=r(i),u=n(3),l=r(u),c=n(1),s=r(c),f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"render",value:function(){var e=this.props,t=e.name,n=e.nodeStyle,r=e.textLayout,o=e.attributes;return a.default.createElement("g",null,a.default.createElement("text",{className:"nodeNameBase",style:n.name,textAnchor:r.textAnchor,x:r.x,y:r.y,transform:r.transform,dy:".35em"},t),a.default.createElement("text",{className:"nodeAttributesBase",y:r.y+10,textAnchor:r.textAnchor,transform:r.transform,style:n.attributes},o&&Object.keys(o).map(function(e){return a.default.createElement("tspan",{x:r.x,dy:"1.2em",key:l.default.v4()},e,": ",o[e])})))}}]),t}(a.default.PureComponent);t.default=f,f.defaultProps={attributes:void 0},f.propTypes={name:s.default.string.isRequired,attributes:s.default.object,textLayout:s.default.object.isRequired,nodeStyle:s.default.object.isRequired},e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.BASE_MARGIN=void 0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),u=r(a),l=n(1),c=r(l),s=t.BASE_MARGIN=24,f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.nodeData,n=e.nodeSize,r=e.render,i=e.foreignObjectWrapper;return u.default.createElement("foreignObject",o({width:n.x-s,height:n.y-s},i),u.default.cloneElement(r,{nodeData:t}))}}]),t}(u.default.PureComponent);t.default=f,f.defaultProps={foreignObjectWrapper:{}},f.propTypes={render:c.default.oneOfType([c.default.element,c.default.node]).isRequired,nodeData:c.default.object.isRequired,nodeSize:c.default.shape({x:c.default.number,y:c.default.number}).isRequired,foreignObjectWrapper:c.default.object}},function(e,t,n){var r=n(16);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".nodeBase {\n  cursor: pointer;\n  fill: #777;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.leafNodeBase {\n  cursor: pointer;\n  fill: transparent;\n  stroke: #000;\n  stroke-width: 2;\n}\n\n.nodeNameBase {\n  fill: #000;\n  stroke: #000;\n  stroke-width: 1;\n}\n\n.nodeAttributesBase {\n  fill: #777;\n  stroke: #777;\n  stroke-width: 1;\n  font-size: smaller;\n}\n",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(0),l=r(u),c=n(1),s=r(c),f=n(2);n(19);var p=function(e){function t(){var e,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),u=0;u<i;u++)a[u]=arguments[u];return n=r=o(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(a))),r.state={initialStyle:{opacity:0}},o(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),a(t,[{key:"componentDidMount",value:function(){this.applyOpacity(1,this.props.transitionDuration)}},{key:"componentWillLeave",value:function(e){this.applyOpacity(0,this.props.transitionDuration,e)}},{key:"applyOpacity",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};0===t?((0,f.select)(this.link).style("opacity",e),n()):(0,f.select)(this.link).transition().duration(t).style("opacity",e).each("end",n)}},{key:"drawDiagonalPath",value:function(e,t){return f.svg.diagonal().projection(function(e){return"horizontal"===t?[e.y,e.x]:[e.x,e.y]})(e)}},{key:"drawStraightPath",value:function(e,t){var n=f.svg.line().interpolate("basis").x(function(e){return e.x}).y(function(e){return e.y}),r=[{x:e.source.x,y:e.source.y},{x:e.target.x,y:e.target.y}];return"horizontal"===t&&(r=[{x:e.source.y,y:e.source.x},{x:e.target.y,y:e.target.x}]),n(r)}},{key:"drawElbowPath",value:function(e,t){return"horizontal"===t?"M"+e.source.y+","+e.source.x+"V"+e.target.x+"H"+e.target.y:"M"+e.source.x+","+e.source.y+"V"+e.target.y+"H"+e.target.x}},{key:"drawPath",value:function(){var e=this.props,t=e.linkData,n=e.orientation,r=e.pathFunc;return"function"==typeof r?r(t,n):"elbow"===r?this.drawElbowPath(t,n):"straight"===r?this.drawStraightPath(t,n):this.drawDiagonalPath(t,n)}},{key:"render",value:function(){var e=this,t=this.props.styles;return l.default.createElement("path",{ref:function(t){e.link=t},style:i({},this.state.initialStyle,t),className:"linkBase",d:this.drawPath()})}}]),t}(l.default.PureComponent);t.default=p,p.defaultProps={styles:{}},p.propTypes={linkData:s.default.object.isRequired,orientation:s.default.oneOf(["horizontal","vertical"]).isRequired,pathFunc:s.default.oneOfType([s.default.oneOf(["diagonal","elbow","straight"]),s.default.func]).isRequired,transitionDuration:s.default.number.isRequired,styles:s.default.object},e.exports=t.default},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".linkBase {\n  fill: none;\n  stroke: #000;\n}",""])},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(5)(r,o),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(4)(void 0)).push([e.i,".rd3t-tree-container {\n  width: 100%;\n  height: 100%;\n}\n\n.rd3t-grabbable {\n  cursor: move; /* fallback if grab cursor is unsupported */\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.rd3t-grabbable:active {\n    cursor: grabbing;\n    cursor: -moz-grabbing;\n    cursor: -webkit-grabbing;\n}\n",""])},function(e,t,n){"use strict";function r(e,t){var n={},r=function(e){return n[e]||(n[e]={name:e}),n[e]},o=function(e,t){return n[e]||(n[e]={name:e,attributes:t}),n[e]};return e.forEach(function(e){if(t){var n={};t.forEach(function(t){n[t]=e[t]}),e.attributes=n}e.source=r(e.parent),e.target=o(e.child,e.attributes);var i=e.source,u=e.target;i.id=a.default.v4(),u.id=a.default.v4(),u.parent=i.name||null,i._collapsed=u._collapsed=!1,i._children?i._children.push(u):i._children=[u]}),[e.filter(function(e){return!e.source.parent})[0].source]}Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),i=n(3),a=function(e){return e&&e.__esModule?e:{default:e}}(i);t.default={parseCSV:function(e,t){return new Promise(function(n,i){try{(0,o.csv)(e,function(e){return n(r(e,t))})}catch(e){i(e)}})},parseJSON:function(e){return new Promise(function(t,n){try{(0,o.json)(e,function(e){return t([e])})}catch(e){n(e)}})},parseFlatJSON:function(e,t){return new Promise(function(n,i){try{(0,o.json)(e,function(e){return n(r(e,t))})}catch(e){i(e)}})},generateHierarchy:function(e){return r(e)}},e.exports=t.default}]))},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,i,a,u,l,c,s,f){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,n){e.exports=n.p+"4264b511404f82c04369b8f663e73bc1.png"},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=o},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(8),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,h=o?Symbol.for("react.forward_ref"):60112,d=o?Symbol.for("react.suspense"):60113,g=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function m(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function _(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&m("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var E=_.prototype=new k;E.constructor=_,r(E,x.prototype),E.isPureReactComponent=!0;var S={current:null,currentDispatcher:null},M=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r=void 0,o={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)M.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:i,type:e,key:a,ref:u,props:o,_owner:S.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,P=[];function A(e,t,n,r){if(P.length){var o=P.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function R(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case a:l=!0}}if(l)return r(o,t,""===n?"."+D(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+D(u=t[c],c);l+=e(u,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(u=t.next()).done;)l+=e(u=u.value,s=n+D(u,c++),r,o);else"object"===u&&m("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?z(e,r,n,function(e){return e}):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function z(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),R(e,L,t=A(t,i,r,o)),j(t)}var U={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return z(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,I,t=A(null,null,t,n)),j(t)},count:function(e){return R(e,function(){return null},null)},toArray:function(e){var t=[];return z(e,t,null,function(e){return e}),t},only:function(e){return O(e)||m("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:_,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:h,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:g,type:e,compare:void 0===t?null:t}},Fragment:u,StrictMode:l,Suspense:d,createElement:C,cloneElement:function(e,t,n){null==e&&m("267",e);var o=void 0,a=r({},e.props),u=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=S.current),void 0!==t.key&&(u=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)M.call(t,o)&&!T.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:u,ref:l,props:a,_owner:c}},createFactory:function(e){var t=C.bind(null,e);return t.type=e,t},isValidElement:O,version:"16.7.0",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:S,assign:r}},F={default:U},B=F&&U||F;e.exports=B.default||B},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(8),i=n(23);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var u=!1,l=null,c=!1,s=null,f={onError:function(e){u=!0,l=e}};function p(e,t,n,r,o,i,a,c,s){u=!1,l=null,function(e,t,n,r,o,i,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var h=null,d={};function g(){if(h)for(var e in d){var t=d[e],n=h.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],u=t,l=r;m.hasOwnProperty(l)&&a("99",l),m[l]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],u,l);o=!0}else i.registrationName?(v(i.registrationName,u,l),o=!0):o=!1;o||a("98",r,e)}}}function v(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],m={},b={},w={},x=null,k=null,_=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=_(n),function(e,t,n,r,o,i,f,h,d){if(p.apply(this,arguments),u){if(u){var g=l;u=!1,l=null}else a("198"),g=void 0;c||(c=!0,s=g)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function M(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var T=null;function C(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){h&&a("101"),h=Array.prototype.slice.call(e),g()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];d.hasOwnProperty(t)&&d[t]===r||(d[t]&&a("102",t),d[t]=r,n=!0)}n&&g()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function P(e){if(null!==e&&(T=S(T,e)),e=T,T=null,e&&(M(e,C),T&&a("95"),c))throw e=s,c=!1,s=null,e}var A=Math.random().toString(36).slice(2),j="__reactInternalInstance$"+A,R="__reactEventHandlers$"+A;function D(e){if(e[j])return e[j];for(;!e[j];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[j]).tag||6===e.tag?e:null}function I(e){return!(e=e[j])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function z(e){return e[R]||null}function U(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=U(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function q(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){e&&e.dispatchConfig.registrationName&&q(e._targetInst,null,e)}function $(e){M(e,B)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function Y(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var V={animationend:Y("Animation","AnimationEnd"),animationiteration:Y("Animation","AnimationIteration"),animationstart:Y("Animation","AnimationStart"),transitionend:Y("Transition","TransitionEnd")},Q={},G={};function K(e){if(Q[e])return Q[e];if(!V[e])return e;var t,n=V[e];for(t in n)if(n.hasOwnProperty(t)&&t in G)return Q[e]=n[t];return e}H&&(G=document.createElement("div").style,"AnimationEvent"in window||(delete V.animationend.animation,delete V.animationiteration.animation,delete V.animationstart.animation),"TransitionEvent"in window||delete V.transitionend.transition);var X=K("animationend"),Z=K("animationiteration"),J=K("animationstart"),ee=K("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function ue(){return!1}function le(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:ue,this.isPropagationStopped=ue,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var pe=le.extend({data:null}),he=le.extend({data:null}),de=[9,13,27,32],ge=H&&"CompositionEvent"in window,ve=null;H&&"documentMode"in document&&(ve=document.documentMode);var ye=H&&"TextEvent"in window&&!ve,me=H&&(!ge||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==de.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function _e(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ge)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ee?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(me&&"ko"!==n.locale&&(Ee||o!==we.compositionStart?o===we.compositionEnd&&Ee&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=_e(n))&&(o.data=i),$(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return _e(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!ge&&ke(e,t)?(e=ie(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return me&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=he.getPooled(we.beforeInput,t,n,r)).data=e,$(t)):t=null,null===i?t:null===t?i:[i,t]}},Me=null,Te=null,Ce=null;function Oe(e){if(e=k(e)){"function"!=typeof Me&&a("280");var t=x(e.stateNode);Me(e.stateNode,e.type,t)}}function Ne(e){Te?Ce?Ce.push(e):Ce=[e]:Te=e}function Pe(){if(Te){var e=Te,t=Ce;if(Ce=Te=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Ae(e,t){return e(t)}function je(e,t,n){return e(t,n)}function Re(){}var De=!1;function Ie(e,t){if(De)return e(t);De=!0;try{return Ae(e,t)}finally{De=!1,(null!==Te||null!==Ce)&&(Re(),Pe())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Ue(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function qe(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function We(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,He=/^(.*)[\\\/]/,Ye="function"==typeof Symbol&&Symbol.for,Ve=Ye?Symbol.for("react.element"):60103,Qe=Ye?Symbol.for("react.portal"):60106,Ge=Ye?Symbol.for("react.fragment"):60107,Ke=Ye?Symbol.for("react.strict_mode"):60108,Xe=Ye?Symbol.for("react.profiler"):60114,Ze=Ye?Symbol.for("react.provider"):60109,Je=Ye?Symbol.for("react.context"):60110,et=Ye?Symbol.for("react.concurrent_mode"):60111,tt=Ye?Symbol.for("react.forward_ref"):60112,nt=Ye?Symbol.for("react.suspense"):60113,rt=Ye?Symbol.for("react.memo"):60115,ot=Ye?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ge:return"Fragment";case Qe:return"Portal";case Xe:return"Profiler";case Ke:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Je:return"Context.Consumer";case Ze:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case ot:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ut(e.type);n=null,r&&(n=ut(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function ht(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var dt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){dt[e]=new ht(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];dt[t]=new ht(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){dt[e]=new ht(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){dt[e]=new ht(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){dt[e]=new ht(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){dt[e]=new ht(e,3,!0,e,null)}),["capture","download"].forEach(function(e){dt[e]=new ht(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){dt[e]=new ht(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){dt[e]=new ht(e,5,!1,e.toLowerCase(),null)});var gt=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=dt.hasOwnProperty(t)?dt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function mt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=mt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=mt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,mt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function _t(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(gt,vt);dt[t]=new ht(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(gt,vt);dt[t]=new ht(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(gt,vt);dt[t]=new ht(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),dt.tabIndex=new ht("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Mt(e,t,n){return(e=le.getPooled(St.change,e,t,n)).type="change",Ne(n),$(e),e}var Tt=null,Ct=null;function Ot(e){P(e)}function Nt(e){if(We(L(e)))return e}function Pt(e,t){if("change"===e)return t}var At=!1;function jt(){Tt&&(Tt.detachEvent("onpropertychange",Rt),Ct=Tt=null)}function Rt(e){"value"===e.propertyName&&Nt(Ct)&&Ie(Ot,e=Mt(Ct,e,Ue(e)))}function Dt(e,t,n){"focus"===e?(jt(),Ct=n,(Tt=t).attachEvent("onpropertychange",Rt)):"blur"===e&&jt()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Ct)}function Lt(e,t){if("click"===e)return Nt(t)}function zt(e,t){if("input"===e||"change"===e)return Nt(t)}H&&(At=Fe("input")&&(!document.documentMode||9<document.documentMode));var Ut={eventTypes:St,_isInputEventSupported:At,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?i=Pt:ze(o)?At?i=zt:(i=It,a=Dt):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return Mt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},Ft=le.extend({view:null,detail:null}),Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Bt[e])&&!!t[e]}function Wt(){return qt}var $t=0,Ht=0,Yt=!1,Vt=!1,Qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Wt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=$t;return $t=e.screenX,Yt?"mousemove"===e.type?e.screenX-t:0:(Yt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Vt?"mousemove"===e.type?e.screenY-t:0:(Vt=!0,0)}}),Gt=Qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Kt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Kt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Qt,u=Kt.mouseLeave,l=Kt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Gt,u=Kt.pointerLeave,l=Kt.pointerEnter,c="pointer");var s=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(u,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=U(a))c++;for(a=0,l=o;l;l=U(l))a++;for(;0<c-a;)t=U(t),c--;for(;0<a-c;)o=U(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=U(t),o=U(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=U(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=U(r);for(r=0;r<t.length;r++)q(t[r],"bubbled",e);for(r=i.length;0<r--;)q(i[r],"captured",n);return[e,n]}},Zt=Object.prototype.hasOwnProperty;function Jt(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var u=o.child;u;){if(u===n)return nn(o),e;if(u===r)return nn(o),t;u=u.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{u=!1;for(var l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}u||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=Ft.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Wt,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Qt.extend({dataTransfer:null}),hn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Wt}),dn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),gn=Qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[Z,"animationIteration"],[J,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},mn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,mn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=mn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=mn[e];if(!o)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=hn;break;case X:case Z:case J:e=on;break;case ee:e=dn;break;case"scroll":e=Ft;break;case"wheel":e=gn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=le}return $(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function _n(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Ue(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,u=0;u<y.length;u++){var l=y[u];l&&(l=l.extractEvents(r,t,i,o))&&(a=S(a,l))}P(a)}}var En=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?Tn:Cn).bind(null,e);t.addEventListener(e,n,!1)}function Mn(e,t){if(!t)return null;var n=(xn(e)?Tn:Cn).bind(null,e);t.addEventListener(e,n,!0)}function Tn(e,t){je(Cn,e,t)}function Cn(e,t){if(En){var n=Ue(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(_n,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Nn=0,Pn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Pn)||(e[Pn]=Nn++,On[e[Pn]]={}),On[e[Pn]]}function jn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function In(){for(var e=window,t=jn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=jn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var zn=H&&"documentMode"in document&&11>=document.documentMode,Un={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Fn=null,Bn=null,qn=null,Wn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Wn||null==Fn||Fn!==jn(n)?null:("selectionStart"in(n=Fn)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},qn&&en(qn,n)?null:(qn=n,(e=le.getPooled(Un.select,Bn,e,t)).type="select",e.target=Fn,$(e),e))}var Hn={eventTypes:Un,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=An(i),o=w.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(ze(i)||"true"===i.contentEditable)&&(Fn=i,Bn=t,qn=null);break;case"blur":qn=Bn=Fn=null;break;case"mousedown":Wn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Wn=!1,$n(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return $n(n,r)}return null}};function Yn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Vn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+mt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Qn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Gn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:mt(n)}}function Kn(e,t){var n=mt(t.value),r=mt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Xn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=z,k=I,_=L,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ut,SelectEventPlugin:Hn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Jn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Jn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function lr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Mn("scroll",e);break;case"focus":case"blur":Mn("focus",e),Mn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&Mn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function hr(){}var dr=null,gr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var mr="function"==typeof setTimeout?setTimeout:void 0,br="function"==typeof clearTimeout?clearTimeout:void 0;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var kr=[],_r=-1;function Er(e){0>_r||(e.current=kr[_r],kr[_r]=null,_r--)}function Sr(e,t){kr[++_r]=e.current,e.current=t}var Mr={},Tr={current:Mr},Cr={current:!1},Or=Mr;function Nr(e,t){var n=e.type.contextTypes;if(!n)return Mr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Pr(e){return null!=(e=e.childContextTypes)}function Ar(e){Er(Cr),Er(Tr)}function jr(e){Er(Cr),Er(Tr)}function Rr(e,t,n){Tr.current!==Mr&&a("168"),Sr(Tr,t),Sr(Cr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",ut(t)||"Unknown",i);return o({},n,r)}function Ir(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Mr,Or=Tr.current,Sr(Tr,t),Sr(Cr,Cr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Dr(e,t,Or),r.__reactInternalMemoizedMergedChildContext=t,Er(Cr),Er(Tr),Sr(Tr,t)):Er(Cr),Sr(Cr,n)}var zr=null,Ur=null;function Fr(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qr(e,t,n,r){return new Br(e,t,n,r)}function Wr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function $r(e,t){var n=e.alternate;return null===n?((n=qr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Hr(e,t,n,r,o,i){var u=2;if(r=e,"function"==typeof e)Wr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Ge:return Yr(n.children,o,i,t);case et:return Vr(n,3|o,i,t);case Ke:return Vr(n,2|o,i,t);case Xe:return(e=qr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=qr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ze:u=10;break e;case Je:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case ot:u=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=qr(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Yr(e,t,n,r){return(e=qr(7,e,r,t)).expirationTime=n,e}function Vr(e,t,n,r){return e=qr(8,e,r,t),t=0==(1&t)?Ke:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Qr(e,t,n){return(e=qr(6,e,null,t)).expirationTime=n,e}function Gr(e,t,n){return(t=qr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Kr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Jr(t,e)}function Xr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Jr(t,e)}function Zr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Jr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function io(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function ao(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):uo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function uo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function lo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:eo=!0}return r}function co(e,t,n,r,o){eo=!1;for(var i=(t=uo(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s<o?(null===a&&(a=l,i=c),u<s&&(u=s)):(c=lo(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===s&&(s=l,null===a&&(i=c)),u<f&&(u=f)):(c=lo(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=u,e.memoizedState=c}function so(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function po(e,t){return{value:e,source:t,stack:lt(t)}}var ho={current:null},go=null,vo=null,yo=null;function mo(e,t){var n=e.type._context;Sr(ho,n._currentValue),n._currentValue=t}function bo(e){var t=ho.current;Er(ho),e.type._context._currentValue=t}function wo(e){go=e,yo=vo=null,e.firstContextDependency=null}function xo(e,t){return yo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(yo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===vo?(null===go&&a("293"),go.firstContextDependency=vo=t):vo=vo.next=t),e._currentValue}var ko={},_o={current:ko},Eo={current:ko},So={current:ko};function Mo(e){return e===ko&&a("174"),e}function To(e,t){Sr(So,t),Sr(Eo,e),Sr(_o,ko);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Er(_o),Sr(_o,t)}function Co(e){Er(_o),Er(Eo),Er(So)}function Oo(e){Mo(So.current);var t=Mo(_o.current),n=er(t,e.type);t!==n&&(Sr(Eo,e),Sr(_o,n))}function No(e){Eo.current===e&&(Er(_o),Er(Eo))}function Po(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ao=$e.ReactCurrentOwner,jo=(new r.Component).refs;function Ro(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Do={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ma(),o=ro(r=Zi(r,e));o.payload=t,null!=n&&(o.callback=n),Vi(),io(e,o),ta(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ma(),o=ro(r=Zi(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),Vi(),io(e,o),ta(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ma(),r=ro(n=Zi(n,e));r.tag=2,null!=t&&(r.callback=t),Vi(),io(e,r),ta(e,n)}};function Io(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function Lo(e,t,n){var r=!1,o=Mr,i=t.contextType;return"object"==typeof i&&null!==i?i=Ao.currentDispatcher.readContext(i):(o=Pr(t)?Or:Tr.current,i=(r=null!=(r=t.contextTypes))?Nr(e,o):Mr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Do,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function zo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Do.enqueueReplaceState(t,t.state,null)}function Uo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=jo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Ao.currentDispatcher.readContext(i):(i=Pr(t)?Or:Tr.current,o.context=Nr(e,i)),null!==(i=e.updateQueue)&&(co(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Ro(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Do.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(co(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Fo=Array.isArray;function Bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===jo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function qo(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Wo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=$r(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Qr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Bo(e,t,n),r.return=e,r):((r=Hr(n.type,n.key,n.props,null,e.mode,r)).ref=Bo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Yr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Qr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ve:return(n=Hr(t.type,t.key,t.props,null,e.mode,n)).ref=Bo(e,null,t),n.return=e,n;case Qe:return(t=Gr(t,e.mode,n)).return=e,t}if(Fo(t)||at(t))return(t=Yr(t,e.mode,n,null)).return=e,t;qo(e,t)}return null}function h(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ve:return n.key===o?n.type===Ge?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Qe:return n.key===o?s(e,t,n,r):null}if(Fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);qo(e,n)}return null}function d(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ve:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Qe:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);qo(t,r)}return null}function g(o,a,u,l){for(var c=null,s=null,f=a,g=a=0,v=null;null!==f&&g<u.length;g++){f.index>g?(v=f,f=null):v=f.sibling;var y=h(o,f,u[g],l);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,g),null===s?c=y:s.sibling=y,s=y,f=v}if(g===u.length)return n(o,f),c;if(null===f){for(;g<u.length;g++)(f=p(o,u[g],l))&&(a=i(f,a,g),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);g<u.length;g++)(v=d(f,o,g,u[g],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?g:v.key),a=i(v,a,g),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(o,e)}),c}function v(o,u,l,c){var s=at(l);"function"!=typeof s&&a("150"),null==(l=s.call(l))&&a("151");for(var f=s=null,g=u,v=u=0,y=null,m=l.next();null!==g&&!m.done;v++,m=l.next()){g.index>v?(y=g,g=null):y=g.sibling;var b=h(o,g,m.value,c);if(null===b){g||(g=y);break}e&&g&&null===b.alternate&&t(o,g),u=i(b,u,v),null===f?s=b:f.sibling=b,f=b,g=y}if(m.done)return n(o,g),s;if(null===g){for(;!m.done;v++,m=l.next())null!==(m=p(o,m.value,c))&&(u=i(m,u,v),null===f?s=m:f.sibling=m,f=m);return s}for(g=r(o,g);!m.done;v++,m=l.next())null!==(m=d(g,o,v,m.value,c))&&(e&&null!==m.alternate&&g.delete(null===m.key?v:m.key),u=i(m,u,v),null===f?s=m:f.sibling=m,f=m);return e&&g.forEach(function(e){return t(o,e)}),s}return function(e,r,i,l){var c="object"==typeof i&&null!==i&&i.type===Ge&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ve:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ge:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ge?i.props.children:i.props)).ref=Bo(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ge?((r=Yr(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=Hr(i.type,i.key,i.props,null,e.mode,l)).ref=Bo(e,r,i),l.return=e,e=l)}return u(e);case Qe:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Gr(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Qr(i,e.mode,l)).return=e,e=r),u(e);if(Fo(i))return g(e,r,i,l);if(at(i))return v(e,r,i,l);if(s&&qo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var $o=Wo(!0),Ho=Wo(!1),Yo=null,Vo=null,Qo=!1;function Go(e,t){var n=qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ko(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Xo(e){if(Qo){var t=Vo;if(t){var n=t;if(!Ko(e,t)){if(!(t=wr(n))||!Ko(e,t))return e.effectTag|=2,Qo=!1,void(Yo=e);Go(Yo,n)}Yo=e,Vo=xr(t)}else e.effectTag|=2,Qo=!1,Yo=e}}function Zo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;Yo=e}function Jo(e){if(e!==Yo)return!1;if(!Qo)return Zo(e),Qo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=Vo;t;)Go(e,t),t=wr(t);return Zo(e),Vo=Yo?wr(e.stateNode):null,!0}function ei(){Vo=Yo=null,Qo=!1}var ti=$e.ReactCurrentOwner;function ni(e,t,n,r){t.child=null===e?Ho(t,null,n,r):$o(t,e.child,n,r)}function ri(e,t,n,r,o){n=n.render;var i=t.ref;return wo(t),r=n(r,i),t.effectTag|=1,ni(e,t,r,o),t.child}function oi(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Wr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Hr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ii(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?pi(e,t,i):(t.effectTag|=1,(e=$r(a,r)).ref=t.ref,e.return=t,t.child=e)}function ii(e,t,n,r,o,i){return null!==e&&o<i&&en(e.memoizedProps,r)&&e.ref===t.ref?pi(e,t,i):ui(e,t,n,r,i)}function ai(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ui(e,t,n,r,o){var i=Pr(n)?Or:Tr.current;return i=Nr(t,i),wo(t),n=n(r,i),t.effectTag|=1,ni(e,t,n,o),t.child}function li(e,t,n,r,o){if(Pr(n)){var i=!0;Ir(t)}else i=!1;if(wo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Lo(t,n,r),Uo(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Ao.currentDispatcher.readContext(c):c=Nr(t,c=Pr(n)?Or:Tr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&zo(t,a,r,c),eo=!1;var p=t.memoizedState;l=a.state=p;var h=t.updateQueue;null!==h&&(co(t,h,r,a,o),l=t.memoizedState),u!==r||p!==l||Cr.current||eo?("function"==typeof s&&(Ro(t,n,s,r),l=t.memoizedState),(u=eo||Io(t,n,u,r,p,l,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:Po(t.type,u),l=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Ao.currentDispatcher.readContext(c):c=Nr(t,c=Pr(n)?Or:Tr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&zo(t,a,r,c),eo=!1,l=t.memoizedState,p=a.state=l,null!==(h=t.updateQueue)&&(co(t,h,r,a,o),p=t.memoizedState),u!==r||l!==p||Cr.current||eo?("function"==typeof s&&(Ro(t,n,s,r),p=t.memoizedState),(s=eo||Io(t,n,u,r,l,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return ci(e,t,n,r,i,o)}function ci(e,t,n,r,o,i){ai(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Lr(t,n,!1),pi(e,t,i);r=t.stateNode,ti.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=$o(t,e.child,null,i),t.child=$o(t,null,u,i)):ni(e,t,u,i),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function si(e){var t=e.stateNode;t.pendingContext?Rr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Rr(0,t.context,!1),To(e,t.containerInfo)}function fi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var u=o.fallback;e=Yr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Yr(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=Ho(t,null,o.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,a?(n=o.fallback,o=$r(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=$r(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=$o(t,r.child,o.children,n)):(u=e.child,a?(a=o.fallback,(o=Yr(null,r,0,null)).child=u,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Yr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=$o(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function pi(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=$r(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=$r(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function hi(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Cr.current&&r<n){switch(t.tag){case 3:si(t),ei();break;case 5:Oo(t);break;case 1:Pr(t.type)&&Ir(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:mo(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?fi(e,t,n):null!==(t=pi(e,t,n))?t.sibling:null}return pi(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Nr(t,Tr.current);if(wo(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Pr(r)){var i=!0;Ir(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&Ro(t,r,u,e),o.updater=Do,t.stateNode=o,o._reactInternalFiber=t,Uo(t,r,e,n),t=ci(null,t,r,!0,i,n)}else t.tag=0,ni(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Wr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=Po(e,i),u=void 0,o){case 0:u=ui(null,t,e,i,n);break;case 1:u=li(null,t,e,i,n);break;case 11:u=ri(null,t,e,i,n);break;case 14:u=oi(null,t,e,Po(e.type,i),r,n);break;default:a("306",e,"")}return u;case 0:return r=t.type,o=t.pendingProps,ui(e,t,r,o=t.elementType===r?o:Po(r,o),n);case 1:return r=t.type,o=t.pendingProps,li(e,t,r,o=t.elementType===r?o:Po(r,o),n);case 3:return si(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,co(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ei(),t=pi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Vo=xr(t.stateNode.containerInfo),Yo=t,o=Qo=!0),o?(t.effectTag|=2,t.child=Ho(t,null,r,n)):(ni(e,t,r,n),ei()),t=t.child),t;case 5:return Oo(t),null===e&&Xo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,u=o.children,yr(r,o)?u=null:null!==i&&yr(r,i)&&(t.effectTag|=16),ai(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=1,t=null):(ni(e,t,u,n),t=t.child),t;case 6:return null===e&&Xo(t),null;case 13:return fi(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=$o(t,null,r,n):ni(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ri(e,t,r,o=t.elementType===r?o:Po(r,o),n);case 7:return ni(e,t,t.pendingProps,n),t.child;case 8:case 12:return ni(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,u=t.memoizedProps,mo(t,i=o.value),null!==u){var l=u.value;if(0===(i=l===i&&(0!==l||1/l==1/i)||l!=l&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===o.children&&!Cr.current){t=pi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){if(null!==(l=u.firstContextDependency))do{if(l.context===r&&0!=(l.observedBits&i)){if(1===u.tag){var c=ro(n);c.tag=2,io(u,c)}u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n);for(var s=u.return;null!==s;){if(c=s.alternate,s.childExpirationTime<n)s.childExpirationTime=n,null!==c&&c.childExpirationTime<n&&(c.childExpirationTime=n);else{if(!(null!==c&&c.childExpirationTime<n))break;c.childExpirationTime=n}s=s.return}}c=u.child,l=l.next}while(null!==l);else c=10===u.tag&&u.type===t.type?null:u.child;if(null!==c)c.return=u;else for(c=u;null!==c;){if(c===t){c=null;break}if(null!==(u=c.sibling)){u.return=c.return,c=u;break}c=c.return}u=c}}ni(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,wo(t),r=r(o=xo(o,i.unstable_observedBits)),t.effectTag|=1,ni(e,t,r,n),t.child;case 14:return i=Po(o=t.type,t.pendingProps),oi(e,t,o,i=Po(o.type,i),r,n);case 15:return ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Po(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Pr(r)?(e=!0,Ir(t)):e=!1,wo(t),Lo(t,r,o),Uo(t,r,o,n),ci(null,t,r,!0,e,n);default:a("156")}}function di(e){e.effectTag|=4}var gi=void 0,vi=void 0,yi=void 0,mi=void 0;gi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},vi=function(){},yi=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var u=t.stateNode;switch(Mo(_o.current),e=null,n){case"input":a=bt(u,a),r=bt(u,r),e=[];break;case"option":a=Yn(u,a),r=Yn(u,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Qn(u,a),r=Qn(u,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=hr)}sr(n,r),u=n=void 0;var l=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(u in c)c.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(l||(l={}),l[u]=s[u])}else l||(e||(e=[]),e.push(n,l)),l=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}l&&(e=e||[]).push("style",l),i=e,(t.updateQueue=i)&&di(t)}},mi=function(e,t,n,r){n!==r&&di(t)};var bi="function"==typeof WeakSet?WeakSet:Set;function wi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function xi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Xi(e,t)}else t.current=null}function ki(e){switch("function"==typeof Ur&&Ur(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Xi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(xi(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Xi(e,t)}break;case 5:xi(e);break;case 4:Si(e)}}function _i(e){return 5===e.tag||3===e.tag||4===e.tag}function Ei(e){e:{for(var t=e.return;null!==t;){if(_i(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||_i(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,u=o.stateNode,l=n;8===i.nodeType?i.parentNode.insertBefore(u,l):i.insertBefore(u,l)}else t.insertBefore(o.stateNode,n);else r?(u=t,l=o.stateNode,8===u.nodeType?(i=u.parentNode).insertBefore(l,u):(i=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Si(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,u=i;;)if(ki(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===i)break;for(;null===u.sibling;){if(null===u.return||u.return===i)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}o?(i=r,u=t.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):ki(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Mi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),fr(n,r),r=fr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];"style"===a?lr(e,u):"dangerouslySetInnerHTML"===a?rr(e,u):"children"===a?or(e,u):yt(e,a,u,r)}switch(n){case"input":kt(e,o);break;case"textarea":Kn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Vn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Vn(e,!!o.multiple,o.defaultValue,!0):Vn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Ma())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new bi),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Zi(t=Ma(),e),null!==(e=ea(e,t))&&(Kr(e,t),0!==(t=e.expirationTime)&&Ta(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var Ti="function"==typeof WeakMap?WeakMap:Map;function Ci(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ia(r),wi(e,t)},n}function Oi(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hi?Hi=new Set([this]):Hi.add(this));var n=t.value,o=t.stack;wi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ni(e){switch(e.tag){case 1:Pr(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Co(),jr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return No(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Co(),null;case 10:return bo(e),null;default:return null}}var Pi={readContext:xo},Ai=$e.ReactCurrentOwner,ji=1073741822,Ri=0,Di=!1,Ii=null,Li=null,zi=0,Ui=-1,Fi=!1,Bi=null,qi=!1,Wi=null,$i=null,Hi=null;function Yi(){if(null!==Ii)for(var e=Ii.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:Co(),jr();break;case 5:No(t);break;case 4:Co();break;case 10:bo(t)}e=e.return}Li=null,zi=0,Ui=-1,Fi=!1,Ii=null}function Vi(){null!==$i&&(i.unstable_cancelCallback(Wi),$i())}function Qi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ii=e;e:{var i=t,u=zi,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Pr(t.type)&&Ar();break;case 3:Co(),jr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==i&&null!==i.child||(Jo(t),t.effectTag&=-3),vi(t);break;case 5:No(t);var c=Mo(So.current);if(u=t.type,null!==i&&null!=t.stateNode)yi(i,t,u,l,c),i.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=Mo(_o.current);if(Jo(t)){i=(l=t).stateNode;var f=l.type,p=l.memoizedProps,h=c;switch(i[j]=l,i[R]=p,u=void 0,c=f){case"iframe":case"object":Sn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],i);break;case"source":Sn("error",i);break;case"img":case"image":case"link":Sn("error",i),Sn("load",i);break;case"form":Sn("reset",i),Sn("submit",i);break;case"details":Sn("toggle",i);break;case"input":wt(i,p),Sn("invalid",i),pr(h,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",i),pr(h,"onChange");break;case"textarea":Gn(i,p),Sn("invalid",i),pr(h,"onChange")}for(u in sr(c,p),f=null,p)p.hasOwnProperty(u)&&(s=p[u],"children"===u?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(u)&&null!=s&&pr(h,u));switch(c){case"input":qe(i),_t(i,p,!0);break;case"textarea":qe(i),Xn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=hr)}u=f,l.updateQueue=u,(l=null!==u)&&di(t)}else{p=t,i=u,h=l,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=Jn(i)),s===Zn.html?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof h.is?f=f.createElement(i,{is:h.is}):(f=f.createElement(i),"select"===i&&h.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[j]=p,i[R]=l,gi(i,t,!1,!1),h=i;var d=c,g=fr(f=u,p=l);switch(f){case"iframe":case"object":Sn("load",h),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],h);c=p;break;case"source":Sn("error",h),c=p;break;case"img":case"image":case"link":Sn("error",h),Sn("load",h),c=p;break;case"form":Sn("reset",h),Sn("submit",h),c=p;break;case"details":Sn("toggle",h),c=p;break;case"input":wt(h,p),c=bt(h,p),Sn("invalid",h),pr(d,"onChange");break;case"option":c=Yn(h,p);break;case"select":h._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),Sn("invalid",h),pr(d,"onChange");break;case"textarea":Gn(h,p),c=Qn(h,p),Sn("invalid",h),pr(d,"onChange");break;default:c=p}sr(f,c),s=void 0;var v=f,y=h,m=c;for(s in m)if(m.hasOwnProperty(s)){var w=m[s];"style"===s?lr(y,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&rr(y,w):"children"===s?"string"==typeof w?("textarea"!==v||""!==w)&&or(y,w):"number"==typeof w&&or(y,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(d,s):null!=w&&yt(y,s,w,g))}switch(f){case"input":qe(h),_t(h,p,!1);break;case"textarea":qe(h),Xn(h);break;case"option":null!=p.value&&h.setAttribute("value",""+mt(p.value));break;case"select":(c=h).multiple=!!p.multiple,null!=(h=p.value)?Vn(c,!!p.multiple,h,!1):null!=p.defaultValue&&Vn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(h.onclick=hr)}(l=vr(u,l))&&di(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?mi(i,t,i.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&a("166")),i=Mo(So.current),Mo(_o.current),Jo(t)?(u=(l=t).stateNode,i=l.memoizedProps,u[j]=l,(l=u.nodeValue!==i)&&di(t)):(u=t,(l=(9===i.nodeType?i:i.ownerDocument).createTextNode(l))[j]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,Ii=t;break e}l=null!==l,u=null!==i&&null!==i.memoizedState,null!==i&&!l&&u&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(l!==u||0==(1&t.effectTag)&&l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Co(),vi(t);break;case 10:bo(t);break;case 9:case 14:break;case 17:Pr(t.type)&&Ar();break;default:a("156")}Ii=null}if(t=e,1===zi||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(i=u.expirationTime)>l&&(l=i),(c=u.childExpirationTime)>l&&(l=c),u=u.sibling;t.childExpirationTime=l}if(null!==Ii)return Ii;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ni(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Gi(e){var t=hi(e.alternate,e,zi);return e.memoizedProps=e.pendingProps,null===t&&(t=Qi(e)),Ai.current=null,t}function Ki(e,t){Di&&a("243"),Vi(),Di=!0,Ai.currentDispatcher=Pi;var n=e.nextExpirationTimeToWorkOn;n===zi&&e===Li&&null!==Ii||(Yi(),zi=n,Ii=$r((Li=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==Ii&&!Na();)Ii=Gi(Ii);else for(;null!==Ii;)Ii=Gi(Ii)}catch(t){if(yo=vo=go=null,null===Ii)r=!0,Ia(t);else{null===Ii&&a("271");var o=Ii,i=o.return;if(null!==i){e:{var u=e,l=i,c=o,s=t;if(i=zi,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var f=s;s=l;var p=-1,h=-1;do{if(13===s.tag){var d=s.alternate;if(null!==d&&null!==(d=d.memoizedState)){h=10*(1073741822-d.timedOutAt);break}"number"==typeof(d=s.pendingProps.maxDuration)&&(0>=d?p=0:(-1===p||d<p)&&(p=d))}s=s.return}while(null!==s);s=l;do{if((d=13===s.tag)&&(d=void 0!==s.memoizedProps.fallback&&null===s.memoizedState),d){if(null===(l=s.updateQueue)?s.updateQueue=new Set([f]):l.add(f),0==(1&s.mode)){s.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((i=ro(1073741823)).tag=2,io(c,i))),c.expirationTime=1073741823;break e}null===(c=u.pingCache)?(c=u.pingCache=new Ti,l=new Set,c.set(f,l)):void 0===(l=c.get(f))&&(l=new Set,c.set(f,l)),l.has(i)||(l.add(i),c=Ji.bind(null,u,f,i),f.then(c,c)),-1===p?u=1073741823:(-1===h&&(h=10*(1073741822-Zr(u,i))-5e3),u=h+p),0<=u&&Ui<u&&(Ui=u),s.effectTag|=2048,s.expirationTime=i;break e}s=s.return}while(null!==s);s=Error((ut(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(c))}Fi=!0,s=po(s,c),u=l;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=i,ao(u,i=Ci(u,s,i));break e;case 1:if(f=s,p=u.type,h=u.stateNode,0==(64&u.effectTag)&&("function"==typeof p.getDerivedStateFromError||null!==h&&"function"==typeof h.componentDidCatch&&(null===Hi||!Hi.has(h)))){u.effectTag|=2048,u.expirationTime=i,ao(u,i=Oi(u,f,i));break e}}u=u.return}while(null!==u)}Ii=Qi(o);continue}r=!0,Ia(t)}}break}if(Di=!1,yo=vo=go=Ai.currentDispatcher=null,r)Li=null,e.finishedWork=null;else if(null!==Ii)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&a("281"),Li=null,Fi){if(o=e.latestPendingTime,i=e.latestSuspendedTime,u=e.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==u&&u<n)return Xr(e,n),void Sa(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Sa(e,r,n,t,-1)}t&&-1!==Ui?(Xr(e,n),(t=10*(1073741822-Zr(e,n)))<Ui&&(Ui=t),t=10*(1073741822-Ma()),t=Ui-t,Sa(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Xi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hi||!Hi.has(r)))return io(n,e=Oi(n,e=po(t,e),1073741823)),void ta(n,1073741823);break;case 3:return io(n,e=Ci(n,e=po(t,e),1073741823)),void ta(n,1073741823)}n=n.return}3===e.tag&&(io(e,n=Ci(e,n=po(t,e),1073741823)),ta(e,1073741823))}function Zi(e,t){return 0!==Ri?e=Ri:Di?e=qi?1073741823:zi:1&t.mode?(e=ga?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==Li&&e===zi&&--e):e=1073741823,ga&&(0===sa||e<sa)&&(sa=e),e}function Ji(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Li&&zi===n?Li=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Jr(n,e),0!==(n=e.expirationTime)&&Ta(e,n)))}function ea(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function ta(e,t){null!==(e=ea(e,t))&&(!Di&&0!==zi&&t>zi&&Yi(),Kr(e,t),Di&&!qi&&Li===e||Ta(e,e.expirationTime),xa>wa&&(xa=0,a("185")))}function na(e,t,n,r,o){var i=Ri;Ri=1073741823;try{return e(t,n,r,o)}finally{Ri=i}}var ra=null,oa=null,ia=0,aa=void 0,ua=!1,la=null,ca=0,sa=0,fa=!1,pa=null,ha=!1,da=!1,ga=!1,va=null,ya=i.unstable_now(),ma=1073741822-(ya/10|0),ba=ma,wa=50,xa=0,ka=null;function _a(){ma=1073741822-((i.unstable_now()-ya)/10|0)}function Ea(e,t){if(0!==ia){if(t<ia)return;null!==aa&&i.unstable_cancelCallback(aa)}ia=t,e=i.unstable_now()-ya,aa=i.unstable_scheduleCallback(Pa,{timeout:10*(1073741822-t)-e})}function Sa(e,t,n,r,o){e.expirationTime=r,0!==o||Na()?0<o&&(e.timeoutHandle=mr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,_a(),ba=ma,ja(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ma(){return ua?ba:(Ca(),0!==ca&&1!==ca||(_a(),ba=ma),ba)}function Ta(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===oa?(ra=oa=e,e.nextScheduledRoot=e):(oa=oa.nextScheduledRoot=e).nextScheduledRoot=ra):t>e.expirationTime&&(e.expirationTime=t),ua||(ha?da&&(la=e,ca=1073741823,Ra(e,1073741823,!1)):1073741823===t?Aa(1073741823,!1):Ea(e,t))}function Ca(){var e=0,t=null;if(null!==oa)for(var n=oa,r=ra;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===oa)&&a("244"),r===r.nextScheduledRoot){ra=oa=r.nextScheduledRoot=null;break}if(r===ra)ra=o=r.nextScheduledRoot,oa.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===oa){(oa=n).nextScheduledRoot=ra,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===oa)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}la=t,ca=e}var Oa=!1;function Na(){return!!Oa||!!i.unstable_shouldYield()&&(Oa=!0)}function Pa(){try{if(!Na()&&null!==ra){_a();var e=ra;do{var t=e.expirationTime;0!==t&&ma<=t&&(e.nextExpirationTimeToWorkOn=ma),e=e.nextScheduledRoot}while(e!==ra)}Aa(0,!0)}finally{Oa=!1}}function Aa(e,t){if(Ca(),t)for(_a(),ba=ma;null!==la&&0!==ca&&e<=ca&&!(Oa&&ma>ca);)Ra(la,ca,ma>ca),Ca(),_a(),ba=ma;else for(;null!==la&&0!==ca&&e<=ca;)Ra(la,ca,!1),Ca();if(t&&(ia=0,aa=null),0!==ca&&Ea(la,ca),xa=0,ka=null,null!==va)for(e=va,va=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){fa||(fa=!0,pa=e)}}if(fa)throw e=pa,pa=null,fa=!1,e}function ja(e,t){ua&&a("253"),la=e,ca=t,Ra(e,t,!1),Aa(1073741823,!1)}function Ra(e,t,n){if(ua&&a("245"),ua=!0,n){var r=e.finishedWork;null!==r?Da(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Ki(e,n),null!==(r=e.finishedWork)&&(Na()?e.finishedWork=r:Da(e,r,t)))}else null!==(r=e.finishedWork)?Da(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Ki(e,n),null!==(r=e.finishedWork)&&Da(e,r,t));ua=!1}function Da(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===va?va=[r]:va.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ka?xa++:(ka=e,xa=0),qi=Di=!0,e.current===t&&a("177"),0===(n=e.pendingCommitExpirationTime)&&a("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Kr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Kr(e,r)):r>o&&Kr(e,r)),Jr(0,e),Ai.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,dr=En,Ln(o=In())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var u=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(u&&0!==u.rangeCount){i=u.anchorNode;var l=u.anchorOffset,c=u.focusNode;u=u.focusOffset;try{i.nodeType,c.nodeType}catch(e){i=null;break e}var s=0,f=-1,p=-1,h=0,d=0,g=o,v=null;t:for(;;){for(var y;g!==i||0!==l&&3!==g.nodeType||(f=s+l),g!==c||0!==u&&3!==g.nodeType||(p=s+u),3===g.nodeType&&(s+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===o)break t;if(v===i&&++h===l&&(f=s),v===c&&++d===u&&(p=s),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}i=-1===f||-1===p?null:{start:f,end:p}}else i=null}i=i||{start:0,end:0}}else i=null;for(gr={focusedElem:o,selectionRange:i},En=!1,Bi=r;null!==Bi;){o=!1,i=void 0;try{for(;null!==Bi;){if(256&Bi.effectTag)e:{var m=Bi.alternate;switch((l=Bi).tag){case 0:case 11:case 15:break e;case 1:if(256&l.effectTag&&null!==m){var b=m.memoizedProps,w=m.memoizedState,x=l.stateNode,k=x.getSnapshotBeforeUpdate(l.elementType===l.type?b:Po(l.type,b),w);x.__reactInternalSnapshotBeforeUpdate=k}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Bi=Bi.nextEffect}}catch(e){o=!0,i=e}o&&(null===Bi&&a("178"),Xi(Bi,i),null!==Bi&&(Bi=Bi.nextEffect))}for(Bi=r;null!==Bi;){m=!1,b=void 0;try{for(;null!==Bi;){var _=Bi.effectTag;if(16&_&&or(Bi.stateNode,""),128&_){var E=Bi.alternate;if(null!==E){var S=E.ref;null!==S&&("function"==typeof S?S(null):S.current=null)}}switch(14&_){case 2:Ei(Bi),Bi.effectTag&=-3;break;case 6:Ei(Bi),Bi.effectTag&=-3,Mi(Bi.alternate,Bi);break;case 4:Mi(Bi.alternate,Bi);break;case 8:Si(w=Bi),w.return=null,w.child=null,w.memoizedState=null,w.updateQueue=null;var M=w.alternate;null!==M&&(M.return=null,M.child=null,M.memoizedState=null,M.updateQueue=null)}Bi=Bi.nextEffect}}catch(e){m=!0,b=e}m&&(null===Bi&&a("178"),Xi(Bi,b),null!==Bi&&(Bi=Bi.nextEffect))}if(S=gr,E=In(),_=S.focusedElem,m=S.selectionRange,E!==_&&_&&_.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(_.ownerDocument.documentElement,_)){null!==m&&Ln(_)&&(E=m.start,void 0===(S=m.end)&&(S=E),"selectionStart"in _?(_.selectionStart=E,_.selectionEnd=Math.min(S,_.value.length)):(S=(E=_.ownerDocument||document)&&E.defaultView||window).getSelection&&(S=S.getSelection(),b=_.textContent.length,M=Math.min(m.start,b),m=void 0===m.end?M:Math.min(m.end,b),!S.extend&&M>m&&(b=m,m=M,M=b),b=Dn(_,M),w=Dn(_,m),b&&w&&(1!==S.rangeCount||S.anchorNode!==b.node||S.anchorOffset!==b.offset||S.focusNode!==w.node||S.focusOffset!==w.offset)&&((E=E.createRange()).setStart(b.node,b.offset),S.removeAllRanges(),M>m?(S.addRange(E),S.extend(w.node,w.offset)):(E.setEnd(w.node,w.offset),S.addRange(E))))),E=[];for(S=_;S=S.parentNode;)1===S.nodeType&&E.push({element:S,left:S.scrollLeft,top:S.scrollTop});for("function"==typeof _.focus&&_.focus(),_=0;_<E.length;_++)(S=E[_]).element.scrollLeft=S.left,S.element.scrollTop=S.top}for(gr=null,En=!!dr,dr=null,e.current=t,Bi=r;null!==Bi;){r=!1,_=void 0;try{for(E=n;null!==Bi;){var T=Bi.effectTag;if(36&T){var C=Bi.alternate;switch(M=E,(S=Bi).tag){case 0:case 11:case 15:break;case 1:var O=S.stateNode;if(4&S.effectTag)if(null===C)O.componentDidMount();else{var N=S.elementType===S.type?C.memoizedProps:Po(S.type,C.memoizedProps);O.componentDidUpdate(N,C.memoizedState,O.__reactInternalSnapshotBeforeUpdate)}var P=S.updateQueue;null!==P&&so(0,P,O);break;case 3:var A=S.updateQueue;if(null!==A){if(m=null,null!==S.child)switch(S.child.tag){case 5:m=S.child.stateNode;break;case 1:m=S.child.stateNode}so(0,A,m)}break;case 5:var j=S.stateNode;null===C&&4&S.effectTag&&vr(S.type,S.memoizedProps)&&j.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&T){var R=Bi.ref;if(null!==R){var D=Bi.stateNode;switch(Bi.tag){case 5:var I=D;break;default:I=D}"function"==typeof R?R(I):R.current=I}}Bi=Bi.nextEffect}}catch(e){r=!0,_=e}r&&(null===Bi&&a("178"),Xi(Bi,_),null!==Bi&&(Bi=Bi.nextEffect))}Di=qi=!1,"function"==typeof zr&&zr(t.stateNode),T=t.expirationTime,0===(t=(t=t.childExpirationTime)>T?t:T)&&(Hi=null),e.expirationTime=t,e.finishedWork=null}function Ia(e){null===la&&a("246"),la.expirationTime=0,fa||(fa=!0,pa=e)}function La(e,t){var n=ha;ha=!0;try{return e(t)}finally{(ha=n)||ua||Aa(1073741823,!1)}}function za(e,t){if(ha&&!da){da=!0;try{return e(t)}finally{da=!1}}return e(t)}function Ua(e,t,n){if(ga)return e(t,n);ha||ua||0===sa||(Aa(sa,!1),sa=0);var r=ga,o=ha;ha=ga=!0;try{return e(t,n)}finally{ga=r,(ha=o)||ua||Aa(1073741823,!1)}}function Fa(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Pr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);a("171"),u=void 0}if(1===n.tag){var l=n.type;if(Pr(l)){n=Dr(n,l,u);break e}}n=u}else n=Mr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Vi(),io(i,o),ta(i,r),r}function Ba(e,t,n,r){var o=t.current;return Fa(e,t,n,o=Zi(Ma(),o),r)}function qa(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Wa(e){var t=1073741822-25*(1+((1073741822-Ma()+500)/25|0));t>=ji&&(t=ji-1),this._expirationTime=ji=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function $a(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ha(e,t,n){e={current:t=qr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Ya(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Va(e,t,n,r,o){Ya(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var u=o;o=function(){var e=qa(i._internalRoot);u.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ha(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=qa(i._internalRoot);l.call(e)}}za(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return qa(i._internalRoot)}function Qa(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ya(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Me=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||a("90"),We(r),kt(r,o)}}}break;case"textarea":Kn(e,n);break;case"select":null!=(t=n.value)&&Vn(e,!!n.multiple,t,!1)}},Wa.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new $a;return Fa(e,t,null,n,r._onCommit),r},Wa.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Wa.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,ja(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Wa.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},$a.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},$a.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Ha.prototype.render=function(e,t){var n=this._internalRoot,r=new $a;return null!==(t=void 0===t?null:t)&&r.then(t),Ba(e,n,null,r._onCommit),r},Ha.prototype.unmount=function(e){var t=this._internalRoot,n=new $a;return null!==(e=void 0===e?null:e)&&n.then(e),Ba(null,t,null,n._onCommit),n},Ha.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new $a;return null!==(n=void 0===n?null:n)&&o.then(n),Ba(t,r,e,o._onCommit),o},Ha.prototype.createBatch=function(){var e=new Wa(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ae=La,je=Ua,Re=function(){ua||0===sa||(Aa(sa,!1),sa=0)};var Ga={createPortal:Qa,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Va(null,e,t,!0,n)},render:function(e,t,n){return Va(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),Va(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ya(e)||a("40"),!!e._reactRootContainer&&(za(function(){Va(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Qa.apply(void 0,arguments)},unstable_batchedUpdates:La,unstable_interactiveUpdates:Ua,flushSync:function(e,t){ua&&a("187");var n=ha;ha=!0;try{return na(e,t)}finally{ha=n,Aa(1073741823,!1)}},unstable_createRoot:function(e,t){return Ya(e)||a("299","unstable_createRoot"),new Ha(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=ha;ha=!0;try{na(e)}finally{(ha=t)||ua||Aa(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,z,O.injectEventPluginsByName,m,$,function(e){M(e,W)},Ne,Pe,Cn,P]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zr=Fr(function(e){return t.onCommitFiberRoot(n,e)}),Ur=Fr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:D,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Ka={default:Ga},Xa=Ka&&Ga||Ka;e.exports=Xa.default||Xa},function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";(function(e){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,u=!1,l=!1;function c(){if(!u){var e=n.expirationTime;l?_():l=!0,k(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,u=a;o=e,a=t;try{var l=r()}finally{o=i,a=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,c()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){u=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?c():l=!1}}}function p(e){u=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!E())}finally{u=!1,r=o,null!==n?c():l=!1,f()}}var h,d,g=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,m="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){h=m(function(t){y(d),e(t)}),d=v(function(){b(h),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return g.now()};var k,_,E,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var M=S._schedMock;k=M[0],_=M[1],E=M[2],t.unstable_now=M[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var T=null,C=function(e){if(null!==T)try{T(e)}finally{T=null}};k=function(e){null!==T?setTimeout(k,0,e):(T=e,setTimeout(C,0,!1))},_=function(){T=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof m&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,N=!1,P=-1,A=!1,j=!1,R=0,D=33,I=33;E=function(){return R<=t.unstable_now()};var L=new MessageChannel,z=L.port2;L.port1.onmessage=function(){N=!1;var e=O,n=P;O=null,P=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return A||(A=!0,w(U)),O=e,void(P=n);o=!0}if(null!==e){j=!0;try{e(o)}finally{j=!1}}};var U=function(e){if(null!==O){w(U);var t=e-R+I;t<I&&D<I?(8>t&&(t=8),I=t<D?D:t):D=t,R=e+I,N||(N=!0,z.postMessage(void 0))}else A=!1};k=function(e,t){O=e,P=t,j||0>t?z.postMessage(void 0):A||(A=!0,w(U))},_=function(){O=null,N=!1,P=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var u=n;do{if(u.expirationTime>r){a=u;break}u=u.next}while(u!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||E())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(9))},function(e,t,n){"use strict";var r=n(26);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){var r,o;!function(){var i={version:"3.5.17"},a=[].slice,u=function(e){return a.call(e)},l=this.document;function c(e){return e&&(e.ownerDocument||e.document||e).documentElement}function s(e){return e&&(e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView)}if(l)try{u(l.documentElement.childNodes)[0].nodeType}catch(e){u=function(e){for(var t=e.length,n=new Array(t);t--;)n[t]=e[t];return n}}if(Date.now||(Date.now=function(){return+new Date}),l)try{l.createElement("DIV").style.setProperty("opacity",0,"")}catch(e){var f=this.Element.prototype,p=f.setAttribute,h=f.setAttributeNS,d=this.CSSStyleDeclaration.prototype,g=d.setProperty;f.setAttribute=function(e,t){p.call(this,e,t+"")},f.setAttributeNS=function(e,t,n){h.call(this,e,t,n+"")},d.setProperty=function(e,t,n){g.call(this,e,t+"",n)}}function v(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function y(e){return null===e?NaN:+e}function m(e){return!isNaN(e)}function b(e){return{left:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var i=r+o>>>1;e(t[i],n)<0?r=i+1:o=i}return r},right:function(t,n,r,o){for(arguments.length<3&&(r=0),arguments.length<4&&(o=t.length);r<o;){var i=r+o>>>1;e(t[i],n)>0?o=i:r=i+1}return r}}}i.ascending=v,i.descending=function(e,t){return t<e?-1:t>e?1:t>=e?0:NaN},i.min=function(e,t){var n,r,o=-1,i=e.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<i;)null!=(r=e[o])&&n>r&&(n=r)}else{for(;++o<i;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<i;)null!=(r=t.call(e,e[o],o))&&n>r&&(n=r)}return n},i.max=function(e,t){var n,r,o=-1,i=e.length;if(1===arguments.length){for(;++o<i;)if(null!=(r=e[o])&&r>=r){n=r;break}for(;++o<i;)null!=(r=e[o])&&r>n&&(n=r)}else{for(;++o<i;)if(null!=(r=t.call(e,e[o],o))&&r>=r){n=r;break}for(;++o<i;)null!=(r=t.call(e,e[o],o))&&r>n&&(n=r)}return n},i.extent=function(e,t){var n,r,o,i=-1,a=e.length;if(1===arguments.length){for(;++i<a;)if(null!=(r=e[i])&&r>=r){n=o=r;break}for(;++i<a;)null!=(r=e[i])&&(n>r&&(n=r),o<r&&(o=r))}else{for(;++i<a;)if(null!=(r=t.call(e,e[i],i))&&r>=r){n=o=r;break}for(;++i<a;)null!=(r=t.call(e,e[i],i))&&(n>r&&(n=r),o<r&&(o=r))}return[n,o]},i.sum=function(e,t){var n,r=0,o=e.length,i=-1;if(1===arguments.length)for(;++i<o;)m(n=+e[i])&&(r+=n);else for(;++i<o;)m(n=+t.call(e,e[i],i))&&(r+=n);return r},i.mean=function(e,t){var n,r=0,o=e.length,i=-1,a=o;if(1===arguments.length)for(;++i<o;)m(n=y(e[i]))?r+=n:--a;else for(;++i<o;)m(n=y(t.call(e,e[i],i)))?r+=n:--a;if(a)return r/a},i.quantile=function(e,t){var n=(e.length-1)*t+1,r=Math.floor(n),o=+e[r-1],i=n-r;return i?o+i*(e[r]-o):o},i.median=function(e,t){var n,r=[],o=e.length,a=-1;if(1===arguments.length)for(;++a<o;)m(n=y(e[a]))&&r.push(n);else for(;++a<o;)m(n=y(t.call(e,e[a],a)))&&r.push(n);if(r.length)return i.quantile(r.sort(v),.5)},i.variance=function(e,t){var n,r,o=e.length,i=0,a=0,u=-1,l=0;if(1===arguments.length)for(;++u<o;)m(n=y(e[u]))&&(a+=(r=n-i)*(n-(i+=r/++l)));else for(;++u<o;)m(n=y(t.call(e,e[u],u)))&&(a+=(r=n-i)*(n-(i+=r/++l)));if(l>1)return a/(l-1)},i.deviation=function(){var e=i.variance.apply(this,arguments);return e?Math.sqrt(e):e};var w=b(v);function x(e){return e.length}i.bisectLeft=w.left,i.bisect=i.bisectRight=w.right,i.bisector=function(e){return b(1===e.length?function(t,n){return v(e(t),n)}:e)},i.shuffle=function(e,t,n){(i=arguments.length)<3&&(n=e.length,i<2&&(t=0));for(var r,o,i=n-t;i;)o=Math.random()*i--|0,r=e[i+t],e[i+t]=e[o+t],e[o+t]=r;return e},i.permute=function(e,t){for(var n=t.length,r=new Array(n);n--;)r[n]=e[t[n]];return r},i.pairs=function(e){for(var t=0,n=e.length-1,r=e[0],o=new Array(n<0?0:n);t<n;)o[t]=[r,r=e[++t]];return o},i.transpose=function(e){if(!(o=e.length))return[];for(var t=-1,n=i.min(e,x),r=new Array(n);++t<n;)for(var o,a=-1,u=r[t]=new Array(o);++a<o;)u[a]=e[a][t];return r},i.zip=function(){return i.transpose(arguments)},i.keys=function(e){var t=[];for(var n in e)t.push(n);return t},i.values=function(e){var t=[];for(var n in e)t.push(e[n]);return t},i.entries=function(e){var t=[];for(var n in e)t.push({key:n,value:e[n]});return t},i.merge=function(e){for(var t,n,r,o=e.length,i=-1,a=0;++i<o;)a+=e[i].length;for(n=new Array(a);--o>=0;)for(t=(r=e[o]).length;--t>=0;)n[--a]=r[t];return n};var k=Math.abs;function _(e,t){for(var n in t)Object.defineProperty(e.prototype,n,{value:t[n],enumerable:!1})}function E(){this._=Object.create(null)}i.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("infinite range");var r,o=[],i=function(e){var t=1;for(;e*t%1;)t*=10;return t}(k(n)),a=-1;if(e*=i,t*=i,(n*=i)<0)for(;(r=e+n*++a)>t;)o.push(r/i);else for(;(r=e+n*++a)<t;)o.push(r/i);return o},i.map=function(e,t){var n=new E;if(e instanceof E)e.forEach(function(e,t){n.set(e,t)});else if(Array.isArray(e)){var r,o=-1,i=e.length;if(1===arguments.length)for(;++o<i;)n.set(o,e[o]);else for(;++o<i;)n.set(t.call(e,r=e[o],o),r)}else for(var a in e)n.set(a,e[a]);return n};var S="__proto__",M="\0";function T(e){return(e+="")===S||e[0]===M?M+e:e}function C(e){return(e+="")[0]===M?e.slice(1):e}function O(e){return T(e)in this._}function N(e){return(e=T(e))in this._&&delete this._[e]}function P(){var e=[];for(var t in this._)e.push(C(t));return e}function A(){var e=0;for(var t in this._)++e;return e}function j(){for(var e in this._)return!1;return!0}function R(){this._=Object.create(null)}function D(e){return e}function I(e,t,n){return function(){var r=n.apply(t,arguments);return r===t?e:r}}function L(e,t){if(t in e)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var n=0,r=z.length;n<r;++n){var o=z[n]+t;if(o in e)return o}}_(E,{has:O,get:function(e){return this._[T(e)]},set:function(e,t){return this._[T(e)]=t},remove:N,keys:P,values:function(){var e=[];for(var t in this._)e.push(this._[t]);return e},entries:function(){var e=[];for(var t in this._)e.push({key:C(t),value:this._[t]});return e},size:A,empty:j,forEach:function(e){for(var t in this._)e.call(this,C(t),this._[t])}}),i.nest=function(){var e,t,n={},r=[],o=[];function a(o,i,u){if(u>=r.length)return t?t.call(n,i):e?i.sort(e):i;for(var l,c,s,f,p=-1,h=i.length,d=r[u++],g=new E;++p<h;)(f=g.get(l=d(c=i[p])))?f.push(c):g.set(l,[c]);return o?(c=o(),s=function(e,t){c.set(e,a(o,t,u))}):(c={},s=function(e,t){c[e]=a(o,t,u)}),g.forEach(s),c}return n.map=function(e,t){return a(t,e,0)},n.entries=function(e){return function e(t,n){if(n>=r.length)return t;var i=[],a=o[n++];return t.forEach(function(t,r){i.push({key:t,values:e(r,n)})}),a?i.sort(function(e,t){return a(e.key,t.key)}):i}(a(i.map,e,0),0)},n.key=function(e){return r.push(e),n},n.sortKeys=function(e){return o[r.length-1]=e,n},n.sortValues=function(t){return e=t,n},n.rollup=function(e){return t=e,n},n},i.set=function(e){var t=new R;if(e)for(var n=0,r=e.length;n<r;++n)t.add(e[n]);return t},_(R,{has:O,add:function(e){return this._[T(e+="")]=!0,e},remove:N,values:P,size:A,empty:j,forEach:function(e){for(var t in this._)e.call(this,C(t))}}),i.behavior={},i.rebind=function(e,t){for(var n,r=1,o=arguments.length;++r<o;)e[n=arguments[r]]=I(e,t,t[n]);return e};var z=["webkit","ms","moz","Moz","o","O"];function U(){}function F(){}function B(e){var t=[],n=new E;function r(){for(var n,r=t,o=-1,i=r.length;++o<i;)(n=r[o].on)&&n.apply(this,arguments);return e}return r.on=function(r,o){var i,a=n.get(r);return arguments.length<2?a&&a.on:(a&&(a.on=null,t=t.slice(0,i=t.indexOf(a)).concat(t.slice(i+1)),n.remove(r)),o&&t.push(n.set(r,{on:o})),e)},r}function q(){i.event.preventDefault()}function W(){for(var e,t=i.event;e=t.sourceEvent;)t=e;return t}function $(e){for(var t=new F,n=0,r=arguments.length;++n<r;)t[arguments[n]]=B(t);return t.of=function(n,r){return function(o){try{var a=o.sourceEvent=i.event;o.target=e,i.event=o,t[o.type].apply(n,r)}finally{i.event=a}}},t}i.dispatch=function(){for(var e=new F,t=-1,n=arguments.length;++t<n;)e[arguments[t]]=B(e);return e},F.prototype.on=function(e,t){var n=e.indexOf("."),r="";if(n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),e)return arguments.length<2?this[e].on(r):this[e].on(r,t);if(2===arguments.length){if(null==t)for(e in this)this.hasOwnProperty(e)&&this[e].on(r,null);return this}},i.event=null,i.requote=function(e){return e.replace(H,"\\$&")};var H=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Y={}.__proto__?function(e,t){e.__proto__=t}:function(e,t){for(var n in t)e[n]=t[n]};function V(e){return Y(e,X),e}var Q=function(e,t){return t.querySelector(e)},G=function(e,t){return t.querySelectorAll(e)},K=function(e,t){var n=e.matches||e[L(e,"matchesSelector")];return(K=function(e,t){return n.call(e,t)})(e,t)};"function"==typeof Sizzle&&(Q=function(e,t){return Sizzle(e,t)[0]||null},G=Sizzle,K=Sizzle.matchesSelector),i.selection=function(){return i.select(l.documentElement)};var X=i.selection.prototype=[];function Z(e){return"function"==typeof e?e:function(){return Q(e,this)}}function J(e){return"function"==typeof e?e:function(){return G(e,this)}}X.select=function(e){var t,n,r,o,i=[];e=Z(e);for(var a=-1,u=this.length;++a<u;){i.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var l=-1,c=r.length;++l<c;)(o=r[l])?(t.push(n=e.call(o,o.__data__,l,a)),n&&"__data__"in o&&(n.__data__=o.__data__)):t.push(null)}return V(i)},X.selectAll=function(e){var t,n,r=[];e=J(e);for(var o=-1,i=this.length;++o<i;)for(var a=this[o],l=-1,c=a.length;++l<c;)(n=a[l])&&(r.push(t=u(e.call(n,n.__data__,l,o))),t.parentNode=n);return V(r)};var ee="http://www.w3.org/1999/xhtml",te={svg:"http://www.w3.org/2000/svg",xhtml:ee,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ne(e,t){return e=i.ns.qualify(e),null==t?e.local?function(){this.removeAttributeNS(e.space,e.local)}:function(){this.removeAttribute(e)}:"function"==typeof t?e.local?function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}:function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}:e.local?function(){this.setAttributeNS(e.space,e.local,t)}:function(){this.setAttribute(e,t)}}function re(e){return e.trim().replace(/\s+/g," ")}function oe(e){return new RegExp("(?:^|\\s+)"+i.requote(e)+"(?:\\s+|$)","g")}function ie(e){return(e+"").trim().split(/^|\s+/)}function ae(e,t){var n=(e=ie(e).map(ue)).length;return"function"==typeof t?function(){for(var r=-1,o=t.apply(this,arguments);++r<n;)e[r](this,o)}:function(){for(var r=-1;++r<n;)e[r](this,t)}}function ue(e){var t=oe(e);return function(n,r){if(o=n.classList)return r?o.add(e):o.remove(e);var o=n.getAttribute("class")||"";r?(t.lastIndex=0,t.test(o)||n.setAttribute("class",re(o+" "+e))):n.setAttribute("class",re(o.replace(t," ")))}}function le(e,t,n){return null==t?function(){this.style.removeProperty(e)}:"function"==typeof t?function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}:function(){this.style.setProperty(e,t,n)}}function ce(e,t){return null==t?function(){delete this[e]}:"function"==typeof t?function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}:function(){this[e]=t}}function se(e){return"function"==typeof e?e:(e=i.ns.qualify(e)).local?function(){return this.ownerDocument.createElementNS(e.space,e.local)}:function(){var t=this.ownerDocument,n=this.namespaceURI;return n===ee&&t.documentElement.namespaceURI===ee?t.createElement(e):t.createElementNS(n,e)}}function fe(){var e=this.parentNode;e&&e.removeChild(this)}function pe(e){return{__data__:e}}function he(e){return function(){return K(this,e)}}function de(e,t){for(var n=0,r=e.length;n<r;n++)for(var o,i=e[n],a=0,u=i.length;a<u;a++)(o=i[a])&&t(o,a,n);return e}function ge(e){return Y(e,ve),e}i.ns={prefix:te,qualify:function(e){var t=e.indexOf(":"),n=e;return t>=0&&"xmlns"!==(n=e.slice(0,t))&&(e=e.slice(t+1)),te.hasOwnProperty(n)?{space:te[n],local:e}:e}},X.attr=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node();return(e=i.ns.qualify(e)).local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}for(t in e)this.each(ne(t,e[t]));return this}return this.each(ne(e,t))},X.classed=function(e,t){if(arguments.length<2){if("string"==typeof e){var n=this.node(),r=(e=ie(e)).length,o=-1;if(t=n.classList){for(;++o<r;)if(!t.contains(e[o]))return!1}else for(t=n.getAttribute("class");++o<r;)if(!oe(e[o]).test(t))return!1;return!0}for(t in e)this.each(ae(t,e[t]));return this}return this.each(ae(e,t))},X.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.each(le(n,e[n],t));return this}if(r<2){var o=this.node();return s(o).getComputedStyle(o,null).getPropertyValue(e)}n=""}return this.each(le(e,t,n))},X.property=function(e,t){if(arguments.length<2){if("string"==typeof e)return this.node()[e];for(t in e)this.each(ce(t,e[t]));return this}return this.each(ce(e,t))},X.text=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}:null==e?function(){this.textContent=""}:function(){this.textContent=e}):this.node().textContent},X.html=function(e){return arguments.length?this.each("function"==typeof e?function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}:null==e?function(){this.innerHTML=""}:function(){this.innerHTML=e}):this.node().innerHTML},X.append=function(e){return e=se(e),this.select(function(){return this.appendChild(e.apply(this,arguments))})},X.insert=function(e,t){return e=se(e),t=Z(t),this.select(function(){return this.insertBefore(e.apply(this,arguments),t.apply(this,arguments)||null)})},X.remove=function(){return this.each(fe)},X.data=function(e,t){var n,r,o=-1,i=this.length;if(!arguments.length){for(e=new Array(i=(n=this[0]).length);++o<i;)(r=n[o])&&(e[o]=r.__data__);return e}function a(e,n){var r,o,i,a=e.length,s=n.length,f=Math.min(a,s),p=new Array(s),h=new Array(s),d=new Array(a);if(t){var g,v=new E,y=new Array(a);for(r=-1;++r<a;)(o=e[r])&&(v.has(g=t.call(o,o.__data__,r))?d[r]=o:v.set(g,o),y[r]=g);for(r=-1;++r<s;)(o=v.get(g=t.call(n,i=n[r],r)))?!0!==o&&(p[r]=o,o.__data__=i):h[r]=pe(i),v.set(g,!0);for(r=-1;++r<a;)r in y&&!0!==v.get(y[r])&&(d[r]=e[r])}else{for(r=-1;++r<f;)o=e[r],i=n[r],o?(o.__data__=i,p[r]=o):h[r]=pe(i);for(;r<s;++r)h[r]=pe(n[r]);for(;r<a;++r)d[r]=e[r]}h.update=p,h.parentNode=p.parentNode=d.parentNode=e.parentNode,u.push(h),l.push(p),c.push(d)}var u=ge([]),l=V([]),c=V([]);if("function"==typeof e)for(;++o<i;)a(n=this[o],e.call(n,n.parentNode.__data__,o));else for(;++o<i;)a(n=this[o],e);return l.enter=function(){return u},l.exit=function(){return c},l},X.datum=function(e){return arguments.length?this.property("__data__",e):this.property("__data__")},X.filter=function(e){var t,n,r,o=[];"function"!=typeof e&&(e=he(e));for(var i=0,a=this.length;i<a;i++){o.push(t=[]),t.parentNode=(n=this[i]).parentNode;for(var u=0,l=n.length;u<l;u++)(r=n[u])&&e.call(r,r.__data__,u,i)&&t.push(r)}return V(o)},X.order=function(){for(var e=-1,t=this.length;++e<t;)for(var n,r=this[e],o=r.length-1,i=r[o];--o>=0;)(n=r[o])&&(i&&i!==n.nextSibling&&i.parentNode.insertBefore(n,i),i=n);return this},X.sort=function(e){e=function(e){arguments.length||(e=v);return function(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}}.apply(this,arguments);for(var t=-1,n=this.length;++t<n;)this[t].sort(e);return this.order()},X.each=function(e){return de(this,function(t,n,r){e.call(t,t.__data__,n,r)})},X.call=function(e){var t=u(arguments);return e.apply(t[0]=this,t),this},X.empty=function(){return!this.node()},X.node=function(){for(var e=0,t=this.length;e<t;e++)for(var n=this[e],r=0,o=n.length;r<o;r++){var i=n[r];if(i)return i}return null},X.size=function(){var e=0;return de(this,function(){++e}),e};var ve=[];function ye(e,t,n){var r="__on"+e,o=e.indexOf("."),a=be;o>0&&(e=e.slice(0,o));var l=me.get(e);function c(){var t=this[r];t&&(this.removeEventListener(e,t,t.$),delete this[r])}return l&&(e=l,a=we),o?t?function(){var o=a(t,u(arguments));c.call(this),this.addEventListener(e,this[r]=o,o.$=n),o._=t}:c:t?U:function(){var t,n=new RegExp("^__on([^.]+)"+i.requote(e)+"$");for(var r in this)if(t=r.match(n)){var o=this[r];this.removeEventListener(t[1],o,o.$),delete this[r]}}}i.selection.enter=ge,i.selection.enter.prototype=ve,ve.append=X.append,ve.empty=X.empty,ve.node=X.node,ve.call=X.call,ve.size=X.size,ve.select=function(e){for(var t,n,r,o,i,a=[],u=-1,l=this.length;++u<l;){r=(o=this[u]).update,a.push(t=[]),t.parentNode=o.parentNode;for(var c=-1,s=o.length;++c<s;)(i=o[c])?(t.push(r[c]=n=e.call(o.parentNode,i.__data__,c,u)),n.__data__=i.__data__):t.push(null)}return V(a)},ve.insert=function(e,t){var n,r,o;return arguments.length<2&&(n=this,t=function(e,t,i){var a,u=n[i].update,l=u.length;for(i!=o&&(o=i,r=0),t>=r&&(r=t+1);!(a=u[r])&&++r<l;);return a}),X.insert.call(this,e,t)},i.select=function(e){var t;return"string"==typeof e?(t=[Q(e,l)]).parentNode=l.documentElement:(t=[e]).parentNode=c(e),V([t])},i.selectAll=function(e){var t;return"string"==typeof e?(t=u(G(e,l))).parentNode=l.documentElement:(t=u(e)).parentNode=null,V([t])},X.on=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=!1),e)this.each(ye(n,e[n],t));return this}if(r<2)return(r=this.node()["__on"+e])&&r._;n=!1}return this.each(ye(e,t,n))};var me=i.map({mouseenter:"mouseover",mouseleave:"mouseout"});function be(e,t){return function(n){var r=i.event;i.event=n,t[0]=this.__data__;try{e.apply(this,t)}finally{i.event=r}}}function we(e,t){var n=be(e,t);return function(e){var t=e.relatedTarget;t&&(t===this||8&t.compareDocumentPosition(this))||n.call(this,e)}}l&&me.forEach(function(e){"on"+e in l&&me.remove(e)});var xe,ke=0;function _e(e){var t=".dragsuppress-"+ ++ke,n="click"+t,r=i.select(s(e)).on("touchmove"+t,q).on("dragstart"+t,q).on("selectstart"+t,q);if(null==xe&&(xe=!("onselectstart"in e)&&L(e.style,"userSelect")),xe){var o=c(e).style,a=o[xe];o[xe]="none"}return function(e){if(r.on(t,null),xe&&(o[xe]=a),e){var i=function(){r.on(n,null)};r.on(n,function(){q(),i()},!0),setTimeout(i,0)}}}i.mouse=function(e){return Se(e,W())};var Ee=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;function Se(e,t){t.changedTouches&&(t=t.changedTouches[0]);var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();if(Ee<0){var o=s(e);if(o.scrollX||o.scrollY){var a=(n=i.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important"))[0][0].getScreenCTM();Ee=!(a.f||a.e),n.remove()}}return Ee?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),[(r=r.matrixTransform(e.getScreenCTM().inverse())).x,r.y]}var u=e.getBoundingClientRect();return[t.clientX-u.left-e.clientLeft,t.clientY-u.top-e.clientTop]}function Me(){return i.event.changedTouches[0].identifier}i.touch=function(e,t,n){if(arguments.length<3&&(n=t,t=W().changedTouches),t)for(var r,o=0,i=t.length;o<i;++o)if((r=t[o]).identifier===n)return Se(e,r)},i.behavior.drag=function(){var e=$(o,"drag","dragstart","dragend"),t=null,n=a(U,i.mouse,s,"mousemove","mouseup"),r=a(Me,i.touch,D,"touchmove","touchend");function o(){this.on("mousedown.drag",n).on("touchstart.drag",r)}function a(n,r,o,a,u){return function(){var l,c=i.event.target.correspondingElement||i.event.target,s=this.parentNode,f=e.of(this,arguments),p=0,h=n(),d=".drag"+(null==h?"":"-"+h),g=i.select(o(c)).on(a+d,function(){var e,t,n=r(s,h);if(!n)return;e=n[0]-y[0],t=n[1]-y[1],p|=e|t,y=n,f({type:"drag",x:n[0]+l[0],y:n[1]+l[1],dx:e,dy:t})}).on(u+d,function(){if(!r(s,h))return;g.on(a+d,null).on(u+d,null),v(p),f({type:"dragend"})}),v=_e(c),y=r(s,h);l=t?[(l=t.apply(this,arguments)).x-y[0],l.y-y[1]]:[0,0],f({type:"dragstart"})}}return o.origin=function(e){return arguments.length?(t=e,o):t},i.rebind(o,e,"on")},i.touches=function(e,t){return arguments.length<2&&(t=W().touches),t?u(t).map(function(t){var n=Se(e,t);return n.identifier=t.identifier,n}):[]};var Te=1e-6,Ce=Te*Te,Oe=Math.PI,Ne=2*Oe,Pe=Ne-Te,Ae=Oe/2,je=Oe/180,Re=180/Oe;function De(e){return e>0?1:e<0?-1:0}function Ie(e,t,n){return(t[0]-e[0])*(n[1]-e[1])-(t[1]-e[1])*(n[0]-e[0])}function Le(e){return e>1?0:e<-1?Oe:Math.acos(e)}function ze(e){return e>1?Ae:e<-1?-Ae:Math.asin(e)}function Ue(e){return((e=Math.exp(e))+1/e)/2}function Fe(e){return(e=Math.sin(e/2))*e}var Be=Math.SQRT2;i.interpolateZoom=function(e,t){var n,r,o=e[0],i=e[1],a=e[2],u=t[0],l=t[1],c=t[2],s=u-o,f=l-i,p=s*s+f*f;if(p<Ce)r=Math.log(c/a)/Be,n=function(e){return[o+e*s,i+e*f,a*Math.exp(Be*e*r)]};else{var h=Math.sqrt(p),d=(c*c-a*a+4*p)/(2*a*2*h),g=(c*c-a*a-4*p)/(2*c*2*h),v=Math.log(Math.sqrt(d*d+1)-d),y=Math.log(Math.sqrt(g*g+1)-g);r=(y-v)/Be,n=function(e){var t,n=e*r,u=Ue(v),l=a/(2*h)*(u*(t=Be*n+v,((t=Math.exp(2*t))-1)/(t+1))-function(e){return((e=Math.exp(e))-1/e)/2}(v));return[o+l*s,i+l*f,a*u/Ue(Be*n+v)]}}return n.duration=1e3*r,n},i.behavior.zoom=function(){var e,t,n,r,o,a,u,c,f,p={x:0,y:0,k:1},h=[960,500],d=$e,g=250,v=0,y="mousedown.zoom",m="mousemove.zoom",b="mouseup.zoom",w="touchstart.zoom",x=$(k,"zoomstart","zoom","zoomend");function k(e){e.on(y,P).on(We+".zoom",j).on("dblclick.zoom",R).on(w,A)}function _(e){return[(e[0]-p.x)/p.k,(e[1]-p.y)/p.k]}function E(e){p.k=Math.max(d[0],Math.min(d[1],e))}function S(e,t){t=function(e){return[e[0]*p.k+p.x,e[1]*p.k+p.y]}(t),p.x+=e[0]-t[0],p.y+=e[1]-t[1]}function M(e,n,r,o){e.__chart__={x:p.x,y:p.y,k:p.k},E(Math.pow(2,o)),S(t=n,r),e=i.select(e),g>0&&(e=e.transition().duration(g)),e.call(k.event)}function T(){u&&u.domain(a.range().map(function(e){return(e-p.x)/p.k}).map(a.invert)),f&&f.domain(c.range().map(function(e){return(e-p.y)/p.k}).map(c.invert))}function C(e){v++||e({type:"zoomstart"})}function O(e){T(),e({type:"zoom",scale:p.k,translate:[p.x,p.y]})}function N(e){--v||(e({type:"zoomend"}),t=null)}function P(){var e=this,t=x.of(e,arguments),n=0,r=i.select(s(e)).on(m,function(){n=1,S(i.mouse(e),o),O(t)}).on(b,function(){r.on(m,null).on(b,null),a(n),N(t)}),o=_(i.mouse(e)),a=_e(e);yu.call(e),C(t)}function A(){var e,t=this,n=x.of(t,arguments),r={},a=0,u=".zoom-"+i.event.changedTouches[0].identifier,l="touchmove"+u,c="touchend"+u,s=[],f=i.select(t),h=_e(t);function d(){var n=i.touches(t);return e=p.k,n.forEach(function(e){e.identifier in r&&(r[e.identifier]=_(e))}),n}function g(){var e=i.event.target;i.select(e).on(l,v).on(c,m),s.push(e);for(var n=i.event.changedTouches,u=0,f=n.length;u<f;++u)r[n[u].identifier]=null;var h=d(),g=Date.now();if(1===h.length){if(g-o<500){var y=h[0];M(t,y,r[y.identifier],Math.floor(Math.log(p.k)/Math.LN2)+1),q()}o=g}else if(h.length>1){y=h[0];var b=h[1],w=y[0]-b[0],x=y[1]-b[1];a=w*w+x*x}}function v(){var u,l,c,s,f=i.touches(t);yu.call(t);for(var p=0,h=f.length;p<h;++p,s=null)if(c=f[p],s=r[c.identifier]){if(l)break;u=c,l=s}if(s){var d=(d=c[0]-u[0])*d+(d=c[1]-u[1])*d,g=a&&Math.sqrt(d/a);u=[(u[0]+c[0])/2,(u[1]+c[1])/2],l=[(l[0]+s[0])/2,(l[1]+s[1])/2],E(g*e)}o=null,S(u,l),O(n)}function m(){if(i.event.touches.length){for(var e=i.event.changedTouches,t=0,o=e.length;t<o;++t)delete r[e[t].identifier];for(var a in r)return void d()}i.selectAll(s).on(u,null),f.on(y,P).on(w,A),h(),N(n)}g(),C(n),f.on(y,null).on(w,g)}function j(){var o=x.of(this,arguments);r?clearTimeout(r):(yu.call(this),e=_(t=n||i.mouse(this)),C(o)),r=setTimeout(function(){r=null,N(o)},50),q(),E(Math.pow(2,.002*qe())*p.k),S(t,e),O(o)}function R(){var e=i.mouse(this),t=Math.log(p.k)/Math.LN2;M(this,e,_(e),i.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}return We||(We="onwheel"in l?(qe=function(){return-i.event.deltaY*(i.event.deltaMode?120:1)},"wheel"):"onmousewheel"in l?(qe=function(){return i.event.wheelDelta},"mousewheel"):(qe=function(){return-i.event.detail},"MozMousePixelScroll")),k.event=function(e){e.each(function(){var e=x.of(this,arguments),n=p;wu?i.select(this).transition().each("start.zoom",function(){p=this.__chart__||{x:0,y:0,k:1},C(e)}).tween("zoom:zoom",function(){var r=h[0],o=h[1],a=t?t[0]:r/2,u=t?t[1]:o/2,l=i.interpolateZoom([(a-p.x)/p.k,(u-p.y)/p.k,r/p.k],[(a-n.x)/n.k,(u-n.y)/n.k,r/n.k]);return function(t){var n=l(t),o=r/n[2];this.__chart__=p={x:a-n[0]*o,y:u-n[1]*o,k:o},O(e)}}).each("interrupt.zoom",function(){N(e)}).each("end.zoom",function(){N(e)}):(this.__chart__=p,C(e),O(e),N(e))})},k.translate=function(e){return arguments.length?(p={x:+e[0],y:+e[1],k:p.k},T(),k):[p.x,p.y]},k.scale=function(e){return arguments.length?(p={x:p.x,y:p.y,k:null},E(+e),T(),k):p.k},k.scaleExtent=function(e){return arguments.length?(d=null==e?$e:[+e[0],+e[1]],k):d},k.center=function(e){return arguments.length?(n=e&&[+e[0],+e[1]],k):n},k.size=function(e){return arguments.length?(h=e&&[+e[0],+e[1]],k):h},k.duration=function(e){return arguments.length?(g=+e,k):g},k.x=function(e){return arguments.length?(u=e,a=e.copy(),p={x:0,y:0,k:1},k):u},k.y=function(e){return arguments.length?(f=e,c=e.copy(),p={x:0,y:0,k:1},k):f},i.rebind(k,x,"on")};var qe,We,$e=[0,1/0];function He(){}function Ye(e,t,n){return this instanceof Ye?(this.h=+e,this.s=+t,void(this.l=+n)):arguments.length<2?e instanceof Ye?new Ye(e.h,e.s,e.l):dt(""+e,gt,Ye):new Ye(e,t,n)}i.color=He,He.prototype.toString=function(){return this.rgb()+""},i.hsl=Ye;var Ve=Ye.prototype=new He;function Qe(e,t,n){var r,o;function i(e){return Math.round(255*function(e){return e>360?e-=360:e<0&&(e+=360),e<60?r+(o-r)*e/60:e<180?o:e<240?r+(o-r)*(240-e)/60:r}(e))}return e=isNaN(e)?0:(e%=360)<0?e+360:e,t=isNaN(t)?0:t<0?0:t>1?1:t,r=2*(n=n<0?0:n>1?1:n)-(o=n<=.5?n*(1+t):n+t-n*t),new ct(i(e+120),i(e),i(e-120))}function Ge(e,t,n){return this instanceof Ge?(this.h=+e,this.c=+t,void(this.l=+n)):arguments.length<2?e instanceof Ge?new Ge(e.h,e.c,e.l):it(e instanceof Ze?e.l:(e=vt((e=i.rgb(e)).r,e.g,e.b)).l,e.a,e.b):new Ge(e,t,n)}Ve.brighter=function(e){return e=Math.pow(.7,arguments.length?e:1),new Ye(this.h,this.s,this.l/e)},Ve.darker=function(e){return e=Math.pow(.7,arguments.length?e:1),new Ye(this.h,this.s,e*this.l)},Ve.rgb=function(){return Qe(this.h,this.s,this.l)},i.hcl=Ge;var Ke=Ge.prototype=new He;function Xe(e,t,n){return isNaN(e)&&(e=0),isNaN(t)&&(t=0),new Ze(n,Math.cos(e*=je)*t,Math.sin(e)*t)}function Ze(e,t,n){return this instanceof Ze?(this.l=+e,this.a=+t,void(this.b=+n)):arguments.length<2?e instanceof Ze?new Ze(e.l,e.a,e.b):e instanceof Ge?Xe(e.h,e.c,e.l):vt((e=ct(e)).r,e.g,e.b):new Ze(e,t,n)}Ke.brighter=function(e){return new Ge(this.h,this.c,Math.min(100,this.l+Je*(arguments.length?e:1)))},Ke.darker=function(e){return new Ge(this.h,this.c,Math.max(0,this.l-Je*(arguments.length?e:1)))},Ke.rgb=function(){return Xe(this.h,this.c,this.l).rgb()},i.lab=Ze;var Je=18,et=.95047,tt=1,nt=1.08883,rt=Ze.prototype=new He;function ot(e,t,n){var r=(e+16)/116,o=r+t/500,i=r-n/200;return new ct(lt(3.2404542*(o=at(o)*et)-1.5371385*(r=at(r)*tt)-.4985314*(i=at(i)*nt)),lt(-.969266*o+1.8760108*r+.041556*i),lt(.0556434*o-.2040259*r+1.0572252*i))}function it(e,t,n){return e>0?new Ge(Math.atan2(n,t)*Re,Math.sqrt(t*t+n*n),e):new Ge(NaN,NaN,e)}function at(e){return e>.206893034?e*e*e:(e-4/29)/7.787037}function ut(e){return e>.008856?Math.pow(e,1/3):7.787037*e+4/29}function lt(e){return Math.round(255*(e<=.00304?12.92*e:1.055*Math.pow(e,1/2.4)-.055))}function ct(e,t,n){return this instanceof ct?(this.r=~~e,this.g=~~t,void(this.b=~~n)):arguments.length<2?e instanceof ct?new ct(e.r,e.g,e.b):dt(""+e,ct,Qe):new ct(e,t,n)}function st(e){return new ct(e>>16,e>>8&255,255&e)}function ft(e){return st(e)+""}rt.brighter=function(e){return new Ze(Math.min(100,this.l+Je*(arguments.length?e:1)),this.a,this.b)},rt.darker=function(e){return new Ze(Math.max(0,this.l-Je*(arguments.length?e:1)),this.a,this.b)},rt.rgb=function(){return ot(this.l,this.a,this.b)},i.rgb=ct;var pt=ct.prototype=new He;function ht(e){return e<16?"0"+Math.max(0,e).toString(16):Math.min(255,e).toString(16)}function dt(e,t,n){var r,o,i,a=0,u=0,l=0;if(r=/([a-z]+)\((.*)\)/.exec(e=e.toLowerCase()))switch(o=r[2].split(","),r[1]){case"hsl":return n(parseFloat(o[0]),parseFloat(o[1])/100,parseFloat(o[2])/100);case"rgb":return t(mt(o[0]),mt(o[1]),mt(o[2]))}return(i=bt.get(e))?t(i.r,i.g,i.b):(null==e||"#"!==e.charAt(0)||isNaN(i=parseInt(e.slice(1),16))||(4===e.length?(a=(3840&i)>>4,a|=a>>4,u=240&i,u|=u>>4,l=15&i,l|=l<<4):7===e.length&&(a=(16711680&i)>>16,u=(65280&i)>>8,l=255&i)),t(a,u,l))}function gt(e,t,n){var r,o,i=Math.min(e/=255,t/=255,n/=255),a=Math.max(e,t,n),u=a-i,l=(a+i)/2;return u?(o=l<.5?u/(a+i):u/(2-a-i),r=e==a?(t-n)/u+(t<n?6:0):t==a?(n-e)/u+2:(e-t)/u+4,r*=60):(r=NaN,o=l>0&&l<1?0:r),new Ye(r,o,l)}function vt(e,t,n){var r=ut((.4124564*(e=yt(e))+.3575761*(t=yt(t))+.1804375*(n=yt(n)))/et),o=ut((.2126729*e+.7151522*t+.072175*n)/tt);return Ze(116*o-16,500*(r-o),200*(o-ut((.0193339*e+.119192*t+.9503041*n)/nt)))}function yt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function mt(e){var t=parseFloat(e);return"%"===e.charAt(e.length-1)?Math.round(2.55*t):t}pt.brighter=function(e){e=Math.pow(.7,arguments.length?e:1);var t=this.r,n=this.g,r=this.b,o=30;return t||n||r?(t&&t<o&&(t=o),n&&n<o&&(n=o),r&&r<o&&(r=o),new ct(Math.min(255,t/e),Math.min(255,n/e),Math.min(255,r/e))):new ct(o,o,o)},pt.darker=function(e){return new ct((e=Math.pow(.7,arguments.length?e:1))*this.r,e*this.g,e*this.b)},pt.hsl=function(){return gt(this.r,this.g,this.b)},pt.toString=function(){return"#"+ht(this.r)+ht(this.g)+ht(this.b)};var bt=i.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});function wt(e){return"function"==typeof e?e:function(){return e}}function xt(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=null),kt(t,n,e,r)}}function kt(e,t,n,r){var o={},a=i.dispatch("beforesend","progress","load","error"),l={},c=new XMLHttpRequest,s=null;function f(){var e,t=c.status;if(!t&&function(e){var t=e.responseType;return t&&"text"!==t?e.response:e.responseText}(c)||t>=200&&t<300||304===t){try{e=n.call(o,c)}catch(e){return void a.error.call(o,e)}a.load.call(o,e)}else a.error.call(o,c)}return!this.XDomainRequest||"withCredentials"in c||!/^(http(s)?:)?\/\//.test(e)||(c=new XDomainRequest),"onload"in c?c.onload=c.onerror=f:c.onreadystatechange=function(){c.readyState>3&&f()},c.onprogress=function(e){var t=i.event;i.event=e;try{a.progress.call(o,c)}finally{i.event=t}},o.header=function(e,t){return e=(e+"").toLowerCase(),arguments.length<2?l[e]:(null==t?delete l[e]:l[e]=t+"",o)},o.mimeType=function(e){return arguments.length?(t=null==e?null:e+"",o):t},o.responseType=function(e){return arguments.length?(s=e,o):s},o.response=function(e){return n=e,o},["get","post"].forEach(function(e){o[e]=function(){return o.send.apply(o,[e].concat(u(arguments)))}}),o.send=function(n,r,i){if(2===arguments.length&&"function"==typeof r&&(i=r,r=null),c.open(n,e,!0),null==t||"accept"in l||(l.accept=t+",*/*"),c.setRequestHeader)for(var u in l)c.setRequestHeader(u,l[u]);return null!=t&&c.overrideMimeType&&c.overrideMimeType(t),null!=s&&(c.responseType=s),null!=i&&o.on("error",i).on("load",function(e){i(null,e)}),a.beforesend.call(o,c),c.send(null==r?null:r),o},o.abort=function(){return c.abort(),o},i.rebind(o,a,"on"),null==r?o:o.get(function(e){return 1===e.length?function(t,n){e(null==t?n:null)}:e}(r))}bt.forEach(function(e,t){bt.set(e,st(t))}),i.functor=wt,i.xhr=xt(D),i.dsv=function(e,t){var n=new RegExp('["'+e+"\n]"),r=e.charCodeAt(0);function o(e,n,r){arguments.length<3&&(r=n,n=null);var o=kt(e,t,null==n?i:a(n),r);return o.row=function(e){return arguments.length?o.response(null==(n=e)?i:a(e)):n},o}function i(e){return o.parse(e.responseText)}function a(e){return function(t){return o.parse(t.responseText,e)}}function u(t){return t.map(l).join(e)}function l(e){return n.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}return o.parse=function(e,t){var n;return o.parseRows(e,function(e,r){if(n)return n(e,r-1);var o=new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}");n=t?function(e,n){return t(o(e),n)}:o})},o.parseRows=function(e,t){var n,o,i={},a={},u=[],l=e.length,c=0,s=0;function f(){if(c>=l)return a;if(o)return o=!1,i;var t=c;if(34===e.charCodeAt(t)){for(var n=t;n++<l;)if(34===e.charCodeAt(n)){if(34!==e.charCodeAt(n+1))break;++n}return c=n+2,13===(u=e.charCodeAt(n+1))?(o=!0,10===e.charCodeAt(n+2)&&++c):10===u&&(o=!0),e.slice(t+1,n).replace(/""/g,'"')}for(;c<l;){var u,s=1;if(10===(u=e.charCodeAt(c++)))o=!0;else if(13===u)o=!0,10===e.charCodeAt(c)&&(++c,++s);else if(u!==r)continue;return e.slice(t,c-s)}return e.slice(t)}for(;(n=f())!==a;){for(var p=[];n!==i&&n!==a;)p.push(n),n=f();t&&null==(p=t(p,s++))||u.push(p)}return u},o.format=function(t){if(Array.isArray(t[0]))return o.formatRows(t);var n=new R,r=[];return t.forEach(function(e){for(var t in e)n.has(t)||r.push(n.add(t))}),[r.map(l).join(e)].concat(t.map(function(t){return r.map(function(e){return l(t[e])}).join(e)})).join("\n")},o.formatRows=function(e){return e.map(u).join("\n")},o},i.csv=i.dsv(",","text/csv"),i.tsv=i.dsv("\t","text/tab-separated-values");var _t,Et,St,Mt,Tt=this[L(this,"requestAnimationFrame")]||function(e){setTimeout(e,17)};function Ct(e,t,n){var r=arguments.length;r<2&&(t=0),r<3&&(n=Date.now());var o={c:e,t:n+t,n:null};return Et?Et.n=o:_t=o,Et=o,St||(Mt=clearTimeout(Mt),St=1,Tt(Ot)),o}function Ot(){var e=Nt(),t=Pt()-e;t>24?(isFinite(t)&&(clearTimeout(Mt),Mt=setTimeout(Ot,t)),St=0):(St=1,Tt(Ot))}function Nt(){for(var e=Date.now(),t=_t;t;)e>=t.t&&t.c(e-t.t)&&(t.c=null),t=t.n;return e}function Pt(){for(var e,t=_t,n=1/0;t;)t.c?(t.t<n&&(n=t.t),t=(e=t).n):t=e?e.n=t.n:_t=t.n;return Et=e,n}function At(e,t){return t-(e?Math.ceil(Math.log(e)/Math.LN10):1)}i.timer=function(){Ct.apply(this,arguments)},i.timer.flush=function(){Nt(),Pt()},i.round=function(e,t){return t?Math.round(e*(t=Math.pow(10,t)))/t:Math.round(e)};var jt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(function(e,t){var n=Math.pow(10,3*k(8-t));return{scale:t>8?function(e){return e/n}:function(e){return e*n},symbol:e}});function Rt(e){var t=e.decimal,n=e.thousands,r=e.grouping,o=e.currency,a=r&&n?function(e,t){for(var o=e.length,i=[],a=0,u=r[0],l=0;o>0&&u>0&&(l+u+1>t&&(u=Math.max(1,t-l)),i.push(e.substring(o-=u,o+u)),!((l+=u+1)>t));)u=r[a=(a+1)%r.length];return i.reverse().join(n)}:D;return function(e){var n=Dt.exec(e),r=n[1]||" ",u=n[2]||">",l=n[3]||"-",c=n[4]||"",s=n[5],f=+n[6],p=n[7],h=n[8],d=n[9],g=1,v="",y="",m=!1,b=!0;switch(h&&(h=+h.substring(1)),(s||"0"===r&&"="===u)&&(s=r="0",u="="),d){case"n":p=!0,d="g";break;case"%":g=100,y="%",d="f";break;case"p":g=100,y="%",d="r";break;case"b":case"o":case"x":case"X":"#"===c&&(v="0"+d.toLowerCase());case"c":b=!1;case"d":m=!0,h=0;break;case"s":g=-1,d="r"}"$"===c&&(v=o[0],y=o[1]),"r"!=d||h||(d="g"),null!=h&&("g"==d?h=Math.max(1,Math.min(21,h)):"e"!=d&&"f"!=d||(h=Math.max(0,Math.min(20,h)))),d=It.get(d)||Lt;var w=s&&p;return function(e){var n=y;if(m&&e%1)return"";var o=e<0||0===e&&1/e<0?(e=-e,"-"):"-"===l?"":l;if(g<0){var c=i.formatPrefix(e,h);e=c.scale(e),n=c.symbol+y}else e*=g;var x,k,_=(e=d(e,h)).lastIndexOf(".");if(_<0){var E=b?e.lastIndexOf("e"):-1;E<0?(x=e,k=""):(x=e.substring(0,E),k=e.substring(E))}else x=e.substring(0,_),k=t+e.substring(_+1);!s&&p&&(x=a(x,1/0));var S=v.length+x.length+k.length+(w?0:o.length),M=S<f?new Array(S=f-S+1).join(r):"";return w&&(x=a(M+x,M.length?f-k.length:1/0)),o+=v,e=x+k,("<"===u?o+e+M:">"===u?M+o+e:"^"===u?M.substring(0,S>>=1)+o+e+M.substring(S):o+(w?e:M+e))+n}}}i.formatPrefix=function(e,t){var n=0;return(e=+e)&&(e<0&&(e*=-1),t&&(e=i.round(e,At(e,t))),n=1+Math.floor(1e-12+Math.log(e)/Math.LN10),n=Math.max(-24,Math.min(24,3*Math.floor((n-1)/3)))),jt[8+n/3]};var Dt=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,It=i.map({b:function(e){return e.toString(2)},c:function(e){return String.fromCharCode(e)},o:function(e){return e.toString(8)},x:function(e){return e.toString(16)},X:function(e){return e.toString(16).toUpperCase()},g:function(e,t){return e.toPrecision(t)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},r:function(e,t){return(e=i.round(e,At(e,t))).toFixed(Math.max(0,Math.min(20,At(e*(1+1e-15),t))))}});function Lt(e){return e+""}var zt=i.time={},Ut=Date;function Ft(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}Ft.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){Bt.setUTCDate.apply(this._,arguments)},setDay:function(){Bt.setUTCDay.apply(this._,arguments)},setFullYear:function(){Bt.setUTCFullYear.apply(this._,arguments)},setHours:function(){Bt.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){Bt.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){Bt.setUTCMinutes.apply(this._,arguments)},setMonth:function(){Bt.setUTCMonth.apply(this._,arguments)},setSeconds:function(){Bt.setUTCSeconds.apply(this._,arguments)},setTime:function(){Bt.setTime.apply(this._,arguments)}};var Bt=Date.prototype;function qt(e,t,n){function r(t){var n=e(t),r=i(n,1);return t-n<r-t?n:r}function o(n){return t(n=e(new Ut(n-1)),1),n}function i(e,n){return t(e=new Ut(+e),n),e}function a(e,r,i){var a=o(e),u=[];if(i>1)for(;a<r;)n(a)%i||u.push(new Date(+a)),t(a,1);else for(;a<r;)u.push(new Date(+a)),t(a,1);return u}e.floor=e,e.round=r,e.ceil=o,e.offset=i,e.range=a;var u=e.utc=Wt(e);return u.floor=u,u.round=Wt(r),u.ceil=Wt(o),u.offset=Wt(i),u.range=function(e,t,n){try{Ut=Ft;var r=new Ft;return r._=e,a(r,t,n)}finally{Ut=Date}},e}function Wt(e){return function(t,n){try{Ut=Ft;var r=new Ft;return r._=t,e(r,n)._}finally{Ut=Date}}}function $t(e){var t=e.dateTime,n=e.date,r=e.time,o=e.periods,a=e.days,u=e.shortDays,l=e.months,c=e.shortMonths;function s(e){var t=e.length;function n(n){for(var r,o,i,a=[],u=-1,l=0;++u<t;)37===e.charCodeAt(u)&&(a.push(e.slice(l,u)),null!=(o=Ht[r=e.charAt(++u)])&&(r=e.charAt(++u)),(i=x[r])&&(r=i(n,null==o?"e"===r?" ":"0":o)),a.push(r),l=u+1);return a.push(e.slice(l,u)),a.join("")}return n.parse=function(t){var n={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null};if(f(n,e,t,0)!=t.length)return null;"p"in n&&(n.H=n.H%12+12*n.p);var r=null!=n.Z&&Ut!==Ft,o=new(r?Ft:Ut);return"j"in n?o.setFullYear(n.y,0,n.j):"W"in n||"U"in n?("w"in n||(n.w="W"in n?1:0),o.setFullYear(n.y,0,1),o.setFullYear(n.y,0,"W"in n?(n.w+6)%7+7*n.W-(o.getDay()+5)%7:n.w+7*n.U-(o.getDay()+6)%7)):o.setFullYear(n.y,n.m,n.d),o.setHours(n.H+(n.Z/100|0),n.M+n.Z%100,n.S,n.L),r?o._:o},n.toString=function(){return e},n}function f(e,t,n,r){for(var o,i,a,u=0,l=t.length,c=n.length;u<l;){if(r>=c)return-1;if(37===(o=t.charCodeAt(u++))){if(a=t.charAt(u++),!(i=k[a in Ht?t.charAt(u++):a])||(r=i(e,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}s.utc=function(e){var t=s(e);function n(e){try{var n=new(Ut=Ft);return n._=e,t(n)}finally{Ut=Date}}return n.parse=function(e){try{Ut=Ft;var n=t.parse(e);return n&&n._}finally{Ut=Date}},n.toString=t.toString,n},s.multi=s.utc.multi=hn;var p=i.map(),h=Gt(a),d=Kt(a),g=Gt(u),v=Kt(u),y=Gt(l),m=Kt(l),b=Gt(c),w=Kt(c);o.forEach(function(e,t){p.set(e.toLowerCase(),t)});var x={a:function(e){return u[e.getDay()]},A:function(e){return a[e.getDay()]},b:function(e){return c[e.getMonth()]},B:function(e){return l[e.getMonth()]},c:s(t),d:function(e,t){return Qt(e.getDate(),t,2)},e:function(e,t){return Qt(e.getDate(),t,2)},H:function(e,t){return Qt(e.getHours(),t,2)},I:function(e,t){return Qt(e.getHours()%12||12,t,2)},j:function(e,t){return Qt(1+zt.dayOfYear(e),t,3)},L:function(e,t){return Qt(e.getMilliseconds(),t,3)},m:function(e,t){return Qt(e.getMonth()+1,t,2)},M:function(e,t){return Qt(e.getMinutes(),t,2)},p:function(e){return o[+(e.getHours()>=12)]},S:function(e,t){return Qt(e.getSeconds(),t,2)},U:function(e,t){return Qt(zt.sundayOfYear(e),t,2)},w:function(e){return e.getDay()},W:function(e,t){return Qt(zt.mondayOfYear(e),t,2)},x:s(n),X:s(r),y:function(e,t){return Qt(e.getFullYear()%100,t,2)},Y:function(e,t){return Qt(e.getFullYear()%1e4,t,4)},Z:fn,"%":function(){return"%"}},k={a:function(e,t,n){g.lastIndex=0;var r=g.exec(t.slice(n));return r?(e.w=v.get(r[0].toLowerCase()),n+r[0].length):-1},A:function(e,t,n){h.lastIndex=0;var r=h.exec(t.slice(n));return r?(e.w=d.get(r[0].toLowerCase()),n+r[0].length):-1},b:function(e,t,n){b.lastIndex=0;var r=b.exec(t.slice(n));return r?(e.m=w.get(r[0].toLowerCase()),n+r[0].length):-1},B:function(e,t,n){y.lastIndex=0;var r=y.exec(t.slice(n));return r?(e.m=m.get(r[0].toLowerCase()),n+r[0].length):-1},c:function(e,t,n){return f(e,x.c.toString(),t,n)},d:on,e:on,H:un,I:un,j:an,L:sn,m:rn,M:ln,p:function(e,t,n){var r=p.get(t.slice(n,n+=2).toLowerCase());return null==r?-1:(e.p=r,n)},S:cn,U:Zt,w:Xt,W:Jt,x:function(e,t,n){return f(e,x.x.toString(),t,n)},X:function(e,t,n){return f(e,x.X.toString(),t,n)},y:tn,Y:en,Z:nn,"%":pn};return s}zt.year=qt(function(e){return(e=zt.day(e)).setMonth(0,1),e},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e){return e.getFullYear()}),zt.years=zt.year.range,zt.years.utc=zt.year.utc.range,zt.day=qt(function(e){var t=new Ut(2e3,0);return t.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),t},function(e,t){e.setDate(e.getDate()+t)},function(e){return e.getDate()-1}),zt.days=zt.day.range,zt.days.utc=zt.day.utc.range,zt.dayOfYear=function(e){var t=zt.year(e);return Math.floor((e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(e,t){t=7-t;var n=zt[e]=qt(function(e){return(e=zt.day(e)).setDate(e.getDate()-(e.getDay()+t)%7),e},function(e,t){e.setDate(e.getDate()+7*Math.floor(t))},function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)-(n!==t)});zt[e+"s"]=n.range,zt[e+"s"].utc=n.utc.range,zt[e+"OfYear"]=function(e){var n=zt.year(e).getDay();return Math.floor((zt.dayOfYear(e)+(n+t)%7)/7)}}),zt.week=zt.sunday,zt.weeks=zt.sunday.range,zt.weeks.utc=zt.sunday.utc.range,zt.weekOfYear=zt.sundayOfYear;var Ht={"-":"",_:" ",0:"0"},Yt=/^\s*\d+/,Vt=/^%/;function Qt(e,t,n){var r=e<0?"-":"",o=(r?-e:e)+"",i=o.length;return r+(i<n?new Array(n-i+1).join(t)+o:o)}function Gt(e){return new RegExp("^(?:"+e.map(i.requote).join("|")+")","i")}function Kt(e){for(var t=new E,n=-1,r=e.length;++n<r;)t.set(e[n].toLowerCase(),n);return t}function Xt(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function Zt(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n));return r?(e.U=+r[0],n+r[0].length):-1}function Jt(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n));return r?(e.W=+r[0],n+r[0].length):-1}function en(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function tn(e,t,n){Yt.lastIndex=0;var r,o=Yt.exec(t.slice(n,n+2));return o?(e.y=(r=+o[0])+(r>68?1900:2e3),n+o[0].length):-1}function nn(e,t,n){return/^[+-]\d{4}$/.test(t=t.slice(n,n+5))?(e.Z=-t,n+5):-1}function rn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function on(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function an(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+3));return r?(e.j=+r[0],n+r[0].length):-1}function un(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function ln(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function cn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function sn(e,t,n){Yt.lastIndex=0;var r=Yt.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function fn(e){var t=e.getTimezoneOffset(),n=t>0?"-":"+",r=k(t)/60|0,o=k(t)%60;return n+Qt(r,"0",2)+Qt(o,"0",2)}function pn(e,t,n){Vt.lastIndex=0;var r=Vt.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function hn(e){for(var t=e.length,n=-1;++n<t;)e[n][0]=this(e[n][0]);return function(t){for(var n=0,r=e[n];!r[1](t);)r=e[++n];return r[0](t)}}i.locale=function(e){return{numberFormat:Rt(e),timeFormat:$t(e)}};var dn=i.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function gn(){}i.format=dn.numberFormat,i.geo={},gn.prototype={s:0,t:0,add:function(e){yn(e,this.t,vn),yn(vn.s,this.s,this),this.s?this.t+=vn.t:this.s=vn.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var vn=new gn;function yn(e,t,n){var r=n.s=e+t,o=r-e,i=r-o;n.t=e-i+(t-o)}function mn(e,t){e&&wn.hasOwnProperty(e.type)&&wn[e.type](e,t)}i.geo.stream=function(e,t){e&&bn.hasOwnProperty(e.type)?bn[e.type](e,t):mn(e,t)};var bn={Feature:function(e,t){mn(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,o=n.length;++r<o;)mn(n[r].geometry,t)}},wn={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){xn(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)xn(n[r],t,0)},Polygon:function(e,t){kn(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,o=n.length;++r<o;)kn(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,o=n.length;++r<o;)mn(n[r],t)}};function xn(e,t,n){var r,o=-1,i=e.length-n;for(t.lineStart();++o<i;)r=e[o],t.point(r[0],r[1],r[2]);t.lineEnd()}function kn(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)xn(e[n],t,1);t.polygonEnd()}i.geo.area=function(e){return _n=0,i.geo.stream(e,In),_n};var _n,En,Sn,Mn,Tn,Cn,On,Nn,Pn,An,jn,Rn,Dn=new gn,In={sphere:function(){_n+=4*Oe},point:U,lineStart:U,lineEnd:U,polygonStart:function(){Dn.reset(),In.lineStart=Ln},polygonEnd:function(){var e=2*Dn;_n+=e<0?4*Oe+e:e,In.lineStart=In.lineEnd=In.point=U}};function Ln(){var e,t,n,r,o;function i(e,t){t=t*je/2+Oe/4;var i=(e*=je)-n,a=i>=0?1:-1,u=a*i,l=Math.cos(t),c=Math.sin(t),s=o*c,f=r*l+s*Math.cos(u),p=s*a*Math.sin(u);Dn.add(Math.atan2(p,f)),n=e,r=l,o=c}In.point=function(a,u){In.point=i,n=(e=a)*je,r=Math.cos(u=(t=u)*je/2+Oe/4),o=Math.sin(u)},In.lineEnd=function(){i(e,t)}}function zn(e){var t=e[0],n=e[1],r=Math.cos(n);return[r*Math.cos(t),r*Math.sin(t),Math.sin(n)]}function Un(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Fn(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Bn(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function qn(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Wn(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}function $n(e){return[Math.atan2(e[1],e[0]),ze(e[2])]}function Hn(e,t){return k(e[0]-t[0])<Te&&k(e[1]-t[1])<Te}i.geo.bounds=function(){var e,t,n,r,o,a,u,l,c,s,f,p={point:h,lineStart:g,lineEnd:v,polygonStart:function(){p.point=y,p.lineStart=m,p.lineEnd=b,c=0,In.polygonStart()},polygonEnd:function(){In.polygonEnd(),p.point=h,p.lineStart=g,p.lineEnd=v,Dn<0?(e=-(n=180),t=-(r=90)):c>Te?r=90:c<-Te&&(t=-90),f[0]=e,f[1]=n}};function h(o,i){s.push(f=[e=o,n=o]),i<t&&(t=i),i>r&&(r=i)}function d(i,a){var u=zn([i*je,a*je]);if(l){var c=Fn(l,u),s=Fn([c[1],-c[0],0],c);Wn(s),s=$n(s);var f=i-o,p=f>0?1:-1,d=s[0]*Re*p,g=k(f)>180;if(g^(p*o<d&&d<p*i))(v=s[1]*Re)>r&&(r=v);else if(g^(p*o<(d=(d+360)%360-180)&&d<p*i)){var v;(v=-s[1]*Re)<t&&(t=v)}else a<t&&(t=a),a>r&&(r=a);g?i<o?w(e,i)>w(e,n)&&(n=i):w(i,n)>w(e,n)&&(e=i):n>=e?(i<e&&(e=i),i>n&&(n=i)):i>o?w(e,i)>w(e,n)&&(n=i):w(i,n)>w(e,n)&&(e=i)}else h(i,a);l=u,o=i}function g(){p.point=d}function v(){f[0]=e,f[1]=n,p.point=h,l=null}function y(e,t){if(l){var n=e-o;c+=k(n)>180?n+(n>0?360:-360):n}else a=e,u=t;In.point(e,t),d(e,t)}function m(){In.lineStart()}function b(){y(a,u),In.lineEnd(),k(c)>Te&&(e=-(n=180)),f[0]=e,f[1]=n,l=null}function w(e,t){return(t-=e)<0?t+360:t}function x(e,t){return e[0]-t[0]}function _(e,t){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}return function(o){if(r=n=-(e=t=1/0),s=[],i.geo.stream(o,p),c=s.length){s.sort(x);for(var a=1,u=[g=s[0]];a<c;++a)_((h=s[a])[0],g)||_(h[1],g)?(w(g[0],h[1])>w(g[0],g[1])&&(g[1]=h[1]),w(h[0],g[1])>w(g[0],g[1])&&(g[0]=h[0])):u.push(g=h);for(var l,c,h,d=-1/0,g=(a=0,u[c=u.length-1]);a<=c;g=h,++a)h=u[a],(l=w(g[1],h[0]))>d&&(d=l,e=h[0],n=g[1])}return s=f=null,e===1/0||t===1/0?[[NaN,NaN],[NaN,NaN]]:[[e,t],[n,r]]}}(),i.geo.centroid=function(e){En=Sn=Mn=Tn=Cn=On=Nn=Pn=An=jn=Rn=0,i.geo.stream(e,Yn);var t=An,n=jn,r=Rn,o=t*t+n*n+r*r;return o<Ce&&(t=On,n=Nn,r=Pn,Sn<Te&&(t=Mn,n=Tn,r=Cn),(o=t*t+n*n+r*r)<Ce)?[NaN,NaN]:[Math.atan2(n,t)*Re,ze(r/Math.sqrt(o))*Re]};var Yn={sphere:U,point:Vn,lineStart:Gn,lineEnd:Kn,polygonStart:function(){Yn.lineStart=Xn},polygonEnd:function(){Yn.lineStart=Gn}};function Vn(e,t){e*=je;var n=Math.cos(t*=je);Qn(n*Math.cos(e),n*Math.sin(e),Math.sin(t))}function Qn(e,t,n){Mn+=(e-Mn)/++En,Tn+=(t-Tn)/En,Cn+=(n-Cn)/En}function Gn(){var e,t,n;function r(r,o){r*=je;var i=Math.cos(o*=je),a=i*Math.cos(r),u=i*Math.sin(r),l=Math.sin(o),c=Math.atan2(Math.sqrt((c=t*l-n*u)*c+(c=n*a-e*l)*c+(c=e*u-t*a)*c),e*a+t*u+n*l);Sn+=c,On+=c*(e+(e=a)),Nn+=c*(t+(t=u)),Pn+=c*(n+(n=l)),Qn(e,t,n)}Yn.point=function(o,i){o*=je;var a=Math.cos(i*=je);e=a*Math.cos(o),t=a*Math.sin(o),n=Math.sin(i),Yn.point=r,Qn(e,t,n)}}function Kn(){Yn.point=Vn}function Xn(){var e,t,n,r,o;function i(e,t){e*=je;var i=Math.cos(t*=je),a=i*Math.cos(e),u=i*Math.sin(e),l=Math.sin(t),c=r*l-o*u,s=o*a-n*l,f=n*u-r*a,p=Math.sqrt(c*c+s*s+f*f),h=n*a+r*u+o*l,d=p&&-Le(h)/p,g=Math.atan2(p,h);An+=d*c,jn+=d*s,Rn+=d*f,Sn+=g,On+=g*(n+(n=a)),Nn+=g*(r+(r=u)),Pn+=g*(o+(o=l)),Qn(n,r,o)}Yn.point=function(a,u){e=a,t=u,Yn.point=i,a*=je;var l=Math.cos(u*=je);n=l*Math.cos(a),r=l*Math.sin(a),o=Math.sin(u),Qn(n,r,o)},Yn.lineEnd=function(){i(e,t),Yn.lineEnd=Kn,Yn.point=Vn}}function Zn(e,t){function n(n,r){return n=e(n,r),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function Jn(){return!0}function er(e,t,n,r,o){var i=[],a=[];if(e.forEach(function(e){if(!((t=e.length-1)<=0)){var t,n=e[0],r=e[t];if(Hn(n,r)){o.lineStart();for(var u=0;u<t;++u)o.point((n=e[u])[0],n[1]);o.lineEnd()}else{var l=new nr(n,e,null,!0),c=new nr(n,null,l,!1);l.o=c,i.push(l),a.push(c),l=new nr(r,e,null,!1),c=new nr(r,null,l,!0),l.o=c,i.push(l),a.push(c)}}}),a.sort(t),tr(i),tr(a),i.length){for(var u=0,l=n,c=a.length;u<c;++u)a[u].e=l=!l;for(var s,f,p=i[0];;){for(var h=p,d=!0;h.v;)if((h=h.n)===p)return;s=h.z,o.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,c=s.length;u<c;++u)o.point((f=s[u])[0],f[1]);else r(h.x,h.n.x,1,o);h=h.n}else{if(d)for(u=(s=h.p.z).length-1;u>=0;--u)o.point((f=s[u])[0],f[1]);else r(h.x,h.p.x,-1,o);h=h.p}s=(h=h.o).z,d=!d}while(!h.v);o.lineEnd()}}}function tr(e){if(t=e.length){for(var t,n,r=0,o=e[0];++r<t;)o.n=n=e[r],n.p=o,o=n;o.n=n=e[0],n.p=o}}function nr(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function rr(e,t,n,r){return function(o,a){var u,l=t(a),c=o.invert(r[0],r[1]),s={point:f,lineStart:h,lineEnd:d,polygonStart:function(){s.point=w,s.lineStart=x,s.lineEnd=k,u=[],g=[]},polygonEnd:function(){s.point=f,s.lineStart=h,s.lineEnd=d,u=i.merge(u);var e=function(e,t){var n=e[0],r=e[1],o=[Math.sin(n),-Math.cos(n),0],i=0,a=0;Dn.reset();for(var u=0,l=t.length;u<l;++u){var c=t[u],s=c.length;if(s)for(var f=c[0],p=f[0],h=f[1]/2+Oe/4,d=Math.sin(h),g=Math.cos(h),v=1;;){v===s&&(v=0);var y=(e=c[v])[0],m=e[1]/2+Oe/4,b=Math.sin(m),w=Math.cos(m),x=y-p,k=x>=0?1:-1,_=k*x,E=_>Oe,S=d*b;if(Dn.add(Math.atan2(S*k*Math.sin(_),g*w+S*Math.cos(_))),i+=E?x+k*Ne:x,E^p>=n^y>=n){var M=Fn(zn(f),zn(e));Wn(M);var T=Fn(o,M);Wn(T);var C=(E^x>=0?-1:1)*ze(T[2]);(r>C||r===C&&(M[0]||M[1]))&&(a+=E^x>=0?1:-1)}if(!v++)break;p=y,d=b,g=w,f=e}}return(i<-Te||i<Te&&Dn<-Te)^1&a}(c,g);u.length?(b||(a.polygonStart(),b=!0),er(u,ar,e,n,a)):e&&(b||(a.polygonStart(),b=!0),a.lineStart(),n(null,null,1,a),a.lineEnd()),b&&(a.polygonEnd(),b=!1),u=g=null},sphere:function(){a.polygonStart(),a.lineStart(),n(null,null,1,a),a.lineEnd(),a.polygonEnd()}};function f(t,n){var r=o(t,n);e(t=r[0],n=r[1])&&a.point(t,n)}function p(e,t){var n=o(e,t);l.point(n[0],n[1])}function h(){s.point=p,l.lineStart()}function d(){s.point=f,l.lineEnd()}var g,v,y=ir(),m=t(y),b=!1;function w(e,t){v.push([e,t]);var n=o(e,t);m.point(n[0],n[1])}function x(){m.lineStart(),v=[]}function k(){w(v[0][0],v[0][1]),m.lineEnd();var e,t=m.clean(),n=y.buffer(),r=n.length;if(v.pop(),g.push(v),v=null,r)if(1&t){var o,i=-1;if((r=(e=n[0]).length-1)>0){for(b||(a.polygonStart(),b=!0),a.lineStart();++i<r;)a.point((o=e[i])[0],o[1]);a.lineEnd()}}else r>1&&2&t&&n.push(n.pop().concat(n.shift())),u.push(n.filter(or))}return s}}function or(e){return e.length>1}function ir(){var e,t=[];return{lineStart:function(){t.push(e=[])},point:function(t,n){e.push([t,n])},lineEnd:U,buffer:function(){var n=t;return t=[],e=null,n},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function ar(e,t){return((e=e.x)[0]<0?e[1]-Ae-Te:Ae-e[1])-((t=t.x)[0]<0?t[1]-Ae-Te:Ae-t[1])}var ur=rr(Jn,function(e){var t,n=NaN,r=NaN,o=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(i,a){var u=i>0?Oe:-Oe,l=k(i-n);k(l-Oe)<Te?(e.point(n,r=(r+a)/2>0?Ae:-Ae),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),e.point(i,r),t=0):o!==u&&l>=Oe&&(k(n-o)<Te&&(n-=o*Te),k(i-u)<Te&&(i-=u*Te),r=function(e,t,n,r){var o,i,a=Math.sin(e-n);return k(a)>Te?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(n)-Math.sin(r)*(o=Math.cos(t))*Math.sin(e))/(o*i*a)):(t+r)/2}(n,r,i,a),e.point(o,r),e.lineEnd(),e.lineStart(),e.point(u,r),t=0),e.point(n=i,r=a),o=u},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t}}},function(e,t,n,r){var o;if(null==e)o=n*Ae,r.point(-Oe,o),r.point(0,o),r.point(Oe,o),r.point(Oe,0),r.point(Oe,-o),r.point(0,-o),r.point(-Oe,-o),r.point(-Oe,0),r.point(-Oe,o);else if(k(e[0]-t[0])>Te){var i=e[0]<t[0]?Oe:-Oe;o=n*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(t[0],t[1])},[-Oe,-Oe/2]);function lr(e,t,n,r){return function(o){var i,a=o.a,u=o.b,l=a.x,c=a.y,s=0,f=1,p=u.x-l,h=u.y-c;if(i=e-l,p||!(i>0)){if(i/=p,p<0){if(i<s)return;i<f&&(f=i)}else if(p>0){if(i>f)return;i>s&&(s=i)}if(i=n-l,p||!(i<0)){if(i/=p,p<0){if(i>f)return;i>s&&(s=i)}else if(p>0){if(i<s)return;i<f&&(f=i)}if(i=t-c,h||!(i>0)){if(i/=h,h<0){if(i<s)return;i<f&&(f=i)}else if(h>0){if(i>f)return;i>s&&(s=i)}if(i=r-c,h||!(i<0)){if(i/=h,h<0){if(i>f)return;i>s&&(s=i)}else if(h>0){if(i<s)return;i<f&&(f=i)}return s>0&&(o.a={x:l+s*p,y:c+s*h}),f<1&&(o.b={x:l+f*p,y:c+f*h}),o}}}}}}var cr=1e9;function sr(e,t,n,r){return function(l){var c,s,f,p,h,d,g,v,y,m,b,w=l,x=ir(),k=lr(e,t,n,r),_={point:M,lineStart:function(){_.point=T,s&&s.push(f=[]);m=!0,y=!1,g=v=NaN},lineEnd:function(){c&&(T(p,h),d&&y&&x.rejoin(),c.push(x.buffer()));_.point=M,y&&l.lineEnd()},polygonStart:function(){l=x,c=[],s=[],b=!0},polygonEnd:function(){l=w,c=i.merge(c);var t=function(e){for(var t=0,n=s.length,r=e[1],o=0;o<n;++o)for(var i,a=1,u=s[o],l=u.length,c=u[0];a<l;++a)i=u[a],c[1]<=r?i[1]>r&&Ie(c,i,e)>0&&++t:i[1]<=r&&Ie(c,i,e)<0&&--t,c=i;return 0!==t}([e,r]),n=b&&t,o=c.length;(n||o)&&(l.polygonStart(),n&&(l.lineStart(),E(null,null,1,l),l.lineEnd()),o&&er(c,a,t,E,l),l.polygonEnd()),c=s=f=null}};function E(i,a,l,c){var s=0,f=0;if(null==i||(s=o(i,l))!==(f=o(a,l))||u(i,a)<0^l>0)do{c.point(0===s||3===s?e:n,s>1?r:t)}while((s=(s+l+4)%4)!==f);else c.point(a[0],a[1])}function S(o,i){return e<=o&&o<=n&&t<=i&&i<=r}function M(e,t){S(e,t)&&l.point(e,t)}function T(e,t){var n=S(e=Math.max(-cr,Math.min(cr,e)),t=Math.max(-cr,Math.min(cr,t)));if(s&&f.push([e,t]),m)p=e,h=t,d=n,m=!1,n&&(l.lineStart(),l.point(e,t));else if(n&&y)l.point(e,t);else{var r={a:{x:g,y:v},b:{x:e,y:t}};k(r)?(y||(l.lineStart(),l.point(r.a.x,r.a.y)),l.point(r.b.x,r.b.y),n||l.lineEnd(),b=!1):n&&(l.lineStart(),l.point(e,t),b=!1)}g=e,v=t,y=n}return _};function o(r,o){return k(r[0]-e)<Te?o>0?0:3:k(r[0]-n)<Te?o>0?2:1:k(r[1]-t)<Te?o>0?1:0:o>0?3:2}function a(e,t){return u(e.x,t.x)}function u(e,t){var n=o(e,1),r=o(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}}function fr(e){var t=0,n=Oe/3,r=Dr(e),o=r(t,n);return o.parallels=function(e){return arguments.length?r(t=e[0]*Oe/180,n=e[1]*Oe/180):[t/Oe*180,n/Oe*180]},o}function pr(e,t){var n=Math.sin(e),r=(n+Math.sin(t))/2,o=1+n*(2*r-n),i=Math.sqrt(o)/r;function a(e,t){var n=Math.sqrt(o-2*r*Math.sin(t))/r;return[n*Math.sin(e*=r),i-n*Math.cos(e)]}return a.invert=function(e,t){var n=i-t;return[Math.atan2(e,n)/r,ze((o-(e*e+n*n)*r*r)/(2*r))]},a}i.geo.clipExtent=function(){var e,t,n,r,o,i,a={stream:function(e){return o&&(o.valid=!1),(o=i(e)).valid=!0,o},extent:function(u){return arguments.length?(i=sr(e=+u[0][0],t=+u[0][1],n=+u[1][0],r=+u[1][1]),o&&(o.valid=!1,o=null),a):[[e,t],[n,r]]}};return a.extent([[0,0],[960,500]])},(i.geo.conicEqualArea=function(){return fr(pr)}).raw=pr,i.geo.albers=function(){return i.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},i.geo.albersUsa=function(){var e,t,n,r,o=i.geo.albers(),a=i.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u=i.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){e=[t,n]}};function c(o){var i=o[0],a=o[1];return e=null,t(i,a),e||(n(i,a),e)||r(i,a),e}return c.invert=function(e){var t=o.scale(),n=o.translate(),r=(e[0]-n[0])/t,i=(e[1]-n[1])/t;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?u:o).invert(e)},c.stream=function(e){var t=o.stream(e),n=a.stream(e),r=u.stream(e);return{point:function(e,o){t.point(e,o),n.point(e,o),r.point(e,o)},sphere:function(){t.sphere(),n.sphere(),r.sphere()},lineStart:function(){t.lineStart(),n.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),n.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),n.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),n.polygonEnd(),r.polygonEnd()}}},c.precision=function(e){return arguments.length?(o.precision(e),a.precision(e),u.precision(e),c):o.precision()},c.scale=function(e){return arguments.length?(o.scale(e),a.scale(.35*e),u.scale(e),c.translate(o.translate())):o.scale()},c.translate=function(e){if(!arguments.length)return o.translate();var i=o.scale(),s=+e[0],f=+e[1];return t=o.translate(e).clipExtent([[s-.455*i,f-.238*i],[s+.455*i,f+.238*i]]).stream(l).point,n=a.translate([s-.307*i,f+.201*i]).clipExtent([[s-.425*i+Te,f+.12*i+Te],[s-.214*i-Te,f+.234*i-Te]]).stream(l).point,r=u.translate([s-.205*i,f+.212*i]).clipExtent([[s-.214*i+Te,f+.166*i+Te],[s-.115*i-Te,f+.234*i-Te]]).stream(l).point,c},c.scale(1070)};var hr,dr,gr,vr,yr,mr,br={point:U,lineStart:U,lineEnd:U,polygonStart:function(){dr=0,br.lineStart=wr},polygonEnd:function(){br.lineStart=br.lineEnd=br.point=U,hr+=k(dr/2)}};function wr(){var e,t,n,r;function o(e,t){dr+=r*e-n*t,n=e,r=t}br.point=function(i,a){br.point=o,e=n=i,t=r=a},br.lineEnd=function(){o(e,t)}}var xr={point:function(e,t){e<gr&&(gr=e);e>yr&&(yr=e);t<vr&&(vr=t);t>mr&&(mr=t)},lineStart:U,lineEnd:U,polygonStart:U,polygonEnd:U};function kr(){var e=_r(4.5),t=[],n={point:r,lineStart:function(){n.point=o},lineEnd:a,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=a,n.point=r},pointRadius:function(t){return e=_r(t),n},result:function(){if(t.length){var e=t.join("");return t=[],e}}};function r(n,r){t.push("M",n,",",r,e)}function o(e,r){t.push("M",e,",",r),n.point=i}function i(e,n){t.push("L",e,",",n)}function a(){n.point=r}function u(){t.push("Z")}return n}function _r(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}var Er,Sr={point:Mr,lineStart:Tr,lineEnd:Cr,polygonStart:function(){Sr.lineStart=Or},polygonEnd:function(){Sr.point=Mr,Sr.lineStart=Tr,Sr.lineEnd=Cr}};function Mr(e,t){Mn+=e,Tn+=t,++Cn}function Tr(){var e,t;function n(n,r){var o=n-e,i=r-t,a=Math.sqrt(o*o+i*i);On+=a*(e+n)/2,Nn+=a*(t+r)/2,Pn+=a,Mr(e=n,t=r)}Sr.point=function(r,o){Sr.point=n,Mr(e=r,t=o)}}function Cr(){Sr.point=Mr}function Or(){var e,t,n,r;function o(e,t){var o=e-n,i=t-r,a=Math.sqrt(o*o+i*i);On+=a*(n+e)/2,Nn+=a*(r+t)/2,Pn+=a,An+=(a=r*e-n*t)*(n+e),jn+=a*(r+t),Rn+=3*a,Mr(n=e,r=t)}Sr.point=function(i,a){Sr.point=o,Mr(e=n=i,t=r=a)},Sr.lineEnd=function(){o(e,t)}}function Nr(e){var t=4.5,n={point:r,lineStart:function(){n.point=o},lineEnd:a,polygonStart:function(){n.lineEnd=u},polygonEnd:function(){n.lineEnd=a,n.point=r},pointRadius:function(e){return t=e,n},result:U};function r(n,r){e.moveTo(n+t,r),e.arc(n,r,t,0,Ne)}function o(t,r){e.moveTo(t,r),n.point=i}function i(t,n){e.lineTo(t,n)}function a(){n.point=r}function u(){e.closePath()}return n}function Pr(e){var t=.5,n=Math.cos(30*je),r=16;function o(t){return(r?function(t){var n,o,a,u,l,c,s,f,p,h,d,g,v={point:y,lineStart:m,lineEnd:w,polygonStart:function(){t.polygonStart(),v.lineStart=x},polygonEnd:function(){t.polygonEnd(),v.lineStart=m}};function y(n,r){n=e(n,r),t.point(n[0],n[1])}function m(){f=NaN,v.point=b,t.lineStart()}function b(n,o){var a=zn([n,o]),u=e(n,o);i(f,p,s,h,d,g,f=u[0],p=u[1],s=n,h=a[0],d=a[1],g=a[2],r,t),t.point(f,p)}function w(){v.point=y,t.lineEnd()}function x(){m(),v.point=k,v.lineEnd=_}function k(e,t){b(n=e,t),o=f,a=p,u=h,l=d,c=g,v.point=b}function _(){i(f,p,s,h,d,g,o,a,n,u,l,c,r,t),v.lineEnd=w,w()}return v}:function(t){return jr(t,function(n,r){n=e(n,r),t.point(n[0],n[1])})})(t)}function i(r,o,a,u,l,c,s,f,p,h,d,g,v,y){var m=s-r,b=f-o,w=m*m+b*b;if(w>4*t&&v--){var x=u+h,_=l+d,E=c+g,S=Math.sqrt(x*x+_*_+E*E),M=Math.asin(E/=S),T=k(k(E)-1)<Te||k(a-p)<Te?(a+p)/2:Math.atan2(_,x),C=e(T,M),O=C[0],N=C[1],P=O-r,A=N-o,j=b*P-m*A;(j*j/w>t||k((m*P+b*A)/w-.5)>.3||u*h+l*d+c*g<n)&&(i(r,o,a,u,l,c,O,N,T,x/=S,_/=S,E,v,y),y.point(O,N),i(O,N,T,x,_,E,s,f,p,h,d,g,v,y))}}return o.precision=function(e){return arguments.length?(r=(t=e*e)>0&&16,o):Math.sqrt(t)},o}function Ar(e){this.stream=e}function jr(e,t){return{point:t,sphere:function(){e.sphere()},lineStart:function(){e.lineStart()},lineEnd:function(){e.lineEnd()},polygonStart:function(){e.polygonStart()},polygonEnd:function(){e.polygonEnd()}}}function Rr(e){return Dr(function(){return e})()}function Dr(e){var t,n,r,o,a,u,l=Pr(function(e,n){return[(e=t(e,n))[0]*c+o,a-e[1]*c]}),c=150,s=480,f=250,p=0,h=0,d=0,g=0,v=0,y=ur,m=D,b=null,w=null;function x(e){return[(e=r(e[0]*je,e[1]*je))[0]*c+o,a-e[1]*c]}function _(e){return(e=r.invert((e[0]-o)/c,(a-e[1])/c))&&[e[0]*Re,e[1]*Re]}function E(){r=Zn(n=Ur(d,g,v),t);var e=t(p,h);return o=s-e[0]*c,a=f+e[1]*c,S()}function S(){return u&&(u.valid=!1,u=null),x}return x.stream=function(e){return u&&(u.valid=!1),(u=Ir(y(n,l(m(e))))).valid=!0,u},x.clipAngle=function(e){return arguments.length?(y=null==e?(b=e,ur):function(e){var t=Math.cos(e),n=t>0,r=k(t)>Te;return rr(o,function(e){var t,u,l,c,s;return{lineStart:function(){c=l=!1,s=1},point:function(f,p){var h,d=[f,p],g=o(f,p),v=n?g?0:a(f,p):g?a(f+(f<0?Oe:-Oe),p):0;if(!t&&(c=l=g)&&e.lineStart(),g!==l&&(h=i(t,d),(Hn(t,h)||Hn(d,h))&&(d[0]+=Te,d[1]+=Te,g=o(d[0],d[1]))),g!==l)s=0,g?(e.lineStart(),h=i(d,t),e.point(h[0],h[1])):(h=i(t,d),e.point(h[0],h[1]),e.lineEnd()),t=h;else if(r&&t&&n^g){var y;v&u||!(y=i(d,t,!0))||(s=0,n?(e.lineStart(),e.point(y[0][0],y[0][1]),e.point(y[1][0],y[1][1]),e.lineEnd()):(e.point(y[1][0],y[1][1]),e.lineEnd(),e.lineStart(),e.point(y[0][0],y[0][1])))}!g||t&&Hn(t,d)||e.point(d[0],d[1]),t=d,l=g,u=v},lineEnd:function(){l&&e.lineEnd(),t=null},clean:function(){return s|(c&&l)<<1}}},Wr(e,6*je),n?[0,-e]:[-Oe,e-Oe]);function o(e,n){return Math.cos(e)*Math.cos(n)>t}function i(e,n,r){var o=[1,0,0],i=Fn(zn(e),zn(n)),a=Un(i,i),u=i[0],l=a-u*u;if(!l)return!r&&e;var c=t*a/l,s=-t*u/l,f=Fn(o,i),p=qn(o,c);Bn(p,qn(i,s));var h=f,d=Un(p,h),g=Un(h,h),v=d*d-g*(Un(p,p)-1);if(!(v<0)){var y=Math.sqrt(v),m=qn(h,(-d-y)/g);if(Bn(m,p),m=$n(m),!r)return m;var b,w=e[0],x=n[0],_=e[1],E=n[1];x<w&&(b=w,w=x,x=b);var S=x-w,M=k(S-Oe)<Te;if(!M&&E<_&&(b=_,_=E,E=b),M||S<Te?M?_+E>0^m[1]<(k(m[0]-w)<Te?_:E):_<=m[1]&&m[1]<=E:S>Oe^(w<=m[0]&&m[0]<=x)){var T=qn(h,(-d+y)/g);return Bn(T,p),[m,$n(T)]}}}function a(t,r){var o=n?e:Oe-e,i=0;return t<-o?i|=1:t>o&&(i|=2),r<-o?i|=4:r>o&&(i|=8),i}}((b=+e)*je),S()):b},x.clipExtent=function(e){return arguments.length?(w=e,m=e?sr(e[0][0],e[0][1],e[1][0],e[1][1]):D,S()):w},x.scale=function(e){return arguments.length?(c=+e,E()):c},x.translate=function(e){return arguments.length?(s=+e[0],f=+e[1],E()):[s,f]},x.center=function(e){return arguments.length?(p=e[0]%360*je,h=e[1]%360*je,E()):[p*Re,h*Re]},x.rotate=function(e){return arguments.length?(d=e[0]%360*je,g=e[1]%360*je,v=e.length>2?e[2]%360*je:0,E()):[d*Re,g*Re,v*Re]},i.rebind(x,l,"precision"),function(){return t=e.apply(this,arguments),x.invert=t.invert&&_,E()}}function Ir(e){return jr(e,function(t,n){e.point(t*je,n*je)})}function Lr(e,t){return[e,t]}function zr(e,t){return[e>Oe?e-Ne:e<-Oe?e+Ne:e,t]}function Ur(e,t,n){return e?t||n?Zn(Br(e),qr(t,n)):Br(e):t||n?qr(t,n):zr}function Fr(e){return function(t,n){return[(t+=e)>Oe?t-Ne:t<-Oe?t+Ne:t,n]}}function Br(e){var t=Fr(e);return t.invert=Fr(-e),t}function qr(e,t){var n=Math.cos(e),r=Math.sin(e),o=Math.cos(t),i=Math.sin(t);function a(e,t){var a=Math.cos(t),u=Math.cos(e)*a,l=Math.sin(e)*a,c=Math.sin(t),s=c*n+u*r;return[Math.atan2(l*o-s*i,u*n-c*r),ze(s*o+l*i)]}return a.invert=function(e,t){var a=Math.cos(t),u=Math.cos(e)*a,l=Math.sin(e)*a,c=Math.sin(t),s=c*o-l*i;return[Math.atan2(l*o+c*i,u*n+s*r),ze(s*n-u*r)]},a}function Wr(e,t){var n=Math.cos(e),r=Math.sin(e);return function(o,i,a,u){var l=a*t;null!=o?(o=$r(n,o),i=$r(n,i),(a>0?o<i:o>i)&&(o+=a*Ne)):(o=e+a*Ne,i=e-.5*l);for(var c,s=o;a>0?s>i:s<i;s-=l)u.point((c=$n([n,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function $r(e,t){var n=zn(t);n[0]-=e,Wn(n);var r=Le(-n[1]);return((-n[2]<0?-r:r)+2*Math.PI-Te)%(2*Math.PI)}function Hr(e,t,n){var r=i.range(e,t-Te,n).concat(t);return function(e){return r.map(function(t){return[e,t]})}}function Yr(e,t,n){var r=i.range(e,t-Te,n).concat(t);return function(e){return r.map(function(t){return[t,e]})}}function Vr(e){return e.source}function Qr(e){return e.target}i.geo.path=function(){var e,t,n,r,o,a=4.5;function u(e){return e&&("function"==typeof a&&r.pointRadius(+a.apply(this,arguments)),o&&o.valid||(o=n(r)),i.geo.stream(e,o)),r.result()}function l(){return o=null,u}return u.area=function(e){return hr=0,i.geo.stream(e,n(br)),hr},u.centroid=function(e){return Mn=Tn=Cn=On=Nn=Pn=An=jn=Rn=0,i.geo.stream(e,n(Sr)),Rn?[An/Rn,jn/Rn]:Pn?[On/Pn,Nn/Pn]:Cn?[Mn/Cn,Tn/Cn]:[NaN,NaN]},u.bounds=function(e){return yr=mr=-(gr=vr=1/0),i.geo.stream(e,n(xr)),[[gr,vr],[yr,mr]]},u.projection=function(t){return arguments.length?(n=(e=t)?t.stream||(r=t,o=Pr(function(e,t){return r([e*Re,t*Re])}),function(e){return Ir(o(e))}):D,l()):e;var r,o},u.context=function(e){return arguments.length?(r=null==(t=e)?new kr:new Nr(e),"function"!=typeof a&&r.pointRadius(a),l()):t},u.pointRadius=function(e){return arguments.length?(a="function"==typeof e?e:(r.pointRadius(+e),+e),u):a},u.projection(i.geo.albersUsa()).context(null)},i.geo.transform=function(e){return{stream:function(t){var n=new Ar(t);for(var r in e)n[r]=e[r];return n}}},Ar.prototype={point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},i.geo.projection=Rr,i.geo.projectionMutator=Dr,(i.geo.equirectangular=function(){return Rr(Lr)}).raw=Lr.invert=Lr,i.geo.rotation=function(e){function t(t){return(t=e(t[0]*je,t[1]*je))[0]*=Re,t[1]*=Re,t}return e=Ur(e[0]%360*je,e[1]*je,e.length>2?e[2]*je:0),t.invert=function(t){return(t=e.invert(t[0]*je,t[1]*je))[0]*=Re,t[1]*=Re,t},t},zr.invert=Lr,i.geo.circle=function(){var e,t,n=[0,0],r=6;function o(){var e="function"==typeof n?n.apply(this,arguments):n,r=Ur(-e[0]*je,-e[1]*je,0).invert,o=[];return t(null,null,1,{point:function(e,t){o.push(e=r(e,t)),e[0]*=Re,e[1]*=Re}}),{type:"Polygon",coordinates:[o]}}return o.origin=function(e){return arguments.length?(n=e,o):n},o.angle=function(n){return arguments.length?(t=Wr((e=+n)*je,r*je),o):e},o.precision=function(n){return arguments.length?(t=Wr(e*je,(r=+n)*je),o):r},o.angle(90)},i.geo.distance=function(e,t){var n,r=(t[0]-e[0])*je,o=e[1]*je,i=t[1]*je,a=Math.sin(r),u=Math.cos(r),l=Math.sin(o),c=Math.cos(o),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((n=f*a)*n+(n=c*s-l*f*u)*n),l*s+c*f*u)},i.geo.graticule=function(){var e,t,n,r,o,a,u,l,c,s,f,p,h=10,d=h,g=90,v=360,y=2.5;function m(){return{type:"MultiLineString",coordinates:b()}}function b(){return i.range(Math.ceil(r/g)*g,n,g).map(f).concat(i.range(Math.ceil(l/v)*v,u,v).map(p)).concat(i.range(Math.ceil(t/h)*h,e,h).filter(function(e){return k(e%g)>Te}).map(c)).concat(i.range(Math.ceil(a/d)*d,o,d).filter(function(e){return k(e%v)>Te}).map(s))}return m.lines=function(){return b().map(function(e){return{type:"LineString",coordinates:e}})},m.outline=function(){return{type:"Polygon",coordinates:[f(r).concat(p(u).slice(1),f(n).reverse().slice(1),p(l).reverse().slice(1))]}},m.extent=function(e){return arguments.length?m.majorExtent(e).minorExtent(e):m.minorExtent()},m.majorExtent=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],l=+e[0][1],u=+e[1][1],r>n&&(e=r,r=n,n=e),l>u&&(e=l,l=u,u=e),m.precision(y)):[[r,l],[n,u]]},m.minorExtent=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],a=+n[0][1],o=+n[1][1],t>e&&(n=t,t=e,e=n),a>o&&(n=a,a=o,o=n),m.precision(y)):[[t,a],[e,o]]},m.step=function(e){return arguments.length?m.majorStep(e).minorStep(e):m.minorStep()},m.majorStep=function(e){return arguments.length?(g=+e[0],v=+e[1],m):[g,v]},m.minorStep=function(e){return arguments.length?(h=+e[0],d=+e[1],m):[h,d]},m.precision=function(i){return arguments.length?(y=+i,c=Hr(a,o,90),s=Yr(t,e,y),f=Hr(l,u,90),p=Yr(r,n,y),m):y},m.majorExtent([[-180,-90+Te],[180,90-Te]]).minorExtent([[-180,-80-Te],[180,80+Te]])},i.geo.greatArc=function(){var e,t,n=Vr,r=Qr;function o(){return{type:"LineString",coordinates:[e||n.apply(this,arguments),t||r.apply(this,arguments)]}}return o.distance=function(){return i.geo.distance(e||n.apply(this,arguments),t||r.apply(this,arguments))},o.source=function(t){return arguments.length?(n=t,e="function"==typeof t?null:t,o):n},o.target=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,o):r},o.precision=function(){return arguments.length?o:0},o},i.geo.interpolate=function(e,t){return n=e[0]*je,r=e[1]*je,o=t[0]*je,i=t[1]*je,a=Math.cos(r),u=Math.sin(r),l=Math.cos(i),c=Math.sin(i),s=a*Math.cos(n),f=a*Math.sin(n),p=l*Math.cos(o),h=l*Math.sin(o),d=2*Math.asin(Math.sqrt(Fe(i-r)+a*l*Fe(o-n))),g=1/Math.sin(d),(v=d?function(e){var t=Math.sin(e*=d)*g,n=Math.sin(d-e)*g,r=n*s+t*p,o=n*f+t*h,i=n*u+t*c;return[Math.atan2(o,r)*Re,Math.atan2(i,Math.sqrt(r*r+o*o))*Re]}:function(){return[n*Re,r*Re]}).distance=d,v;var n,r,o,i,a,u,l,c,s,f,p,h,d,g,v},i.geo.length=function(e){return Er=0,i.geo.stream(e,Gr),Er};var Gr={sphere:U,point:U,lineStart:function(){var e,t,n;function r(r,o){var i=Math.sin(o*=je),a=Math.cos(o),u=k((r*=je)-e),l=Math.cos(u);Er+=Math.atan2(Math.sqrt((u=a*Math.sin(u))*u+(u=n*i-t*a*l)*u),t*i+n*a*l),e=r,t=i,n=a}Gr.point=function(o,i){e=o*je,t=Math.sin(i*=je),n=Math.cos(i),Gr.point=r},Gr.lineEnd=function(){Gr.point=Gr.lineEnd=U}},lineEnd:U,polygonStart:U,polygonEnd:U};function Kr(e,t){function n(t,n){var r=Math.cos(t),o=Math.cos(n),i=e(r*o);return[i*o*Math.sin(t),i*Math.sin(n)]}return n.invert=function(e,n){var r=Math.sqrt(e*e+n*n),o=t(r),i=Math.sin(o),a=Math.cos(o);return[Math.atan2(e*i,r*a),Math.asin(r&&n*i/r)]},n}var Xr=Kr(function(e){return Math.sqrt(2/(1+e))},function(e){return 2*Math.asin(e/2)});(i.geo.azimuthalEqualArea=function(){return Rr(Xr)}).raw=Xr;var Zr=Kr(function(e){var t=Math.acos(e);return t&&t/Math.sin(t)},D);function Jr(e,t){var n=Math.cos(e),r=function(e){return Math.tan(Oe/4+e/2)},o=e===t?Math.sin(e):Math.log(n/Math.cos(t))/Math.log(r(t)/r(e)),i=n*Math.pow(r(e),o)/o;if(!o)return no;function a(e,t){i>0?t<-Ae+Te&&(t=-Ae+Te):t>Ae-Te&&(t=Ae-Te);var n=i/Math.pow(r(t),o);return[n*Math.sin(o*e),i-n*Math.cos(o*e)]}return a.invert=function(e,t){var n=i-t,r=De(o)*Math.sqrt(e*e+n*n);return[Math.atan2(e,n)/o,2*Math.atan(Math.pow(i/r,1/o))-Ae]},a}function eo(e,t){var n=Math.cos(e),r=e===t?Math.sin(e):(n-Math.cos(t))/(t-e),o=n/r+e;if(k(r)<Te)return Lr;function i(e,t){var n=o-t;return[n*Math.sin(r*e),o-n*Math.cos(r*e)]}return i.invert=function(e,t){var n=o-t;return[Math.atan2(e,n)/r,o-De(r)*Math.sqrt(e*e+n*n)]},i}(i.geo.azimuthalEquidistant=function(){return Rr(Zr)}).raw=Zr,(i.geo.conicConformal=function(){return fr(Jr)}).raw=Jr,(i.geo.conicEquidistant=function(){return fr(eo)}).raw=eo;var to=Kr(function(e){return 1/e},Math.atan);function no(e,t){return[e,Math.log(Math.tan(Oe/4+t/2))]}function ro(e){var t,n=Rr(e),r=n.scale,o=n.translate,i=n.clipExtent;return n.scale=function(){var e=r.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.translate=function(){var e=o.apply(n,arguments);return e===n?t?n.clipExtent(null):n:e},n.clipExtent=function(e){var a=i.apply(n,arguments);if(a===n){if(t=null==e){var u=Oe*r(),l=o();i([[l[0]-u,l[1]-u],[l[0]+u,l[1]+u]])}}else t&&(a=null);return a},n.clipExtent(null)}(i.geo.gnomonic=function(){return Rr(to)}).raw=to,no.invert=function(e,t){return[e,2*Math.atan(Math.exp(t))-Ae]},(i.geo.mercator=function(){return ro(no)}).raw=no;var oo=Kr(function(){return 1},Math.asin);(i.geo.orthographic=function(){return Rr(oo)}).raw=oo;var io=Kr(function(e){return 1/(1+e)},function(e){return 2*Math.atan(e)});function ao(e,t){return[Math.log(Math.tan(Oe/4+t/2)),-e]}function uo(e){return e[0]}function lo(e){return e[1]}function co(e){for(var t=e.length,n=[0,1],r=2,o=2;o<t;o++){for(;r>1&&Ie(e[n[r-2]],e[n[r-1]],e[o])<=0;)--r;n[r++]=o}return n.slice(0,r)}function so(e,t){return e[0]-t[0]||e[1]-t[1]}(i.geo.stereographic=function(){return Rr(io)}).raw=io,ao.invert=function(e,t){return[-t,2*Math.atan(Math.exp(e))-Ae]},(i.geo.transverseMercator=function(){var e=ro(ao),t=e.center,n=e.rotate;return e.center=function(e){return e?t([-e[1],e[0]]):[(e=t())[1],-e[0]]},e.rotate=function(e){return e?n([e[0],e[1],e.length>2?e[2]+90:90]):[(e=n())[0],e[1],e[2]-90]},n([0,0,90])}).raw=ao,i.geom={},i.geom.hull=function(e){var t=uo,n=lo;if(arguments.length)return r(e);function r(e){if(e.length<3)return[];var r,o=wt(t),i=wt(n),a=e.length,u=[],l=[];for(r=0;r<a;r++)u.push([+o.call(this,e[r],r),+i.call(this,e[r],r),r]);for(u.sort(so),r=0;r<a;r++)l.push([u[r][0],-u[r][1]]);var c=co(u),s=co(l),f=s[0]===c[0],p=s[s.length-1]===c[c.length-1],h=[];for(r=c.length-1;r>=0;--r)h.push(e[u[c[r]][2]]);for(r=+f;r<s.length-p;++r)h.push(e[u[s[r]][2]]);return h}return r.x=function(e){return arguments.length?(t=e,r):t},r.y=function(e){return arguments.length?(n=e,r):n},r},i.geom.polygon=function(e){return Y(e,fo),e};var fo=i.geom.polygon.prototype=[];function po(e,t,n){return(n[0]-t[0])*(e[1]-t[1])<(n[1]-t[1])*(e[0]-t[0])}function ho(e,t,n,r){var o=e[0],i=n[0],a=t[0]-o,u=r[0]-i,l=e[1],c=n[1],s=t[1]-l,f=r[1]-c,p=(u*(l-c)-f*(o-i))/(f*a-u*s);return[o+p*a,l+p*s]}function go(e){var t=e[0],n=e[e.length-1];return!(t[0]-n[0]||t[1]-n[1])}fo.area=function(){for(var e,t=-1,n=this.length,r=this[n-1],o=0;++t<n;)e=r,r=this[t],o+=e[1]*r[0]-e[0]*r[1];return.5*o},fo.centroid=function(e){var t,n,r=-1,o=this.length,i=0,a=0,u=this[o-1];for(arguments.length||(e=-1/(6*this.area()));++r<o;)t=u,u=this[r],n=t[0]*u[1]-u[0]*t[1],i+=(t[0]+u[0])*n,a+=(t[1]+u[1])*n;return[i*e,a*e]},fo.clip=function(e){for(var t,n,r,o,i,a,u=go(e),l=-1,c=this.length-go(this),s=this[c-1];++l<c;){for(t=e.slice(),e.length=0,o=this[l],i=t[(r=t.length-u)-1],n=-1;++n<r;)po(a=t[n],s,o)?(po(i,s,o)||e.push(ho(i,a,s,o)),e.push(a)):po(i,s,o)&&e.push(ho(i,a,s,o)),i=a;u&&e.push(e[0]),s=o}return e};var vo,yo,mo,bo,wo,xo=[],ko=[];function _o(){Bo(this),this.edge=this.site=this.circle=null}function Eo(e){var t=xo.pop()||new _o;return t.site=e,t}function So(e){Ro(e),mo.remove(e),xo.push(e),Bo(e)}function Mo(e){var t=e.circle,n=t.x,r=t.cy,o={x:n,y:r},i=e.P,a=e.N,u=[e];So(e);for(var l=i;l.circle&&k(n-l.circle.x)<Te&&k(r-l.circle.cy)<Te;)i=l.P,u.unshift(l),So(l),l=i;u.unshift(l),Ro(l);for(var c=a;c.circle&&k(n-c.circle.x)<Te&&k(r-c.circle.cy)<Te;)a=c.N,u.push(c),So(c),c=a;u.push(c),Ro(c);var s,f=u.length;for(s=1;s<f;++s)c=u[s],l=u[s-1],zo(c.edge,l.site,c.site,o);l=u[0],(c=u[f-1]).edge=Lo(l.site,c.site,null,o),jo(l),jo(c)}function To(e){for(var t,n,r,o,i=e.x,a=e.y,u=mo._;u;)if((r=Co(u,a)-i)>Te)u=u.L;else{if(!((o=i-Oo(u,a))>Te)){r>-Te?(t=u.P,n=u):o>-Te?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}var l=Eo(e);if(mo.insert(t,l),t||n){if(t===n)return Ro(t),n=Eo(t.site),mo.insert(l,n),l.edge=n.edge=Lo(t.site,l.site),jo(t),void jo(n);if(n){Ro(t),Ro(n);var c=t.site,s=c.x,f=c.y,p=e.x-s,h=e.y-f,d=n.site,g=d.x-s,v=d.y-f,y=2*(p*v-h*g),m=p*p+h*h,b=g*g+v*v,w={x:(v*m-h*b)/y+s,y:(p*b-g*m)/y+f};zo(n.edge,c,d,w),l.edge=Lo(c,e,null,w),n.edge=Lo(e,d,null,w),jo(t),jo(n)}else l.edge=Lo(t.site,l.site)}}function Co(e,t){var n=e.site,r=n.x,o=n.y,i=o-t;if(!i)return r;var a=e.P;if(!a)return-1/0;var u=(n=a.site).x,l=n.y,c=l-t;if(!c)return u;var s=u-r,f=1/i-1/c,p=s/c;return f?(-p+Math.sqrt(p*p-2*f*(s*s/(-2*c)-l+c/2+o-i/2)))/f+r:(r+u)/2}function Oo(e,t){var n=e.N;if(n)return Co(n,t);var r=e.site;return r.y===t?r.x:1/0}function No(e){this.site=e,this.edges=[]}function Po(e,t){return t.angle-e.angle}function Ao(){Bo(this),this.x=this.y=this.arc=this.site=this.cy=null}function jo(e){var t=e.P,n=e.N;if(t&&n){var r=t.site,o=e.site,i=n.site;if(r!==i){var a=o.x,u=o.y,l=r.x-a,c=r.y-u,s=i.x-a,f=2*(l*(v=i.y-u)-c*s);if(!(f>=-Ce)){var p=l*l+c*c,h=s*s+v*v,d=(v*p-c*h)/f,g=(l*h-s*p)/f,v=g+u,y=ko.pop()||new Ao;y.arc=e,y.site=o,y.x=d+a,y.y=v+Math.sqrt(d*d+g*g),y.cy=v,e.circle=y;for(var m=null,b=wo._;b;)if(y.y<b.y||y.y===b.y&&y.x<=b.x){if(!b.L){m=b.P;break}b=b.L}else{if(!b.R){m=b;break}b=b.R}wo.insert(m,y),m||(bo=y)}}}}function Ro(e){var t=e.circle;t&&(t.P||(bo=t.N),wo.remove(t),ko.push(t),Bo(t),e.circle=null)}function Do(e,t){var n=e.b;if(n)return!0;var r,o,i=e.a,a=t[0][0],u=t[1][0],l=t[0][1],c=t[1][1],s=e.l,f=e.r,p=s.x,h=s.y,d=f.x,g=f.y,v=(p+d)/2,y=(h+g)/2;if(g===h){if(v<a||v>=u)return;if(p>d){if(i){if(i.y>=c)return}else i={x:v,y:l};n={x:v,y:c}}else{if(i){if(i.y<l)return}else i={x:v,y:c};n={x:v,y:l}}}else if(o=y-(r=(p-d)/(g-h))*v,r<-1||r>1)if(p>d){if(i){if(i.y>=c)return}else i={x:(l-o)/r,y:l};n={x:(c-o)/r,y:c}}else{if(i){if(i.y<l)return}else i={x:(c-o)/r,y:c};n={x:(l-o)/r,y:l}}else if(h<g){if(i){if(i.x>=u)return}else i={x:a,y:r*a+o};n={x:u,y:r*u+o}}else{if(i){if(i.x<a)return}else i={x:u,y:r*u+o};n={x:a,y:r*a+o}}return e.a=i,e.b=n,!0}function Io(e,t){this.l=e,this.r=t,this.a=this.b=null}function Lo(e,t,n,r){var o=new Io(e,t);return vo.push(o),n&&zo(o,e,t,n),r&&zo(o,t,e,r),yo[e.i].edges.push(new Uo(o,e,t)),yo[t.i].edges.push(new Uo(o,t,e)),o}function zo(e,t,n,r){e.a||e.b?e.l===n?e.b=r:e.a=r:(e.a=r,e.l=t,e.r=n)}function Uo(e,t,n){var r=e.a,o=e.b;this.edge=e,this.site=t,this.angle=n?Math.atan2(n.y-t.y,n.x-t.x):e.l===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}function Fo(){this._=null}function Bo(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function qo(e,t){var n=t,r=t.R,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Wo(e,t){var n=t,r=t.L,o=n.U;o?o.L===n?o.L=r:o.R=r:e._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function $o(e){for(;e.L;)e=e.L;return e}function Ho(e,t){var n,r,o,i=e.sort(Yo).pop();for(vo=[],yo=new Array(e.length),mo=new Fo,wo=new Fo;;)if(o=bo,i&&(!o||i.y<o.y||i.y===o.y&&i.x<o.x))i.x===n&&i.y===r||(yo[i.i]=new No(i),To(i),n=i.x,r=i.y),i=e.pop();else{if(!o)break;Mo(o.arc)}t&&(function(e){for(var t,n=vo,r=lr(e[0][0],e[0][1],e[1][0],e[1][1]),o=n.length;o--;)(!Do(t=n[o],e)||!r(t)||k(t.a.x-t.b.x)<Te&&k(t.a.y-t.b.y)<Te)&&(t.a=t.b=null,n.splice(o,1))}(t),function(e){for(var t,n,r,o,i,a,u,l,c,s,f=e[0][0],p=e[1][0],h=e[0][1],d=e[1][1],g=yo,v=g.length;v--;)if((i=g[v])&&i.prepare())for(l=(u=i.edges).length,a=0;a<l;)r=(s=u[a].end()).x,o=s.y,t=(c=u[++a%l].start()).x,n=c.y,(k(r-t)>Te||k(o-n)>Te)&&(u.splice(a,0,new Uo((y=i.site,m=s,b=k(r-f)<Te&&d-o>Te?{x:f,y:k(t-f)<Te?n:d}:k(o-d)<Te&&p-r>Te?{x:k(n-d)<Te?t:p,y:d}:k(r-p)<Te&&o-h>Te?{x:p,y:k(t-p)<Te?n:h}:k(o-h)<Te&&r-f>Te?{x:k(n-h)<Te?t:f,y:h}:null,w=void 0,w=new Io(y,null),w.a=m,w.b=b,vo.push(w),w),i.site,null)),++l);var y,m,b,w}(t));var a={cells:yo,edges:vo};return mo=wo=vo=yo=null,a}function Yo(e,t){return t.y-e.y||t.x-e.x}No.prototype.prepare=function(){for(var e,t=this.edges,n=t.length;n--;)(e=t[n].edge).b&&e.a||t.splice(n,1);return t.sort(Po),t.length},Uo.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},Fo.prototype={insert:function(e,t){var n,r,o;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=$o(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.R&&(qo(this,n),n=(e=n).U),n.C=!1,r.C=!0,Wo(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,e=r):(e===n.L&&(Wo(this,n),n=(e=n).U),n.C=!1,r.C=!0,qo(this,r)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,r,o=e.U,i=e.L,a=e.R;if(n=i?a?$o(a):i:a,o?o.L===e?o.L=n:o.R=n:this._=n,i&&a?(r=n.C,n.C=e.C,n.L=i,i.U=n,n!==a?(o=n.U,n.U=e.U,e=n.R,o.L=e,n.R=a,a.U=n):(n.U=o,o=n,e=n.R)):(r=e.C,e=n),e&&(e.U=o),!r)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===o.L){if((t=o.R).C&&(t.C=!1,o.C=!0,qo(this,o),t=o.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,Wo(this,t),t=o.R),t.C=o.C,o.C=t.R.C=!1,qo(this,o),e=this._;break}}else if((t=o.L).C&&(t.C=!1,o.C=!0,Wo(this,o),t=o.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,qo(this,t),t=o.L),t.C=o.C,o.C=t.L.C=!1,Wo(this,o),e=this._;break}t.C=!0,e=o,o=o.U}while(!e.C);e&&(e.C=!1)}}},i.geom.voronoi=function(e){var t=uo,n=lo,r=t,o=n,i=Vo;if(e)return a(e);function a(e){var t=new Array(e.length),n=i[0][0],r=i[0][1],o=i[1][0],a=i[1][1];return Ho(u(e),i).cells.forEach(function(i,u){var l=i.edges,c=i.site;(t[u]=l.length?l.map(function(e){var t=e.start();return[t.x,t.y]}):c.x>=n&&c.x<=o&&c.y>=r&&c.y<=a?[[n,a],[o,a],[o,r],[n,r]]:[]).point=e[u]}),t}function u(e){return e.map(function(e,t){return{x:Math.round(r(e,t)/Te)*Te,y:Math.round(o(e,t)/Te)*Te,i:t}})}return a.links=function(e){return Ho(u(e)).edges.filter(function(e){return e.l&&e.r}).map(function(t){return{source:e[t.l.i],target:e[t.r.i]}})},a.triangles=function(e){var t=[];return Ho(u(e)).cells.forEach(function(n,r){for(var o,i,a,u,l=n.site,c=n.edges.sort(Po),s=-1,f=c.length,p=c[f-1].edge,h=p.l===l?p.r:p.l;++s<f;)p,o=h,h=(p=c[s].edge).l===l?p.r:p.l,r<o.i&&r<h.i&&(a=o,u=h,((i=l).x-u.x)*(a.y-i.y)-(i.x-a.x)*(u.y-i.y)<0)&&t.push([e[r],e[o.i],e[h.i]])}),t},a.x=function(e){return arguments.length?(r=wt(t=e),a):t},a.y=function(e){return arguments.length?(o=wt(n=e),a):n},a.clipExtent=function(e){return arguments.length?(i=null==e?Vo:e,a):i===Vo?null:i},a.size=function(e){return arguments.length?a.clipExtent(e&&[[0,0],e]):i===Vo?null:i&&i[1]},a};var Vo=[[-1e6,-1e6],[1e6,1e6]];function Qo(e){return e.x}function Go(e){return e.y}function Ko(e,t){e=i.rgb(e),t=i.rgb(t);var n=e.r,r=e.g,o=e.b,a=t.r-n,u=t.g-r,l=t.b-o;return function(e){return"#"+ht(Math.round(n+a*e))+ht(Math.round(r+u*e))+ht(Math.round(o+l*e))}}function Xo(e,t){var n,r={},o={};for(n in e)n in t?r[n]=ni(e[n],t[n]):o[n]=e[n];for(n in t)n in e||(o[n]=t[n]);return function(e){for(n in r)o[n]=r[n](e);return o}}function Zo(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function Jo(e,t){var n,r,o,i=ei.lastIndex=ti.lastIndex=0,a=-1,u=[],l=[];for(e+="",t+="";(n=ei.exec(e))&&(r=ti.exec(t));)(o=r.index)>i&&(o=t.slice(i,o),u[a]?u[a]+=o:u[++a]=o),(n=n[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,l.push({i:a,x:Zo(n,r)})),i=ti.lastIndex;return i<t.length&&(o=t.slice(i),u[a]?u[a]+=o:u[++a]=o),u.length<2?l[0]?(t=l[0].x,function(e){return t(e)+""}):function(){return t}:(t=l.length,function(e){for(var n,r=0;r<t;++r)u[(n=l[r]).i]=n.x(e);return u.join("")})}i.geom.delaunay=function(e){return i.geom.voronoi().triangles(e)},i.geom.quadtree=function(e,t,n,r,o){var i,a=uo,u=lo;if(i=arguments.length)return a=Qo,u=Go,3===i&&(o=n,r=t,n=t=0),l(e);function l(e){var l,c,s,f,p,h,d,g,v,y=wt(a),m=wt(u);if(null!=t)h=t,d=n,g=r,v=o;else if(g=v=-(h=d=1/0),c=[],s=[],p=e.length,i)for(f=0;f<p;++f)(l=e[f]).x<h&&(h=l.x),l.y<d&&(d=l.y),l.x>g&&(g=l.x),l.y>v&&(v=l.y),c.push(l.x),s.push(l.y);else for(f=0;f<p;++f){var b=+y(l=e[f],f),w=+m(l,f);b<h&&(h=b),w<d&&(d=w),b>g&&(g=b),w>v&&(v=w),c.push(b),s.push(w)}var x=g-h,_=v-d;function E(e,t,n,r,o,i,a,u){if(!isNaN(n)&&!isNaN(r))if(e.leaf){var l=e.x,c=e.y;if(null!=l)if(k(l-n)+k(c-r)<.01)S(e,t,n,r,o,i,a,u);else{var s=e.point;e.x=e.y=e.point=null,S(e,s,l,c,o,i,a,u),S(e,t,n,r,o,i,a,u)}else e.x=n,e.y=r,e.point=t}else S(e,t,n,r,o,i,a,u)}function S(e,t,n,r,o,i,a,u){var l=.5*(o+a),c=.5*(i+u),s=n>=l,f=r>=c,p=f<<1|s;e.leaf=!1,s?o=l:a=l,f?i=c:u=c,E(e=e.nodes[p]||(e.nodes[p]={leaf:!0,nodes:[],point:null,x:null,y:null}),t,n,r,o,i,a,u)}x>_?v=d+x:g=h+_;var M={leaf:!0,nodes:[],point:null,x:null,y:null,add:function(e){E(M,e,+y(e,++f),+m(e,f),h,d,g,v)}};if(M.visit=function(e){!function e(t,n,r,o,i,a){if(!t(n,r,o,i,a)){var u=.5*(r+i),l=.5*(o+a),c=n.nodes;c[0]&&e(t,c[0],r,o,u,l),c[1]&&e(t,c[1],u,o,i,l),c[2]&&e(t,c[2],r,l,u,a),c[3]&&e(t,c[3],u,l,i,a)}}(e,M,h,d,g,v)},M.find=function(e){return function(e,t,n,r,o,i,a){var u,l=1/0;return function e(c,s,f,p,h){if(!(s>i||f>a||p<r||h<o)){if(d=c.point){var d,g=t-c.x,v=n-c.y,y=g*g+v*v;if(y<l){var m=Math.sqrt(l=y);r=t-m,o=n-m,i=t+m,a=n+m,u=d}}for(var b=c.nodes,w=.5*(s+p),x=.5*(f+h),k=(n>=x)<<1|t>=w,_=k+4;k<_;++k)if(c=b[3&k])switch(3&k){case 0:e(c,s,f,w,x);break;case 1:e(c,w,f,p,x);break;case 2:e(c,s,x,w,h);break;case 3:e(c,w,x,p,h)}}}(e,r,o,i,a),u}(M,e[0],e[1],h,d,g,v)},f=-1,null==t){for(;++f<p;)E(M,e[f],c[f],s[f],h,d,g,v);--f}else e.forEach(M.add);return c=s=e=l=null,M}return l.x=function(e){return arguments.length?(a=e,l):a},l.y=function(e){return arguments.length?(u=e,l):u},l.extent=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=+e[0][0],n=+e[0][1],r=+e[1][0],o=+e[1][1]),l):null==t?null:[[t,n],[r,o]]},l.size=function(e){return arguments.length?(null==e?t=n=r=o=null:(t=n=0,r=+e[0],o=+e[1]),l):null==t?null:[r-t,o-n]},l},i.interpolateRgb=Ko,i.interpolateObject=Xo,i.interpolateNumber=Zo,i.interpolateString=Jo;var ei=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ti=new RegExp(ei.source,"g");function ni(e,t){for(var n,r=i.interpolators.length;--r>=0&&!(n=i.interpolators[r](e,t)););return n}function ri(e,t){var n,r=[],o=[],i=e.length,a=t.length,u=Math.min(e.length,t.length);for(n=0;n<u;++n)r.push(ni(e[n],t[n]));for(;n<i;++n)o[n]=e[n];for(;n<a;++n)o[n]=t[n];return function(e){for(n=0;n<u;++n)o[n]=r[n](e);return o}}i.interpolate=ni,i.interpolators=[function(e,t){var n=typeof t;return("string"===n?bt.has(t.toLowerCase())||/^(#|rgb\(|hsl\()/i.test(t)?Ko:Jo:t instanceof He?Ko:Array.isArray(t)?ri:"object"===n&&isNaN(t)?Xo:Zo)(e,t)}],i.interpolateArray=ri;var oi=function(){return D},ii=i.map({linear:oi,poly:function(e){return function(t){return Math.pow(t,e)}},quad:function(){return ci},cubic:function(){return si},sin:function(){return pi},exp:function(){return hi},circle:function(){return di},elastic:function(e,t){var n;arguments.length<2&&(t=.45);arguments.length?n=t/Ne*Math.asin(1/e):(e=1,n=t/4);return function(r){return 1+e*Math.pow(2,-10*r)*Math.sin((r-n)*Ne/t)}},back:function(e){e||(e=1.70158);return function(t){return t*t*((e+1)*t-e)}},bounce:function(){return gi}}),ai=i.map({in:D,out:ui,"in-out":li,"out-in":function(e){return li(ui(e))}});function ui(e){return function(t){return 1-e(1-t)}}function li(e){return function(t){return.5*(t<.5?e(2*t):2-e(2-2*t))}}function ci(e){return e*e}function si(e){return e*e*e}function fi(e){if(e<=0)return 0;if(e>=1)return 1;var t=e*e,n=t*e;return 4*(e<.5?n:3*(e-t)+n-.75)}function pi(e){return 1-Math.cos(e*Ae)}function hi(e){return Math.pow(2,10*(e-1))}function di(e){return 1-Math.sqrt(1-e*e)}function gi(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function vi(e,t){return t-=e,function(n){return Math.round(e+t*n)}}function yi(e){var t,n,r,o=[e.a,e.b],i=[e.c,e.d],a=bi(o),u=mi(o,i),l=bi(((t=i)[0]+=(r=-u)*(n=o)[0],t[1]+=r*n[1],t))||0;o[0]*i[1]<i[0]*o[1]&&(o[0]*=-1,o[1]*=-1,a*=-1,u*=-1),this.rotate=(a?Math.atan2(o[1],o[0]):Math.atan2(-i[0],i[1]))*Re,this.translate=[e.e,e.f],this.scale=[a,l],this.skew=l?Math.atan2(u,l)*Re:0}function mi(e,t){return e[0]*t[0]+e[1]*t[1]}function bi(e){var t=Math.sqrt(mi(e,e));return t&&(e[0]/=t,e[1]/=t),t}i.ease=function(e){var t,n=e.indexOf("-"),r=n>=0?e.slice(0,n):e,o=n>=0?e.slice(n+1):"in";return r=ii.get(r)||oi,o=ai.get(o)||D,t=o(r.apply(null,a.call(arguments,1))),function(e){return e<=0?0:e>=1?1:t(e)}},i.interpolateHcl=function(e,t){e=i.hcl(e),t=i.hcl(t);var n=e.h,r=e.c,o=e.l,a=t.h-n,u=t.c-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.c:r);isNaN(a)?(a=0,n=isNaN(n)?t.h:n):a>180?a-=360:a<-180&&(a+=360);return function(e){return Xe(n+a*e,r+u*e,o+l*e)+""}},i.interpolateHsl=function(e,t){e=i.hsl(e),t=i.hsl(t);var n=e.h,r=e.s,o=e.l,a=t.h-n,u=t.s-r,l=t.l-o;isNaN(u)&&(u=0,r=isNaN(r)?t.s:r);isNaN(a)?(a=0,n=isNaN(n)?t.h:n):a>180?a-=360:a<-180&&(a+=360);return function(e){return Qe(n+a*e,r+u*e,o+l*e)+""}},i.interpolateLab=function(e,t){e=i.lab(e),t=i.lab(t);var n=e.l,r=e.a,o=e.b,a=t.l-n,u=t.a-r,l=t.b-o;return function(e){return ot(n+a*e,r+u*e,o+l*e)+""}},i.interpolateRound=vi,i.transform=function(e){var t=l.createElementNS(i.ns.prefix.svg,"g");return(i.transform=function(e){if(null!=e){t.setAttribute("transform",e);var n=t.transform.baseVal.consolidate()}return new yi(n?n.matrix:wi)})(e)},yi.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var wi={a:1,b:0,c:0,d:1,e:0,f:0};function xi(e){return e.length?e.pop()+",":""}function ki(e,t){var n=[],r=[];return e=i.transform(e),t=i.transform(t),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push("translate(",null,",",null,")");r.push({i:o-4,x:Zo(e[0],t[0])},{i:o-2,x:Zo(e[1],t[1])})}else(t[0]||t[1])&&n.push("translate("+t+")")}(e.translate,t.translate,n,r),function(e,t,n,r){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),r.push({i:n.push(xi(n)+"rotate(",null,")")-2,x:Zo(e,t)})):t&&n.push(xi(n)+"rotate("+t+")")}(e.rotate,t.rotate,n,r),function(e,t,n,r){e!==t?r.push({i:n.push(xi(n)+"skewX(",null,")")-2,x:Zo(e,t)}):t&&n.push(xi(n)+"skewX("+t+")")}(e.skew,t.skew,n,r),function(e,t,n,r){if(e[0]!==t[0]||e[1]!==t[1]){var o=n.push(xi(n)+"scale(",null,",",null,")");r.push({i:o-4,x:Zo(e[0],t[0])},{i:o-2,x:Zo(e[1],t[1])})}else 1===t[0]&&1===t[1]||n.push(xi(n)+"scale("+t+")")}(e.scale,t.scale,n,r),e=t=null,function(e){for(var t,o=-1,i=r.length;++o<i;)n[(t=r[o]).i]=t.x(e);return n.join("")}}function _i(e,t){return t=(t-=e=+e)||1/t,function(n){return(n-e)/t}}function Ei(e,t){return t=(t-=e=+e)||1/t,function(n){return Math.max(0,Math.min(1,(n-e)/t))}}function Si(e){for(var t=e.source,n=e.target,r=function(e,t){if(e===t)return e;var n=Mi(e),r=Mi(t),o=n.pop(),i=r.pop(),a=null;for(;o===i;)a=o,o=n.pop(),i=r.pop();return a}(t,n),o=[t];t!==r;)t=t.parent,o.push(t);for(var i=o.length;n!==r;)o.splice(i,0,n),n=n.parent;return o}function Mi(e){for(var t=[],n=e.parent;null!=n;)t.push(e),e=n,n=n.parent;return t.push(e),t}function Ti(e){e.fixed|=2}function Ci(e){e.fixed&=-7}function Oi(e){e.fixed|=4,e.px=e.x,e.py=e.y}function Ni(e){e.fixed&=-5}i.interpolateTransform=ki,i.layout={},i.layout.bundle=function(){return function(e){for(var t=[],n=-1,r=e.length;++n<r;)t.push(Si(e[n]));return t}},i.layout.chord=function(){var e,t,n,r,o,a,u,l={},c=0;function s(){var l,s,p,h,d,g={},v=[],y=i.range(r),m=[];for(e=[],t=[],l=0,h=-1;++h<r;){for(s=0,d=-1;++d<r;)s+=n[h][d];v.push(s),m.push(i.range(r)),l+=s}for(o&&y.sort(function(e,t){return o(v[e],v[t])}),a&&m.forEach(function(e,t){e.sort(function(e,r){return a(n[t][e],n[t][r])})}),l=(Ne-c*r)/l,s=0,h=-1;++h<r;){for(p=s,d=-1;++d<r;){var b=y[h],w=m[b][d],x=n[b][w],k=s,_=s+=x*l;g[b+"-"+w]={index:b,subindex:w,startAngle:k,endAngle:_,value:x}}t[b]={index:b,startAngle:p,endAngle:s,value:v[b]},s+=c}for(h=-1;++h<r;)for(d=h-1;++d<r;){var E=g[h+"-"+d],S=g[d+"-"+h];(E.value||S.value)&&e.push(E.value<S.value?{source:S,target:E}:{source:E,target:S})}u&&f()}function f(){e.sort(function(e,t){return u((e.source.value+e.target.value)/2,(t.source.value+t.target.value)/2)})}return l.matrix=function(o){return arguments.length?(r=(n=o)&&n.length,e=t=null,l):n},l.padding=function(n){return arguments.length?(c=n,e=t=null,l):c},l.sortGroups=function(n){return arguments.length?(o=n,e=t=null,l):o},l.sortSubgroups=function(t){return arguments.length?(a=t,e=null,l):a},l.sortChords=function(t){return arguments.length?(u=t,e&&f(),l):u},l.chords=function(){return e||s(),e},l.groups=function(){return t||s(),t},l},i.layout.force=function(){var e,t,n,r,o,a,u={},l=i.dispatch("start","tick","end"),c=[1,1],s=.9,f=Pi,p=Ai,h=-30,d=ji,g=.1,v=.64,y=[],m=[];function b(e){return function(t,n,r,o){if(t.point!==e){var i=t.cx-e.x,a=t.cy-e.y,u=o-n,l=i*i+a*a;if(u*u/v<l){if(l<d){var c=t.charge/l;e.px-=i*c,e.py-=a*c}return!0}if(t.point&&l&&l<d){c=t.pointCharge/l;e.px-=i*c,e.py-=a*c}}return!t.charge}}function w(e){e.px=i.event.x,e.py=i.event.y,u.resume()}return u.tick=function(){if((n*=.99)<.005)return e=null,l.end({type:"end",alpha:n=0}),!0;var t,u,f,p,d,v,w,x,k,_=y.length,E=m.length;for(u=0;u<E;++u)p=(f=m[u]).source,(v=(x=(d=f.target).x-p.x)*x+(k=d.y-p.y)*k)&&(x*=v=n*o[u]*((v=Math.sqrt(v))-r[u])/v,k*=v,d.x-=x*(w=p.weight+d.weight?p.weight/(p.weight+d.weight):.5),d.y-=k*w,p.x+=x*(w=1-w),p.y+=k*w);if((w=n*g)&&(x=c[0]/2,k=c[1]/2,u=-1,w))for(;++u<_;)(f=y[u]).x+=(x-f.x)*w,f.y+=(k-f.y)*w;if(h)for(!function e(t,n,r){var o=0,i=0;t.charge=0;if(!t.leaf)for(var a,u=t.nodes,l=u.length,c=-1;++c<l;)null!=(a=u[c])&&(e(a,n,r),t.charge+=a.charge,o+=a.charge*a.cx,i+=a.charge*a.cy);if(t.point){t.leaf||(t.point.x+=Math.random()-.5,t.point.y+=Math.random()-.5);var s=n*r[t.point.index];t.charge+=t.pointCharge=s,o+=s*t.point.x,i+=s*t.point.y}t.cx=o/t.charge;t.cy=i/t.charge}(t=i.geom.quadtree(y),n,a),u=-1;++u<_;)(f=y[u]).fixed||t.visit(b(f));for(u=-1;++u<_;)(f=y[u]).fixed?(f.x=f.px,f.y=f.py):(f.x-=(f.px-(f.px=f.x))*s,f.y-=(f.py-(f.py=f.y))*s);l.tick({type:"tick",alpha:n})},u.nodes=function(e){return arguments.length?(y=e,u):y},u.links=function(e){return arguments.length?(m=e,u):m},u.size=function(e){return arguments.length?(c=e,u):c},u.linkDistance=function(e){return arguments.length?(f="function"==typeof e?e:+e,u):f},u.distance=u.linkDistance,u.linkStrength=function(e){return arguments.length?(p="function"==typeof e?e:+e,u):p},u.friction=function(e){return arguments.length?(s=+e,u):s},u.charge=function(e){return arguments.length?(h="function"==typeof e?e:+e,u):h},u.chargeDistance=function(e){return arguments.length?(d=e*e,u):Math.sqrt(d)},u.gravity=function(e){return arguments.length?(g=+e,u):g},u.theta=function(e){return arguments.length?(v=e*e,u):Math.sqrt(v)},u.alpha=function(t){return arguments.length?(t=+t,n?t>0?n=t:(e.c=null,e.t=NaN,e=null,l.end({type:"end",alpha:n=0})):t>0&&(l.start({type:"start",alpha:n=t}),e=Ct(u.tick)),u):n},u.start=function(){var e,t,n,i=y.length,l=m.length,s=c[0],d=c[1];for(e=0;e<i;++e)(n=y[e]).index=e,n.weight=0;for(e=0;e<l;++e)"number"==typeof(n=m[e]).source&&(n.source=y[n.source]),"number"==typeof n.target&&(n.target=y[n.target]),++n.source.weight,++n.target.weight;for(e=0;e<i;++e)n=y[e],isNaN(n.x)&&(n.x=g("x",s)),isNaN(n.y)&&(n.y=g("y",d)),isNaN(n.px)&&(n.px=n.x),isNaN(n.py)&&(n.py=n.y);if(r=[],"function"==typeof f)for(e=0;e<l;++e)r[e]=+f.call(this,m[e],e);else for(e=0;e<l;++e)r[e]=f;if(o=[],"function"==typeof p)for(e=0;e<l;++e)o[e]=+p.call(this,m[e],e);else for(e=0;e<l;++e)o[e]=p;if(a=[],"function"==typeof h)for(e=0;e<i;++e)a[e]=+h.call(this,y[e],e);else for(e=0;e<i;++e)a[e]=h;function g(n,r){if(!t){for(t=new Array(i),c=0;c<i;++c)t[c]=[];for(c=0;c<l;++c){var o=m[c];t[o.source.index].push(o.target),t[o.target.index].push(o.source)}}for(var a,u=t[e],c=-1,s=u.length;++c<s;)if(!isNaN(a=u[c][n]))return a;return Math.random()*r}return u.resume()},u.resume=function(){return u.alpha(.1)},u.stop=function(){return u.alpha(0)},u.drag=function(){if(t||(t=i.behavior.drag().origin(D).on("dragstart.force",Ti).on("drag.force",w).on("dragend.force",Ci)),!arguments.length)return t;this.on("mouseover.force",Oi).on("mouseout.force",Ni).call(t)},i.rebind(u,l,"on")};var Pi=20,Ai=1,ji=1/0;function Ri(e,t){return i.rebind(e,t,"sort","children","value"),e.nodes=e,e.links=Fi,e}function Di(e,t){for(var n=[e];null!=(e=n.pop());)if(t(e),(o=e.children)&&(r=o.length))for(var r,o;--r>=0;)n.push(o[r])}function Ii(e,t){for(var n=[e],r=[];null!=(e=n.pop());)if(r.push(e),(i=e.children)&&(o=i.length))for(var o,i,a=-1;++a<o;)n.push(i[a]);for(;null!=(e=r.pop());)t(e)}function Li(e){return e.children}function zi(e){return e.value}function Ui(e,t){return t.value-e.value}function Fi(e){return i.merge(e.map(function(e){return(e.children||[]).map(function(t){return{source:e,target:t}})}))}i.layout.hierarchy=function(){var e=Ui,t=Li,n=zi;function r(o){var i,a=[o],u=[];for(o.depth=0;null!=(i=a.pop());)if(u.push(i),(c=t.call(r,i,i.depth))&&(l=c.length)){for(var l,c,s;--l>=0;)a.push(s=c[l]),s.parent=i,s.depth=i.depth+1;n&&(i.value=0),i.children=c}else n&&(i.value=+n.call(r,i,i.depth)||0),delete i.children;return Ii(o,function(t){var r,o;e&&(r=t.children)&&r.sort(e),n&&(o=t.parent)&&(o.value+=t.value)}),u}return r.sort=function(t){return arguments.length?(e=t,r):e},r.children=function(e){return arguments.length?(t=e,r):t},r.value=function(e){return arguments.length?(n=e,r):n},r.revalue=function(e){return n&&(Di(e,function(e){e.children&&(e.value=0)}),Ii(e,function(e){var t;e.children||(e.value=+n.call(r,e,e.depth)||0),(t=e.parent)&&(t.value+=e.value)})),e},r},i.layout.partition=function(){var e=i.layout.hierarchy(),t=[1,1];function n(n,r){var o=e.call(this,n,r);return function e(t,n,r,o){var i=t.children;if(t.x=n,t.y=t.depth*o,t.dx=r,t.dy=o,i&&(a=i.length)){var a,u,l,c=-1;for(r=t.value?r/t.value:0;++c<a;)e(u=i[c],n,l=u.value*r,o),n+=l}}(o[0],0,t[0],t[1]/function e(t){var n=t.children,r=0;if(n&&(o=n.length))for(var o,i=-1;++i<o;)r=Math.max(r,e(n[i]));return 1+r}(o[0])),o}return n.size=function(e){return arguments.length?(t=e,n):t},Ri(n,e)},i.layout.pie=function(){var e=Number,t=Bi,n=0,r=Ne,o=0;function a(u){var l,c=u.length,s=u.map(function(t,n){return+e.call(a,t,n)}),f=+("function"==typeof n?n.apply(this,arguments):n),p=("function"==typeof r?r.apply(this,arguments):r)-f,h=Math.min(Math.abs(p)/c,+("function"==typeof o?o.apply(this,arguments):o)),d=h*(p<0?-1:1),g=i.sum(s),v=g?(p-c*d)/g:0,y=i.range(c),m=[];return null!=t&&y.sort(t===Bi?function(e,t){return s[t]-s[e]}:function(e,n){return t(u[e],u[n])}),y.forEach(function(e){m[e]={data:u[e],value:l=s[e],startAngle:f,endAngle:f+=l*v+d,padAngle:h}}),m}return a.value=function(t){return arguments.length?(e=t,a):e},a.sort=function(e){return arguments.length?(t=e,a):t},a.startAngle=function(e){return arguments.length?(n=e,a):n},a.endAngle=function(e){return arguments.length?(r=e,a):r},a.padAngle=function(e){return arguments.length?(o=e,a):o},a};var Bi={};function qi(e){return e.x}function Wi(e){return e.y}function $i(e,t,n){e.y0=t,e.y=n}i.layout.stack=function(){var e=D,t=Vi,n=Qi,r=$i,o=qi,a=Wi;function u(l,c){if(!(h=l.length))return l;var s=l.map(function(t,n){return e.call(u,t,n)}),f=s.map(function(e){return e.map(function(e,t){return[o.call(u,e,t),a.call(u,e,t)]})}),p=t.call(u,f,c);s=i.permute(s,p),f=i.permute(f,p);var h,d,g,v,y=n.call(u,f,c),m=s[0].length;for(g=0;g<m;++g)for(r.call(u,s[0][g],v=y[g],f[0][g][1]),d=1;d<h;++d)r.call(u,s[d][g],v+=f[d-1][g][1],f[d][g][1]);return l}return u.values=function(t){return arguments.length?(e=t,u):e},u.order=function(e){return arguments.length?(t="function"==typeof e?e:Hi.get(e)||Vi,u):t},u.offset=function(e){return arguments.length?(n="function"==typeof e?e:Yi.get(e)||Qi,u):n},u.x=function(e){return arguments.length?(o=e,u):o},u.y=function(e){return arguments.length?(a=e,u):a},u.out=function(e){return arguments.length?(r=e,u):r},u};var Hi=i.map({"inside-out":function(e){var t,n,r=e.length,o=e.map(Gi),a=e.map(Ki),u=i.range(r).sort(function(e,t){return o[e]-o[t]}),l=0,c=0,s=[],f=[];for(t=0;t<r;++t)n=u[t],l<c?(l+=a[n],s.push(n)):(c+=a[n],f.push(n));return f.reverse().concat(s)},reverse:function(e){return i.range(e.length).reverse()},default:Vi}),Yi=i.map({silhouette:function(e){var t,n,r,o=e.length,i=e[0].length,a=[],u=0,l=[];for(n=0;n<i;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];r>u&&(u=r),a.push(r)}for(n=0;n<i;++n)l[n]=(u-a[n])/2;return l},wiggle:function(e){var t,n,r,o,i,a,u,l,c,s=e.length,f=e[0],p=f.length,h=[];for(h[0]=l=c=0,n=1;n<p;++n){for(t=0,o=0;t<s;++t)o+=e[t][n][1];for(t=0,i=0,u=f[n][0]-f[n-1][0];t<s;++t){for(r=0,a=(e[t][n][1]-e[t][n-1][1])/(2*u);r<t;++r)a+=(e[r][n][1]-e[r][n-1][1])/u;i+=a*e[t][n][1]}h[n]=l-=o?i/o*u:0,l<c&&(c=l)}for(n=0;n<p;++n)h[n]-=c;return h},expand:function(e){var t,n,r,o=e.length,i=e[0].length,a=1/o,u=[];for(n=0;n<i;++n){for(t=0,r=0;t<o;t++)r+=e[t][n][1];if(r)for(t=0;t<o;t++)e[t][n][1]/=r;else for(t=0;t<o;t++)e[t][n][1]=a}for(n=0;n<i;++n)u[n]=0;return u},zero:Qi});function Vi(e){return i.range(e.length)}function Qi(e){for(var t=-1,n=e[0].length,r=[];++t<n;)r[t]=0;return r}function Gi(e){for(var t,n=1,r=0,o=e[0][1],i=e.length;n<i;++n)(t=e[n][1])>o&&(r=n,o=t);return r}function Ki(e){return e.reduce(Xi,0)}function Xi(e,t){return e+t[1]}function Zi(e,t){return Ji(e,Math.ceil(Math.log(t.length)/Math.LN2+1))}function Ji(e,t){for(var n=-1,r=+e[0],o=(e[1]-r)/t,i=[];++n<=t;)i[n]=o*n+r;return i}function ea(e){return[i.min(e),i.max(e)]}function ta(e,t){return e.value-t.value}function na(e,t){var n=e._pack_next;e._pack_next=t,t._pack_prev=e,t._pack_next=n,n._pack_prev=t}function ra(e,t){e._pack_next=t,t._pack_prev=e}function oa(e,t){var n=t.x-e.x,r=t.y-e.y,o=e.r+t.r;return.999*o*o>n*n+r*r}function ia(e){if((t=e.children)&&(l=t.length)){var t,n,r,o,i,a,u,l,c=1/0,s=-1/0,f=1/0,p=-1/0;if(t.forEach(aa),(n=t[0]).x=-n.r,n.y=0,b(n),l>1&&((r=t[1]).x=r.r,r.y=0,b(r),l>2))for(la(n,r,o=t[2]),b(o),na(n,o),n._pack_prev=o,na(o,r),r=n._pack_next,i=3;i<l;i++){la(n,r,o=t[i]);var h=0,d=1,g=1;for(a=r._pack_next;a!==r;a=a._pack_next,d++)if(oa(a,o)){h=1;break}if(1==h)for(u=n._pack_prev;u!==a._pack_prev&&!oa(u,o);u=u._pack_prev,g++);h?(d<g||d==g&&r.r<n.r?ra(n,r=a):ra(n=u,r),i--):(na(n,o),r=o,b(o))}var v=(c+s)/2,y=(f+p)/2,m=0;for(i=0;i<l;i++)(o=t[i]).x-=v,o.y-=y,m=Math.max(m,o.r+Math.sqrt(o.x*o.x+o.y*o.y));e.r=m,t.forEach(ua)}function b(e){c=Math.min(e.x-e.r,c),s=Math.max(e.x+e.r,s),f=Math.min(e.y-e.r,f),p=Math.max(e.y+e.r,p)}}function aa(e){e._pack_next=e._pack_prev=e}function ua(e){delete e._pack_next,delete e._pack_prev}function la(e,t,n){var r=e.r+n.r,o=t.x-e.x,i=t.y-e.y;if(r&&(o||i)){var a=t.r+n.r,u=o*o+i*i,l=.5+((r*=r)-(a*=a))/(2*u),c=Math.sqrt(Math.max(0,2*a*(r+u)-(r-=u)*r-a*a))/(2*u);n.x=e.x+l*o+c*i,n.y=e.y+l*i-c*o}else n.x=e.x+r,n.y=e.y}function ca(e,t){return e.parent==t.parent?1:2}function sa(e){var t=e.children;return t.length?t[0]:e.t}function fa(e){var t,n=e.children;return(t=n.length)?n[t-1]:e.t}function pa(e,t,n){var r=n/(t.i-e.i);t.c-=r,t.s+=n,e.c+=r,t.z+=n,t.m+=n}function ha(e,t,n){return e.a.parent===t.parent?e.a:n}function da(e){return{x:e.x,y:e.y,dx:e.dx,dy:e.dy}}function ga(e,t){var n=e.x+t[3],r=e.y+t[0],o=e.dx-t[1]-t[3],i=e.dy-t[0]-t[2];return o<0&&(n+=o/2,o=0),i<0&&(r+=i/2,i=0),{x:n,y:r,dx:o,dy:i}}function va(e){var t=e[0],n=e[e.length-1];return t<n?[t,n]:[n,t]}function ya(e){return e.rangeExtent?e.rangeExtent():va(e.range())}function ma(e,t,n,r){var o=n(e[0],e[1]),i=r(t[0],t[1]);return function(e){return i(o(e))}}function ba(e,t){var n,r=0,o=e.length-1,i=e[r],a=e[o];return a<i&&(n=r,r=o,o=n,n=i,i=a,a=n),e[r]=t.floor(i),e[o]=t.ceil(a),e}function wa(e){return e?{floor:function(t){return Math.floor(t/e)*e},ceil:function(t){return Math.ceil(t/e)*e}}:xa}i.layout.histogram=function(){var e=!0,t=Number,n=ea,r=Zi;function o(o,a){for(var u,l,c=[],s=o.map(t,this),f=n.call(this,s,a),p=r.call(this,f,s,a),h=(a=-1,s.length),d=p.length-1,g=e?1:1/h;++a<d;)(u=c[a]=[]).dx=p[a+1]-(u.x=p[a]),u.y=0;if(d>0)for(a=-1;++a<h;)(l=s[a])>=f[0]&&l<=f[1]&&((u=c[i.bisect(p,l,1,d)-1]).y+=g,u.push(o[a]));return c}return o.value=function(e){return arguments.length?(t=e,o):t},o.range=function(e){return arguments.length?(n=wt(e),o):n},o.bins=function(e){return arguments.length?(r="number"==typeof e?function(t){return Ji(t,e)}:wt(e),o):r},o.frequency=function(t){return arguments.length?(e=!!t,o):e},o},i.layout.pack=function(){var e,t=i.layout.hierarchy().sort(ta),n=0,r=[1,1];function o(o,i){var a=t.call(this,o,i),u=a[0],l=r[0],c=r[1],s=null==e?Math.sqrt:"function"==typeof e?e:function(){return e};if(u.x=u.y=0,Ii(u,function(e){e.r=+s(e.value)}),Ii(u,ia),n){var f=n*(e?1:Math.max(2*u.r/l,2*u.r/c))/2;Ii(u,function(e){e.r+=f}),Ii(u,ia),Ii(u,function(e){e.r-=f})}return function e(t,n,r,o){var i=t.children;t.x=n+=o*t.x;t.y=r+=o*t.y;t.r*=o;if(i)for(var a=-1,u=i.length;++a<u;)e(i[a],n,r,o)}(u,l/2,c/2,e?1:1/Math.max(2*u.r/l,2*u.r/c)),a}return o.size=function(e){return arguments.length?(r=e,o):r},o.radius=function(t){return arguments.length?(e=null==t||"function"==typeof t?t:+t,o):e},o.padding=function(e){return arguments.length?(n=+e,o):n},Ri(o,t)},i.layout.tree=function(){var e=i.layout.hierarchy().sort(null).value(null),t=ca,n=[1,1],r=null;function o(o,i){var c=e.call(this,o,i),s=c[0],f=function(e){var t,n={A:null,children:[e]},r=[n];for(;null!=(t=r.pop());)for(var o,i=t.children,a=0,u=i.length;a<u;++a)r.push((i[a]=o={_:i[a],parent:t,children:(o=i[a].children)&&o.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:a}).a=o);return n.children[0]}(s);if(Ii(f,a),f.parent.m=-f.z,Di(f,u),r)Di(s,l);else{var p=s,h=s,d=s;Di(s,function(e){e.x<p.x&&(p=e),e.x>h.x&&(h=e),e.depth>d.depth&&(d=e)});var g=t(p,h)/2-p.x,v=n[0]/(h.x+t(h,p)/2+g),y=n[1]/(d.depth||1);Di(s,function(e){e.x=(e.x+g)*v,e.y=e.depth*y})}return c}function a(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n.length){!function(e){var t,n=0,r=0,o=e.children,i=o.length;for(;--i>=0;)(t=o[i]).z+=n,t.m+=n,n+=t.s+(r+=t.c)}(e);var i=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-i):e.z=i}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,i=e,a=e,u=n,l=i.parent.children[0],c=i.m,s=a.m,f=u.m,p=l.m;u=fa(u),i=sa(i),u&&i;)l=sa(l),(a=fa(a)).a=e,(o=u.z+f-i.z-c+t(u._,i._))>0&&(pa(ha(u,e,r),e,o),c+=o,s+=o),f+=u.m,c+=i.m,p+=l.m,s+=a.m;u&&!fa(a)&&(a.t=u,a.m+=f-s),i&&!sa(l)&&(l.t=i,l.m+=c-p,r=e)}return r}(e,o,e.parent.A||r[0])}function u(e){e._.x=e.z+e.parent.m,e.m+=e.parent.m}function l(e){e.x*=n[0],e.y=e.depth*n[1]}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e)?l:null,o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null==(n=e)?null:l,o):r?n:null},Ri(o,e)},i.layout.cluster=function(){var e=i.layout.hierarchy().sort(null).value(null),t=ca,n=[1,1],r=!1;function o(o,a){var u,l=e.call(this,o,a),c=l[0],s=0;Ii(c,function(e){var n=e.children;n&&n.length?(e.x=function(e){return e.reduce(function(e,t){return e+t.x},0)/e.length}(n),e.y=function(e){return 1+i.max(e,function(e){return e.y})}(n)):(e.x=u?s+=t(e,u):0,e.y=0,u=e)});var f=function e(t){var n=t.children;return n&&n.length?e(n[0]):t}(c),p=function e(t){var n,r=t.children;return r&&(n=r.length)?e(r[n-1]):t}(c),h=f.x-t(f,p)/2,d=p.x+t(p,f)/2;return Ii(c,r?function(e){e.x=(e.x-c.x)*n[0],e.y=(c.y-e.y)*n[1]}:function(e){e.x=(e.x-h)/(d-h)*n[0],e.y=(1-(c.y?e.y/c.y:1))*n[1]}),l}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(e){return arguments.length?(r=null==(n=e),o):r?null:n},o.nodeSize=function(e){return arguments.length?(r=null!=(n=e),o):r?n:null},Ri(o,e)},i.layout.treemap=function(){var e,t=i.layout.hierarchy(),n=Math.round,r=[1,1],o=null,a=da,u=!1,l="squarify",c=.5*(1+Math.sqrt(5));function s(e,t){for(var n,r,o=-1,i=e.length;++o<i;)r=(n=e[o]).value*(t<0?0:t),n.area=isNaN(r)||r<=0?0:r}function f(e){var t=e.children;if(t&&t.length){var n,r,o,i=a(e),u=[],c=t.slice(),p=1/0,g="slice"===l?i.dx:"dice"===l?i.dy:"slice-dice"===l?1&e.depth?i.dy:i.dx:Math.min(i.dx,i.dy);for(s(c,i.dx*i.dy/e.value),u.area=0;(o=c.length)>0;)u.push(n=c[o-1]),u.area+=n.area,"squarify"!==l||(r=h(u,g))<=p?(c.pop(),p=r):(u.area-=u.pop().area,d(u,g,i,!1),g=Math.min(i.dx,i.dy),u.length=u.area=0,p=1/0);u.length&&(d(u,g,i,!0),u.length=u.area=0),t.forEach(f)}}function p(e){var t=e.children;if(t&&t.length){var n,r=a(e),o=t.slice(),i=[];for(s(o,r.dx*r.dy/e.value),i.area=0;n=o.pop();)i.push(n),i.area+=n.area,null!=n.z&&(d(i,n.z?r.dx:r.dy,r,!o.length),i.length=i.area=0);t.forEach(p)}}function h(e,t){for(var n,r=e.area,o=0,i=1/0,a=-1,u=e.length;++a<u;)(n=e[a].area)&&(n<i&&(i=n),n>o&&(o=n));return t*=t,(r*=r)?Math.max(t*o*c/r,r/(t*i*c)):1/0}function d(e,t,r,o){var i,a=-1,u=e.length,l=r.x,c=r.y,s=t?n(e.area/t):0;if(t==r.dx){for((o||s>r.dy)&&(s=r.dy);++a<u;)(i=e[a]).x=l,i.y=c,i.dy=s,l+=i.dx=Math.min(r.x+r.dx-l,s?n(i.area/s):0);i.z=!0,i.dx+=r.x+r.dx-l,r.y+=s,r.dy-=s}else{for((o||s>r.dx)&&(s=r.dx);++a<u;)(i=e[a]).x=l,i.y=c,i.dx=s,c+=i.dy=Math.min(r.y+r.dy-c,s?n(i.area/s):0);i.z=!1,i.dy+=r.y+r.dy-c,r.x+=s,r.dx-=s}}function g(n){var o=e||t(n),i=o[0];return i.x=i.y=0,i.value?(i.dx=r[0],i.dy=r[1]):i.dx=i.dy=0,e&&t.revalue(i),s([i],i.dx*i.dy/i.value),(e?p:f)(i),u&&(e=o),o}return g.size=function(e){return arguments.length?(r=e,g):r},g.padding=function(e){if(!arguments.length)return o;function t(t){return ga(t,e)}var n;return a=null==(o=e)?da:"function"==(n=typeof e)?function(t){var n=e.call(g,t,t.depth);return null==n?da(t):ga(t,"number"==typeof n?[n,n,n,n]:n)}:"number"===n?(e=[e,e,e,e],t):t,g},g.round=function(e){return arguments.length?(n=e?Math.round:Number,g):n!=Number},g.sticky=function(t){return arguments.length?(u=t,e=null,g):u},g.ratio=function(e){return arguments.length?(c=e,g):c},g.mode=function(e){return arguments.length?(l=e+"",g):l},Ri(g,t)},i.random={normal:function(e,t){var n=arguments.length;return n<2&&(t=1),n<1&&(e=0),function(){var n,r,o;do{o=(n=2*Math.random()-1)*n+(r=2*Math.random()-1)*r}while(!o||o>1);return e+t*n*Math.sqrt(-2*Math.log(o)/o)}},logNormal:function(){var e=i.random.normal.apply(i,arguments);return function(){return Math.exp(e())}},bates:function(e){var t=i.random.irwinHall(e);return function(){return t()/e}},irwinHall:function(e){return function(){for(var t=0,n=0;n<e;n++)t+=Math.random();return t}}},i.scale={};var xa={floor:D,ceil:D};function ka(e,t,n,r){var o=[],a=[],u=0,l=Math.min(e.length,t.length)-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++u<=l;)o.push(n(e[u-1],e[u])),a.push(r(t[u-1],t[u]));return function(t){var n=i.bisect(e,t,1,l)-1;return a[n](o[n](t))}}function _a(e,t){return i.rebind(e,t,"range","rangeRound","interpolate","clamp")}function Ea(e,t){return ba(e,wa(Sa(e,t)[2])),ba(e,wa(Sa(e,t)[2])),e}function Sa(e,t){null==t&&(t=10);var n=va(e),r=n[1]-n[0],o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*o;return i<=.15?o*=10:i<=.35?o*=5:i<=.75&&(o*=2),n[0]=Math.ceil(n[0]/o)*o,n[1]=Math.floor(n[1]/o)*o+.5*o,n[2]=o,n}function Ma(e,t){return i.range.apply(i,Sa(e,t))}function Ta(e,t,n){var r=Sa(e,t);if(n){var o=Dt.exec(n);if(o.shift(),"s"===o[8]){var a=i.formatPrefix(Math.max(k(r[0]),k(r[1])));return o[7]||(o[7]="."+Oa(a.scale(r[2]))),o[8]="f",n=i.format(o.join("")),function(e){return n(a.scale(e))+a.symbol}}o[7]||(o[7]="."+function(e,t){var n=Oa(t[2]);return e in Ca?Math.abs(n-Oa(Math.max(k(t[0]),k(t[1]))))+ +("e"!==e):n-2*("%"===e)}(o[8],r)),n=o.join("")}else n=",."+Oa(r[2])+"f";return i.format(n)}i.scale.linear=function(){return function e(t,n,r,o){var i,a;function u(){var e=Math.min(t.length,n.length)>2?ka:ma,u=o?Ei:_i;return i=e(t,n,u,r),a=e(n,t,u,ni),l}function l(e){return i(e)}l.invert=function(e){return a(e)};l.domain=function(e){return arguments.length?(t=e.map(Number),u()):t};l.range=function(e){return arguments.length?(n=e,u()):n};l.rangeRound=function(e){return l.range(e).interpolate(vi)};l.clamp=function(e){return arguments.length?(o=e,u()):o};l.interpolate=function(e){return arguments.length?(r=e,u()):r};l.ticks=function(e){return Ma(t,e)};l.tickFormat=function(e,n){return Ta(t,e,n)};l.nice=function(e){return Ea(t,e),u()};l.copy=function(){return e(t,n,r,o)};return u()}([0,1],[0,1],ni,!1)};var Ca={s:1,g:1,p:1,r:1,e:1};function Oa(e){return-Math.floor(Math.log(e)/Math.LN10+.01)}i.scale.log=function(){return function e(t,n,r,o){function a(e){return(r?Math.log(e<0?0:e):-Math.log(e>0?0:-e))/Math.log(n)}function u(e){return r?Math.pow(n,e):-Math.pow(n,-e)}function l(e){return t(a(e))}l.invert=function(e){return u(t.invert(e))};l.domain=function(e){return arguments.length?(r=e[0]>=0,t.domain((o=e.map(Number)).map(a)),l):o};l.base=function(e){return arguments.length?(n=+e,t.domain(o.map(a)),l):n};l.nice=function(){var e=ba(o.map(a),r?Math:Pa);return t.domain(e),o=e.map(u),l};l.ticks=function(){var e=va(o),t=[],i=e[0],l=e[1],c=Math.floor(a(i)),s=Math.ceil(a(l)),f=n%1?2:n;if(isFinite(s-c)){if(r){for(;c<s;c++)for(var p=1;p<f;p++)t.push(u(c)*p);t.push(u(c))}else for(t.push(u(c));c++<s;)for(var p=f-1;p>0;p--)t.push(u(c)*p);for(c=0;t[c]<i;c++);for(s=t.length;t[s-1]>l;s--);t=t.slice(c,s)}return t};l.tickFormat=function(e,t){if(!arguments.length)return Na;arguments.length<2?t=Na:"function"!=typeof t&&(t=i.format(t));var r=Math.max(1,n*e/l.ticks().length);return function(e){var o=e/u(Math.round(a(e)));return o*n<n-.5&&(o*=n),o<=r?t(e):""}};l.copy=function(){return e(t.copy(),n,r,o)};return _a(l,t)}(i.scale.linear().domain([0,1]),10,!0,[1,10])};var Na=i.format(".0e"),Pa={floor:function(e){return-Math.ceil(-e)},ceil:function(e){return-Math.floor(-e)}};function Aa(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}i.scale.pow=function(){return function e(t,n,r){var o=Aa(n),i=Aa(1/n);function a(e){return t(o(e))}a.invert=function(e){return i(t.invert(e))};a.domain=function(e){return arguments.length?(t.domain((r=e.map(Number)).map(o)),a):r};a.ticks=function(e){return Ma(r,e)};a.tickFormat=function(e,t){return Ta(r,e,t)};a.nice=function(e){return a.domain(Ea(r,e))};a.exponent=function(e){return arguments.length?(o=Aa(n=e),i=Aa(1/n),t.domain(r.map(o)),a):n};a.copy=function(){return e(t.copy(),n,r)};return _a(a,t)}(i.scale.linear(),1,[0,1])},i.scale.sqrt=function(){return i.scale.pow().exponent(.5)},i.scale.ordinal=function(){return function e(t,n){var r,o,a;function u(e){return o[((r.get(e)||("range"===n.t?r.set(e,t.push(e)):NaN))-1)%o.length]}function l(e,n){return i.range(t.length).map(function(t){return e+n*t})}u.domain=function(e){if(!arguments.length)return t;t=[],r=new E;for(var o,i=-1,a=e.length;++i<a;)r.has(o=e[i])||r.set(o,t.push(o));return u[n.t].apply(u,n.a)};u.range=function(e){return arguments.length?(o=e,a=0,n={t:"range",a:arguments},u):o};u.rangePoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],c=e[1],s=t.length<2?(i=(i+c)/2,0):(c-i)/(t.length-1+r);return o=l(i+s*r/2,s),a=0,n={t:"rangePoints",a:arguments},u};u.rangeRoundPoints=function(e,r){arguments.length<2&&(r=0);var i=e[0],c=e[1],s=t.length<2?(i=c=Math.round((i+c)/2),0):(c-i)/(t.length-1+r)|0;return o=l(i+Math.round(s*r/2+(c-i-(t.length-1+r)*s)/2),s),a=0,n={t:"rangeRoundPoints",a:arguments},u};u.rangeBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var c=e[1]<e[0],s=e[c-0],f=e[1-c],p=(f-s)/(t.length-r+2*i);return o=l(s+p*i,p),c&&o.reverse(),a=p*(1-r),n={t:"rangeBands",a:arguments},u};u.rangeRoundBands=function(e,r,i){arguments.length<2&&(r=0),arguments.length<3&&(i=r);var c=e[1]<e[0],s=e[c-0],f=e[1-c],p=Math.floor((f-s)/(t.length-r+2*i));return o=l(s+Math.round((f-s-(t.length-r)*p)/2),p),c&&o.reverse(),a=Math.round(p*(1-r)),n={t:"rangeRoundBands",a:arguments},u};u.rangeBand=function(){return a};u.rangeExtent=function(){return va(n.a[0])};u.copy=function(){return e(t,n)};return u.domain(t)}([],{t:"range",a:[[]]})},i.scale.category10=function(){return i.scale.ordinal().range(ja)},i.scale.category20=function(){return i.scale.ordinal().range(Ra)},i.scale.category20b=function(){return i.scale.ordinal().range(Da)},i.scale.category20c=function(){return i.scale.ordinal().range(Ia)};var ja=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ft),Ra=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ft),Da=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ft),Ia=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ft);function La(){return 0}i.scale.quantile=function(){return function e(t,n){var r;function o(){var e=0,o=n.length;for(r=[];++e<o;)r[e-1]=i.quantile(t,e/o);return a}function a(e){if(!isNaN(e=+e))return n[i.bisect(r,e)]}a.domain=function(e){return arguments.length?(t=e.map(y).filter(m).sort(v),o()):t};a.range=function(e){return arguments.length?(n=e,o()):n};a.quantiles=function(){return r};a.invertExtent=function(e){return(e=n.indexOf(e))<0?[NaN,NaN]:[e>0?r[e-1]:t[0],e<r.length?r[e]:t[t.length-1]]};a.copy=function(){return e(t,n)};return o()}([],[])},i.scale.quantize=function(){return function e(t,n,r){var o,i;function a(e){return r[Math.max(0,Math.min(i,Math.floor(o*(e-t))))]}function u(){return o=r.length/(n-t),i=r.length-1,a}a.domain=function(e){return arguments.length?(t=+e[0],n=+e[e.length-1],u()):[t,n]};a.range=function(e){return arguments.length?(r=e,u()):r};a.invertExtent=function(e){return[e=(e=r.indexOf(e))<0?NaN:e/o+t,e+1/o]};a.copy=function(){return e(t,n,r)};return u()}(0,1,[0,1])},i.scale.threshold=function(){return function e(t,n){function r(e){if(e<=e)return n[i.bisect(t,e)]}r.domain=function(e){return arguments.length?(t=e,r):t};r.range=function(e){return arguments.length?(n=e,r):n};r.invertExtent=function(e){return e=n.indexOf(e),[t[e-1],t[e]]};r.copy=function(){return e(t,n)};return r}([.5],[0,1])},i.scale.identity=function(){return function e(t){function n(e){return+e}n.invert=n;n.domain=n.range=function(e){return arguments.length?(t=e.map(n),n):t};n.ticks=function(e){return Ma(t,e)};n.tickFormat=function(e,n){return Ta(t,e,n)};n.copy=function(){return e(t)};return n}([0,1])},i.svg={},i.svg.arc=function(){var e=Ua,t=Fa,n=La,r=za,o=Ba,i=qa,a=Wa;function u(){var u=Math.max(0,+e.apply(this,arguments)),c=Math.max(0,+t.apply(this,arguments)),s=o.apply(this,arguments)-Ae,f=i.apply(this,arguments)-Ae,p=Math.abs(f-s),h=s>f?0:1;if(c<u&&(d=c,c=u,u=d),p>=Pe)return l(c,h)+(u?l(u,1-h):"")+"Z";var d,g,v,y,m,b,w,x,k,_,E,S,M=0,T=0,C=[];if((y=(+a.apply(this,arguments)||0)/2)&&(v=r===za?Math.sqrt(u*u+c*c):+r.apply(this,arguments),h||(T*=-1),c&&(T=ze(v/c*Math.sin(y))),u&&(M=ze(v/u*Math.sin(y)))),c){m=c*Math.cos(s+T),b=c*Math.sin(s+T),w=c*Math.cos(f-T),x=c*Math.sin(f-T);var O=Math.abs(f-s-2*T)<=Oe?0:1;if(T&&$a(m,b,w,x)===h^O){var N=(s+f)/2;m=c*Math.cos(N),b=c*Math.sin(N),w=x=null}}else m=b=0;if(u){k=u*Math.cos(f-M),_=u*Math.sin(f-M),E=u*Math.cos(s+M),S=u*Math.sin(s+M);var P=Math.abs(s-f+2*M)<=Oe?0:1;if(M&&$a(k,_,E,S)===1-h^P){var A=(s+f)/2;k=u*Math.cos(A),_=u*Math.sin(A),E=S=null}}else k=_=0;if(p>Te&&(d=Math.min(Math.abs(c-u)/2,+n.apply(this,arguments)))>.001){g=u<c^h?0:1;var j=d,R=d;if(p<Oe){var D=null==E?[k,_]:null==w?[m,b]:ho([m,b],[E,S],[w,x],[k,_]),I=m-D[0],L=b-D[1],z=w-D[0],U=x-D[1],F=1/Math.sin(Math.acos((I*z+L*U)/(Math.sqrt(I*I+L*L)*Math.sqrt(z*z+U*U)))/2),B=Math.sqrt(D[0]*D[0]+D[1]*D[1]);R=Math.min(d,(u-B)/(F-1)),j=Math.min(d,(c-B)/(F+1))}if(null!=w){var q=Ha(null==E?[k,_]:[E,S],[m,b],c,j,h),W=Ha([w,x],[k,_],c,j,h);d===j?C.push("M",q[0],"A",j,",",j," 0 0,",g," ",q[1],"A",c,",",c," 0 ",1-h^$a(q[1][0],q[1][1],W[1][0],W[1][1]),",",h," ",W[1],"A",j,",",j," 0 0,",g," ",W[0]):C.push("M",q[0],"A",j,",",j," 0 1,",g," ",W[0])}else C.push("M",m,",",b);if(null!=E){var $=Ha([m,b],[E,S],u,-R,h),H=Ha([k,_],null==w?[m,b]:[w,x],u,-R,h);d===R?C.push("L",H[0],"A",R,",",R," 0 0,",g," ",H[1],"A",u,",",u," 0 ",h^$a(H[1][0],H[1][1],$[1][0],$[1][1]),",",1-h," ",$[1],"A",R,",",R," 0 0,",g," ",$[0]):C.push("L",H[0],"A",R,",",R," 0 0,",g," ",$[0])}else C.push("L",k,",",_)}else C.push("M",m,",",b),null!=w&&C.push("A",c,",",c," 0 ",O,",",h," ",w,",",x),C.push("L",k,",",_),null!=E&&C.push("A",u,",",u," 0 ",P,",",1-h," ",E,",",S);return C.push("Z"),C.join("")}function l(e,t){return"M0,"+e+"A"+e+","+e+" 0 1,"+t+" 0,"+-e+"A"+e+","+e+" 0 1,"+t+" 0,"+e}return u.innerRadius=function(t){return arguments.length?(e=wt(t),u):e},u.outerRadius=function(e){return arguments.length?(t=wt(e),u):t},u.cornerRadius=function(e){return arguments.length?(n=wt(e),u):n},u.padRadius=function(e){return arguments.length?(r=e==za?za:wt(e),u):r},u.startAngle=function(e){return arguments.length?(o=wt(e),u):o},u.endAngle=function(e){return arguments.length?(i=wt(e),u):i},u.padAngle=function(e){return arguments.length?(a=wt(e),u):a},u.centroid=function(){var n=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +i.apply(this,arguments))/2-Ae;return[Math.cos(r)*n,Math.sin(r)*n]},u};var za="auto";function Ua(e){return e.innerRadius}function Fa(e){return e.outerRadius}function Ba(e){return e.startAngle}function qa(e){return e.endAngle}function Wa(e){return e&&e.padAngle}function $a(e,t,n,r){return(e-n)*t-(t-r)*e>0?0:1}function Ha(e,t,n,r,o){var i=e[0]-t[0],a=e[1]-t[1],u=(o?r:-r)/Math.sqrt(i*i+a*a),l=u*a,c=-u*i,s=e[0]+l,f=e[1]+c,p=t[0]+l,h=t[1]+c,d=(s+p)/2,g=(f+h)/2,v=p-s,y=h-f,m=v*v+y*y,b=n-r,w=s*h-p*f,x=(y<0?-1:1)*Math.sqrt(Math.max(0,b*b*m-w*w)),k=(w*y-v*x)/m,_=(-w*v-y*x)/m,E=(w*y+v*x)/m,S=(-w*v+y*x)/m,M=k-d,T=_-g,C=E-d,O=S-g;return M*M+T*T>C*C+O*O&&(k=E,_=S),[[k-l,_-c],[k*n/b,_*n/b]]}function Ya(e){var t=uo,n=lo,r=Jn,o=Qa,i=o.key,a=.7;function u(i){var u,l=[],c=[],s=-1,f=i.length,p=wt(t),h=wt(n);function d(){l.push("M",o(e(c),a))}for(;++s<f;)r.call(this,u=i[s],s)?c.push([+p.call(this,u,s),+h.call(this,u,s)]):c.length&&(d(),c=[]);return c.length&&d(),l.length?l.join(""):null}return u.x=function(e){return arguments.length?(t=e,u):t},u.y=function(e){return arguments.length?(n=e,u):n},u.defined=function(e){return arguments.length?(r=e,u):r},u.interpolate=function(e){return arguments.length?(i="function"==typeof e?o=e:(o=Va.get(e)||Qa).key,u):i},u.tension=function(e){return arguments.length?(a=e,u):a},u}i.svg.line=function(){return Ya(D)};var Va=i.map({linear:Qa,"linear-closed":Ga,step:function(e){var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];for(;++t<n;)o.push("H",(r[0]+(r=e[t])[0])/2,"V",r[1]);n>1&&o.push("H",r[0]);return o.join("")},"step-before":Ka,"step-after":Xa,basis:eu,"basis-open":function(e){if(e.length<4)return Qa(e);var t,n=[],r=-1,o=e.length,i=[0],a=[0];for(;++r<3;)t=e[r],i.push(t[0]),a.push(t[1]);n.push(tu(ou,i)+","+tu(ou,a)),--r;for(;++r<o;)t=e[r],i.shift(),i.push(t[0]),a.shift(),a.push(t[1]),iu(n,i,a);return n.join("")},"basis-closed":function(e){var t,n,r=-1,o=e.length,i=o+4,a=[],u=[];for(;++r<4;)n=e[r%o],a.push(n[0]),u.push(n[1]);t=[tu(ou,a),",",tu(ou,u)],--r;for(;++r<i;)n=e[r%o],a.shift(),a.push(n[0]),u.shift(),u.push(n[1]),iu(t,a,u);return t.join("")},bundle:function(e,t){var n=e.length-1;if(n)for(var r,o,i=e[0][0],a=e[0][1],u=e[n][0]-i,l=e[n][1]-a,c=-1;++c<=n;)r=e[c],o=c/n,r[0]=t*r[0]+(1-t)*(i+o*u),r[1]=t*r[1]+(1-t)*(a+o*l);return eu(e)},cardinal:function(e,t){return e.length<3?Qa(e):e[0]+Za(e,Ja(e,t))},"cardinal-open":function(e,t){return e.length<4?Qa(e):e[1]+Za(e.slice(1,-1),Ja(e,t))},"cardinal-closed":function(e,t){return e.length<3?Ga(e):e[0]+Za((e.push(e[0]),e),Ja([e[e.length-2]].concat(e,[e[1]]),t))},monotone:function(e){return e.length<3?Qa(e):e[0]+Za(e,function(e){var t,n,r,o,i=[],a=function(e){var t=0,n=e.length-1,r=[],o=e[0],i=e[1],a=r[0]=au(o,i);for(;++t<n;)r[t]=(a+(a=au(o=i,i=e[t+1])))/2;return r[t]=a,r}(e),u=-1,l=e.length-1;for(;++u<l;)t=au(e[u],e[u+1]),k(t)<Te?a[u]=a[u+1]=0:(n=a[u]/t,r=a[u+1]/t,(o=n*n+r*r)>9&&(o=3*t/Math.sqrt(o),a[u]=o*n,a[u+1]=o*r));u=-1;for(;++u<=l;)o=(e[Math.min(l,u+1)][0]-e[Math.max(0,u-1)][0])/(6*(1+a[u]*a[u])),i.push([o||0,a[u]*o||0]);return i}(e))}});function Qa(e){return e.length>1?e.join("L"):e+"Z"}function Ga(e){return e.join("L")+"Z"}function Ka(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("V",(r=e[t])[1],"H",r[0]);return o.join("")}function Xa(e){for(var t=0,n=e.length,r=e[0],o=[r[0],",",r[1]];++t<n;)o.push("H",(r=e[t])[0],"V",r[1]);return o.join("")}function Za(e,t){if(t.length<1||e.length!=t.length&&e.length!=t.length+2)return Qa(e);var n=e.length!=t.length,r="",o=e[0],i=e[1],a=t[0],u=a,l=1;if(n&&(r+="Q"+(i[0]-2*a[0]/3)+","+(i[1]-2*a[1]/3)+","+i[0]+","+i[1],o=e[1],l=2),t.length>1){u=t[1],i=e[l],l++,r+="C"+(o[0]+a[0])+","+(o[1]+a[1])+","+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1];for(var c=2;c<t.length;c++,l++)i=e[l],u=t[c],r+="S"+(i[0]-u[0])+","+(i[1]-u[1])+","+i[0]+","+i[1]}if(n){var s=e[l];r+="Q"+(i[0]+2*u[0]/3)+","+(i[1]+2*u[1]/3)+","+s[0]+","+s[1]}return r}function Ja(e,t){for(var n,r=[],o=(1-t)/2,i=e[0],a=e[1],u=1,l=e.length;++u<l;)n=i,i=a,a=e[u],r.push([o*(a[0]-n[0]),o*(a[1]-n[1])]);return r}function eu(e){if(e.length<3)return Qa(e);var t=1,n=e.length,r=e[0],o=r[0],i=r[1],a=[o,o,o,(r=e[1])[0]],u=[i,i,i,r[1]],l=[o,",",i,"L",tu(ou,a),",",tu(ou,u)];for(e.push(e[n-1]);++t<=n;)r=e[t],a.shift(),a.push(r[0]),u.shift(),u.push(r[1]),iu(l,a,u);return e.pop(),l.push("L",r),l.join("")}function tu(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}Va.forEach(function(e,t){t.key=e,t.closed=/-closed$/.test(e)});var nu=[0,2/3,1/3,0],ru=[0,1/3,2/3,0],ou=[0,1/6,2/3,1/6];function iu(e,t,n){e.push("C",tu(nu,t),",",tu(nu,n),",",tu(ru,t),",",tu(ru,n),",",tu(ou,t),",",tu(ou,n))}function au(e,t){return(t[1]-e[1])/(t[0]-e[0])}function uu(e){for(var t,n,r,o=-1,i=e.length;++o<i;)n=(t=e[o])[0],r=t[1]-Ae,t[0]=n*Math.cos(r),t[1]=n*Math.sin(r);return e}function lu(e){var t=uo,n=uo,r=0,o=lo,i=Jn,a=Qa,u=a.key,l=a,c="L",s=.7;function f(u){var f,p,h,d=[],g=[],v=[],y=-1,m=u.length,b=wt(t),w=wt(r),x=t===n?function(){return p}:wt(n),k=r===o?function(){return h}:wt(o);function _(){d.push("M",a(e(v),s),c,l(e(g.reverse()),s),"Z")}for(;++y<m;)i.call(this,f=u[y],y)?(g.push([p=+b.call(this,f,y),h=+w.call(this,f,y)]),v.push([+x.call(this,f,y),+k.call(this,f,y)])):g.length&&(_(),g=[],v=[]);return g.length&&_(),d.length?d.join(""):null}return f.x=function(e){return arguments.length?(t=n=e,f):n},f.x0=function(e){return arguments.length?(t=e,f):t},f.x1=function(e){return arguments.length?(n=e,f):n},f.y=function(e){return arguments.length?(r=o=e,f):o},f.y0=function(e){return arguments.length?(r=e,f):r},f.y1=function(e){return arguments.length?(o=e,f):o},f.defined=function(e){return arguments.length?(i=e,f):i},f.interpolate=function(e){return arguments.length?(u="function"==typeof e?a=e:(a=Va.get(e)||Qa).key,l=a.reverse||a,c=a.closed?"M":"L",f):u},f.tension=function(e){return arguments.length?(s=e,f):s},f}function cu(e){return e.radius}function su(e){return[e.x,e.y]}function fu(){return 64}function pu(){return"circle"}function hu(e){var t=Math.sqrt(e/Oe);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}i.svg.line.radial=function(){var e=Ya(uu);return e.radius=e.x,delete e.x,e.angle=e.y,delete e.y,e},Ka.reverse=Xa,Xa.reverse=Ka,i.svg.area=function(){return lu(D)},i.svg.area.radial=function(){var e=lu(uu);return e.radius=e.x,delete e.x,e.innerRadius=e.x0,delete e.x0,e.outerRadius=e.x1,delete e.x1,e.angle=e.y,delete e.y,e.startAngle=e.y0,delete e.y0,e.endAngle=e.y1,delete e.y1,e},i.svg.chord=function(){var e=Vr,t=Qr,n=cu,r=Ba,o=qa;function i(n,r){var o,i,c=a(this,e,n,r),s=a(this,t,n,r);return"M"+c.p0+u(c.r,c.p1,c.a1-c.a0)+(i=s,(o=c).a0==i.a0&&o.a1==i.a1?l(c.r,c.p1,c.r,c.p0):l(c.r,c.p1,s.r,s.p0)+u(s.r,s.p1,s.a1-s.a0)+l(s.r,s.p1,c.r,c.p0))+"Z"}function a(e,t,i,a){var u=t.call(e,i,a),l=n.call(e,u,a),c=r.call(e,u,a)-Ae,s=o.call(e,u,a)-Ae;return{r:l,a0:c,a1:s,p0:[l*Math.cos(c),l*Math.sin(c)],p1:[l*Math.cos(s),l*Math.sin(s)]}}function u(e,t,n){return"A"+e+","+e+" 0 "+ +(n>Oe)+",1 "+t}function l(e,t,n,r){return"Q 0,0 "+r}return i.radius=function(e){return arguments.length?(n=wt(e),i):n},i.source=function(t){return arguments.length?(e=wt(t),i):e},i.target=function(e){return arguments.length?(t=wt(e),i):t},i.startAngle=function(e){return arguments.length?(r=wt(e),i):r},i.endAngle=function(e){return arguments.length?(o=wt(e),i):o},i},i.svg.diagonal=function(){var e=Vr,t=Qr,n=su;function r(r,o){var i=e.call(this,r,o),a=t.call(this,r,o),u=(i.y+a.y)/2,l=[i,{x:i.x,y:u},{x:a.x,y:u},a];return"M"+(l=l.map(n))[0]+"C"+l[1]+" "+l[2]+" "+l[3]}return r.source=function(t){return arguments.length?(e=wt(t),r):e},r.target=function(e){return arguments.length?(t=wt(e),r):t},r.projection=function(e){return arguments.length?(n=e,r):n},r},i.svg.diagonal.radial=function(){var e=i.svg.diagonal(),t=su,n=e.projection;return e.projection=function(e){return arguments.length?n(function(e){return function(){var t=e.apply(this,arguments),n=t[0],r=t[1]-Ae;return[n*Math.cos(r),n*Math.sin(r)]}}(t=e)):t},e},i.svg.symbol=function(){var e=pu,t=fu;function n(n,r){return(du.get(e.call(this,n,r))||hu)(t.call(this,n,r))}return n.type=function(t){return arguments.length?(e=wt(t),n):e},n.size=function(e){return arguments.length?(t=wt(e),n):t},n};var du=i.map({circle:hu,cross:function(e){var t=Math.sqrt(e/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(e){var t=Math.sqrt(e/(2*vu)),n=t*vu;return"M0,"+-t+"L"+n+",0 0,"+t+" "+-n+",0Z"},square:function(e){var t=Math.sqrt(e)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(e){var t=Math.sqrt(e/gu),n=t*gu/2;return"M0,"+n+"L"+t+","+-n+" "+-t+","+-n+"Z"},"triangle-up":function(e){var t=Math.sqrt(e/gu),n=t*gu/2;return"M0,"+-n+"L"+t+","+n+" "+-t+","+n+"Z"}});i.svg.symbolTypes=du.keys();var gu=Math.sqrt(3),vu=Math.tan(30*je);X.transition=function(e){for(var t,n,r=wu||++_u,o=Mu(e),i=[],a=xu||{time:Date.now(),ease:fi,delay:0,duration:250},u=-1,l=this.length;++u<l;){i.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(n=c[s])&&Tu(n,s,o,r,a),t.push(n)}return bu(i,o,r)},X.interrupt=function(e){return this.each(null==e?yu:mu(Mu(e)))};var yu=mu(Mu());function mu(e){return function(){var t,n,r;(t=this[e])&&(r=t[n=t.active])&&(r.timer.c=null,r.timer.t=NaN,--t.count?delete t[n]:delete this[e],t.active+=.5,r.event&&r.event.interrupt.call(this,this.__data__,r.index))}}function bu(e,t,n){return Y(e,ku),e.namespace=t,e.id=n,e}var wu,xu,ku=[],_u=0;function Eu(e,t,n,r){var o=e.id,i=e.namespace;return de(e,"function"==typeof n?function(e,a,u){e[i][o].tween.set(t,r(n.call(e,e.__data__,a,u)))}:(n=r(n),function(e){e[i][o].tween.set(t,n)}))}function Su(e){return null==e&&(e=""),function(){this.textContent=e}}function Mu(e){return null==e?"__transition__":"__transition_"+e+"__"}function Tu(e,t,n,r,o){var i,a,u,l,c,s=e[n]||(e[n]={active:0,count:0}),f=s[r];function p(n){var o=s.active,p=s[o];for(var d in p&&(p.timer.c=null,p.timer.t=NaN,--s.count,delete s[o],p.event&&p.event.interrupt.call(e,e.__data__,p.index)),s)if(+d<r){var g=s[d];g.timer.c=null,g.timer.t=NaN,--s.count,delete s[d]}a.c=h,Ct(function(){return a.c&&h(n||1)&&(a.c=null,a.t=NaN),1},0,i),s.active=r,f.event&&f.event.start.call(e,e.__data__,t),c=[],f.tween.forEach(function(n,r){(r=r.call(e,e.__data__,t))&&c.push(r)}),l=f.ease,u=f.duration}function h(o){for(var i=o/u,a=l(i),p=c.length;p>0;)c[--p].call(e,a);if(i>=1)return f.event&&f.event.end.call(e,e.__data__,t),--s.count?delete s[r]:delete e[n],1}f||(i=o.time,a=Ct(function(e){var t=f.delay;if(a.t=t+i,t<=e)return p(e-t);a.c=p},0,i),f=s[r]={tween:new E,time:i,timer:a,delay:o.delay,duration:o.duration,ease:o.ease,index:t},o=null,++s.count)}ku.call=X.call,ku.empty=X.empty,ku.node=X.node,ku.size=X.size,i.transition=function(e,t){return e&&e.transition?wu?e.transition(t):e:i.selection().transition(e)},i.transition.prototype=ku,ku.select=function(e){var t,n,r,o=this.id,i=this.namespace,a=[];e=Z(e);for(var u=-1,l=this.length;++u<l;){a.push(t=[]);for(var c=this[u],s=-1,f=c.length;++s<f;)(r=c[s])&&(n=e.call(r,r.__data__,s,u))?("__data__"in r&&(n.__data__=r.__data__),Tu(n,s,i,o,r[i][o]),t.push(n)):t.push(null)}return bu(a,i,o)},ku.selectAll=function(e){var t,n,r,o,i,a=this.id,u=this.namespace,l=[];e=J(e);for(var c=-1,s=this.length;++c<s;)for(var f=this[c],p=-1,h=f.length;++p<h;)if(r=f[p]){i=r[u][a],n=e.call(r,r.__data__,p,c),l.push(t=[]);for(var d=-1,g=n.length;++d<g;)(o=n[d])&&Tu(o,d,u,a,i),t.push(o)}return bu(l,u,a)},ku.filter=function(e){var t,n,r=[];"function"!=typeof e&&(e=he(e));for(var o=0,i=this.length;o<i;o++){r.push(t=[]);for(var a,u=0,l=(a=this[o]).length;u<l;u++)(n=a[u])&&e.call(n,n.__data__,u,o)&&t.push(n)}return bu(r,this.namespace,this.id)},ku.tween=function(e,t){var n=this.id,r=this.namespace;return arguments.length<2?this.node()[r][n].tween.get(e):de(this,null==t?function(t){t[r][n].tween.remove(e)}:function(o){o[r][n].tween.set(e,t)})},ku.attr=function(e,t){if(arguments.length<2){for(t in e)this.attr(t,e[t]);return this}var n="transform"==e?ki:ni,r=i.ns.qualify(e);function o(){this.removeAttribute(r)}function a(){this.removeAttributeNS(r.space,r.local)}return Eu(this,"attr."+e,t,r.local?function(e){return null==e?a:(e+="",function(){var t,o=this.getAttributeNS(r.space,r.local);return o!==e&&(t=n(o,e),function(e){this.setAttributeNS(r.space,r.local,t(e))})})}:function(e){return null==e?o:(e+="",function(){var t,o=this.getAttribute(r);return o!==e&&(t=n(o,e),function(e){this.setAttribute(r,t(e))})})})},ku.attrTween=function(e,t){var n=i.ns.qualify(e);return this.tween("attr."+e,n.local?function(e,r){var o=t.call(this,e,r,this.getAttributeNS(n.space,n.local));return o&&function(e){this.setAttributeNS(n.space,n.local,o(e))}}:function(e,r){var o=t.call(this,e,r,this.getAttribute(n));return o&&function(e){this.setAttribute(n,o(e))}})},ku.style=function(e,t,n){var r=arguments.length;if(r<3){if("string"!=typeof e){for(n in r<2&&(t=""),e)this.style(n,e[n],t);return this}n=""}function o(){this.style.removeProperty(e)}return Eu(this,"style."+e,t,function(t){return null==t?o:(t+="",function(){var r,o=s(this).getComputedStyle(this,null).getPropertyValue(e);return o!==t&&(r=ni(o,t),function(t){this.style.setProperty(e,r(t),n)})})})},ku.styleTween=function(e,t,n){return arguments.length<3&&(n=""),this.tween("style."+e,function(r,o){var i=t.call(this,r,o,s(this).getComputedStyle(this,null).getPropertyValue(e));return i&&function(t){this.style.setProperty(e,i(t),n)}})},ku.text=function(e){return Eu(this,"text",e,Su)},ku.remove=function(){var e=this.namespace;return this.each("end.transition",function(){var t;this[e].count<2&&(t=this.parentNode)&&t.removeChild(this)})},ku.ease=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].ease:("function"!=typeof e&&(e=i.ease.apply(i,arguments)),de(this,function(r){r[n][t].ease=e}))},ku.delay=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].delay:de(this,"function"==typeof e?function(r,o,i){r[n][t].delay=+e.call(r,r.__data__,o,i)}:(e=+e,function(r){r[n][t].delay=e}))},ku.duration=function(e){var t=this.id,n=this.namespace;return arguments.length<1?this.node()[n][t].duration:de(this,"function"==typeof e?function(r,o,i){r[n][t].duration=Math.max(1,e.call(r,r.__data__,o,i))}:(e=Math.max(1,e),function(r){r[n][t].duration=e}))},ku.each=function(e,t){var n=this.id,r=this.namespace;if(arguments.length<2){var o=xu,a=wu;try{wu=n,de(this,function(t,o,i){xu=t[r][n],e.call(t,t.__data__,o,i)})}finally{xu=o,wu=a}}else de(this,function(o){var a=o[r][n];(a.event||(a.event=i.dispatch("start","end","interrupt"))).on(e,t)});return this},ku.transition=function(){for(var e,t,n,r=this.id,o=++_u,i=this.namespace,a=[],u=0,l=this.length;u<l;u++){a.push(e=[]);for(var c,s=0,f=(c=this[u]).length;s<f;s++)(t=c[s])&&Tu(t,s,i,o,{time:(n=t[i][r]).time,ease:n.ease,delay:n.delay+n.duration,duration:n.duration}),e.push(t)}return bu(a,i,o)},i.svg.axis=function(){var e,t=i.scale.linear(),n=Cu,r=6,o=6,a=3,l=[10],c=null;function s(u){u.each(function(){var u,s=i.select(this),f=this.__chart__||t,p=this.__chart__=t.copy(),h=null==c?p.ticks?p.ticks.apply(p,l):p.domain():c,d=null==e?p.tickFormat?p.tickFormat.apply(p,l):D:e,g=s.selectAll(".tick").data(h,p),v=g.enter().insert("g",".domain").attr("class","tick").style("opacity",Te),y=i.transition(g.exit()).style("opacity",Te).remove(),m=i.transition(g.order()).style("opacity",1),b=Math.max(r,0)+a,w=ya(p),x=s.selectAll(".domain").data([0]),k=(x.enter().append("path").attr("class","domain"),i.transition(x));v.append("line"),v.append("text");var _,E,S,M,T=v.select("line"),C=m.select("line"),O=g.select("text").text(d),N=v.select("text"),P=m.select("text"),A="top"===n||"left"===n?-1:1;if("bottom"===n||"top"===n?(u=Nu,_="x",S="y",E="x2",M="y2",O.attr("dy",A<0?"0em":".71em").style("text-anchor","middle"),k.attr("d","M"+w[0]+","+A*o+"V0H"+w[1]+"V"+A*o)):(u=Pu,_="y",S="x",E="y2",M="x2",O.attr("dy",".32em").style("text-anchor",A<0?"end":"start"),k.attr("d","M"+A*o+","+w[0]+"H0V"+w[1]+"H"+A*o)),T.attr(M,A*r),N.attr(S,A*b),C.attr(E,0).attr(M,A*r),P.attr(_,0).attr(S,A*b),p.rangeBand){var j=p,R=j.rangeBand()/2;f=p=function(e){return j(e)+R}}else f.rangeBand?f=p:y.call(u,p,f);v.call(u,f,p),m.call(u,p,p)})}return s.scale=function(e){return arguments.length?(t=e,s):t},s.orient=function(e){return arguments.length?(n=e in Ou?e+"":Cu,s):n},s.ticks=function(){return arguments.length?(l=u(arguments),s):l},s.tickValues=function(e){return arguments.length?(c=e,s):c},s.tickFormat=function(t){return arguments.length?(e=t,s):e},s.tickSize=function(e){var t=arguments.length;return t?(r=+e,o=+arguments[t-1],s):r},s.innerTickSize=function(e){return arguments.length?(r=+e,s):r},s.outerTickSize=function(e){return arguments.length?(o=+e,s):o},s.tickPadding=function(e){return arguments.length?(a=+e,s):a},s.tickSubdivide=function(){return arguments.length&&s},s};var Cu="bottom",Ou={top:1,right:1,bottom:1,left:1};function Nu(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"})}function Pu(e,t,n){e.attr("transform",function(e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"})}i.svg.brush=function(){var e,t,n=$(p,"brushstart","brush","brushend"),r=null,o=null,a=[0,0],u=[0,0],l=!0,c=!0,f=ju[0];function p(e){e.each(function(){var e=i.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",v).on("touchstart.brush",v),t=e.selectAll(".background").data([0]);t.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),e.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var n=e.selectAll(".resize").data(f,D);n.exit().remove(),n.enter().append("g").attr("class",function(e){return"resize "+e}).style("cursor",function(e){return Au[e]}).append("rect").attr("x",function(e){return/[ew]$/.test(e)?-3:null}).attr("y",function(e){return/^[ns]/.test(e)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),n.style("display",p.empty()?"none":null);var a,u=i.transition(e),l=i.transition(t);r&&(a=ya(r),l.attr("x",a[0]).attr("width",a[1]-a[0]),d(u)),o&&(a=ya(o),l.attr("y",a[0]).attr("height",a[1]-a[0]),g(u)),h(u)})}function h(e){e.selectAll(".resize").attr("transform",function(e){return"translate("+a[+/e$/.test(e)]+","+u[+/^s/.test(e)]+")"})}function d(e){e.select(".extent").attr("x",a[0]),e.selectAll(".extent,.n>rect,.s>rect").attr("width",a[1]-a[0])}function g(e){e.select(".extent").attr("y",u[0]),e.selectAll(".extent,.e>rect,.w>rect").attr("height",u[1]-u[0])}function v(){var f,v,y=this,m=i.select(i.event.target),b=n.of(y,arguments),w=i.select(y),x=m.datum(),k=!/^(n|s)$/.test(x)&&r,_=!/^(e|w)$/.test(x)&&o,E=m.classed("extent"),S=_e(y),M=i.mouse(y),T=i.select(s(y)).on("keydown.brush",function(){32==i.event.keyCode&&(E||(f=null,M[0]-=a[1],M[1]-=u[1],E=2),q())}).on("keyup.brush",function(){32==i.event.keyCode&&2==E&&(M[0]+=a[1],M[1]+=u[1],E=0,q())});if(i.event.changedTouches?T.on("touchmove.brush",N).on("touchend.brush",A):T.on("mousemove.brush",N).on("mouseup.brush",A),w.interrupt().selectAll("*").interrupt(),E)M[0]=a[0]-M[0],M[1]=u[0]-M[1];else if(x){var C=+/w$/.test(x),O=+/^n/.test(x);v=[a[1-C]-M[0],u[1-O]-M[1]],M[0]=a[C],M[1]=u[O]}else i.event.altKey&&(f=M.slice());function N(){var e=i.mouse(y),t=!1;v&&(e[0]+=v[0],e[1]+=v[1]),E||(i.event.altKey?(f||(f=[(a[0]+a[1])/2,(u[0]+u[1])/2]),M[0]=a[+(e[0]<f[0])],M[1]=u[+(e[1]<f[1])]):f=null),k&&P(e,r,0)&&(d(w),t=!0),_&&P(e,o,1)&&(g(w),t=!0),t&&(h(w),b({type:"brush",mode:E?"move":"resize"}))}function P(n,r,o){var i,s,p=ya(r),h=p[0],d=p[1],g=M[o],v=o?u:a,y=v[1]-v[0];if(E&&(h-=g,d-=y+g),i=(o?c:l)?Math.max(h,Math.min(d,n[o])):n[o],E?s=(i+=g)+y:(f&&(g=Math.max(h,Math.min(d,2*f[o]-i))),g<i?(s=i,i=g):s=g),v[0]!=i||v[1]!=s)return o?t=null:e=null,v[0]=i,v[1]=s,!0}function A(){N(),w.style("pointer-events","all").selectAll(".resize").style("display",p.empty()?"none":null),i.select("body").style("cursor",null),T.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),S(),b({type:"brushend"})}w.style("pointer-events","none").selectAll(".resize").style("display",null),i.select("body").style("cursor",m.style("cursor")),b({type:"brushstart"}),N()}return p.event=function(r){r.each(function(){var r=n.of(this,arguments),o={x:a,y:u,i:e,j:t},l=this.__chart__||o;this.__chart__=o,wu?i.select(this).transition().each("start.brush",function(){e=l.i,t=l.j,a=l.x,u=l.y,r({type:"brushstart"})}).tween("brush:brush",function(){var n=ri(a,o.x),i=ri(u,o.y);return e=t=null,function(e){a=o.x=n(e),u=o.y=i(e),r({type:"brush",mode:"resize"})}}).each("end.brush",function(){e=o.i,t=o.j,r({type:"brush",mode:"resize"}),r({type:"brushend"})}):(r({type:"brushstart"}),r({type:"brush",mode:"resize"}),r({type:"brushend"}))})},p.x=function(e){return arguments.length?(f=ju[!(r=e)<<1|!o],p):r},p.y=function(e){return arguments.length?(f=ju[!r<<1|!(o=e)],p):o},p.clamp=function(e){return arguments.length?(r&&o?(l=!!e[0],c=!!e[1]):r?l=!!e:o&&(c=!!e),p):r&&o?[l,c]:r?l:o?c:null},p.extent=function(n){var i,l,c,s,f;return arguments.length?(r&&(i=n[0],l=n[1],o&&(i=i[0],l=l[0]),e=[i,l],r.invert&&(i=r(i),l=r(l)),l<i&&(f=i,i=l,l=f),i==a[0]&&l==a[1]||(a=[i,l])),o&&(c=n[0],s=n[1],r&&(c=c[1],s=s[1]),t=[c,s],o.invert&&(c=o(c),s=o(s)),s<c&&(f=c,c=s,s=f),c==u[0]&&s==u[1]||(u=[c,s])),p):(r&&(e?(i=e[0],l=e[1]):(i=a[0],l=a[1],r.invert&&(i=r.invert(i),l=r.invert(l)),l<i&&(f=i,i=l,l=f))),o&&(t?(c=t[0],s=t[1]):(c=u[0],s=u[1],o.invert&&(c=o.invert(c),s=o.invert(s)),s<c&&(f=c,c=s,s=f))),r&&o?[[i,c],[l,s]]:r?[i,l]:o&&[c,s])},p.clear=function(){return p.empty()||(a=[0,0],u=[0,0],e=t=null),p},p.empty=function(){return!!r&&a[0]==a[1]||!!o&&u[0]==u[1]},i.rebind(p,n,"on")};var Au={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},ju=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Ru=zt.format=dn.timeFormat,Du=Ru.utc,Iu=Du("%Y-%m-%dT%H:%M:%S.%LZ");function Lu(e){return e.toISOString()}function zu(e,t,n){function r(t){return e(t)}function o(e,n){var r=(e[1]-e[0])/n,o=i.bisect(Fu,r);return o==Fu.length?[t.year,Sa(e.map(function(e){return e/31536e6}),n)[2]]:o?t[r/Fu[o-1]<Fu[o]/r?o-1:o]:[Wu,Sa(e,n)[2]]}return r.invert=function(t){return Uu(e.invert(t))},r.domain=function(t){return arguments.length?(e.domain(t),r):e.domain().map(Uu)},r.nice=function(e,t){var n=r.domain(),i=va(n),a=null==e?o(i,10):"number"==typeof e&&o(i,e);function u(n){return!isNaN(n)&&!e.range(n,Uu(+n+1),t).length}return a&&(e=a[0],t=a[1]),r.domain(ba(n,t>1?{floor:function(t){for(;u(t=e.floor(t));)t=Uu(t-1);return t},ceil:function(t){for(;u(t=e.ceil(t));)t=Uu(+t+1);return t}}:e))},r.ticks=function(e,t){var n=va(r.domain()),i=null==e?o(n,10):"number"==typeof e?o(n,e):!e.range&&[{range:e},t];return i&&(e=i[0],t=i[1]),e.range(n[0],Uu(+n[1]+1),t<1?1:t)},r.tickFormat=function(){return n},r.copy=function(){return zu(e.copy(),t,n)},_a(r,e)}function Uu(e){return new Date(e)}Ru.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Lu:Iu,Lu.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Lu.toString=Iu.toString,zt.second=qt(function(e){return new Ut(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(e.getTime()+1e3*Math.floor(t))},function(e){return e.getSeconds()}),zt.seconds=zt.second.range,zt.seconds.utc=zt.second.utc.range,zt.minute=qt(function(e){return new Ut(6e4*Math.floor(e/6e4))},function(e,t){e.setTime(e.getTime()+6e4*Math.floor(t))},function(e){return e.getMinutes()}),zt.minutes=zt.minute.range,zt.minutes.utc=zt.minute.utc.range,zt.hour=qt(function(e){var t=e.getTimezoneOffset()/60;return new Ut(36e5*(Math.floor(e/36e5-t)+t))},function(e,t){e.setTime(e.getTime()+36e5*Math.floor(t))},function(e){return e.getHours()}),zt.hours=zt.hour.range,zt.hours.utc=zt.hour.utc.range,zt.month=qt(function(e){return(e=zt.day(e)).setDate(1),e},function(e,t){e.setMonth(e.getMonth()+t)},function(e){return e.getMonth()}),zt.months=zt.month.range,zt.months.utc=zt.month.utc.range;var Fu=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Bu=[[zt.second,1],[zt.second,5],[zt.second,15],[zt.second,30],[zt.minute,1],[zt.minute,5],[zt.minute,15],[zt.minute,30],[zt.hour,1],[zt.hour,3],[zt.hour,6],[zt.hour,12],[zt.day,1],[zt.day,2],[zt.week,1],[zt.month,1],[zt.month,3],[zt.year,1]],qu=Ru.multi([[".%L",function(e){return e.getMilliseconds()}],[":%S",function(e){return e.getSeconds()}],["%I:%M",function(e){return e.getMinutes()}],["%I %p",function(e){return e.getHours()}],["%a %d",function(e){return e.getDay()&&1!=e.getDate()}],["%b %d",function(e){return 1!=e.getDate()}],["%B",function(e){return e.getMonth()}],["%Y",Jn]]),Wu={range:function(e,t,n){return i.range(Math.ceil(e/n)*n,+t,n).map(Uu)},floor:D,ceil:D};Bu.year=zt.year,zt.scale=function(){return zu(i.scale.linear(),Bu,qu)};var $u=Bu.map(function(e){return[e[0].utc,e[1]]}),Hu=Du.multi([[".%L",function(e){return e.getUTCMilliseconds()}],[":%S",function(e){return e.getUTCSeconds()}],["%I:%M",function(e){return e.getUTCMinutes()}],["%I %p",function(e){return e.getUTCHours()}],["%a %d",function(e){return e.getUTCDay()&&1!=e.getUTCDate()}],["%b %d",function(e){return 1!=e.getUTCDate()}],["%B",function(e){return e.getUTCMonth()}],["%Y",Jn]]);function Yu(e){return JSON.parse(e.responseText)}function Vu(e){var t=l.createRange();return t.selectNode(l.body),t.createContextualFragment(e.responseText)}$u.year=zt.year.utc,zt.scale.utc=function(){return zu(i.scale.linear(),$u,Hu)},i.text=xt(function(e){return e.responseText}),i.json=function(e,t){return kt(e,"application/json",Yu,t)},i.html=function(e,t){return kt(e,"text/html",Vu,t)},i.xml=xt(function(e){return e.responseXML}),this.d3=i,void 0===(o="function"==typeof(r=i)?r.call(t,n,t,e):r)||(e.exports=o)}()},function(e,t,n){var r=n(29),o=n(30),i=o;i.v1=r,i.v4=o,e.exports=i},function(e,t,n){var r,o,i=n(10),a=n(11),u=0,l=0;e.exports=function(e,t,n){var c=t&&n||0,s=t||[],f=(e=e||{}).node||r,p=void 0!==e.clockseq?e.clockseq:o;if(null==f||null==p){var h=i();null==f&&(f=r=[1|h[0],h[1],h[2],h[3],h[4],h[5]]),null==p&&(p=o=16383&(h[6]<<8|h[7]))}var d=void 0!==e.msecs?e.msecs:(new Date).getTime(),g=void 0!==e.nsecs?e.nsecs:l+1,v=d-u+(g-l)/1e4;if(v<0&&void 0===e.clockseq&&(p=p+1&16383),(v<0||d>u)&&void 0===e.nsecs&&(g=0),g>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");u=d,l=g,o=p;var y=(1e4*(268435455&(d+=122192928e5))+g)%4294967296;s[c++]=y>>>24&255,s[c++]=y>>>16&255,s[c++]=y>>>8&255,s[c++]=255&y;var m=d/4294967296*1e4&268435455;s[c++]=m>>>8&255,s[c++]=255&m,s[c++]=m>>>24&15|16,s[c++]=m>>>16&255,s[c++]=p>>>8|128,s[c++]=255&p;for(var b=0;b<6;++b)s[c+b]=f[b];return t||a(s)}},function(e,t,n){var r=n(10),o=n(11);e.exports=function(e,t,n){var i=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var a=(e=e||{}).random||(e.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t)for(var u=0;u<16;++u)t[i+u]=a[u];return t||o(a)}},function(e,t,n){(function(t){var n=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var n,r,o;try{n=Map}catch(e){n=function(){}}try{r=Set}catch(e){r=function(){}}try{o=Promise}catch(e){o=function(){}}function i(a,l,c,s,f){"object"==typeof l&&(c=l.depth,s=l.prototype,f=l.includeNonEnumerable,l=l.circular);var p=[],h=[],d=void 0!==t;return void 0===l&&(l=!0),void 0===c&&(c=1/0),function a(c,g){if(null===c)return null;if(0===g)return c;var v,y;if("object"!=typeof c)return c;if(e(c,n))v=new n;else if(e(c,r))v=new r;else if(e(c,o))v=new o(function(e,t){c.then(function(t){e(a(t,g-1))},function(e){t(a(e,g-1))})});else if(i.__isArray(c))v=[];else if(i.__isRegExp(c))v=new RegExp(c.source,u(c)),c.lastIndex&&(v.lastIndex=c.lastIndex);else if(i.__isDate(c))v=new Date(c.getTime());else{if(d&&t.isBuffer(c))return v=t.allocUnsafe?t.allocUnsafe(c.length):new t(c.length),c.copy(v),v;e(c,Error)?v=Object.create(c):void 0===s?(y=Object.getPrototypeOf(c),v=Object.create(y)):(v=Object.create(s),y=s)}if(l){var m=p.indexOf(c);if(-1!=m)return h[m];p.push(c),h.push(v)}for(var b in e(c,n)&&c.forEach(function(e,t){var n=a(t,g-1),r=a(e,g-1);v.set(n,r)}),e(c,r)&&c.forEach(function(e){var t=a(e,g-1);v.add(t)}),c){var w;y&&(w=Object.getOwnPropertyDescriptor(y,b)),w&&null==w.set||(v[b]=a(c[b],g-1))}if(Object.getOwnPropertySymbols){var x=Object.getOwnPropertySymbols(c);for(b=0;b<x.length;b++){var k=x[b];(!(E=Object.getOwnPropertyDescriptor(c,k))||E.enumerable||f)&&(v[k]=a(c[k],g-1),E.enumerable||Object.defineProperty(v,k,{enumerable:!1}))}}if(f){var _=Object.getOwnPropertyNames(c);for(b=0;b<_.length;b++){var E,S=_[b];(E=Object.getOwnPropertyDescriptor(c,S))&&E.enumerable||(v[S]=a(c[S],g-1),Object.defineProperty(v,S,{enumerable:!1}))}}return v}(a,c)}function a(e){return Object.prototype.toString.call(e)}function u(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return i.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},i.__objToStr=a,i.__isDate=function(e){return"object"==typeof e&&"[object Date]"===a(e)},i.__isArray=function(e){return"object"==typeof e&&"[object Array]"===a(e)},i.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===a(e)},i.__getRegExpFlags=u,i}();e.exports&&(e.exports=n)}).call(this,n(32).Buffer)},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var r=n(33),o=n(34),i=n(35);function a(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=l.prototype:(null===e&&(e=new l(t)),e.length=t),e}function l(e,t,n){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return f(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);l.TYPED_ARRAY_SUPPORT?(e=t).__proto__=l.prototype:e=p(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(t,n),o=(e=u(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(l.isBuffer(t)){var n=0|h(t.length);return 0===(e=u(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?u(e,0):p(e,t);if("Buffer"===t.type&&i(t.data))return p(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function s(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function f(e,t){if(s(t),e=u(e,t<0?0:0|h(t)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|h(t.length);e=u(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function h(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function d(e,t){if(l.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return F(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return B(e).length;default:if(r)return F(e).length;t=(""+t).toLowerCase(),r=!0}}function g(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:y(e,t,n,r,o);if("number"==typeof t)return t&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,r,o){var i,a=1,u=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,u/=2,l/=2,n/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){var s=-1;for(i=n;i<u;i++)if(c(e,i)===c(t,-1===s?0:i-s)){if(-1===s&&(s=i),i-s+1===l)return s*a}else-1!==s&&(i-=i-s),s=-1}else for(n+l>u&&(n=u-l),i=n;i>=0;i--){for(var f=!0,p=0;p<l;p++)if(c(e,i+p)!==c(t,p)){f=!1;break}if(f)return i}return-1}function m(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var a=0;a<r;++a){var u=parseInt(t.substr(2*a,2),16);if(isNaN(u))return a;e[n+a]=u}return a}function b(e,t,n,r){return q(F(t,e.length-n),e,n,r)}function w(e,t,n,r){return q(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function x(e,t,n,r){return w(e,t,n,r)}function k(e,t,n,r){return q(B(t),e,n,r)}function _(e,t,n,r){return q(function(e,t){for(var n,r,o,i=[],a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,o=n%256,i.push(o),i.push(r);return i}(t,e.length-n),e,n,r)}function E(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function S(e,t,n){n=Math.min(e.length,n);for(var r=[],o=t;o<n;){var i,a,u,l,c=e[o],s=null,f=c>239?4:c>223?3:c>191?2:1;if(o+f<=n)switch(f){case 1:c<128&&(s=c);break;case 2:128==(192&(i=e[o+1]))&&(l=(31&c)<<6|63&i)>127&&(s=l);break;case 3:i=e[o+1],a=e[o+2],128==(192&i)&&128==(192&a)&&(l=(15&c)<<12|(63&i)<<6|63&a)>2047&&(l<55296||l>57343)&&(s=l);break;case 4:i=e[o+1],a=e[o+2],u=e[o+3],128==(192&i)&&128==(192&a)&&128==(192&u)&&(l=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&u)>65535&&l<1114112&&(s=l)}null===s?(s=65533,f=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|1023&s),r.push(s),o+=f}return function(e){var t=e.length;if(t<=M)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=M));return n}(r)}t.Buffer=l,t.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},t.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=a(),l.poolSize=8192,l._augment=function(e){return e.__proto__=l.prototype,e},l.from=function(e,t,n){return c(null,e,t,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(e,t,n){return function(e,t,n,r){return s(t),t<=0?u(e,t):void 0!==n?"string"==typeof r?u(e,t).fill(n,r):u(e,t).fill(n):u(e,t)}(null,e,t,n)},l.allocUnsafe=function(e){return f(null,e)},l.allocUnsafeSlow=function(e){return f(null,e)},l.isBuffer=function(e){return!(null==e||!e._isBuffer)},l.compare=function(e,t){if(!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,o=0,i=Math.min(n,r);o<i;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=l.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var a=e[n];if(!l.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,o),o+=a.length}return r},l.byteLength=d,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},l.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},l.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},l.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?S(this,0,e):function(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return O(this,t,n);case"utf8":case"utf-8":return S(this,t,n);case"ascii":return T(this,t,n);case"latin1":case"binary":return C(this,t,n);case"base64":return E(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}.apply(this,arguments)},l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},l.prototype.compare=function(e,t,n,r,o){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0),u=Math.min(i,a),c=this.slice(r,o),s=e.slice(t,n),f=0;f<u;++f)if(c[f]!==s[f]){i=c[f],a=s[f];break}return i<a?-1:a<i?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return m(this,e,t,n);case"utf8":case"utf-8":return b(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return x(this,e,t,n);case"base64":return k(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var M=4096;function T(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function C(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function O(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=U(e[i]);return o}function N(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function P(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function A(e,t,n,r,o,i){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function j(e,t,n,r){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-n,2);o<i;++o)e[n+o]=(t&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function R(e,t,n,r){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-n,4);o<i;++o)e[n+o]=t>>>8*(r?o:3-o)&255}function D(e,t,n,r,o,i){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function I(e,t,n,r,i){return i||D(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,i){return i||D(e,0,n,8),o.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),l.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=l.prototype;else{var o=t-e;n=new l(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e]}return n},l.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},l.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},l.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},l.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var r=t,o=1,i=this[e+--r];r>0&&(o*=256);)i+=this[e+--r]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},l.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),o.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),o.read(this,e,!1,52,8)},l.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},l.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var o=n-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+n},l.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,255,0),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):R(this,e,t,!0),t+4},l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var i=0,a=1,u=0;for(this[t]=255&e;++i<n&&(a*=256);)e<0&&0===u&&0!==this[t+i-1]&&(u=1),this[t+i]=(e/a>>0)-u&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);A(this,e,t,n,o-1,-o)}var i=n-1,a=1,u=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===u&&0!==this[t+i+1]&&(u=1),this[t+i]=(e/a>>0)-u&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,127,-128),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):R(this,e,t,!0),t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},l.prototype.writeFloatLE=function(e,t,n){return I(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return I(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o,i=r-n;if(this===e&&n<t&&t<r)for(o=i-1;o>=0;--o)e[o+t]=this[o+n];else if(i<1e3||!l.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var a=l.isBuffer(e)?e:F(new l(e,r).toString()),u=a.length;for(i=0;i<n-t;++i)this[i+t]=a[i%u]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function F(e,t){var n;t=t||1/0;for(var r=e.length,o=null,i=[],a=0;a<r;++a){if((n=e.charCodeAt(a))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&i.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function B(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(z,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function q(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}}).call(this,n(9))},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){for(var t,n=c(e),r=n[0],a=n[1],u=new i(function(e,t,n){return 3*(t+n)/4-n}(0,r,a)),l=0,s=a>0?r-4:r,f=0;f<s;f+=4)t=o[e.charCodeAt(f)]<<18|o[e.charCodeAt(f+1)]<<12|o[e.charCodeAt(f+2)]<<6|o[e.charCodeAt(f+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===a&&(t=o[e.charCodeAt(f)]<<2|o[e.charCodeAt(f+1)]>>4,u[l++]=255&t);1===a&&(t=o[e.charCodeAt(f)]<<10|o[e.charCodeAt(f+1)]<<4|o[e.charCodeAt(f+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],a=0,u=n-o;a<u;a+=16383)i.push(s(e,a,a+16383>u?u:a+16383));1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return i.join("")};for(var r=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,l=a.length;u<l;++u)r[u]=a[u],o[a.charCodeAt(u)]=u;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function s(e,t,n){for(var o,i,a=[],u=t;u<n;u+=3)o=(e[u]<<16&16711680)+(e[u+1]<<8&65280)+(255&e[u+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,o){var i,a,u=8*o-r-1,l=(1<<u)-1,c=l>>1,s=-7,f=n?o-1:0,p=n?-1:1,h=e[t+f];for(f+=p,i=h&(1<<-s)-1,h>>=-s,s+=u;s>0;i=256*i+e[t+f],f+=p,s-=8);for(a=i&(1<<-s)-1,i>>=-s,s+=r;s>0;a=256*a+e[t+f],f+=p,s-=8);if(0===i)i=1-c;else{if(i===l)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,r),i-=c}return(h?-1:1)*a*Math.pow(2,i-r)},t.write=function(e,t,n,r,o,i){var a,u,l,c=8*i-o-1,s=(1<<c)-1,f=s>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:i-1,d=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(u=isNaN(t)?1:0,a=s):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+f>=1?p/l:p*Math.pow(2,1-f))*l>=2&&(a++,l/=2),a+f>=s?(u=0,a=s):a+f>=1?(u=(t*l-1)*Math.pow(2,o),a+=f):(u=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[n+h]=255&u,h+=d,u/=256,o-=8);for(a=a<<o|u,c+=o;c>0;e[n+h]=255&a,h+=d,a/=256,c-=8);e[n+h-d]|=128*g}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){var r=Array.prototype.slice,o=n(37),i=n(38),a=e.exports=function(e,t,n){return n||(n={}),e===t||(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=typeof e&&"object"!=typeof t?n.strict?e===t:e==t:function(e,t,n){var c,s;if(u(e)||u(t))return!1;if(e.prototype!==t.prototype)return!1;if(i(e))return!!i(t)&&(e=r.call(e),t=r.call(t),a(e,t,n));if(l(e)){if(!l(t))return!1;if(e.length!==t.length)return!1;for(c=0;c<e.length;c++)if(e[c]!==t[c])return!1;return!0}try{var f=o(e),p=o(t)}catch(e){return!1}if(f.length!=p.length)return!1;for(f.sort(),p.sort(),c=f.length-1;c>=0;c--)if(f[c]!=p[c])return!1;for(c=f.length-1;c>=0;c--)if(s=f[c],!a(e[s],t[s],n))return!1;return typeof e==typeof t}(e,t,n))};function u(e){return null==e}function l(e){return!(!e||"object"!=typeof e||"number"!=typeof e.length)&&("function"==typeof e.copy&&"function"==typeof e.slice&&!(e.length>0&&"number"!=typeof e[0]))}},function(e,t){function n(e){var t=[];for(var n in e)t.push(n);return t}(e.exports="function"==typeof Object.keys?Object.keys:n).shim=n},function(e,t){var n="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();function r(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function o(e){return e&&"object"==typeof e&&"number"==typeof e.length&&Object.prototype.hasOwnProperty.call(e,"callee")&&!Object.prototype.propertyIsEnumerable.call(e,"callee")||!1}(t=e.exports=n?r:o).supported=r,t.unsupported=o},function(e,t,n){"use strict";var r=i(n(40)),o=i(n(12));function i(e){return e&&e.__esModule?e:{default:e}}e.exports={TransitionGroup:o.default,CSSTransitionGroup:r.default}},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=c(n(0)),i=c(n(2)),a=c(n(12)),u=c(n(44)),l=n(14);function c(e){return e&&e.__esModule?e:{default:e}}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}l.nameShape.isRequired,i.default.bool,i.default.bool,i.default.bool,(0,l.transitionTimeout)("Appear"),(0,l.transitionTimeout)("Enter"),(0,l.transitionTimeout)("Leave");var f=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=Array(i),l=0;l<i;l++)a[l]=arguments[l];return n=r=s(this,e.call.apply(e,[this].concat(a))),r._wrapChild=function(e){return o.default.createElement(u.default,{name:r.props.transitionName,appear:r.props.transitionAppear,enter:r.props.transitionEnter,leave:r.props.transitionLeave,appearTimeout:r.props.transitionAppearTimeout,enterTimeout:r.props.transitionEnterTimeout,leaveTimeout:r.props.transitionLeaveTimeout},e)},s(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){return o.default.createElement(a.default,r({},this.props,{childFactory:this._wrapChild}))},t}(o.default.Component);f.displayName="CSSTransitionGroup",f.propTypes={},f.defaultProps={transitionAppear:!1,transitionEnter:!0,transitionLeave:!0},t.default=f,e.exports=t.default},function(e,t){e.exports=function(){for(var e=arguments.length,t=[],n=0;n<e;n++)t[n]=arguments[n];if(0!==(t=t.filter(function(e){return null!=e})).length)return 1===t.length?t[0]:t.reduce(function(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}})}},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";t.__esModule=!0,t.getChildMapping=function(e){if(!e)return e;var t={};return r.Children.map(e,function(e){return e}).forEach(function(e){t[e.key]=e}),t},t.mergeChildMappings=function(e,t){function n(n){return t.hasOwnProperty(n)?t[n]:e[n]}e=e||{},t=t||{};var r={},o=[];for(var i in e)t.hasOwnProperty(i)?o.length&&(r[i]=o,o=[]):o.push(i);var a=void 0,u={};for(var l in t){if(r.hasOwnProperty(l))for(a=0;a<r[l].length;a++){var c=r[l][a];u[r[l][a]]=n(c)}u[l]=n(l)}for(a=0;a<o.length;a++)u[o[a]]=n(o[a]);return u};var r=n(0)},function(e,t,n){"use strict";t.__esModule=!0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=p(n(45)),i=p(n(47)),a=p(n(48)),u=n(49),l=p(n(0)),c=p(n(2)),s=n(3),f=n(14);function p(e){return e&&e.__esModule?e:{default:e}}function h(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var d=[];u.transitionEnd&&d.push(u.transitionEnd),u.animationEnd&&d.push(u.animationEnd);c.default.node,f.nameShape.isRequired,c.default.bool,c.default.bool,c.default.bool,c.default.number,c.default.number,c.default.number;var g=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=h(this,e.call.apply(e,[this].concat(i))),r.componentWillAppear=function(e){r.props.appear?r.transition("appear",e,r.props.appearTimeout):e()},r.componentWillEnter=function(e){r.props.enter?r.transition("enter",e,r.props.enterTimeout):e()},r.componentWillLeave=function(e){r.props.leave?r.transition("leave",e,r.props.leaveTimeout):e()},h(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){this.classNameAndNodeQueue=[],this.transitionTimeouts=[]},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.timeout&&clearTimeout(this.timeout),this.transitionTimeouts.forEach(function(e){clearTimeout(e)}),this.classNameAndNodeQueue.length=0},t.prototype.transition=function(e,t,n){var r=(0,s.findDOMNode)(this);if(r){var a=this.props.name[e]||this.props.name+"-"+e,l=this.props.name[e+"Active"]||a+"-active",c=null,f=void 0;(0,o.default)(r,a),this.queueClassAndNode(l,r);var p=function(e){e&&e.target!==r||(clearTimeout(c),f&&f(),(0,i.default)(r,a),(0,i.default)(r,l),f&&f(),t&&t())};n?(c=setTimeout(p,n),this.transitionTimeouts.push(c)):u.transitionEnd&&(f=function(e,t){return d.length?d.forEach(function(n){return e.addEventListener(n,t,!1)}):setTimeout(t,0),function(){d.length&&d.forEach(function(n){return e.removeEventListener(n,t,!1)})}}(r,p))}else t&&t()},t.prototype.queueClassAndNode=function(e,t){var n=this;this.classNameAndNodeQueue.push({className:e,node:t}),this.rafHandle||(this.rafHandle=(0,a.default)(function(){return n.flushClassNameAndNodeQueue()}))},t.prototype.flushClassNameAndNodeQueue=function(){this.unmounted||this.classNameAndNodeQueue.forEach(function(e){e.node.scrollTop,(0,o.default)(e.node,e.className)}),this.classNameAndNodeQueue.length=0,this.rafHandle=null},t.prototype.render=function(){var e=r({},this.props);return delete e.name,delete e.appear,delete e.enter,delete e.leave,delete e.appearTimeout,delete e.enterTimeout,delete e.leaveTimeout,delete e.children,l.default.cloneElement(l.default.Children.only(this.props.children),e)},t}(l.default.Component);g.displayName="CSSTransitionGroupChild",g.propTypes={},t.default=g,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=function(e,t){e.classList?e.classList.add(t):(0,o.default)(e,t)||("string"==typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))};var o=r(n(46));e.exports=t.default},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")},e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}e.exports=function(e,t){e.classList?e.classList.remove(t):"string"==typeof e.className?e.className=r(e.className,t):e.setAttribute("class",r(e.className&&e.className.baseVal||"",t))}},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=void 0;var o,i=r(n(13)),a="clearTimeout",u=function(e){var t=(new Date).getTime(),n=Math.max(0,16-(t-c)),r=setTimeout(e,n);return c=t,r},l=function(e,t){return e+(e?t[0].toUpperCase()+t.substr(1):t)+"AnimationFrame"};i.default&&["","webkit","moz","o","ms"].some(function(e){var t=l(e,"request");if(t in window)return a=l(e,"cancel"),u=function(e){return window[t](e)}});var c=(new Date).getTime();(o=function(e){return u(e)}).cancel=function(e){window[a]&&"function"==typeof window[a]&&window[a](e)};var s=o;t.default=s,e.exports=t.default},function(e,t,n){"use strict";var r=n(5);t.__esModule=!0,t.default=t.animationEnd=t.animationDelay=t.animationTiming=t.animationDuration=t.animationName=t.transitionEnd=t.transitionDuration=t.transitionDelay=t.transitionTiming=t.transitionProperty=t.transform=void 0;var o,i,a,u,l,c,s,f,p,h,d,g=r(n(13)),v="transform";if(t.transform=v,t.animationEnd=a,t.transitionEnd=i,t.transitionDelay=s,t.transitionTiming=c,t.transitionDuration=l,t.transitionProperty=u,t.animationDelay=d,t.animationTiming=h,t.animationDuration=p,t.animationName=f,g.default){var y=function(){for(var e,t,n=document.createElement("div").style,r={O:function(e){return"o"+e.toLowerCase()},Moz:function(e){return e.toLowerCase()},Webkit:function(e){return"webkit"+e},ms:function(e){return"MS"+e}},o=Object.keys(r),i="",a=0;a<o.length;a++){var u=o[a];if(u+"TransitionProperty"in n){i="-"+u.toLowerCase(),e=r[u]("TransitionEnd"),t=r[u]("AnimationEnd");break}}!e&&"transitionProperty"in n&&(e="transitionend");!t&&"animationName"in n&&(t="animationend");return n=null,{animationEnd:t,transitionEnd:e,prefix:i}}();o=y.prefix,t.transitionEnd=i=y.transitionEnd,t.animationEnd=a=y.animationEnd,t.transform=v=o+"-"+v,t.transitionProperty=u=o+"-transition-property",t.transitionDuration=l=o+"-transition-duration",t.transitionDelay=s=o+"-transition-delay",t.transitionTiming=c=o+"-transition-timing-function",t.animationName=f=o+"-animation-name",t.animationDuration=p=o+"-animation-duration",t.animationTiming=h=o+"-animation-delay",t.animationDelay=d=o+"-animation-timing-function"}var m={transform:v,end:i,property:u,timing:c,delay:s,duration:l};t.default=m},function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,h=r?Symbol.for("react.forward_ref"):60112,d=r?Symbol.for("react.suspense"):60113,g=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case a:case l:case u:case d:return e;default:switch(e=e&&e.$$typeof){case s:case h:case c:return e;default:return t}}case v:case g:case i:return t}}}function m(e){return y(e)===p}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=h,t.Fragment=a,t.Lazy=v,t.Memo=g,t.Portal=i,t.Profiler=l,t.StrictMode=u,t.Suspense=d,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===p||e===l||e===u||e===d||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===g||e.$$typeof===c||e.$$typeof===s||e.$$typeof===h)},t.isAsyncMode=function(e){return m(e)||y(e)===f},t.isConcurrentMode=m,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===h},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===g},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===l},t.isStrictMode=function(e){return y(e)===u},t.isSuspense=function(e){return y(e)===d}},function(e,t,n){(function(e){function n(e,t){for(var n=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}var r=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,o=function(e){return r.exec(e).slice(1)};function i(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}t.resolve=function(){for(var t="",r=!1,o=arguments.length-1;o>=-1&&!r;o--){var a=o>=0?arguments[o]:e.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(t=a+"/"+t,r="/"===a.charAt(0))}return(r?"/":"")+(t=n(i(t.split("/"),function(e){return!!e}),!r).join("/"))||"."},t.normalize=function(e){var r=t.isAbsolute(e),o="/"===a(e,-1);return(e=n(i(e.split("/"),function(e){return!!e}),!r).join("/"))||r||(e="."),e&&o&&(e+="/"),(r?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(i(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},t.relative=function(e,n){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var o=r(e.split("/")),i=r(n.split("/")),a=Math.min(o.length,i.length),u=a,l=0;l<a;l++)if(o[l]!==i[l]){u=l;break}var c=[];for(l=u;l<o.length;l++)c.push("..");return(c=c.concat(i.slice(u))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){var t=o(e),n=t[0],r=t[1];return n||r?(r&&(r=r.substr(0,r.length-1)),n+r):"."},t.basename=function(e,t){var n=o(e)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){return o(e)[3]};var a="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}}).call(this,n(15))},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(3),a=n(16),u=n.n(a),l=n(1);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n-moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\nbox-shadow: 3px 4px 0px 0px #3dc21b;\nbackground-color:#44c767;\n-moz-border-radius:42px;\n-webkit-border-radius:42px;\nborder-radius:42px;\nborder:1px solid #18ab29;\ndisplay: flex;\njustify-content: center;\ncursor:pointer;\ncolor:#ffffff;\nfont-family: Trebuchet MS;\nfont-size: 11px;\nfont-weight:bold;\npadding: 3px 8px;\ntext-decoration:none;\ntext-shadow:2px 1px 3px #2f6627;\ntext-align: center;\nwidth: 20%;\nmargin: 8px;\n\n&:hover {\n  background-color: #3e8e41;\n}\n\n&:active {\n  background-color: #3e8e41;\n  box-shadow: 0 5px #666;\n  transform: translateY(4px);\n}\n"]);return d=function(){return e},e}var g=l.a.div(d()),v={shape:"ellipse",shapeProps:{rx:20,ry:20}},y=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=f(t).call(this,e))||"object"!==c(o)&&"function"!=typeof o?h(r):o).mouseOver=n.mouseOver.bind(h(h(n))),n.state={shape:v,orientation:"vertical"},n.changeOrientation=n.changeOrientation.bind(h(h(n))),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(t,o.a.Component),n=t,(r=[{key:"mouseOver",value:function(e){var t={name:e.name,time:e.renderTime,individualTime:e.individualTime};this.props.grabNodeStats(t)}},{key:"changeOrientation",value:function(){"vertical"===this.state.orientation?this.setState({orientation:"horizontal"}):this.setState({orientation:"vertical"})}},{key:"render",value:function(){return o.a.createElement("div",{id:"treeWrapper",style:{width:"55%",height:"50em",float:"right",border:"0.5px solid #ababab",margin:"10px",boxShadow:"2px 2px 2px 2px"}},o.a.createElement(g,{id:"button2",clicked:this.changeOrientation,counter:"Orientation"},"Change Orientation"),o.a.createElement(u.a,{translate:{x:300,y:100},orientation:this.state.orientation,onMouseOver:this.mouseOver,nodeSvgShape:this.state.shape,separation:{siblings:.6,nonSiblings:.6},data:this.props.treeData}))}}])&&s(n.prototype,r),i&&s(n,i),t}();function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(['\n  color: #595959;\n  text-shadow: 1px 1px 2px #a3a3a3; \n  font-size: 8px;\n  font-family: "Trebuchet MS";\n  margin: 1em;\n  padding: 0.25em 1em;\n  width: 35%;\n  height: auto;\n  text-align: left;\n  float: left;\n']);return _=function(){return e},e}var E=l.a.div(_()),S=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),w(this,x(t).call(this,e))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement(E,null,o.a.createElement("h1",null,"Component Name: ",this.props.stats.name),o.a.createElement("h1",null,"Total Render Time: ",this.props.stats.totalTime),o.a.createElement("h1",null,"Individual Render Time: ",this.props.stats.individualTime))}}])&&b(n.prototype,r),i&&b(n,i),t}();function M(e){return(M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t){return!t||"object"!==M(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function N(e,t){return(N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  -moz-box-shadow: 3px 4px 0px 0px #3dc21b;\n\t-webkit-box-shadow: 3px 4px 0px 0px #3dc21b;\n\tbox-shadow: 3px 4px 0px 0px #3dc21b;\n\tbackground-color:#44c767;\n\t-moz-border-radius:42px;\n\t-webkit-border-radius:42px;\n\tborder-radius:42px;\n\tborder:1px solid #18ab29;\n  display: flex;\n  justify-content: center;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family: Trebuchet MS;\n\tfont-size: 24px;\n\tfont-weight:bold;\n  padding: 15px 25px;\n\ttext-decoration:none;\n  text-shadow:2px 1px 3px #2f6627;\n  text-align: center;\n  width: auto;\n\n  &:hover {\n    background-color: #3e8e41;\n  }\n\n  &:active {\n    background-color: #3e8e41;\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n\n  "]);return P=function(){return e},e}var A=l.a.button(P()),j=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),C(this,O(t).call(this,e))}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&N(e,t)}(t,r["Component"]),n=t,(i=[{key:"render",value:function(){return o.a.createElement(A,{id:this.props.id,onClick:this.props.clicked},this.props.counter)}}])&&T(n.prototype,i),a&&T(n,a),t}(),R=(n(51),n(19)),D=n.n(R);function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function z(e){return(z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function U(e,t){return(U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function B(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  width: 100%;\n  text-align: center;\n"]);return B=function(){return e},e}var q=l.a.div(B()),W=function(e){function t(){var e,n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(r=z(t).call(this))||"object"!==I(r)&&"function"!=typeof r?F(n):r).state={button1counter:0,button2counter:0,startButton:"Start Quantum",nodeinfo:5,startQuantum:!1,treeData:{name:"placeholder"},green:.005,lightGreen:.01,yellow:.05,orange:.1,red:.2},e.grabNodeStats=e.grabNodeStats.bind(F(F(e))),e.clicked=e.clicked.bind(F(F(e))),e.startQuantum=e.startQuantum.bind(F(F(e))),chrome.devtools.panels.create("React Quantum",null,"devtools.html"),e}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(t,r["Component"]),n=t,(i=[{key:"clicked",value:function(e){var t="".concat(e.target.id,"counter"),n=this.state[t]+1,r={};r[t]=n,this.setState(r)}},{key:"grabNodeStats",value:function(e){this.setState({nodeinfo:{totalTime:e.time,individualTime:e.individualTime,name:e.name}}),console.log(e)}},{key:"componentDidMount",value:function(){var e,t=this,n=chrome.runtime.connect(null,{name:"devTools"}),r=chrome.devtools.inspectedWindow.tabId;console.log(n,r),(e={message:"initialize"}).tabId=r,n.postMessage(e),n.onMessage.addListener(function(e){console.log("chrome.runtime.onMessage in devTools message:",e);var n=JSON.parse(e.message);n=n[0].children,console.log("before addIndividualTime",n),function e(t){for(var n=0;n<t.length;n++)if(t[n].memoizedProps&&(t[n].memoizedProps=JSON.parse(t[n].memoizedProps)),0===t[n].renderTime)t[n].individualTime;else{for(var r=0,o=0;o<t[n].children.length;o++)if(0===t[n].children[o].renderTime){if(t[n].children[o].children[0])for(var i=0;i<t[n].children[o].children.length;i++)r+=t[n].children[o].children[i]}else r+=t[n].children[o].renderTime;t[n].individualTime=t[n].renderTime-r}for(var a=0;a<t.length;a++)t[a].children.length>0&&e(t[a].children)}(n),console.log("after individualTime =============",n),function(e,t,n,r,o){for(var i=e[0].renderTime,a=[e[0]];a.length>0;){var u=a[0].individualTime/i;a[0].nodeSvgShape=u<t?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#80b74c"}}:u<n?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#a1c94f"}}:u<r?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e6cc38"}}:u<o?{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#f69d27"}}:{shape:"ellipse",shapeProps:{rx:20,ry:20,fill:"#e74e2c"}};for(var l=0;l<a[0].children.length;l++)a.push(a[0].children[l]);a.shift()}}(n,t.state.green,t.state.lightGreen,t.state.yellow,t.state.orange),console.log("after addColor =============",n),t.setState({treeData:n}),console.log("after setState",t.state)})}},{key:"startQuantum",value:function(e){var t=chrome.devtools.inspectedWindow.tabId;console.log("clicked",t),chrome.runtime.sendMessage({name:"startQuantum",target:"content",tabId:t}),this.setState({startQuantum:!0})}},{key:"startQuantum",value:function(e){var t=chrome.devtools.inspectedWindow.tabId;console.log("clicked",t),chrome.runtime.sendMessage({name:"startQuantum",target:"content",tabId:t}),this.setState({startQuantum:!0})}},{key:"startQuantum",value:function(e){var t=chrome.devtools.inspectedWindow.tabId;console.log("clicked",t),chrome.runtime.sendMessage({name:"startQuantum",target:"content",tabId:t}),this.setState({startQuantum:!0})}},{key:"componentDidUpdate",value:function(){}},{key:"render",value:function(){return console.log("render ------------"),o.a.createElement(q,null,o.a.createElement("div",null,o.a.createElement("img",{src:D.a,href:"https://github.com/ReactQuantum/ReactQuantum"}),!1===this.state.startQuantum?o.a.createElement("div",{style:{width:"100%",alignContent:"center",display:"flex",justifyContent:"center"}},o.a.createElement(j,{id:"startQuantum",clicked:this.startQuantum,counter:this.state.startButton})):o.a.createElement("div",{className:"content"},o.a.createElement("div",null,o.a.createElement(S,{stats:this.state.nodeinfo})),o.a.createElement(y,{orientation:this.state.orientation,treeData:this.state.treeData,grabNodeStats:this.grabNodeStats}))))}}])&&L(n.prototype,i),a&&L(n,a),t}();Object(i.render)(o.a.createElement(W,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,